<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:59:42.936" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:43.510" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:43.518" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:44.633" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:43.509" endtime="20201115 22:59:44.634"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.636" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:44.635" endtime="20201115 22:59:44.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:43.507" endtime="20201115 22:59:44.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:44.639" endtime="20201115 22:59:44.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.638" endtime="20201115 22:59:44.824"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.837" endtime="20201115 22:59:44.852"></status>
</kw>
<msg timestamp="20201115 22:59:44.853" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.835" endtime="20201115 22:59:44.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.855" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.854" endtime="20201115 22:59:44.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.859" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:44.856" endtime="20201115 22:59:44.859"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.833" endtime="20201115 22:59:44.860"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.831" endtime="20201115 22:59:44.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.830" endtime="20201115 22:59:44.861"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:44.865" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:44.864" endtime="20201115 22:59:44.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.862" endtime="20201115 22:59:44.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.829" endtime="20201115 22:59:44.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.828" endtime="20201115 22:59:44.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.866" endtime="20201115 22:59:44.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.826" endtime="20201115 22:59:44.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.869" endtime="20201115 22:59:44.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.825" endtime="20201115 22:59:44.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:43.505" endtime="20201115 22:59:44.872"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:44.878" endtime="20201115 22:59:44.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.877" endtime="20201115 22:59:44.898"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.912" endtime="20201115 22:59:44.927"></status>
</kw>
<msg timestamp="20201115 22:59:44.927" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.911" endtime="20201115 22:59:44.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.930" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.928" endtime="20201115 22:59:44.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.933" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:44.931" endtime="20201115 22:59:44.933"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.908" endtime="20201115 22:59:44.934"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.905" endtime="20201115 22:59:44.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.904" endtime="20201115 22:59:44.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:44.938" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:44.937" endtime="20201115 22:59:44.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.935" endtime="20201115 22:59:44.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.903" endtime="20201115 22:59:44.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.902" endtime="20201115 22:59:44.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.940" endtime="20201115 22:59:44.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.901" endtime="20201115 22:59:44.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.899" endtime="20201115 22:59:44.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.875" endtime="20201115 22:59:44.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.950" endtime="20201115 22:59:44.960"></status>
</kw>
<msg timestamp="20201115 22:59:44.960" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.948" endtime="20201115 22:59:44.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.963" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.962" endtime="20201115 22:59:44.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.964" endtime="20201115 22:59:44.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.946" endtime="20201115 22:59:44.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.944" endtime="20201115 22:59:44.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.971" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:59:44.970" endtime="20201115 22:59:44.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.973" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:59:44.972" endtime="20201115 22:59:44.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.967" endtime="20201115 22:59:44.974"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:44.872" endtime="20201115 22:59:44.975" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:43.058" endtime="20201115 22:59:44.977"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.029" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:45.037" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:46.253" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:45.028" endtime="20201115 22:59:46.254"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.256" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:46.255" endtime="20201115 22:59:46.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.027" endtime="20201115 22:59:46.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:46.259" endtime="20201115 22:59:46.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.258" endtime="20201115 22:59:46.481"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.493" endtime="20201115 22:59:46.508"></status>
</kw>
<msg timestamp="20201115 22:59:46.509" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.492" endtime="20201115 22:59:46.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.511" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.510" endtime="20201115 22:59:46.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.514" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:46.512" endtime="20201115 22:59:46.515"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:46.489" endtime="20201115 22:59:46.515"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:46.487" endtime="20201115 22:59:46.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.486" endtime="20201115 22:59:46.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:46.520" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:46.519" endtime="20201115 22:59:46.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.517" endtime="20201115 22:59:46.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.485" endtime="20201115 22:59:46.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.484" endtime="20201115 22:59:46.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.522" endtime="20201115 22:59:46.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.483" endtime="20201115 22:59:46.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.524" endtime="20201115 22:59:46.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.482" endtime="20201115 22:59:46.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.025" endtime="20201115 22:59:46.527"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:46.533" endtime="20201115 22:59:46.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.531" endtime="20201115 22:59:46.554"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.567" endtime="20201115 22:59:46.580"></status>
</kw>
<msg timestamp="20201115 22:59:46.581" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.565" endtime="20201115 22:59:46.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.584" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.582" endtime="20201115 22:59:46.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.587" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:46.585" endtime="20201115 22:59:46.587"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:46.563" endtime="20201115 22:59:46.588"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:46.560" endtime="20201115 22:59:46.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.559" endtime="20201115 22:59:46.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:46.592" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:46.592" endtime="20201115 22:59:46.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.590" endtime="20201115 22:59:46.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.558" endtime="20201115 22:59:46.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.558" endtime="20201115 22:59:46.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.594" endtime="20201115 22:59:46.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.556" endtime="20201115 22:59:46.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.554" endtime="20201115 22:59:46.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.530" endtime="20201115 22:59:46.597"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.600" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.610" endtime="20201115 22:59:46.624"></status>
</kw>
<msg timestamp="20201115 22:59:46.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.607" endtime="20201115 22:59:46.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.626" endtime="20201115 22:59:46.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.628" endtime="20201115 22:59:46.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.605" endtime="20201115 22:59:46.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.603" endtime="20201115 22:59:46.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.637" endtime="20201115 22:59:46.939"></status>
</kw>
<msg timestamp="20201115 22:59:46.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068590792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068605153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.636" endtime="20201115 22:59:46.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068590792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068605153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.944" endtime="20201115 22:59:46.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.952" endtime="20201115 22:59:46.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.633" endtime="20201115 22:59:46.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.632" endtime="20201115 22:59:46.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:46.959" level="INFO">${RESULT} = [{'time': 0.068605153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4361000000004398e-05, 'source_diff': 1.4361000000004398e-05}, {'time': 0.068624972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:46.956" endtime="20201115 22:59:46.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:46.973" level="INFO">${ACCURACY} = {'time': [0.068605153, 0.068624972, 0.068643972, 0.068663014, 0.068681972, 0.068700972, 0.068719986, 0.068738972, 0.068757986, 0.068776986, 0.068796042, 0.068814986, 0.068833986, 0.068853056, 0.068871...</msg>
<status status="PASS" starttime="20201115 22:59:46.960" endtime="20201115 22:59:46.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.978" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 22:59:46.977" endtime="20201115 22:59:46.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.980" level="INFO">VALUE: [1.4361000000004398e-05, 1.4180000000002524e-05, 1.406899999999156e-05, 1.408299999999807e-05, 1.40969999999907e-05, 1.4153000000002858e-05, 1.3749999999992935e-05, 1.384699999999739e-05, 1.4277999999992574e-05, 1.3708000000001164e-05, 1.3973000000000457e-05, 1.388899999998916e-05, 1.3749999999992935e-05, 1.4222999999993768e-05, 1.4041999999991894e-05, 1.3763999999999443e-05, 1.3778000000005952e-05, 1.4249999999993435e-05, 1.415299999998898e-05, 1.3750000000006812e-05, 1.4014000000006632e-05, 1.3958000000008353e-05, 1.4305999999991714e-05, 1.3874999999996529e-05, 1.3930999999994809e-05, 1.4194000000009033e-05, 1.4263999999999943e-05, 1.4042000000005772e-05, 1.4055999999998403e-05, 1.3721999999993795e-05, 1.3944000000001844e-05, 1.4208000000001664e-05, 1.3736000000000304e-05, 1.4278000000006452e-05, 1.3777999999992074e-05, 1.3833000000004758e-05, 1.3749999999992935e-05, 1.4097000000004578e-05, 1.3749999999992935e-05, 1.4167000000009367e-05, 1.3777999999992074e-05, 1.4138999999996349e-05, 1.4111000000011087e-05, 1.3972000000000984e-05, 1.3709000000000637e-05, 1.3791999999998583e-05, 1.3917000000002178e-05, 1.412499999998984e-05, 1.4070000000004912e-05, 1.4042000000005772e-05]</msg>
<status status="PASS" starttime="20201115 22:59:46.979" endtime="20201115 22:59:46.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.974" endtime="20201115 22:59:46.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.983" endtime="20201115 22:59:46.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:46.987" endtime="20201115 22:59:47.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.985" endtime="20201115 22:59:47.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.982" endtime="20201115 22:59:47.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.601" endtime="20201115 22:59:47.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.599" endtime="20201115 22:59:47.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.598" endtime="20201115 22:59:47.008"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.011" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.019" endtime="20201115 22:59:47.034"></status>
</kw>
<msg timestamp="20201115 22:59:47.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.017" endtime="20201115 22:59:47.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.035" endtime="20201115 22:59:47.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.038" endtime="20201115 22:59:47.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.015" endtime="20201115 22:59:47.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.013" endtime="20201115 22:59:47.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.047" endtime="20201115 22:59:47.332"></status>
</kw>
<msg timestamp="20201115 22:59:47.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025243083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025257847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.045" endtime="20201115 22:59:47.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025243083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025257847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.337" endtime="20201115 22:59:47.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.345" endtime="20201115 22:59:47.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.043" endtime="20201115 22:59:47.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.041" endtime="20201115 22:59:47.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:47.352" level="INFO">${RESULT} = [{'time': 0.025257847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.025277681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:47.349" endtime="20201115 22:59:47.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:47.366" level="INFO">${ACCURACY} = {'time': [0.025257847, 0.025277681, 0.025296681, 0.025315681, 0.025334681, 0.025353694, 0.025372708, 0.025391708, 0.025410694, 0.025429708, 0.025448708, 0.025467694, 0.025486708, 0.025505694, 0.025524...</msg>
<status status="PASS" starttime="20201115 22:59:47.353" endtime="20201115 22:59:47.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.370" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 22:59:47.369" endtime="20201115 22:59:47.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.373" level="INFO">VALUE: [1.4764000000000443e-05, 1.4152999999999388e-05, 1.3778000000002483e-05, 1.4250000000000373e-05, 1.3792000000002053e-05, 1.4151999999999915e-05, 1.429099999999961e-05, 1.404099999999936e-05, 1.4222000000001234e-05, 1.4125000000000248e-05, 1.3749999999999873e-05, 1.4179999999999054e-05, 1.3986000000000554e-05, 1.381899999999825e-05, 1.379099999999911e-05, 1.383299999999782e-05, 1.4208000000001664e-05, 1.3861000000000429e-05, 1.408299999999807e-05, 1.4193999999998624e-05, 1.3901999999999665e-05, 1.3847000000000859e-05, 1.4277999999999513e-05, 1.3805000000002149e-05, 1.4250000000000373e-05, 1.3624999999999748e-05, 1.3777999999999013e-05, 1.4305999999998653e-05, 1.4249999999996904e-05, 1.3722000000000734e-05, 1.4236000000000804e-05, 1.4097000000001109e-05, 1.3736000000000304e-05, 1.3972000000000984e-05, 1.4250000000000373e-05, 1.3666999999998458e-05, 1.4208000000001664e-05, 1.3888999999999568e-05, 1.377699999999954e-05, 1.3735999999996834e-05, 1.3930000000002274e-05, 1.4041999999998833e-05, 1.4236000000000804e-05, 1.3902999999999138e-05, 1.3902999999999138e-05, 1.3847000000000859e-05, 1.4277999999999513e-05, 1.3708000000001164e-05, 1.4236000000000804e-05, 1.3736000000000304e-05]</msg>
<status status="PASS" starttime="20201115 22:59:47.371" endtime="20201115 22:59:47.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.367" endtime="20201115 22:59:47.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.376" endtime="20201115 22:59:47.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.380" endtime="20201115 22:59:47.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.378" endtime="20201115 22:59:47.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.374" endtime="20201115 22:59:47.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.011" endtime="20201115 22:59:47.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.009" endtime="20201115 22:59:47.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.008" endtime="20201115 22:59:47.401"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.403" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.411" endtime="20201115 22:59:47.427"></status>
</kw>
<msg timestamp="20201115 22:59:47.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.410" endtime="20201115 22:59:47.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.428" endtime="20201115 22:59:47.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.431" endtime="20201115 22:59:47.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.407" endtime="20201115 22:59:47.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.405" endtime="20201115 22:59:47.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.440" endtime="20201115 22:59:47.726"></status>
</kw>
<msg timestamp="20201115 22:59:47.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024975694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024990319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.438" endtime="20201115 22:59:47.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024975694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024990319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.730" endtime="20201115 22:59:47.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.739" endtime="20201115 22:59:47.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.436" endtime="20201115 22:59:47.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.434" endtime="20201115 22:59:47.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:47.745" level="INFO">${RESULT} = [{'time': 0.024990319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4625000000000749e-05, 'source_diff': 1.4625000000000749e-05}, {'time': 0.025010139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:47.742" endtime="20201115 22:59:47.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:47.760" level="INFO">${ACCURACY} = {'time': [0.024990319, 0.025010139, 0.025029139, 0.025048139, 0.025067139, 0.025086139, 0.025105125, 0.025124208, 0.025143167, 0.025162181, 0.025181222, 0.025200153, 0.025219139, 0.025238153, 0.025257...</msg>
<status status="PASS" starttime="20201115 22:59:47.746" endtime="20201115 22:59:47.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.764" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 22:59:47.763" endtime="20201115 22:59:47.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.767" level="INFO">VALUE: [1.4625000000000749e-05, 1.4056000000001873e-05, 1.4069999999997973e-05, 1.4027999999999263e-05, 1.3944999999997848e-05, 1.3792000000002053e-05, 1.40689999999985e-05, 1.3915999999999235e-05, 1.4263999999999943e-05, 1.3598000000000082e-05, 1.4236000000000804e-05, 1.4069999999997973e-05, 1.3778000000002483e-05, 1.4027999999999263e-05, 1.4209000000001137e-05, 1.3834000000000762e-05, 1.4167000000002428e-05, 1.3874999999999998e-05, 1.4195000000001567e-05, 1.3874999999999998e-05, 1.3820000000001192e-05, 1.3972000000000984e-05, 1.4027999999999263e-05, 1.3903000000002608e-05, 1.3791999999998583e-05, 1.3749999999999873e-05, 1.3959000000000887e-05, 1.3722000000000734e-05, 1.4069999999997973e-05, 1.3972000000000984e-05, 1.4111000000000679e-05, 1.3749999999999873e-05, 1.3958999999997418e-05, 1.4277999999999513e-05, 1.4291999999999083e-05, 1.4111000000000679e-05, 1.3958999999997418e-05, 1.3681000000001498e-05, 1.3806000000001623e-05, 1.409699999999764e-05, 1.3972000000000984e-05, 1.3902999999999138e-05, 1.402699999999979e-05, 1.3791999999998583e-05, 1.40689999999985e-05, 1.4152999999999388e-05, 1.4125000000000248e-05, 1.426300000000047e-05, 1.3736000000000304e-05, 1.402699999999979e-05]</msg>
<status status="PASS" starttime="20201115 22:59:47.765" endtime="20201115 22:59:47.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.761" endtime="20201115 22:59:47.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.770" endtime="20201115 22:59:47.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.773" endtime="20201115 22:59:47.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.772" endtime="20201115 22:59:47.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.768" endtime="20201115 22:59:47.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.404" endtime="20201115 22:59:47.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.402" endtime="20201115 22:59:47.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.401" endtime="20201115 22:59:47.795"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.797" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.805" endtime="20201115 22:59:47.820"></status>
</kw>
<msg timestamp="20201115 22:59:47.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.804" endtime="20201115 22:59:47.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.822" endtime="20201115 22:59:47.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.825" endtime="20201115 22:59:47.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.801" endtime="20201115 22:59:47.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.799" endtime="20201115 22:59:47.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.834" endtime="20201115 22:59:48.119"></status>
</kw>
<msg timestamp="20201115 22:59:48.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024356181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024370819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.832" endtime="20201115 22:59:48.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024356181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024370819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.123" endtime="20201115 22:59:48.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.131" endtime="20201115 22:59:48.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.830" endtime="20201115 22:59:48.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.828" endtime="20201115 22:59:48.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:48.138" level="INFO">${RESULT} = [{'time': 0.024370819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4637999999997375e-05, 'source_diff': 1.4637999999997375e-05}, {'time': 0.024390639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:48.135" endtime="20201115 22:59:48.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:48.152" level="INFO">${ACCURACY} = {'time': [0.024370819, 0.024390639, 0.024409639, 0.024428653, 0.024447653, 0.024466681, 0.024485653, 0.024504653, 0.024523653, 0.024542667, 0.024561653, 0.024580653, 0.024599653, 0.024618667, 0.024637...</msg>
<status status="PASS" starttime="20201115 22:59:48.139" endtime="20201115 22:59:48.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.157" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 22:59:48.156" endtime="20201115 22:59:48.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.160" level="INFO">VALUE: [1.4637999999997375e-05, 1.4319999999998223e-05, 1.4152999999999388e-05, 1.3722000000000734e-05, 1.4055999999998403e-05, 1.3861999999999902e-05, 1.3736000000000304e-05, 1.4000000000000123e-05, 1.3709000000000637e-05, 1.4166999999998958e-05, 1.3972000000000984e-05, 1.4209000000001137e-05, 1.3680999999998028e-05, 1.3931000000001748e-05, 1.4208999999997668e-05, 1.3874999999999998e-05, 1.4250000000000373e-05, 1.3834000000000762e-05, 1.3723000000000207e-05, 1.3944999999997848e-05, 1.4181000000001998e-05, 1.379099999999911e-05, 1.3889000000003038e-05, 1.3777999999999013e-05, 1.3861000000000429e-05, 1.4000000000000123e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4041999999998833e-05, 1.4166999999998958e-05, 1.4097000000001109e-05, 1.3694999999997598e-05, 1.3931000000001748e-05, 1.427700000000004e-05, 1.4193999999998624e-05, 1.4195000000001567e-05, 1.380499999999868e-05, 1.3791000000002579e-05, 1.3958000000001414e-05, 1.4125000000000248e-05, 1.3847000000000859e-05, 1.3986000000000554e-05, 1.380499999999868e-05, 1.4194000000002094e-05, 1.402699999999979e-05, 1.377699999999954e-05, 1.4207999999998194e-05, 1.381899999999825e-05, 1.3943999999998374e-05, 1.427700000000004e-05]</msg>
<status status="PASS" starttime="20201115 22:59:48.158" endtime="20201115 22:59:48.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.153" endtime="20201115 22:59:48.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.163" endtime="20201115 22:59:48.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:48.166" endtime="20201115 22:59:48.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.165" endtime="20201115 22:59:48.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.161" endtime="20201115 22:59:48.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.798" endtime="20201115 22:59:48.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.796" endtime="20201115 22:59:48.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.795" endtime="20201115 22:59:48.188"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.190" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.199" endtime="20201115 22:59:48.213"></status>
</kw>
<msg timestamp="20201115 22:59:48.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.197" endtime="20201115 22:59:48.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.215" endtime="20201115 22:59:48.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.217" endtime="20201115 22:59:48.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.195" endtime="20201115 22:59:48.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.192" endtime="20201115 22:59:48.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.227" endtime="20201115 22:59:48.513"></status>
</kw>
<msg timestamp="20201115 22:59:48.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024539347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024554167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.226" endtime="20201115 22:59:48.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024539347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024554167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.518" endtime="20201115 22:59:48.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.526" endtime="20201115 22:59:48.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.223" endtime="20201115 22:59:48.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.222" endtime="20201115 22:59:48.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:48.533" level="INFO">${RESULT} = [{'time': 0.024554167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4819999999998723e-05, 'source_diff': 1.4819999999998723e-05}, {'time': 0.024574028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:48.529" endtime="20201115 22:59:48.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:48.546" level="INFO">${ACCURACY} = {'time': [0.024554167, 0.024574028, 0.024593, 0.024612, 0.024631014, 0.024650014, 0.024669014, 0.024688014, 0.024707056, 0.024726014, 0.024745014, 0.024764014, 0.024783014, 0.024802014, 0.024821028, 0...</msg>
<status status="PASS" starttime="20201115 22:59:48.534" endtime="20201115 22:59:48.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.551" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 22:59:48.549" endtime="20201115 22:59:48.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.553" level="INFO">VALUE: [1.4819999999998723e-05, 1.4486000000001054e-05, 1.4041999999998833e-05, 1.3902999999999138e-05, 1.4027999999999263e-05, 1.3749999999999873e-05, 1.3916999999998708e-05, 1.4181000000001998e-05, 1.4320000000001692e-05, 1.3778000000002483e-05, 1.4221999999997764e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3833000000001289e-05, 1.4110999999997209e-05, 1.4056000000001873e-05, 1.4110999999997209e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.3791999999998583e-05, 1.4195000000001567e-05, 1.3874999999999998e-05, 1.4097000000001109e-05, 1.4069999999997973e-05, 1.4138999999999818e-05, 1.4221999999997764e-05, 1.3806000000001623e-05, 1.3986000000000554e-05, 1.408299999999807e-05, 1.3847999999996863e-05, 1.4194999999998098e-05, 1.3820000000001192e-05, 1.3959000000000887e-05, 1.4070000000001442e-05, 1.3916999999998708e-05, 1.3805000000002149e-05, 1.3736999999999777e-05, 1.4125000000000248e-05, 1.3957999999997944e-05, 1.4223000000000707e-05, 1.4264000000003413e-05, 1.4152999999999388e-05, 1.40689999999985e-05, 1.3792000000002053e-05, 1.409699999999764e-05, 1.379099999999911e-05, 1.3888999999999568e-05, 1.4237000000000277e-05, 1.3972000000000984e-05, 1.3929999999998804e-05]</msg>
<status status="PASS" starttime="20201115 22:59:48.552" endtime="20201115 22:59:48.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.547" endtime="20201115 22:59:48.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.556" endtime="20201115 22:59:48.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:48.560" endtime="20201115 22:59:48.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.558" endtime="20201115 22:59:48.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.554" endtime="20201115 22:59:48.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.191" endtime="20201115 22:59:48.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.189" endtime="20201115 22:59:48.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.188" endtime="20201115 22:59:48.581"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.584" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.592" endtime="20201115 22:59:48.607"></status>
</kw>
<msg timestamp="20201115 22:59:48.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.590" endtime="20201115 22:59:48.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.609" endtime="20201115 22:59:48.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.611" endtime="20201115 22:59:48.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.588" endtime="20201115 22:59:48.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.586" endtime="20201115 22:59:48.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.620" endtime="20201115 22:59:48.907"></status>
</kw>
<msg timestamp="20201115 22:59:48.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024231236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024245792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.619" endtime="20201115 22:59:48.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024231236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024245792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.911" endtime="20201115 22:59:48.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.919" endtime="20201115 22:59:48.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.616" endtime="20201115 22:59:48.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.615" endtime="20201115 22:59:48.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:48.926" level="INFO">${RESULT} = [{'time': 0.024245792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4555999999998903e-05, 'source_diff': 1.4555999999998903e-05}, {'time': 0.024264625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:48.923" endtime="20201115 22:59:48.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:48.939" level="INFO">${ACCURACY} = {'time': [0.024245792, 0.024264625, 0.024283625, 0.024302639, 0.024321653, 0.024340639, 0.024359639, 0.024378639, 0.024397653, 0.024416667, 0.024435653, 0.024454639, 0.024473681, 0.024492653, 0.024511...</msg>
<status status="PASS" starttime="20201115 22:59:48.927" endtime="20201115 22:59:48.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.944" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 22:59:48.943" endtime="20201115 22:59:48.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.946" level="INFO">VALUE: [1.4555999999998903e-05, 1.3514000000002663e-05, 1.4111000000000679e-05, 1.3903000000002608e-05, 1.4235999999997334e-05, 1.3917000000002178e-05, 1.4180999999998528e-05, 1.4250000000000373e-05, 1.4208999999997668e-05, 1.4013999999999693e-05, 1.3917000000002178e-05, 1.4236000000000804e-05, 1.4027999999999263e-05, 1.3902999999999138e-05, 1.3889000000003038e-05, 1.3959000000000887e-05, 1.4097000000001109e-05, 1.3805999999998153e-05, 1.3777999999999013e-05, 1.4111000000000679e-05, 1.4138999999999818e-05, 1.3791999999998583e-05, 1.381899999999825e-05, 1.3721999999997264e-05, 1.3638999999999318e-05, 1.4028000000002733e-05, 1.4209000000001137e-05, 1.3986000000000554e-05, 1.3834000000000762e-05, 1.4250000000000373e-05, 1.3834000000000762e-05, 1.4083000000001539e-05, 1.3874999999999998e-05, 1.3763999999999443e-05, 1.4098000000000582e-05, 1.4152999999999388e-05, 1.4055999999998403e-05, 1.3736999999999777e-05, 1.3958999999997418e-05, 1.4138999999999818e-05, 1.3763999999999443e-05, 1.4237000000000277e-05, 1.409699999999764e-05, 1.3986000000000554e-05, 1.4250000000000373e-05, 1.4207999999998194e-05, 1.3986000000000554e-05, 1.3929999999998804e-05, 1.4222000000001234e-05, 1.4179999999999054e-05]</msg>
<status status="PASS" starttime="20201115 22:59:48.945" endtime="20201115 22:59:48.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.940" endtime="20201115 22:59:48.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.950" endtime="20201115 22:59:48.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:48.954" endtime="20201115 22:59:48.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.952" endtime="20201115 22:59:48.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.948" endtime="20201115 22:59:48.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.584" endtime="20201115 22:59:48.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.583" endtime="20201115 22:59:48.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.582" endtime="20201115 22:59:48.975"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.977" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.985" endtime="20201115 22:59:49.001"></status>
</kw>
<msg timestamp="20201115 22:59:49.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.984" endtime="20201115 22:59:49.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.003" endtime="20201115 22:59:49.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.005" endtime="20201115 22:59:49.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.981" endtime="20201115 22:59:49.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.979" endtime="20201115 22:59:49.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.014" endtime="20201115 22:59:49.300"></status>
</kw>
<msg timestamp="20201115 22:59:49.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025014528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025029333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.013" endtime="20201115 22:59:49.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025014528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025029333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.304" endtime="20201115 22:59:49.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.313" endtime="20201115 22:59:49.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.010" endtime="20201115 22:59:49.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.008" endtime="20201115 22:59:49.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:49.320" level="INFO">${RESULT} = [{'time': 0.025029333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.480499999999968e-05, 'source_diff': 1.480499999999968e-05}, {'time': 0.025049167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:49.316" endtime="20201115 22:59:49.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:49.334" level="INFO">${ACCURACY} = {'time': [0.025029333, 0.025049167, 0.025068167, 0.025087194, 0.025106167, 0.025125236, 0.025144194, 0.025163222, 0.025182194, 0.025201194, 0.025220181, 0.02523925, 0.025258181, 0.025277194, 0.0252961...</msg>
<status status="PASS" starttime="20201115 22:59:49.321" endtime="20201115 22:59:49.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.339" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 22:59:49.338" endtime="20201115 22:59:49.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.343" level="INFO">VALUE: [1.480499999999968e-05, 1.4013999999999693e-05, 1.4027999999999263e-05, 1.4125000000000248e-05, 1.3860999999996959e-05, 1.430499999999918e-05, 1.3874999999999998e-05, 1.3986000000000554e-05, 1.3916000000002704e-05, 1.3957999999997944e-05, 1.4042000000002303e-05, 1.4333000000001789e-05, 1.4152999999999388e-05, 1.40689999999985e-05, 1.4013999999999693e-05, 1.3971999999997514e-05, 1.4208000000001664e-05, 1.384699999999739e-05, 1.3888999999999568e-05, 1.4138999999999818e-05, 1.3708000000001164e-05, 1.3820000000001192e-05, 1.3929999999998804e-05, 1.376299999999997e-05, 1.3958000000001414e-05, 1.3888000000000095e-05, 1.377699999999954e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.4208000000001664e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3847000000000859e-05, 1.4250000000000373e-05, 1.4249999999996904e-05, 1.379099999999911e-05, 1.40689999999985e-05, 1.408299999999807e-05, 1.4041000000002829e-05, 1.3861000000000429e-05, 1.4000000000000123e-05, 1.381899999999825e-05, 1.4027999999999263e-05, 1.3986000000000554e-05, 1.3944000000001844e-05, 1.4305999999998653e-05, 1.4027999999999263e-05, 1.3736000000000304e-05, 1.3972000000000984e-05, 1.3806000000001623e-05]</msg>
<status status="PASS" starttime="20201115 22:59:49.341" endtime="20201115 22:59:49.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.335" endtime="20201115 22:59:49.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.346" endtime="20201115 22:59:49.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.350" endtime="20201115 22:59:49.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.348" endtime="20201115 22:59:49.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.344" endtime="20201115 22:59:49.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.978" endtime="20201115 22:59:49.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.976" endtime="20201115 22:59:49.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.975" endtime="20201115 22:59:49.371"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.373" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.382" endtime="20201115 22:59:49.397"></status>
</kw>
<msg timestamp="20201115 22:59:49.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.380" endtime="20201115 22:59:49.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.398" endtime="20201115 22:59:49.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.401" endtime="20201115 22:59:49.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.378" endtime="20201115 22:59:49.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.375" endtime="20201115 22:59:49.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.410" endtime="20201115 22:59:49.695"></status>
</kw>
<msg timestamp="20201115 22:59:49.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025272042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025286764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.408" endtime="20201115 22:59:49.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025272042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025286764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.700" endtime="20201115 22:59:49.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.708" endtime="20201115 22:59:49.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.406" endtime="20201115 22:59:49.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.404" endtime="20201115 22:59:49.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:49.715" level="INFO">${RESULT} = [{'time': 0.025286764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4721999999998264e-05, 'source_diff': 1.4721999999998264e-05}, {'time': 0.025306583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:49.711" endtime="20201115 22:59:49.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:49.729" level="INFO">${ACCURACY} = {'time': [0.025286764, 0.025306583, 0.025325583, 0.025344597, 0.025363639, 0.025382597, 0.025401597, 0.025420653, 0.025439597, 0.025458611, 0.025477597, 0.025496597, 0.025515597, 0.025534597, 0.025553...</msg>
<status status="PASS" starttime="20201115 22:59:49.716" endtime="20201115 22:59:49.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.733" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 22:59:49.732" endtime="20201115 22:59:49.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.736" level="INFO">VALUE: [1.4721999999998264e-05, 1.4347000000001359e-05, 1.3985999999997084e-05, 1.3736000000000304e-05, 1.4138999999999818e-05, 1.405499999999893e-05, 1.4222000000001234e-05, 1.4000000000000123e-05, 1.3736000000000304e-05, 1.384699999999739e-05, 1.4000000000000123e-05, 1.3874999999999998e-05, 1.4055000000002399e-05, 1.3679999999998554e-05, 1.4165999999999485e-05, 1.4249999999996904e-05, 1.4222000000001234e-05, 1.4194000000002094e-05, 1.4166999999998958e-05, 1.4111000000000679e-05, 1.4027999999999263e-05, 1.3736000000000304e-05, 1.4236000000000804e-05, 1.4028000000002733e-05, 1.3763999999999443e-05, 1.3874999999999998e-05, 1.383299999999782e-05, 1.4138999999999818e-05, 1.4277999999999513e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3930999999998278e-05, 1.4110999999997209e-05, 1.4208000000001664e-05, 1.4222000000001234e-05, 1.3944999999997848e-05, 1.3764000000002913e-05, 1.4207999999998194e-05, 1.3833000000001289e-05, 1.3666999999998458e-05, 1.3792000000002053e-05, 1.3930999999998278e-05, 1.3806000000001623e-05, 1.4138999999999818e-05, 1.3986000000000554e-05, 1.3736000000000304e-05, 1.4098000000000582e-05, 1.3917000000002178e-05, 1.4263999999999943e-05, 1.3749999999999873e-05]</msg>
<status status="PASS" starttime="20201115 22:59:49.734" endtime="20201115 22:59:49.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.730" endtime="20201115 22:59:49.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.739" endtime="20201115 22:59:49.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.742" endtime="20201115 22:59:49.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.741" endtime="20201115 22:59:49.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.737" endtime="20201115 22:59:49.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.374" endtime="20201115 22:59:49.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.372" endtime="20201115 22:59:49.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.371" endtime="20201115 22:59:49.764"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.766" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.774" endtime="20201115 22:59:49.789"></status>
</kw>
<msg timestamp="20201115 22:59:49.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.773" endtime="20201115 22:59:49.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.790" endtime="20201115 22:59:49.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.793" endtime="20201115 22:59:49.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.770" endtime="20201115 22:59:49.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.768" endtime="20201115 22:59:49.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.802" endtime="20201115 22:59:50.087"></status>
</kw>
<msg timestamp="20201115 22:59:50.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023932472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023947153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.801" endtime="20201115 22:59:50.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023932472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023947153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.092" endtime="20201115 22:59:50.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.100" endtime="20201115 22:59:50.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.798" endtime="20201115 22:59:50.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.796" endtime="20201115 22:59:50.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:50.107" level="INFO">${RESULT} = [{'time': 0.023947153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4680999999999028e-05, 'source_diff': 1.4680999999999028e-05}, {'time': 0.023965986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:50.104" endtime="20201115 22:59:50.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:50.121" level="INFO">${ACCURACY} = {'time': [0.023947153, 0.023965986, 0.023985, 0.024004, 0.024022986, 0.024041986, 0.024060986, 0.024079986, 0.024099, 0.024118, 0.024137056, 0.024156014, 0.024175, 0.024194014, 0.024213014, 0.02423204...</msg>
<status status="PASS" starttime="20201115 22:59:50.108" endtime="20201115 22:59:50.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.125" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 22:59:50.124" endtime="20201115 22:59:50.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.128" level="INFO">VALUE: [1.4680999999999028e-05, 1.3611000000000179e-05, 1.3555999999997903e-05, 1.4152999999999388e-05, 1.3861000000000429e-05, 1.3958000000001414e-05, 1.405499999999893e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3819000000001719e-05, 1.4263999999999943e-05, 1.4180999999998528e-05, 1.4013999999999693e-05, 1.4236000000000804e-05, 1.3820000000001192e-05, 1.4180999999998528e-05, 1.3820000000001192e-05, 1.3888999999999568e-05, 1.4277999999999513e-05, 1.3888999999999568e-05, 1.3889000000003038e-05, 1.4250000000000373e-05, 1.4277999999999513e-05, 1.4207999999998194e-05, 1.4111000000000679e-05, 1.4069999999997973e-05, 1.4111000000000679e-05, 1.4250000000000373e-05, 1.3638999999999318e-05, 1.4221999999997764e-05, 1.3763999999999443e-05, 1.3806000000001623e-05, 1.3709000000000637e-05, 1.3764000000002913e-05, 1.3736000000000304e-05, 1.4223000000000707e-05, 1.4221999999997764e-05, 1.3973000000000457e-05, 1.4235999999997334e-05, 1.4263999999999943e-05, 1.4194000000002094e-05, 1.3972000000000984e-05, 1.3777999999999013e-05, 1.4069999999997973e-05, 1.4223000000000707e-05, 1.4027999999999263e-05, 1.4138999999999818e-05, 1.3888999999999568e-05, 1.4000000000000123e-05, 1.4165999999999485e-05]</msg>
<status status="PASS" starttime="20201115 22:59:50.126" endtime="20201115 22:59:50.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.122" endtime="20201115 22:59:50.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.131" endtime="20201115 22:59:50.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.134" endtime="20201115 22:59:50.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.133" endtime="20201115 22:59:50.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.129" endtime="20201115 22:59:50.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.767" endtime="20201115 22:59:50.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.765" endtime="20201115 22:59:50.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.764" endtime="20201115 22:59:50.156"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.158" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.166" endtime="20201115 22:59:50.181"></status>
</kw>
<msg timestamp="20201115 22:59:50.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.165" endtime="20201115 22:59:50.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.183" endtime="20201115 22:59:50.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.185" endtime="20201115 22:59:50.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.162" endtime="20201115 22:59:50.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.160" endtime="20201115 22:59:50.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.195" endtime="20201115 22:59:50.481"></status>
</kw>
<msg timestamp="20201115 22:59:50.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024213236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:50.193" endtime="20201115 22:59:50.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024213236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:50.485" endtime="20201115 22:59:50.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.493" endtime="20201115 22:59:50.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.190" endtime="20201115 22:59:50.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.189" endtime="20201115 22:59:50.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:50.500" level="INFO">${RESULT} = [{'time': 0.0242285, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5264000000000943e-05, 'source_diff': 1.5264000000000943e-05}, {'time': 0.024247333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:50.497" endtime="20201115 22:59:50.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:50.514" level="INFO">${ACCURACY} = {'time': [0.0242285, 0.024247333, 0.024266333, 0.024285319, 0.024304333, 0.024323319, 0.024342347, 0.024361347, 0.024380347, 0.024399375, 0.024418333, 0.024437333, 0.024456333, 0.024475361, 0.02449433...</msg>
<status status="PASS" starttime="20201115 22:59:50.501" endtime="20201115 22:59:50.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.518" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 22:59:50.517" endtime="20201115 22:59:50.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.521" level="INFO">VALUE: [1.5264000000000943e-05, 1.352699999999929e-05, 1.404099999999936e-05, 1.408299999999807e-05, 1.402699999999979e-05, 1.4207999999998194e-05, 1.3874999999999998e-05, 1.4110999999997209e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.3722000000000734e-05, 1.4235999999997334e-05, 1.3888999999999568e-05, 1.4263999999999943e-05, 1.3972000000000984e-05, 1.4222000000001234e-05, 1.3957999999997944e-05, 1.4111000000000679e-05, 1.409699999999764e-05, 1.4000000000000123e-05, 1.3847000000000859e-05, 1.379099999999911e-05, 1.4263999999999943e-05, 1.380499999999868e-05, 1.3915999999999235e-05, 1.3805000000002149e-05, 1.4194000000002094e-05, 1.4138999999999818e-05, 1.4167000000002428e-05, 1.4277999999999513e-05, 1.4069000000001969e-05, 1.3763999999999443e-05, 1.4138999999999818e-05, 1.4179999999999054e-05, 1.3861000000000429e-05, 1.380499999999868e-05, 1.4138999999999818e-05, 1.409699999999764e-05, 1.4111000000000679e-05, 1.3721999999997264e-05, 1.3805999999998153e-05, 1.3874999999999998e-05, 1.4291999999999083e-05, 1.4486000000001054e-05, 1.3708000000001164e-05, 1.3792000000002053e-05, 1.3791999999998583e-05, 1.3945000000001317e-05, 1.4166999999998958e-05, 1.3945000000001317e-05]</msg>
<status status="PASS" starttime="20201115 22:59:50.519" endtime="20201115 22:59:50.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.515" endtime="20201115 22:59:50.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.524" endtime="20201115 22:59:50.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.527" endtime="20201115 22:59:50.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.526" endtime="20201115 22:59:50.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.522" endtime="20201115 22:59:50.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.159" endtime="20201115 22:59:50.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.157" endtime="20201115 22:59:50.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.156" endtime="20201115 22:59:50.549"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.551" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.559" endtime="20201115 22:59:50.574"></status>
</kw>
<msg timestamp="20201115 22:59:50.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.558" endtime="20201115 22:59:50.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.576" endtime="20201115 22:59:50.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.579" endtime="20201115 22:59:50.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.555" endtime="20201115 22:59:50.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.553" endtime="20201115 22:59:50.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.588" endtime="20201115 22:59:50.875"></status>
</kw>
<msg timestamp="20201115 22:59:50.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024989597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025005306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.586" endtime="20201115 22:59:50.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024989597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025005306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.879" endtime="20201115 22:59:50.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.888" endtime="20201115 22:59:50.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.584" endtime="20201115 22:59:50.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.582" endtime="20201115 22:59:50.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:50.895" level="INFO">${RESULT} = [{'time': 0.025005306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5709000000002638e-05, 'source_diff': 1.5709000000002638e-05}, {'time': 0.025026153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:50.891" endtime="20201115 22:59:50.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:50.909" level="INFO">${ACCURACY} = {'time': [0.025005306, 0.025026153, 0.025046208, 0.025066139, 0.025086139, 0.025106139, 0.025126194, 0.025146139, 0.025166167, 0.025186153, 0.025206194, 0.025226153, 0.025246167, 0.025266153, 0.025286...</msg>
<status status="PASS" starttime="20201115 22:59:50.896" endtime="20201115 22:59:50.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.914" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 22:59:50.913" endtime="20201115 22:59:50.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.916" level="INFO">VALUE: [1.5709000000002638e-05, 1.5124999999997779e-05, 1.4986000000001554e-05, 1.5153000000000388e-05, 1.5221999999998764e-05, 1.5000000000001124e-05, 1.5166000000000485e-05, 1.4792000000003053e-05, 1.4764000000000443e-05, 1.5194999999999098e-05, 1.5138000000001345e-05, 1.4959000000001887e-05, 1.5000000000001124e-05, 1.509699999999864e-05, 1.5249999999997904e-05, 1.5209000000002137e-05, 1.5097000000002109e-05, 1.486099999999796e-05, 1.4847999999997863e-05, 1.4848000000001332e-05, 1.5180999999999528e-05, 1.508299999999907e-05, 1.5180999999999528e-05, 1.5125000000001249e-05, 1.4916999999999708e-05, 1.5083999999998543e-05, 1.479100000000011e-05, 1.5223000000001707e-05, 1.4680999999999028e-05, 1.4750000000000874e-05, 1.5069999999998973e-05, 1.5084000000002012e-05, 1.481899999999925e-05, 1.5264000000000943e-05, 1.5097999999998113e-05, 1.505499999999993e-05, 1.5250000000001374e-05, 1.4666999999999458e-05, 1.4888999999997099e-05, 1.5207999999999194e-05, 1.4833000000002289e-05, 1.484699999999839e-05, 1.4902000000000665e-05, 1.5264000000000943e-05, 1.4916000000000235e-05, 1.4888000000001095e-05, 1.4764000000000443e-05, 1.501299999999775e-05, 1.5138999999997349e-05, 1.5014000000000693e-05]</msg>
<status status="PASS" starttime="20201115 22:59:50.915" endtime="20201115 22:59:50.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.910" endtime="20201115 22:59:50.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.920" endtime="20201115 22:59:50.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.923" endtime="20201115 22:59:50.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.921" endtime="20201115 22:59:50.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.918" endtime="20201115 22:59:50.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.552" endtime="20201115 22:59:50.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.550" endtime="20201115 22:59:50.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.549" endtime="20201115 22:59:50.944"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.946" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.955" endtime="20201115 22:59:50.971"></status>
</kw>
<msg timestamp="20201115 22:59:50.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.954" endtime="20201115 22:59:50.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.973" endtime="20201115 22:59:50.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.975" endtime="20201115 22:59:50.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.951" endtime="20201115 22:59:50.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.949" endtime="20201115 22:59:50.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.985" endtime="20201115 22:59:51.270"></status>
</kw>
<msg timestamp="20201115 22:59:51.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025880792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025897625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.983" endtime="20201115 22:59:51.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025880792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025897625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.274" endtime="20201115 22:59:51.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.283" endtime="20201115 22:59:51.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.980" endtime="20201115 22:59:51.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.979" endtime="20201115 22:59:51.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.290" level="INFO">${RESULT} = [{'time': 0.025897625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.683300000000082e-05, 'source_diff': 1.683300000000082e-05}, {'time': 0.025919472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:51.286" endtime="20201115 22:59:51.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.303" level="INFO">${ACCURACY} = {'time': [0.025897625, 0.025919472, 0.025940472, 0.025961472, 0.025982472, 0.026003472, 0.0260245, 0.026045472, 0.026066528, 0.026087486, 0.026108486, 0.026129486, 0.026150486, 0.026171486, 0.0261925,...</msg>
<status status="PASS" starttime="20201115 22:59:51.291" endtime="20201115 22:59:51.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.308" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.307" endtime="20201115 22:59:51.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.310" level="INFO">VALUE: [1.683300000000082e-05, 1.6194000000000625e-05, 1.5915999999997765e-05, 1.584699999999939e-05, 1.587499999999853e-05, 1.613899999999835e-05, 1.5707999999999694e-05, 1.5999999999998654e-05, 1.6195000000000098e-05, 1.584699999999939e-05, 1.5944000000000375e-05, 1.5957999999999944e-05, 1.615300000000139e-05, 1.5707999999999694e-05, 1.5750000000001874e-05, 1.583299999999982e-05, 1.609699999999964e-05, 1.6028000000001263e-05, 1.6236000000002804e-05, 1.6235999999999334e-05, 1.6042000000000833e-05, 1.579100000000111e-05, 1.6221999999999764e-05, 1.590299999999767e-05, 1.613899999999835e-05, 1.608300000000007e-05, 1.5944000000000375e-05, 1.590300000000114e-05, 1.615299999999792e-05, 1.6028000000001263e-05, 1.6041999999997364e-05, 1.6137999999998875e-05, 1.612499999999878e-05, 1.6235999999999334e-05, 1.612499999999878e-05, 1.586099999999896e-05, 1.5875000000002e-05, 1.5944999999999848e-05, 1.6069999999999973e-05, 1.5778000000001013e-05, 1.6000000000002124e-05, 1.6083999999999543e-05, 1.6000000000002124e-05, 1.611100000000268e-05, 1.5709000000002638e-05, 1.5735999999998834e-05, 1.6098000000002582e-05, 1.587499999999853e-05, 1.6222999999999238e-05, 1.6195000000000098e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.309" endtime="20201115 22:59:51.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.304" endtime="20201115 22:59:51.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.313" endtime="20201115 22:59:51.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.317" endtime="20201115 22:59:51.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.315" endtime="20201115 22:59:51.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.312" endtime="20201115 22:59:51.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.947" endtime="20201115 22:59:51.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.945" endtime="20201115 22:59:51.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.944" endtime="20201115 22:59:51.339"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.341" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.349" endtime="20201115 22:59:51.365"></status>
</kw>
<msg timestamp="20201115 22:59:51.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.348" endtime="20201115 22:59:51.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.367" endtime="20201115 22:59:51.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.369" endtime="20201115 22:59:51.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.345" endtime="20201115 22:59:51.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.343" endtime="20201115 22:59:51.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.380" endtime="20201115 22:59:51.666"></status>
</kw>
<msg timestamp="20201115 22:59:51.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024186417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024204208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.378" endtime="20201115 22:59:51.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024186417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024204208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.670" endtime="20201115 22:59:51.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.679" endtime="20201115 22:59:51.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.375" endtime="20201115 22:59:51.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.373" endtime="20201115 22:59:51.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.686" level="INFO">${RESULT} = [{'time': 0.024204208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.779099999999964e-05, 'source_diff': 1.779099999999964e-05}, {'time': 0.024226042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:51.682" endtime="20201115 22:59:51.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.699" level="INFO">${ACCURACY} = {'time': [0.024204208, 0.024226042, 0.024248056, 0.024270042, 0.024292042, 0.024314042, 0.024336056, 0.024358083, 0.024380097, 0.024402125, 0.024424056, 0.024446056, 0.024468056, 0.024490069, 0.024512...</msg>
<status status="PASS" starttime="20201115 22:59:51.686" endtime="20201115 22:59:51.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.703" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.702" endtime="20201115 22:59:51.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.706" level="INFO">VALUE: [1.779099999999964e-05, 1.6527999999998294e-05, 1.6972999999999988e-05, 1.718099999999806e-05, 1.6972999999999988e-05, 1.6709000000000168e-05, 1.7111999999999683e-05, 1.7236000000000334e-05, 1.7263999999999474e-05, 1.713899999999935e-05, 1.693100000000128e-05, 1.6736999999999308e-05, 1.695899999999695e-05, 1.7222000000000764e-05, 1.686099999999996e-05, 1.680500000000168e-05, 1.702699999999932e-05, 1.6722000000000264e-05, 1.683299999999735e-05, 1.6915999999998765e-05, 1.712499999999978e-05, 1.701299999999975e-05, 1.711100000000021e-05, 1.6944000000001375e-05, 1.705500000000193e-05, 1.7277999999999044e-05, 1.6930000000001805e-05, 1.7222000000000764e-05, 1.7179999999998585e-05, 1.705500000000193e-05, 1.7180000000002055e-05, 1.6915999999998765e-05, 1.7013999999999224e-05, 1.712499999999978e-05, 1.6749999999999404e-05, 1.684700000000039e-05, 1.704099999999889e-05, 1.6749999999999404e-05, 1.6944000000001375e-05, 1.686099999999996e-05, 1.6749999999999404e-05, 1.70690000000015e-05, 1.6778000000002014e-05, 1.7222000000000764e-05, 1.691700000000171e-05, 1.684700000000039e-05, 1.7193999999998155e-05, 1.68889999999991e-05, 1.683300000000082e-05, 1.7041999999998364e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.704" endtime="20201115 22:59:51.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.700" endtime="20201115 22:59:51.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.710" endtime="20201115 22:59:51.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.713" endtime="20201115 22:59:51.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.711" endtime="20201115 22:59:51.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.708" endtime="20201115 22:59:51.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.342" endtime="20201115 22:59:51.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.340" endtime="20201115 22:59:51.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.339" endtime="20201115 22:59:51.734"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.737" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.745" endtime="20201115 22:59:51.760"></status>
</kw>
<msg timestamp="20201115 22:59:51.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.743" endtime="20201115 22:59:51.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.761" endtime="20201115 22:59:51.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.764" endtime="20201115 22:59:51.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.741" endtime="20201115 22:59:51.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.739" endtime="20201115 22:59:51.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.773" endtime="20201115 22:59:52.059"></status>
</kw>
<msg timestamp="20201115 22:59:52.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024080306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024099569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.772" endtime="20201115 22:59:52.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024080306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024099569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.063" endtime="20201115 22:59:52.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.071" endtime="20201115 22:59:52.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.769" endtime="20201115 22:59:52.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.767" endtime="20201115 22:59:52.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.078" level="INFO">${RESULT} = [{'time': 0.024099569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9263000000002e-05, 'source_diff': 1.9263000000002e-05}, {'time': 0.024123444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1...</msg>
<status status="PASS" starttime="20201115 22:59:52.075" endtime="20201115 22:59:52.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.092" level="INFO">${ACCURACY} = {'time': [0.024099569, 0.024123444, 0.024146403, 0.024169417, 0.024192403, 0.024215417, 0.024238431, 0.024261417, 0.024284417, 0.024307417, 0.024330417, 0.024353417, 0.024376417, 0.024399417, 0.024422...</msg>
<status status="PASS" starttime="20201115 22:59:52.079" endtime="20201115 22:59:52.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.096" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.095" endtime="20201115 22:59:52.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.099" level="INFO">VALUE: [1.9263000000002e-05, 1.8222000000001765e-05, 1.8070000000001973e-05, 1.793099999999881e-05, 1.812500000000078e-05, 1.7709000000001168e-05, 1.790299999999967e-05, 1.78890000000001e-05, 1.811099999999774e-05, 1.8098000000001113e-05, 1.7848000000000863e-05, 1.811099999999774e-05, 1.8278000000000044e-05, 1.7723000000000738e-05, 1.8152000000000446e-05, 1.768099999999856e-05, 1.769499999999813e-05, 1.7888000000000626e-05, 1.7959000000001418e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.8055999999998934e-05, 1.8236000000001334e-05, 1.812500000000078e-05, 1.827700000000057e-05, 1.7930000000002805e-05, 1.8263000000001e-05, 1.787499999999706e-05, 1.7929999999999335e-05, 1.7902000000000196e-05, 1.780499999999921e-05, 1.8014000000000224e-05, 1.813900000000035e-05, 1.7943999999998905e-05, 1.7777999999999544e-05, 1.808300000000207e-05, 1.786100000000096e-05, 1.7915999999999765e-05, 1.783300000000182e-05, 1.804099999999989e-05, 1.7915999999999765e-05, 1.7763999999999974e-05, 1.7721999999997795e-05, 1.8084000000001543e-05, 1.805499999999946e-05, 1.7707999999998225e-05, 1.783300000000182e-05, 1.818099999999906e-05, 1.8027999999999794e-05, 1.7805999999998684e-05]</msg>
<status status="PASS" starttime="20201115 22:59:52.097" endtime="20201115 22:59:52.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.093" endtime="20201115 22:59:52.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.102" endtime="20201115 22:59:52.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.106" endtime="20201115 22:59:52.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.104" endtime="20201115 22:59:52.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.101" endtime="20201115 22:59:52.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.737" endtime="20201115 22:59:52.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.735" endtime="20201115 22:59:52.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.735" endtime="20201115 22:59:52.127"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.129" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.138" endtime="20201115 22:59:52.153"></status>
</kw>
<msg timestamp="20201115 22:59:52.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.136" endtime="20201115 22:59:52.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.155" endtime="20201115 22:59:52.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.158" endtime="20201115 22:59:52.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.133" endtime="20201115 22:59:52.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.131" endtime="20201115 22:59:52.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.167" endtime="20201115 22:59:52.455"></status>
</kw>
<msg timestamp="20201115 22:59:52.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025100653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025120514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.165" endtime="20201115 22:59:52.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025100653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025120514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.459" endtime="20201115 22:59:52.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.467" endtime="20201115 22:59:52.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.163" endtime="20201115 22:59:52.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.161" endtime="20201115 22:59:52.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.474" level="INFO">${RESULT} = [{'time': 0.025120514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.986099999999949e-05, 'source_diff': 1.986099999999949e-05}, {'time': 0.025145361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:52.471" endtime="20201115 22:59:52.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.489" level="INFO">${ACCURACY} = {'time': [0.025120514, 0.025145361, 0.025169333, 0.025193333, 0.025217347, 0.025241347, 0.025265361, 0.025289347, 0.025313389, 0.025337375, 0.025361361, 0.025385361, 0.025409361, 0.025433375, 0.025457...</msg>
<status status="PASS" starttime="20201115 22:59:52.475" endtime="20201115 22:59:52.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.494" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.493" endtime="20201115 22:59:52.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.496" level="INFO">VALUE: [1.986099999999949e-05, 1.940300000000117e-05, 1.8901999999997726e-05, 1.904099999999742e-05, 1.9222000000002765e-05, 1.9194000000000155e-05, 1.906900000000003e-05, 1.8971999999999045e-05, 1.8749999999997935e-05, 1.9194000000000155e-05, 1.8749999999997935e-05, 1.8930000000000335e-05, 1.8943999999999905e-05, 1.8986000000002085e-05, 1.8943999999999905e-05, 1.9055999999999934e-05, 1.9027999999997325e-05, 1.8778000000000544e-05, 1.886099999999849e-05, 1.891700000000024e-05, 1.8735999999998365e-05, 1.9013999999997755e-05, 1.9236000000002335e-05, 1.8721999999998795e-05, 1.9264000000001474e-05, 1.8764000000000974e-05, 1.9042000000000364e-05, 1.9221999999999295e-05, 1.9249999999998435e-05, 1.8792000000000114e-05, 1.90829999999996e-05, 1.888899999999763e-05, 1.8749999999997935e-05, 1.8707999999999225e-05, 1.886099999999849e-05, 1.9306000000000184e-05, 1.9083999999999074e-05, 1.893099999999981e-05, 1.9069999999999504e-05, 1.8971999999999045e-05, 1.8819999999999254e-05, 1.879099999999717e-05, 1.8735999999998365e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.895900000000242e-05, 1.893099999999981e-05, 1.9264000000001474e-05, 1.8973000000001988e-05, 1.8833999999998824e-05]</msg>
<status status="PASS" starttime="20201115 22:59:52.495" endtime="20201115 22:59:52.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.490" endtime="20201115 22:59:52.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.499" endtime="20201115 22:59:52.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.503" endtime="20201115 22:59:52.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.501" endtime="20201115 22:59:52.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.498" endtime="20201115 22:59:52.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.130" endtime="20201115 22:59:52.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.128" endtime="20201115 22:59:52.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.127" endtime="20201115 22:59:52.524"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.526" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.535" endtime="20201115 22:59:52.550"></status>
</kw>
<msg timestamp="20201115 22:59:52.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.533" endtime="20201115 22:59:52.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.551" endtime="20201115 22:59:52.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.554" endtime="20201115 22:59:52.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.531" endtime="20201115 22:59:52.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.528" endtime="20201115 22:59:52.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.563" endtime="20201115 22:59:52.850"></status>
</kw>
<msg timestamp="20201115 22:59:52.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024215139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024235972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.562" endtime="20201115 22:59:52.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024215139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024235972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.854" endtime="20201115 22:59:52.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.863" endtime="20201115 22:59:52.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.559" endtime="20201115 22:59:52.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.557" endtime="20201115 22:59:52.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.870" level="INFO">${RESULT} = [{'time': 0.024235972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.083300000000135e-05, 'source_diff': 2.083300000000135e-05}, {'time': 0.024260792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:52.866" endtime="20201115 22:59:52.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.883" level="INFO">${ACCURACY} = {'time': [0.024235972, 0.024260792, 0.024285806, 0.024310792, 0.024335806, 0.024360806, 0.024385806, 0.024410819, 0.024435847, 0.024460819, 0.024485847, 0.024510833, 0.024535833, 0.024560875, 0.024585...</msg>
<status status="PASS" starttime="20201115 22:59:52.871" endtime="20201115 22:59:52.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.888" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.887" endtime="20201115 22:59:52.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.890" level="INFO">VALUE: [2.083300000000135e-05, 1.9583999999999574e-05, 1.997299999999952e-05, 1.9792000000001114e-05, 1.9820000000000254e-05, 2.0027999999998325e-05, 1.988899999999863e-05, 2.001299999999928e-05, 1.9958000000000475e-05, 1.9722000000003265e-05, 2.0194000000001155e-05, 1.9985999999999615e-05, 2.0208000000000725e-05, 2.0193999999997686e-05, 2.0056000000000934e-05, 2.0222000000000295e-05, 2.036099999999999e-05, 2.012499999999931e-05, 2.009700000000017e-05, 2.00830000000006e-05, 2.005499999999799e-05, 2.008299999999713e-05, 2.011099999999974e-05, 1.9749999999998935e-05, 2.029100000000214e-05, 1.981899999999731e-05, 1.9749999999998935e-05, 1.99029999999982e-05, 1.980500000000121e-05, 2.0028000000001794e-05, 2.009700000000017e-05, 2.0222000000000295e-05, 1.9777999999998075e-05, 2.018099999999759e-05, 1.9944000000000905e-05, 1.9944000000000905e-05, 2.0027999999998325e-05, 2.0042000000001364e-05, 1.986099999999949e-05, 1.990300000000167e-05, 2.005499999999799e-05, 2.011099999999974e-05, 2.0027999999998325e-05, 2.012499999999931e-05, 1.9820000000000254e-05, 1.98890000000021e-05, 1.9791999999997645e-05, 2.00830000000006e-05, 2.006900000000103e-05, 1.984699999999992e-05]</msg>
<status status="PASS" starttime="20201115 22:59:52.889" endtime="20201115 22:59:52.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.884" endtime="20201115 22:59:52.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.893" endtime="20201115 22:59:52.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.897" endtime="20201115 22:59:52.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.895" endtime="20201115 22:59:52.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.892" endtime="20201115 22:59:52.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.527" endtime="20201115 22:59:52.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.525" endtime="20201115 22:59:52.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.524" endtime="20201115 22:59:52.918"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.920" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.929" endtime="20201115 22:59:52.944"></status>
</kw>
<msg timestamp="20201115 22:59:52.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.927" endtime="20201115 22:59:52.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.946" endtime="20201115 22:59:52.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.948" endtime="20201115 22:59:52.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.925" endtime="20201115 22:59:52.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.922" endtime="20201115 22:59:52.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.958" endtime="20201115 22:59:53.242"></status>
</kw>
<msg timestamp="20201115 22:59:53.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024477375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024499556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.956" endtime="20201115 22:59:53.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024477375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024499556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.246" endtime="20201115 22:59:53.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.255" endtime="20201115 22:59:53.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.953" endtime="20201115 22:59:53.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.952" endtime="20201115 22:59:53.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.261" level="INFO">${RESULT} = [{'time': 0.024499556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.218099999999959e-05, 'source_diff': 2.218099999999959e-05}, {'time': 0.024526403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:53.258" endtime="20201115 22:59:53.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.275" level="INFO">${ACCURACY} = {'time': [0.024499556, 0.024526403, 0.024552472, 0.024578389, 0.024604403, 0.024630417, 0.024656431, 0.024682417, 0.024708403, 0.024734403, 0.024760403, 0.024786403, 0.024812431, 0.024838458, 0.024864...</msg>
<status status="PASS" starttime="20201115 22:59:53.262" endtime="20201115 22:59:53.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.280" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.279" endtime="20201115 22:59:53.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.282" level="INFO">VALUE: [2.218099999999959e-05, 2.134699999999795e-05, 2.0763999999999505e-05, 2.0986000000000615e-05, 2.1013999999999755e-05, 2.087500000000006e-05, 2.113899999999988e-05, 2.093100000000181e-05, 2.1056000000001934e-05, 2.1221999999997826e-05, 2.1056000000001934e-05, 2.0777999999999075e-05, 2.093099999999834e-05, 2.10830000000016e-05, 2.1027999999999325e-05, 2.1070000000001504e-05, 2.0736000000000365e-05, 2.102699999999985e-05, 2.07090000000007e-05, 2.095900000000095e-05, 2.091699999999877e-05, 2.0763999999999505e-05, 2.1193999999998686e-05, 2.116699999999902e-05, 2.076300000000003e-05, 2.111100000000074e-05, 2.130499999999924e-05, 2.0930000000002336e-05, 2.0901999999999726e-05, 2.1013999999999755e-05, 2.1000000000000185e-05, 2.10830000000016e-05, 2.083299999999788e-05, 2.111100000000074e-05, 2.1250000000000435e-05, 2.087500000000006e-05, 2.087500000000006e-05, 2.087500000000006e-05, 2.0986000000000615e-05, 2.0972000000001045e-05, 2.1180000000002586e-05, 2.1277999999999575e-05, 2.084700000000092e-05, 2.0929999999998866e-05, 2.112500000000031e-05, 2.108299999999813e-05, 2.1236000000000865e-05, 2.0722000000000795e-05, 2.09029999999992e-05, 2.1235999999997396e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.281" endtime="20201115 22:59:53.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.276" endtime="20201115 22:59:53.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.286" endtime="20201115 22:59:53.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.289" endtime="20201115 22:59:53.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.288" endtime="20201115 22:59:53.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.284" endtime="20201115 22:59:53.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.921" endtime="20201115 22:59:53.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.919" endtime="20201115 22:59:53.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.918" endtime="20201115 22:59:53.310"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.313" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.321" endtime="20201115 22:59:53.336"></status>
</kw>
<msg timestamp="20201115 22:59:53.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.320" endtime="20201115 22:59:53.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.338" endtime="20201115 22:59:53.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.345" endtime="20201115 22:59:53.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.317" endtime="20201115 22:59:53.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.315" endtime="20201115 22:59:53.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.354" endtime="20201115 22:59:53.640"></status>
</kw>
<msg timestamp="20201115 22:59:53.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024205153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02422825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:53.352" endtime="20201115 22:59:53.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024205153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02422825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:53.644" endtime="20201115 22:59:53.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.653" endtime="20201115 22:59:53.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.350" endtime="20201115 22:59:53.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.348" endtime="20201115 22:59:53.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.660" level="INFO">${RESULT} = [{'time': 0.02422825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30969999999997e-05, 'source_diff': 2.30969999999997e-05}, {'time': 0.024256083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:59:53.656" endtime="20201115 22:59:53.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.673" level="INFO">${ACCURACY} = {'time': [0.02422825, 0.024256083, 0.024283083, 0.024310083, 0.024337097, 0.024364111, 0.024391111, 0.024418097, 0.024445111, 0.024472097, 0.024499153, 0.024526181, 0.024553111, 0.024580111, 0.0246071...</msg>
<status status="PASS" starttime="20201115 22:59:53.661" endtime="20201115 22:59:53.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.678" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.677" endtime="20201115 22:59:53.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.680" level="INFO">VALUE: [2.30969999999997e-05, 2.238900000000113e-05, 2.1957999999999006e-05, 2.17770000000006e-05, 2.205499999999999e-05, 2.1764000000000505e-05, 2.2014000000000755e-05, 2.1985999999998146e-05, 2.2193999999999686e-05, 2.204100000000042e-05, 2.194499999999891e-05, 2.22090000000022e-05, 2.1999999999997716e-05, 2.1972000000002045e-05, 2.213900000000088e-05, 2.193099999999934e-05, 2.2235999999998396e-05, 2.2013999999997286e-05, 2.184700000000192e-05, 2.186099999999802e-05, 2.19030000000002e-05, 2.1985999999998146e-05, 2.1778000000000075e-05, 2.2028000000000325e-05, 2.213900000000088e-05, 2.2069999999999035e-05, 2.216700000000002e-05, 2.187500000000106e-05, 2.2055999999999465e-05, 2.22770000000011e-05, 2.2250000000001435e-05, 2.184700000000192e-05, 2.1986000000001615e-05, 2.1791999999999645e-05, 2.186099999999802e-05, 2.1986000000001615e-05, 2.2264000000001005e-05, 2.2041999999999895e-05, 2.169499999999866e-05, 2.2193999999999686e-05, 2.2264000000001005e-05, 2.2235999999998396e-05, 2.187499999999759e-05, 2.187500000000106e-05, 2.194500000000238e-05, 2.2278000000000575e-05, 2.2249999999997966e-05, 2.1806000000002684e-05, 2.2193999999999686e-05, 2.1805999999999215e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.679" endtime="20201115 22:59:53.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.674" endtime="20201115 22:59:53.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.683" endtime="20201115 22:59:53.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.687" endtime="20201115 22:59:53.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.685" endtime="20201115 22:59:53.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.682" endtime="20201115 22:59:53.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.313" endtime="20201115 22:59:53.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.311" endtime="20201115 22:59:53.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.311" endtime="20201115 22:59:53.708"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.711" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.719" endtime="20201115 22:59:53.735"></status>
</kw>
<msg timestamp="20201115 22:59:53.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.718" endtime="20201115 22:59:53.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.737" endtime="20201115 22:59:53.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.739" endtime="20201115 22:59:53.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.715" endtime="20201115 22:59:53.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.713" endtime="20201115 22:59:53.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.748" endtime="20201115 22:59:54.034"></status>
</kw>
<msg timestamp="20201115 22:59:54.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025524583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025548264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.747" endtime="20201115 22:59:54.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025524583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025548264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.038" endtime="20201115 22:59:54.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.046" endtime="20201115 22:59:54.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.744" endtime="20201115 22:59:54.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.743" endtime="20201115 22:59:54.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.053" level="INFO">${RESULT} = [{'time': 0.025548264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.368100000000109e-05, 'source_diff': 2.368100000000109e-05}, {'time': 0.025577139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:54.050" endtime="20201115 22:59:54.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.068" level="INFO">${ACCURACY} = {'time': [0.025548264, 0.025577139, 0.025605083, 0.025633097, 0.025661097, 0.025689097, 0.025717097, 0.025745097, 0.025773097, 0.025801111, 0.025829125, 0.025857111, 0.025885111, 0.025913139, 0.025941...</msg>
<status status="PASS" starttime="20201115 22:59:54.054" endtime="20201115 22:59:54.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.072" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.071" endtime="20201115 22:59:54.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.075" level="INFO">VALUE: [2.368100000000109e-05, 2.311099999999927e-05, 2.288900000000163e-05, 2.2735999999998896e-05, 2.3000000000002185e-05, 2.3000000000002185e-05, 2.2736000000002365e-05, 2.2986000000002615e-05, 2.313899999999841e-05, 2.3264000000002005e-05, 2.3014000000001755e-05, 2.3013999999998286e-05, 2.3208000000000256e-05, 2.293100000000034e-05, 2.281900000000031e-05, 2.3208000000000256e-05, 2.294499999999991e-05, 2.3028000000001325e-05, 2.2778000000001075e-05, 2.2694000000000186e-05, 2.268100000000009e-05, 2.266700000000052e-05, 2.2792000000000645e-05, 2.3000000000002185e-05, 2.3028000000001325e-05, 2.2792000000000645e-05, 2.284699999999945e-05, 2.288900000000163e-05, 2.2777999999997606e-05, 2.3028000000001325e-05, 2.311100000000274e-05, 2.311099999999927e-05, 2.288899999999816e-05, 2.2985999999999146e-05, 2.295899999999948e-05, 2.3249999999998966e-05, 2.312499999999884e-05, 2.3263999999998536e-05, 2.316700000000102e-05, 2.2764000000001505e-05, 2.3056000000000465e-05, 2.3278000000001575e-05, 2.2792000000000645e-05, 2.297300000000252e-05, 2.32770000000021e-05, 2.326300000000253e-05, 2.2598000000002144e-05, 2.2791999999997176e-05, 2.308300000000013e-05, 2.3012999999998812e-05]</msg>
<status status="PASS" starttime="20201115 22:59:54.073" endtime="20201115 22:59:54.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.069" endtime="20201115 22:59:54.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.078" endtime="20201115 22:59:54.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.081" endtime="20201115 22:59:54.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.080" endtime="20201115 22:59:54.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.076" endtime="20201115 22:59:54.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.711" endtime="20201115 22:59:54.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.709" endtime="20201115 22:59:54.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.709" endtime="20201115 22:59:54.103"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.105" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.113" endtime="20201115 22:59:54.129"></status>
</kw>
<msg timestamp="20201115 22:59:54.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.112" endtime="20201115 22:59:54.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.130" endtime="20201115 22:59:54.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.133" endtime="20201115 22:59:54.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.109" endtime="20201115 22:59:54.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.107" endtime="20201115 22:59:54.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.142" endtime="20201115 22:59:54.428"></status>
</kw>
<msg timestamp="20201115 22:59:54.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024149875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024175028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.140" endtime="20201115 22:59:54.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024149875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024175028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.432" endtime="20201115 22:59:54.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.440" endtime="20201115 22:59:54.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.138" endtime="20201115 22:59:54.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.136" endtime="20201115 22:59:54.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.447" level="INFO">${RESULT} = [{'time': 0.024175028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.515299999999998e-05, 'source_diff': 2.515299999999998e-05}, {'time': 0.024204875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:54.444" endtime="20201115 22:59:54.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.461" level="INFO">${ACCURACY} = {'time': [0.024175028, 0.024204875, 0.024233944, 0.024262875, 0.024291875, 0.024320875, 0.024349875, 0.024378903, 0.024407903, 0.024436903, 0.024465903, 0.024494903, 0.024523889, 0.024552889, 0.024581...</msg>
<status status="PASS" starttime="20201115 22:59:54.448" endtime="20201115 22:59:54.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.465" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.464" endtime="20201115 22:59:54.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.468" level="INFO">VALUE: [2.515299999999998e-05, 2.4249999999999966e-05, 2.381900000000131e-05, 2.387499999999959e-05, 2.3986000000000146e-05, 2.412499999999984e-05, 2.3722000000000326e-05, 2.3722000000000326e-05, 2.418100000000159e-05, 2.4277999999999106e-05, 2.419500000000116e-05, 2.3763999999999036e-05, 2.411100000000027e-05, 2.3778000000002075e-05, 2.4069999999997566e-05, 2.416699999999855e-05, 2.420900000000073e-05, 2.4263999999999536e-05, 2.408300000000113e-05, 2.4014000000002755e-05, 2.412499999999984e-05, 2.3749999999999466e-05, 2.4278000000002575e-05, 2.3777999999998606e-05, 2.436099999999705e-05, 2.3735999999999896e-05, 2.423699999999987e-05, 2.3901999999999257e-05, 2.4152000000002977e-05, 2.423699999999987e-05, 2.3763999999999036e-05, 2.42230000000003e-05, 2.4013999999999286e-05, 2.388899999999916e-05, 2.4221999999997357e-05, 2.4236000000000396e-05, 2.381900000000131e-05, 2.4236000000000396e-05, 2.3915999999998827e-05, 2.3749999999999466e-05, 2.412499999999984e-05, 2.3999999999999716e-05, 2.4014000000002755e-05, 2.4068999999998092e-05, 2.40970000000007e-05, 2.4028000000002325e-05, 2.4082999999997662e-05, 2.383300000000088e-05, 2.405500000000199e-05, 2.420900000000073e-05]</msg>
<status status="PASS" starttime="20201115 22:59:54.466" endtime="20201115 22:59:54.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.462" endtime="20201115 22:59:54.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.472" endtime="20201115 22:59:54.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.475" endtime="20201115 22:59:54.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.473" endtime="20201115 22:59:54.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.470" endtime="20201115 22:59:54.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.106" endtime="20201115 22:59:54.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.104" endtime="20201115 22:59:54.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.103" endtime="20201115 22:59:54.496"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.499" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.507" endtime="20201115 22:59:54.522"></status>
</kw>
<msg timestamp="20201115 22:59:54.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.505" endtime="20201115 22:59:54.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.524" endtime="20201115 22:59:54.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.526" endtime="20201115 22:59:54.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.503" endtime="20201115 22:59:54.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.501" endtime="20201115 22:59:54.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.535" endtime="20201115 22:59:54.821"></status>
</kw>
<msg timestamp="20201115 22:59:54.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024209639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024235222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.534" endtime="20201115 22:59:54.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024209639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024235222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.825" endtime="20201115 22:59:54.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.833" endtime="20201115 22:59:54.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.531" endtime="20201115 22:59:54.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.529" endtime="20201115 22:59:54.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.840" level="INFO">${RESULT} = [{'time': 0.024235222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5582999999999162e-05, 'source_diff': 2.5582999999999162e-05}, {'time': 0.024265139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:54.837" endtime="20201115 22:59:54.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.854" level="INFO">${ACCURACY} = {'time': [0.024235222, 0.024265139, 0.024295056, 0.024325056, 0.024355069, 0.024385069, 0.024415069, 0.024445069, 0.024475097, 0.024505083, 0.024535083, 0.024565167, 0.024595097, 0.024625083, 0.024655...</msg>
<status status="PASS" starttime="20201115 22:59:54.841" endtime="20201115 22:59:54.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.858" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.857" endtime="20201115 22:59:54.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.861" level="INFO">VALUE: [2.5582999999999162e-05, 2.463899999999991e-05, 2.522299999999783e-05, 2.5056000000002465e-05, 2.5152000000000507e-05, 2.4957999999998537e-05, 2.5250000000000966e-05, 2.4750000000000466e-05, 2.490299999999973e-05, 2.4693999999998717e-05, 2.4929999999999397e-05, 2.515299999999998e-05, 2.4832999999998412e-05, 2.5110999999997802e-05, 2.513900000000041e-05, 2.5264000000000536e-05, 2.4943999999998967e-05, 2.4958000000002006e-05, 2.518099999999912e-05, 2.484700000000145e-05, 2.512500000000084e-05, 2.4957999999998537e-05, 2.4986000000001146e-05, 2.4986000000001146e-05, 2.484700000000145e-05, 2.5278000000000106e-05, 2.4722000000001326e-05, 2.5084000000001605e-05, 2.483300000000188e-05, 2.4764000000000036e-05, 2.5027999999999856e-05, 2.5082999999998662e-05, 2.5082999999998662e-05, 2.5278000000000106e-05, 2.4819999999998316e-05, 2.5264000000000536e-05, 2.486100000000102e-05, 2.5041999999999426e-05, 2.488900000000016e-05, 2.5250000000000966e-05, 2.5014000000000286e-05, 2.47230000000008e-05, 2.4805999999998746e-05, 2.4860999999997552e-05, 2.4777999999999606e-05, 2.4750000000000466e-05, 2.491700000000277e-05, 2.4986000000001146e-05, 2.512499999999737e-05, 2.5084000000001605e-05]</msg>
<status status="PASS" starttime="20201115 22:59:54.859" endtime="20201115 22:59:54.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.855" endtime="20201115 22:59:54.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.864" endtime="20201115 22:59:54.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.868" endtime="20201115 22:59:54.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.866" endtime="20201115 22:59:54.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.863" endtime="20201115 22:59:54.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.499" endtime="20201115 22:59:54.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.497" endtime="20201115 22:59:54.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.496" endtime="20201115 22:59:54.889"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.892" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.900" endtime="20201115 22:59:54.915"></status>
</kw>
<msg timestamp="20201115 22:59:54.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.898" endtime="20201115 22:59:54.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.916" endtime="20201115 22:59:54.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.919" endtime="20201115 22:59:54.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.896" endtime="20201115 22:59:54.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.894" endtime="20201115 22:59:54.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.928" endtime="20201115 22:59:55.213"></status>
</kw>
<msg timestamp="20201115 22:59:55.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024323167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024349528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.926" endtime="20201115 22:59:55.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024323167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024349528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.217" endtime="20201115 22:59:55.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.226" endtime="20201115 22:59:55.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.924" endtime="20201115 22:59:55.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.922" endtime="20201115 22:59:55.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.232" level="INFO">${RESULT} = [{'time': 0.024349528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6360999999999052e-05, 'source_diff': 2.6360999999999052e-05}, {'time': 0.024381347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:55.229" endtime="20201115 22:59:55.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.246" level="INFO">${ACCURACY} = {'time': [0.024349528, 0.024381347, 0.024412361, 0.024443375, 0.024474361, 0.024505361, 0.024536375, 0.024567361, 0.024598361, 0.024629375, 0.024660389, 0.024691375, 0.024722375, 0.024753375, 0.024784...</msg>
<status status="PASS" starttime="20201115 22:59:55.234" endtime="20201115 22:59:55.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.251" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.250" endtime="20201115 22:59:55.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.253" level="INFO">VALUE: [2.6360999999999052e-05, 2.615300000000098e-05, 2.6235999999998927e-05, 2.6319000000000342e-05, 2.5846999999998982e-05, 2.590300000000073e-05, 2.5846999999998982e-05, 2.5874999999998122e-05, 2.6249999999998497e-05, 2.6277999999997637e-05, 2.5722000000002326e-05, 2.6014000000001286e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.6069000000000092e-05, 2.5860999999998552e-05, 2.59170000000003e-05, 2.6083999999999136e-05, 2.5985999999998677e-05, 2.5846999999998982e-05, 2.6194000000000217e-05, 2.6041999999996956e-05, 2.619500000000316e-05, 2.6221999999999357e-05, 2.5750000000001466e-05, 2.584700000000245e-05, 2.5986000000002146e-05, 2.6097999999998706e-05, 2.6249999999998497e-05, 2.5735999999998427e-05, 2.6013999999997817e-05, 2.6235999999998927e-05, 2.588899999999769e-05, 2.6055999999999996e-05, 2.6027000000001382e-05, 2.5862000000001495e-05, 2.6028000000000856e-05, 2.6084000000002605e-05, 2.6207999999999787e-05, 2.6041000000000952e-05, 2.6082999999999662e-05, 2.588900000000116e-05, 2.5791000000000702e-05, 2.5943999999999967e-05, 2.6012999999998343e-05, 2.5790999999997233e-05, 2.6263999999998067e-05, 2.588899999999769e-05, 2.6264000000001536e-05, 2.611100000000227e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.252" endtime="20201115 22:59:55.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.247" endtime="20201115 22:59:55.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.257" endtime="20201115 22:59:55.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.260" endtime="20201115 22:59:55.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.258" endtime="20201115 22:59:55.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.255" endtime="20201115 22:59:55.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.892" endtime="20201115 22:59:55.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.890" endtime="20201115 22:59:55.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.889" endtime="20201115 22:59:55.281"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.284" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.292" endtime="20201115 22:59:55.308"></status>
</kw>
<msg timestamp="20201115 22:59:55.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.290" endtime="20201115 22:59:55.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.309" endtime="20201115 22:59:55.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.312" endtime="20201115 22:59:55.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.288" endtime="20201115 22:59:55.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.286" endtime="20201115 22:59:55.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.321" endtime="20201115 22:59:55.616"></status>
</kw>
<msg timestamp="20201115 22:59:55.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024885319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.319" endtime="20201115 22:59:55.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024885319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.620" endtime="20201115 22:59:55.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.629" endtime="20201115 22:59:55.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.317" endtime="20201115 22:59:55.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.315" endtime="20201115 22:59:55.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.636" level="INFO">${RESULT} = [{'time': 0.024885319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7387999999999718e-05, 'source_diff': 2.7387999999999718e-05}, {'time': 0.024918153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:55.632" endtime="20201115 22:59:55.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.650" level="INFO">${ACCURACY} = {'time': [0.024885319, 0.024918153, 0.024950153, 0.024982167, 0.025014153, 0.025046181, 0.025078167, 0.025110181, 0.025142167, 0.025174181, 0.025206167, 0.025238194, 0.025270194, 0.025302222, 0.025334...</msg>
<status status="PASS" starttime="20201115 22:59:55.637" endtime="20201115 22:59:55.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.655" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.654" endtime="20201115 22:59:55.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.657" level="INFO">VALUE: [2.7387999999999718e-05, 2.7055999999997526e-05, 2.6749999999998997e-05, 2.7041999999997957e-05, 2.7222000000000357e-05, 2.722299999999983e-05, 2.6860999999999552e-05, 2.6777999999998137e-05, 2.6847999999999456e-05, 2.720900000000026e-05, 2.697300000000305e-05, 2.7179999999998178e-05, 2.7124999999999372e-05, 2.6929999999997928e-05, 2.7041000000001952e-05, 2.719500000000069e-05, 2.6804999999997803e-05, 2.7110999999999802e-05, 2.6999999999999247e-05, 2.7055000000001522e-05, 2.7263999999999067e-05, 2.7012999999999343e-05, 2.6958000000000537e-05, 2.7263999999999067e-05, 2.6721999999999857e-05, 2.7165999999998608e-05, 2.7276999999999163e-05, 2.6833000000000412e-05, 2.7278000000002106e-05, 2.6764000000002036e-05, 2.6860999999999552e-05, 2.690299999999826e-05, 2.6958000000000537e-05, 2.7041000000001952e-05, 2.6694000000000717e-05, 2.7069000000001092e-05, 2.7124999999999372e-05, 2.7277999999998637e-05, 2.665300000000148e-05, 2.6736000000002896e-05, 2.7041000000001952e-05, 2.7222000000000357e-05, 2.6791000000001702e-05, 2.6985999999999677e-05, 2.6820000000000316e-05, 2.7138999999998942e-05, 2.7124999999999372e-05, 2.6860999999999552e-05, 2.720900000000026e-05, 2.713900000000241e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.656" endtime="20201115 22:59:55.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.651" endtime="20201115 22:59:55.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.661" endtime="20201115 22:59:55.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.664" endtime="20201115 22:59:55.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.662" endtime="20201115 22:59:55.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.659" endtime="20201115 22:59:55.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.284" endtime="20201115 22:59:55.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.282" endtime="20201115 22:59:55.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.282" endtime="20201115 22:59:55.685"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.688" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.696" endtime="20201115 22:59:55.711"></status>
</kw>
<msg timestamp="20201115 22:59:55.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.694" endtime="20201115 22:59:55.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.713" endtime="20201115 22:59:55.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.715" endtime="20201115 22:59:55.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.692" endtime="20201115 22:59:55.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.690" endtime="20201115 22:59:55.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.725" endtime="20201115 22:59:56.011"></status>
</kw>
<msg timestamp="20201115 22:59:56.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024108417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024137319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.723" endtime="20201115 22:59:56.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024108417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024137319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.015" endtime="20201115 22:59:56.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.024" endtime="20201115 22:59:56.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.720" endtime="20201115 22:59:56.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.719" endtime="20201115 22:59:56.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.031" level="INFO">${RESULT} = [{'time': 0.024137319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8902000000000788e-05, 'source_diff': 2.8902000000000788e-05}, {'time': 0.024170167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:56.027" endtime="20201115 22:59:56.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.044" level="INFO">${ACCURACY} = {'time': [0.024137319, 0.024170167, 0.024203153, 0.024236167, 0.024269222, 0.024302167, 0.024335181, 0.024368181, 0.024401194, 0.024434181, 0.024467181, 0.02450025, 0.024533181, 0.024566181, 0.0245992...</msg>
<status status="PASS" starttime="20201115 22:59:56.032" endtime="20201115 22:59:56.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.049" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.048" endtime="20201115 22:59:56.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.051" level="INFO">VALUE: [2.8902000000000788e-05, 2.7598000000000206e-05, 2.8264000000000067e-05, 2.7902999999999262e-05, 2.8097000000001232e-05, 2.7888999999999692e-05, 2.8250000000000497e-05, 2.7834000000000886e-05, 2.8026999999999913e-05, 2.7791999999998707e-05, 2.7848000000000456e-05, 2.8097000000001232e-05, 2.79170000000023e-05, 2.820899999999779e-05, 2.7790999999999233e-05, 2.8000000000000247e-05, 2.8069000000002092e-05, 2.8068999999998623e-05, 2.7861000000000552e-05, 2.8125000000000372e-05, 2.7805000000002272e-05, 2.7736000000000427e-05, 2.7916000000002827e-05, 2.8193999999998748e-05, 2.7847000000000982e-05, 2.7763999999999567e-05, 2.8180000000002647e-05, 2.8097000000001232e-05, 2.7930000000002397e-05, 2.8236000000000927e-05, 2.7944000000001967e-05, 2.8096999999997763e-05, 2.8138999999999942e-05, 2.8027999999999387e-05, 2.7763999999999567e-05, 2.7721999999997388e-05, 2.7694000000001717e-05, 2.7888999999999692e-05, 2.8138999999999942e-05, 2.8250000000000497e-05, 2.793100000000187e-05, 2.7777999999999137e-05, 2.7972000000001107e-05, 2.7875000000000122e-05, 2.8013999999999817e-05, 2.7846999999997513e-05, 2.822300000000083e-05, 2.7957999999998068e-05, 2.8097000000001232e-05, 2.7763999999999567e-05]</msg>
<status status="PASS" starttime="20201115 22:59:56.050" endtime="20201115 22:59:56.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.045" endtime="20201115 22:59:56.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.054" endtime="20201115 22:59:56.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.058" endtime="20201115 22:59:56.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.056" endtime="20201115 22:59:56.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.053" endtime="20201115 22:59:56.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.688" endtime="20201115 22:59:56.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.686" endtime="20201115 22:59:56.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.685" endtime="20201115 22:59:56.079"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.081" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.090" endtime="20201115 22:59:56.104"></status>
</kw>
<msg timestamp="20201115 22:59:56.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.088" endtime="20201115 22:59:56.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.106" endtime="20201115 22:59:56.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.109" endtime="20201115 22:59:56.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.085" endtime="20201115 22:59:56.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.083" endtime="20201115 22:59:56.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.118" endtime="20201115 22:59:56.403"></status>
</kw>
<msg timestamp="20201115 22:59:56.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024143014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024172611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.117" endtime="20201115 22:59:56.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024143014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024172611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.408" endtime="20201115 22:59:56.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.416" endtime="20201115 22:59:56.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.114" endtime="20201115 22:59:56.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.112" endtime="20201115 22:59:56.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.423" level="INFO">${RESULT} = [{'time': 0.024172611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9596999999999263e-05, 'source_diff': 2.9596999999999263e-05}, {'time': 0.024207486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:56.420" endtime="20201115 22:59:56.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.436" level="INFO">${ACCURACY} = {'time': [0.024172611, 0.024207486, 0.024241444, 0.024275458, 0.024309444, 0.024343444, 0.024377528, 0.024411458, 0.024445458, 0.024479458, 0.024513458, 0.024547472, 0.024581458, 0.024615472, 0.024649...</msg>
<status status="PASS" starttime="20201115 22:59:56.424" endtime="20201115 22:59:56.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.441" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.440" endtime="20201115 22:59:56.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.444" level="INFO">VALUE: [2.9596999999999263e-05, 2.9430000000000428e-05, 2.8763000000001093e-05, 2.8846999999998513e-05, 2.8721999999998388e-05, 2.8762999999997624e-05, 2.9167000000000082e-05, 2.9277000000001163e-05, 2.8791000000000233e-05, 2.8818999999999373e-05, 2.8888999999997222e-05, 2.8722000000001857e-05, 2.8916000000000358e-05, 2.9014000000000817e-05, 2.9125000000001372e-05, 2.8958000000002537e-05, 2.8957999999999068e-05, 2.9180000000000178e-05, 2.9055000000000053e-05, 2.8819000000002842e-05, 2.8875000000001122e-05, 2.9068999999999623e-05, 2.8846999999998513e-05, 2.9013999999997347e-05, 2.8875000000001122e-05, 2.8889000000000692e-05, 2.8903000000000262e-05, 2.9096999999998763e-05, 2.8791999999999707e-05, 2.8750000000000997e-05, 2.8875000000001122e-05, 2.9221999999998888e-05, 2.9305999999999777e-05, 2.8750000000000997e-05, 2.8889000000000692e-05, 2.8860999999998083e-05, 2.8778000000000137e-05, 2.922300000000183e-05, 2.8903000000000262e-05, 2.9069999999999097e-05, 2.894499999999897e-05, 2.9042000000003426e-05, 2.9292000000000207e-05, 2.9250000000001497e-05, 2.9249999999998028e-05, 2.897299999999811e-05, 2.9082999999999193e-05, 2.9098000000001706e-05, 2.8791999999999707e-05, 2.9069999999999097e-05]</msg>
<status status="PASS" starttime="20201115 22:59:56.442" endtime="20201115 22:59:56.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.437" endtime="20201115 22:59:56.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.447" endtime="20201115 22:59:56.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.451" endtime="20201115 22:59:56.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.450" endtime="20201115 22:59:56.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.445" endtime="20201115 22:59:56.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.082" endtime="20201115 22:59:56.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.080" endtime="20201115 22:59:56.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.079" endtime="20201115 22:59:56.473"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.475" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.484" endtime="20201115 22:59:56.499"></status>
</kw>
<msg timestamp="20201115 22:59:56.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.482" endtime="20201115 22:59:56.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.500" endtime="20201115 22:59:56.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.503" endtime="20201115 22:59:56.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.480" endtime="20201115 22:59:56.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.477" endtime="20201115 22:59:56.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.512" endtime="20201115 22:59:56.798"></status>
</kw>
<msg timestamp="20201115 22:59:56.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024993069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025023972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.510" endtime="20201115 22:59:56.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024993069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025023972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.802" endtime="20201115 22:59:56.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.810" endtime="20201115 22:59:56.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.508" endtime="20201115 22:59:56.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.506" endtime="20201115 22:59:56.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.817" level="INFO">${RESULT} = [{'time': 0.025023972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.090299999999879e-05, 'source_diff': 3.090299999999879e-05}, {'time': 0.025059819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:56.814" endtime="20201115 22:59:56.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.830" level="INFO">${ACCURACY} = {'time': [0.025023972, 0.025059819, 0.025094875, 0.025129819, 0.025164819, 0.025199833, 0.025234833, 0.025269833, 0.025304833, 0.025339833, 0.025374833, 0.025409847, 0.025444861, 0.025479847, 0.025514...</msg>
<status status="PASS" starttime="20201115 22:59:56.818" endtime="20201115 22:59:56.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.835" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.834" endtime="20201115 22:59:56.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.838" level="INFO">VALUE: [3.090299999999879e-05, 3.0124999999998903e-05, 2.9860999999999083e-05, 2.9971999999999638e-05, 3.0166000000001608e-05, 3.0014000000001817e-05, 2.9902000000001788e-05, 2.9721999999999388e-05, 2.992999999999746e-05, 2.9819000000000373e-05, 2.9944000000000498e-05, 2.9888999999998223e-05, 2.9819000000000373e-05, 3.0028000000001387e-05, 3.0263999999998598e-05, 3.0208000000000318e-05, 3.0056000000000527e-05, 2.9750000000001997e-05, 2.9958000000000068e-05, 2.9694000000000248e-05, 2.9792000000000707e-05, 3.0153000000001512e-05, 3.0235999999999458e-05, 3.0138999999998473e-05, 2.9764000000001567e-05, 3.0070000000000097e-05, 3.0027999999997917e-05, 3.0249999999999028e-05, 2.9832999999999943e-05, 3.0181000000000652e-05, 3.0124999999998903e-05, 2.9917000000000832e-05, 2.9806000000000277e-05, 3.0153000000001512e-05, 2.970900000000276e-05, 2.9931000000000402e-05, 3.0069999999996627e-05, 3.0125000000002372e-05, 2.972299999999886e-05, 2.9819999999999847e-05, 2.9999999999998778e-05, 2.9721999999999388e-05, 3.0166999999997612e-05, 3.0042000000000957e-05, 3.0194000000000748e-05, 2.988799999999875e-05, 2.9846999999999513e-05, 3.0139000000001942e-05, 3.0152000000002038e-05, 2.9861000000002552e-05]</msg>
<status status="PASS" starttime="20201115 22:59:56.836" endtime="20201115 22:59:56.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.831" endtime="20201115 22:59:56.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.841" endtime="20201115 22:59:56.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.845" endtime="20201115 22:59:56.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.843" endtime="20201115 22:59:56.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.839" endtime="20201115 22:59:56.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.476" endtime="20201115 22:59:56.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.474" endtime="20201115 22:59:56.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.473" endtime="20201115 22:59:56.866"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.868" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.876" endtime="20201115 22:59:56.894"></status>
</kw>
<msg timestamp="20201115 22:59:56.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.875" endtime="20201115 22:59:56.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.895" endtime="20201115 22:59:56.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.898" endtime="20201115 22:59:56.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.872" endtime="20201115 22:59:56.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.870" endtime="20201115 22:59:56.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.907" endtime="20201115 22:59:57.193"></status>
</kw>
<msg timestamp="20201115 22:59:57.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025114056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025146181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.905" endtime="20201115 22:59:57.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025114056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025146181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.197" endtime="20201115 22:59:57.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.205" endtime="20201115 22:59:57.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.903" endtime="20201115 22:59:57.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.901" endtime="20201115 22:59:57.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.212" level="INFO">${RESULT} = [{'time': 0.025146181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.21250000000009e-05, 'source_diff': 3.21250000000009e-05}, {'time': 0.025182014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:59:57.209" endtime="20201115 22:59:57.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.227" level="INFO">${ACCURACY} = {'time': [0.025146181, 0.025182014, 0.025218014, 0.025254014, 0.025290042, 0.025326028, 0.025362028, 0.025398083, 0.025434042, 0.025470056, 0.025506042, 0.025542042, 0.025578056, 0.025614056, 0.025650...</msg>
<status status="PASS" starttime="20201115 22:59:57.213" endtime="20201115 22:59:57.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.231" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.230" endtime="20201115 22:59:57.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.234" level="INFO">VALUE: [3.21250000000009e-05, 3.058300000000069e-05, 3.069500000000072e-05, 3.091700000000183e-05, 3.123599999999699e-05, 3.111100000000033e-05, 3.080599999999781e-05, 3.120799999999785e-05, 3.118100000000165e-05, 3.0750000000003e-05, 3.070900000000029e-05, 3.090300000000226e-05, 3.095899999999707e-05, 3.125000000000003e-05, 3.127800000000264e-05, 3.080599999999781e-05, 3.102799999999892e-05, 3.101400000000282e-05, 3.091699999999836e-05, 3.119400000000175e-05, 3.122199999999742e-05, 3.1054999999998584e-05, 3.077700000000266e-05, 3.116599999999914e-05, 3.077799999999867e-05, 3.116600000000261e-05, 3.0790999999998764e-05, 3.0776999999999194e-05, 3.084700000000051e-05, 3.101399999999935e-05, 3.077799999999867e-05, 3.09440000000015e-05, 3.073599999999996e-05, 3.101399999999935e-05, 3.086100000000008e-05, 3.097200000000064e-05, 3.104200000000196e-05, 3.087499999999965e-05, 3.108300000000119e-05, 3.088900000000269e-05, 3.0846999999997043e-05, 3.095800000000107e-05, 3.084700000000051e-05, 3.115299999999904e-05, 3.118100000000165e-05, 3.123600000000046e-05, 3.111100000000033e-05, 3.080600000000128e-05, 3.119499999999775e-05, 3.070800000000082e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.232" endtime="20201115 22:59:57.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.228" endtime="20201115 22:59:57.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.237" endtime="20201115 22:59:57.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.241" endtime="20201115 22:59:57.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.239" endtime="20201115 22:59:57.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.236" endtime="20201115 22:59:57.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.869" endtime="20201115 22:59:57.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.867" endtime="20201115 22:59:57.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.866" endtime="20201115 22:59:57.262"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.264" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.273" endtime="20201115 22:59:57.288"></status>
</kw>
<msg timestamp="20201115 22:59:57.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.271" endtime="20201115 22:59:57.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.289" endtime="20201115 22:59:57.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.292" endtime="20201115 22:59:57.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.268" endtime="20201115 22:59:57.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.266" endtime="20201115 22:59:57.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.301" endtime="20201115 22:59:57.587"></status>
</kw>
<msg timestamp="20201115 22:59:57.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024085875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024119069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.299" endtime="20201115 22:59:57.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024085875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024119069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.591" endtime="20201115 22:59:57.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.599" endtime="20201115 22:59:57.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.297" endtime="20201115 22:59:57.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.295" endtime="20201115 22:59:57.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.606" level="INFO">${RESULT} = [{'time': 0.024119069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.319400000000028e-05, 'source_diff': 3.319400000000028e-05}, {'time': 0.024155917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:57.602" endtime="20201115 22:59:57.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.619" level="INFO">${ACCURACY} = {'time': [0.024119069, 0.024155917, 0.024192917, 0.024229931, 0.024266931, 0.024303931, 0.024340931, 0.024377944, 0.024414931, 0.024451931, 0.024488931, 0.024525944, 0.024562958, 0.024599958, 0.024636...</msg>
<status status="PASS" starttime="20201115 22:59:57.607" endtime="20201115 22:59:57.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.624" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.623" endtime="20201115 22:59:57.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.627" level="INFO">VALUE: [3.319400000000028e-05, 3.154199999999899e-05, 3.197300000000111e-05, 3.184800000000099e-05, 3.172299999999739e-05, 3.194500000000197e-05, 3.197300000000111e-05, 3.217999999999971e-05, 3.200000000000078e-05, 3.2112000000000807e-05, 3.209799999999777e-05, 3.2138000000001e-05, 3.222199999999842e-05, 3.181900000000237e-05, 3.229199999999974e-05, 3.175000000000053e-05, 3.195800000000207e-05, 3.2068999999999154e-05, 3.194399999999903e-05, 3.198600000000121e-05, 3.219399999999928e-05, 3.17640000000001e-05, 3.216699999999961e-05, 3.216600000000014e-05, 3.215300000000004e-05, 3.2068999999999154e-05, 3.186100000000108e-05, 3.177800000000314e-05, 3.216699999999961e-05, 3.179200000000271e-05, 3.191699999999936e-05, 3.172200000000139e-05, 3.179199999999924e-05, 3.195800000000207e-05, 3.177799999999967e-05, 3.222199999999842e-05, 3.216700000000308e-05, 3.197299999999764e-05, 3.205600000000253e-05, 3.183400000000142e-05, 3.197299999999764e-05, 3.169499999999825e-05, 3.213900000000047e-05, 3.206999999999863e-05, 3.184700000000151e-05, 3.17640000000001e-05, 3.191699999999936e-05, 3.17640000000001e-05, 3.186100000000108e-05, 3.201399999999688e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.625" endtime="20201115 22:59:57.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.620" endtime="20201115 22:59:57.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.630" endtime="20201115 22:59:57.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.633" endtime="20201115 22:59:57.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.632" endtime="20201115 22:59:57.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.628" endtime="20201115 22:59:57.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.265" endtime="20201115 22:59:57.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.263" endtime="20201115 22:59:57.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.262" endtime="20201115 22:59:57.655"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.657" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.665" endtime="20201115 22:59:57.681"></status>
</kw>
<msg timestamp="20201115 22:59:57.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.664" endtime="20201115 22:59:57.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.682" endtime="20201115 22:59:57.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.685" endtime="20201115 22:59:57.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.661" endtime="20201115 22:59:57.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.659" endtime="20201115 22:59:57.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.694" endtime="20201115 22:59:57.979"></status>
</kw>
<msg timestamp="20201115 22:59:57.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024161667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024195917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.692" endtime="20201115 22:59:57.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024161667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024195917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.983" endtime="20201115 22:59:57.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.992" endtime="20201115 22:59:57.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.690" endtime="20201115 22:59:57.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.688" endtime="20201115 22:59:57.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.999" level="INFO">${RESULT} = [{'time': 0.024195917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.424999999999956e-05, 'source_diff': 3.424999999999956e-05}, {'time': 0.024234764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:57.995" endtime="20201115 22:59:57.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.012" level="INFO">${ACCURACY} = {'time': [0.024195917, 0.024234764, 0.02427275, 0.024310764, 0.024348764, 0.024386778, 0.024424764, 0.024462778, 0.024500792, 0.024538792, 0.024576778, 0.024614778, 0.024652792, 0.024690792, 0.0247288...</msg>
<status status="PASS" starttime="20201115 22:59:58.000" endtime="20201115 22:59:58.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.017" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.016" endtime="20201115 22:59:58.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.020" level="INFO">VALUE: [3.424999999999956e-05, 3.341699999999739e-05, 3.298599999999874e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.320900000000279e-05, 3.297200000000264e-05, 3.298600000000221e-05, 3.300000000000178e-05, 3.304200000000049e-05, 3.291700000000036e-05, 3.2846999999999044e-05, 3.329200000000074e-05, 3.322299999999889e-05, 3.300000000000178e-05, 3.288899999999775e-05, 3.297299999999864e-05, 3.3055000000000584e-05, 3.326399999999813e-05, 3.305600000000006e-05, 3.275000000000153e-05, 3.301400000000135e-05, 3.316600000000114e-05, 3.301400000000135e-05, 3.3082999999999724e-05, 3.320799999999985e-05, 3.291600000000089e-05, 3.316600000000114e-05, 3.3124999999998433e-05, 3.322199999999942e-05, 3.3110999999998864e-05, 3.297199999999917e-05, 3.290299999999732e-05, 3.291599999999742e-05, 3.276399999999763e-05, 3.276399999999763e-05, 3.2791000000000764e-05, 3.270799999999935e-05, 3.300000000000178e-05, 3.297199999999917e-05, 3.3055000000000584e-05, 3.316700000000061e-05, 3.322199999999942e-05, 3.319499999999975e-05, 3.276399999999763e-05, 3.2860999999998614e-05, 3.323599999999899e-05, 3.3082999999999724e-05, 3.2832999999999474e-05, 3.319400000000028e-05]</msg>
<status status="PASS" starttime="20201115 22:59:58.018" endtime="20201115 22:59:58.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.013" endtime="20201115 22:59:58.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.023" endtime="20201115 22:59:58.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.026" endtime="20201115 22:59:58.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.025" endtime="20201115 22:59:58.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.021" endtime="20201115 22:59:58.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.658" endtime="20201115 22:59:58.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.656" endtime="20201115 22:59:58.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.655" endtime="20201115 22:59:58.047"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.050" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.058" endtime="20201115 22:59:58.075"></status>
</kw>
<msg timestamp="20201115 22:59:58.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.056" endtime="20201115 22:59:58.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.076" endtime="20201115 22:59:58.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.079" endtime="20201115 22:59:58.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.054" endtime="20201115 22:59:58.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.052" endtime="20201115 22:59:58.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.088" endtime="20201115 22:59:58.373"></status>
</kw>
<msg timestamp="20201115 22:59:58.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024488931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024523847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.086" endtime="20201115 22:59:58.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024488931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024523847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.378" endtime="20201115 22:59:58.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.395" endtime="20201115 22:59:58.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.084" endtime="20201115 22:59:58.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.082" endtime="20201115 22:59:58.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.402" level="INFO">${RESULT} = [{'time': 0.024523847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.491600000000289e-05, 'source_diff': 3.491600000000289e-05}, {'time': 0.024562667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:58.399" endtime="20201115 22:59:58.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.416" level="INFO">${ACCURACY} = {'time': [0.024523847, 0.024562667, 0.024601667, 0.024640681, 0.024679667, 0.024718681, 0.024757681, 0.024796681, 0.024835681, 0.024874694, 0.024913681, 0.024952694, 0.024991708, 0.025030694, 0.025069...</msg>
<status status="PASS" starttime="20201115 22:59:58.403" endtime="20201115 22:59:58.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.420" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.419" endtime="20201115 22:59:58.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.423" level="INFO">VALUE: [3.491600000000289e-05, 3.355600000000056e-05, 3.391700000000136e-05, 3.401400000000235e-05, 3.419499999999728e-05, 3.379199999999777e-05, 3.3874999999999184e-05, 3.416700000000161e-05, 3.4138999999999003e-05, 3.397200000000017e-05, 3.374999999999906e-05, 3.391600000000189e-05, 3.386100000000308e-05, 3.388799999999928e-05, 3.3776999999998725e-05, 3.4124999999999434e-05, 3.37640000000021e-05, 3.415300000000204e-05, 3.419399999999781e-05, 3.401399999999888e-05, 3.418000000000171e-05, 3.419400000000128e-05, 3.4054999999998115e-05, 3.433400000000045e-05, 3.376399999999863e-05, 3.4097000000000294e-05, 3.420799999999738e-05, 3.401400000000235e-05, 3.372199999999992e-05, 3.3860999999999614e-05, 3.3832999999997004e-05, 3.404199999999802e-05, 3.432000000000088e-05, 3.380600000000081e-05, 3.390300000000179e-05, 3.379200000000124e-05, 3.402799999999845e-05, 3.429199999999827e-05, 3.39580000000006e-05, 3.425000000000303e-05, 3.4124999999999434e-05, 3.40840000000002e-05, 3.372199999999992e-05, 3.398599999999974e-05, 3.405599999999759e-05, 3.402799999999845e-05, 3.4124999999999434e-05, 3.4304999999998365e-05, 3.397299999999964e-05, 3.3888999999998753e-05]</msg>
<status status="PASS" starttime="20201115 22:59:58.422" endtime="20201115 22:59:58.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.417" endtime="20201115 22:59:58.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.426" endtime="20201115 22:59:58.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.430" endtime="20201115 22:59:58.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.428" endtime="20201115 22:59:58.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.424" endtime="20201115 22:59:58.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.050" endtime="20201115 22:59:58.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.049" endtime="20201115 22:59:58.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.048" endtime="20201115 22:59:58.451"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.453" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.461" endtime="20201115 22:59:58.478"></status>
</kw>
<msg timestamp="20201115 22:59:58.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.460" endtime="20201115 22:59:58.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.479" endtime="20201115 22:59:58.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.482" endtime="20201115 22:59:58.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.457" endtime="20201115 22:59:58.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.455" endtime="20201115 22:59:58.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.492" endtime="20201115 22:59:58.779"></status>
</kw>
<msg timestamp="20201115 22:59:58.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02501175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025047625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:58.490" endtime="20201115 22:59:58.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02501175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025047625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:58.783" endtime="20201115 22:59:58.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.791" endtime="20201115 22:59:58.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.488" endtime="20201115 22:59:58.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.486" endtime="20201115 22:59:58.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.798" level="INFO">${RESULT} = [{'time': 0.025047625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5875000000001184e-05, 'source_diff': 3.5875000000001184e-05}, {'time': 0.025088472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:58.795" endtime="20201115 22:59:58.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.813" level="INFO">${ACCURACY} = {'time': [0.025047625, 0.025088472, 0.025128472, 0.025168472, 0.025208472, 0.025248486, 0.0252885, 0.025328486, 0.025368486, 0.0254085, 0.025448514, 0.0254885, 0.0255285, 0.025568514, 0.025608514, 0.0...</msg>
<status status="PASS" starttime="20201115 22:59:58.799" endtime="20201115 22:59:58.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.817" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.816" endtime="20201115 22:59:58.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.820" level="INFO">VALUE: [3.5875000000001184e-05, 3.5402999999999823e-05, 3.47779999999992e-05, 3.4805000000002334e-05, 3.49719999999977e-05, 3.52779999999997e-05, 3.504199999999902e-05, 3.4888999999999754e-05, 3.4902999999999323e-05, 3.4847000000001044e-05, 3.524999999999709e-05, 3.4847000000001044e-05, 3.4888999999999754e-05, 3.473600000000049e-05, 3.501399999999988e-05, 3.475000000000006e-05, 3.526400000000013e-05, 3.5152999999999573e-05, 3.5125000000000434e-05, 3.502799999999945e-05, 3.522199999999795e-05, 3.472200000000092e-05, 3.479199999999877e-05, 3.50840000000012e-05, 3.5152999999999573e-05, 3.519500000000175e-05, 3.498600000000074e-05, 3.4875000000000184e-05, 3.500000000000031e-05, 3.494400000000203e-05, 3.470900000000082e-05, 3.518100000000218e-05, 3.472200000000092e-05, 3.4819000000001904e-05, 3.520799999999838e-05, 3.490200000000332e-05, 3.476399999999963e-05, 3.526400000000013e-05, 3.4888999999999754e-05, 3.472200000000092e-05, 3.500000000000031e-05, 3.525000000000056e-05, 3.525000000000056e-05, 3.504200000000249e-05, 3.525000000000056e-05, 3.5082999999998254e-05, 3.47779999999992e-05, 3.5139000000000004e-05, 3.475000000000006e-05, 3.4875000000000184e-05]</msg>
<status status="PASS" starttime="20201115 22:59:58.819" endtime="20201115 22:59:58.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.814" endtime="20201115 22:59:58.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.823" endtime="20201115 22:59:58.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.827" endtime="20201115 22:59:58.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.825" endtime="20201115 22:59:58.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.821" endtime="20201115 22:59:58.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.454" endtime="20201115 22:59:58.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.452" endtime="20201115 22:59:58.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.451" endtime="20201115 22:59:58.848"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.850" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.858" endtime="20201115 22:59:58.875"></status>
</kw>
<msg timestamp="20201115 22:59:58.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.857" endtime="20201115 22:59:58.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.876" endtime="20201115 22:59:58.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.879" endtime="20201115 22:59:58.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.854" endtime="20201115 22:59:58.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.852" endtime="20201115 22:59:58.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.889" endtime="20201115 22:59:59.175"></status>
</kw>
<msg timestamp="20201115 22:59:59.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024256139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024292958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.887" endtime="20201115 22:59:59.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024256139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024292958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.179" endtime="20201115 22:59:59.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.187" endtime="20201115 22:59:59.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.885" endtime="20201115 22:59:59.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.883" endtime="20201115 22:59:59.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.194" level="INFO">${RESULT} = [{'time': 0.024292958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6819000000000435e-05, 'source_diff': 3.6819000000000435e-05}, {'time': 0.024334792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:59.191" endtime="20201115 22:59:59.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.208" level="INFO">${ACCURACY} = {'time': [0.024292958, 0.024334792, 0.024375819, 0.024416778, 0.024457792, 0.024498792, 0.024539806, 0.024580792, 0.024621792, 0.024662806, 0.024703861, 0.024744861, 0.024785819, 0.024826819, 0.024867...</msg>
<status status="PASS" starttime="20201115 22:59:59.195" endtime="20201115 22:59:59.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.212" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.211" endtime="20201115 22:59:59.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.215" level="INFO">VALUE: [3.6819000000000435e-05, 3.619499999999928e-05, 3.594399999999956e-05, 3.59589999999986e-05, 3.581999999999891e-05, 3.619499999999928e-05, 3.57780000000002e-05, 3.600000000000131e-05, 3.580599999999934e-05, 3.6167000000000143e-05, 3.5832999999999005e-05, 3.622199999999895e-05, 3.5861000000001614e-05, 3.6068999999999685e-05, 3.597200000000217e-05, 3.598599999999827e-05, 3.59580000000026e-05, 3.597200000000217e-05, 3.5860999999998144e-05, 3.5819000000002904e-05, 3.601399999999741e-05, 3.6027000000000975e-05, 3.600000000000131e-05, 3.5832999999999005e-05, 3.618000000000024e-05, 3.6152999999997104e-05, 3.591600000000042e-05, 3.602800000000045e-05, 3.6152999999997104e-05, 3.622199999999895e-05, 3.5875000000001184e-05, 3.5847000000002044e-05, 3.594399999999956e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.572200000000192e-05, 3.570900000000182e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6180999999999713e-05, 3.618100000000318e-05, 3.593099999999946e-05, 3.606999999999916e-05, 3.624999999999809e-05, 3.5903000000000324e-05, 3.623600000000199e-05, 3.6055000000000115e-05, 3.576400000000063e-05, 3.599999999999784e-05, 3.611200000000134e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.213" endtime="20201115 22:59:59.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.208" endtime="20201115 22:59:59.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.218" endtime="20201115 22:59:59.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.221" endtime="20201115 22:59:59.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.220" endtime="20201115 22:59:59.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.216" endtime="20201115 22:59:59.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.851" endtime="20201115 22:59:59.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.849" endtime="20201115 22:59:59.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.848" endtime="20201115 22:59:59.242"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.245" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.253" endtime="20201115 22:59:59.269"></status>
</kw>
<msg timestamp="20201115 22:59:59.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.252" endtime="20201115 22:59:59.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.270" endtime="20201115 22:59:59.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.273" endtime="20201115 22:59:59.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.249" endtime="20201115 22:59:59.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.247" endtime="20201115 22:59:59.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.282" endtime="20201115 22:59:59.567"></status>
</kw>
<msg timestamp="20201115 22:59:59.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024592986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024631264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.280" endtime="20201115 22:59:59.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024592986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024631264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.571" endtime="20201115 22:59:59.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.580" endtime="20201115 22:59:59.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.278" endtime="20201115 22:59:59.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.276" endtime="20201115 22:59:59.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.586" level="INFO">${RESULT} = [{'time': 0.024631264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.827799999999923e-05, 'source_diff': 3.827799999999923e-05}, {'time': 0.024673097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:59.583" endtime="20201115 22:59:59.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.600" level="INFO">${ACCURACY} = {'time': [0.024631264, 0.024673097, 0.024715097, 0.024757097, 0.024799097, 0.024841097, 0.024883125, 0.024925125, 0.024967125, 0.025009125, 0.025051111, 0.025093125, 0.025135125, 0.025177194, 0.025219...</msg>
<status status="PASS" starttime="20201115 22:59:59.587" endtime="20201115 22:59:59.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.604" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.603" endtime="20201115 22:59:59.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.607" level="INFO">VALUE: [3.827799999999923e-05, 3.650000000000181e-05, 3.7068999999997215e-05, 3.699999999999884e-05, 3.724999999999909e-05, 3.724999999999909e-05, 3.69719999999997e-05, 3.699999999999884e-05, 3.674999999999859e-05, 3.722199999999995e-05, 3.6917000000000894e-05, 3.6903000000001324e-05, 3.669400000000031e-05, 3.6776999999998256e-05, 3.700000000000231e-05, 3.726399999999866e-05, 3.6931000000000463e-05, 3.722199999999995e-05, 3.7083000000000255e-05, 3.726399999999866e-05, 3.695800000000013e-05, 3.683399999999948e-05, 3.7167000000001144e-05, 3.680600000000034e-05, 3.6917000000000894e-05, 3.676400000000163e-05, 3.702800000000145e-05, 3.7125000000002434e-05, 3.672299999999892e-05, 3.679200000000077e-05, 3.723699999999899e-05, 3.6874999999998714e-05, 3.716600000000167e-05, 3.686199999999862e-05, 3.719400000000081e-05, 3.7041000000001545e-05, 3.6763000000002155e-05, 3.6777000000001725e-05, 3.7110999999999394e-05, 3.6917000000000894e-05, 3.69719999999997e-05, 3.669400000000031e-05, 3.729200000000127e-05, 3.6874999999998714e-05, 3.724999999999909e-05, 3.7083000000000255e-05, 3.672199999999945e-05, 3.6874999999998714e-05, 3.7167000000001144e-05, 3.67780000000012e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.606" endtime="20201115 22:59:59.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.601" endtime="20201115 22:59:59.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.610" endtime="20201115 22:59:59.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.614" endtime="20201115 22:59:59.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.612" endtime="20201115 22:59:59.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.608" endtime="20201115 22:59:59.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.245" endtime="20201115 22:59:59.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.244" endtime="20201115 22:59:59.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.243" endtime="20201115 22:59:59.635"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.638" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.646" endtime="20201115 22:59:59.662"></status>
</kw>
<msg timestamp="20201115 22:59:59.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.644" endtime="20201115 22:59:59.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.663" endtime="20201115 22:59:59.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.666" endtime="20201115 22:59:59.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.642" endtime="20201115 22:59:59.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.640" endtime="20201115 22:59:59.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.675" endtime="20201115 22:59:59.960"></status>
</kw>
<msg timestamp="20201115 22:59:59.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024533292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024572417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.673" endtime="20201115 22:59:59.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024533292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024572417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.964" endtime="20201115 22:59:59.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.973" endtime="20201115 22:59:59.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.671" endtime="20201115 22:59:59.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.669" endtime="20201115 22:59:59.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.980" level="INFO">${RESULT} = [{'time': 0.024572417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9124999999997495e-05, 'source_diff': 3.9124999999997495e-05}, {'time': 0.024615264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:59.976" endtime="20201115 22:59:59.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.993" level="INFO">${ACCURACY} = {'time': [0.024572417, 0.024615264, 0.02465825, 0.02470125, 0.024744264, 0.024787264, 0.024830264, 0.024873333, 0.024916278, 0.024959278, 0.025002306, 0.025045278, 0.025088292, 0.025131333, 0.02517429...</msg>
<status status="PASS" starttime="20201115 22:59:59.981" endtime="20201115 22:59:59.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.998" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.996" endtime="20201115 22:59:59.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.000" level="INFO">VALUE: [3.9124999999997495e-05, 3.7610999999999895e-05, 3.8138999999999534e-05, 3.776400000000263e-05, 3.773600000000002e-05, 3.802799999999898e-05, 3.801400000000288e-05, 3.8347000000001075e-05, 3.802799999999898e-05, 3.8181000000001714e-05, 3.823699999999999e-05, 3.7861000000000145e-05, 3.782000000000091e-05, 3.7861000000000145e-05, 3.8181000000001714e-05, 3.7902999999998854e-05, 3.776399999999916e-05, 3.7945000000001033e-05, 3.822300000000042e-05, 3.777799999999873e-05, 3.824999999999662e-05, 3.788799999999981e-05, 3.818000000000224e-05, 3.7790999999998826e-05, 3.817999999999877e-05, 3.8139000000003004e-05, 3.7888999999999284e-05, 3.830599999999837e-05, 3.775000000000306e-05, 3.7847000000000575e-05, 3.773600000000002e-05, 3.772199999999698e-05, 3.8166999999998674e-05, 3.799999999999984e-05, 3.801399999999941e-05, 3.797300000000017e-05, 3.8083000000001255e-05, 3.7916999999998424e-05, 3.804199999999855e-05, 3.79720000000007e-05, 3.7874999999999714e-05, 3.822300000000042e-05, 3.799999999999984e-05, 3.7847000000000575e-05, 3.829200000000227e-05, 3.8194999999997814e-05, 3.795800000000113e-05, 3.804200000000202e-05, 3.780599999999787e-05, 3.811199999999987e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.999" endtime="20201115 23:00:00.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.994" endtime="20201115 23:00:00.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.004" endtime="20201115 23:00:00.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.007" endtime="20201115 23:00:00.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.006" endtime="20201115 23:00:00.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.002" endtime="20201115 23:00:00.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.638" endtime="20201115 23:00:00.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.636" endtime="20201115 23:00:00.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.635" endtime="20201115 23:00:00.029"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.031" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.039" endtime="20201115 23:00:00.055"></status>
</kw>
<msg timestamp="20201115 23:00:00.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.038" endtime="20201115 23:00:00.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.057" endtime="20201115 23:00:00.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.060" endtime="20201115 23:00:00.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.035" endtime="20201115 23:00:00.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.033" endtime="20201115 23:00:00.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.069" endtime="20201115 23:00:00.355"></status>
</kw>
<msg timestamp="20201115 23:00:00.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025040986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025080458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.067" endtime="20201115 23:00:00.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025040986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025080458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.359" endtime="20201115 23:00:00.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.367" endtime="20201115 23:00:00.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.064" endtime="20201115 23:00:00.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.063" endtime="20201115 23:00:00.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.374" level="INFO">${RESULT} = [{'time': 0.025080458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.947199999999873e-05, 'source_diff': 3.947199999999873e-05}, {'time': 0.025125278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:00.371" endtime="20201115 23:00:00.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.389" level="INFO">${ACCURACY} = {'time': [0.025080458, 0.025125278, 0.025169278, 0.025213306, 0.025257292, 0.025301292, 0.025345306, 0.025389306, 0.025433306, 0.025477319, 0.025521333, 0.025565319, 0.025609319, 0.025653333, 0.025697...</msg>
<status status="PASS" starttime="20201115 23:00:00.375" endtime="20201115 23:00:00.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.394" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.393" endtime="20201115 23:00:00.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.396" level="INFO">VALUE: [3.947199999999873e-05, 3.9153000000000104e-05, 3.9125000000000965e-05, 3.897300000000117e-05, 3.87919999999993e-05, 3.9139000000000534e-05, 3.884800000000105e-05, 3.902799999999998e-05, 3.872300000000092e-05, 3.8804999999999396e-05, 3.890200000000038e-05, 3.915200000000063e-05, 3.8832999999998535e-05, 3.8847000000001575e-05, 3.8818999999998965e-05, 3.9082999999998785e-05, 3.9068999999999215e-05, 3.922199999999848e-05, 3.9096999999998355e-05, 3.901400000000041e-05, 3.9304999999999896e-05, 3.866600000000317e-05, 3.920799999999891e-05, 3.873599999999755e-05, 3.922200000000195e-05, 3.873600000000102e-05, 3.8874999999997245e-05, 3.9055000000003115e-05, 3.875000000000059e-05, 3.901400000000041e-05, 3.9166999999999674e-05, 3.875000000000059e-05, 3.870799999999841e-05, 3.920800000000238e-05, 3.8832999999998535e-05, 3.9208999999998384e-05, 3.925000000000109e-05, 3.877799999999973e-05, 3.927800000000023e-05, 3.8916999999999424e-05, 3.8958999999998134e-05, 3.882000000000191e-05, 3.9304999999999896e-05, 3.9236999999997524e-05, 3.911200000000087e-05, 3.925000000000109e-05, 3.9222999999997954e-05, 3.873700000000049e-05, 3.87919999999993e-05, 3.911200000000087e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.395" endtime="20201115 23:00:00.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.390" endtime="20201115 23:00:00.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.400" endtime="20201115 23:00:00.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.403" endtime="20201115 23:00:00.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.402" endtime="20201115 23:00:00.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.398" endtime="20201115 23:00:00.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.032" endtime="20201115 23:00:00.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.030" endtime="20201115 23:00:00.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.029" endtime="20201115 23:00:00.424"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.427" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.436" endtime="20201115 23:00:00.453"></status>
</kw>
<msg timestamp="20201115 23:00:00.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.435" endtime="20201115 23:00:00.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.454" endtime="20201115 23:00:00.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.457" endtime="20201115 23:00:00.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.432" endtime="20201115 23:00:00.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.429" endtime="20201115 23:00:00.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.466" endtime="20201115 23:00:00.752"></status>
</kw>
<msg timestamp="20201115 23:00:00.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025634778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025675569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.465" endtime="20201115 23:00:00.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025634778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025675569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.756" endtime="20201115 23:00:00.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.764" endtime="20201115 23:00:00.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.462" endtime="20201115 23:00:00.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.460" endtime="20201115 23:00:00.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.771" level="INFO">${RESULT} = [{'time': 0.025675569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0790999999998356e-05, 'source_diff': 4.0790999999998356e-05}, {'time': 0.025721333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:00.768" endtime="20201115 23:00:00.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.785" level="INFO">${ACCURACY} = {'time': [0.025675569, 0.025721333, 0.025766347, 0.025811347, 0.025856361, 0.025901361, 0.025946444, 0.025991361, 0.026036361, 0.026081361, 0.026126361, 0.026171375, 0.026216417, 0.026261444, 0.026306...</msg>
<status status="PASS" starttime="20201115 23:00:00.772" endtime="20201115 23:00:00.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.790" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.789" endtime="20201115 23:00:00.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.792" level="INFO">VALUE: [4.0790999999998356e-05, 4.0360999999999175e-05, 3.992999999999705e-05, 4.022199999999948e-05, 4.0305000000000896e-05, 4.0055000000000646e-05, 3.9846999999999105e-05, 3.97920000000003e-05, 4.000000000000184e-05, 4.027800000000123e-05, 4.0111000000002395e-05, 4.0167000000000674e-05, 3.9888999999997815e-05, 4.022199999999948e-05, 4.0153000000001104e-05, 4.0110999999998925e-05, 3.9846999999999105e-05, 3.9874999999998245e-05, 4.0096999999999355e-05, 3.9973000000002173e-05, 3.997199999999923e-05, 3.998600000000227e-05, 3.9973000000002173e-05, 3.984800000000205e-05, 4.000000000000184e-05, 3.9861000000002145e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.983399999999901e-05, 4.0222999999998954e-05, 4.005600000000012e-05, 3.9972999999998704e-05, 4.018000000000077e-05, 3.9832999999999535e-05, 4.0096999999999355e-05, 3.994400000000009e-05, 4.020799999999991e-05, 3.9874999999998245e-05, 3.9860999999998675e-05, 4.0069000000000216e-05, 4.0167000000000674e-05, 3.9903000000000854e-05, 3.995800000000313e-05, 4.004200000000055e-05, 4.020799999999991e-05, 3.998600000000227e-05, 3.975000000000159e-05, 4.002800000000098e-05, 4.0167000000000674e-05, 4.024999999999862e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.791" endtime="20201115 23:00:00.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.786" endtime="20201115 23:00:00.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.795" endtime="20201115 23:00:00.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.799" endtime="20201115 23:00:00.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.797" endtime="20201115 23:00:00.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.794" endtime="20201115 23:00:00.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.427" endtime="20201115 23:00:00.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.426" endtime="20201115 23:00:00.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.425" endtime="20201115 23:00:00.820"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.822" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.831" endtime="20201115 23:00:00.847"></status>
</kw>
<msg timestamp="20201115 23:00:00.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.829" endtime="20201115 23:00:00.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.848" endtime="20201115 23:00:00.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.851" endtime="20201115 23:00:00.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.826" endtime="20201115 23:00:00.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.824" endtime="20201115 23:00:00.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.860" endtime="20201115 23:00:01.146"></status>
</kw>
<msg timestamp="20201115 23:00:01.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024120764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02416225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:00.858" endtime="20201115 23:00:01.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024120764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02416225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:01.151" endtime="20201115 23:00:01.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.159" endtime="20201115 23:00:01.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.856" endtime="20201115 23:00:01.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.854" endtime="20201115 23:00:01.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.166" level="INFO">${RESULT} = [{'time': 0.02416225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.14860000000003e-05, 'source_diff': 4.14860000000003e-05}, {'time': 0.024208069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:01.163" endtime="20201115 23:00:01.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.180" level="INFO">${ACCURACY} = {'time': [0.02416225, 0.024208069, 0.024254069, 0.024300111, 0.024346097, 0.024392153, 0.024438083, 0.024484097, 0.024530097, 0.024576097, 0.024622111, 0.024668125, 0.024714125, 0.024760111, 0.0248061...</msg>
<status status="PASS" starttime="20201115 23:00:01.167" endtime="20201115 23:00:01.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.184" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.183" endtime="20201115 23:00:01.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.187" level="INFO">VALUE: [4.14860000000003e-05, 4.049999999999887e-05, 4.119400000000134e-05, 4.124999999999962e-05, 4.0874999999999245e-05, 4.0888999999998815e-05, 4.090199999999891e-05, 4.094400000000109e-05, 4.1055000000001646e-05, 4.076400000000216e-05, 4.0832999999997066e-05, 4.0847000000000105e-05, 4.1069000000001216e-05, 4.0903000000001855e-05, 4.1152999999998635e-05, 4.08059999999974e-05, 4.1083000000000786e-05, 4.1153000000002105e-05, 4.0931000000000994e-05, 4.123600000000005e-05, 4.0874999999999245e-05, 4.082000000000044e-05, 4.0875000000002715e-05, 4.113800000000306e-05, 4.072199999999998e-05, 4.1222999999999954e-05, 4.1139000000002535e-05, 4.099999999999937e-05, 4.1138999999999065e-05, 4.124999999999962e-05, 4.0874999999999245e-05, 4.111200000000287e-05, 4.0931000000000994e-05, 4.0790999999998356e-05, 4.127799999999876e-05, 4.0818999999997496e-05, 4.116599999999873e-05, 4.120800000000091e-05, 4.0888999999998815e-05, 4.1041000000002076e-05, 4.070800000000041e-05, 4.070800000000041e-05, 4.118000000000177e-05, 4.120800000000091e-05, 4.0902999999998385e-05, 4.0818999999997496e-05, 4.0945000000000564e-05, 4.0847000000000105e-05, 4.123600000000005e-05, 4.069400000000084e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.185" endtime="20201115 23:00:01.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.180" endtime="20201115 23:00:01.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.190" endtime="20201115 23:00:01.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.193" endtime="20201115 23:00:01.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.192" endtime="20201115 23:00:01.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.188" endtime="20201115 23:00:01.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.823" endtime="20201115 23:00:01.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.821" endtime="20201115 23:00:01.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.820" endtime="20201115 23:00:01.214"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.217" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.225" endtime="20201115 23:00:01.242"></status>
</kw>
<msg timestamp="20201115 23:00:01.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.224" endtime="20201115 23:00:01.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.243" endtime="20201115 23:00:01.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.246" endtime="20201115 23:00:01.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.221" endtime="20201115 23:00:01.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.219" endtime="20201115 23:00:01.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.255" endtime="20201115 23:00:01.544"></status>
</kw>
<msg timestamp="20201115 23:00:01.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024116583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024159194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.253" endtime="20201115 23:00:01.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024116583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024159194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.549" endtime="20201115 23:00:01.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.559" endtime="20201115 23:00:01.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.251" endtime="20201115 23:00:01.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.249" endtime="20201115 23:00:01.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.570" level="INFO">${RESULT} = [{'time': 0.024159194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2610999999997956e-05, 'source_diff': 4.2610999999997956e-05}, {'time': 0.024207014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:01.564" endtime="20201115 23:00:01.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.585" level="INFO">${ACCURACY} = {'time': [0.024159194, 0.024207014, 0.024254014, 0.024301014, 0.024348028, 0.024395028, 0.024442111, 0.024489042, 0.024536042, 0.024583056, 0.024630056, 0.024677042, 0.024724056, 0.024771069, 0.024818...</msg>
<status status="PASS" starttime="20201115 23:00:01.571" endtime="20201115 23:00:01.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.591" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.590" endtime="20201115 23:00:01.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.594" level="INFO">VALUE: [4.2610999999997956e-05, 4.2374999999997276e-05, 4.1917000000002425e-05, 4.177799999999926e-05, 4.2125000000000495e-05, 4.1709000000000884e-05, 4.201399999999994e-05, 4.179199999999883e-05, 4.2195000000001814e-05, 4.1694999999997845e-05, 4.2209000000001384e-05, 4.183400000000101e-05, 4.209800000000083e-05, 4.175000000000012e-05, 4.225000000000062e-05, 4.1973000000000704e-05, 4.177799999999926e-05, 4.170800000000141e-05, 4.175000000000012e-05, 4.2111000000000925e-05, 4.2277000000000287e-05, 4.225000000000062e-05, 4.2082999999998316e-05, 4.1804999999998926e-05, 4.1902999999999385e-05, 4.2040999999999606e-05, 4.170799999999794e-05, 4.1805000000002396e-05, 4.2195000000001814e-05, 4.176399999999969e-05, 4.219399999999887e-05, 4.2055000000002646e-05, 4.177799999999926e-05, 4.1819000000001966e-05, 4.2139000000000065e-05, 4.225000000000062e-05, 4.1875000000000245e-05, 4.2139000000000065e-05, 4.172200000000098e-05, 4.2209000000001384e-05, 4.2152999999999635e-05, 4.2111000000000925e-05, 4.19860000000008e-05, 4.173600000000055e-05, 4.197200000000123e-05, 4.209799999999736e-05, 4.2111000000000925e-05, 4.2166999999999205e-05, 4.2125000000000495e-05, 4.1708999999997415e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.592" endtime="20201115 23:00:01.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.586" endtime="20201115 23:00:01.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.599" endtime="20201115 23:00:01.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.603" endtime="20201115 23:00:01.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.601" endtime="20201115 23:00:01.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.596" endtime="20201115 23:00:01.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.217" endtime="20201115 23:00:01.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.216" endtime="20201115 23:00:01.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.215" endtime="20201115 23:00:01.625"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.627" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.635" endtime="20201115 23:00:01.652"></status>
</kw>
<msg timestamp="20201115 23:00:01.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.634" endtime="20201115 23:00:01.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.654" endtime="20201115 23:00:01.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.657" endtime="20201115 23:00:01.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.631" endtime="20201115 23:00:01.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.629" endtime="20201115 23:00:01.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.666" endtime="20201115 23:00:01.951"></status>
</kw>
<msg timestamp="20201115 23:00:01.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025301611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025345153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.664" endtime="20201115 23:00:01.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025301611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025345153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.955" endtime="20201115 23:00:01.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.963" endtime="20201115 23:00:01.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.662" endtime="20201115 23:00:01.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.660" endtime="20201115 23:00:01.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.970" level="INFO">${RESULT} = [{'time': 0.025345153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.354199999999711e-05, 'source_diff': 4.354199999999711e-05}, {'time': 0.025393972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:01.967" endtime="20201115 23:00:01.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.985" level="INFO">${ACCURACY} = {'time': [0.025345153, 0.025393972, 0.025441972, 0.025489972, 0.025537986, 0.025585986, 0.025633986, 0.025681986, 0.025730014, 0.025778042, 0.025826014, 0.025874028, 0.025922014, 0.025970014, 0.026018...</msg>
<status status="PASS" starttime="20201115 23:00:01.971" endtime="20201115 23:00:01.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.989" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.988" endtime="20201115 23:00:01.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.992" level="INFO">VALUE: [4.354199999999711e-05, 4.3318999999999996e-05, 4.319399999999987e-05, 4.302800000000051e-05, 4.2888999999997346e-05, 4.3097000000002356e-05, 4.270800000000241e-05, 4.275000000000112e-05, 4.295799999999919e-05, 4.3139000000001065e-05, 4.3153000000000635e-05, 4.305599999999965e-05, 4.300000000000137e-05, 4.2916999999999955e-05, 4.3167000000000205e-05, 4.3110999999998456e-05, 4.295800000000266e-05, 4.3096999999998886e-05, 4.288799999999787e-05, 4.2958999999998665e-05, 4.2889000000000815e-05, 4.2903000000000385e-05, 4.3194999999999345e-05, 4.2916999999999955e-05, 4.26799999999998e-05, 4.281999999999897e-05, 4.275000000000112e-05, 4.269399999999937e-05, 4.284800000000158e-05, 4.2832999999999066e-05, 4.290199999999744e-05, 4.324999999999815e-05, 4.3153000000000635e-05, 4.3139000000001065e-05, 4.323599999999858e-05, 4.2861000000001676e-05, 4.3124999999998026e-05, 4.294399999999962e-05, 4.325000000000162e-05, 4.2582999999998816e-05, 4.293000000000005e-05, 4.295799999999919e-05, 4.28059999999994e-05, 4.277800000000026e-05, 4.3167000000000205e-05, 4.277800000000026e-05, 4.2860999999998206e-05, 4.326400000000119e-05, 4.325000000000162e-05, 4.3153000000000635e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.991" endtime="20201115 23:00:01.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.986" endtime="20201115 23:00:01.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.995" endtime="20201115 23:00:01.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.999" endtime="20201115 23:00:02.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.997" endtime="20201115 23:00:02.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.993" endtime="20201115 23:00:02.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.628" endtime="20201115 23:00:02.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.626" endtime="20201115 23:00:02.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.625" endtime="20201115 23:00:02.020"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.022" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.031" endtime="20201115 23:00:02.047"></status>
</kw>
<msg timestamp="20201115 23:00:02.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.029" endtime="20201115 23:00:02.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.049" endtime="20201115 23:00:02.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.051" endtime="20201115 23:00:02.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.027" endtime="20201115 23:00:02.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.024" endtime="20201115 23:00:02.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.061" endtime="20201115 23:00:02.346"></status>
</kw>
<msg timestamp="20201115 23:00:02.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024655528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024700042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.059" endtime="20201115 23:00:02.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024655528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024700042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.350" endtime="20201115 23:00:02.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.358" endtime="20201115 23:00:02.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.056" endtime="20201115 23:00:02.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.055" endtime="20201115 23:00:02.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.365" level="INFO">${RESULT} = [{'time': 0.024700042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.451399999999897e-05, 'source_diff': 4.451399999999897e-05}, {'time': 0.024749889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:02.362" endtime="20201115 23:00:02.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.378" level="INFO">${ACCURACY} = {'time': [0.024700042, 0.024749889, 0.024798889, 0.024847903, 0.024896903, 0.024945889, 0.024994931, 0.025043903, 0.025092903, 0.025141917, 0.025190917, 0.025239931, 0.025288931, 0.025337931, 0.025386...</msg>
<status status="PASS" starttime="20201115 23:00:02.366" endtime="20201115 23:00:02.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.383" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.382" endtime="20201115 23:00:02.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.386" level="INFO">VALUE: [4.451399999999897e-05, 4.426400000000219e-05, 4.4110999999999456e-05, 4.4181000000000775e-05, 4.3847000000003106e-05, 4.398599999999933e-05, 4.376400000000169e-05, 4.4181000000000775e-05, 4.4181000000000775e-05, 4.408399999999979e-05, 4.4124999999999026e-05, 4.426399999999872e-05, 4.3694999999999845e-05, 4.377800000000126e-05, 4.415200000000216e-05, 4.406899999999728e-05, 4.3860999999999206e-05, 4.373599999999908e-05, 4.413799999999912e-05, 4.4012999999999e-05, 4.400000000000237e-05, 4.402700000000204e-05, 4.390200000000191e-05, 4.402800000000151e-05, 4.400000000000237e-05, 4.405600000000065e-05, 4.3874999999998776e-05, 4.3888999999998346e-05, 4.377799999999779e-05, 4.4124999999999026e-05, 4.422200000000001e-05, 4.394400000000062e-05, 4.420800000000044e-05, 4.400000000000237e-05, 4.3875000000002246e-05, 4.372200000000298e-05, 4.3903000000001385e-05, 4.422200000000001e-05, 4.402799999999804e-05, 4.426399999999872e-05, 4.38060000000004e-05, 4.4195000000000345e-05, 4.4208999999999915e-05, 4.384799999999911e-05, 4.3723000000002454e-05, 4.379200000000083e-05, 4.424999999999915e-05, 4.426399999999872e-05, 4.381999999999997e-05, 4.3958999999999665e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.384" endtime="20201115 23:00:02.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.379" endtime="20201115 23:00:02.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.389" endtime="20201115 23:00:02.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.392" endtime="20201115 23:00:02.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.391" endtime="20201115 23:00:02.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.387" endtime="20201115 23:00:02.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.023" endtime="20201115 23:00:02.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.021" endtime="20201115 23:00:02.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.020" endtime="20201115 23:00:02.414"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.416" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.424" endtime="20201115 23:00:02.441"></status>
</kw>
<msg timestamp="20201115 23:00:02.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.423" endtime="20201115 23:00:02.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.442" endtime="20201115 23:00:02.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.445" endtime="20201115 23:00:02.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.420" endtime="20201115 23:00:02.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.418" endtime="20201115 23:00:02.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.454" endtime="20201115 23:00:02.753"></status>
</kw>
<msg timestamp="20201115 23:00:02.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024164361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024209764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.452" endtime="20201115 23:00:02.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024164361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024209764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.757" endtime="20201115 23:00:02.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.766" endtime="20201115 23:00:02.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.450" endtime="20201115 23:00:02.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.448" endtime="20201115 23:00:02.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.772" level="INFO">${RESULT} = [{'time': 0.024209764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5403000000002885e-05, 'source_diff': 4.5403000000002885e-05}, {'time': 0.024260556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:02.769" endtime="20201115 23:00:02.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.786" level="INFO">${ACCURACY} = {'time': [0.024209764, 0.024260556, 0.024310556, 0.024360583, 0.024410569, 0.024460569, 0.024510583, 0.024560583, 0.024610583, 0.024660583, 0.024710583, 0.024760611, 0.024810611, 0.024860597, 0.024910...</msg>
<status status="PASS" starttime="20201115 23:00:02.773" endtime="20201115 23:00:02.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.790" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.789" endtime="20201115 23:00:02.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.793" level="INFO">VALUE: [4.5403000000002885e-05, 4.509800000000036e-05, 4.49999999999999e-05, 4.526400000000319e-05, 4.4833000000001066e-05, 4.476299999999975e-05, 4.5125000000000026e-05, 4.525000000000015e-05, 4.470799999999747e-05, 4.473600000000008e-05, 4.5125000000000026e-05, 4.474999999999965e-05, 4.527799999999929e-05, 4.4875000000003246e-05, 4.5097000000000886e-05, 4.494400000000162e-05, 4.5181000000001775e-05, 4.470800000000094e-05, 4.4833000000001066e-05, 4.48329999999976e-05, 4.526399999999972e-05, 4.4888999999999346e-05, 4.5180999999998306e-05, 4.473600000000008e-05, 4.508399999999732e-05, 4.5125000000000026e-05, 4.523600000000058e-05, 4.509800000000036e-05, 4.4681000000001275e-05, 4.479200000000183e-05, 4.5166999999998736e-05, 4.525000000000015e-05, 4.5222999999997016e-05, 4.5223000000000485e-05, 4.474999999999965e-05, 4.525000000000015e-05, 4.461199999999943e-05, 4.523599999999711e-05, 4.490199999999944e-05, 4.497200000000076e-05, 4.4874999999999776e-05, 4.522200000000101e-05, 4.48329999999976e-05, 4.525000000000015e-05, 4.495800000000119e-05, 4.5125000000000026e-05, 4.5097000000000886e-05, 4.506899999999828e-05, 4.470800000000094e-05, 4.479200000000183e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.791" endtime="20201115 23:00:02.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.787" endtime="20201115 23:00:02.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.796" endtime="20201115 23:00:02.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.800" endtime="20201115 23:00:02.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.798" endtime="20201115 23:00:02.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.795" endtime="20201115 23:00:02.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.417" endtime="20201115 23:00:02.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.415" endtime="20201115 23:00:02.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.414" endtime="20201115 23:00:02.821"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.823" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.832" endtime="20201115 23:00:02.848"></status>
</kw>
<msg timestamp="20201115 23:00:02.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.830" endtime="20201115 23:00:02.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.850" endtime="20201115 23:00:02.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.852" endtime="20201115 23:00:02.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.828" endtime="20201115 23:00:02.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.825" endtime="20201115 23:00:02.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.861" endtime="20201115 23:00:03.147"></status>
</kw>
<msg timestamp="20201115 23:00:03.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024564375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024610764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.860" endtime="20201115 23:00:03.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024564375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024610764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.151" endtime="20201115 23:00:03.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.160" endtime="20201115 23:00:03.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.857" endtime="20201115 23:00:03.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.855" endtime="20201115 23:00:03.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.166" level="INFO">${RESULT} = [{'time': 0.024610764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6389000000000846e-05, 'source_diff': 4.6389000000000846e-05}, {'time': 0.024662611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:03.163" endtime="20201115 23:00:03.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.180" level="INFO">${ACCURACY} = {'time': [0.024610764, 0.024662611, 0.024713611, 0.024764611, 0.024815611, 0.024866639, 0.024917625, 0.024968625, 0.025019653, 0.025070639, 0.025121639, 0.025172653, 0.025223653, 0.025274667, 0.025325...</msg>
<status status="PASS" starttime="20201115 23:00:03.168" endtime="20201115 23:00:03.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.185" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.183" endtime="20201115 23:00:03.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.188" level="INFO">VALUE: [4.6389000000000846e-05, 4.6125000000001026e-05, 4.609699999999842e-05, 4.626399999999725e-05, 4.601400000000047e-05, 4.58329999999986e-05, 4.61939999999994e-05, 4.58190000000025e-05, 4.572199999999804e-05, 4.5944999999998626e-05, 4.5889000000000346e-05, 4.606999999999875e-05, 4.5902999999999916e-05, 4.584800000000111e-05, 4.611099999999799e-05, 4.573599999999761e-05, 4.597199999999829e-05, 4.6013999999997e-05, 4.630599999999943e-05, 4.5861000000001206e-05, 4.611200000000093e-05, 4.599999999999743e-05, 4.575000000000065e-05, 4.58329999999986e-05, 4.579200000000283e-05, 4.611099999999799e-05, 4.577700000000032e-05, 4.620800000000244e-05, 4.594400000000262e-05, 4.626400000000072e-05, 4.559699999999792e-05, 4.619400000000287e-05, 4.5889000000000346e-05, 4.605499999999971e-05, 4.626400000000072e-05, 4.5833000000002067e-05, 4.581899999999903e-05, 4.606900000000275e-05, 4.622199999999854e-05, 4.629199999999986e-05, 4.620799999999897e-05, 4.604199999999961e-05, 4.597199999999829e-05, 4.599999999999743e-05, 4.6180999999999306e-05, 4.598599999999786e-05, 4.6125000000001026e-05, 4.6180999999999306e-05, 4.575000000000065e-05, 4.625000000000115e-05]</msg>
<status status="PASS" starttime="20201115 23:00:03.186" endtime="20201115 23:00:03.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.181" endtime="20201115 23:00:03.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.191" endtime="20201115 23:00:03.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.194" endtime="20201115 23:00:03.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.193" endtime="20201115 23:00:03.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.189" endtime="20201115 23:00:03.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.824" endtime="20201115 23:00:03.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.822" endtime="20201115 23:00:03.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.821" endtime="20201115 23:00:03.215"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.218" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.226" endtime="20201115 23:00:03.243"></status>
</kw>
<msg timestamp="20201115 23:00:03.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.224" endtime="20201115 23:00:03.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.245" endtime="20201115 23:00:03.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.247" endtime="20201115 23:00:03.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.222" endtime="20201115 23:00:03.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.220" endtime="20201115 23:00:03.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.256" endtime="20201115 23:00:03.542"></status>
</kw>
<msg timestamp="20201115 23:00:03.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025085333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025133167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.255" endtime="20201115 23:00:03.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025085333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025133167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.546" endtime="20201115 23:00:03.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.555" endtime="20201115 23:00:03.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.252" endtime="20201115 23:00:03.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.251" endtime="20201115 23:00:03.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.562" level="INFO">${RESULT} = [{'time': 0.025133167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.783400000000007e-05, 'source_diff': 4.783400000000007e-05}, {'time': 0.025185028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:03.559" endtime="20201115 23:00:03.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.585" level="INFO">${ACCURACY} = {'time': [0.025133167, 0.025185028, 0.025237028, 0.025289028, 0.025341014, 0.025393056, 0.025445028, 0.025497028, 0.025549028, 0.025601042, 0.025653042, 0.025705042, 0.025757056, 0.025809083, 0.025861...</msg>
<status status="PASS" starttime="20201115 23:00:03.571" endtime="20201115 23:00:03.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.590" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.589" endtime="20201115 23:00:03.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.592" level="INFO">VALUE: [4.783400000000007e-05, 4.6597000000002387e-05, 4.7181000000000306e-05, 4.7167000000000736e-05, 4.6931000000000056e-05, 4.706999999999975e-05, 4.6945000000003095e-05, 4.672200000000251e-05, 4.7209000000002915e-05, 4.679200000000036e-05, 4.7194999999999876e-05, 4.706999999999975e-05, 4.711200000000193e-05, 4.722199999999954e-05, 4.726299999999878e-05, 4.723599999999911e-05, 4.698599999999886e-05, 4.704100000000114e-05, 4.690200000000144e-05, 4.706900000000028e-05, 4.706900000000028e-05, 4.723599999999911e-05, 4.699999999999843e-05, 4.704100000000114e-05, 4.677799999999732e-05, 4.693000000000058e-05, 4.720799999999997e-05, 4.672199999999904e-05, 4.717999999999736e-05, 4.672200000000251e-05, 4.71529999999977e-05, 4.706999999999975e-05, 4.708299999999985e-05, 4.695800000000319e-05, 4.715199999999822e-05, 4.720799999999997e-05, 4.698599999999886e-05, 4.7167000000000736e-05, 4.680599999999993e-05, 4.684799999999864e-05, 4.7167000000000736e-05, 4.726400000000172e-05, 4.7222999999999016e-05, 4.7222999999999016e-05, 4.701400000000147e-05, 4.68199999999995e-05, 4.727699999999835e-05, 4.726399999999825e-05, 4.698599999999886e-05, 4.716599999999779e-05]</msg>
<status status="PASS" starttime="20201115 23:00:03.591" endtime="20201115 23:00:03.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.586" endtime="20201115 23:00:03.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.595" endtime="20201115 23:00:03.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.599" endtime="20201115 23:00:03.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.597" endtime="20201115 23:00:03.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.594" endtime="20201115 23:00:03.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.218" endtime="20201115 23:00:03.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.217" endtime="20201115 23:00:03.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.216" endtime="20201115 23:00:03.620"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.622" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.631" endtime="20201115 23:00:03.647"></status>
</kw>
<msg timestamp="20201115 23:00:03.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.629" endtime="20201115 23:00:03.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.648" endtime="20201115 23:00:03.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.651" endtime="20201115 23:00:03.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.626" endtime="20201115 23:00:03.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.624" endtime="20201115 23:00:03.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.660" endtime="20201115 23:00:03.946"></status>
</kw>
<msg timestamp="20201115 23:00:03.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024258792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024307375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.658" endtime="20201115 23:00:03.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024258792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024307375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.950" endtime="20201115 23:00:03.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.959" endtime="20201115 23:00:03.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.656" endtime="20201115 23:00:03.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.654" endtime="20201115 23:00:03.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.966" level="INFO">${RESULT} = [{'time': 0.024307375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.858299999999788e-05, 'source_diff': 4.858299999999788e-05}, {'time': 0.024361194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:03.962" endtime="20201115 23:00:03.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.979" level="INFO">${ACCURACY} = {'time': [0.024307375, 0.024361194, 0.024414208, 0.024467194, 0.024520208, 0.024573222, 0.024626264, 0.024679292, 0.024732236, 0.024785236, 0.024838222, 0.02489125, 0.02494425, 0.024997236, 0.02505026...</msg>
<status status="PASS" starttime="20201115 23:00:03.967" endtime="20201115 23:00:03.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.984" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.983" endtime="20201115 23:00:03.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.986" level="INFO">VALUE: [4.858299999999788e-05, 4.842999999999861e-05, 4.804099999999867e-05, 4.81940000000014e-05, 4.794400000000115e-05, 4.8013999999999e-05, 4.788899999999888e-05, 4.805599999999771e-05, 4.806900000000128e-05, 4.788899999999888e-05, 4.799999999999943e-05, 4.777800000000179e-05, 4.829200000000186e-05, 4.774999999999918e-05, 4.818099999999784e-05, 4.781900000000103e-05, 4.807000000000075e-05, 4.776399999999875e-05, 4.797200000000029e-05, 4.802800000000204e-05, 4.7695000000000376e-05, 4.809699999999695e-05, 4.774999999999918e-05, 4.7708999999999946e-05, 4.7681000000000806e-05, 4.790299999999845e-05, 4.7972999999999766e-05, 4.816699999999827e-05, 4.790199999999897e-05, 4.78879999999994e-05, 4.815199999999922e-05, 4.786199999999921e-05, 4.805500000000171e-05, 4.798599999999986e-05, 4.822200000000054e-05, 4.805500000000171e-05, 4.777800000000179e-05, 4.811099999999999e-05, 4.829200000000186e-05, 4.773600000000308e-05, 4.818000000000183e-05, 4.816699999999827e-05, 4.812499999999956e-05, 4.811099999999999e-05, 4.7889000000002346e-05, 4.802799999999857e-05, 4.804199999999814e-05, 4.797200000000029e-05, 4.823600000000011e-05, 4.774999999999918e-05]</msg>
<status status="PASS" starttime="20201115 23:00:03.985" endtime="20201115 23:00:03.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.980" endtime="20201115 23:00:03.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.990" endtime="20201115 23:00:03.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.993" endtime="20201115 23:00:04.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.992" endtime="20201115 23:00:04.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.988" endtime="20201115 23:00:04.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.623" endtime="20201115 23:00:04.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.621" endtime="20201115 23:00:04.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.620" endtime="20201115 23:00:04.014"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.017" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.025" endtime="20201115 23:00:04.041"></status>
</kw>
<msg timestamp="20201115 23:00:04.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.023" endtime="20201115 23:00:04.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.043" endtime="20201115 23:00:04.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.045" endtime="20201115 23:00:04.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.021" endtime="20201115 23:00:04.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.019" endtime="20201115 23:00:04.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.055" endtime="20201115 23:00:04.341"></status>
</kw>
<msg timestamp="20201115 23:00:04.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02418525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024235194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:04.053" endtime="20201115 23:00:04.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02418525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024235194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:04.345" endtime="20201115 23:00:04.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.354" endtime="20201115 23:00:04.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.050" endtime="20201115 23:00:04.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.049" endtime="20201115 23:00:04.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.360" level="INFO">${RESULT} = [{'time': 0.024235194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.994400000000315e-05, 'source_diff': 4.994400000000315e-05}, {'time': 0.024289014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:04.357" endtime="20201115 23:00:04.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.374" level="INFO">${ACCURACY} = {'time': [0.024235194, 0.024289014, 0.024343028, 0.024397028, 0.024451028, 0.024505028, 0.024559056, 0.024613042, 0.024667042, 0.024721069, 0.024775069, 0.024829056, 0.024883056, 0.024937083, 0.024991...</msg>
<status status="PASS" starttime="20201115 23:00:04.361" endtime="20201115 23:00:04.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.378" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.377" endtime="20201115 23:00:04.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.381" level="INFO">VALUE: [4.994400000000315e-05, 4.852800000000254e-05, 4.869499999999791e-05, 4.9209000000001446e-05, 4.897200000000129e-05, 4.880600000000193e-05, 4.916699999999927e-05, 4.8931000000002056e-05, 4.908400000000132e-05, 4.872199999999757e-05, 4.919399999999893e-05, 4.869499999999791e-05, 4.879199999999889e-05, 4.88469999999977e-05, 4.872200000000104e-05, 4.876300000000028e-05, 4.881900000000203e-05, 4.886100000000074e-05, 4.923600000000111e-05, 4.872200000000104e-05, 4.886100000000074e-05, 4.923600000000111e-05, 4.888899999999988e-05, 4.904199999999914e-05, 4.879200000000236e-05, 4.898600000000086e-05, 4.91529999999997e-05, 4.890299999999945e-05, 4.891699999999902e-05, 4.880600000000193e-05, 4.922200000000154e-05, 4.880600000000193e-05, 4.8958999999997727e-05, 4.920800000000197e-05, 4.886100000000074e-05, 4.907000000000175e-05, 4.912500000000056e-05, 4.912500000000056e-05, 4.918099999999884e-05, 4.887500000000031e-05, 4.925000000000068e-05, 4.875000000000018e-05, 4.926400000000025e-05, 4.892999999999911e-05, 4.881900000000203e-05, 4.91529999999997e-05, 4.915200000000022e-05, 4.872200000000104e-05, 4.876399999999975e-05, 4.872200000000104e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.380" endtime="20201115 23:00:04.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.375" endtime="20201115 23:00:04.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.384" endtime="20201115 23:00:04.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.388" endtime="20201115 23:00:04.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.386" endtime="20201115 23:00:04.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.382" endtime="20201115 23:00:04.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.017" endtime="20201115 23:00:04.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.016" endtime="20201115 23:00:04.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.015" endtime="20201115 23:00:04.409"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.411" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.419" endtime="20201115 23:00:04.436"></status>
</kw>
<msg timestamp="20201115 23:00:04.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.418" endtime="20201115 23:00:04.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.438" endtime="20201115 23:00:04.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.441" endtime="20201115 23:00:04.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.415" endtime="20201115 23:00:04.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.413" endtime="20201115 23:00:04.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.450" endtime="20201115 23:00:04.741"></status>
</kw>
<msg timestamp="20201115 23:00:04.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024181736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024232153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.448" endtime="20201115 23:00:04.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024181736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024232153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.745" endtime="20201115 23:00:04.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.753" endtime="20201115 23:00:04.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.446" endtime="20201115 23:00:04.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.444" endtime="20201115 23:00:04.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.760" level="INFO">${RESULT} = [{'time': 0.024232153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041700000000052e-05, 'source_diff': 5.041700000000052e-05}, {'time': 0.024287986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:04.757" endtime="20201115 23:00:04.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.773" level="INFO">${ACCURACY} = {'time': [0.024232153, 0.024287986, 0.024342986, 0.024398, 0.024453, 0.024508014, 0.024563, 0.024618028, 0.024673042, 0.024728028, 0.024783014, 0.024838083, 0.024893028, 0.024948028, 0.025003042, 0.02...</msg>
<status status="PASS" starttime="20201115 23:00:04.761" endtime="20201115 23:00:04.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.778" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.777" endtime="20201115 23:00:04.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.781" level="INFO">VALUE: [5.041700000000052e-05, 5.041700000000052e-05, 4.997199999999882e-05, 5.002800000000057e-05, 5.001399999999753e-05, 5.023600000000211e-05, 4.981900000000303e-05, 5.005599999999971e-05, 5.016700000000027e-05, 4.991700000000002e-05, 4.999999999999796e-05, 5.023600000000211e-05, 5.01530000000007e-05, 4.979199999999989e-05, 4.973599999999814e-05, 5.00409999999972e-05, 4.979199999999989e-05, 4.980599999999946e-05, 5.02079999999995e-05, 4.997199999999882e-05, 4.994399999999968e-05, 5.0137999999998184e-05, 4.977699999999738e-05, 5.0014000000001e-05, 5.019399999999993e-05, 4.990300000000045e-05, 5.00270000000011e-05, 4.972199999999857e-05, 5.011099999999852e-05, 5.030599999999996e-05, 5.01530000000007e-05, 4.975000000000118e-05, 5.029200000000039e-05, 4.977800000000032e-05, 4.977800000000032e-05, 5.008299999999938e-05, 5.008299999999938e-05, 5.002800000000057e-05, 5.001399999999753e-05, 4.9959000000002196e-05, 4.988900000000088e-05, 4.976400000000075e-05, 5.005599999999971e-05, 5.013899999999766e-05, 5.009699999999895e-05, 4.975000000000118e-05, 4.9959000000002196e-05, 4.986200000000121e-05, 5.026399999999778e-05, 5.006999999999928e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.779" endtime="20201115 23:00:04.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.774" endtime="20201115 23:00:04.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.784" endtime="20201115 23:00:04.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.787" endtime="20201115 23:00:04.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.786" endtime="20201115 23:00:04.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.782" endtime="20201115 23:00:04.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.412" endtime="20201115 23:00:04.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.410" endtime="20201115 23:00:04.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.409" endtime="20201115 23:00:04.808"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.811" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.820" endtime="20201115 23:00:04.836"></status>
</kw>
<msg timestamp="20201115 23:00:04.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.818" endtime="20201115 23:00:04.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.838" endtime="20201115 23:00:04.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.841" endtime="20201115 23:00:04.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.815" endtime="20201115 23:00:04.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.813" endtime="20201115 23:00:04.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.850" endtime="20201115 23:00:05.135"></status>
</kw>
<msg timestamp="20201115 23:00:05.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025420375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025472125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.848" endtime="20201115 23:00:05.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025420375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025472125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.139" endtime="20201115 23:00:05.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.147" endtime="20201115 23:00:05.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.846" endtime="20201115 23:00:05.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.844" endtime="20201115 23:00:05.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.154" level="INFO">${RESULT} = [{'time': 0.025472125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.175000000000318e-05, 'source_diff': 5.175000000000318e-05}, {'time': 0.025529014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:05.151" endtime="20201115 23:00:05.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.169" level="INFO">${ACCURACY} = {'time': [0.025472125, 0.025529014, 0.025584986, 0.025640972, 0.025696972, 0.025752986, 0.025808986, 0.025865028, 0.025921042, 0.025977, 0.026033014, 0.026089, 0.026145028, 0.026201042, 0.026257014, 0...</msg>
<status status="PASS" starttime="20201115 23:00:05.155" endtime="20201115 23:00:05.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.174" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.172" endtime="20201115 23:00:05.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.176" level="INFO">VALUE: [5.175000000000318e-05, 5.136099999999977e-05, 5.127800000000182e-05, 5.097199999999982e-05, 5.113899999999866e-05, 5.077799999999785e-05, 5.123599999999964e-05, 5.077800000000132e-05, 5.118099999999737e-05, 5.091700000000102e-05, 5.080600000000046e-05, 5.119400000000093e-05, 5.126400000000225e-05, 5.100000000000243e-05, 5.094500000000016e-05, 5.086099999999927e-05, 5.09729999999993e-05, 5.097199999999982e-05, 5.109799999999942e-05, 5.094500000000016e-05, 5.124999999999921e-05, 5.100000000000243e-05, 5.082000000000003e-05, 5.097199999999982e-05, 5.082000000000003e-05, 5.094400000000068e-05, 5.1151999999998754e-05, 5.072199999999957e-05, 5.080500000000099e-05, 5.119400000000093e-05, 5.104100000000167e-05, 5.08469999999997e-05, 5.072199999999957e-05, 5.118100000000084e-05, 5.074999999999871e-05, 5.08469999999997e-05, 5.104200000000114e-05, 5.122200000000007e-05, 5.127800000000182e-05, 5.080600000000046e-05, 5.118100000000084e-05, 5.115299999999823e-05, 5.098599999999939e-05, 5.074999999999871e-05, 5.116700000000127e-05, 5.099999999999896e-05, 5.119500000000041e-05, 5.113900000000213e-05, 5.086100000000274e-05, 5.11530000000017e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.175" endtime="20201115 23:00:05.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.170" endtime="20201115 23:00:05.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.179" endtime="20201115 23:00:05.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.183" endtime="20201115 23:00:05.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.181" endtime="20201115 23:00:05.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.178" endtime="20201115 23:00:05.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.812" endtime="20201115 23:00:05.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.810" endtime="20201115 23:00:05.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.809" endtime="20201115 23:00:05.204"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.207" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.215" endtime="20201115 23:00:05.232"></status>
</kw>
<msg timestamp="20201115 23:00:05.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.213" endtime="20201115 23:00:05.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.233" endtime="20201115 23:00:05.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.236" endtime="20201115 23:00:05.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.211" endtime="20201115 23:00:05.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.209" endtime="20201115 23:00:05.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.245" endtime="20201115 23:00:05.531"></status>
</kw>
<msg timestamp="20201115 23:00:05.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024614625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.244" endtime="20201115 23:00:05.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024614625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.536" endtime="20201115 23:00:05.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.544" endtime="20201115 23:00:05.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.241" endtime="20201115 23:00:05.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.239" endtime="20201115 23:00:05.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.551" level="INFO">${RESULT} = [{'time': 0.024614625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.256900000000231e-05, 'source_diff': 5.256900000000231e-05}, {'time': 0.024672389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:05.547" endtime="20201115 23:00:05.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.564" level="INFO">${ACCURACY} = {'time': [0.024614625, 0.024672389, 0.024729431, 0.024786389, 0.024843389, 0.024900403, 0.024957403, 0.025014417, 0.025071417, 0.025128431, 0.025185458, 0.025242431, 0.025299431, 0.025356431, 0.025413...</msg>
<status status="PASS" starttime="20201115 23:00:05.552" endtime="20201115 23:00:05.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.569" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.568" endtime="20201115 23:00:05.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.571" level="INFO">VALUE: [5.256900000000231e-05, 5.21669999999988e-05, 5.18340000000006e-05, 5.193099999999812e-05, 5.209700000000095e-05, 5.18470000000007e-05, 5.182000000000103e-05, 5.220900000000098e-05, 5.201399999999953e-05, 5.215299999999923e-05, 5.187499999999984e-05, 5.179199999999842e-05, 5.184800000000017e-05, 5.222299999999708e-05, 5.195800000000125e-05, 5.218000000000236e-05, 5.2193999999998464e-05, 5.201300000000006e-05, 5.183299999999766e-05, 5.206900000000181e-05, 5.212500000000009e-05, 5.2179999999998894e-05, 5.195800000000125e-05, 5.1943999999998214e-05, 5.226399999999978e-05, 5.191700000000202e-05, 5.188899999999941e-05, 5.193000000000211e-05, 5.213899999999966e-05, 5.227799999999935e-05, 5.169400000000143e-05, 5.187499999999984e-05, 5.176399999999928e-05, 5.1971999999997354e-05, 5.229199999999892e-05, 5.198600000000039e-05, 5.18470000000007e-05, 5.180600000000146e-05, 5.226399999999978e-05, 5.195900000000073e-05, 5.208400000000085e-05, 5.176399999999928e-05, 5.18470000000007e-05, 5.208399999999738e-05, 5.176399999999928e-05, 5.204100000000267e-05, 5.226300000000031e-05, 5.1887999999999934e-05, 5.190300000000245e-05, 5.208300000000138e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.570" endtime="20201115 23:00:05.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.565" endtime="20201115 23:00:05.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.575" endtime="20201115 23:00:05.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.578" endtime="20201115 23:00:05.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.577" endtime="20201115 23:00:05.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.573" endtime="20201115 23:00:05.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.207" endtime="20201115 23:00:05.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.205" endtime="20201115 23:00:05.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.205" endtime="20201115 23:00:05.600"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.602" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.611" endtime="20201115 23:00:05.627"></status>
</kw>
<msg timestamp="20201115 23:00:05.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.610" endtime="20201115 23:00:05.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.629" endtime="20201115 23:00:05.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.631" endtime="20201115 23:00:05.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.607" endtime="20201115 23:00:05.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.605" endtime="20201115 23:00:05.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.641" endtime="20201115 23:00:05.927"></status>
</kw>
<msg timestamp="20201115 23:00:05.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025178333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02523225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:05.639" endtime="20201115 23:00:05.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025178333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02523225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:05.931" endtime="20201115 23:00:05.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.939" endtime="20201115 23:00:05.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.636" endtime="20201115 23:00:05.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.635" endtime="20201115 23:00:05.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.946" level="INFO">${RESULT} = [{'time': 0.02523225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.391700000000055e-05, 'source_diff': 5.391700000000055e-05}, {'time': 0.025291097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:05.943" endtime="20201115 23:00:05.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.960" level="INFO">${ACCURACY} = {'time': [0.02523225, 0.025291097, 0.025349097, 0.025407097, 0.025465097, 0.025523111, 0.025581153, 0.025639125, 0.025697125, 0.025755153, 0.025813125, 0.025871139, 0.025929181, 0.025987139, 0.0260451...</msg>
<status status="PASS" starttime="20201115 23:00:05.947" endtime="20201115 23:00:05.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.964" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.963" endtime="20201115 23:00:05.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.967" level="INFO">VALUE: [5.391700000000055e-05, 5.3235999999998174e-05, 5.327800000000035e-05, 5.301400000000053e-05, 5.28609999999978e-05, 5.301400000000053e-05, 5.2999999999997494e-05, 5.3013999999997063e-05, 5.318100000000284e-05, 5.2971999999998354e-05, 5.3193999999999464e-05, 5.315300000000023e-05, 5.276400000000028e-05, 5.2985999999997924e-05, 5.305600000000271e-05, 5.286100000000127e-05, 5.290299999999998e-05, 5.287499999999737e-05, 5.295900000000173e-05, 5.279199999999942e-05, 5.269499999999844e-05, 5.2902000000000504e-05, 5.3193999999999464e-05, 5.3221999999998604e-05, 5.275000000000071e-05, 5.273600000000114e-05, 5.302700000000063e-05, 5.279099999999995e-05, 5.283300000000213e-05, 5.2943999999999214e-05, 5.306900000000281e-05, 5.304199999999967e-05, 5.313900000000066e-05, 5.280499999999952e-05, 5.3207999999999034e-05, 5.2971999999998354e-05, 5.2679999999999394e-05, 5.305599999999924e-05, 5.300000000000096e-05, 5.308400000000185e-05, 5.30280000000001e-05, 5.284699999999823e-05, 5.3235999999998174e-05, 5.319500000000241e-05, 5.311099999999805e-05, 5.2749999999997244e-05, 5.275000000000071e-05, 5.293099999999912e-05, 5.31669999999998e-05, 5.326400000000078e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.965" endtime="20201115 23:00:05.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.961" endtime="20201115 23:00:05.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.970" endtime="20201115 23:00:05.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.974" endtime="20201115 23:00:05.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.972" endtime="20201115 23:00:05.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.969" endtime="20201115 23:00:05.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.603" endtime="20201115 23:00:05.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.601" endtime="20201115 23:00:05.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.600" endtime="20201115 23:00:05.995"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.997" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.006" endtime="20201115 23:00:06.022"></status>
</kw>
<msg timestamp="20201115 23:00:06.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.004" endtime="20201115 23:00:06.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.024" endtime="20201115 23:00:06.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.026" endtime="20201115 23:00:06.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.002" endtime="20201115 23:00:06.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.999" endtime="20201115 23:00:06.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.036" endtime="20201115 23:00:06.321"></status>
</kw>
<msg timestamp="20201115 23:00:06.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024228194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024283069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.034" endtime="20201115 23:00:06.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024228194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024283069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.325" endtime="20201115 23:00:06.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.334" endtime="20201115 23:00:06.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.031" endtime="20201115 23:00:06.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.030" endtime="20201115 23:00:06.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.340" level="INFO">${RESULT} = [{'time': 0.024283069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.487499999999937e-05, 'source_diff': 5.487499999999937e-05}, {'time': 0.024342958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:06.337" endtime="20201115 23:00:06.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.354" level="INFO">${ACCURACY} = {'time': [0.024283069, 0.024342958, 0.024401903, 0.024460903, 0.024519917, 0.024578972, 0.024637917, 0.024696944, 0.024755931, 0.024814944, 0.024873958, 0.024932944, 0.024991972, 0.025050944, 0.025109...</msg>
<status status="PASS" starttime="20201115 23:00:06.342" endtime="20201115 23:00:06.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.359" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.358" endtime="20201115 23:00:06.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.362" level="INFO">VALUE: [5.487499999999937e-05, 5.411100000000252e-05, 5.394499999999969e-05, 5.419499999999994e-05, 5.4013999999998064e-05, 5.411100000000252e-05, 5.4027999999997633e-05, 5.4221999999999604e-05, 5.383399999999913e-05, 5.426299999999884e-05, 5.4166000000001324e-05, 5.3721999999999104e-05, 5.388900000000141e-05, 5.377699999999791e-05, 5.401400000000153e-05, 5.394499999999969e-05, 5.383300000000313e-05, 5.3930000000000644e-05, 5.381900000000009e-05, 5.3944000000000214e-05, 5.390300000000098e-05, 5.411100000000252e-05, 5.3944000000000214e-05, 5.40280000000011e-05, 5.401400000000153e-05, 5.3985999999998924e-05, 5.38609999999988e-05, 5.404200000000067e-05, 5.393100000000012e-05, 5.393100000000012e-05, 5.413899999999819e-05, 5.404200000000067e-05, 5.372299999999858e-05, 5.408399999999938e-05, 5.394499999999969e-05, 5.4249999999998744e-05, 5.380500000000052e-05, 5.39869999999984e-05, 5.394499999999969e-05, 5.4013999999998064e-05, 5.383299999999966e-05, 5.408299999999991e-05, 5.3999999999998494e-05, 5.4263999999998314e-05, 5.3971999999999354e-05, 5.376400000000128e-05, 5.375000000000171e-05, 5.390299999999751e-05, 5.409700000000295e-05, 5.408299999999991e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.360" endtime="20201115 23:00:06.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.355" endtime="20201115 23:00:06.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.365" endtime="20201115 23:00:06.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.368" endtime="20201115 23:00:06.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.367" endtime="20201115 23:00:06.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.363" endtime="20201115 23:00:06.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.998" endtime="20201115 23:00:06.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.996" endtime="20201115 23:00:06.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.995" endtime="20201115 23:00:06.389"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.392" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.400" endtime="20201115 23:00:06.418"></status>
</kw>
<msg timestamp="20201115 23:00:06.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.399" endtime="20201115 23:00:06.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.419" endtime="20201115 23:00:06.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.422" endtime="20201115 23:00:06.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.396" endtime="20201115 23:00:06.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.394" endtime="20201115 23:00:06.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.431" endtime="20201115 23:00:06.716"></status>
</kw>
<msg timestamp="20201115 23:00:06.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025039264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025095042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.429" endtime="20201115 23:00:06.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025039264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025095042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.720" endtime="20201115 23:00:06.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.729" endtime="20201115 23:00:06.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.427" endtime="20201115 23:00:06.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.425" endtime="20201115 23:00:06.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.736" level="INFO">${RESULT} = [{'time': 0.025095042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.577800000000285e-05, 'source_diff': 5.577800000000285e-05}, {'time': 0.025155917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:06.733" endtime="20201115 23:00:06.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.751" level="INFO">${ACCURACY} = {'time': [0.025095042, 0.025155917, 0.025215875, 0.025275889, 0.025335889, 0.025395889, 0.025455903, 0.025515903, 0.025575931, 0.025635931, 0.025695931, 0.025755931, 0.025815917, 0.025875931, 0.025935...</msg>
<status status="PASS" starttime="20201115 23:00:06.737" endtime="20201115 23:00:06.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.755" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.754" endtime="20201115 23:00:06.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.758" level="INFO">VALUE: [5.577800000000285e-05, 5.509799999999995e-05, 5.490299999999851e-05, 5.491699999999808e-05, 5.4708000000000534e-05, 5.509700000000048e-05, 5.4722000000000104e-05, 5.507000000000081e-05, 5.483400000000013e-05, 5.497299999999983e-05, 5.49730000000033e-05, 5.520900000000051e-05, 5.505600000000124e-05, 5.522300000000008e-05, 5.469500000000044e-05, 5.5263999999999314e-05, 5.48609999999998e-05, 5.4722000000000104e-05, 5.5179999999998425e-05, 5.4985999999999924e-05, 5.479100000000195e-05, 5.513899999999919e-05, 5.506899999999787e-05, 5.506900000000134e-05, 5.515300000000223e-05, 5.51670000000018e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.511100000000005e-05, 5.4763999999998814e-05, 5.509700000000048e-05, 5.482000000000056e-05, 5.4735999999999674e-05, 5.4722000000000104e-05, 5.519499999999747e-05, 5.5277999999998884e-05, 5.475000000000271e-05, 5.5027999999998634e-05, 5.480600000000099e-05, 5.513899999999919e-05, 5.520899999999704e-05, 5.511199999999952e-05, 5.488899999999894e-05, 5.477800000000185e-05, 5.473600000000314e-05, 5.4985999999999924e-05, 5.4985999999999924e-05, 5.4985999999999924e-05, 5.509700000000048e-05, 5.502699999999916e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.756" endtime="20201115 23:00:06.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.752" endtime="20201115 23:00:06.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.761" endtime="20201115 23:00:06.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.765" endtime="20201115 23:00:06.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.763" endtime="20201115 23:00:06.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.759" endtime="20201115 23:00:06.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.393" endtime="20201115 23:00:06.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.391" endtime="20201115 23:00:06.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.390" endtime="20201115 23:00:06.786"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.788" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.796" endtime="20201115 23:00:06.813"></status>
</kw>
<msg timestamp="20201115 23:00:06.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.795" endtime="20201115 23:00:06.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.814" endtime="20201115 23:00:06.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.817" endtime="20201115 23:00:06.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.792" endtime="20201115 23:00:06.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.790" endtime="20201115 23:00:06.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.827" endtime="20201115 23:00:07.114"></status>
</kw>
<msg timestamp="20201115 23:00:07.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024132042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024188889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.825" endtime="20201115 23:00:07.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024132042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024188889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.118" endtime="20201115 23:00:07.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.126" endtime="20201115 23:00:07.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.822" endtime="20201115 23:00:07.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.820" endtime="20201115 23:00:07.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.133" level="INFO">${RESULT} = [{'time': 0.024188889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.684700000000223e-05, 'source_diff': 5.684700000000223e-05}, {'time': 0.024250722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:07.130" endtime="20201115 23:00:07.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.147" level="INFO">${ACCURACY} = {'time': [0.024188889, 0.024250722, 0.024311722, 0.024372736, 0.024433736, 0.024494736, 0.024555792, 0.024616792, 0.02467775, 0.02473875, 0.024799764, 0.024860764, 0.024921764, 0.024982792, 0.02504379...</msg>
<status status="PASS" starttime="20201115 23:00:07.134" endtime="20201115 23:00:07.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.151" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.150" endtime="20201115 23:00:07.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.154" level="INFO">VALUE: [5.684700000000223e-05, 5.606899999999887e-05, 5.604099999999973e-05, 5.5763999999999814e-05, 5.6236000000001174e-05, 5.588899999999994e-05, 5.611100000000105e-05, 5.619499999999847e-05, 5.5763999999999814e-05, 5.568100000000187e-05, 5.5985999999997454e-05, 5.588899999999994e-05, 5.616699999999933e-05, 5.5736000000000674e-05, 5.611099999999758e-05, 5.612500000000062e-05, 5.5986000000000924e-05, 5.616699999999933e-05, 5.61809999999989e-05, 5.5902000000000035e-05, 5.562500000000012e-05, 5.584799999999723e-05, 5.5986000000000924e-05, 5.5902000000000035e-05, 5.6000000000000494e-05, 5.5707999999998065e-05, 5.60410000000032e-05, 5.5915999999999605e-05, 5.583300000000166e-05, 5.6264000000000314e-05, 5.5985999999997454e-05, 5.5777999999999384e-05, 5.6264000000000314e-05, 5.583300000000166e-05, 5.606999999999834e-05, 5.6319999999998593e-05, 5.61809999999989e-05, 5.588899999999994e-05, 5.611100000000105e-05, 5.6305999999999023e-05, 5.6250000000000744e-05, 5.595899999999779e-05, 5.608400000000138e-05, 5.58480000000007e-05, 5.588899999999994e-05, 5.570899999999754e-05, 5.6264000000000314e-05, 5.615299999999976e-05, 5.6014000000000064e-05, 5.6264000000000314e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.152" endtime="20201115 23:00:07.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.148" endtime="20201115 23:00:07.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.157" endtime="20201115 23:00:07.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.160" endtime="20201115 23:00:07.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.159" endtime="20201115 23:00:07.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.155" endtime="20201115 23:00:07.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.789" endtime="20201115 23:00:07.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.787" endtime="20201115 23:00:07.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.786" endtime="20201115 23:00:07.182"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.184" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.192" endtime="20201115 23:00:07.209"></status>
</kw>
<msg timestamp="20201115 23:00:07.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.191" endtime="20201115 23:00:07.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.210" endtime="20201115 23:00:07.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.213" endtime="20201115 23:00:07.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.188" endtime="20201115 23:00:07.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.186" endtime="20201115 23:00:07.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.223" endtime="20201115 23:00:07.509"></status>
</kw>
<msg timestamp="20201115 23:00:07.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024163097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024221, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:07.221" endtime="20201115 23:00:07.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024163097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024221, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:07.513" endtime="20201115 23:00:07.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.521" endtime="20201115 23:00:07.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.218" endtime="20201115 23:00:07.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.217" endtime="20201115 23:00:07.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.528" level="INFO">${RESULT} = [{'time': 0.024221, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.790299999999804e-05, 'source_diff': 5.790299999999804e-05}, {'time': 0.024282833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:07.525" endtime="20201115 23:00:07.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.542" level="INFO">${ACCURACY} = {'time': [0.024221, 0.024282833, 0.024344861, 0.024406847, 0.024468847, 0.024530861, 0.024592861, 0.024654875, 0.024716875, 0.024778889, 0.024840875, 0.024902917, 0.024964889, 0.025026931, 0.025088903...</msg>
<status status="PASS" starttime="20201115 23:00:07.529" endtime="20201115 23:00:07.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.546" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.545" endtime="20201115 23:00:07.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.549" level="INFO">VALUE: [5.790299999999804e-05, 5.652700000000066e-05, 5.688899999999747e-05, 5.690300000000051e-05, 5.679099999999701e-05, 5.690300000000051e-05, 5.711100000000205e-05, 5.691700000000008e-05, 5.7263999999997844e-05, 5.694499999999922e-05, 5.6943999999999745e-05, 5.715300000000076e-05, 5.691700000000008e-05, 5.6819999999999093e-05, 5.7235999999998705e-05, 5.7277999999997414e-05, 5.711100000000205e-05, 5.712500000000162e-05, 5.712500000000162e-05, 5.694499999999922e-05, 5.716700000000033e-05, 5.712499999999815e-05, 5.686099999999833e-05, 5.712500000000162e-05, 5.701300000000159e-05, 5.712500000000162e-05, 5.680500000000005e-05, 5.6901999999997566e-05, 5.702699999999769e-05, 5.7292000000000454e-05, 5.6972000000002354e-05, 5.6957999999999315e-05, 5.7221999999999135e-05, 5.7221999999999135e-05, 5.6999999999998024e-05, 5.709700000000248e-05, 5.7028000000000634e-05, 5.716700000000033e-05, 5.691700000000008e-05, 5.7055999999999774e-05, 5.718100000000337e-05, 5.695900000000226e-05, 5.709699999999901e-05, 5.7221999999999135e-05, 5.698699999999793e-05, 5.694499999999922e-05, 5.7249999999998274e-05, 5.708300000000291e-05, 5.712500000000162e-05, 5.6916000000000605e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.548" endtime="20201115 23:00:07.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.543" endtime="20201115 23:00:07.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.552" endtime="20201115 23:00:07.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.556" endtime="20201115 23:00:07.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.554" endtime="20201115 23:00:07.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.551" endtime="20201115 23:00:07.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.185" endtime="20201115 23:00:07.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.183" endtime="20201115 23:00:07.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.182" endtime="20201115 23:00:07.577"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.579" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.588" endtime="20201115 23:00:07.605"></status>
</kw>
<msg timestamp="20201115 23:00:07.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.586" endtime="20201115 23:00:07.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.606" endtime="20201115 23:00:07.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.609" endtime="20201115 23:00:07.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.583" endtime="20201115 23:00:07.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.581" endtime="20201115 23:00:07.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.618" endtime="20201115 23:00:07.904"></status>
</kw>
<msg timestamp="20201115 23:00:07.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024735431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024794417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.616" endtime="20201115 23:00:07.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024735431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024794417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.908" endtime="20201115 23:00:07.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.916" endtime="20201115 23:00:07.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.614" endtime="20201115 23:00:07.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.612" endtime="20201115 23:00:07.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.923" level="INFO">${RESULT} = [{'time': 0.024794417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8986000000000455e-05, 'source_diff': 5.8986000000000455e-05}, {'time': 0.024858319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:07.920" endtime="20201115 23:00:07.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.937" level="INFO">${ACCURACY} = {'time': [0.024794417, 0.024858319, 0.02492125, 0.024984319, 0.025047264, 0.025110278, 0.025173292, 0.025236333, 0.025299333, 0.025362306, 0.025425292, 0.025488292, 0.025551306, 0.025614306, 0.0256773...</msg>
<status status="PASS" starttime="20201115 23:00:07.924" endtime="20201115 23:00:07.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.941" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.940" endtime="20201115 23:00:07.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.944" level="INFO">VALUE: [5.8986000000000455e-05, 5.830500000000155e-05, 5.7721999999999635e-05, 5.784699999999976e-05, 5.8277999999998414e-05, 5.8013999999998594e-05, 5.7778000000001384e-05, 5.809700000000001e-05, 5.8235999999999705e-05, 5.791700000000108e-05, 5.7777999999997914e-05, 5.7763999999998344e-05, 5.822299999999961e-05, 5.797299999999936e-05, 5.819500000000047e-05, 5.811200000000252e-05, 5.7916000000001605e-05, 5.7971999999999885e-05, 5.808300000000044e-05, 5.8263999999998844e-05, 5.806900000000087e-05, 5.7971999999999885e-05, 5.8028000000001634e-05, 5.7833999999999663e-05, 5.815300000000176e-05, 5.8027999999998164e-05, 5.781899999999715e-05, 5.783300000000019e-05, 5.816700000000133e-05, 5.791700000000108e-05, 5.793100000000065e-05, 5.7985999999999455e-05, 5.784699999999976e-05, 5.790300000000151e-05, 5.7820000000000094e-05, 5.816699999999786e-05, 5.786099999999933e-05, 5.8056000000000774e-05, 5.776299999999887e-05, 5.770899999999954e-05, 5.8235999999999705e-05, 5.795900000000326e-05, 5.7901999999998566e-05, 5.811099999999958e-05, 5.780500000000105e-05, 5.7930000000001175e-05, 5.7944000000000745e-05, 5.8235999999999705e-05, 5.7944000000000745e-05, 5.78749999999989e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.942" endtime="20201115 23:00:07.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.938" endtime="20201115 23:00:07.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.947" endtime="20201115 23:00:07.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.950" endtime="20201115 23:00:07.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.949" endtime="20201115 23:00:07.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.945" endtime="20201115 23:00:07.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.580" endtime="20201115 23:00:07.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.578" endtime="20201115 23:00:07.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.577" endtime="20201115 23:00:07.972"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.974" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.983" endtime="20201115 23:00:08.001"></status>
</kw>
<msg timestamp="20201115 23:00:08.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.981" endtime="20201115 23:00:08.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.003" endtime="20201115 23:00:08.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.006" endtime="20201115 23:00:08.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.979" endtime="20201115 23:00:08.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.976" endtime="20201115 23:00:08.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.016" endtime="20201115 23:00:08.304"></status>
</kw>
<msg timestamp="20201115 23:00:08.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025833778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025893556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.014" endtime="20201115 23:00:08.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025833778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025893556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.308" endtime="20201115 23:00:08.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.316" endtime="20201115 23:00:08.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.011" endtime="20201115 23:00:08.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.009" endtime="20201115 23:00:08.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.323" level="INFO">${RESULT} = [{'time': 0.025893556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9777999999999915e-05, 'source_diff': 5.9777999999999915e-05}, {'time': 0.025958403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:08.320" endtime="20201115 23:00:08.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.338" level="INFO">${ACCURACY} = {'time': [0.025893556, 0.025958403, 0.026022403, 0.026086403, 0.026150403, 0.026214417, 0.026278417, 0.026342417, 0.026406417, 0.026470458, 0.026534431, 0.026598431, 0.026662444, 0.026726444, 0.026790...</msg>
<status status="PASS" starttime="20201115 23:00:08.324" endtime="20201115 23:00:08.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.342" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.341" endtime="20201115 23:00:08.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.345" level="INFO">VALUE: [5.9777999999999915e-05, 5.915300000000276e-05, 5.9069999999997874e-05, 5.91810000000019e-05, 5.9221999999997665e-05, 5.8763999999999345e-05, 5.9055999999998304e-05, 5.9000000000000025e-05, 5.8749999999999775e-05, 5.9000000000000025e-05, 5.8834000000000664e-05, 5.922299999999714e-05, 5.905499999999883e-05, 5.9249999999996805e-05, 5.904099999999926e-05, 5.8944000000001745e-05, 5.877699999999944e-05, 5.905499999999883e-05, 5.8972000000000885e-05, 5.90689999999984e-05, 5.9194000000001995e-05, 5.880499999999858e-05, 5.918099999999843e-05, 5.911100000000058e-05, 5.9236000000000705e-05, 5.9042000000002204e-05, 5.8763999999999345e-05, 5.911100000000058e-05, 5.9263999999999845e-05, 5.8708000000001065e-05, 5.891700000000208e-05, 5.922300000000061e-05, 5.9013999999999595e-05, 5.934700000000126e-05, 5.91810000000019e-05, 5.8792000000001954e-05, 5.8791999999998484e-05, 5.8778000000002384e-05, 5.8943999999998276e-05, 5.8736000000000205e-05, 5.880499999999858e-05, 5.904099999999926e-05, 5.9250000000000275e-05, 5.9221999999997665e-05, 5.8722000000000635e-05, 5.8943999999998276e-05, 5.879099999999901e-05, 5.8777999999998914e-05, 5.886100000000033e-05, 5.8972000000000885e-05]</msg>
<status status="PASS" starttime="20201115 23:00:08.343" endtime="20201115 23:00:08.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.339" endtime="20201115 23:00:08.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.349" endtime="20201115 23:00:08.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.352" endtime="20201115 23:00:08.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.350" endtime="20201115 23:00:08.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.347" endtime="20201115 23:00:08.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.975" endtime="20201115 23:00:08.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.973" endtime="20201115 23:00:08.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.972" endtime="20201115 23:00:08.373"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.375" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.384" endtime="20201115 23:00:08.401"></status>
</kw>
<msg timestamp="20201115 23:00:08.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.382" endtime="20201115 23:00:08.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.402" endtime="20201115 23:00:08.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.405" endtime="20201115 23:00:08.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.380" endtime="20201115 23:00:08.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.378" endtime="20201115 23:00:08.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.414" endtime="20201115 23:00:08.701"></status>
</kw>
<msg timestamp="20201115 23:00:08.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024183764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024244264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.412" endtime="20201115 23:00:08.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024183764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024244264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.705" endtime="20201115 23:00:08.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.714" endtime="20201115 23:00:08.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.410" endtime="20201115 23:00:08.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.408" endtime="20201115 23:00:08.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.720" level="INFO">${RESULT} = [{'time': 0.024244264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0500000000001525e-05, 'source_diff': 6.0500000000001525e-05}, {'time': 0.024310111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:08.717" endtime="20201115 23:00:08.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.734" level="INFO">${ACCURACY} = {'time': [0.024244264, 0.024310111, 0.024375194, 0.024440125, 0.024505125, 0.024570139, 0.024635125, 0.024700139, 0.024765153, 0.024830208, 0.024895153, 0.024960167, 0.025025194, 0.025090167, 0.025155...</msg>
<status status="PASS" starttime="20201115 23:00:08.721" endtime="20201115 23:00:08.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.739" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.737" endtime="20201115 23:00:08.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.747" level="INFO">VALUE: [6.0500000000001525e-05, 6.0263999999997375e-05, 5.9957999999998846e-05, 5.986100000000133e-05, 6.0249999999997805e-05, 6.0070000000002344e-05, 6.0000000000001025e-05, 6.018099999999943e-05, 6.0014000000000595e-05, 6.00689999999994e-05, 5.9805999999999054e-05, 6.015299999999682e-05, 5.984700000000176e-05, 5.9777999999999915e-05, 6.031899999999965e-05, 5.988900000000047e-05, 5.976300000000087e-05, 5.9929999999999706e-05, 5.988900000000047e-05, 6.011100000000158e-05, 6.0236000000001705e-05, 6.012499999999768e-05, 5.9736000000001205e-05, 5.9805999999999054e-05, 6.0166000000000386e-05, 6.011100000000158e-05, 5.9972000000001885e-05, 5.9750000000000775e-05, 6.0249999999997805e-05, 5.98750000000009e-05, 5.9707999999998596e-05, 6.0207999999999096e-05, 5.984700000000176e-05, 6.011100000000158e-05, 6.016699999999986e-05, 5.9736000000001205e-05, 6.015300000000029e-05, 5.997299999999789e-05, 5.997300000000136e-05, 5.986100000000133e-05, 5.986100000000133e-05, 5.9805999999999054e-05, 6.0264000000000845e-05, 6.011100000000158e-05, 6.0137999999997777e-05, 6.030500000000008e-05, 5.986100000000133e-05, 6.002700000000069e-05, 6.005499999999983e-05, 5.9916000000000136e-05]</msg>
<status status="PASS" starttime="20201115 23:00:08.740" endtime="20201115 23:00:08.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.735" endtime="20201115 23:00:08.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.750" endtime="20201115 23:00:08.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.754" endtime="20201115 23:00:08.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.752" endtime="20201115 23:00:08.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.749" endtime="20201115 23:00:08.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.376" endtime="20201115 23:00:08.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.374" endtime="20201115 23:00:08.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.373" endtime="20201115 23:00:08.775"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.777" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.785" endtime="20201115 23:00:08.802"></status>
</kw>
<msg timestamp="20201115 23:00:08.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.784" endtime="20201115 23:00:08.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.803" endtime="20201115 23:00:08.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.806" endtime="20201115 23:00:08.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.781" endtime="20201115 23:00:08.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.779" endtime="20201115 23:00:08.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.815" endtime="20201115 23:00:09.101"></status>
</kw>
<msg timestamp="20201115 23:00:09.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024254431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024316625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.814" endtime="20201115 23:00:09.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024254431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024316625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.105" endtime="20201115 23:00:09.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.114" endtime="20201115 23:00:09.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.811" endtime="20201115 23:00:09.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.809" endtime="20201115 23:00:09.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.121" level="INFO">${RESULT} = [{'time': 0.024316625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.219400000000153e-05, 'source_diff': 6.219400000000153e-05}, {'time': 0.024383472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:09.117" endtime="20201115 23:00:09.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.135" level="INFO">${ACCURACY} = {'time': [0.024316625, 0.024383472, 0.024449431, 0.024515444, 0.024581444, 0.024647444, 0.024713486, 0.024779472, 0.024845472, 0.024911472, 0.024977486, 0.025043486, 0.025109486, 0.025175486, 0.025241...</msg>
<status status="PASS" starttime="20201115 23:00:09.122" endtime="20201115 23:00:09.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.139" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.138" endtime="20201115 23:00:09.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.142" level="INFO">VALUE: [6.219400000000153e-05, 6.109699999999954e-05, 6.108399999999944e-05, 6.118000000000096e-05, 6.084699999999929e-05, 6.086100000000233e-05, 6.12080000000001e-05, 6.0721999999999166e-05, 6.0721999999999166e-05, 6.12499999999988e-05, 6.113900000000172e-05, 6.0764000000001345e-05, 6.0971999999999416e-05, 6.115300000000129e-05, 6.095899999999932e-05, 6.1013999999998125e-05, 6.091700000000061e-05, 6.091700000000061e-05, 6.0819999999999624e-05, 6.0792000000000485e-05, 6.077699999999797e-05, 6.122199999999967e-05, 6.0763999999997875e-05, 6.072299999999864e-05, 6.0833999999999194e-05, 6.0847999999998764e-05, 6.090300000000104e-05, 6.119400000000053e-05, 6.111099999999911e-05, 6.086099999999886e-05, 6.0680000000000456e-05, 6.123599999999924e-05, 6.105500000000083e-05, 6.1013999999998125e-05, 6.0986000000002455e-05, 6.104199999999727e-05, 6.10690000000004e-05, 6.130599999999709e-05, 6.119400000000053e-05, 6.0735999999998735e-05, 6.0721999999999166e-05, 6.0763999999997875e-05, 6.112499999999868e-05, 6.0819999999999624e-05, 6.086099999999886e-05, 6.108399999999944e-05, 6.123599999999924e-05, 6.111100000000258e-05, 6.0735999999998735e-05, 6.123700000000218e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.141" endtime="20201115 23:00:09.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.136" endtime="20201115 23:00:09.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.145" endtime="20201115 23:00:09.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.149" endtime="20201115 23:00:09.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.147" endtime="20201115 23:00:09.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.143" endtime="20201115 23:00:09.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.778" endtime="20201115 23:00:09.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.776" endtime="20201115 23:00:09.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.775" endtime="20201115 23:00:09.170"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.172" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.180" endtime="20201115 23:00:09.197"></status>
</kw>
<msg timestamp="20201115 23:00:09.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.179" endtime="20201115 23:00:09.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.199" endtime="20201115 23:00:09.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.201" endtime="20201115 23:00:09.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.176" endtime="20201115 23:00:09.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.174" endtime="20201115 23:00:09.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.210" endtime="20201115 23:00:09.496"></status>
</kw>
<msg timestamp="20201115 23:00:09.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024194972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02425825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:09.209" endtime="20201115 23:00:09.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024194972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02425825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:09.501" endtime="20201115 23:00:09.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.509" endtime="20201115 23:00:09.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.206" endtime="20201115 23:00:09.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.204" endtime="20201115 23:00:09.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.516" level="INFO">${RESULT} = [{'time': 0.02425825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.327799999999995e-05, 'source_diff': 6.327799999999995e-05}, {'time': 0.024326, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201115 23:00:09.513" endtime="20201115 23:00:09.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.530" level="INFO">${ACCURACY} = {'time': [0.02425825, 0.024326, 0.024393014, 0.024460028, 0.024527028, 0.024594028, 0.024661028, 0.024728042, 0.024795056, 0.024862042, 0.024929056, 0.024996069, 0.025063056, 0.025130069, 0.025197083,...</msg>
<status status="PASS" starttime="20201115 23:00:09.517" endtime="20201115 23:00:09.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.534" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.533" endtime="20201115 23:00:09.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.537" level="INFO">VALUE: [6.327799999999995e-05, 6.215299999999882e-05, 6.216700000000186e-05, 6.198599999999999e-05, 6.20279999999987e-05, 6.195900000000032e-05, 6.191700000000161e-05, 6.226399999999938e-05, 6.223699999999971e-05, 6.177800000000191e-05, 6.208400000000044e-05, 6.215199999999935e-05, 6.182000000000062e-05, 6.173599999999974e-05, 6.201399999999913e-05, 6.216599999999892e-05, 6.181900000000115e-05, 6.211100000000011e-05, 6.211100000000011e-05, 6.223600000000024e-05, 6.190300000000204e-05, 6.201399999999913e-05, 6.177799999999845e-05, 6.20690000000014e-05, 6.184700000000029e-05, 6.223600000000024e-05, 6.17499999999993e-05, 6.197200000000042e-05, 6.197200000000042e-05, 6.218099999999796e-05, 6.22499999999998e-05, 6.220900000000057e-05, 6.186100000000333e-05, 6.199999999999956e-05, 6.199999999999956e-05, 6.176400000000234e-05, 6.2195000000001e-05, 6.173699999999921e-05, 6.199999999999956e-05, 6.19439999999978e-05, 6.187499999999943e-05, 6.198599999999999e-05, 6.218000000000196e-05, 6.195800000000085e-05, 6.201399999999913e-05, 6.219400000000153e-05, 6.176399999999888e-05, 6.229200000000198e-05, 6.17080000000006e-05, 6.197200000000042e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.535" endtime="20201115 23:00:09.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.531" endtime="20201115 23:00:09.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.540" endtime="20201115 23:00:09.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.544" endtime="20201115 23:00:09.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.542" endtime="20201115 23:00:09.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.538" endtime="20201115 23:00:09.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.173" endtime="20201115 23:00:09.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.171" endtime="20201115 23:00:09.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.170" endtime="20201115 23:00:09.565"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.567" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.575" endtime="20201115 23:00:09.593"></status>
</kw>
<msg timestamp="20201115 23:00:09.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.574" endtime="20201115 23:00:09.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.595" endtime="20201115 23:00:09.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.598" endtime="20201115 23:00:09.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.571" endtime="20201115 23:00:09.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.569" endtime="20201115 23:00:09.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.607" endtime="20201115 23:00:09.893"></status>
</kw>
<msg timestamp="20201115 23:00:09.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025042069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025106264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.605" endtime="20201115 23:00:09.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025042069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025106264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.897" endtime="20201115 23:00:09.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.905" endtime="20201115 23:00:09.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.602" endtime="20201115 23:00:09.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.601" endtime="20201115 23:00:09.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.912" level="INFO">${RESULT} = [{'time': 0.025106264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.419499999999953e-05, 'source_diff': 6.419499999999953e-05}, {'time': 0.025175111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:09.909" endtime="20201115 23:00:09.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.927" level="INFO">${ACCURACY} = {'time': [0.025106264, 0.025175111, 0.025243111, 0.025311139, 0.025379125, 0.025447125, 0.025515139, 0.025583139, 0.025651167, 0.025719153, 0.025787153, 0.025855208, 0.025923181, 0.025991181, 0.026059...</msg>
<status status="PASS" starttime="20201115 23:00:09.913" endtime="20201115 23:00:09.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.932" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.931" endtime="20201115 23:00:09.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.934" level="INFO">VALUE: [6.419499999999953e-05, 6.341699999999964e-05, 6.279199999999902e-05, 6.293099999999871e-05, 6.276399999999988e-05, 6.297200000000142e-05, 6.327799999999995e-05, 6.311100000000111e-05, 6.304199999999927e-05, 6.323600000000124e-05, 6.273600000000074e-05, 6.329100000000004e-05, 6.300000000000056e-05, 6.272299999999717e-05, 6.300000000000056e-05, 6.32500000000008e-05, 6.295900000000132e-05, 6.32500000000008e-05, 6.281899999999868e-05, 6.281900000000215e-05, 6.327799999999995e-05, 6.286100000000086e-05, 6.297199999999795e-05, 6.277800000000291e-05, 6.32500000000008e-05, 6.297200000000142e-05, 6.317999999999949e-05, 6.315299999999982e-05, 6.331899999999918e-05, 6.276399999999988e-05, 6.279200000000248e-05, 6.313900000000025e-05, 6.290300000000304e-05, 6.286100000000086e-05, 6.298599999999752e-05, 6.279199999999902e-05, 6.276399999999988e-05, 6.313900000000025e-05, 6.308399999999798e-05, 6.329199999999952e-05, 6.297300000000089e-05, 6.281899999999868e-05, 6.286100000000086e-05, 6.291599999999967e-05, 6.291599999999967e-05, 6.323600000000124e-05, 6.286100000000086e-05, 6.298600000000099e-05, 6.304200000000273e-05, 6.326400000000038e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.933" endtime="20201115 23:00:09.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.928" endtime="20201115 23:00:09.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.937" endtime="20201115 23:00:09.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.941" endtime="20201115 23:00:09.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.939" endtime="20201115 23:00:09.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.936" endtime="20201115 23:00:09.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.568" endtime="20201115 23:00:09.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.566" endtime="20201115 23:00:09.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.565" endtime="20201115 23:00:09.962"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.964" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.973" endtime="20201115 23:00:09.990"></status>
</kw>
<msg timestamp="20201115 23:00:09.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.971" endtime="20201115 23:00:09.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.992" endtime="20201115 23:00:09.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.995" endtime="20201115 23:00:09.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.969" endtime="20201115 23:00:09.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.966" endtime="20201115 23:00:09.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.004" endtime="20201115 23:00:10.289"></status>
</kw>
<msg timestamp="20201115 23:00:10.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024261778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024326903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.003" endtime="20201115 23:00:10.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024261778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024326903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.293" endtime="20201115 23:00:10.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.302" endtime="20201115 23:00:10.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.000" endtime="20201115 23:00:10.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.998" endtime="20201115 23:00:10.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.309" level="INFO">${RESULT} = [{'time': 0.024326903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.512499999999921e-05, 'source_diff': 6.512499999999921e-05}, {'time': 0.024396722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:10.305" endtime="20201115 23:00:10.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.322" level="INFO">${ACCURACY} = {'time': [0.024326903, 0.024396722, 0.024465736, 0.024534778, 0.024603736, 0.02467275, 0.02474175, 0.02481075, 0.024879778, 0.024948764, 0.025017778, 0.025086778, 0.025155792, 0.025224792, 0.025293792...</msg>
<status status="PASS" starttime="20201115 23:00:10.310" endtime="20201115 23:00:10.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.327" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.326" endtime="20201115 23:00:10.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.329" level="INFO">VALUE: [6.512499999999921e-05, 6.445799999999988e-05, 6.370799999999913e-05, 6.418099999999996e-05, 6.381899999999968e-05, 6.418099999999996e-05, 6.380599999999959e-05, 6.381899999999968e-05, 6.426400000000138e-05, 6.40419999999968e-05, 6.386100000000186e-05, 6.423600000000224e-05, 6.399999999999809e-05, 6.40699999999994e-05, 6.393099999999971e-05, 6.4195000000003e-05, 6.38340000000022e-05, 6.409800000000201e-05, 6.3889000000001e-05, 6.420799999999963e-05, 6.420799999999963e-05, 6.384699999999882e-05, 6.406899999999993e-05, 6.397200000000242e-05, 6.434699999999932e-05, 6.40280000000007e-05, 6.3889000000001e-05, 6.406899999999993e-05, 6.386100000000186e-05, 6.382000000000262e-05, 6.387500000000143e-05, 6.40829999999995e-05, 6.415300000000082e-05, 6.388899999999753e-05, 6.427800000000095e-05, 6.423700000000171e-05, 6.380599999999959e-05, 6.400000000000156e-05, 6.391600000000067e-05, 6.418099999999996e-05, 6.401299999999818e-05, 6.402799999999723e-05, 6.372299999999817e-05, 6.376400000000088e-05, 6.397200000000242e-05, 6.419400000000006e-05, 6.376400000000088e-05, 6.370799999999913e-05, 6.387499999999796e-05, 6.42639999999979e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.328" endtime="20201115 23:00:10.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.323" endtime="20201115 23:00:10.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.332" endtime="20201115 23:00:10.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.336" endtime="20201115 23:00:10.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.334" endtime="20201115 23:00:10.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.331" endtime="20201115 23:00:10.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.965" endtime="20201115 23:00:10.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.963" endtime="20201115 23:00:10.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.962" endtime="20201115 23:00:10.357"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.359" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.368" endtime="20201115 23:00:10.386"></status>
</kw>
<msg timestamp="20201115 23:00:10.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.367" endtime="20201115 23:00:10.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.387" endtime="20201115 23:00:10.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.390" endtime="20201115 23:00:10.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.363" endtime="20201115 23:00:10.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.361" endtime="20201115 23:00:10.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.399" endtime="20201115 23:00:10.685"></status>
</kw>
<msg timestamp="20201115 23:00:10.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024705986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024771597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.397" endtime="20201115 23:00:10.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024705986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024771597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.689" endtime="20201115 23:00:10.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.698" endtime="20201115 23:00:10.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.395" endtime="20201115 23:00:10.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.393" endtime="20201115 23:00:10.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.704" level="INFO">${RESULT} = [{'time': 0.024771597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.561100000000014e-05, 'source_diff': 6.561100000000014e-05}, {'time': 0.024841375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:10.701" endtime="20201115 23:00:10.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.718" level="INFO">${ACCURACY} = {'time': [0.024771597, 0.024841375, 0.024911389, 0.024981403, 0.025051389, 0.025121431, 0.025191417, 0.025261403, 0.025331417, 0.025401431, 0.025471417, 0.025541444, 0.025611458, 0.025681458, 0.025751...</msg>
<status status="PASS" starttime="20201115 23:00:10.705" endtime="20201115 23:00:10.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.722" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.721" endtime="20201115 23:00:10.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.725" level="INFO">VALUE: [6.561100000000014e-05, 6.456900000000043e-05, 6.50700000000004e-05, 6.502799999999823e-05, 6.476400000000188e-05, 6.524999999999934e-05, 6.501400000000213e-05, 6.50700000000004e-05, 6.469500000000003e-05, 6.515299999999835e-05, 6.482000000000016e-05, 6.480500000000111e-05, 6.505500000000136e-05, 6.479100000000154e-05, 6.469400000000056e-05, 6.4889000000002e-05, 6.49029999999981e-05, 6.47639999999984e-05, 6.515299999999835e-05, 6.50830000000005e-05, 6.504100000000179e-05, 6.50280000000017e-05, 6.465299999999785e-05, 6.50830000000005e-05, 6.515299999999835e-05, 6.486099999999939e-05, 6.516700000000139e-05, 6.50700000000004e-05, 6.494500000000028e-05, 6.482000000000016e-05, 6.502799999999823e-05, 6.50700000000004e-05, 6.473699999999874e-05, 6.494500000000028e-05, 6.498599999999952e-05, 6.527800000000195e-05, 6.523700000000271e-05, 6.47219999999997e-05, 6.479099999999807e-05, 6.524999999999934e-05, 6.473599999999927e-05, 6.498599999999952e-05, 6.524999999999934e-05, 6.497199999999995e-05, 6.520799999999716e-05, 6.499999999999909e-05, 6.530599999999762e-05, 6.515299999999835e-05, 6.518099999999749e-05, 6.513900000000225e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.723" endtime="20201115 23:00:10.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.719" endtime="20201115 23:00:10.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.728" endtime="20201115 23:00:10.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.732" endtime="20201115 23:00:10.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.730" endtime="20201115 23:00:10.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.726" endtime="20201115 23:00:10.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.360" endtime="20201115 23:00:10.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.358" endtime="20201115 23:00:10.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.357" endtime="20201115 23:00:10.753"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.755" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.764" endtime="20201115 23:00:10.781"></status>
</kw>
<msg timestamp="20201115 23:00:10.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.762" endtime="20201115 23:00:10.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.783" endtime="20201115 23:00:10.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.785" endtime="20201115 23:00:10.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.760" endtime="20201115 23:00:10.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.758" endtime="20201115 23:00:10.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.794" endtime="20201115 23:00:11.081"></status>
</kw>
<msg timestamp="20201115 23:00:11.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024607292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024673611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.793" endtime="20201115 23:00:11.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024607292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024673611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.085" endtime="20201115 23:00:11.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.093" endtime="20201115 23:00:11.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.790" endtime="20201115 23:00:11.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.789" endtime="20201115 23:00:11.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.100" level="INFO">${RESULT} = [{'time': 0.024673611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.631900000000218e-05, 'source_diff': 6.631900000000218e-05}, {'time': 0.024745458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:11.097" endtime="20201115 23:00:11.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.114" level="INFO">${ACCURACY} = {'time': [0.024673611, 0.024745458, 0.024816472, 0.024887458, 0.024958472, 0.025029486, 0.025100472, 0.025171569, 0.025242486, 0.025313486, 0.0253845, 0.025455556, 0.0255265, 0.025597514, 0.025668528,...</msg>
<status status="PASS" starttime="20201115 23:00:11.101" endtime="20201115 23:00:11.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.118" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.117" endtime="20201115 23:00:11.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.121" level="INFO">VALUE: [6.631900000000218e-05, 6.636100000000089e-05, 6.587499999999996e-05, 6.579100000000254e-05, 6.592999999999877e-05, 6.587499999999996e-05, 6.572199999999723e-05, 6.613800000000031e-05, 6.586100000000039e-05, 6.615299999999935e-05, 6.611100000000064e-05, 6.630600000000209e-05, 6.562499999999971e-05, 6.572199999999723e-05, 6.608400000000098e-05, 6.60700000000014e-05, 6.606999999999794e-05, 6.57639999999994e-05, 6.574999999999984e-05, 6.583299999999778e-05, 6.577799999999898e-05, 6.629099999999957e-05, 6.612500000000021e-05, 6.584700000000082e-05, 6.57220000000007e-05, 6.574999999999984e-05, 6.604099999999932e-05, 6.616599999999945e-05, 6.583299999999778e-05, 6.619400000000206e-05, 6.57639999999994e-05, 6.609700000000107e-05, 6.62220000000012e-05, 6.573600000000027e-05, 6.586100000000039e-05, 6.579199999999855e-05, 6.601399999999966e-05, 6.629199999999905e-05, 6.604200000000227e-05, 6.597199999999748e-05, 6.619499999999806e-05, 6.573600000000027e-05, 6.588899999999953e-05, 6.616699999999892e-05, 6.58480000000003e-05, 6.625000000000034e-05, 6.600000000000009e-05, 6.601300000000018e-05, 6.6277e-05, 6.612500000000021e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.119" endtime="20201115 23:00:11.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.114" endtime="20201115 23:00:11.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.124" endtime="20201115 23:00:11.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.128" endtime="20201115 23:00:11.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.126" endtime="20201115 23:00:11.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.123" endtime="20201115 23:00:11.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.756" endtime="20201115 23:00:11.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.754" endtime="20201115 23:00:11.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.753" endtime="20201115 23:00:11.149"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.151" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.160" endtime="20201115 23:00:11.178"></status>
</kw>
<msg timestamp="20201115 23:00:11.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.158" endtime="20201115 23:00:11.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.180" endtime="20201115 23:00:11.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.183" endtime="20201115 23:00:11.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.156" endtime="20201115 23:00:11.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.153" endtime="20201115 23:00:11.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.192" endtime="20201115 23:00:11.478"></status>
</kw>
<msg timestamp="20201115 23:00:11.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025023361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:11.190" endtime="20201115 23:00:11.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025023361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:11.482" endtime="20201115 23:00:11.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.490" endtime="20201115 23:00:11.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.188" endtime="20201115 23:00:11.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.186" endtime="20201115 23:00:11.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.497" level="INFO">${RESULT} = [{'time': 0.025023361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736100000000189e-05, 'source_diff': 6.736100000000189e-05}, {'time': 0.02509525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:11.494" endtime="20201115 23:00:11.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.512" level="INFO">${ACCURACY} = {'time': [0.025023361, 0.02509525, 0.025167208, 0.025239222, 0.025311222, 0.025383222, 0.025455236, 0.025527236, 0.02559925, 0.025671236, 0.025743236, 0.02581525, 0.02588725, 0.025959278, 0.026031264,...</msg>
<status status="PASS" starttime="20201115 23:00:11.498" endtime="20201115 23:00:11.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.516" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.515" endtime="20201115 23:00:11.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.520" level="INFO">VALUE: [6.736100000000189e-05, 6.665299999999985e-05, 6.715200000000088e-05, 6.672199999999823e-05, 6.725000000000134e-05, 6.694399999999934e-05, 6.691699999999967e-05, 6.688899999999706e-05, 6.708299999999903e-05, 6.688900000000053e-05, 6.687499999999749e-05, 6.675000000000084e-05, 6.713900000000078e-05, 6.726399999999744e-05, 6.683299999999878e-05, 6.701400000000066e-05, 6.697299999999795e-05, 6.677799999999998e-05, 6.679199999999955e-05, 6.683400000000173e-05, 6.705599999999937e-05, 6.730500000000014e-05, 6.727800000000048e-05, 6.676300000000093e-05, 6.726399999999744e-05, 6.694499999999881e-05, 6.67220000000017e-05, 6.679100000000007e-05, 6.690199999999716e-05, 6.705499999999989e-05, 6.67359999999978e-05, 6.699999999999762e-05, 6.663900000000028e-05, 6.723600000000177e-05, 6.683299999999878e-05, 6.702800000000023e-05, 6.691699999999967e-05, 6.72640000000009e-05, 6.694499999999881e-05, 6.729200000000005e-05, 6.724999999999787e-05, 6.70969999999986e-05, 6.686100000000139e-05, 6.711099999999817e-05, 6.7277000000001e-05, 6.691699999999967e-05, 6.723700000000124e-05, 6.729100000000057e-05, 6.695799999999891e-05, 6.669399999999909e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.518" endtime="20201115 23:00:11.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.513" endtime="20201115 23:00:11.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.523" endtime="20201115 23:00:11.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.526" endtime="20201115 23:00:11.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.525" endtime="20201115 23:00:11.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.521" endtime="20201115 23:00:11.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.152" endtime="20201115 23:00:11.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.150" endtime="20201115 23:00:11.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.149" endtime="20201115 23:00:11.548"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.550" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.558" endtime="20201115 23:00:11.575"></status>
</kw>
<msg timestamp="20201115 23:00:11.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.557" endtime="20201115 23:00:11.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.577" endtime="20201115 23:00:11.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.580" endtime="20201115 23:00:11.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.554" endtime="20201115 23:00:11.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.552" endtime="20201115 23:00:11.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.589" endtime="20201115 23:00:11.875"></status>
</kw>
<msg timestamp="20201115 23:00:11.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024204472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024273458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.587" endtime="20201115 23:00:11.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024204472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024273458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.880" endtime="20201115 23:00:11.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.888" endtime="20201115 23:00:11.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.584" endtime="20201115 23:00:11.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.583" endtime="20201115 23:00:11.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.895" level="INFO">${RESULT} = [{'time': 0.024273458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.898600000000005e-05, 'source_diff': 6.898600000000005e-05}, {'time': 0.024346306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:11.891" endtime="20201115 23:00:11.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.909" level="INFO">${ACCURACY} = {'time': [0.024273458, 0.024346306, 0.024419347, 0.024492306, 0.024565319, 0.024638319, 0.024711333, 0.024784333, 0.024857347, 0.024930347, 0.025003375, 0.025076361, 0.025149361, 0.025222361, 0.025295...</msg>
<status status="PASS" starttime="20201115 23:00:11.896" endtime="20201115 23:00:11.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.913" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.912" endtime="20201115 23:00:11.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.916" level="INFO">VALUE: [6.898600000000005e-05, 6.751400000000116e-05, 6.793000000000077e-05, 6.776399999999794e-05, 6.805499999999742e-05, 6.813799999999884e-05, 6.826399999999844e-05, 6.808300000000003e-05, 6.787499999999849e-05, 6.798599999999905e-05, 6.818100000000049e-05, 6.774999999999837e-05, 6.806899999999699e-05, 6.779199999999708e-05, 6.812499999999874e-05, 6.786099999999892e-05, 6.787499999999849e-05, 6.79169999999972e-05, 6.812500000000221e-05, 6.798700000000199e-05, 6.797199999999948e-05, 6.783299999999978e-05, 6.82359999999993e-05, 6.824999999999887e-05, 6.762499999999824e-05, 6.822199999999973e-05, 6.77229999999987e-05, 6.780600000000012e-05, 6.801399999999819e-05, 6.786099999999892e-05, 6.784699999999935e-05, 6.826399999999844e-05, 6.820800000000016e-05, 6.787500000000196e-05, 6.783299999999978e-05, 6.80969999999996e-05, 6.799999999999862e-05, 6.772199999999923e-05, 6.808300000000003e-05, 6.787499999999849e-05, 6.779200000000055e-05, 6.781999999999969e-05, 6.82359999999993e-05, 6.804199999999733e-05, 6.776399999999794e-05, 6.805600000000037e-05, 6.802800000000123e-05, 6.793100000000024e-05, 6.825000000000234e-05, 6.797299999999895e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.914" endtime="20201115 23:00:11.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.909" endtime="20201115 23:00:11.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.919" endtime="20201115 23:00:11.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.922" endtime="20201115 23:00:11.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.921" endtime="20201115 23:00:11.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.917" endtime="20201115 23:00:11.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.551" endtime="20201115 23:00:11.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.549" endtime="20201115 23:00:11.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.548" endtime="20201115 23:00:11.943"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.946" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.954" endtime="20201115 23:00:11.971"></status>
</kw>
<msg timestamp="20201115 23:00:11.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.953" endtime="20201115 23:00:11.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.972" endtime="20201115 23:00:11.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.975" endtime="20201115 23:00:11.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.950" endtime="20201115 23:00:11.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.948" endtime="20201115 23:00:11.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.984" endtime="20201115 23:00:12.269"></status>
</kw>
<msg timestamp="20201115 23:00:12.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024295764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024365417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.983" endtime="20201115 23:00:12.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024295764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024365417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.274" endtime="20201115 23:00:12.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.282" endtime="20201115 23:00:12.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.980" endtime="20201115 23:00:12.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.978" endtime="20201115 23:00:12.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.289" level="INFO">${RESULT} = [{'time': 0.024365417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.965299999999938e-05, 'source_diff': 6.965299999999938e-05}, {'time': 0.02444025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:12.286" endtime="20201115 23:00:12.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.303" level="INFO">${ACCURACY} = {'time': [0.024365417, 0.02444025, 0.024514278, 0.024588306, 0.024662264, 0.024736292, 0.024810278, 0.024884292, 0.024958292, 0.025032306, 0.025106306, 0.025180306, 0.025254361, 0.025328319, 0.0254023...</msg>
<status status="PASS" starttime="20201115 23:00:12.290" endtime="20201115 23:00:12.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.307" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.306" endtime="20201115 23:00:12.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.310" level="INFO">VALUE: [6.965299999999938e-05, 6.929199999999858e-05, 6.926399999999944e-05, 6.909800000000008e-05, 6.884700000000035e-05, 6.911100000000017e-05, 6.894500000000081e-05, 6.87359999999998e-05, 6.911100000000017e-05, 6.92230000000002e-05, 6.913899999999931e-05, 6.918099999999802e-05, 6.913899999999931e-05, 6.905499999999842e-05, 6.897200000000048e-05, 6.872200000000023e-05, 6.894400000000134e-05, 6.890299999999863e-05, 6.884700000000035e-05, 6.879100000000207e-05, 6.882000000000069e-05, 6.920799999999769e-05, 6.92360000000003e-05, 6.924999999999987e-05, 6.926399999999944e-05, 6.898600000000005e-05, 6.916699999999845e-05, 6.922199999999726e-05, 6.89169999999982e-05, 6.904199999999833e-05, 6.897299999999995e-05, 6.883400000000026e-05, 6.920900000000063e-05, 6.891599999999873e-05, 6.902699999999928e-05, 6.90970000000006e-05, 6.868000000000152e-05, 6.909699999999713e-05, 6.89299999999983e-05, 6.898600000000005e-05, 6.912499999999974e-05, 6.917999999999855e-05, 6.884700000000035e-05, 6.924999999999987e-05, 6.920800000000116e-05, 6.867999999999805e-05, 6.894400000000134e-05, 6.895800000000091e-05, 6.886099999999992e-05, 6.876399999999894e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.308" endtime="20201115 23:00:12.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.304" endtime="20201115 23:00:12.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.313" endtime="20201115 23:00:12.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.316" endtime="20201115 23:00:12.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.315" endtime="20201115 23:00:12.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.311" endtime="20201115 23:00:12.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.946" endtime="20201115 23:00:12.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.945" endtime="20201115 23:00:12.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.944" endtime="20201115 23:00:12.338"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.340" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.348" endtime="20201115 23:00:12.367"></status>
</kw>
<msg timestamp="20201115 23:00:12.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.347" endtime="20201115 23:00:12.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.368" endtime="20201115 23:00:12.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.371" endtime="20201115 23:00:12.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.344" endtime="20201115 23:00:12.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.342" endtime="20201115 23:00:12.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.380" endtime="20201115 23:00:12.666"></status>
</kw>
<msg timestamp="20201115 23:00:12.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024345875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024416569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.378" endtime="20201115 23:00:12.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024345875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024416569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.671" endtime="20201115 23:00:12.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.679" endtime="20201115 23:00:12.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.376" endtime="20201115 23:00:12.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.374" endtime="20201115 23:00:12.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.686" level="INFO">${RESULT} = [{'time': 0.024416569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.069399999999962e-05, 'source_diff': 7.069399999999962e-05}, {'time': 0.024492403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:12.682" endtime="20201115 23:00:12.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.699" level="INFO">${ACCURACY} = {'time': [0.024416569, 0.024492403, 0.024567403, 0.024642431, 0.024717417, 0.024792444, 0.024867431, 0.024942444, 0.025017458, 0.025092444, 0.025167458, 0.025242472, 0.025317458, 0.0253925, 0.02546747...</msg>
<status status="PASS" starttime="20201115 23:00:12.687" endtime="20201115 23:00:12.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.704" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.703" endtime="20201115 23:00:12.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.707" level="INFO">VALUE: [7.069399999999962e-05, 7.043099999999927e-05, 6.966700000000242e-05, 7.011200000000065e-05, 7.016699999999945e-05, 6.990200000000016e-05, 6.969499999999809e-05, 7.00970000000016e-05, 7.005499999999942e-05, 7.004099999999985e-05, 7.000000000000062e-05, 7.016599999999998e-05, 6.991599999999973e-05, 7.001399999999672e-05, 7.006900000000246e-05, 7.029199999999958e-05, 6.995799999999844e-05, 6.986100000000092e-05, 7.004199999999933e-05, 7.016699999999945e-05, 7.02499999999974e-05, 6.986100000000092e-05, 6.994499999999834e-05, 7.012500000000074e-05, 6.981999999999822e-05, 6.998600000000105e-05, 7.025000000000087e-05, 6.980599999999865e-05, 6.970900000000113e-05, 6.990200000000016e-05, 6.979100000000307e-05, 6.980599999999865e-05, 7.006900000000246e-05, 6.998600000000105e-05, 6.970799999999819e-05, 6.994400000000234e-05, 7.019399999999912e-05, 6.981899999999874e-05, 7.004199999999933e-05, 6.99299999999993e-05, 7.013900000000031e-05, 6.983299999999831e-05, 7.020799999999869e-05, 6.994499999999834e-05, 7.009699999999813e-05, 7.004199999999933e-05, 7.02910000000001e-05, 6.988900000000006e-05, 6.97230000000007e-05, 6.990299999999963e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.706" endtime="20201115 23:00:12.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.700" endtime="20201115 23:00:12.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.711" endtime="20201115 23:00:12.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.715" endtime="20201115 23:00:12.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.713" endtime="20201115 23:00:12.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.709" endtime="20201115 23:00:12.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.341" endtime="20201115 23:00:12.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.339" endtime="20201115 23:00:12.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.338" endtime="20201115 23:00:12.736"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.738" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.747" endtime="20201115 23:00:12.765"></status>
</kw>
<msg timestamp="20201115 23:00:12.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.745" endtime="20201115 23:00:12.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.767" endtime="20201115 23:00:12.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.770" endtime="20201115 23:00:12.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.742" endtime="20201115 23:00:12.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.740" endtime="20201115 23:00:12.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.779" endtime="20201115 23:00:13.066"></status>
</kw>
<msg timestamp="20201115 23:00:13.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025085444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025157764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.778" endtime="20201115 23:00:13.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025085444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025157764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.070" endtime="20201115 23:00:13.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.078" endtime="20201115 23:00:13.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.775" endtime="20201115 23:00:13.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.773" endtime="20201115 23:00:13.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.085" level="INFO">${RESULT} = [{'time': 0.025157764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.232000000000072e-05, 'source_diff': 7.232000000000072e-05}, {'time': 0.025234583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:13.082" endtime="20201115 23:00:13.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.100" level="INFO">${ACCURACY} = {'time': [0.025157764, 0.025234583, 0.025310597, 0.025386597, 0.025462597, 0.025538611, 0.025614611, 0.025690611, 0.025766639, 0.025842625, 0.025918639, 0.025994639, 0.026070653, 0.026146653, 0.026222...</msg>
<status status="PASS" starttime="20201115 23:00:13.086" endtime="20201115 23:00:13.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.104" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.103" endtime="20201115 23:00:13.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.107" level="INFO">VALUE: [7.232000000000072e-05, 7.105500000000042e-05, 7.102800000000076e-05, 7.094399999999987e-05, 7.084699999999888e-05, 7.09170000000002e-05, 7.080500000000017e-05, 7.117999999999708e-05, 7.094499999999934e-05, 7.086100000000192e-05, 7.126400000000144e-05, 7.113900000000131e-05, 7.112499999999827e-05, 7.097199999999901e-05, 7.080600000000312e-05, 7.076400000000094e-05, 7.125000000000187e-05, 7.112500000000174e-05, 7.102800000000076e-05, 7.111199999999818e-05, 7.077699999999756e-05, 7.070799999999919e-05, 7.083300000000278e-05, 7.104100000000085e-05, 7.122200000000273e-05, 7.095799999999944e-05, 7.122199999999926e-05, 7.099999999999815e-05, 7.12499999999984e-05, 7.062499999999777e-05, 7.09170000000002e-05, 7.079200000000008e-05, 7.077800000000051e-05, 7.111199999999818e-05, 7.122199999999926e-05, 7.09170000000002e-05, 7.07360000000018e-05, 7.112500000000174e-05, 7.084800000000183e-05, 7.109800000000208e-05, 7.104200000000033e-05, 7.097299999999848e-05, 7.099999999999815e-05, 7.09300000000003e-05, 7.102700000000128e-05, 7.104100000000085e-05, 7.09300000000003e-05, 7.098600000000205e-05, 7.070799999999919e-05, 7.084699999999888e-05]</msg>
<status status="PASS" starttime="20201115 23:00:13.106" endtime="20201115 23:00:13.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.101" endtime="20201115 23:00:13.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.110" endtime="20201115 23:00:13.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.114" endtime="20201115 23:00:13.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.112" endtime="20201115 23:00:13.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.109" endtime="20201115 23:00:13.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.739" endtime="20201115 23:00:13.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.737" endtime="20201115 23:00:13.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.736" endtime="20201115 23:00:13.135"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.137" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.146" endtime="20201115 23:00:13.163"></status>
</kw>
<msg timestamp="20201115 23:00:13.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.144" endtime="20201115 23:00:13.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.165" endtime="20201115 23:00:13.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.168" endtime="20201115 23:00:13.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.141" endtime="20201115 23:00:13.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.139" endtime="20201115 23:00:13.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.177" endtime="20201115 23:00:13.463"></status>
</kw>
<msg timestamp="20201115 23:00:13.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025055139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025128153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.175" endtime="20201115 23:00:13.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025055139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025128153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.467" endtime="20201115 23:00:13.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.476" endtime="20201115 23:00:13.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.173" endtime="20201115 23:00:13.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.171" endtime="20201115 23:00:13.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.483" level="INFO">${RESULT} = [{'time': 0.025128153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.301399999999972e-05, 'source_diff': 7.301399999999972e-05}, {'time': 0.025205944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:13.479" endtime="20201115 23:00:13.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.496" level="INFO">${ACCURACY} = {'time': [0.025128153, 0.025205944, 0.025282944, 0.025359986, 0.025436958, 0.025513972, 0.025591, 0.025668056, 0.025745, 0.025821986, 0.025899, 0.025976, 0.026053014, 0.026130014, 0.026207014, 0.02628...</msg>
<status status="PASS" starttime="20201115 23:00:13.484" endtime="20201115 23:00:13.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.501" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.500" endtime="20201115 23:00:13.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.503" level="INFO">VALUE: [7.301399999999972e-05, 7.212499999999927e-05, 7.225000000000287e-05, 7.218000000000155e-05, 7.217999999999808e-05, 7.195800000000044e-05, 7.208300000000056e-05, 7.218100000000102e-05, 7.231900000000124e-05, 7.204200000000133e-05, 7.222199999999679e-05, 7.218099999999755e-05, 7.20560000000009e-05, 7.182000000000022e-05, 7.179200000000108e-05, 7.183300000000031e-05, 7.17360000000028e-05, 7.194500000000034e-05, 7.191699999999773e-05, 7.204199999999786e-05, 7.218000000000155e-05, 7.170899999999966e-05, 7.213800000000284e-05, 7.226400000000244e-05, 7.183300000000031e-05, 7.179099999999813e-05, 7.216600000000198e-05, 7.19300000000013e-05, 7.21109999999997e-05, 7.176399999999847e-05, 7.202800000000176e-05, 7.222200000000026e-05, 7.207000000000047e-05, 7.181900000000074e-05, 7.199999999999915e-05, 7.222200000000026e-05, 7.17910000000016e-05, 7.202799999999829e-05, 7.19309999999973e-05, 7.184699999999988e-05, 7.173599999999933e-05, 7.234700000000038e-05, 7.183399999999979e-05, 7.188899999999859e-05, 7.191599999999826e-05, 7.204099999999838e-05, 7.188799999999912e-05, 7.231899999999777e-05, 7.186100000000292e-05, 7.179200000000108e-05]</msg>
<status status="PASS" starttime="20201115 23:00:13.502" endtime="20201115 23:00:13.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.497" endtime="20201115 23:00:13.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.506" endtime="20201115 23:00:13.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.510" endtime="20201115 23:00:13.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.508" endtime="20201115 23:00:13.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.505" endtime="20201115 23:00:13.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.138" endtime="20201115 23:00:13.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.136" endtime="20201115 23:00:13.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.135" endtime="20201115 23:00:13.531"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.534" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.542" endtime="20201115 23:00:13.560"></status>
</kw>
<msg timestamp="20201115 23:00:13.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.540" endtime="20201115 23:00:13.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.561" endtime="20201115 23:00:13.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.564" endtime="20201115 23:00:13.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.538" endtime="20201115 23:00:13.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.536" endtime="20201115 23:00:13.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.573" endtime="20201115 23:00:13.859"></status>
</kw>
<msg timestamp="20201115 23:00:13.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024651514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024725111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.571" endtime="20201115 23:00:13.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024651514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024725111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.863" endtime="20201115 23:00:13.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.871" endtime="20201115 23:00:13.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.569" endtime="20201115 23:00:13.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.567" endtime="20201115 23:00:13.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.878" level="INFO">${RESULT} = [{'time': 0.024725111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.359700000000163e-05, 'source_diff': 7.359700000000163e-05}, {'time': 0.024803917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:13.875" endtime="20201115 23:00:13.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.891" level="INFO">${ACCURACY} = {'time': [0.024725111, 0.024803917, 0.024881944, 0.024959931, 0.025037944, 0.025115944, 0.025193944, 0.025271972, 0.025350014, 0.025428, 0.025505972, 0.025583986, 0.025661986, 0.02574, 0.025818056, 0....</msg>
<status status="PASS" starttime="20201115 23:00:13.879" endtime="20201115 23:00:13.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.896" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.895" endtime="20201115 23:00:13.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.899" level="INFO">VALUE: [7.359700000000163e-05, 7.322300000000073e-05, 7.304099999999938e-05, 7.30560000000019e-05, 7.29439999999984e-05, 7.273600000000033e-05, 7.306899999999852e-05, 7.308300000000156e-05, 7.280600000000165e-05, 7.315299999999941e-05, 7.313899999999984e-05, 7.27499999999999e-05, 7.276400000000294e-05, 7.302799999999929e-05, 7.326399999999997e-05, 7.315299999999941e-05, 7.315299999999941e-05, 7.32500000000004e-05, 7.280600000000165e-05, 7.304199999999886e-05, 7.29309999999983e-05, 7.31110000000007e-05, 7.286100000000045e-05, 7.32500000000004e-05, 7.286099999999698e-05, 7.304099999999938e-05, 7.319400000000212e-05, 7.290199999999969e-05, 7.298600000000058e-05, 7.313899999999984e-05, 7.279099999999913e-05, 7.277799999999904e-05, 7.276399999999947e-05, 7.281899999999827e-05, 7.281999999999775e-05, 7.267999999999858e-05, 7.295799999999797e-05, 7.29170000000022e-05, 7.281999999999775e-05, 7.323600000000083e-05, 7.286099999999698e-05, 7.2763e-05, 7.266699999999848e-05, 7.279199999999861e-05, 7.306899999999852e-05, 7.32370000000003e-05, 7.32370000000003e-05, 7.2763e-05, 7.273600000000033e-05, 7.30829999999981e-05]</msg>
<status status="PASS" starttime="20201115 23:00:13.897" endtime="20201115 23:00:13.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.892" endtime="20201115 23:00:13.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.907" endtime="20201115 23:00:13.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.910" endtime="20201115 23:00:13.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.909" endtime="20201115 23:00:13.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.905" endtime="20201115 23:00:13.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.534" endtime="20201115 23:00:13.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.532" endtime="20201115 23:00:13.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.532" endtime="20201115 23:00:13.932"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.934" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.942" endtime="20201115 23:00:13.960"></status>
</kw>
<msg timestamp="20201115 23:00:13.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.941" endtime="20201115 23:00:13.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.961" endtime="20201115 23:00:13.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.964" endtime="20201115 23:00:13.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.938" endtime="20201115 23:00:13.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.936" endtime="20201115 23:00:13.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.973" endtime="20201115 23:00:14.260"></status>
</kw>
<msg timestamp="20201115 23:00:14.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024137833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024212903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.972" endtime="20201115 23:00:14.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024137833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024212903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.264" endtime="20201115 23:00:14.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.272" endtime="20201115 23:00:14.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.969" endtime="20201115 23:00:14.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.967" endtime="20201115 23:00:14.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.279" level="INFO">${RESULT} = [{'time': 0.024212903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.507e-05, 'source_diff': 7.507e-05}, {'time': 0.024292722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.431899999999977e-05...</msg>
<status status="PASS" starttime="20201115 23:00:14.276" endtime="20201115 23:00:14.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.292" level="INFO">${ACCURACY} = {'time': [0.024212903, 0.024292722, 0.024371736, 0.024450736, 0.024529722, 0.024608736, 0.024687736, 0.024766778, 0.024845764, 0.024924833, 0.025003778, 0.025082764, 0.025161806, 0.025240778, 0.025319...</msg>
<status status="PASS" starttime="20201115 23:00:14.280" endtime="20201115 23:00:14.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.297" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.296" endtime="20201115 23:00:14.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.300" level="INFO">VALUE: [7.507e-05, 7.431899999999977e-05, 7.387500000000102e-05, 7.409700000000213e-05, 7.397200000000201e-05, 7.42639999999975e-05, 7.41249999999978e-05, 7.404199999999986e-05, 7.416699999999998e-05, 7.39439999999994e-05, 7.423600000000183e-05, 7.419499999999912e-05, 7.422299999999826e-05, 7.370899999999819e-05, 7.397200000000201e-05, 7.377800000000004e-05, 7.420899999999869e-05, 7.377800000000004e-05, 7.384700000000188e-05, 7.43050000000002e-05, 7.387499999999755e-05, 7.419399999999965e-05, 7.406899999999952e-05, 7.377800000000004e-05, 7.388899999999712e-05, 7.413900000000084e-05, 7.404199999999986e-05, 7.42639999999975e-05, 7.409700000000213e-05, 7.381999999999875e-05, 7.411099999999823e-05, 7.404199999999986e-05, 7.395800000000244e-05, 7.388900000000059e-05, 7.372199999999829e-05, 7.429200000000011e-05, 7.404199999999986e-05, 7.384699999999841e-05, 7.418000000000008e-05, 7.392999999999983e-05, 7.405499999999995e-05, 7.397199999999854e-05, 7.374999999999743e-05, 7.398600000000158e-05, 7.423600000000183e-05, 7.386099999999798e-05, 7.384699999999841e-05, 7.397200000000201e-05, 7.422299999999826e-05, 7.420799999999922e-05]</msg>
<status status="PASS" starttime="20201115 23:00:14.298" endtime="20201115 23:00:14.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.293" endtime="20201115 23:00:14.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.303" endtime="20201115 23:00:14.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.307" endtime="20201115 23:00:14.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.305" endtime="20201115 23:00:14.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.302" endtime="20201115 23:00:14.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.935" endtime="20201115 23:00:14.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.933" endtime="20201115 23:00:14.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.932" endtime="20201115 23:00:14.328"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.330" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.339" endtime="20201115 23:00:14.357"></status>
</kw>
<msg timestamp="20201115 23:00:14.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.337" endtime="20201115 23:00:14.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.359" endtime="20201115 23:00:14.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.361" endtime="20201115 23:00:14.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.335" endtime="20201115 23:00:14.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.332" endtime="20201115 23:00:14.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.370" endtime="20201115 23:00:14.656"></status>
</kw>
<msg timestamp="20201115 23:00:14.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025027194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025103222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.369" endtime="20201115 23:00:14.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025027194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025103222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.660" endtime="20201115 23:00:14.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.669" endtime="20201115 23:00:14.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.366" endtime="20201115 23:00:14.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.364" endtime="20201115 23:00:14.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.675" level="INFO">${RESULT} = [{'time': 0.025103222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.602800000000229e-05, 'source_diff': 7.602800000000229e-05}, {'time': 0.025184069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:14.672" endtime="20201115 23:00:14.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.691" level="INFO">${ACCURACY} = {'time': [0.025103222, 0.025184069, 0.025264069, 0.025344069, 0.025424083, 0.025504083, 0.025584083, 0.025664097, 0.025744097, 0.025824111, 0.025904111, 0.025984125, 0.026064139, 0.026144125, 0.026224...</msg>
<status status="PASS" starttime="20201115 23:00:14.677" endtime="20201115 23:00:14.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.695" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.694" endtime="20201115 23:00:14.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.698" level="INFO">VALUE: [7.602800000000229e-05, 7.524999999999893e-05, 7.479100000000113e-05, 7.477700000000156e-05, 7.523599999999936e-05, 7.529100000000163e-05, 7.523599999999936e-05, 7.484699999999941e-05, 7.518000000000108e-05, 7.483299999999984e-05, 7.522199999999979e-05, 7.490300000000116e-05, 7.490300000000116e-05, 7.481900000000027e-05, 7.486099999999898e-05, 7.511099999999923e-05, 7.511099999999923e-05, 7.512500000000227e-05, 7.481999999999975e-05, 7.515199999999847e-05, 7.470899999999919e-05, 7.491700000000073e-05, 7.491600000000126e-05, 7.48050000000007e-05, 7.52500000000024e-05, 7.515200000000194e-05, 7.524999999999893e-05, 7.501400000000172e-05, 7.518000000000108e-05, 7.501400000000172e-05, 7.51110000000027e-05, 7.502800000000129e-05, 7.484699999999941e-05, 7.518100000000055e-05, 7.473599999999886e-05, 7.513900000000184e-05, 7.472199999999929e-05, 7.516700000000098e-05, 7.491700000000073e-05, 7.481999999999975e-05, 7.508400000000304e-05, 7.502800000000129e-05, 7.498700000000205e-05, 7.511099999999923e-05, 7.524999999999893e-05, 7.497199999999954e-05, 7.522199999999979e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.513899999999837e-05]</msg>
<status status="PASS" starttime="20201115 23:00:14.696" endtime="20201115 23:00:14.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.692" endtime="20201115 23:00:14.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.701" endtime="20201115 23:00:14.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.705" endtime="20201115 23:00:14.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.703" endtime="20201115 23:00:14.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.700" endtime="20201115 23:00:14.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.331" endtime="20201115 23:00:14.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.329" endtime="20201115 23:00:14.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.328" endtime="20201115 23:00:14.726"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.728" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.737" endtime="20201115 23:00:14.755"></status>
</kw>
<msg timestamp="20201115 23:00:14.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.735" endtime="20201115 23:00:14.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.757" endtime="20201115 23:00:14.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.760" endtime="20201115 23:00:14.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.733" endtime="20201115 23:00:14.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.730" endtime="20201115 23:00:14.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.769" endtime="20201115 23:00:15.054"></status>
</kw>
<msg timestamp="20201115 23:00:15.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025662542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025739458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.767" endtime="20201115 23:00:15.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025662542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025739458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.059" endtime="20201115 23:00:15.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.067" endtime="20201115 23:00:15.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.765" endtime="20201115 23:00:15.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.763" endtime="20201115 23:00:15.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.074" level="INFO">${RESULT} = [{'time': 0.025739458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.691599999999979e-05, 'source_diff': 7.691599999999979e-05}, {'time': 0.025821278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.071" endtime="20201115 23:00:15.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.088" level="INFO">${ACCURACY} = {'time': [0.025739458, 0.025821278, 0.025902292, 0.025983306, 0.026064292, 0.026145292, 0.026226319, 0.026307319, 0.026388333, 0.026469319, 0.026550333, 0.026631333, 0.026712333, 0.026793347, 0.026874...</msg>
<status status="PASS" starttime="20201115 23:00:15.075" endtime="20201115 23:00:15.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.092" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.091" endtime="20201115 23:00:15.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.095" level="INFO">VALUE: [7.691599999999979e-05, 7.613899999999937e-05, 7.598600000000011e-05, 7.586199999999946e-05, 7.598600000000011e-05, 7.590300000000216e-05, 7.593000000000183e-05, 7.586099999999998e-05, 7.615199999999947e-05, 7.622200000000079e-05, 7.604099999999892e-05, 7.616599999999904e-05, 7.59440000000014e-05, 7.59029999999987e-05, 7.622200000000079e-05, 7.611100000000023e-05, 7.623600000000036e-05, 7.622199999999732e-05, 7.59029999999987e-05, 7.615300000000241e-05, 7.5763999999999e-05, 7.601399999999925e-05, 7.579200000000161e-05, 7.586099999999998e-05, 7.602799999999882e-05, 7.627799999999907e-05, 7.613900000000284e-05, 7.597199999999707e-05, 7.591599999999879e-05, 7.620800000000122e-05, 7.592999999999836e-05, 7.59440000000014e-05, 7.61249999999998e-05, 7.627799999999907e-05, 7.573599999999986e-05, 7.597200000000054e-05, 7.574999999999943e-05, 7.570800000000072e-05, 7.611100000000023e-05, 7.572200000000029e-05, 7.608299999999762e-05, 7.572200000000029e-05, 7.609700000000066e-05, 7.601400000000272e-05, 7.629199999999864e-05, 7.598600000000011e-05, 7.609799999999667e-05, 7.598699999999958e-05, 7.573699999999933e-05, 7.615300000000241e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.093" endtime="20201115 23:00:15.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.089" endtime="20201115 23:00:15.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.098" endtime="20201115 23:00:15.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.102" endtime="20201115 23:00:15.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.100" endtime="20201115 23:00:15.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.096" endtime="20201115 23:00:15.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.729" endtime="20201115 23:00:15.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.727" endtime="20201115 23:00:15.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.726" endtime="20201115 23:00:15.123"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.125" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.134" endtime="20201115 23:00:15.152"></status>
</kw>
<msg timestamp="20201115 23:00:15.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.132" endtime="20201115 23:00:15.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.153" endtime="20201115 23:00:15.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.156" endtime="20201115 23:00:15.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.129" endtime="20201115 23:00:15.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.127" endtime="20201115 23:00:15.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.165" endtime="20201115 23:00:15.451"></status>
</kw>
<msg timestamp="20201115 23:00:15.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024091083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.163" endtime="20201115 23:00:15.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024091083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.456" endtime="20201115 23:00:15.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.464" endtime="20201115 23:00:15.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.161" endtime="20201115 23:00:15.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.159" endtime="20201115 23:00:15.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.471" level="INFO">${RESULT} = [{'time': 0.024168722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.763900000000087e-05, 'source_diff': 7.763900000000087e-05}, {'time': 0.024251611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.468" endtime="20201115 23:00:15.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.485" level="INFO">${ACCURACY} = {'time': [0.024168722, 0.024251611, 0.024333569, 0.024415625, 0.024497583, 0.024579597, 0.024661597, 0.024743597, 0.024825597, 0.024907611, 0.024989625, 0.025071625, 0.025153681, 0.025235625, 0.025317...</msg>
<status status="PASS" starttime="20201115 23:00:15.472" endtime="20201115 23:00:15.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.489" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.488" endtime="20201115 23:00:15.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.492" level="INFO">VALUE: [7.763900000000087e-05, 7.747199999999857e-05, 7.711099999999776e-05, 7.722199999999832e-05, 7.692999999999936e-05, 7.673600000000086e-05, 7.704099999999992e-05, 7.698599999999764e-05, 7.675000000000043e-05, 7.700000000000068e-05, 7.719400000000265e-05, 7.688900000000012e-05, 7.698700000000058e-05, 7.702799999999982e-05, 7.680599999999871e-05, 7.725000000000093e-05, 7.712499999999733e-05, 7.679200000000261e-05, 7.708400000000157e-05, 7.727800000000007e-05, 7.684800000000089e-05, 7.700000000000068e-05, 7.715299999999994e-05, 7.72770000000006e-05, 7.706899999999905e-05, 7.686100000000098e-05, 7.686100000000098e-05, 7.687499999999708e-05, 7.706899999999905e-05, 7.683299999999837e-05, 7.701400000000025e-05, 7.701400000000025e-05, 7.723600000000136e-05, 7.702799999999982e-05, 7.711099999999776e-05, 7.727800000000007e-05, 7.699999999999721e-05, 7.672200000000129e-05, 7.702799999999982e-05, 7.69029999999997e-05, 7.716699999999951e-05, 7.6764e-05, 7.683400000000132e-05, 7.726300000000103e-05, 7.700000000000068e-05, 7.679099999999967e-05, 7.723599999999789e-05, 7.725000000000093e-05, 7.73189999999993e-05, 7.698600000000111e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.490" endtime="20201115 23:00:15.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.486" endtime="20201115 23:00:15.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.495" endtime="20201115 23:00:15.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.498" endtime="20201115 23:00:15.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.497" endtime="20201115 23:00:15.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.493" endtime="20201115 23:00:15.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.126" endtime="20201115 23:00:15.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.124" endtime="20201115 23:00:15.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.123" endtime="20201115 23:00:15.520"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.522" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.530" endtime="20201115 23:00:15.548"></status>
</kw>
<msg timestamp="20201115 23:00:15.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.529" endtime="20201115 23:00:15.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.550" endtime="20201115 23:00:15.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.553" endtime="20201115 23:00:15.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.526" endtime="20201115 23:00:15.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.524" endtime="20201115 23:00:15.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.562" endtime="20201115 23:00:15.848"></status>
</kw>
<msg timestamp="20201115 23:00:15.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024265069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024343472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.560" endtime="20201115 23:00:15.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024265069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024343472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.852" endtime="20201115 23:00:15.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.860" endtime="20201115 23:00:15.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.558" endtime="20201115 23:00:15.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.556" endtime="20201115 23:00:15.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.867" level="INFO">${RESULT} = [{'time': 0.024343472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.84030000000012e-05, 'source_diff': 7.84030000000012e-05}, {'time': 0.024427292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:15.864" endtime="20201115 23:00:15.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.881" level="INFO">${ACCURACY} = {'time': [0.024343472, 0.024427292, 0.024510361, 0.024593306, 0.024676319, 0.024759333, 0.024842347, 0.024925347, 0.025008333, 0.025091361, 0.025174347, 0.025257361, 0.025340375, 0.025423458, 0.025506...</msg>
<status status="PASS" starttime="20201115 23:00:15.868" endtime="20201115 23:00:15.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.885" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.884" endtime="20201115 23:00:15.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.888" level="INFO">VALUE: [7.84030000000012e-05, 7.805599999999996e-05, 7.823600000000236e-05, 7.784799999999842e-05, 7.808299999999962e-05, 7.82770000000016e-05, 7.773600000000186e-05, 7.794399999999993e-05, 7.7764000000001e-05, 7.827800000000107e-05, 7.758299999999912e-05, 7.794399999999993e-05, 7.802799999999735e-05, 7.830500000000074e-05, 7.822200000000279e-05, 7.79030000000007e-05, 7.781999999999928e-05, 7.786099999999851e-05, 7.806999999999953e-05, 7.820899999999922e-05, 7.820899999999922e-05, 7.780599999999971e-05, 7.816700000000051e-05, 7.786200000000146e-05, 7.804100000000092e-05, 7.799999999999821e-05, 7.822199999999932e-05, 7.820799999999975e-05, 7.783299999999937e-05, 7.802799999999735e-05, 7.822200000000279e-05, 7.794399999999993e-05, 7.811099999999876e-05, 7.829200000000064e-05, 7.822199999999932e-05, 7.818100000000008e-05, 7.815299999999747e-05, 7.79449999999994e-05, 7.815300000000094e-05, 7.818100000000008e-05, 7.800000000000168e-05, 7.818100000000008e-05, 7.79449999999994e-05, 7.806999999999953e-05, 7.823599999999889e-05, 7.813799999999843e-05, 7.791599999999732e-05, 7.800000000000168e-05, 7.815200000000147e-05, 7.7764000000001e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.886" endtime="20201115 23:00:15.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.882" endtime="20201115 23:00:15.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.891" endtime="20201115 23:00:15.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.894" endtime="20201115 23:00:15.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.893" endtime="20201115 23:00:15.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.889" endtime="20201115 23:00:15.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.523" endtime="20201115 23:00:15.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.521" endtime="20201115 23:00:15.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.520" endtime="20201115 23:00:15.916"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.918" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.927" endtime="20201115 23:00:15.945"></status>
</kw>
<msg timestamp="20201115 23:00:15.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.925" endtime="20201115 23:00:15.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.946" endtime="20201115 23:00:15.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.949" endtime="20201115 23:00:15.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.922" endtime="20201115 23:00:15.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.920" endtime="20201115 23:00:15.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.958" endtime="20201115 23:00:16.244"></status>
</kw>
<msg timestamp="20201115 23:00:16.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025642417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025722069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.957" endtime="20201115 23:00:16.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025642417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025722069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.248" endtime="20201115 23:00:16.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.256" endtime="20201115 23:00:16.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.954" endtime="20201115 23:00:16.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.952" endtime="20201115 23:00:16.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.263" level="INFO">${RESULT} = [{'time': 0.025722069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.96519999999995e-05, 'source_diff': 7.96519999999995e-05}, {'time': 0.025806958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:16.260" endtime="20201115 23:00:16.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.278" level="INFO">${ACCURACY} = {'time': [0.025722069, 0.025806958, 0.025890917, 0.025974931, 0.026058931, 0.026142931, 0.026226931, 0.026310958, 0.026394944, 0.026479014, 0.026562972, 0.026646986, 0.026730972, 0.026815, 0.026898986...</msg>
<status status="PASS" starttime="20201115 23:00:16.264" endtime="20201115 23:00:16.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.283" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.282" endtime="20201115 23:00:16.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.285" level="INFO">VALUE: [7.96519999999995e-05, 7.949999999999971e-05, 7.898599999999964e-05, 7.91389999999989e-05, 7.904200000000139e-05, 7.923700000000283e-05, 7.880599999999724e-05, 7.927699999999913e-05, 7.88190000000008e-05, 7.899999999999921e-05, 7.902800000000182e-05, 7.894400000000093e-05, 7.917999999999814e-05, 7.90970000000002e-05, 7.887499999999908e-05, 7.90970000000002e-05, 7.870800000000025e-05, 7.905600000000096e-05, 7.904100000000192e-05, 7.89450000000004e-05, 7.88190000000008e-05, 7.920900000000022e-05, 7.91389999999989e-05, 7.891700000000126e-05, 7.911200000000271e-05, 7.90840000000001e-05, 7.9151999999999e-05, 7.90129999999993e-05, 7.876300000000253e-05, 7.923599999999989e-05, 7.917999999999814e-05, 7.872199999999982e-05, 7.917999999999814e-05, 7.920800000000075e-05, 7.915300000000194e-05, 7.925000000000293e-05, 7.890299999999822e-05, 7.900000000000268e-05, 7.92779999999986e-05, 7.919500000000065e-05, 7.891700000000126e-05, 7.880600000000071e-05, 7.884699999999994e-05, 7.873599999999939e-05, 7.891700000000126e-05, 7.924999999999946e-05, 7.848700000000208e-05, 7.911099999999976e-05, 7.888899999999865e-05, 7.870800000000025e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.284" endtime="20201115 23:00:16.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.279" endtime="20201115 23:00:16.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.288" endtime="20201115 23:00:16.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.292" endtime="20201115 23:00:16.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.290" endtime="20201115 23:00:16.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.287" endtime="20201115 23:00:16.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.919" endtime="20201115 23:00:16.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.917" endtime="20201115 23:00:16.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.916" endtime="20201115 23:00:16.313"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.316" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.324" endtime="20201115 23:00:16.342"></status>
</kw>
<msg timestamp="20201115 23:00:16.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.322" endtime="20201115 23:00:16.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.344" endtime="20201115 23:00:16.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.346" endtime="20201115 23:00:16.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.320" endtime="20201115 23:00:16.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.318" endtime="20201115 23:00:16.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.356" endtime="20201115 23:00:16.641"></status>
</kw>
<msg timestamp="20201115 23:00:16.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024672875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024753778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.354" endtime="20201115 23:00:16.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024672875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024753778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.645" endtime="20201115 23:00:16.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.654" endtime="20201115 23:00:16.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.351" endtime="20201115 23:00:16.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.350" endtime="20201115 23:00:16.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.660" level="INFO">${RESULT} = [{'time': 0.024753778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.090300000000022e-05, 'source_diff': 8.090300000000022e-05}, {'time': 0.024839625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:16.657" endtime="20201115 23:00:16.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.674" level="INFO">${ACCURACY} = {'time': [0.024753778, 0.024839625, 0.024924639, 0.025009639, 0.025094653, 0.025179653, 0.025264653, 0.025349708, 0.025434681, 0.025519708, 0.025604681, 0.025689708, 0.025774694, 0.025859708, 0.025944...</msg>
<status status="PASS" starttime="20201115 23:00:16.661" endtime="20201115 23:00:16.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.679" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.677" endtime="20201115 23:00:16.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.681" level="INFO">VALUE: [8.090300000000022e-05, 8.0458000000002e-05, 7.993099999999836e-05, 7.972200000000082e-05, 7.979200000000214e-05, 8.004199999999892e-05, 8.015300000000294e-05, 8.01389999999999e-05, 7.979200000000214e-05, 7.977699999999963e-05, 8.016699999999904e-05, 8.016599999999957e-05, 7.993000000000236e-05, 8.008299999999816e-05, 7.986100000000051e-05, 8.005499999999902e-05, 7.97779999999991e-05, 8.026400000000003e-05, 7.962499999999983e-05, 8.000000000000021e-05, 8.026400000000003e-05, 8.016699999999904e-05, 7.987500000000008e-05, 7.972200000000082e-05, 7.98329999999979e-05, 7.982000000000128e-05, 7.970899999999725e-05, 7.976399999999953e-05, 7.976399999999953e-05, 7.973600000000039e-05, 7.970900000000072e-05, 7.99719999999976e-05, 8.019400000000218e-05, 8.024999999999699e-05, 8.01389999999999e-05, 7.992999999999889e-05, 7.97779999999991e-05, 8.023599999999742e-05, 7.986100000000051e-05, 7.993100000000183e-05, 8.000000000000021e-05, 8.016700000000251e-05, 7.997200000000107e-05, 7.974999999999996e-05, 8.000000000000021e-05, 8.012500000000033e-05, 7.99169999999988e-05, 7.98329999999979e-05, 7.9764000000003e-05, 8.007000000000153e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.680" endtime="20201115 23:00:16.682"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.675" endtime="20201115 23:00:16.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.685" endtime="20201115 23:00:16.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.688" endtime="20201115 23:00:16.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.686" endtime="20201115 23:00:16.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.683" endtime="20201115 23:00:16.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.316" endtime="20201115 23:00:16.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.314" endtime="20201115 23:00:16.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.314" endtime="20201115 23:00:16.709"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.712" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.720" endtime="20201115 23:00:16.739"></status>
</kw>
<msg timestamp="20201115 23:00:16.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.718" endtime="20201115 23:00:16.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.740" endtime="20201115 23:00:16.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.743" endtime="20201115 23:00:16.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.716" endtime="20201115 23:00:16.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.714" endtime="20201115 23:00:16.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.752" endtime="20201115 23:00:17.038"></status>
</kw>
<msg timestamp="20201115 23:00:17.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02451825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024600472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:16.750" endtime="20201115 23:00:17.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02451825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024600472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:17.042" endtime="20201115 23:00:17.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.050" endtime="20201115 23:00:17.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.748" endtime="20201115 23:00:17.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.746" endtime="20201115 23:00:17.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.057" level="INFO">${RESULT} = [{'time': 0.024600472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.222200000000332e-05, 'source_diff': 8.222200000000332e-05}, {'time': 0.024687333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:17.054" endtime="20201115 23:00:17.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.071" level="INFO">${ACCURACY} = {'time': [0.024600472, 0.024687333, 0.024773319, 0.024859333, 0.024945333, 0.025031361, 0.025117361, 0.025203361, 0.025289375, 0.025375375, 0.025461375, 0.025547403, 0.025633403, 0.025719431, 0.025805...</msg>
<status status="PASS" starttime="20201115 23:00:17.059" endtime="20201115 23:00:17.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.076" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.074" endtime="20201115 23:00:17.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.079" level="INFO">VALUE: [8.222200000000332e-05, 8.136099999999855e-05, 8.115199999999753e-05, 8.11390000000009e-05, 8.120799999999928e-05, 8.087499999999762e-05, 8.083300000000238e-05, 8.092999999999989e-05, 8.076400000000053e-05, 8.073599999999792e-05, 8.08190000000028e-05, 8.09719999999986e-05, 8.087499999999762e-05, 8.10840000000021e-05, 8.073600000000139e-05, 8.101400000000078e-05, 8.119499999999918e-05, 8.09450000000024e-05, 8.125000000000146e-05, 8.116700000000004e-05, 8.075000000000096e-05, 8.123599999999842e-05, 8.095799999999903e-05, 8.111100000000177e-05, 8.088900000000065e-05, 8.130500000000027e-05, 8.080499999999977e-05, 8.080499999999977e-05, 8.124999999999799e-05, 8.125000000000146e-05, 8.076400000000053e-05, 8.09719999999986e-05, 8.086099999999805e-05, 8.097300000000154e-05, 8.115300000000047e-05, 8.11109999999983e-05, 8.120899999999875e-05, 8.100000000000121e-05, 8.119499999999918e-05, 8.09589999999985e-05, 8.08190000000028e-05, 8.116600000000057e-05, 8.1152000000001e-05, 8.124999999999799e-05, 8.087500000000108e-05, 8.104100000000045e-05, 8.094399999999946e-05, 8.08329999999989e-05, 8.109699999999873e-05, 8.111100000000177e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.077" endtime="20201115 23:00:17.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.072" endtime="20201115 23:00:17.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.082" endtime="20201115 23:00:17.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.085" endtime="20201115 23:00:17.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.084" endtime="20201115 23:00:17.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.080" endtime="20201115 23:00:17.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.712" endtime="20201115 23:00:17.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.710" endtime="20201115 23:00:17.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.710" endtime="20201115 23:00:17.106"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.109" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.117" endtime="20201115 23:00:17.135"></status>
</kw>
<msg timestamp="20201115 23:00:17.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.115" endtime="20201115 23:00:17.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.137" endtime="20201115 23:00:17.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.140" endtime="20201115 23:00:17.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.113" endtime="20201115 23:00:17.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.111" endtime="20201115 23:00:17.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.149" endtime="20201115 23:00:17.435"></status>
</kw>
<msg timestamp="20201115 23:00:17.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024233764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024316403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.147" endtime="20201115 23:00:17.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024233764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024316403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.439" endtime="20201115 23:00:17.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.447" endtime="20201115 23:00:17.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.144" endtime="20201115 23:00:17.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.143" endtime="20201115 23:00:17.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.454" level="INFO">${RESULT} = [{'time': 0.024316403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.263899999999894e-05, 'source_diff': 8.263899999999894e-05}, {'time': 0.024404264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:17.451" endtime="20201115 23:00:17.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.468" level="INFO">${ACCURACY} = {'time': [0.024316403, 0.024404264, 0.024491264, 0.024578264, 0.024665264, 0.024752264, 0.024839278, 0.024926278, 0.025013292, 0.025100306, 0.025187389, 0.025274306, 0.025361361, 0.025448319, 0.025535...</msg>
<status status="PASS" starttime="20201115 23:00:17.456" endtime="20201115 23:00:17.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.473" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.472" endtime="20201115 23:00:17.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.475" level="INFO">VALUE: [8.263899999999894e-05, 8.223599999999942e-05, 8.218099999999715e-05, 8.177799999999763e-05, 8.19719999999996e-05, 8.17780000000011e-05, 8.186099999999905e-05, 8.169499999999968e-05, 8.188899999999819e-05, 8.183399999999938e-05, 8.207000000000006e-05, 8.17369999999984e-05, 8.199999999999874e-05, 8.200000000000221e-05, 8.199999999999874e-05, 8.224999999999899e-05, 8.155500000000052e-05, 8.21109999999993e-05, 8.204100000000145e-05, 8.172199999999935e-05, 8.223599999999942e-05, 8.186099999999905e-05, 8.195800000000003e-05, 8.223599999999942e-05, 8.198599999999917e-05, 8.176400000000153e-05, 8.202800000000135e-05, 8.201400000000178e-05, 8.173600000000239e-05, 8.230500000000127e-05, 8.170799999999978e-05, 8.17919999999972e-05, 8.187499999999862e-05, 8.184699999999948e-05, 8.187500000000208e-05, 8.206900000000059e-05, 8.198599999999917e-05, 8.193000000000089e-05, 8.184699999999948e-05, 8.170799999999978e-05, 8.227799999999813e-05, 8.188899999999819e-05, 8.176399999999806e-05, 8.193100000000036e-05, 8.190300000000122e-05, 8.224999999999899e-05, 8.179200000000067e-05, 8.199999999999874e-05, 8.170899999999925e-05, 8.226299999999909e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.474" endtime="20201115 23:00:17.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.469" endtime="20201115 23:00:17.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.479" endtime="20201115 23:00:17.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.482" endtime="20201115 23:00:17.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.480" endtime="20201115 23:00:17.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.477" endtime="20201115 23:00:17.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.110" endtime="20201115 23:00:17.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.108" endtime="20201115 23:00:17.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.107" endtime="20201115 23:00:17.503"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.506" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.514" endtime="20201115 23:00:17.534"></status>
</kw>
<msg timestamp="20201115 23:00:17.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.512" endtime="20201115 23:00:17.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.535" endtime="20201115 23:00:17.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.538" endtime="20201115 23:00:17.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.510" endtime="20201115 23:00:17.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.508" endtime="20201115 23:00:17.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.547" endtime="20201115 23:00:17.833"></status>
</kw>
<msg timestamp="20201115 23:00:17.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025130278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025214569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.545" endtime="20201115 23:00:17.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025130278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025214569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.838" endtime="20201115 23:00:17.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.846" endtime="20201115 23:00:17.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.543" endtime="20201115 23:00:17.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.541" endtime="20201115 23:00:17.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.853" level="INFO">${RESULT} = [{'time': 0.025214569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.429100000000023e-05, 'source_diff': 8.429100000000023e-05}, {'time': 0.025303417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:17.850" endtime="20201115 23:00:17.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.868" level="INFO">${ACCURACY} = {'time': [0.025214569, 0.025303417, 0.025391417, 0.025479431, 0.025567458, 0.025655444, 0.025743458, 0.025831458, 0.025919458, 0.026007472, 0.026095486, 0.026183486, 0.0262715, 0.026359486, 0.02644751...</msg>
<status status="PASS" starttime="20201115 23:00:17.854" endtime="20201115 23:00:17.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.872" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.871" endtime="20201115 23:00:17.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.875" level="INFO">VALUE: [8.429100000000023e-05, 8.343100000000186e-05, 8.308400000000063e-05, 8.29590000000005e-05, 8.277700000000263e-05, 8.31659999999991e-05, 8.319400000000171e-05, 8.304100000000245e-05, 8.288899999999919e-05, 8.320800000000128e-05, 8.301400000000278e-05, 8.312499999999987e-05, 8.312499999999987e-05, 8.318000000000214e-05, 8.313899999999944e-05, 8.302799999999888e-05, 8.274999999999949e-05, 8.291699999999833e-05, 8.327799999999913e-05, 8.31110000000003e-05, 8.290300000000222e-05, 8.305599999999802e-05, 8.29590000000005e-05, 8.316700000000204e-05, 8.322199999999738e-05, 8.304100000000245e-05, 8.3152999999999e-05, 8.286100000000005e-05, 8.327799999999913e-05, 8.29720000000006e-05, 8.299999999999974e-05, 8.3152999999999e-05, 8.318000000000214e-05, 8.309700000000073e-05, 8.323600000000042e-05, 8.309700000000073e-05, 8.323600000000042e-05, 8.306899999999812e-05, 8.286100000000005e-05, 8.270900000000025e-05, 8.324999999999999e-05, 8.277799999999863e-05, 8.283400000000038e-05, 8.284700000000048e-05, 8.304099999999898e-05, 8.301400000000278e-05, 8.329099999999923e-05, 8.287499999999962e-05, 8.319400000000171e-05, 8.317999999999867e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.874" endtime="20201115 23:00:17.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.869" endtime="20201115 23:00:17.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.878" endtime="20201115 23:00:17.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.882" endtime="20201115 23:00:17.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.880" endtime="20201115 23:00:17.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.876" endtime="20201115 23:00:17.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.506" endtime="20201115 23:00:17.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.505" endtime="20201115 23:00:17.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.504" endtime="20201115 23:00:17.903"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.905" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.914" endtime="20201115 23:00:17.932"></status>
</kw>
<msg timestamp="20201115 23:00:17.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.912" endtime="20201115 23:00:17.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.933" endtime="20201115 23:00:17.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.936" endtime="20201115 23:00:17.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.910" endtime="20201115 23:00:17.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.907" endtime="20201115 23:00:17.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.945" endtime="20201115 23:00:18.232"></status>
</kw>
<msg timestamp="20201115 23:00:18.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024124417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024209389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.943" endtime="20201115 23:00:18.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024124417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024209389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.236" endtime="20201115 23:00:18.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.244" endtime="20201115 23:00:18.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.941" endtime="20201115 23:00:18.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.939" endtime="20201115 23:00:18.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.251" level="INFO">${RESULT} = [{'time': 0.024209389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.49720000000026e-05, 'source_diff': 8.49720000000026e-05}, {'time': 0.024299222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:18.248" endtime="20201115 23:00:18.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.264" level="INFO">${ACCURACY} = {'time': [0.024209389, 0.024299222, 0.024388222, 0.024477222, 0.024566236, 0.024655236, 0.024744236, 0.02483325, 0.024922278, 0.025011292, 0.025100264, 0.025189292, 0.025278306, 0.025367347, 0.0254563...</msg>
<status status="PASS" starttime="20201115 23:00:18.252" endtime="20201115 23:00:18.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.269" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.268" endtime="20201115 23:00:18.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.271" level="INFO">VALUE: [8.49720000000026e-05, 8.423599999999795e-05, 8.417999999999967e-05, 8.417999999999967e-05, 8.422200000000185e-05, 8.377799999999963e-05, 8.412500000000087e-05, 8.388900000000019e-05, 8.427800000000013e-05, 8.416699999999958e-05, 8.400000000000074e-05, 8.420899999999829e-05, 8.390299999999976e-05, 8.391599999999985e-05, 8.388900000000019e-05, 8.406999999999859e-05, 8.387500000000062e-05, 8.420800000000228e-05, 8.400000000000074e-05, 8.391600000000332e-05, 8.420799999999881e-05, 8.408299999999869e-05, 8.381900000000234e-05, 8.3846999999998e-05, 8.404199999999945e-05, 8.390299999999976e-05, 8.425000000000099e-05, 8.422200000000185e-05, 8.409699999999826e-05, 8.401400000000031e-05, 8.419499999999872e-05, 8.426400000000056e-05, 8.413900000000044e-05, 8.384800000000095e-05, 8.427699999999719e-05, 8.383400000000138e-05, 8.406899999999912e-05, 8.379099999999973e-05, 8.372200000000135e-05, 8.409699999999826e-05, 8.39720000000016e-05, 8.372199999999788e-05, 8.405600000000249e-05, 8.388900000000019e-05, 8.409699999999826e-05, 8.394499999999847e-05, 8.391699999999933e-05, 8.376400000000006e-05, 8.3846999999998e-05, 8.394499999999847e-05]</msg>
<status status="PASS" starttime="20201115 23:00:18.270" endtime="20201115 23:00:18.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.265" endtime="20201115 23:00:18.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.274" endtime="20201115 23:00:18.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.279" endtime="20201115 23:00:18.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.277" endtime="20201115 23:00:18.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.273" endtime="20201115 23:00:18.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.906" endtime="20201115 23:00:18.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.904" endtime="20201115 23:00:18.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.903" endtime="20201115 23:00:18.300"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.302" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.311" endtime="20201115 23:00:18.328"></status>
</kw>
<msg timestamp="20201115 23:00:18.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.309" endtime="20201115 23:00:18.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.330" endtime="20201115 23:00:18.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.333" endtime="20201115 23:00:18.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.306" endtime="20201115 23:00:18.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.304" endtime="20201115 23:00:18.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.342" endtime="20201115 23:00:18.627"></status>
</kw>
<msg timestamp="20201115 23:00:18.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023991875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024077792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.340" endtime="20201115 23:00:18.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023991875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024077792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.637" endtime="20201115 23:00:18.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.657" endtime="20201115 23:00:18.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.338" endtime="20201115 23:00:18.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.336" endtime="20201115 23:00:18.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.672" level="INFO">${RESULT} = [{'time': 0.024077792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.591700000000133e-05, 'source_diff': 8.591700000000133e-05}, {'time': 0.024168625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:18.664" endtime="20201115 23:00:18.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.704" level="INFO">${ACCURACY} = {'time': [0.024077792, 0.024168625, 0.024258653, 0.024348639, 0.024438639, 0.024528653, 0.024618653, 0.024708681, 0.024798681, 0.024888667, 0.024978694, 0.025068708, 0.025158694, 0.025248722, 0.025338...</msg>
<status status="PASS" starttime="20201115 23:00:18.674" endtime="20201115 23:00:18.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.714" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.712" endtime="20201115 23:00:18.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.720" level="INFO">VALUE: [8.591700000000133e-05, 8.533299999999994e-05, 8.520900000000275e-05, 8.481999999999934e-05, 8.526400000000156e-05, 8.518100000000015e-05, 8.512500000000187e-05, 8.484799999999848e-05, 8.491700000000033e-05, 8.508399999999916e-05, 8.479100000000073e-05, 8.506900000000012e-05, 8.51249999999984e-05, 8.469399999999974e-05, 8.481899999999987e-05, 8.509700000000273e-05, 8.477800000000063e-05, 8.470799999999931e-05, 8.491700000000033e-05, 8.497199999999913e-05, 8.476399999999759e-05, 8.491700000000033e-05, 8.501400000000131e-05, 8.488900000000119e-05, 8.525000000000199e-05, 8.494499999999947e-05, 8.4846999999999e-05, 8.473699999999793e-05, 8.48050000000003e-05, 8.486199999999805e-05, 8.502699999999794e-05, 8.527699999999819e-05, 8.500000000000174e-05, 8.509700000000273e-05, 8.497199999999913e-05, 8.488900000000119e-05, 8.523599999999895e-05, 8.513899999999797e-05, 8.500000000000174e-05, 8.495799999999956e-05, 8.476400000000106e-05, 8.47920000000002e-05, 8.520799999999981e-05, 8.516700000000058e-05, 8.477800000000063e-05, 8.486099999999858e-05, 8.506999999999959e-05, 8.527699999999819e-05, 8.49859999999987e-05, 8.48050000000003e-05]</msg>
<status status="PASS" starttime="20201115 23:00:18.717" endtime="20201115 23:00:18.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.706" endtime="20201115 23:00:18.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.727" endtime="20201115 23:00:18.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.732" endtime="20201115 23:00:18.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.730" endtime="20201115 23:00:18.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.723" endtime="20201115 23:00:18.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.303" endtime="20201115 23:00:18.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.301" endtime="20201115 23:00:18.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.300" endtime="20201115 23:00:18.753"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.756" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.765" endtime="20201115 23:00:18.783"></status>
</kw>
<msg timestamp="20201115 23:00:18.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.763" endtime="20201115 23:00:18.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.784" endtime="20201115 23:00:18.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.787" endtime="20201115 23:00:18.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.760" endtime="20201115 23:00:18.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.758" endtime="20201115 23:00:18.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.801" endtime="20201115 23:00:19.086"></status>
</kw>
<msg timestamp="20201115 23:00:19.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025697972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025785097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.799" endtime="20201115 23:00:19.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025697972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025785097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.090" endtime="20201115 23:00:19.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.098" endtime="20201115 23:00:19.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.792" endtime="20201115 23:00:19.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.790" endtime="20201115 23:00:19.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.105" level="INFO">${RESULT} = [{'time': 0.025785097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.71250000000004e-05, 'source_diff': 8.71250000000004e-05}, {'time': 0.025876958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:19.102" endtime="20201115 23:00:19.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.118" level="INFO">${ACCURACY} = {'time': [0.025785097, 0.025876958, 0.025967958, 0.026058958, 0.026149958, 0.026240958, 0.026332042, 0.026422972, 0.026513986, 0.026604986, 0.026696, 0.026787, 0.026878014, 0.026969069, 0.027060042, 0...</msg>
<status status="PASS" starttime="20201115 23:00:19.106" endtime="20201115 23:00:19.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.123" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.122" endtime="20201115 23:00:19.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.125" level="INFO">VALUE: [8.71250000000004e-05, 8.616599999999863e-05, 8.604099999999851e-05, 8.627699999999919e-05, 8.606900000000112e-05, 8.623600000000342e-05, 8.595900000000004e-05, 8.570800000000031e-05, 8.591700000000133e-05, 8.594400000000099e-05, 8.59859999999997e-05, 8.586099999999958e-05, 8.576399999999859e-05, 8.574999999999902e-05, 8.624999999999952e-05, 8.623599999999995e-05, 8.608400000000016e-05, 8.606900000000112e-05, 8.630499999999833e-05, 8.620900000000029e-05, 8.605500000000155e-05, 8.627700000000266e-05, 8.591600000000185e-05, 8.602699999999894e-05, 8.604099999999851e-05, 8.577799999999816e-05, 8.611099999999983e-05, 8.590300000000176e-05, 8.572199999999988e-05, 8.579199999999773e-05, 8.591699999999786e-05, 8.627799999999866e-05, 8.561099999999933e-05, 8.570899999999979e-05, 8.588900000000219e-05, 8.595900000000004e-05, 8.602799999999841e-05, 8.572299999999936e-05, 8.57370000000024e-05, 8.591600000000185e-05, 8.583300000000044e-05, 8.591599999999838e-05, 8.59859999999997e-05, 8.58050000000013e-05, 8.576400000000206e-05, 8.620799999999734e-05, 8.626399999999909e-05, 8.608300000000069e-05, 8.580600000000077e-05, 8.591700000000133e-05]</msg>
<status status="PASS" starttime="20201115 23:00:19.124" endtime="20201115 23:00:19.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.119" endtime="20201115 23:00:19.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.128" endtime="20201115 23:00:19.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.132" endtime="20201115 23:00:19.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.130" endtime="20201115 23:00:19.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.127" endtime="20201115 23:00:19.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.756" endtime="20201115 23:00:19.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.754" endtime="20201115 23:00:19.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.753" endtime="20201115 23:00:19.157"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.159" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.168" endtime="20201115 23:00:19.186"></status>
</kw>
<msg timestamp="20201115 23:00:19.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.166" endtime="20201115 23:00:19.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.188" endtime="20201115 23:00:19.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.190" endtime="20201115 23:00:19.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.163" endtime="20201115 23:00:19.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.161" endtime="20201115 23:00:19.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.199" endtime="20201115 23:00:19.493"></status>
</kw>
<msg timestamp="20201115 23:00:19.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028923319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029011597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.198" endtime="20201115 23:00:19.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028923319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029011597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.502" endtime="20201115 23:00:19.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.521" endtime="20201115 23:00:19.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.195" endtime="20201115 23:00:19.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.193" endtime="20201115 23:00:19.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.535" level="INFO">${RESULT} = [{'time': 0.029011597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.827800000000066e-05, 'source_diff': 8.827800000000066e-05}, {'time': 0.029104417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:19.528" endtime="20201115 23:00:19.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.552" level="INFO">${ACCURACY} = {'time': [0.029011597, 0.029104417, 0.029196431, 0.029288458, 0.029380458, 0.029472444, 0.029564458, 0.029656472, 0.029748472, 0.029840472, 0.0299325, 0.030024569, 0.0301165, 0.030208514, 0.0303005, 0...</msg>
<status status="PASS" starttime="20201115 23:00:19.537" endtime="20201115 23:00:19.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.556" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.555" endtime="20201115 23:00:19.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.559" level="INFO">VALUE: [8.827800000000066e-05, 8.729199999999923e-05, 8.709799999999726e-05, 8.697200000000113e-05, 8.679100000000273e-05, 8.669400000000174e-05, 8.675000000000002e-05, 8.71250000000004e-05, 8.726400000000009e-05, 8.716599999999963e-05, 8.713899999999997e-05, 8.718000000000267e-05, 8.700000000000027e-05, 8.722199999999791e-05, 8.687500000000015e-05, 8.687500000000015e-05, 8.725000000000052e-05, 8.722300000000086e-05, 8.705599999999855e-05, 8.675000000000002e-05, 8.71669999999991e-05, 8.694500000000147e-05, 8.715200000000006e-05, 8.670799999999784e-05, 8.705499999999908e-05, 8.695799999999809e-05, 8.71799999999992e-05, 8.701400000000331e-05, 8.720800000000528e-05, 8.69999999999968e-05, 8.6847000000001e-05, 8.707000000000159e-05, 8.693100000000537e-05, 8.71669999999991e-05, 8.683399999999397e-05, 8.676400000000306e-05, 8.67920000000022e-05, 8.716700000000605e-05, 8.726399999999662e-05, 8.695899999999757e-05, 8.72370000000039e-05, 8.709700000000126e-05, 8.69170000000058e-05, 8.677699999999622e-05, 8.675000000000349e-05, 8.683300000000144e-05, 8.718100000000562e-05, 8.691699999999886e-05, 8.675000000000349e-05, 8.71669999999991e-05]</msg>
<status status="PASS" starttime="20201115 23:00:19.557" endtime="20201115 23:00:19.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.553" endtime="20201115 23:00:19.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.562" endtime="20201115 23:00:19.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.566" endtime="20201115 23:00:19.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.564" endtime="20201115 23:00:19.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.561" endtime="20201115 23:00:19.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.160" endtime="20201115 23:00:19.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.158" endtime="20201115 23:00:19.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.157" endtime="20201115 23:00:19.587"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.589" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.597" endtime="20201115 23:00:19.616"></status>
</kw>
<msg timestamp="20201115 23:00:19.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.596" endtime="20201115 23:00:19.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.617" endtime="20201115 23:00:19.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.620" endtime="20201115 23:00:19.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.593" endtime="20201115 23:00:19.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.591" endtime="20201115 23:00:19.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.629" endtime="20201115 23:00:19.915"></status>
</kw>
<msg timestamp="20201115 23:00:19.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023923875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024012319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.627" endtime="20201115 23:00:19.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023923875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024012319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.920" endtime="20201115 23:00:19.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.928" endtime="20201115 23:00:19.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.625" endtime="20201115 23:00:19.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.623" endtime="20201115 23:00:19.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.934" level="INFO">${RESULT} = [{'time': 0.024012319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.844400000000002e-05, 'source_diff': 8.844400000000002e-05}, {'time': 0.024106153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:19.931" endtime="20201115 23:00:19.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.948" level="INFO">${ACCURACY} = {'time': [0.024012319, 0.024106153, 0.024199153, 0.024292167, 0.024385181, 0.024478181, 0.024571181, 0.024664194, 0.024757208, 0.024850208, 0.024943222, 0.025036222, 0.025129222, 0.025222236, 0.025315...</msg>
<status status="PASS" starttime="20201115 23:00:19.935" endtime="20201115 23:00:19.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.952" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.951" endtime="20201115 23:00:19.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.955" level="INFO">VALUE: [8.844400000000002e-05, 8.811100000000183e-05, 8.770900000000179e-05, 8.798599999999823e-05, 8.797299999999814e-05, 8.780600000000277e-05, 8.81670000000001e-05, 8.775000000000102e-05, 8.816600000000063e-05, 8.786099999999811e-05, 8.809700000000226e-05, 8.783299999999897e-05, 8.804100000000051e-05, 8.797199999999866e-05, 8.792999999999995e-05, 8.820799999999934e-05, 8.806899999999965e-05, 8.790300000000029e-05, 8.826400000000109e-05, 8.788900000000072e-05, 8.769499999999875e-05, 8.823599999999848e-05, 8.827800000000066e-05, 8.808400000000216e-05, 8.783399999999844e-05, 8.793099999999943e-05, 8.776400000000059e-05, 8.822200000000238e-05, 8.79999999999978e-05, 8.81800000000002e-05, 8.79860000000017e-05, 8.81250000000014e-05, 8.798599999999823e-05, 8.773599999999798e-05, 8.790300000000029e-05, 8.811100000000183e-05, 8.820799999999934e-05, 8.815299999999707e-05, 8.826400000000109e-05, 8.805599999999955e-05, 8.827800000000066e-05, 8.81389999999975e-05, 8.787500000000115e-05, 8.794399999999952e-05, 8.826300000000162e-05, 8.770799999999884e-05, 8.81800000000002e-05, 8.784699999999854e-05, 8.822199999999891e-05, 8.790300000000029e-05]</msg>
<status status="PASS" starttime="20201115 23:00:19.953" endtime="20201115 23:00:19.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.949" endtime="20201115 23:00:19.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.958" endtime="20201115 23:00:19.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.962" endtime="20201115 23:00:19.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.960" endtime="20201115 23:00:19.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.957" endtime="20201115 23:00:19.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.590" endtime="20201115 23:00:19.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.588" endtime="20201115 23:00:19.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.587" endtime="20201115 23:00:19.983"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.985" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.994" endtime="20201115 23:00:20.012"></status>
</kw>
<msg timestamp="20201115 23:00:20.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.992" endtime="20201115 23:00:20.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.013" endtime="20201115 23:00:20.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.016" endtime="20201115 23:00:20.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.990" endtime="20201115 23:00:20.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.987" endtime="20201115 23:00:20.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.025" endtime="20201115 23:00:20.310"></status>
</kw>
<msg timestamp="20201115 23:00:20.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024021833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024111319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.023" endtime="20201115 23:00:20.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024021833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024111319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.314" endtime="20201115 23:00:20.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.323" endtime="20201115 23:00:20.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.020" endtime="20201115 23:00:20.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.019" endtime="20201115 23:00:20.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.330" level="INFO">${RESULT} = [{'time': 0.024111319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.948599999999973e-05, 'source_diff': 8.948599999999973e-05}, {'time': 0.024206153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:20.326" endtime="20201115 23:00:20.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.343" level="INFO">${ACCURACY} = {'time': [0.024111319, 0.024206153, 0.024300181, 0.024394167, 0.024488167, 0.024582181, 0.024676194, 0.024770194, 0.024864194, 0.024958208, 0.02505225, 0.025146222, 0.025240236, 0.025334236, 0.0254282...</msg>
<status status="PASS" starttime="20201115 23:00:20.331" endtime="20201115 23:00:20.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.348" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.347" endtime="20201115 23:00:20.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.351" level="INFO">VALUE: [8.948599999999973e-05, 8.909699999999979e-05, 8.884799999999901e-05, 8.919500000000025e-05, 8.904200000000098e-05, 8.89730000000026e-05, 8.89999999999988e-05, 8.888799999999877e-05, 8.873599999999898e-05, 8.88190000000004e-05, 8.927800000000166e-05, 8.895800000000009e-05, 8.906900000000065e-05, 8.877800000000116e-05, 8.888899999999825e-05, 8.877799999999769e-05, 8.906900000000065e-05, 8.905600000000055e-05, 8.918100000000068e-05, 8.883299999999997e-05, 8.887500000000215e-05, 8.912499999999893e-05, 8.926400000000209e-05, 8.890300000000129e-05, 8.8945e-05, 8.883299999999997e-05, 8.894399999999705e-05, 8.873600000000245e-05, 8.930499999999786e-05, 8.916599999999816e-05, 8.877799999999769e-05, 8.870799999999984e-05, 8.905499999999761e-05, 8.934700000000004e-05, 8.926399999999862e-05, 8.879199999999726e-05, 8.91670000000011e-05, 8.922199999999991e-05, 8.893100000000043e-05, 8.897199999999966e-05, 8.923699999999896e-05, 8.924999999999905e-05, 8.873700000000193e-05, 8.920800000000034e-05, 8.91250000000024e-05, 8.880500000000083e-05, 8.895800000000009e-05, 8.924999999999905e-05, 8.895800000000009e-05, 8.929200000000123e-05]</msg>
<status status="PASS" starttime="20201115 23:00:20.349" endtime="20201115 23:00:20.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.344" endtime="20201115 23:00:20.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.354" endtime="20201115 23:00:20.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.357" endtime="20201115 23:00:20.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.356" endtime="20201115 23:00:20.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.352" endtime="20201115 23:00:20.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.986" endtime="20201115 23:00:20.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.984" endtime="20201115 23:00:20.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.983" endtime="20201115 23:00:20.378"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.381" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.389" endtime="20201115 23:00:20.408"></status>
</kw>
<msg timestamp="20201115 23:00:20.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.388" endtime="20201115 23:00:20.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.410" endtime="20201115 23:00:20.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.412" endtime="20201115 23:00:20.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.385" endtime="20201115 23:00:20.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.383" endtime="20201115 23:00:20.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.421" endtime="20201115 23:00:20.707"></status>
</kw>
<msg timestamp="20201115 23:00:20.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024722806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024813722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.420" endtime="20201115 23:00:20.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024722806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024813722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.711" endtime="20201115 23:00:20.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.720" endtime="20201115 23:00:20.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.417" endtime="20201115 23:00:20.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.415" endtime="20201115 23:00:20.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.727" level="INFO">${RESULT} = [{'time': 0.024813722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.091599999999991e-05, 'source_diff': 9.091599999999991e-05}, {'time': 0.024909569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:20.724" endtime="20201115 23:00:20.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.741" level="INFO">${ACCURACY} = {'time': [0.024813722, 0.024909569, 0.025004569, 0.025099597, 0.025194597, 0.025289597, 0.025384597, 0.025479611, 0.025574653, 0.025669625, 0.025764625, 0.025859639, 0.025954639, 0.026049667, 0.026144...</msg>
<status status="PASS" starttime="20201115 23:00:20.728" endtime="20201115 23:00:20.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.745" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.744" endtime="20201115 23:00:20.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.748" level="INFO">VALUE: [9.091599999999991e-05, 9.025000000000005e-05, 9.006900000000165e-05, 9.013900000000297e-05, 8.994399999999805e-05, 9.022200000000091e-05, 9.004099999999904e-05, 9.012499999999993e-05, 9.030599999999833e-05, 8.963900000000247e-05, 8.974999999999955e-05, 8.98060000000013e-05, 8.991700000000186e-05, 8.983399999999697e-05, 9.022300000000039e-05, 8.993100000000143e-05, 8.98199999999974e-05, 8.974999999999955e-05, 9.002800000000241e-05, 8.997200000000066e-05, 9.017999999999873e-05, 8.997200000000066e-05, 9.027800000000266e-05, 8.980499999999836e-05, 9.022200000000091e-05, 9.012499999999993e-05, 9.020800000000134e-05, 9.001399999999937e-05, 9.025000000000005e-05, 9.007000000000112e-05, 9.01670000000021e-05, 9.016699999999864e-05, 9.001399999999937e-05, 9.015299999999907e-05, 9.025000000000005e-05, 8.991699999999839e-05, 8.998600000000023e-05, 8.974999999999955e-05, 8.992999999999848e-05, 8.987499999999968e-05, 8.991699999999839e-05, 8.998600000000023e-05, 8.987499999999968e-05, 9.006899999999818e-05, 8.98190000000014e-05, 9.026399999999962e-05, 8.979199999999826e-05, 9.008400000000069e-05, 9.027799999999919e-05, 9.023599999999701e-05]</msg>
<status status="PASS" starttime="20201115 23:00:20.746" endtime="20201115 23:00:20.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.742" endtime="20201115 23:00:20.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.751" endtime="20201115 23:00:20.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.754" endtime="20201115 23:00:20.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.753" endtime="20201115 23:00:20.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.749" endtime="20201115 23:00:20.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.381" endtime="20201115 23:00:20.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.380" endtime="20201115 23:00:20.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.379" endtime="20201115 23:00:20.775"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.778" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.786" endtime="20201115 23:00:20.806"></status>
</kw>
<msg timestamp="20201115 23:00:20.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.785" endtime="20201115 23:00:20.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.807" endtime="20201115 23:00:20.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.810" endtime="20201115 23:00:20.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.782" endtime="20201115 23:00:20.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.780" endtime="20201115 23:00:20.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.820" endtime="20201115 23:00:21.106"></status>
</kw>
<msg timestamp="20201115 23:00:21.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025435653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025527681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.818" endtime="20201115 23:00:21.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025435653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025527681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.110" endtime="20201115 23:00:21.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.119" endtime="20201115 23:00:21.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.815" endtime="20201115 23:00:21.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.813" endtime="20201115 23:00:21.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.126" level="INFO">${RESULT} = [{'time': 0.025527681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.202800000000094e-05, 'source_diff': 9.202800000000094e-05}, {'time': 0.0256245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:21.122" endtime="20201115 23:00:21.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.140" level="INFO">${ACCURACY} = {'time': [0.025527681, 0.0256245, 0.025720514, 0.025816514, 0.025912528, 0.026008528, 0.026104542, 0.026200542, 0.026296569, 0.026392569, 0.026488569, 0.026584583, 0.026680583, 0.026776597, 0.02687261...</msg>
<status status="PASS" starttime="20201115 23:00:21.126" endtime="20201115 23:00:21.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.145" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.144" endtime="20201115 23:00:21.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.148" level="INFO">VALUE: [9.202800000000094e-05, 9.147200000000216e-05, 9.109699999999832e-05, 9.084699999999807e-05, 9.076400000000012e-05, 9.073600000000098e-05, 9.102799999999994e-05, 9.104199999999951e-05, 9.097199999999819e-05, 9.119400000000277e-05, 9.095799999999862e-05, 9.094399999999905e-05, 9.097200000000166e-05, 9.124999999999758e-05, 9.123600000000148e-05, 9.109699999999832e-05, 9.097199999999819e-05, 9.116699999999964e-05, 9.115300000000007e-05, 9.076400000000012e-05, 9.101400000000037e-05, 9.130599999999933e-05, 9.1332999999999e-05, 9.102799999999994e-05, 9.077799999999969e-05, 9.079199999999926e-05, 9.102799999999994e-05, 9.112500000000093e-05, 9.112500000000093e-05, 9.095800000000209e-05, 9.084700000000154e-05, 9.079099999999979e-05, 9.119400000000277e-05, 9.081899999999893e-05, 9.086099999999764e-05, 9.125000000000105e-05, 9.098600000000123e-05, 9.093099999999896e-05, 9.126400000000062e-05, 9.126400000000062e-05, 9.095900000000157e-05, 9.10000000000008e-05, 9.102799999999994e-05, 9.098600000000123e-05, 9.090299999999982e-05, 9.117999999999973e-05, 9.095800000000209e-05, 9.075000000000055e-05, 9.081899999999893e-05, 9.084699999999807e-05]</msg>
<status status="PASS" starttime="20201115 23:00:21.146" endtime="20201115 23:00:21.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.141" endtime="20201115 23:00:21.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.151" endtime="20201115 23:00:21.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.154" endtime="20201115 23:00:21.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.153" endtime="20201115 23:00:21.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.149" endtime="20201115 23:00:21.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.779" endtime="20201115 23:00:21.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.777" endtime="20201115 23:00:21.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.776" endtime="20201115 23:00:21.175"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.178" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.186" endtime="20201115 23:00:21.205"></status>
</kw>
<msg timestamp="20201115 23:00:21.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.184" endtime="20201115 23:00:21.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.206" endtime="20201115 23:00:21.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.209" endtime="20201115 23:00:21.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.182" endtime="20201115 23:00:21.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.180" endtime="20201115 23:00:21.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.219" endtime="20201115 23:00:21.504"></status>
</kw>
<msg timestamp="20201115 23:00:21.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024210458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.217" endtime="20201115 23:00:21.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024210458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.508" endtime="20201115 23:00:21.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.517" endtime="20201115 23:00:21.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.214" endtime="20201115 23:00:21.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.213" endtime="20201115 23:00:21.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.524" level="INFO">${RESULT} = [{'time': 0.024210458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.315199999999912e-05, 'source_diff': 9.315199999999912e-05}, {'time': 0.024307306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:21.520" endtime="20201115 23:00:21.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.537" level="INFO">${ACCURACY} = {'time': [0.024210458, 0.024307306, 0.024404306, 0.024501361, 0.024598333, 0.024695333, 0.024792347, 0.024889347, 0.024986347, 0.025083361, 0.025180375, 0.025277375, 0.025374389, 0.025471403, 0.025568...</msg>
<status status="PASS" starttime="20201115 23:00:21.525" endtime="20201115 23:00:21.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.542" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.541" endtime="20201115 23:00:21.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.544" level="INFO">VALUE: [9.315199999999912e-05, 9.158400000000219e-05, 9.208399999999922e-05, 9.20139999999979e-05, 9.187500000000168e-05, 9.179100000000079e-05, 9.19719999999992e-05, 9.179100000000079e-05, 9.226399999999815e-05, 9.223599999999901e-05, 9.223600000000248e-05, 9.175000000000155e-05, 9.180599999999983e-05, 9.180599999999983e-05, 9.227800000000119e-05, 9.219499999999978e-05, 9.19589999999991e-05, 9.177799999999722e-05, 9.218100000000021e-05, 9.184799999999854e-05, 9.204099999999757e-05, 9.201400000000137e-05, 9.195799999999962e-05, 9.204100000000104e-05, 9.218000000000073e-05, 9.180500000000036e-05, 9.211099999999889e-05, 9.179200000000026e-05, 9.206999999999965e-05, 9.180599999999983e-05, 9.20000000000018e-05, 9.227800000000119e-05, 9.215300000000107e-05, 9.190300000000082e-05, 9.190300000000082e-05, 9.218100000000021e-05, 9.193000000000048e-05, 9.16939999999998e-05, 9.18329999999995e-05, 9.186099999999864e-05, 9.188899999999778e-05, 9.186100000000211e-05, 9.226400000000162e-05, 9.180599999999983e-05, 9.186100000000211e-05, 9.204200000000051e-05, 9.209699999999932e-05, 9.18199999999994e-05, 9.227800000000119e-05, 9.182000000000287e-05]</msg>
<status status="PASS" starttime="20201115 23:00:21.543" endtime="20201115 23:00:21.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.538" endtime="20201115 23:00:21.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.548" endtime="20201115 23:00:21.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.551" endtime="20201115 23:00:21.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.549" endtime="20201115 23:00:21.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.546" endtime="20201115 23:00:21.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.178" endtime="20201115 23:00:21.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.176" endtime="20201115 23:00:21.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.176" endtime="20201115 23:00:21.572"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.574" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.583" endtime="20201115 23:00:21.602"></status>
</kw>
<msg timestamp="20201115 23:00:21.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.582" endtime="20201115 23:00:21.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.604" endtime="20201115 23:00:21.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.606" endtime="20201115 23:00:21.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.579" endtime="20201115 23:00:21.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.576" endtime="20201115 23:00:21.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.616" endtime="20201115 23:00:21.901"></status>
</kw>
<msg timestamp="20201115 23:00:21.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024640681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024734569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.614" endtime="20201115 23:00:21.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024640681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024734569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.905" endtime="20201115 23:00:21.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.914" endtime="20201115 23:00:21.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.611" endtime="20201115 23:00:21.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.610" endtime="20201115 23:00:21.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.920" level="INFO">${RESULT} = [{'time': 0.024734569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.38880000000003e-05, 'source_diff': 9.38880000000003e-05}, {'time': 0.024833431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:21.917" endtime="20201115 23:00:21.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.935" level="INFO">${ACCURACY} = {'time': [0.024734569, 0.024833431, 0.024931417, 0.025029444, 0.025127431, 0.025225458, 0.025323458, 0.025421458, 0.025519486, 0.025617486, 0.025715486, 0.025813528, 0.025911486, 0.0260095, 0.0261075,...</msg>
<status status="PASS" starttime="20201115 23:00:21.921" endtime="20201115 23:00:21.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.941" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.939" endtime="20201115 23:00:21.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.944" level="INFO">VALUE: [9.38880000000003e-05, 9.344500000000103e-05, 9.284799999999954e-05, 9.327700000000272e-05, 9.274999999999908e-05, 9.323600000000001e-05, 9.291599999999844e-05, 9.327699999999925e-05, 9.311099999999989e-05, 9.312499999999946e-05, 9.302799999999847e-05, 9.302799999999847e-05, 9.323600000000001e-05, 9.290300000000182e-05, 9.276399999999865e-05, 9.284800000000301e-05, 9.293100000000096e-05, 9.290300000000182e-05, 9.272199999999994e-05, 9.326399999999915e-05, 9.311099999999989e-05, 9.283399999999997e-05, 9.287499999999921e-05, 9.281900000000093e-05, 9.294399999999758e-05, 9.281900000000093e-05, 9.317999999999826e-05, 9.305500000000161e-05, 9.286099999999964e-05, 9.299999999999933e-05, 9.290299999999835e-05, 9.299999999999933e-05, 9.291700000000139e-05, 9.299999999999933e-05, 9.277800000000169e-05, 9.304199999999804e-05, 9.266699999999767e-05, 9.280600000000083e-05, 9.298699999999924e-05, 9.311099999999989e-05, 9.295800000000062e-05, 9.326399999999915e-05, 9.327699999999925e-05, 9.308300000000075e-05, 9.28330000000005e-05, 9.329199999999829e-05, 9.319399999999783e-05, 9.311099999999989e-05, 9.322200000000044e-05, 9.329200000000176e-05]</msg>
<status status="PASS" starttime="20201115 23:00:21.942" endtime="20201115 23:00:21.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.936" endtime="20201115 23:00:21.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.948" endtime="20201115 23:00:21.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.953" endtime="20201115 23:00:21.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.951" endtime="20201115 23:00:21.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.946" endtime="20201115 23:00:21.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.575" endtime="20201115 23:00:21.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.573" endtime="20201115 23:00:21.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.572" endtime="20201115 23:00:21.976"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.978" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.986" endtime="20201115 23:00:22.005"></status>
</kw>
<msg timestamp="20201115 23:00:22.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.985" endtime="20201115 23:00:22.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.007" endtime="20201115 23:00:22.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.010" endtime="20201115 23:00:22.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.982" endtime="20201115 23:00:22.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.980" endtime="20201115 23:00:22.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.019" endtime="20201115 23:00:22.305"></status>
</kw>
<msg timestamp="20201115 23:00:22.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025179736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025274319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.017" endtime="20201115 23:00:22.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025179736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025274319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.309" endtime="20201115 23:00:22.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.318" endtime="20201115 23:00:22.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.015" endtime="20201115 23:00:22.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.013" endtime="20201115 23:00:22.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.324" level="INFO">${RESULT} = [{'time': 0.025274319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.458299999999878e-05, 'source_diff': 9.458299999999878e-05}, {'time': 0.025374111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:22.321" endtime="20201115 23:00:22.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.338" level="INFO">${ACCURACY} = {'time': [0.025274319, 0.025374111, 0.025473097, 0.025572125, 0.025671111, 0.025770181, 0.025869139, 0.025968194, 0.026067139, 0.026166153, 0.026265153, 0.026364167, 0.026463167, 0.026562208, 0.026661...</msg>
<status status="PASS" starttime="20201115 23:00:22.325" endtime="20201115 23:00:22.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.342" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.341" endtime="20201115 23:00:22.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.345" level="INFO">VALUE: [9.458299999999878e-05, 9.434700000000157e-05, 9.419399999999883e-05, 9.412500000000046e-05, 9.373600000000051e-05, 9.431999999999843e-05, 9.402799999999947e-05, 9.429099999999982e-05, 9.39720000000012e-05, 9.402799999999947e-05, 9.380599999999836e-05, 9.379200000000226e-05, 9.388899999999978e-05, 9.375000000000008e-05, 9.424999999999711e-05, 9.395799999999815e-05, 9.380500000000236e-05, 9.420800000000187e-05, 9.395799999999815e-05, 9.39720000000012e-05, 9.383299999999803e-05, 9.425000000000058e-05, 9.42079999999984e-05, 9.411100000000089e-05, 9.388899999999978e-05, 9.393099999999849e-05, 9.409700000000132e-05, 9.373600000000051e-05, 9.425000000000058e-05, 9.400000000000033e-05, 9.425000000000058e-05, 9.390199999999987e-05, 9.39720000000012e-05, 9.41659999999997e-05, 9.381900000000193e-05, 9.379099999999932e-05, 9.39720000000012e-05, 9.416699999999917e-05, 9.408300000000175e-05, 9.429200000000276e-05, 9.379199999999879e-05, 9.375000000000008e-05, 9.425000000000058e-05, 9.405599999999861e-05, 9.370900000000085e-05, 9.402800000000294e-05, 9.409700000000132e-05, 9.404100000000304e-05, 9.429099999999982e-05, 9.369399999999833e-05]</msg>
<status status="PASS" starttime="20201115 23:00:22.344" endtime="20201115 23:00:22.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.339" endtime="20201115 23:00:22.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.349" endtime="20201115 23:00:22.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.352" endtime="20201115 23:00:22.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.351" endtime="20201115 23:00:22.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.347" endtime="20201115 23:00:22.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.979" endtime="20201115 23:00:22.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.977" endtime="20201115 23:00:22.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.976" endtime="20201115 23:00:22.373"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.376" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.384" endtime="20201115 23:00:22.405"></status>
</kw>
<msg timestamp="20201115 23:00:22.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.383" endtime="20201115 23:00:22.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.406" endtime="20201115 23:00:22.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.409" endtime="20201115 23:00:22.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.380" endtime="20201115 23:00:22.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.378" endtime="20201115 23:00:22.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.418" endtime="20201115 23:00:22.703"></status>
</kw>
<msg timestamp="20201115 23:00:22.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025135889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025232069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.416" endtime="20201115 23:00:22.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025135889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025232069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.707" endtime="20201115 23:00:22.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.716" endtime="20201115 23:00:22.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.414" endtime="20201115 23:00:22.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.412" endtime="20201115 23:00:22.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.722" level="INFO">${RESULT} = [{'time': 0.025232069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.61799999999978e-05, 'source_diff': 9.61799999999978e-05}, {'time': 0.025332889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:22.719" endtime="20201115 23:00:22.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.737" level="INFO">${ACCURACY} = {'time': [0.025232069, 0.025332889, 0.025432903, 0.025532903, 0.025632917, 0.025732931, 0.025833, 0.025932931, 0.026033, 0.026132944, 0.026232958, 0.026332958, 0.026432986, 0.026532986, 0.026633, 0.02...</msg>
<status status="PASS" starttime="20201115 23:00:22.723" endtime="20201115 23:00:22.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.742" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.741" endtime="20201115 23:00:22.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.745" level="INFO">VALUE: [9.61799999999978e-05, 9.536100000000214e-05, 9.527800000000072e-05, 9.513899999999756e-05, 9.512500000000146e-05, 9.50140000000009e-05, 9.512499999999799e-05, 9.473700000000099e-05, 9.49720000000022e-05, 9.477700000000075e-05, 9.490200000000087e-05, 9.511099999999842e-05, 9.530499999999692e-05, 9.477800000000022e-05, 9.50140000000009e-05, 9.488900000000078e-05, 9.511099999999842e-05, 9.491699999999992e-05, 9.479199999999979e-05, 9.509699999999885e-05, 9.513900000000103e-05, 9.522299999999845e-05, 9.490300000000035e-05, 9.520899999999888e-05, 9.513900000000103e-05, 9.49019999999974e-05, 9.526400000000115e-05, 9.523600000000201e-05, 9.505500000000014e-05, 9.479199999999979e-05, 9.486100000000164e-05, 9.527800000000072e-05, 9.484799999999807e-05, 9.486100000000164e-05, 9.497199999999872e-05, 9.502800000000047e-05, 9.529200000000029e-05, 9.51530000000006e-05, 9.474999999999761e-05, 9.484800000000154e-05, 9.475000000000108e-05, 9.495899999999863e-05, 9.491600000000044e-05, 9.51660000000007e-05, 9.515200000000112e-05, 9.476400000000065e-05, 9.526400000000115e-05, 9.519399999999983e-05, 9.51530000000006e-05, 9.518099999999974e-05]</msg>
<status status="PASS" starttime="20201115 23:00:22.743" endtime="20201115 23:00:22.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.738" endtime="20201115 23:00:22.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.748" endtime="20201115 23:00:22.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.752" endtime="20201115 23:00:22.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.750" endtime="20201115 23:00:22.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.746" endtime="20201115 23:00:22.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.376" endtime="20201115 23:00:22.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.374" endtime="20201115 23:00:22.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.374" endtime="20201115 23:00:22.773"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.775" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.783" endtime="20201115 23:00:22.802"></status>
</kw>
<msg timestamp="20201115 23:00:22.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.782" endtime="20201115 23:00:22.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.804" endtime="20201115 23:00:22.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.806" endtime="20201115 23:00:22.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.779" endtime="20201115 23:00:22.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.777" endtime="20201115 23:00:22.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.816" endtime="20201115 23:00:23.100"></status>
</kw>
<msg timestamp="20201115 23:00:23.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024594639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024691611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.814" endtime="20201115 23:00:23.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024594639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024691611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.104" endtime="20201115 23:00:23.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.113" endtime="20201115 23:00:23.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.811" endtime="20201115 23:00:23.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.810" endtime="20201115 23:00:23.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.120" level="INFO">${RESULT} = [{'time': 0.024691611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.697199999999725e-05, 'source_diff': 9.697199999999725e-05}, {'time': 0.024793431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:23.116" endtime="20201115 23:00:23.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.134" level="INFO">${ACCURACY} = {'time': [0.024691611, 0.024793431, 0.024894458, 0.024995444, 0.025096472, 0.025197458, 0.025298472, 0.025399472, 0.025500486, 0.025601528, 0.0257025, 0.025803514, 0.025904514, 0.026005528, 0.02610658...</msg>
<status status="PASS" starttime="20201115 23:00:23.121" endtime="20201115 23:00:23.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.138" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.137" endtime="20201115 23:00:23.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.141" level="INFO">VALUE: [9.697199999999725e-05, 9.626400000000215e-05, 9.587500000000221e-05, 9.594399999999711e-05, 9.581900000000046e-05, 9.581900000000046e-05, 9.583300000000003e-05, 9.627799999999825e-05, 9.588899999999831e-05, 9.613899999999856e-05, 9.613899999999856e-05, 9.577800000000122e-05, 9.607000000000018e-05, 9.581999999999993e-05, 9.608300000000028e-05, 9.611199999999889e-05, 9.60140000000019e-05, 9.580600000000036e-05, 9.612500000000246e-05, 9.595800000000015e-05, 9.599999999999886e-05, 9.624999999999911e-05, 9.615299999999813e-05, 9.619399999999736e-05, 9.591699999999745e-05, 9.573599999999904e-05, 9.627799999999825e-05, 9.593100000000049e-05, 9.608399999999975e-05, 9.584799999999907e-05, 9.591700000000092e-05, 9.626399999999868e-05, 9.587499999999874e-05, 9.594500000000006e-05, 9.599999999999886e-05, 9.575000000000208e-05, 9.612499999999899e-05, 9.598600000000276e-05, 9.576400000000165e-05, 9.627799999999825e-05, 9.572199999999947e-05, 9.590299999999788e-05, 9.620799999999693e-05, 9.601399999999843e-05, 9.588899999999831e-05, 9.601399999999843e-05, 9.588899999999831e-05, 9.612499999999899e-05, 9.623599999999954e-05, 9.584799999999907e-05]</msg>
<status status="PASS" starttime="20201115 23:00:23.139" endtime="20201115 23:00:23.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.134" endtime="20201115 23:00:23.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.144" endtime="20201115 23:00:23.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.147" endtime="20201115 23:00:23.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.146" endtime="20201115 23:00:23.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.142" endtime="20201115 23:00:23.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.776" endtime="20201115 23:00:23.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.774" endtime="20201115 23:00:23.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.773" endtime="20201115 23:00:23.168"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.171" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.179" endtime="20201115 23:00:23.197"></status>
</kw>
<msg timestamp="20201115 23:00:23.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.178" endtime="20201115 23:00:23.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.199" endtime="20201115 23:00:23.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.202" endtime="20201115 23:00:23.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.175" endtime="20201115 23:00:23.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.173" endtime="20201115 23:00:23.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.211" endtime="20201115 23:00:23.496"></status>
</kw>
<msg timestamp="20201115 23:00:23.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024245375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024342792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.209" endtime="20201115 23:00:23.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024245375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024342792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.500" endtime="20201115 23:00:23.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.509" endtime="20201115 23:00:23.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.206" endtime="20201115 23:00:23.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.205" endtime="20201115 23:00:23.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.516" level="INFO">${RESULT} = [{'time': 0.024342792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.741699999999895e-05, 'source_diff': 9.741699999999895e-05}, {'time': 0.024445639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:23.513" endtime="20201115 23:00:23.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.530" level="INFO">${ACCURACY} = {'time': [0.024342792, 0.024445639, 0.024547639, 0.024649681, 0.024751653, 0.024853681, 0.024955667, 0.025057708, 0.025159708, 0.025261694, 0.025363722, 0.025465736, 0.025567722, 0.025669722, 0.025771...</msg>
<status status="PASS" starttime="20201115 23:00:23.517" endtime="20201115 23:00:23.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.534" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.533" endtime="20201115 23:00:23.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.537" level="INFO">VALUE: [9.741699999999895e-05, 9.709700000000085e-05, 9.7027999999999e-05, 9.711199999999989e-05, 9.719499999999784e-05, 9.723700000000002e-05, 9.677800000000222e-05, 9.727699999999978e-05, 9.694399999999812e-05, 9.694400000000158e-05, 9.723599999999707e-05, 9.683299999999756e-05, 9.722200000000097e-05, 9.677799999999875e-05, 9.691699999999845e-05, 9.723600000000054e-05, 9.686100000000017e-05, 9.712499999999999e-05, 9.711100000000042e-05, 9.694400000000158e-05, 9.676399999999918e-05, 9.686100000000017e-05, 9.690299999999888e-05, 9.715299999999913e-05, 9.726300000000021e-05, 9.674999999999961e-05, 9.723600000000054e-05, 9.706900000000171e-05, 9.706899999999824e-05, 9.70409999999991e-05, 9.701399999999943e-05, 9.677799999999875e-05, 9.691700000000192e-05, 9.71669999999987e-05, 9.705599999999814e-05, 9.702800000000247e-05, 9.690300000000235e-05, 9.726400000000315e-05, 9.720900000000088e-05, 9.677799999999875e-05, 9.690299999999888e-05, 9.684800000000007e-05, 9.684699999999713e-05, 9.708300000000128e-05, 9.691699999999845e-05, 9.7027999999999e-05, 9.705499999999867e-05, 9.723600000000054e-05, 9.723599999999707e-05, 9.7027999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:00:23.535" endtime="20201115 23:00:23.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.531" endtime="20201115 23:00:23.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.540" endtime="20201115 23:00:23.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.543" endtime="20201115 23:00:23.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.542" endtime="20201115 23:00:23.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.538" endtime="20201115 23:00:23.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.171" endtime="20201115 23:00:23.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.170" endtime="20201115 23:00:23.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.169" endtime="20201115 23:00:23.564"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.567" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.575" endtime="20201115 23:00:23.594"></status>
</kw>
<msg timestamp="20201115 23:00:23.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.573" endtime="20201115 23:00:23.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.595" endtime="20201115 23:00:23.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.598" endtime="20201115 23:00:23.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.571" endtime="20201115 23:00:23.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.569" endtime="20201115 23:00:23.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.608" endtime="20201115 23:00:23.894"></status>
</kw>
<msg timestamp="20201115 23:00:23.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0240845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02418375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:23.605" endtime="20201115 23:00:23.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0240845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02418375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:23.898" endtime="20201115 23:00:23.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.907" endtime="20201115 23:00:23.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.603" endtime="20201115 23:00:23.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.601" endtime="20201115 23:00:23.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.913" level="INFO">${RESULT} = [{'time': 0.02418375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.925000000000211e-05, 'source_diff': 9.925000000000211e-05}, {'time': 0.024287583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:23.910" endtime="20201115 23:00:23.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.927" level="INFO">${ACCURACY} = {'time': [0.02418375, 0.024287583, 0.024390583, 0.024493597, 0.024596625, 0.024699625, 0.024802611, 0.024905639, 0.025008639, 0.025111653, 0.025214653, 0.025317653, 0.025420667, 0.025523667, 0.0256266...</msg>
<status status="PASS" starttime="20201115 23:00:23.914" endtime="20201115 23:00:23.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.932" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.931" endtime="20201115 23:00:23.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.934" level="INFO">VALUE: [9.925000000000211e-05, 9.838900000000081e-05, 9.772200000000147e-05, 9.801400000000043e-05, 9.793099999999902e-05, 9.775000000000061e-05, 9.829199999999982e-05, 9.823600000000154e-05, 9.779199999999932e-05, 9.782000000000193e-05, 9.809699999999838e-05, 9.777799999999975e-05, 9.793100000000249e-05, 9.813900000000056e-05, 9.813899999999709e-05, 9.786200000000064e-05, 9.805499999999967e-05, 9.812500000000099e-05, 9.824999999999764e-05, 9.805499999999967e-05, 9.769400000000233e-05, 9.788900000000031e-05, 9.792999999999955e-05, 9.800000000000086e-05, 9.791699999999945e-05, 9.772200000000147e-05, 9.809700000000185e-05, 9.826400000000068e-05, 9.808400000000175e-05, 9.829199999999982e-05, 9.809699999999838e-05, 9.819500000000231e-05, 9.795799999999869e-05, 9.773599999999757e-05, 9.81799999999998e-05, 9.819399999999937e-05, 9.827799999999678e-05, 9.790299999999988e-05, 9.800000000000086e-05, 9.78470000000016e-05, 9.819499999999884e-05, 9.813899999999709e-05, 9.809700000000185e-05, 9.809699999999838e-05, 9.781900000000246e-05, 9.818099999999927e-05, 9.779099999999985e-05, 9.78340000000015e-05, 9.78470000000016e-05, 9.780499999999942e-05]</msg>
<status status="PASS" starttime="20201115 23:00:23.933" endtime="20201115 23:00:23.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.928" endtime="20201115 23:00:23.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.937" endtime="20201115 23:00:23.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.941" endtime="20201115 23:00:23.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.939" endtime="20201115 23:00:23.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.936" endtime="20201115 23:00:23.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.567" endtime="20201115 23:00:23.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.566" endtime="20201115 23:00:23.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.565" endtime="20201115 23:00:23.962"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.964" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.973" endtime="20201115 23:00:23.992"></status>
</kw>
<msg timestamp="20201115 23:00:23.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.971" endtime="20201115 23:00:23.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.993" endtime="20201115 23:00:23.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.996" endtime="20201115 23:00:23.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.969" endtime="20201115 23:00:23.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.967" endtime="20201115 23:00:23.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.006" endtime="20201115 23:00:24.292"></status>
</kw>
<msg timestamp="20201115 23:00:24.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025153319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025252875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.004" endtime="20201115 23:00:24.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025153319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025252875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.296" endtime="20201115 23:00:24.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.304" endtime="20201115 23:00:24.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.002" endtime="20201115 23:00:24.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.000" endtime="20201115 23:00:24.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.311" level="INFO">${RESULT} = [{'time': 0.025252875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.955600000000064e-05, 'source_diff': 9.955600000000064e-05}, {'time': 0.025357708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:24.308" endtime="20201115 23:00:24.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.326" level="INFO">${ACCURACY} = {'time': [0.025252875, 0.025357708, 0.025461708, 0.025565736, 0.025669792, 0.025773736, 0.025877736, 0.02598175, 0.026085764, 0.026189764, 0.026293778, 0.026397778, 0.026501833, 0.026605792, 0.0267098...</msg>
<status status="PASS" starttime="20201115 23:00:24.312" endtime="20201115 23:00:24.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.331" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.330" endtime="20201115 23:00:24.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.333" level="INFO">VALUE: [9.955600000000064e-05, 9.92219999999995e-05, 9.888899999999784e-05, 9.930499999999745e-05, 9.894499999999959e-05, 9.91939999999969e-05, 9.915299999999766e-05, 9.894400000000012e-05, 9.887500000000174e-05, 9.920799999999994e-05, 9.927800000000125e-05, 9.906999999999971e-05, 9.901399999999796e-05, 9.920899999999941e-05, 9.929200000000082e-05, 9.881999999999946e-05, 9.890199999999794e-05, 9.920799999999994e-05, 9.880499999999695e-05, 9.89860000000023e-05, 9.888900000000131e-05, 9.879200000000032e-05, 9.905600000000014e-05, 9.891700000000045e-05, 9.923599999999907e-05, 9.897199999999926e-05, 9.898599999999882e-05, 9.90410000000011e-05, 9.906999999999971e-05, 9.877799999999728e-05, 9.9028000000001e-05, 9.925000000000211e-05, 9.915200000000166e-05, 9.920799999999994e-05, 9.877800000000075e-05, 9.931999999999996e-05, 9.884699999999913e-05, 9.876400000000118e-05, 9.874999999999814e-05, 9.927799999999778e-05, 9.915299999999766e-05, 9.888899999999784e-05, 9.919500000000331e-05, 9.93060000000004e-05, 9.901400000000143e-05, 9.911100000000242e-05, 9.883299999999956e-05, 9.898599999999882e-05, 9.927699999999831e-05, 9.894400000000012e-05]</msg>
<status status="PASS" starttime="20201115 23:00:24.332" endtime="20201115 23:00:24.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.327" endtime="20201115 23:00:24.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.336" endtime="20201115 23:00:24.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.340" endtime="20201115 23:00:24.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.338" endtime="20201115 23:00:24.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.335" endtime="20201115 23:00:24.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.965" endtime="20201115 23:00:24.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.963" endtime="20201115 23:00:24.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.962" endtime="20201115 23:00:24.361"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.363" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.376" endtime="20201115 23:00:24.396"></status>
</kw>
<msg timestamp="20201115 23:00:24.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.375" endtime="20201115 23:00:24.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.397" endtime="20201115 23:00:24.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.400" endtime="20201115 23:00:24.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.368" endtime="20201115 23:00:24.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.365" endtime="20201115 23:00:24.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.409" endtime="20201115 23:00:24.695"></status>
</kw>
<msg timestamp="20201115 23:00:24.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028693958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028794486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.407" endtime="20201115 23:00:24.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028693958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028794486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.699" endtime="20201115 23:00:24.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.707" endtime="20201115 23:00:24.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.405" endtime="20201115 23:00:24.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.403" endtime="20201115 23:00:24.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.714" level="INFO">${RESULT} = [{'time': 0.028794486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001005280000000025, 'source_diff': 0.0001005280000000025}, {'time': 0.028899347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:24.711" endtime="20201115 23:00:24.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.727" level="INFO">${ACCURACY} = {'time': [0.028794486, 0.028899347, 0.029004319, 0.029109319, 0.029214333, 0.029319333, 0.029424375, 0.029529347, 0.029634375, 0.029739389, 0.029844375, 0.029949458, 0.030054389, 0.030159403, 0.030264...</msg>
<status status="PASS" starttime="20201115 23:00:24.715" endtime="20201115 23:00:24.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.732" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.731" endtime="20201115 23:00:24.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.734" level="INFO">VALUE: [0.0001005280000000025, 9.959699999999988e-05, 9.965200000000216e-05, 9.975000000000261e-05, 9.990199999999894e-05, 0.00010013899999999909, 0.0001000419999999981, 0.00010027800000000225, 0.00010018100000000127, 0.00010000000000000286, 0.00010005599999999767, 0.00010001400000000243, 9.970800000000044e-05, 0.00010001400000000243, 9.976399999999871e-05, 0.00010002799999999853, 9.976399999999871e-05, 9.981900000000099e-05, 0.00010005500000000167, 0.0001003060000000014, 9.987499999999927e-05, 0.00010020800000000094, 9.990300000000188e-05, 0.00010017999999999833, 0.00010001400000000243, 0.00010025000000000311, 9.981899999999405e-05, 9.993099999999755e-05, 0.00010011099999999995, 9.98479999999996e-05, 9.990299999999841e-05, 0.00010015299999999866, 0.00010002700000000253, 9.973700000000252e-05, 9.987500000000621e-05, 9.99860000000033e-05, 0.0001000689999999943, 9.977699999999534e-05, 0.00010009700000000038, 0.00010017999999999833, 0.00010009700000000038, 0.00010026400000000268, 0.00010025000000000311, 9.984700000000013e-05, 0.00010001400000000243, 0.00010001400000000243, 9.983400000000003e-05, 0.00010005600000000114, 9.987499999999927e-05, 9.998599999999636e-05]</msg>
<status status="PASS" starttime="20201115 23:00:24.733" endtime="20201115 23:00:24.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.728" endtime="20201115 23:00:24.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.738" endtime="20201115 23:00:24.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.741" endtime="20201115 23:00:24.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.739" endtime="20201115 23:00:24.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.736" endtime="20201115 23:00:24.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.364" endtime="20201115 23:00:24.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.362" endtime="20201115 23:00:24.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.361" endtime="20201115 23:00:24.763"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.765" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.773" endtime="20201115 23:00:24.792"></status>
</kw>
<msg timestamp="20201115 23:00:24.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.772" endtime="20201115 23:00:24.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.793" endtime="20201115 23:00:24.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.796" endtime="20201115 23:00:24.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.769" endtime="20201115 23:00:24.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.767" endtime="20201115 23:00:24.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.805" endtime="20201115 23:00:25.091"></status>
</kw>
<msg timestamp="20201115 23:00:25.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024852639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024954181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.803" endtime="20201115 23:00:25.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024852639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024954181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.095" endtime="20201115 23:00:25.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.103" endtime="20201115 23:00:25.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.801" endtime="20201115 23:00:25.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.799" endtime="20201115 23:00:25.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.110" level="INFO">${RESULT} = [{'time': 0.024954181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001015419999999996, 'source_diff': 0.0001015419999999996}, {'time': 0.025061097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:25.107" endtime="20201115 23:00:25.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.123" level="INFO">${ACCURACY} = {'time': [0.024954181, 0.025061097, 0.025167028, 0.025273056, 0.025379042, 0.025485042, 0.025591069, 0.025697069, 0.025803069, 0.025909083, 0.026015083, 0.026121097, 0.026227167, 0.026333111, 0.026439...</msg>
<status status="PASS" starttime="20201115 23:00:25.111" endtime="20201115 23:00:25.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.128" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.127" endtime="20201115 23:00:25.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.130" level="INFO">VALUE: [0.0001015419999999996, 0.00010123600000000108, 0.00010097200000000126, 0.00010112499999999705, 0.00010111100000000095, 0.00010126400000000021, 0.00010097200000000126, 0.0001010549999999992, 0.00010127700000000031, 0.00010092999999999908, 0.00010105500000000267, 0.0001010549999999992, 0.00010105599999999867, 0.00010108299999999834, 0.00010118100000000227, 0.00010125000000000065, 0.0001008610000000007, 0.00010111099999999748, 0.00010129199999999935, 0.00010083399999999756, 0.00010101399999999996, 0.00010079199999999885, 0.00010123700000000055, 0.00010115200000000019, 0.00010077699999999981, 0.00010113900000000009, 0.00010090199999999994, 0.00010111099999999748, 0.00010102799999999953, 0.00010081899999999852, 0.00010111100000000095, 0.00010126400000000021, 0.00010095800000000169, 0.00010099999999999693, 0.00010097200000000126, 0.0001010000000000004, 0.00010087500000000027, 0.00010116599999999976, 0.00010090199999999994, 0.00010073600000000058, 0.00010101300000000049, 0.00010090299999999941, 0.00010097200000000126, 0.00010098599999999736, 0.00010088899999999984, 0.00010081899999999852, 0.00010097200000000126, 0.00010093099999999855, 0.0001010000000000004, 0.00010119500000000184]</msg>
<status status="PASS" starttime="20201115 23:00:25.129" endtime="20201115 23:00:25.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.124" endtime="20201115 23:00:25.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.134" endtime="20201115 23:00:25.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.137" endtime="20201115 23:00:25.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.136" endtime="20201115 23:00:25.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.132" endtime="20201115 23:00:25.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.766" endtime="20201115 23:00:25.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.764" endtime="20201115 23:00:25.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.763" endtime="20201115 23:00:25.158"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.161" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.169" endtime="20201115 23:00:25.188"></status>
</kw>
<msg timestamp="20201115 23:00:25.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.168" endtime="20201115 23:00:25.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.190" endtime="20201115 23:00:25.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.193" endtime="20201115 23:00:25.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.165" endtime="20201115 23:00:25.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.163" endtime="20201115 23:00:25.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.202" endtime="20201115 23:00:25.487"></status>
</kw>
<msg timestamp="20201115 23:00:25.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024540083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024642681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.200" endtime="20201115 23:00:25.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024540083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024642681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.491" endtime="20201115 23:00:25.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.499" endtime="20201115 23:00:25.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.198" endtime="20201115 23:00:25.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.196" endtime="20201115 23:00:25.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.506" level="INFO">${RESULT} = [{'time': 0.024642681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010259799999999888, 'source_diff': 0.00010259799999999888}, {'time': 0.024750528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:25.503" endtime="20201115 23:00:25.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.519" level="INFO">${ACCURACY} = {'time': [0.024642681, 0.024750528, 0.024857528, 0.024964528, 0.025071542, 0.025178542, 0.025285556, 0.025392583, 0.025499569, 0.025606597, 0.025713583, 0.025820639, 0.025927611, 0.026034625, 0.026141...</msg>
<status status="PASS" starttime="20201115 23:00:25.507" endtime="20201115 23:00:25.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.524" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.523" endtime="20201115 23:00:25.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.527" level="INFO">VALUE: [0.00010259799999999888, 0.00010211100000000195, 0.00010190300000000041, 0.00010220899999999894, 0.00010226399999999775, 0.00010169500000000234, 0.000101819999999999, 0.00010201400000000097, 0.00010202700000000106, 0.00010190299999999694, 0.00010198600000000183, 0.00010174999999999768, 0.00010180499999999995, 0.00010195799999999922, 0.00010173600000000158, 0.00010177700000000081, 0.00010188900000000084, 0.00010195899999999869, 0.00010191699999999998, 0.00010198600000000183, 0.00010193000000000008, 0.0001020550000000002, 0.00010194499999999912, 0.00010179099999999691, 0.00010204100000000063, 0.00010208299999999934, 0.00010216600000000076, 0.0001018749999999978, 0.00010202800000000053, 0.00010225000000000165, 0.00010188900000000084, 0.00010224999999999818, 0.0001020420000000001, 0.00010195800000000269, 0.00010212500000000152, 0.00010197299999999826, 0.00010186099999999823, 0.0001020000000000014, 0.00010205599999999967, 0.00010223600000000208, 0.00010227699999999784, 0.0001021939999999999, 0.0001022220000000025, 0.00010204100000000063, 0.00010177800000000028, 0.00010194399999999965, 0.00010206899999999977, 0.00010223600000000208, 0.00010227800000000078, 0.00010195799999999922]</msg>
<status status="PASS" starttime="20201115 23:00:25.525" endtime="20201115 23:00:25.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.520" endtime="20201115 23:00:25.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.530" endtime="20201115 23:00:25.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.533" endtime="20201115 23:00:25.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.532" endtime="20201115 23:00:25.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.528" endtime="20201115 23:00:25.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.161" endtime="20201115 23:00:25.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.160" endtime="20201115 23:00:25.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.159" endtime="20201115 23:00:25.554"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.557" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.565" endtime="20201115 23:00:25.584"></status>
</kw>
<msg timestamp="20201115 23:00:25.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.563" endtime="20201115 23:00:25.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.586" endtime="20201115 23:00:25.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.589" endtime="20201115 23:00:25.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.561" endtime="20201115 23:00:25.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.559" endtime="20201115 23:00:25.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.598" endtime="20201115 23:00:25.883"></status>
</kw>
<msg timestamp="20201115 23:00:25.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025102583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025206181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.596" endtime="20201115 23:00:25.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025102583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025206181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.887" endtime="20201115 23:00:25.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.895" endtime="20201115 23:00:25.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.594" endtime="20201115 23:00:25.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.592" endtime="20201115 23:00:25.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.902" level="INFO">${RESULT} = [{'time': 0.025206181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010359799999999988, 'source_diff': 0.00010359799999999988}, {'time': 0.025315, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:25.899" endtime="20201115 23:00:25.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.918" level="INFO">${ACCURACY} = {'time': [0.025206181, 0.025315, 0.025423014, 0.025531042, 0.025639028, 0.025747056, 0.025855083, 0.025963069, 0.026071056, 0.026179097, 0.026287083, 0.026395083, 0.026503097, 0.026611097, 0.026719153...</msg>
<status status="PASS" starttime="20201115 23:00:25.904" endtime="20201115 23:00:25.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.923" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.922" endtime="20201115 23:00:25.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.925" level="INFO">VALUE: [0.00010359799999999988, 0.00010315300000000166, 0.00010295800000000022, 0.00010322299999999951, 0.00010279200000000085, 0.00010307000000000024, 0.0001030550000000012, 0.0001028879999999989, 0.00010272299999999901, 0.00010279099999999791, 0.00010315199999999872, 0.00010281900000000052, 0.00010295800000000022, 0.00010326399999999875, 0.00010315299999999819, 0.00010281900000000052, 0.0001030420000000011, 0.00010327800000000179, 0.00010280600000000042, 0.00010326400000000222, 0.00010284700000000313, 0.00010323600000000308, 0.00010308399999999981, 0.00010295899999999969, 0.00010294400000000065, 0.00010322200000000004, 0.00010318000000000133, 0.00010279200000000085, 0.00010306900000000077, 0.00010311099999999948, 0.00010301400000000197, 0.0001030420000000011, 0.00010322200000000004, 0.0001032359999999996, 0.00010280600000000042, 0.00010272300000000248, 0.00010308399999999981, 0.00010327799999999832, 0.00010316599999999829, 0.00010284699999999966, 0.00010304099999999816, 0.00010312499999999905, 0.00010297199999999979, 0.00010297199999999979, 0.00010312499999999905, 0.00010311099999999948, 0.0001027359999999991, 0.00010283399999999956, 0.00010301400000000197, 0.00010293099999999708]</msg>
<status status="PASS" starttime="20201115 23:00:25.924" endtime="20201115 23:00:25.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.919" endtime="20201115 23:00:25.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.929" endtime="20201115 23:00:25.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.932" endtime="20201115 23:00:25.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.931" endtime="20201115 23:00:25.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.927" endtime="20201115 23:00:25.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.557" endtime="20201115 23:00:25.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.556" endtime="20201115 23:00:25.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.555" endtime="20201115 23:00:25.953"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.956" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.964" endtime="20201115 23:00:25.983"></status>
</kw>
<msg timestamp="20201115 23:00:25.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.962" endtime="20201115 23:00:25.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.985" endtime="20201115 23:00:25.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.987" endtime="20201115 23:00:25.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.960" endtime="20201115 23:00:25.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.958" endtime="20201115 23:00:25.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.996" endtime="20201115 23:00:26.282"></status>
</kw>
<msg timestamp="20201115 23:00:26.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024202278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024307042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.995" endtime="20201115 23:00:26.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024202278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024307042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.286" endtime="20201115 23:00:26.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.295" endtime="20201115 23:00:26.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.992" endtime="20201115 23:00:26.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.990" endtime="20201115 23:00:26.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.302" level="INFO">${RESULT} = [{'time': 0.024307042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010476400000000025, 'source_diff': 0.00010476400000000025}, {'time': 0.024416861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:26.298" endtime="20201115 23:00:26.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.315" level="INFO">${ACCURACY} = {'time': [0.024307042, 0.024416861, 0.024525875, 0.024634875, 0.024743903, 0.024852903, 0.024961903, 0.025070944, 0.025179931, 0.025288944, 0.025397931, 0.025506944, 0.025615958, 0.025724972, 0.025833...</msg>
<status status="PASS" starttime="20201115 23:00:26.303" endtime="20201115 23:00:26.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.319" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.318" endtime="20201115 23:00:26.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.322" level="INFO">VALUE: [0.00010476400000000025, 0.00010402800000000254, 0.00010397200000000079, 0.00010413899999999962, 0.00010420900000000094, 0.00010426399999999975, 0.00010369500000000087, 0.00010426300000000027, 0.00010391699999999851, 0.00010397200000000079, 0.00010394499999999765, 0.00010427699999999984, 0.00010399999999999993, 0.00010419399999999843, 0.00010425000000000018, 0.00010398600000000036, 0.00010383299999999762, 0.00010427799999999932, 0.00010376400000000272, 0.00010379199999999839, 0.00010388899999999937, 0.00010397200000000079, 0.00010409700000000091, 0.00010415299999999919, 0.00010393099999999808, 0.00010395800000000122, 0.00010379200000000185, 0.00010397199999999732, 0.0001040139999999995, 0.000104207999999998, 0.00010380499999999848, 0.00010427799999999932, 0.00010419500000000137, 0.00010430599999999846, 0.00010409700000000091, 0.00010418099999999833, 0.000103820000000001, 0.00010416599999999929, 0.00010397199999999732, 0.00010383400000000056, 0.00010426300000000027, 0.00010383400000000056, 0.00010411100000000048, 0.00010429099999999941, 0.00010402699999999959, 0.00010425000000000018, 0.00010415299999999919, 0.00010398600000000036, 0.00010381900000000152, 0.00010381899999999805]</msg>
<status status="PASS" starttime="20201115 23:00:26.321" endtime="20201115 23:00:26.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.316" endtime="20201115 23:00:26.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.325" endtime="20201115 23:00:26.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.329" endtime="20201115 23:00:26.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.327" endtime="20201115 23:00:26.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.323" endtime="20201115 23:00:26.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.956" endtime="20201115 23:00:26.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.954" endtime="20201115 23:00:26.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.954" endtime="20201115 23:00:26.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.598" endtime="20201115 23:00:26.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.354" endtime="20201115 23:00:26.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.353" endtime="20201115 23:00:26.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.351" endtime="20201115 23:00:26.375"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:46.527" endtime="20201115 23:00:26.375" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.383" endtime="20201115 23:00:26.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.381" endtime="20201115 23:00:26.403"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.417" endtime="20201115 23:00:26.430"></status>
</kw>
<msg timestamp="20201115 23:00:26.431" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.415" endtime="20201115 23:00:26.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.434" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.432" endtime="20201115 23:00:26.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.437" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:00:26.435" endtime="20201115 23:00:26.437"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:26.413" endtime="20201115 23:00:26.438"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:26.410" endtime="20201115 23:00:26.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.408" endtime="20201115 23:00:26.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:00:26.442" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:00:26.442" endtime="20201115 23:00:26.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.440" endtime="20201115 23:00:26.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.407" endtime="20201115 23:00:26.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.406" endtime="20201115 23:00:26.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.444" endtime="20201115 23:00:26.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.405" endtime="20201115 23:00:26.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.403" endtime="20201115 23:00:26.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.380" endtime="20201115 23:00:26.447"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.450" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.459" endtime="20201115 23:00:26.475"></status>
</kw>
<msg timestamp="20201115 23:00:26.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.457" endtime="20201115 23:00:26.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.476" endtime="20201115 23:00:26.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.479" endtime="20201115 23:00:26.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.455" endtime="20201115 23:00:26.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.453" endtime="20201115 23:00:26.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.489" endtime="20201115 23:00:26.775"></status>
</kw>
<msg timestamp="20201115 23:00:26.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068643819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068666319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.487" endtime="20201115 23:00:26.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068643819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068666319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.780" endtime="20201115 23:00:26.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.788" endtime="20201115 23:00:26.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.484" endtime="20201115 23:00:26.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.482" endtime="20201115 23:00:26.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.795" level="INFO">${RESULT} = [{'time': 0.068666319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2500000000008624e-05, 'source_diff': 2.2500000000008624e-05}, {'time': 0.068690347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:26.792" endtime="20201115 23:00:26.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.809" level="INFO">${ACCURACY} = {'time': [0.068666319, 0.068690347, 0.068715333, 0.068739361, 0.068764333, 0.068789333, 0.068813347, 0.068837333, 0.068861333, 0.068885347, 0.068909333, 0.068934333, 0.068959347, 0.068983347, 0.069007...</msg>
<status status="PASS" starttime="20201115 23:00:26.796" endtime="20201115 23:00:26.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.814" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.813" endtime="20201115 23:00:26.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.816" level="INFO">VALUE: [2.2500000000008624e-05, 2.180499999999974e-05, 2.262499999999834e-05, 2.2014000000000755e-05, 2.2582999999992692e-05, 2.2651999999998007e-05, 2.1874999999990652e-05, 2.183299999999888e-05, 2.2054999999993052e-05, 2.1971999999995107e-05, 2.1958000000002476e-05, 2.2666000000004516e-05, 2.2694000000003656e-05, 2.1778000000000075e-05, 2.1986000000001615e-05, 2.1958000000002476e-05, 2.1943999999995967e-05, 2.1930000000003336e-05, 2.1957999999988598e-05, 2.183299999999888e-05, 2.2166000000004016e-05, 2.187500000000453e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.2041999999999895e-05, 2.1943999999995967e-05, 2.237500000000503e-05, 2.188900000001104e-05, 2.2041999999999895e-05, 2.2555999999993026e-05, 2.1791999999992706e-05, 2.2028000000007264e-05, 2.2666999999990112e-05, 2.1943999999995967e-05, 2.1818999999992372e-05, 2.2610999999991832e-05, 2.2638999999990972e-05, 2.1971999999995107e-05, 2.2584000000006044e-05, 2.2041999999999895e-05, 2.266700000000399e-05, 2.18610000000119e-05, 2.2736000000009304e-05, 2.2152000000011385e-05, 2.2722000000002796e-05, 2.1763999999993566e-05, 2.1819999999991846e-05, 2.211100000000521e-05, 2.188899999999716e-05, 2.269500000000313e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.815" endtime="20201115 23:00:26.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.810" endtime="20201115 23:00:26.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.819" endtime="20201115 23:00:26.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.823" endtime="20201115 23:00:26.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.821" endtime="20201115 23:00:26.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.818" endtime="20201115 23:00:26.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.451" endtime="20201115 23:00:26.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.449" endtime="20201115 23:00:26.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.448" endtime="20201115 23:00:26.844"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.846" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.855" endtime="20201115 23:00:26.870"></status>
</kw>
<msg timestamp="20201115 23:00:26.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.853" endtime="20201115 23:00:26.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.871" endtime="20201115 23:00:26.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.874" endtime="20201115 23:00:26.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.850" endtime="20201115 23:00:26.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.848" endtime="20201115 23:00:26.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.884" endtime="20201115 23:00:27.169"></status>
</kw>
<msg timestamp="20201115 23:00:27.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024504306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024526181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.881" endtime="20201115 23:00:27.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024504306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024526181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.174" endtime="20201115 23:00:27.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.183" endtime="20201115 23:00:27.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.879" endtime="20201115 23:00:27.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.877" endtime="20201115 23:00:27.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.189" level="INFO">${RESULT} = [{'time': 0.024526181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.187500000000106e-05, 'source_diff': 2.187500000000106e-05}, {'time': 0.024550153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:27.186" endtime="20201115 23:00:27.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.203" level="INFO">${ACCURACY} = {'time': [0.024526181, 0.024550153, 0.024575181, 0.024599208, 0.024624167, 0.024648181, 0.024672181, 0.024696181, 0.024720167, 0.024744181, 0.024768181, 0.024792194, 0.024816181, 0.024840181, 0.024864...</msg>
<status status="PASS" starttime="20201115 23:00:27.190" endtime="20201115 23:00:27.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.207" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.206" endtime="20201115 23:00:27.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.210" level="INFO">VALUE: [2.187500000000106e-05, 2.1750000000000935e-05, 2.265300000000095e-05, 2.213900000000088e-05, 2.265299999999748e-05, 2.212500000000131e-05, 2.194500000000238e-05, 2.212500000000131e-05, 2.195900000000195e-05, 2.2098000000001644e-05, 2.2112000000001214e-05, 2.211100000000174e-05, 2.1764000000000505e-05, 2.193099999999934e-05, 2.198699999999762e-05, 2.19030000000002e-05, 2.266700000000052e-05, 2.262500000000181e-05, 2.187499999999759e-05, 2.187500000000106e-05, 2.211099999999827e-05, 2.2012999999997812e-05, 2.258299999999963e-05, 2.179100000000017e-05, 2.205499999999999e-05, 2.1957999999999006e-05, 2.1943999999999436e-05, 2.1985999999998146e-05, 2.211100000000174e-05, 2.180499999999974e-05, 2.212500000000131e-05, 2.187499999999759e-05, 2.1750000000000935e-05, 2.1985999999998146e-05, 2.1750000000000935e-05, 2.237499999999809e-05, 2.181899999999931e-05, 2.1736000000001365e-05, 2.204100000000042e-05, 2.259700000000267e-05, 2.180499999999974e-05, 2.1778000000000075e-05, 2.19030000000002e-05, 2.212500000000131e-05, 2.2014000000000755e-05, 2.261100000000224e-05, 2.262499999999834e-05, 2.2694000000000186e-05, 2.1971999999998576e-05, 2.2542000000000395e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.208" endtime="20201115 23:00:27.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.204" endtime="20201115 23:00:27.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.213" endtime="20201115 23:00:27.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.216" endtime="20201115 23:00:27.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.215" endtime="20201115 23:00:27.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.211" endtime="20201115 23:00:27.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.847" endtime="20201115 23:00:27.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.845" endtime="20201115 23:00:27.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.844" endtime="20201115 23:00:27.238"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.240" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.248" endtime="20201115 23:00:27.263"></status>
</kw>
<msg timestamp="20201115 23:00:27.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.247" endtime="20201115 23:00:27.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.265" endtime="20201115 23:00:27.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.267" endtime="20201115 23:00:27.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.244" endtime="20201115 23:00:27.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.242" endtime="20201115 23:00:27.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.278" endtime="20201115 23:00:27.564"></status>
</kw>
<msg timestamp="20201115 23:00:27.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024327167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024349958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.276" endtime="20201115 23:00:27.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024327167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024349958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.568" endtime="20201115 23:00:27.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.576" endtime="20201115 23:00:27.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.273" endtime="20201115 23:00:27.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.271" endtime="20201115 23:00:27.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.583" level="INFO">${RESULT} = [{'time': 0.024349958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.279100000000117e-05, 'source_diff': 2.279100000000117e-05}, {'time': 0.024373931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:27.580" endtime="20201115 23:00:27.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.598" level="INFO">${ACCURACY} = {'time': [0.024349958, 0.024373931, 0.024397931, 0.024421917, 0.024446931, 0.024471917, 0.024496931, 0.024521931, 0.024545931, 0.024570944, 0.024594931, 0.024619931, 0.024644931, 0.024668931, 0.024693...</msg>
<status status="PASS" starttime="20201115 23:00:27.584" endtime="20201115 23:00:27.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.602" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.601" endtime="20201115 23:00:27.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.605" level="INFO">VALUE: [2.279100000000117e-05, 2.193100000000281e-05, 2.1778000000000075e-05, 2.1848000000001394e-05, 2.2570000000003004e-05, 2.270899999999923e-05, 2.2569999999999535e-05, 2.270899999999923e-05, 2.193099999999934e-05, 2.256900000000006e-05, 2.1778000000000075e-05, 2.263900000000138e-05, 2.2527999999997356e-05, 2.237500000000156e-05, 2.255500000000049e-05, 2.17770000000006e-05, 2.180499999999974e-05, 2.186100000000149e-05, 2.2679999999997147e-05, 2.1957999999999006e-05, 2.255500000000049e-05, 2.1707999999998756e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.261099999999877e-05, 2.1972000000002045e-05, 2.2722000000002796e-05, 2.1958000000002476e-05, 2.211100000000174e-05, 2.262500000000181e-05, 2.1778000000000075e-05, 2.187500000000106e-05, 2.181899999999931e-05, 2.2471999999999076e-05, 2.188900000000063e-05, 2.187500000000106e-05, 2.181899999999931e-05, 2.1957999999999006e-05, 2.183299999999888e-05, 2.181899999999931e-05, 2.2694000000000186e-05, 2.1971999999998576e-05, 2.2735999999998896e-05, 2.2528000000000825e-05, 2.2694000000000186e-05, 2.1986000000001615e-05, 2.2707999999999756e-05, 2.262499999999834e-05, 2.1791999999999645e-05, 2.20830000000026e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.603" endtime="20201115 23:00:27.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.599" endtime="20201115 23:00:27.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.608" endtime="20201115 23:00:27.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.612" endtime="20201115 23:00:27.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.610" endtime="20201115 23:00:27.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.606" endtime="20201115 23:00:27.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.241" endtime="20201115 23:00:27.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.239" endtime="20201115 23:00:27.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.238" endtime="20201115 23:00:27.633"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.635" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.643" endtime="20201115 23:00:27.658"></status>
</kw>
<msg timestamp="20201115 23:00:27.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.642" endtime="20201115 23:00:27.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.660" endtime="20201115 23:00:27.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.663" endtime="20201115 23:00:27.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.639" endtime="20201115 23:00:27.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.637" endtime="20201115 23:00:27.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.672" endtime="20201115 23:00:27.960"></status>
</kw>
<msg timestamp="20201115 23:00:27.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024206556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.670" endtime="20201115 23:00:27.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024206556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.964" endtime="20201115 23:00:27.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.972" endtime="20201115 23:00:27.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.668" endtime="20201115 23:00:27.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.666" endtime="20201115 23:00:27.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.979" level="INFO">${RESULT} = [{'time': 0.024228528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1971999999998576e-05, 'source_diff': 2.1971999999998576e-05}, {'time': 0.024252486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:27.976" endtime="20201115 23:00:27.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.992" level="INFO">${ACCURACY} = {'time': [0.024228528, 0.024252486, 0.024276486, 0.024300486, 0.0243245, 0.024348486, 0.024372486, 0.024396486, 0.0244205, 0.024444528, 0.024469514, 0.024493514, 0.0245175, 0.024541556, 0.0245655, 0.0...</msg>
<status status="PASS" starttime="20201115 23:00:27.980" endtime="20201115 23:00:27.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.997" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.996" endtime="20201115 23:00:27.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.000" level="INFO">VALUE: [2.1971999999998576e-05, 2.2028000000000325e-05, 2.1736000000001365e-05, 2.2000000000001185e-05, 2.211099999999827e-05, 2.191699999999977e-05, 2.1957999999999006e-05, 2.187499999999759e-05, 2.211100000000174e-05, 2.213900000000088e-05, 2.2764000000001505e-05, 2.2055999999999465e-05, 2.184700000000192e-05, 2.1861999999997495e-05, 2.1750000000000935e-05, 2.268100000000009e-05, 2.19030000000002e-05, 2.2014000000000755e-05, 2.1819999999998785e-05, 2.1819999999998785e-05, 2.1735999999997896e-05, 2.2707999999999756e-05, 2.2041999999999895e-05, 2.195899999999848e-05, 2.266700000000052e-05, 2.2069999999999035e-05, 2.2069999999999035e-05, 2.2583999999999105e-05, 2.188900000000063e-05, 2.1985999999998146e-05, 2.2069999999999035e-05, 2.2763999999998036e-05, 2.2151999999997507e-05, 2.194499999999891e-05, 2.2083999999998605e-05, 2.211100000000174e-05, 2.261099999999877e-05, 2.2083999999998605e-05, 2.2680000000000616e-05, 2.197299999999805e-05, 2.2750000000001935e-05, 2.263900000000138e-05, 2.204100000000042e-05, 2.2583999999999105e-05, 2.269499999999966e-05, 2.206899999999956e-05, 2.2707999999999756e-05, 2.186100000000149e-05, 2.179100000000017e-05, 2.2651999999998007e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.998" endtime="20201115 23:00:28.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.993" endtime="20201115 23:00:28.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.003" endtime="20201115 23:00:28.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.006" endtime="20201115 23:00:28.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.005" endtime="20201115 23:00:28.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.001" endtime="20201115 23:00:28.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.636" endtime="20201115 23:00:28.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.634" endtime="20201115 23:00:28.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.633" endtime="20201115 23:00:28.027"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.030" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.039" endtime="20201115 23:00:28.054"></status>
</kw>
<msg timestamp="20201115 23:00:28.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.037" endtime="20201115 23:00:28.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.055" endtime="20201115 23:00:28.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.058" endtime="20201115 23:00:28.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.034" endtime="20201115 23:00:28.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.032" endtime="20201115 23:00:28.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.067" endtime="20201115 23:00:28.355"></status>
</kw>
<msg timestamp="20201115 23:00:28.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025046708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025068847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.066" endtime="20201115 23:00:28.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025046708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025068847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.359" endtime="20201115 23:00:28.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.368" endtime="20201115 23:00:28.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.063" endtime="20201115 23:00:28.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.061" endtime="20201115 23:00:28.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.374" level="INFO">${RESULT} = [{'time': 0.025068847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.213899999999741e-05, 'source_diff': 2.213899999999741e-05}, {'time': 0.025092847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:28.371" endtime="20201115 23:00:28.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.388" level="INFO">${ACCURACY} = {'time': [0.025068847, 0.025092847, 0.025116833, 0.025141847, 0.025165903, 0.025189861, 0.025214847, 0.025239847, 0.025263847, 0.025288889, 0.025312875, 0.025336861, 0.025360861, 0.025384861, 0.025408...</msg>
<status status="PASS" starttime="20201115 23:00:28.375" endtime="20201115 23:00:28.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.392" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.391" endtime="20201115 23:00:28.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.395" level="INFO">VALUE: [2.213899999999741e-05, 2.2014000000000755e-05, 2.204100000000042e-05, 2.2693999999996717e-05, 2.2028000000000325e-05, 2.213900000000088e-05, 2.262499999999834e-05, 2.2721999999999326e-05, 2.19030000000002e-05, 2.2791999999997176e-05, 2.181899999999931e-05, 2.1999999999997716e-05, 2.184699999999845e-05, 2.2000000000001185e-05, 2.2028000000000325e-05, 2.209700000000217e-05, 2.1791999999999645e-05, 2.211100000000174e-05, 2.206899999999956e-05, 2.2707999999999756e-05, 2.2764000000001505e-05, 2.2722000000002796e-05, 2.187500000000106e-05, 2.2542000000000395e-05, 2.2013999999997286e-05, 2.2763999999998036e-05, 2.25969999999992e-05, 2.262500000000181e-05, 2.20969999999987e-05, 2.2013999999997286e-05, 2.186099999999802e-05, 2.2818999999996842e-05, 2.258299999999963e-05, 2.261100000000224e-05, 2.2583999999999105e-05, 2.261099999999877e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.1778000000000075e-05, 2.191699999999977e-05, 2.1985999999998146e-05, 2.1791999999999645e-05, 2.1763999999997036e-05, 2.1985999999998146e-05, 2.193100000000281e-05, 2.197300000000152e-05, 2.2570000000003004e-05, 2.197299999999805e-05, 2.187500000000106e-05, 2.197300000000152e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.393" endtime="20201115 23:00:28.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.389" endtime="20201115 23:00:28.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.399" endtime="20201115 23:00:28.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.402" endtime="20201115 23:00:28.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.401" endtime="20201115 23:00:28.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.396" endtime="20201115 23:00:28.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.031" endtime="20201115 23:00:28.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.029" endtime="20201115 23:00:28.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.028" endtime="20201115 23:00:28.423"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.426" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.434" endtime="20201115 23:00:28.449"></status>
</kw>
<msg timestamp="20201115 23:00:28.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.432" endtime="20201115 23:00:28.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.450" endtime="20201115 23:00:28.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.453" endtime="20201115 23:00:28.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.430" endtime="20201115 23:00:28.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.428" endtime="20201115 23:00:28.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.462" endtime="20201115 23:00:28.750"></status>
</kw>
<msg timestamp="20201115 23:00:28.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024263542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024285931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.461" endtime="20201115 23:00:28.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024263542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024285931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.754" endtime="20201115 23:00:28.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.762" endtime="20201115 23:00:28.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.458" endtime="20201115 23:00:28.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.456" endtime="20201115 23:00:28.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.769" level="INFO">${RESULT} = [{'time': 0.024285931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.238900000000113e-05, 'source_diff': 2.238900000000113e-05}, {'time': 0.024309917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:28.766" endtime="20201115 23:00:28.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.782" level="INFO">${ACCURACY} = {'time': [0.024285931, 0.024309917, 0.024334917, 0.024358944, 0.024382931, 0.024406931, 0.024430931, 0.024454931, 0.024478931, 0.024502944, 0.024526931, 0.024550944, 0.024574944, 0.0246, 0.024623944, ...</msg>
<status status="PASS" starttime="20201115 23:00:28.770" endtime="20201115 23:00:28.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.787" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.786" endtime="20201115 23:00:28.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.790" level="INFO">VALUE: [2.238900000000113e-05, 2.194499999999891e-05, 2.262500000000181e-05, 2.183299999999888e-05, 2.212500000000131e-05, 2.195899999999848e-05, 2.1805999999999215e-05, 2.191699999999977e-05, 2.1999999999997716e-05, 2.208299999999913e-05, 2.188899999999716e-05, 2.1902000000000726e-05, 2.1986000000001615e-05, 2.2792000000000645e-05, 2.1776999999997132e-05, 2.1972000000002045e-05, 2.261099999999877e-05, 2.179100000000017e-05, 2.17770000000006e-05, 2.1986000000001615e-05, 2.2694000000000186e-05, 2.209700000000217e-05, 2.259700000000267e-05, 2.2028000000000325e-05, 2.258299999999963e-05, 2.2694000000000186e-05, 2.263900000000138e-05, 2.261100000000224e-05, 2.1848000000001394e-05, 2.19030000000002e-05, 2.1778000000000075e-05, 2.1916000000000296e-05, 2.213899999999741e-05, 2.1971999999998576e-05, 2.187499999999759e-05, 2.263899999999791e-05, 2.236099999999852e-05, 2.2707999999999756e-05, 2.1791999999999645e-05, 2.1929999999999866e-05, 2.1763999999997036e-05, 2.2000000000001185e-05, 2.188900000000063e-05, 2.1985999999998146e-05, 2.261100000000224e-05, 2.1805999999999215e-05, 2.2721999999999326e-05, 2.1736000000001365e-05, 2.2764000000001505e-05, 2.263899999999791e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.788" endtime="20201115 23:00:28.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.783" endtime="20201115 23:00:28.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.793" endtime="20201115 23:00:28.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.797" endtime="20201115 23:00:28.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.795" endtime="20201115 23:00:28.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.792" endtime="20201115 23:00:28.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.426" endtime="20201115 23:00:28.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.424" endtime="20201115 23:00:28.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.423" endtime="20201115 23:00:28.818"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.820" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.829" endtime="20201115 23:00:28.843"></status>
</kw>
<msg timestamp="20201115 23:00:28.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.827" endtime="20201115 23:00:28.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.845" endtime="20201115 23:00:28.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.847" endtime="20201115 23:00:28.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.824" endtime="20201115 23:00:28.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.822" endtime="20201115 23:00:28.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.857" endtime="20201115 23:00:29.144"></status>
</kw>
<msg timestamp="20201115 23:00:29.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024197472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024219792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.855" endtime="20201115 23:00:29.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024197472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024219792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.148" endtime="20201115 23:00:29.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.156" endtime="20201115 23:00:29.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.852" endtime="20201115 23:00:29.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.851" endtime="20201115 23:00:29.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.163" level="INFO">${RESULT} = [{'time': 0.024219792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2319999999999285e-05, 'source_diff': 2.2319999999999285e-05}, {'time': 0.024243806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:29.160" endtime="20201115 23:00:29.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.178" level="INFO">${ACCURACY} = {'time': [0.024219792, 0.024243806, 0.024267778, 0.024292778, 0.024316778, 0.024340792, 0.024365792, 0.024389778, 0.024413792, 0.024438792, 0.024462792, 0.024487833, 0.024512792, 0.024537806, 0.024561...</msg>
<status status="PASS" starttime="20201115 23:00:29.164" endtime="20201115 23:00:29.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.183" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.182" endtime="20201115 23:00:29.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.186" level="INFO">VALUE: [2.2319999999999285e-05, 2.173700000000084e-05, 2.2041999999999895e-05, 2.269499999999966e-05, 2.212500000000131e-05, 2.193099999999934e-05, 2.2555999999999965e-05, 2.1820000000002254e-05, 2.213900000000088e-05, 2.265300000000095e-05, 2.1820000000002254e-05, 2.261100000000224e-05, 2.262499999999834e-05, 2.270899999999923e-05, 2.197299999999805e-05, 2.262499999999834e-05, 2.211099999999827e-05, 2.268100000000009e-05, 2.265300000000095e-05, 2.2055999999999465e-05, 2.2694000000000186e-05, 2.273700000000184e-05, 2.2138000000001407e-05, 2.2707999999999756e-05, 2.2499999999998216e-05, 2.2637999999998437e-05, 2.187500000000106e-05, 2.188899999999716e-05, 2.255500000000049e-05, 2.1957999999999006e-05, 2.1971999999998576e-05, 2.1986000000001615e-05, 2.2721999999999326e-05, 2.255500000000049e-05, 2.212500000000131e-05, 2.2666000000001046e-05, 2.1972000000002045e-05, 2.186100000000149e-05, 2.181899999999931e-05, 2.256900000000006e-05, 2.255500000000049e-05, 2.1971999999998576e-05, 2.205499999999999e-05, 2.20969999999987e-05, 2.1778000000000075e-05, 2.2735999999998896e-05, 2.2000000000001185e-05, 2.193099999999934e-05, 2.181899999999931e-05, 2.1999999999997716e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.184" endtime="20201115 23:00:29.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.179" endtime="20201115 23:00:29.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.189" endtime="20201115 23:00:29.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.192" endtime="20201115 23:00:29.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.191" endtime="20201115 23:00:29.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.187" endtime="20201115 23:00:29.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.821" endtime="20201115 23:00:29.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.819" endtime="20201115 23:00:29.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.818" endtime="20201115 23:00:29.214"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.216" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.224" endtime="20201115 23:00:29.239"></status>
</kw>
<msg timestamp="20201115 23:00:29.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.223" endtime="20201115 23:00:29.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.240" endtime="20201115 23:00:29.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.243" endtime="20201115 23:00:29.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.220" endtime="20201115 23:00:29.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.218" endtime="20201115 23:00:29.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.252" endtime="20201115 23:00:29.540"></status>
</kw>
<msg timestamp="20201115 23:00:29.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024251333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024273389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.250" endtime="20201115 23:00:29.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024251333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024273389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.544" endtime="20201115 23:00:29.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.552" endtime="20201115 23:00:29.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.248" endtime="20201115 23:00:29.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.246" endtime="20201115 23:00:29.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.559" level="INFO">${RESULT} = [{'time': 0.024273389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2055999999999465e-05, 'source_diff': 2.2055999999999465e-05}, {'time': 0.024298375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:29.556" endtime="20201115 23:00:29.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.577" level="INFO">${ACCURACY} = {'time': [0.024273389, 0.024298375, 0.024323417, 0.024348389, 0.024372389, 0.024396389, 0.024421389, 0.024445389, 0.024469389, 0.024493431, 0.024517389, 0.024541431, 0.024566403, 0.024591444, 0.024616...</msg>
<status status="PASS" starttime="20201115 23:00:29.564" endtime="20201115 23:00:29.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.582" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.581" endtime="20201115 23:00:29.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.584" level="INFO">VALUE: [2.2055999999999465e-05, 2.2707999999999756e-05, 2.2778000000001075e-05, 2.269500000000313e-05, 2.2041999999999895e-05, 2.183300000000235e-05, 2.259700000000267e-05, 2.184700000000192e-05, 2.186100000000149e-05, 2.2028000000000325e-05, 2.2000000000001185e-05, 2.2028000000000325e-05, 2.265300000000095e-05, 2.2638000000001907e-05, 2.2527999999997356e-05, 2.195900000000195e-05, 2.194500000000238e-05, 2.262499999999834e-05, 2.261099999999877e-05, 2.2097999999998175e-05, 2.270899999999923e-05, 2.266699999999705e-05, 2.1819999999998785e-05, 2.198699999999762e-05, 2.2083999999998605e-05, 2.1819999999998785e-05, 2.206899999999956e-05, 2.1848000000001394e-05, 2.263900000000138e-05, 2.2069999999999035e-05, 2.258299999999963e-05, 2.2083999999998605e-05, 2.2680000000000616e-05, 2.184700000000192e-05, 2.1944000000002906e-05, 2.181899999999931e-05, 2.262499999999834e-05, 2.1929999999999866e-05, 2.180499999999974e-05, 2.1929999999999866e-05, 2.1762999999997562e-05, 2.2651999999998007e-05, 2.25969999999992e-05, 2.187499999999759e-05, 2.205499999999999e-05, 2.255500000000049e-05, 2.187499999999759e-05, 2.17770000000006e-05, 2.2000000000001185e-05, 2.1778000000000075e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.583" endtime="20201115 23:00:29.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.578" endtime="20201115 23:00:29.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.587" endtime="20201115 23:00:29.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.591" endtime="20201115 23:00:29.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.589" endtime="20201115 23:00:29.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.586" endtime="20201115 23:00:29.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.217" endtime="20201115 23:00:29.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.215" endtime="20201115 23:00:29.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.214" endtime="20201115 23:00:29.612"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.614" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.623" endtime="20201115 23:00:29.637"></status>
</kw>
<msg timestamp="20201115 23:00:29.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.621" endtime="20201115 23:00:29.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.639" endtime="20201115 23:00:29.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.641" endtime="20201115 23:00:29.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.619" endtime="20201115 23:00:29.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.616" endtime="20201115 23:00:29.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.650" endtime="20201115 23:00:29.938"></status>
</kw>
<msg timestamp="20201115 23:00:29.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024306431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024328611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.649" endtime="20201115 23:00:29.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024306431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024328611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.942" endtime="20201115 23:00:29.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.951" endtime="20201115 23:00:29.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.646" endtime="20201115 23:00:29.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.644" endtime="20201115 23:00:29.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.958" level="INFO">${RESULT} = [{'time': 0.024328611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2180000000000116e-05, 'source_diff': 2.2180000000000116e-05}, {'time': 0.024352611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:29.954" endtime="20201115 23:00:29.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.971" level="INFO">${ACCURACY} = {'time': [0.024328611, 0.024352611, 0.024376625, 0.024400611, 0.024424611, 0.024449639, 0.024473611, 0.024497611, 0.024521625, 0.024545625, 0.024569625, 0.024593639, 0.024617625, 0.024641625, 0.024666...</msg>
<status status="PASS" starttime="20201115 23:00:29.959" endtime="20201115 23:00:29.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.976" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.975" endtime="20201115 23:00:29.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.979" level="INFO">VALUE: [2.2180000000000116e-05, 2.205499999999999e-05, 2.1805999999999215e-05, 2.184699999999845e-05, 2.1957999999999006e-05, 2.2707999999999756e-05, 2.183299999999888e-05, 2.1749999999997466e-05, 2.1749999999997466e-05, 2.1944000000002906e-05, 2.209700000000217e-05, 2.1778000000000075e-05, 2.2000000000001185e-05, 2.193099999999934e-05, 2.258299999999963e-05, 2.212500000000131e-05, 2.2028000000000325e-05, 2.191699999999977e-05, 2.1764000000000505e-05, 2.261099999999877e-05, 2.197299999999805e-05, 2.1764000000000505e-05, 2.258299999999963e-05, 2.269499999999966e-05, 2.191699999999977e-05, 2.2055999999999465e-05, 2.212499999999784e-05, 2.2026999999997382e-05, 2.1971999999998576e-05, 2.1944000000002906e-05, 2.262499999999834e-05, 2.1778000000000075e-05, 2.1999999999997716e-05, 2.2555999999999965e-05, 2.2069999999999035e-05, 2.1791999999999645e-05, 2.2569999999999535e-05, 2.191699999999977e-05, 2.195899999999848e-05, 2.1791999999999645e-05, 2.2542000000000395e-05, 2.2055999999999465e-05, 2.179100000000017e-05, 2.1986000000001615e-05, 2.2098000000001644e-05, 2.212500000000131e-05, 2.1834000000001824e-05, 2.2112000000001214e-05, 2.183299999999888e-05, 2.206899999999956e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.978" endtime="20201115 23:00:29.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.972" endtime="20201115 23:00:29.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.983" endtime="20201115 23:00:29.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.987" endtime="20201115 23:00:30.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.985" endtime="20201115 23:00:30.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.981" endtime="20201115 23:00:30.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.615" endtime="20201115 23:00:30.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.613" endtime="20201115 23:00:30.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.612" endtime="20201115 23:00:30.008"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.010" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.019" endtime="20201115 23:00:30.034"></status>
</kw>
<msg timestamp="20201115 23:00:30.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.017" endtime="20201115 23:00:30.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.036" endtime="20201115 23:00:30.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.038" endtime="20201115 23:00:30.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.014" endtime="20201115 23:00:30.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.012" endtime="20201115 23:00:30.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.048" endtime="20201115 23:00:30.333"></status>
</kw>
<msg timestamp="20201115 23:00:30.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024623875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024646653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.046" endtime="20201115 23:00:30.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024623875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024646653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.338" endtime="20201115 23:00:30.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.346" endtime="20201115 23:00:30.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.043" endtime="20201115 23:00:30.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.041" endtime="20201115 23:00:30.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.353" level="INFO">${RESULT} = [{'time': 0.024646653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2778000000001075e-05, 'source_diff': 2.2778000000001075e-05}, {'time': 0.024670667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:30.350" endtime="20201115 23:00:30.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.366" level="INFO">${ACCURACY} = {'time': [0.024646653, 0.024670667, 0.024695694, 0.024719653, 0.024743653, 0.024768653, 0.024793653, 0.024817653, 0.024841667, 0.024865667, 0.024890667, 0.024915667, 0.024939667, 0.024963681, 0.024987...</msg>
<status status="PASS" starttime="20201115 23:00:30.354" endtime="20201115 23:00:30.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.371" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.370" endtime="20201115 23:00:30.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.373" level="INFO">VALUE: [2.2778000000001075e-05, 2.1791999999999645e-05, 2.2694000000000186e-05, 2.195900000000195e-05, 2.1764000000000505e-05, 2.266700000000052e-05, 2.261099999999877e-05, 2.2069999999999035e-05, 2.2000000000001185e-05, 2.188900000000063e-05, 2.2597999999998675e-05, 2.261099999999877e-05, 2.195899999999848e-05, 2.195900000000195e-05, 2.1986000000001615e-05, 2.237500000000156e-05, 2.2612000000001714e-05, 2.27229999999988e-05, 2.2637999999998437e-05, 2.2041999999999895e-05, 2.194499999999891e-05, 2.268100000000009e-05, 2.2014000000000755e-05, 2.2666000000001046e-05, 2.1902000000000726e-05, 2.181899999999931e-05, 2.187500000000106e-05, 2.2792000000000645e-05, 2.1957999999999006e-05, 2.2721999999999326e-05, 2.237500000000156e-05, 2.181899999999931e-05, 2.215300000000045e-05, 2.265299999999748e-05, 2.263900000000138e-05, 2.2722000000002796e-05, 2.211100000000174e-05, 2.2000000000001185e-05, 2.1943999999999436e-05, 2.186100000000149e-05, 2.1778000000000075e-05, 2.2542000000000395e-05, 2.181899999999931e-05, 2.183299999999888e-05, 2.19030000000002e-05, 2.2666000000001046e-05, 2.204100000000042e-05, 2.212499999999784e-05, 2.262499999999834e-05, 2.2014000000000755e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.372" endtime="20201115 23:00:30.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.367" endtime="20201115 23:00:30.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.377" endtime="20201115 23:00:30.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.380" endtime="20201115 23:00:30.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.379" endtime="20201115 23:00:30.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.375" endtime="20201115 23:00:30.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.011" endtime="20201115 23:00:30.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.009" endtime="20201115 23:00:30.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.008" endtime="20201115 23:00:30.401"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.404" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.412" endtime="20201115 23:00:30.427"></status>
</kw>
<msg timestamp="20201115 23:00:30.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.410" endtime="20201115 23:00:30.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.428" endtime="20201115 23:00:30.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.431" endtime="20201115 23:00:30.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.408" endtime="20201115 23:00:30.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.406" endtime="20201115 23:00:30.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.441" endtime="20201115 23:00:30.727"></status>
</kw>
<msg timestamp="20201115 23:00:30.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024309611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0243325, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:30.439" endtime="20201115 23:00:30.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024309611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0243325, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:30.731" endtime="20201115 23:00:30.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.740" endtime="20201115 23:00:30.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.436" endtime="20201115 23:00:30.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.435" endtime="20201115 23:00:30.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.747" level="INFO">${RESULT} = [{'time': 0.0243325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.288900000000163e-05, 'source_diff': 2.288900000000163e-05}, {'time': 0.0243575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2...</msg>
<status status="PASS" starttime="20201115 23:00:30.743" endtime="20201115 23:00:30.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.761" level="INFO">${ACCURACY} = {'time': [0.0243325, 0.0243575, 0.0243825, 0.024408514, 0.0244335, 0.024458528, 0.024483528, 0.024509514, 0.024534528, 0.024559528, 0.024585514, 0.024610514, 0.024635514, 0.024660514, 0.024685528, 0.0...</msg>
<status status="PASS" starttime="20201115 23:00:30.748" endtime="20201115 23:00:30.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.766" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.765" endtime="20201115 23:00:30.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.769" level="INFO">VALUE: [2.288900000000163e-05, 2.2985999999999146e-05, 2.286100000000249e-05, 2.365299999999848e-05, 2.3056000000000465e-05, 2.29030000000012e-05, 2.3042000000000895e-05, 2.358300000000063e-05, 2.3028000000001325e-05, 2.2985999999999146e-05, 2.35970000000002e-05, 2.3042000000000895e-05, 2.294499999999991e-05, 2.284700000000292e-05, 2.294500000000338e-05, 2.3013999999998286e-05, 2.3735999999999896e-05, 2.312499999999884e-05, 2.295899999999948e-05, 2.3083999999999605e-05, 2.2847999999998925e-05, 2.2764000000001505e-05, 2.3694000000001186e-05, 2.37229999999998e-05, 2.291700000000077e-05, 2.293099999999687e-05, 2.311099999999927e-05, 2.2763999999998036e-05, 2.3556000000000965e-05, 2.3693999999997717e-05, 2.358300000000063e-05, 2.2778000000001075e-05, 2.3597999999999675e-05, 2.3042000000000895e-05, 2.366699999999805e-05, 2.287499999999859e-05, 2.3694000000001186e-05, 2.3679999999998147e-05, 2.3694000000001186e-05, 2.362499999999934e-05, 2.3708000000000756e-05, 2.337500000000256e-05, 2.2721999999999326e-05, 2.283299999999988e-05, 2.281900000000031e-05, 2.311100000000274e-05, 2.311100000000274e-05, 2.35970000000002e-05, 2.3722000000000326e-05, 2.30969999999997e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.767" endtime="20201115 23:00:30.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.762" endtime="20201115 23:00:30.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.772" endtime="20201115 23:00:30.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.775" endtime="20201115 23:00:30.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.774" endtime="20201115 23:00:30.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.770" endtime="20201115 23:00:30.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.404" endtime="20201115 23:00:30.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.403" endtime="20201115 23:00:30.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.402" endtime="20201115 23:00:30.796"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.799" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.808" endtime="20201115 23:00:30.823"></status>
</kw>
<msg timestamp="20201115 23:00:30.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.806" endtime="20201115 23:00:30.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.825" endtime="20201115 23:00:30.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.827" endtime="20201115 23:00:30.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.803" endtime="20201115 23:00:30.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.801" endtime="20201115 23:00:30.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.836" endtime="20201115 23:00:31.123"></status>
</kw>
<msg timestamp="20201115 23:00:31.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024943958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02496825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:30.835" endtime="20201115 23:00:31.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024943958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02496825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:31.128" endtime="20201115 23:00:31.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.136" endtime="20201115 23:00:31.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.832" endtime="20201115 23:00:31.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.831" endtime="20201115 23:00:31.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.143" level="INFO">${RESULT} = [{'time': 0.02496825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4292000000002145e-05, 'source_diff': 2.4292000000002145e-05}, {'time': 0.024994236, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:31.140" endtime="20201115 23:00:31.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.156" level="INFO">${ACCURACY} = {'time': [0.02496825, 0.024994236, 0.025021236, 0.02504725, 0.02507325, 0.02509925, 0.02512525, 0.02515125, 0.025177278, 0.025203278, 0.025229278, 0.02525525, 0.02528125, 0.025307264, 0.025333264, 0.0...</msg>
<status status="PASS" starttime="20201115 23:00:31.144" endtime="20201115 23:00:31.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.161" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.160" endtime="20201115 23:00:31.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.164" level="INFO">VALUE: [2.4292000000002145e-05, 2.3777999999998606e-05, 2.463899999999991e-05, 2.406900000000156e-05, 2.386100000000002e-05, 2.3792000000001645e-05, 2.4068999999998092e-05, 2.393100000000134e-05, 2.413899999999941e-05, 2.3986000000000146e-05, 2.3792000000001645e-05, 2.406900000000156e-05, 2.3764000000002505e-05, 2.387499999999959e-05, 2.383300000000088e-05, 2.388899999999916e-05, 2.4555999999998496e-05, 2.4570000000001535e-05, 2.465299999999948e-05, 2.4083999999997135e-05, 2.3915999999998827e-05, 2.4027999999998856e-05, 2.3806000000001215e-05, 2.3764000000002505e-05, 2.4541999999998926e-05, 2.3834000000000355e-05, 2.386100000000002e-05, 2.3916000000002297e-05, 2.411100000000027e-05, 2.462500000000034e-05, 2.4056000000001465e-05, 2.4013999999999286e-05, 2.3986000000000146e-05, 2.386100000000002e-05, 2.3916000000002297e-05, 2.4084000000000605e-05, 2.391700000000177e-05, 2.4584000000001105e-05, 2.4055999999997996e-05, 2.3887999999999687e-05, 2.4612000000000245e-05, 2.3944000000001436e-05, 2.383300000000088e-05, 2.4596999999997732e-05, 2.386100000000002e-05, 2.462500000000034e-05, 2.4680000000002617e-05, 2.4694000000002186e-05, 2.463899999999991e-05, 2.4026999999999382e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.162" endtime="20201115 23:00:31.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.157" endtime="20201115 23:00:31.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.167" endtime="20201115 23:00:31.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.171" endtime="20201115 23:00:31.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.169" endtime="20201115 23:00:31.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.165" endtime="20201115 23:00:31.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.800" endtime="20201115 23:00:31.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.798" endtime="20201115 23:00:31.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.797" endtime="20201115 23:00:31.192"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.194" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.203" endtime="20201115 23:00:31.217"></status>
</kw>
<msg timestamp="20201115 23:00:31.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.201" endtime="20201115 23:00:31.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.219" endtime="20201115 23:00:31.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.222" endtime="20201115 23:00:31.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.198" endtime="20201115 23:00:31.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.196" endtime="20201115 23:00:31.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.231" endtime="20201115 23:00:31.516"></status>
</kw>
<msg timestamp="20201115 23:00:31.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024556625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024581958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.229" endtime="20201115 23:00:31.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024556625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024581958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.521" endtime="20201115 23:00:31.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.529" endtime="20201115 23:00:31.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.226" endtime="20201115 23:00:31.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.225" endtime="20201115 23:00:31.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.536" level="INFO">${RESULT} = [{'time': 0.024581958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.533300000000238e-05, 'source_diff': 2.533300000000238e-05}, {'time': 0.024609958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:31.532" endtime="20201115 23:00:31.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.549" level="INFO">${ACCURACY} = {'time': [0.024581958, 0.024609958, 0.024637958, 0.024665972, 0.024692972, 0.024719972, 0.024746972, 0.024774972, 0.024801972, 0.024829986, 0.024857028, 0.024884028, 0.024912, 0.024938986, 0.024966, 0...</msg>
<status status="PASS" starttime="20201115 23:00:31.537" endtime="20201115 23:00:31.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.554" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.553" endtime="20201115 23:00:31.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.556" level="INFO">VALUE: [2.533300000000238e-05, 2.5527000000000882e-05, 2.5541000000000452e-05, 2.5568999999999592e-05, 2.5014000000000286e-05, 2.4986000000001146e-05, 2.4818999999998842e-05, 2.5528000000000356e-05, 2.4764000000000036e-05, 2.565299999999701e-05, 2.5055999999998996e-05, 2.4985999999997677e-05, 2.562500000000134e-05, 2.484700000000145e-05, 2.5027999999999856e-05, 2.5721999999998857e-05, 2.565300000000048e-05, 2.5555999999999496e-05, 2.494500000000191e-05, 2.568099999999962e-05, 2.487500000000059e-05, 2.561100000000177e-05, 2.506900000000256e-05, 2.5707999999999287e-05, 2.565300000000048e-05, 2.5000000000000716e-05, 2.493099999999887e-05, 2.4832999999998412e-05, 2.512500000000084e-05, 2.561100000000177e-05, 2.494500000000191e-05, 2.490299999999973e-05, 2.5583999999998636e-05, 2.561100000000177e-05, 2.570900000000223e-05, 2.5041999999999426e-05, 2.5665999999997108e-05, 2.515299999999998e-05, 2.493099999999887e-05, 2.493100000000234e-05, 2.4805999999998746e-05, 2.5555999999999496e-05, 2.484700000000145e-05, 2.5749999999997997e-05, 2.4805999999998746e-05, 2.487500000000059e-05, 2.5013000000000812e-05, 2.490299999999973e-05, 2.494499999999844e-05, 2.565300000000048e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.555" endtime="20201115 23:00:31.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.550" endtime="20201115 23:00:31.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.560" endtime="20201115 23:00:31.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.564" endtime="20201115 23:00:31.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.562" endtime="20201115 23:00:31.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.558" endtime="20201115 23:00:31.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.195" endtime="20201115 23:00:31.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.193" endtime="20201115 23:00:31.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.192" endtime="20201115 23:00:31.585"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.595" endtime="20201115 23:00:31.610"></status>
</kw>
<msg timestamp="20201115 23:00:31.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.594" endtime="20201115 23:00:31.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.612" endtime="20201115 23:00:31.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.614" endtime="20201115 23:00:31.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.591" endtime="20201115 23:00:31.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.589" endtime="20201115 23:00:31.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.624" endtime="20201115 23:00:31.910"></status>
</kw>
<msg timestamp="20201115 23:00:31.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024350319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024376306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.622" endtime="20201115 23:00:31.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024350319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024376306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.914" endtime="20201115 23:00:31.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.922" endtime="20201115 23:00:31.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.619" endtime="20201115 23:00:31.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.618" endtime="20201115 23:00:31.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.929" level="INFO">${RESULT} = [{'time': 0.024376306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.598700000000162e-05, 'source_diff': 2.598700000000162e-05}, {'time': 0.024404278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:31.926" endtime="20201115 23:00:31.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.943" level="INFO">${ACCURACY} = {'time': [0.024376306, 0.024404278, 0.024432278, 0.024460306, 0.024489278, 0.024517292, 0.024546306, 0.024574292, 0.024603306, 0.024631333, 0.024660292, 0.024688292, 0.024716319, 0.024744319, 0.024772...</msg>
<status status="PASS" starttime="20201115 23:00:31.930" endtime="20201115 23:00:31.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.947" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.946" endtime="20201115 23:00:31.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.950" level="INFO">VALUE: [2.598700000000162e-05, 2.5820000000002785e-05, 2.590300000000073e-05, 2.5778000000000606e-05, 2.668100000000062e-05, 2.6042000000000426e-05, 2.663900000000191e-05, 2.597300000000205e-05, 2.672299999999933e-05, 2.5874999999998122e-05, 2.6624999999998872e-05, 2.5764000000001036e-05, 2.6402000000001757e-05, 2.6027000000001382e-05, 2.5777000000001132e-05, 2.5764000000001036e-05, 2.6070000000003035e-05, 2.6651999999998538e-05, 2.6041000000000952e-05, 2.5832999999999412e-05, 2.5916000000000827e-05, 2.6096999999999232e-05, 2.5764000000001036e-05, 2.6055000000000522e-05, 2.662500000000234e-05, 2.5915999999997358e-05, 2.6610999999999302e-05, 2.5846999999998982e-05, 2.6680000000001147e-05, 2.668100000000062e-05, 2.6708000000000287e-05, 2.5764000000001036e-05, 2.616699999999708e-05, 2.5750000000001466e-05, 2.6708000000000287e-05, 2.5985999999998677e-05, 2.6540999999997983e-05, 2.6096999999999232e-05, 2.5832999999999412e-05, 2.6680000000001147e-05, 2.6055000000000522e-05, 2.6568999999997123e-05, 2.590300000000073e-05, 2.6110999999998802e-05, 2.5818999999999842e-05, 2.6082999999999662e-05, 2.6542000000000926e-05, 2.59170000000003e-05, 2.6735999999999427e-05, 2.5874999999998122e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.948" endtime="20201115 23:00:31.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.943" endtime="20201115 23:00:31.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.953" endtime="20201115 23:00:31.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.957" endtime="20201115 23:00:31.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.955" endtime="20201115 23:00:31.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.952" endtime="20201115 23:00:31.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.588" endtime="20201115 23:00:31.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.586" endtime="20201115 23:00:31.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.585" endtime="20201115 23:00:31.978"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.981" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.989" endtime="20201115 23:00:32.005"></status>
</kw>
<msg timestamp="20201115 23:00:32.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.987" endtime="20201115 23:00:32.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.007" endtime="20201115 23:00:32.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.010" endtime="20201115 23:00:32.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.985" endtime="20201115 23:00:32.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.983" endtime="20201115 23:00:32.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.020" endtime="20201115 23:00:32.307"></status>
</kw>
<msg timestamp="20201115 23:00:32.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024820833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024847847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.018" endtime="20201115 23:00:32.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024820833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024847847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.311" endtime="20201115 23:00:32.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.320" endtime="20201115 23:00:32.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.015" endtime="20201115 23:00:32.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.013" endtime="20201115 23:00:32.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.327" level="INFO">${RESULT} = [{'time': 0.024847847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7013999999998817e-05, 'source_diff': 2.7013999999998817e-05}, {'time': 0.024876833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:32.323" endtime="20201115 23:00:32.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.342" level="INFO">${ACCURACY} = {'time': [0.024847847, 0.024876833, 0.024905861, 0.024934847, 0.024964847, 0.024993847, 0.025022861, 0.025051847, 0.025081847, 0.025111847, 0.025140847, 0.025169847, 0.025199875, 0.025228861, 0.025257...</msg>
<status status="PASS" starttime="20201115 23:00:32.328" endtime="20201115 23:00:32.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.346" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.345" endtime="20201115 23:00:32.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.349" level="INFO">VALUE: [2.7013999999998817e-05, 2.7069000000001092e-05, 2.6833000000000412e-05, 2.7069000000001092e-05, 2.7749999999999997e-05, 2.6972000000000107e-05, 2.6972000000000107e-05, 2.7361000000000052e-05, 2.7694000000001717e-05, 2.7583000000001162e-05, 2.6721999999999857e-05, 2.6804999999997803e-05, 2.7597000000000732e-05, 2.6958000000000537e-05, 2.6860999999999552e-05, 2.6805000000001272e-05, 2.7000000000002716e-05, 2.690299999999826e-05, 2.7708000000001287e-05, 2.7722000000000857e-05, 2.7707999999997818e-05, 2.7556000000001496e-05, 2.6749999999998997e-05, 2.6806000000000746e-05, 2.7042000000001426e-05, 2.6721999999999857e-05, 2.6999999999999247e-05, 2.7624999999999872e-05, 2.695900000000001e-05, 2.6764000000002036e-05, 2.6735999999999427e-05, 2.6846999999999982e-05, 2.688900000000216e-05, 2.6874999999999122e-05, 2.6806000000000746e-05, 2.711100000000327e-05, 2.6763999999998567e-05, 2.6763999999998567e-05, 2.6806000000000746e-05, 2.7736000000000427e-05, 2.765300000000248e-05, 2.77369999999999e-05, 2.768100000000162e-05, 2.6792000000001176e-05, 2.7137999999999468e-05, 2.695900000000001e-05, 2.77369999999999e-05, 2.6888999999998692e-05, 2.6860999999999552e-05, 2.7652999999999012e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.348" endtime="20201115 23:00:32.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.343" endtime="20201115 23:00:32.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.352" endtime="20201115 23:00:32.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.356" endtime="20201115 23:00:32.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.354" endtime="20201115 23:00:32.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.351" endtime="20201115 23:00:32.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.981" endtime="20201115 23:00:32.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.979" endtime="20201115 23:00:32.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.978" endtime="20201115 23:00:32.377"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.379" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.388" endtime="20201115 23:00:32.403"></status>
</kw>
<msg timestamp="20201115 23:00:32.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.386" endtime="20201115 23:00:32.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.405" endtime="20201115 23:00:32.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.407" endtime="20201115 23:00:32.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.383" endtime="20201115 23:00:32.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.381" endtime="20201115 23:00:32.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.416" endtime="20201115 23:00:32.701"></status>
</kw>
<msg timestamp="20201115 23:00:32.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024448764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024476653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.415" endtime="20201115 23:00:32.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024448764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024476653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.705" endtime="20201115 23:00:32.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.714" endtime="20201115 23:00:32.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.412" endtime="20201115 23:00:32.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.410" endtime="20201115 23:00:32.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.721" level="INFO">${RESULT} = [{'time': 0.024476653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7888999999999692e-05, 'source_diff': 2.7888999999999692e-05}, {'time': 0.024507681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:32.718" endtime="20201115 23:00:32.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.734" level="INFO">${ACCURACY} = {'time': [0.024476653, 0.024507681, 0.024537667, 0.024567653, 0.024597667, 0.024627667, 0.024657708, 0.024687667, 0.024718667, 0.024748667, 0.024778694, 0.024808764, 0.024838681, 0.024868694, 0.024899...</msg>
<status status="PASS" starttime="20201115 23:00:32.722" endtime="20201115 23:00:32.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.739" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.738" endtime="20201115 23:00:32.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.742" level="INFO">VALUE: [2.7888999999999692e-05, 2.8666999999999582e-05, 2.8000000000000247e-05, 2.7999999999996777e-05, 2.8389000000000192e-05, 2.8041999999998957e-05, 2.7986000000000677e-05, 2.7888999999999692e-05, 2.8611000000001302e-05, 2.7847999999996986e-05, 2.7790999999999233e-05, 2.8083000000001662e-05, 2.793100000000187e-05, 2.7915999999999358e-05, 2.8639000000000442e-05, 2.8083999999997666e-05, 2.8611000000001302e-05, 2.7902999999999262e-05, 2.8722000000001857e-05, 2.7943999999998498e-05, 2.8610999999997833e-05, 2.8069000000002092e-05, 2.7847000000000982e-05, 2.7985999999997208e-05, 2.8611000000001302e-05, 2.8652000000000538e-05, 2.8068999999998623e-05, 2.8653000000000012e-05, 2.8611000000001302e-05, 2.7791000000002702e-05, 2.8069000000002092e-05, 2.8778000000000137e-05, 2.8111000000000802e-05, 2.7763999999999567e-05, 2.7875000000000122e-05, 2.7874999999996652e-05, 2.8083999999997666e-05, 2.7861000000000552e-05, 2.8471999999998138e-05, 2.8749999999997528e-05, 2.7819000000001842e-05, 2.7749999999999997e-05, 2.8041999999998957e-05, 2.8125000000000372e-05, 2.8722000000001857e-05, 2.8082999999998193e-05, 2.7792000000002176e-05, 2.7763999999999567e-05, 2.7792000000002176e-05, 2.8569999999998597e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.740" endtime="20201115 23:00:32.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.735" endtime="20201115 23:00:32.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.745" endtime="20201115 23:00:32.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.748" endtime="20201115 23:00:32.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.747" endtime="20201115 23:00:32.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.743" endtime="20201115 23:00:32.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.380" endtime="20201115 23:00:32.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.378" endtime="20201115 23:00:32.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.377" endtime="20201115 23:00:32.769"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.772" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.780" endtime="20201115 23:00:32.795"></status>
</kw>
<msg timestamp="20201115 23:00:32.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.778" endtime="20201115 23:00:32.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.797" endtime="20201115 23:00:32.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.800" endtime="20201115 23:00:32.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.776" endtime="20201115 23:00:32.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.774" endtime="20201115 23:00:32.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.809" endtime="20201115 23:00:33.096"></status>
</kw>
<msg timestamp="20201115 23:00:33.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024426417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024455333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.807" endtime="20201115 23:00:33.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024426417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024455333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.100" endtime="20201115 23:00:33.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.109" endtime="20201115 23:00:33.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.804" endtime="20201115 23:00:33.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.803" endtime="20201115 23:00:33.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.116" level="INFO">${RESULT} = [{'time': 0.024455333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8916000000000358e-05, 'source_diff': 2.8916000000000358e-05}, {'time': 0.024486333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:33.112" endtime="20201115 23:00:33.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.129" level="INFO">${ACCURACY} = {'time': [0.024455333, 0.024486333, 0.024517347, 0.024548361, 0.024580361, 0.024611347, 0.024642361, 0.024673347, 0.024704361, 0.024735347, 0.024766375, 0.024797375, 0.024829375, 0.024860375, 0.024891...</msg>
<status status="PASS" starttime="20201115 23:00:33.117" endtime="20201115 23:00:33.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.134" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.132" endtime="20201115 23:00:33.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.136" level="INFO">VALUE: [2.8916000000000358e-05, 2.8832999999998943e-05, 2.8888999999997222e-05, 2.9125000000001372e-05, 2.9666999999997112e-05, 2.8957999999999068e-05, 2.8764000000000567e-05, 2.8875000000001122e-05, 2.8986000000001677e-05, 2.8833000000002412e-05, 2.8875000000001122e-05, 2.9125000000001372e-05, 2.9653000000001012e-05, 2.8889000000000692e-05, 2.8818999999999373e-05, 2.9096999999998763e-05, 2.8916999999999832e-05, 2.8735999999997958e-05, 2.8985999999998208e-05, 2.8957999999999068e-05, 2.9624999999998403e-05, 2.9582999999999693e-05, 2.9028000000000387e-05, 2.8791999999999707e-05, 2.9096999999998763e-05, 2.9110999999998333e-05, 2.8833999999998416e-05, 2.8999999999997778e-05, 2.9000000000001247e-05, 2.9125000000001372e-05, 2.9000000000001247e-05, 2.894500000000244e-05, 2.8820000000002316e-05, 2.972300000000233e-05, 2.8889000000000692e-05, 2.9000000000001247e-05, 2.8903000000000262e-05, 2.8791999999999707e-05, 2.8875000000001122e-05, 2.9569999999999597e-05, 2.8860999999998083e-05, 2.9598000000002206e-05, 2.89309999999994e-05, 2.963800000000197e-05, 2.8722000000001857e-05, 2.9111000000001802e-05, 2.8722000000001857e-05, 2.9721999999999388e-05, 2.8902000000000788e-05, 2.8833000000002412e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.135" endtime="20201115 23:00:33.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.130" endtime="20201115 23:00:33.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.139" endtime="20201115 23:00:33.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.143" endtime="20201115 23:00:33.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.141" endtime="20201115 23:00:33.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.138" endtime="20201115 23:00:33.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.772" endtime="20201115 23:00:33.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.771" endtime="20201115 23:00:33.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.770" endtime="20201115 23:00:33.164"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.166" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.175" endtime="20201115 23:00:33.190"></status>
</kw>
<msg timestamp="20201115 23:00:33.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.173" endtime="20201115 23:00:33.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.192" endtime="20201115 23:00:33.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.194" endtime="20201115 23:00:33.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.171" endtime="20201115 23:00:33.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.168" endtime="20201115 23:00:33.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.204" endtime="20201115 23:00:33.491"></status>
</kw>
<msg timestamp="20201115 23:00:33.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024330639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024360597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.202" endtime="20201115 23:00:33.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024330639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024360597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.495" endtime="20201115 23:00:33.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.504" endtime="20201115 23:00:33.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.200" endtime="20201115 23:00:33.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.198" endtime="20201115 23:00:33.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.510" level="INFO">${RESULT} = [{'time': 0.024360597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9958000000000068e-05, 'source_diff': 2.9958000000000068e-05}, {'time': 0.024392556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:33.507" endtime="20201115 23:00:33.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.524" level="INFO">${ACCURACY} = {'time': [0.024360597, 0.024392556, 0.024425556, 0.024457556, 0.024490569, 0.024522569, 0.024555583, 0.024587611, 0.024620569, 0.024652569, 0.024685583, 0.024717583, 0.024749597, 0.024781583, 0.024814...</msg>
<status status="PASS" starttime="20201115 23:00:33.511" endtime="20201115 23:00:33.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.528" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.527" endtime="20201115 23:00:33.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.531" level="INFO">VALUE: [2.9958000000000068e-05, 2.9874999999998653e-05, 3.055600000000103e-05, 3.0069999999996627e-05, 3.066599999999864e-05, 2.9902000000001788e-05, 3.0568999999997654e-05, 2.9902999999997792e-05, 3.0526999999998944e-05, 2.9832999999999943e-05, 3.059700000000026e-05, 2.9902000000001788e-05, 3.0361000000003052e-05, 3.0055000000001053e-05, 3.0514000000002317e-05, 3.0041000000001483e-05, 3.0096999999999763e-05, 3.0041999999997487e-05, 2.9778000000001137e-05, 3.0111000000002802e-05, 2.9888999999998223e-05, 3.0040999999998014e-05, 3.056900000000112e-05, 3.065299999999854e-05, 3.055500000000155e-05, 2.9931000000000402e-05, 2.9819000000000373e-05, 3.0028000000001387e-05, 2.9917000000000832e-05, 3.0027999999997917e-05, 3.0000000000002247e-05, 2.9930000000000928e-05, 2.9860999999999083e-05, 2.9958000000000068e-05, 3.0056000000000527e-05, 3.059700000000026e-05, 2.9846999999999513e-05, 3.066700000000158e-05, 3.066599999999864e-05, 3.0028000000001387e-05, 3.073599999999996e-05, 3.066699999999811e-05, 3.054199999999799e-05, 2.9888999999998223e-05, 3.0584000000000167e-05, 2.9903000000001262e-05, 3.05700000000006e-05, 3.074999999999953e-05, 3.069500000000072e-05, 2.9860999999999083e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.529" endtime="20201115 23:00:33.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.525" endtime="20201115 23:00:33.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.534" endtime="20201115 23:00:33.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.538" endtime="20201115 23:00:33.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.536" endtime="20201115 23:00:33.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.532" endtime="20201115 23:00:33.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.167" endtime="20201115 23:00:33.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.165" endtime="20201115 23:00:33.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.164" endtime="20201115 23:00:33.559"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.561" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.570" endtime="20201115 23:00:33.585"></status>
</kw>
<msg timestamp="20201115 23:00:33.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.568" endtime="20201115 23:00:33.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.587" endtime="20201115 23:00:33.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.590" endtime="20201115 23:00:33.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.566" endtime="20201115 23:00:33.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.563" endtime="20201115 23:00:33.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.599" endtime="20201115 23:00:33.886"></status>
</kw>
<msg timestamp="20201115 23:00:33.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024897194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024928431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.597" endtime="20201115 23:00:33.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024897194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024928431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.890" endtime="20201115 23:00:33.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.898" endtime="20201115 23:00:33.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.595" endtime="20201115 23:00:33.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.593" endtime="20201115 23:00:33.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.905" level="INFO">${RESULT} = [{'time': 0.024928431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.123699999999993e-05, 'source_diff': 3.123699999999993e-05}, {'time': 0.024962417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:33.902" endtime="20201115 23:00:33.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.920" level="INFO">${ACCURACY} = {'time': [0.024928431, 0.024962417, 0.024995431, 0.025028431, 0.025062431, 0.025096458, 0.025129444, 0.025163431, 0.025196431, 0.025230458, 0.025264458, 0.025298472, 0.025331444, 0.025365444, 0.025399...</msg>
<status status="PASS" starttime="20201115 23:00:33.906" endtime="20201115 23:00:33.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.925" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.924" endtime="20201115 23:00:33.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.927" level="INFO">VALUE: [3.123699999999993e-05, 3.158400000000117e-05, 3.1111999999999806e-05, 3.087499999999965e-05, 3.166699999999911e-05, 3.170799999999835e-05, 3.098600000000021e-05, 3.15700000000016e-05, 3.104199999999849e-05, 3.163899999999997e-05, 3.173600000000096e-05, 3.172199999999792e-05, 3.08050000000018e-05, 3.159700000000126e-05, 3.172199999999792e-05, 3.0750000000003e-05, 3.086100000000008e-05, 3.175000000000053e-05, 3.166599999999964e-05, 3.173600000000096e-05, 3.166599999999964e-05, 3.101400000000282e-05, 3.173600000000096e-05, 3.086100000000008e-05, 3.1610999999997363e-05, 3.099999999999978e-05, 3.092999999999846e-05, 3.166699999999911e-05, 3.0832999999997474e-05, 3.102800000000239e-05, 3.166699999999911e-05, 3.109700000000076e-05, 3.084700000000051e-05, 3.098600000000021e-05, 3.099999999999978e-05, 3.091699999999836e-05, 3.163899999999997e-05, 3.169499999999825e-05, 3.07639999999991e-05, 3.161100000000083e-05, 3.094500000000097e-05, 3.073599999999996e-05, 3.090299999999879e-05, 3.166700000000258e-05, 3.077800000000214e-05, 3.105599999999806e-05, 3.10700000000011e-05, 3.155599999999856e-05, 3.165299999999954e-05, 3.10700000000011e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.926" endtime="20201115 23:00:33.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.921" endtime="20201115 23:00:33.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.930" endtime="20201115 23:00:33.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.934" endtime="20201115 23:00:33.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.932" endtime="20201115 23:00:33.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.929" endtime="20201115 23:00:33.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.562" endtime="20201115 23:00:33.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.560" endtime="20201115 23:00:33.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.559" endtime="20201115 23:00:33.955"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.958" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.966" endtime="20201115 23:00:33.982"></status>
</kw>
<msg timestamp="20201115 23:00:33.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.965" endtime="20201115 23:00:33.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.983" endtime="20201115 23:00:33.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.986" endtime="20201115 23:00:33.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.962" endtime="20201115 23:00:33.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.960" endtime="20201115 23:00:33.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.995" endtime="20201115 23:00:34.280"></status>
</kw>
<msg timestamp="20201115 23:00:34.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024415861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024448472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.993" endtime="20201115 23:00:34.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024415861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024448472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.284" endtime="20201115 23:00:34.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.293" endtime="20201115 23:00:34.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.991" endtime="20201115 23:00:34.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.989" endtime="20201115 23:00:34.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.299" level="INFO">${RESULT} = [{'time': 0.024448472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2610999999998364e-05, 'source_diff': 3.2610999999998364e-05}, {'time': 0.024482458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:34.296" endtime="20201115 23:00:34.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.313" level="INFO">${ACCURACY} = {'time': [0.024448472, 0.024482458, 0.024516472, 0.024550472, 0.024584486, 0.024618472, 0.024653472, 0.024687486, 0.024721486, 0.024756486, 0.024791514, 0.024825486, 0.024859486, 0.0248945, 0.02492851...</msg>
<status status="PASS" starttime="20201115 23:00:34.300" endtime="20201115 23:00:34.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.317" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.316" endtime="20201115 23:00:34.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.320" level="INFO">VALUE: [3.2610999999998364e-05, 3.2096999999998294e-05, 3.202799999999992e-05, 3.194399999999903e-05, 3.191699999999936e-05, 3.1790999999999764e-05, 3.265300000000054e-05, 3.21250000000009e-05, 3.186100000000108e-05, 3.272200000000239e-05, 3.273600000000196e-05, 3.188900000000022e-05, 3.194399999999903e-05, 3.273599999999849e-05, 3.188900000000022e-05, 3.195900000000154e-05, 3.26389999999975e-05, 3.197200000000164e-05, 3.180600000000228e-05, 3.175000000000053e-05, 3.205599999999906e-05, 3.273599999999849e-05, 3.265300000000054e-05, 3.188900000000022e-05, 3.205600000000253e-05, 3.19310000000024e-05, 3.261100000000183e-05, 3.211100000000133e-05, 3.179199999999924e-05, 3.173599999999749e-05, 3.269499999999925e-05, 3.2041000000000014e-05, 3.205599999999906e-05, 3.213900000000047e-05, 3.26250000000014e-05, 3.169499999999825e-05, 3.194399999999903e-05, 3.198600000000121e-05, 3.269499999999925e-05, 3.197300000000111e-05, 3.175000000000053e-05, 3.268000000000021e-05, 3.1818999999998904e-05, 3.273599999999849e-05, 3.211100000000133e-05, 3.2624999999997933e-05, 3.27640000000011e-05, 3.268000000000021e-05, 3.186100000000108e-05, 3.194399999999903e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.318" endtime="20201115 23:00:34.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.314" endtime="20201115 23:00:34.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.323" endtime="20201115 23:00:34.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.327" endtime="20201115 23:00:34.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.325" endtime="20201115 23:00:34.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.322" endtime="20201115 23:00:34.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.959" endtime="20201115 23:00:34.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.957" endtime="20201115 23:00:34.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.956" endtime="20201115 23:00:34.348"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.350" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.359" endtime="20201115 23:00:34.375"></status>
</kw>
<msg timestamp="20201115 23:00:34.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.357" endtime="20201115 23:00:34.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.376" endtime="20201115 23:00:34.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.379" endtime="20201115 23:00:34.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.355" endtime="20201115 23:00:34.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.353" endtime="20201115 23:00:34.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.388" endtime="20201115 23:00:34.674"></status>
</kw>
<msg timestamp="20201115 23:00:34.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024513972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.386" endtime="20201115 23:00:34.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024513972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.678" endtime="20201115 23:00:34.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.687" endtime="20201115 23:00:34.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.384" endtime="20201115 23:00:34.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.382" endtime="20201115 23:00:34.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.694" level="INFO">${RESULT} = [{'time': 0.024546833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.286100000000208e-05, 'source_diff': 3.286100000000208e-05}, {'time': 0.024582847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:34.690" endtime="20201115 23:00:34.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.707" level="INFO">${ACCURACY} = {'time': [0.024546833, 0.024582847, 0.024617847, 0.024652847, 0.024687861, 0.024722847, 0.024757847, 0.024792861, 0.024828861, 0.024863861, 0.024898889, 0.024933861, 0.024968861, 0.025004861, 0.025039...</msg>
<status status="PASS" starttime="20201115 23:00:34.695" endtime="20201115 23:00:34.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.712" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.711" endtime="20201115 23:00:34.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.721" level="INFO">VALUE: [3.286100000000208e-05, 3.372199999999992e-05, 3.3055000000000584e-05, 3.276399999999763e-05, 3.2874999999998183e-05, 3.3096999999999294e-05, 3.291600000000089e-05, 3.288899999999775e-05, 3.36250000000024e-05, 3.297200000000264e-05, 3.31250000000019e-05, 3.2818999999999904e-05, 3.294400000000003e-05, 3.368000000000121e-05, 3.3110999999998864e-05, 3.3069000000000154e-05, 3.363900000000197e-05, 3.288900000000122e-05, 3.316600000000114e-05, 3.372199999999992e-05, 3.370800000000035e-05, 3.293099999999993e-05, 3.35839999999997e-05, 3.281999999999938e-05, 3.301399999999788e-05, 3.306999999999963e-05, 3.368000000000121e-05, 3.35839999999997e-05, 3.305600000000006e-05, 3.366699999999764e-05, 3.370899999999982e-05, 3.3138999999998e-05, 3.308400000000267e-05, 3.293099999999993e-05, 3.2860999999998614e-05, 3.370799999999688e-05, 3.283399999999895e-05, 3.27640000000011e-05, 3.372300000000286e-05, 3.306999999999963e-05, 3.366599999999817e-05, 3.288799999999828e-05, 3.3583000000000224e-05, 3.336100000000258e-05, 3.291599999999742e-05, 3.3012999999998405e-05, 3.3638999999998503e-05, 3.298599999999874e-05, 3.361100000000283e-05, 3.372199999999992e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.713" endtime="20201115 23:00:34.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.708" endtime="20201115 23:00:34.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.725" endtime="20201115 23:00:34.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.728" endtime="20201115 23:00:34.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.727" endtime="20201115 23:00:34.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.723" endtime="20201115 23:00:34.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.351" endtime="20201115 23:00:34.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.349" endtime="20201115 23:00:34.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.348" endtime="20201115 23:00:34.749"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.752" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.760" endtime="20201115 23:00:34.776"></status>
</kw>
<msg timestamp="20201115 23:00:34.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.759" endtime="20201115 23:00:34.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.777" endtime="20201115 23:00:34.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.780" endtime="20201115 23:00:34.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.756" endtime="20201115 23:00:34.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.754" endtime="20201115 23:00:34.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.789" endtime="20201115 23:00:35.076"></status>
</kw>
<msg timestamp="20201115 23:00:35.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024493819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024527764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.787" endtime="20201115 23:00:35.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024493819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024527764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.080" endtime="20201115 23:00:35.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.089" endtime="20201115 23:00:35.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.785" endtime="20201115 23:00:35.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.783" endtime="20201115 23:00:35.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.096" level="INFO">${RESULT} = [{'time': 0.024527764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.39450000000005e-05, 'source_diff': 3.39450000000005e-05}, {'time': 0.024563764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:35.092" endtime="20201115 23:00:35.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.109" level="INFO">${ACCURACY} = {'time': [0.024527764, 0.024563764, 0.024599819, 0.024635764, 0.024671778, 0.024707792, 0.024744778, 0.024780847, 0.024816778, 0.024853778, 0.024889861, 0.024925806, 0.024961792, 0.024997792, 0.025033...</msg>
<status status="PASS" starttime="20201115 23:00:35.097" endtime="20201115 23:00:35.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.114" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.113" endtime="20201115 23:00:35.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.116" level="INFO">VALUE: [3.39450000000005e-05, 3.395799999999713e-05, 3.391599999999842e-05, 3.387500000000265e-05, 3.391699999999789e-05, 3.405599999999759e-05, 3.4596999999997324e-05, 3.3833000000000474e-05, 3.402800000000192e-05, 3.45840000000007e-05, 3.404199999999802e-05, 3.39589999999966e-05, 3.39450000000005e-05, 3.383399999999995e-05, 3.3860999999999614e-05, 3.391700000000136e-05, 3.4041000000002014e-05, 3.3874999999999184e-05, 3.383399999999995e-05, 3.3888999999998753e-05, 3.4569000000001654e-05, 3.4554999999998615e-05, 3.4569000000001654e-05, 3.401399999999888e-05, 3.3805000000001334e-05, 3.394399999999756e-05, 3.394400000000103e-05, 3.4582999999997754e-05, 3.4361000000000114e-05, 3.397200000000017e-05, 3.3832999999997004e-05, 3.4624999999999934e-05, 3.4083000000000724e-05, 3.399999999999931e-05, 3.4638999999999504e-05, 3.470800000000135e-05, 3.4083000000000724e-05, 3.4555000000002084e-05, 3.374999999999906e-05, 3.3833000000000474e-05, 3.37640000000021e-05, 3.401399999999888e-05, 3.3874999999999184e-05, 3.4652999999999073e-05, 3.404200000000149e-05, 3.39580000000006e-05, 3.4138999999999003e-05, 3.470800000000135e-05, 3.3874999999999184e-05, 3.468100000000168e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.115" endtime="20201115 23:00:35.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.110" endtime="20201115 23:00:35.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.120" endtime="20201115 23:00:35.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.123" endtime="20201115 23:00:35.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.122" endtime="20201115 23:00:35.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.118" endtime="20201115 23:00:35.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.753" endtime="20201115 23:00:35.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.751" endtime="20201115 23:00:35.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.750" endtime="20201115 23:00:35.144"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.147" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.155" endtime="20201115 23:00:35.172"></status>
</kw>
<msg timestamp="20201115 23:00:35.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.153" endtime="20201115 23:00:35.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.174" endtime="20201115 23:00:35.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.176" endtime="20201115 23:00:35.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.151" endtime="20201115 23:00:35.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.149" endtime="20201115 23:00:35.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.185" endtime="20201115 23:00:35.472"></status>
</kw>
<msg timestamp="20201115 23:00:35.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024839347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024874986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.184" endtime="20201115 23:00:35.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024839347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024874986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.476" endtime="20201115 23:00:35.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.485" endtime="20201115 23:00:35.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.181" endtime="20201115 23:00:35.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.179" endtime="20201115 23:00:35.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.492" level="INFO">${RESULT} = [{'time': 0.024874986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5639000000000504e-05, 'source_diff': 3.5639000000000504e-05}, {'time': 0.024911986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:35.488" endtime="20201115 23:00:35.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.507" level="INFO">${ACCURACY} = {'time': [0.024874986, 0.024911986, 0.024949986, 0.024988, 0.025025014, 0.025062, 0.025099, 0.025136, 0.025174014, 0.025212028, 0.025249028, 0.025287014, 0.025325014, 0.025363056, 0.025400028, 0.02543...</msg>
<status status="PASS" starttime="20201115 23:00:35.493" endtime="20201115 23:00:35.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.511" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.510" endtime="20201115 23:00:35.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.514" level="INFO">VALUE: [3.5639000000000504e-05, 3.504199999999902e-05, 3.5582999999998755e-05, 3.5582999999998755e-05, 3.500000000000031e-05, 3.5111000000000864e-05, 3.497200000000117e-05, 3.475000000000006e-05, 3.5653000000000074e-05, 3.5639000000000504e-05, 3.502799999999945e-05, 3.569499999999878e-05, 3.573600000000149e-05, 3.55979999999978e-05, 3.502800000000292e-05, 3.5666999999999643e-05, 3.479199999999877e-05, 3.4860999999997144e-05, 3.483400000000095e-05, 3.5375000000000684e-05, 3.555599999999909e-05, 3.55979999999978e-05, 3.504199999999902e-05, 3.497200000000117e-05, 3.556999999999866e-05, 3.573600000000149e-05, 3.56520000000006e-05, 3.4763000000000155e-05, 3.4847000000001044e-05, 3.572200000000192e-05, 3.572200000000192e-05, 3.5054999999999115e-05, 3.5152999999999573e-05, 3.476399999999963e-05, 3.5068999999998685e-05, 3.4875000000000184e-05, 3.5097000000001294e-05, 3.5554999999999615e-05, 3.566600000000017e-05, 3.572199999999845e-05, 3.5111000000000864e-05, 3.5125000000000434e-05, 3.575000000000106e-05, 3.5611000000001364e-05, 3.5666999999999643e-05, 3.494399999999856e-05, 3.568100000000268e-05, 3.568099999999921e-05, 3.504199999999902e-05, 3.47779999999992e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.512" endtime="20201115 23:00:35.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.508" endtime="20201115 23:00:35.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.517" endtime="20201115 23:00:35.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.521" endtime="20201115 23:00:35.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.519" endtime="20201115 23:00:35.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.515" endtime="20201115 23:00:35.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.147" endtime="20201115 23:00:35.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.145" endtime="20201115 23:00:35.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.145" endtime="20201115 23:00:35.542"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.544" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.552" endtime="20201115 23:00:35.568"></status>
</kw>
<msg timestamp="20201115 23:00:35.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.551" endtime="20201115 23:00:35.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.569" endtime="20201115 23:00:35.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.572" endtime="20201115 23:00:35.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.548" endtime="20201115 23:00:35.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.546" endtime="20201115 23:00:35.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.582" endtime="20201115 23:00:35.867"></status>
</kw>
<msg timestamp="20201115 23:00:35.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024310861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024346861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.580" endtime="20201115 23:00:35.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024310861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024346861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.872" endtime="20201115 23:00:35.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.880" endtime="20201115 23:00:35.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.577" endtime="20201115 23:00:35.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.575" endtime="20201115 23:00:35.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.887" level="INFO">${RESULT} = [{'time': 0.024346861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.600000000000131e-05, 'source_diff': 3.600000000000131e-05}, {'time': 0.024384875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:35.883" endtime="20201115 23:00:35.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.900" level="INFO">${ACCURACY} = {'time': [0.024346861, 0.024384875, 0.024423861, 0.024461875, 0.024499875, 0.024537889, 0.024575875, 0.024613889, 0.024652875, 0.024690889, 0.024729903, 0.024768889, 0.024806889, 0.024844903, 0.024882...</msg>
<status status="PASS" starttime="20201115 23:00:35.888" endtime="20201115 23:00:35.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.905" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.904" endtime="20201115 23:00:35.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.907" level="INFO">VALUE: [3.600000000000131e-05, 3.6068999999999685e-05, 3.670799999999988e-05, 3.579199999999977e-05, 3.5889000000000754e-05, 3.6082999999999255e-05, 3.595799999999913e-05, 3.5832999999999005e-05, 3.669400000000031e-05, 3.576400000000063e-05, 3.675000000000206e-05, 3.6666999999997174e-05, 3.579199999999977e-05, 3.6111000000001864e-05, 3.602800000000045e-05, 3.580600000000281e-05, 3.59450000000025e-05, 3.6667000000000644e-05, 3.6681000000000213e-05, 3.658399999999923e-05, 3.60979999999983e-05, 3.59589999999986e-05, 3.658399999999923e-05, 3.588800000000128e-05, 3.636199999999812e-05, 3.668000000000074e-05, 3.601400000000088e-05, 3.584800000000152e-05, 3.592999999999999e-05, 3.666600000000117e-05, 3.5832999999999005e-05, 3.592999999999999e-05, 3.674999999999859e-05, 3.6582999999999755e-05, 3.5861000000001614e-05, 3.5818999999999435e-05, 3.6555000000000615e-05, 3.6374999999998214e-05, 3.6555000000000615e-05, 3.6611000000002364e-05, 3.6096999999998824e-05, 3.6041000000000545e-05, 3.592999999999999e-05, 3.604199999999655e-05, 3.6111000000001864e-05, 3.594399999999956e-05, 3.6569000000000185e-05, 3.595799999999913e-05, 3.672199999999945e-05, 3.574999999999759e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.906" endtime="20201115 23:00:35.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.901" endtime="20201115 23:00:35.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.911" endtime="20201115 23:00:35.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.914" endtime="20201115 23:00:35.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.913" endtime="20201115 23:00:35.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.909" endtime="20201115 23:00:35.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.545" endtime="20201115 23:00:35.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.543" endtime="20201115 23:00:35.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.542" endtime="20201115 23:00:35.935"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.938" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.946" endtime="20201115 23:00:35.963"></status>
</kw>
<msg timestamp="20201115 23:00:35.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.944" endtime="20201115 23:00:35.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.964" endtime="20201115 23:00:35.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.967" endtime="20201115 23:00:35.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.942" endtime="20201115 23:00:35.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.940" endtime="20201115 23:00:35.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.976" endtime="20201115 23:00:36.263"></status>
</kw>
<msg timestamp="20201115 23:00:36.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024840931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024878222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.975" endtime="20201115 23:00:36.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024840931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024878222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.267" endtime="20201115 23:00:36.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.275" endtime="20201115 23:00:36.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.972" endtime="20201115 23:00:36.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.970" endtime="20201115 23:00:36.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.282" level="INFO">${RESULT} = [{'time': 0.024878222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7290999999998325e-05, 'source_diff': 3.7290999999998325e-05}, {'time': 0.024918222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:36.279" endtime="20201115 23:00:36.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.296" level="INFO">${ACCURACY} = {'time': [0.024878222, 0.024918222, 0.024957236, 0.024996236, 0.025035222, 0.025074236, 0.025114236, 0.02515425, 0.025194236, 0.025233278, 0.02527325, 0.02531325, 0.025352306, 0.025391264, 0.02543025,...</msg>
<status status="PASS" starttime="20201115 23:00:36.283" endtime="20201115 23:00:36.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.300" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.299" endtime="20201115 23:00:36.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.303" level="INFO">VALUE: [3.7290999999998325e-05, 3.7555000000001615e-05, 3.695800000000013e-05, 3.702800000000145e-05, 3.6846999999999575e-05, 3.7388999999998784e-05, 3.773600000000002e-05, 3.769399999999784e-05, 3.7582999999997285e-05, 3.708399999999973e-05, 3.769400000000131e-05, 3.772200000000045e-05, 3.702800000000145e-05, 3.699999999999884e-05, 3.701400000000188e-05, 3.7125000000002434e-05, 3.69719999999997e-05, 3.698599999999927e-05, 3.707000000000016e-05, 3.7041000000001545e-05, 3.676399999999816e-05, 3.7653000000002074e-05, 3.708399999999973e-05, 3.701400000000188e-05, 3.7667000000001644e-05, 3.694500000000003e-05, 3.7652999999998604e-05, 3.75979999999998e-05, 3.683399999999948e-05, 3.6931000000000463e-05, 3.684799999999905e-05, 3.6805000000000865e-05, 3.707000000000016e-05, 3.7624999999999464e-05, 3.770799999999741e-05, 3.773600000000002e-05, 3.7124999999998964e-05, 3.7054999999997645e-05, 3.769400000000131e-05, 3.76520000000026e-05, 3.7638999999999034e-05, 3.7125000000002434e-05, 3.765199999999913e-05, 3.7069000000000685e-05, 3.6805000000000865e-05, 3.698600000000274e-05, 3.693000000000099e-05, 3.7610999999999895e-05, 3.695800000000013e-05, 3.7124999999998964e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.301" endtime="20201115 23:00:36.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.297" endtime="20201115 23:00:36.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.306" endtime="20201115 23:00:36.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.309" endtime="20201115 23:00:36.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.308" endtime="20201115 23:00:36.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.304" endtime="20201115 23:00:36.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.938" endtime="20201115 23:00:36.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.937" endtime="20201115 23:00:36.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.936" endtime="20201115 23:00:36.331"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.333" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.342" endtime="20201115 23:00:36.358"></status>
</kw>
<msg timestamp="20201115 23:00:36.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.340" endtime="20201115 23:00:36.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.360" endtime="20201115 23:00:36.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.362" endtime="20201115 23:00:36.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.338" endtime="20201115 23:00:36.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.335" endtime="20201115 23:00:36.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.371" endtime="20201115 23:00:36.658"></status>
</kw>
<msg timestamp="20201115 23:00:36.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0250095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:36.370" endtime="20201115 23:00:36.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0250095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:36.662" endtime="20201115 23:00:36.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.670" endtime="20201115 23:00:36.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.367" endtime="20201115 23:00:36.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.365" endtime="20201115 23:00:36.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.677" level="INFO">${RESULT} = [{'time': 0.025048292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.87919999999993e-05, 'source_diff': 3.87919999999993e-05}, {'time': 0.025089278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:36.674" endtime="20201115 23:00:36.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.691" level="INFO">${ACCURACY} = {'time': [0.025048292, 0.025089278, 0.025130278, 0.025171306, 0.025212292, 0.025252292, 0.025292292, 0.025332292, 0.025372306, 0.025412306, 0.025452306, 0.025492306, 0.025532319, 0.025572319, 0.025612...</msg>
<status status="PASS" starttime="20201115 23:00:36.678" endtime="20201115 23:00:36.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.695" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.694" endtime="20201115 23:00:36.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.698" level="INFO">VALUE: [3.87919999999993e-05, 3.855599999999862e-05, 3.858399999999776e-05, 3.861200000000037e-05, 3.8611000000000895e-05, 3.805599999999812e-05, 3.7888999999999284e-05, 3.80980000000003e-05, 3.80980000000003e-05, 3.836200000000012e-05, 3.780600000000134e-05, 3.797300000000017e-05, 3.794400000000156e-05, 3.799999999999984e-05, 3.8388999999999784e-05, 3.8026999999999506e-05, 3.867999999999927e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.801399999999941e-05, 3.7818999999997965e-05, 3.7833000000001005e-05, 3.8054999999998645e-05, 3.801399999999941e-05, 3.873600000000102e-05, 3.776400000000263e-05, 3.777799999999873e-05, 3.776399999999916e-05, 3.799999999999984e-05, 3.7818999999997965e-05, 3.798600000000027e-05, 3.8652999999999604e-05, 3.804200000000202e-05, 3.7874999999999714e-05, 3.8625000000000465e-05, 3.869400000000231e-05, 3.858400000000123e-05, 3.799999999999984e-05, 3.7695000000000783e-05, 3.8652999999999604e-05, 3.8624999999996995e-05, 3.8596999999997855e-05, 3.805600000000159e-05, 3.872199999999798e-05, 3.8652999999999604e-05, 3.807000000000116e-05, 3.806999999999769e-05, 3.802800000000245e-05, 3.856999999999819e-05, 3.7791000000002295e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.696" endtime="20201115 23:00:36.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.692" endtime="20201115 23:00:36.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.701" endtime="20201115 23:00:36.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.704" endtime="20201115 23:00:36.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.703" endtime="20201115 23:00:36.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.699" endtime="20201115 23:00:36.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.334" endtime="20201115 23:00:36.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.332" endtime="20201115 23:00:36.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.331" endtime="20201115 23:00:36.726"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.728" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.737" endtime="20201115 23:00:36.753"></status>
</kw>
<msg timestamp="20201115 23:00:36.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.735" endtime="20201115 23:00:36.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.754" endtime="20201115 23:00:36.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.757" endtime="20201115 23:00:36.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.732" endtime="20201115 23:00:36.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.730" endtime="20201115 23:00:36.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.766" endtime="20201115 23:00:37.053"></status>
</kw>
<msg timestamp="20201115 23:00:37.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024753639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.765" endtime="20201115 23:00:37.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024753639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.057" endtime="20201115 23:00:37.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.065" endtime="20201115 23:00:37.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.762" endtime="20201115 23:00:37.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.760" endtime="20201115 23:00:37.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.072" level="INFO">${RESULT} = [{'time': 0.024753639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.927800000000023e-05, 'source_diff': 3.927800000000023e-05}, {'time': 0.024795625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:37.069" endtime="20201115 23:00:37.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.087" level="INFO">${ACCURACY} = {'time': [0.024753639, 0.024795625, 0.024836639, 0.024878653, 0.024920639, 0.024961653, 0.025003653, 0.025045667, 0.025086708, 0.025128667, 0.025170667, 0.025212653, 0.025254667, 0.025295667, 0.025336...</msg>
<status status="PASS" starttime="20201115 23:00:37.073" endtime="20201115 23:00:37.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.092" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.091" endtime="20201115 23:00:37.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.095" level="INFO">VALUE: [3.927800000000023e-05, 3.972200000000245e-05, 3.8930999999998994e-05, 3.976400000000116e-05, 3.952800000000048e-05, 3.8959000000001603e-05, 3.9639000000001035e-05, 3.9694999999999314e-05, 3.8832999999998535e-05, 3.955599999999962e-05, 3.9639000000001035e-05, 3.9695000000002784e-05, 3.9611000000001895e-05, 3.8861000000001145e-05, 3.8875000000000715e-05, 3.9708999999998884e-05, 3.956999999999919e-05, 3.8818999999998965e-05, 3.9582999999999285e-05, 3.95980000000018e-05, 3.8777000000000256e-05, 3.9610999999998425e-05, 3.890200000000038e-05, 3.875000000000059e-05, 3.9568999999999716e-05, 3.9625000000001465e-05, 3.973599999999855e-05, 3.89859999999978e-05, 3.9624999999997995e-05, 3.8804999999999396e-05, 3.900000000000084e-05, 3.9068999999999215e-05, 3.968000000000027e-05, 3.9583000000002755e-05, 3.9068999999999215e-05, 3.9568999999999716e-05, 3.970799999999941e-05, 3.976400000000116e-05, 3.9375000000001215e-05, 3.9694999999999314e-05, 3.8846999999998105e-05, 3.9639000000001035e-05, 3.9597000000002325e-05, 3.880599999999887e-05, 3.9680999999999744e-05, 3.956999999999919e-05, 3.8916999999999424e-05, 3.8861000000001145e-05, 3.8874999999997245e-05, 3.877799999999973e-05]</msg>
<status status="PASS" starttime="20201115 23:00:37.094" endtime="20201115 23:00:37.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.088" endtime="20201115 23:00:37.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.099" endtime="20201115 23:00:37.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.103" endtime="20201115 23:00:37.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.101" endtime="20201115 23:00:37.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.097" endtime="20201115 23:00:37.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.729" endtime="20201115 23:00:37.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.727" endtime="20201115 23:00:37.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.726" endtime="20201115 23:00:37.124"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.126" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.134" endtime="20201115 23:00:37.151"></status>
</kw>
<msg timestamp="20201115 23:00:37.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.133" endtime="20201115 23:00:37.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.152" endtime="20201115 23:00:37.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.155" endtime="20201115 23:00:37.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.130" endtime="20201115 23:00:37.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.128" endtime="20201115 23:00:37.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.164" endtime="20201115 23:00:37.451"></status>
</kw>
<msg timestamp="20201115 23:00:37.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024314028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024354208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.162" endtime="20201115 23:00:37.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024314028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024354208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.455" endtime="20201115 23:00:37.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.464" endtime="20201115 23:00:37.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.160" endtime="20201115 23:00:37.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.158" endtime="20201115 23:00:37.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.470" level="INFO">${RESULT} = [{'time': 0.024354208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.01799999999973e-05, 'source_diff': 4.01799999999973e-05}, {'time': 0.024396208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:37.467" endtime="20201115 23:00:37.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.484" level="INFO">${ACCURACY} = {'time': [0.024354208, 0.024396208, 0.024438292, 0.024480278, 0.024522236, 0.024565222, 0.024608236, 0.024651236, 0.02469425, 0.024736236, 0.02477825, 0.024820264, 0.024862292, 0.02490425, 0.024946264...</msg>
<status status="PASS" starttime="20201115 23:00:37.472" endtime="20201115 23:00:37.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.489" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.487" endtime="20201115 23:00:37.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.492" level="INFO">VALUE: [4.01799999999973e-05, 3.9776999999997786e-05, 3.9875000000001715e-05, 3.9861000000002145e-05, 3.9888999999997815e-05, 4.0596999999999855e-05, 4.0638999999998565e-05, 4.0596999999999855e-05, 4.0583000000000286e-05, 4.0125000000001965e-05, 3.9818999999999966e-05, 3.9903000000000854e-05, 4.005600000000012e-05, 3.997199999999923e-05, 3.99859999999988e-05, 3.976400000000116e-05, 4.072199999999998e-05, 3.976400000000116e-05, 4.0596999999999855e-05, 3.976400000000116e-05, 4.0653000000001605e-05, 4.005600000000012e-05, 3.977800000000073e-05, 3.99720000000027e-05, 4.0610999999999425e-05, 3.9903000000000854e-05, 4.054200000000105e-05, 3.9889000000001285e-05, 3.984800000000205e-05, 4.00980000000023e-05, 4.0638999999998565e-05, 3.9805000000000396e-05, 4.0055000000000646e-05, 3.988800000000181e-05, 4.0583000000000286e-05, 3.9832999999999535e-05, 3.9874999999998245e-05, 4.0541000000001576e-05, 4.0124999999998495e-05, 3.9818999999999966e-05, 4.070799999999694e-05, 4.073599999999955e-05, 4.0583000000000286e-05, 4.070800000000041e-05, 3.974999999999812e-05, 4.0055000000000646e-05, 4.070800000000041e-05, 4.0666999999997705e-05, 3.9818999999999966e-05, 4.0139000000001535e-05]</msg>
<status status="PASS" starttime="20201115 23:00:37.490" endtime="20201115 23:00:37.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.485" endtime="20201115 23:00:37.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.495" endtime="20201115 23:00:37.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.498" endtime="20201115 23:00:37.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.497" endtime="20201115 23:00:37.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.493" endtime="20201115 23:00:37.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.127" endtime="20201115 23:00:37.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.125" endtime="20201115 23:00:37.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.124" endtime="20201115 23:00:37.519"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.522" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.530" endtime="20201115 23:00:37.546"></status>
</kw>
<msg timestamp="20201115 23:00:37.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.529" endtime="20201115 23:00:37.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.547" endtime="20201115 23:00:37.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.550" endtime="20201115 23:00:37.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.526" endtime="20201115 23:00:37.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.524" endtime="20201115 23:00:37.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.559" endtime="20201115 23:00:37.846"></status>
</kw>
<msg timestamp="20201115 23:00:37.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024375569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024416847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.558" endtime="20201115 23:00:37.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024375569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024416847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.850" endtime="20201115 23:00:37.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.859" endtime="20201115 23:00:37.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.555" endtime="20201115 23:00:37.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.553" endtime="20201115 23:00:37.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.865" level="INFO">${RESULT} = [{'time': 0.024416847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.127799999999876e-05, 'source_diff': 4.127799999999876e-05}, {'time': 0.024459847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:37.862" endtime="20201115 23:00:37.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.879" level="INFO">${ACCURACY} = {'time': [0.024416847, 0.024459847, 0.024502847, 0.024545847, 0.024589861, 0.024633931, 0.024676889, 0.024719861, 0.024762861, 0.024805903, 0.024849889, 0.024893875, 0.024936889, 0.024980972, 0.025023...</msg>
<status status="PASS" starttime="20201115 23:00:37.867" endtime="20201115 23:00:37.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.884" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.883" endtime="20201115 23:00:37.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.886" level="INFO">VALUE: [4.127799999999876e-05, 4.101399999999894e-05, 4.100000000000284e-05, 4.091599999999848e-05, 4.1624999999999995e-05, 4.17920000000023e-05, 4.105600000000112e-05, 4.0916999999997955e-05, 4.09859999999998e-05, 4.07920000000013e-05, 4.1666999999998705e-05, 4.1568999999998246e-05, 4.1110999999999925e-05, 4.172200000000098e-05, 4.07920000000013e-05, 4.1611000000000425e-05, 4.173599999999708e-05, 4.0945000000000564e-05, 4.158400000000076e-05, 4.0945000000000564e-05, 4.1388999999999315e-05, 4.175000000000012e-05, 4.1652999999999135e-05, 4.0888999999998815e-05, 4.158399999999729e-05, 4.0776999999998786e-05, 4.0945000000000564e-05, 4.076399999999869e-05, 4.173600000000055e-05, 4.0888999999998815e-05, 4.09859999999998e-05, 4.1096999999996886e-05, 4.09859999999998e-05, 4.1097000000000355e-05, 4.072199999999998e-05, 4.100000000000284e-05, 4.1611000000000425e-05, 4.1083000000000786e-05, 4.154199999999858e-05, 4.1097000000000355e-05, 4.169399999999837e-05, 4.172200000000098e-05, 4.0902999999998385e-05, 4.0888999999998815e-05, 4.077800000000173e-05, 4.0874999999999245e-05, 4.1569000000001716e-05, 4.1068999999997746e-05, 4.077800000000173e-05, 4.08059999999974e-05]</msg>
<status status="PASS" starttime="20201115 23:00:37.885" endtime="20201115 23:00:37.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.880" endtime="20201115 23:00:37.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.889" endtime="20201115 23:00:37.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.893" endtime="20201115 23:00:37.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.891" endtime="20201115 23:00:37.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.888" endtime="20201115 23:00:37.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.523" endtime="20201115 23:00:37.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.521" endtime="20201115 23:00:37.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.520" endtime="20201115 23:00:37.914"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.916" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.925" endtime="20201115 23:00:37.941"></status>
</kw>
<msg timestamp="20201115 23:00:37.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.923" endtime="20201115 23:00:37.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.942" endtime="20201115 23:00:37.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.945" endtime="20201115 23:00:37.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.921" endtime="20201115 23:00:37.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.919" endtime="20201115 23:00:37.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.954" endtime="20201115 23:00:38.241"></status>
</kw>
<msg timestamp="20201115 23:00:38.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024401, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024443139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:37.952" endtime="20201115 23:00:38.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024401, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024443139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:38.245" endtime="20201115 23:00:38.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.254" endtime="20201115 23:00:38.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.950" endtime="20201115 23:00:38.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.948" endtime="20201115 23:00:38.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.261" level="INFO">${RESULT} = [{'time': 0.024443139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2139000000000065e-05, 'source_diff': 4.2139000000000065e-05}, {'time': 0.024488194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:38.257" endtime="20201115 23:00:38.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.274" level="INFO">${ACCURACY} = {'time': [0.024443139, 0.024488194, 0.024532139, 0.024577139, 0.024622139, 0.024666167, 0.024711167, 0.024755153, 0.024799167, 0.024844167, 0.024888167, 0.024933222, 0.024977167, 0.025022167, 0.025067...</msg>
<status status="PASS" starttime="20201115 23:00:38.262" endtime="20201115 23:00:38.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.279" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.278" endtime="20201115 23:00:38.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.281" level="INFO">VALUE: [4.2139000000000065e-05, 4.276300000000122e-05, 4.1888999999999815e-05, 4.270800000000241e-05, 4.2611000000001426e-05, 4.1916999999998955e-05, 4.259799999999786e-05, 4.2110999999997456e-05, 4.1902999999999385e-05, 4.275000000000112e-05, 4.1973000000000704e-05, 4.277800000000026e-05, 4.2111000000000925e-05, 4.258400000000176e-05, 4.272200000000198e-05, 4.200000000000037e-05, 4.181999999999797e-05, 4.1847000000001106e-05, 4.266600000000023e-05, 4.1861000000000675e-05, 4.273599999999808e-05, 4.2041000000003076e-05, 4.1819000000001966e-05, 4.26799999999998e-05, 4.2068999999998746e-05, 4.2596999999998386e-05, 4.191599999999948e-05, 4.2583000000002286e-05, 4.2653000000000135e-05, 4.269399999999937e-05, 4.173600000000055e-05, 4.272199999999851e-05, 4.1875000000000245e-05, 4.2625000000000995e-05, 4.205599999999865e-05, 4.1916999999998955e-05, 4.2111000000000925e-05, 4.2083000000001786e-05, 4.202799999999951e-05, 4.175000000000012e-05, 4.1902999999999385e-05, 4.270799999999894e-05, 4.2639000000000565e-05, 4.201399999999994e-05, 4.2611000000001426e-05, 4.2611000000001426e-05, 4.207000000000169e-05, 4.1916999999998955e-05, 4.258399999999829e-05, 4.177800000000273e-05]</msg>
<status status="PASS" starttime="20201115 23:00:38.280" endtime="20201115 23:00:38.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.275" endtime="20201115 23:00:38.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.284" endtime="20201115 23:00:38.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.288" endtime="20201115 23:00:38.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.286" endtime="20201115 23:00:38.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.283" endtime="20201115 23:00:38.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.917" endtime="20201115 23:00:38.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.915" endtime="20201115 23:00:38.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.914" endtime="20201115 23:00:38.309"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.311" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.320" endtime="20201115 23:00:38.336"></status>
</kw>
<msg timestamp="20201115 23:00:38.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.318" endtime="20201115 23:00:38.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.338" endtime="20201115 23:00:38.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.340" endtime="20201115 23:00:38.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.315" endtime="20201115 23:00:38.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.313" endtime="20201115 23:00:38.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.350" endtime="20201115 23:00:38.636"></status>
</kw>
<msg timestamp="20201115 23:00:38.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024311583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024355222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.348" endtime="20201115 23:00:38.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024311583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024355222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.641" endtime="20201115 23:00:38.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.649" endtime="20201115 23:00:38.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.345" endtime="20201115 23:00:38.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.343" endtime="20201115 23:00:38.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.656" level="INFO">${RESULT} = [{'time': 0.024355222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3638999999998096e-05, 'source_diff': 4.3638999999998096e-05}, {'time': 0.024401236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:38.653" endtime="20201115 23:00:38.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.671" level="INFO">${ACCURACY} = {'time': [0.024355222, 0.024401236, 0.024446222, 0.024491236, 0.024536236, 0.024581236, 0.024626236, 0.024672236, 0.024717236, 0.02476325, 0.02480825, 0.02485325, 0.02489825, 0.024943278, 0.024988264,...</msg>
<status status="PASS" starttime="20201115 23:00:38.657" endtime="20201115 23:00:38.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.675" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.674" endtime="20201115 23:00:38.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.678" level="INFO">VALUE: [4.3638999999998096e-05, 4.376399999999822e-05, 4.291600000000048e-05, 4.293000000000005e-05, 4.3068999999999746e-05, 4.2889000000000815e-05, 4.2846999999998636e-05, 4.3653000000001135e-05, 4.304200000000008e-05, 4.3653000000001135e-05, 4.2875000000001245e-05, 4.295799999999919e-05, 4.2930999999999525e-05, 4.3110999999998456e-05, 4.29999999999979e-05, 4.305599999999965e-05, 4.3624999999998526e-05, 4.373600000000255e-05, 4.356999999999972e-05, 4.355600000000015e-05, 4.2930999999999525e-05, 4.28059999999994e-05, 4.2931000000002995e-05, 4.298599999999833e-05, 4.361199999999843e-05, 4.304099999999714e-05, 4.301399999999747e-05, 4.366600000000123e-05, 4.3625000000001996e-05, 4.375000000000212e-05, 4.365199999999819e-05, 4.273599999999808e-05, 4.3596999999999386e-05, 4.290200000000091e-05, 4.302699999999757e-05, 4.3110999999998456e-05, 4.293000000000005e-05, 4.3639000000001565e-05, 4.3055000000000176e-05, 4.2903000000000385e-05, 4.295799999999919e-05, 4.3124999999998026e-05, 4.3068999999999746e-05, 4.2861000000001676e-05, 4.2903000000000385e-05, 4.293000000000005e-05, 4.300000000000137e-05, 4.3375000000001745e-05, 4.2889000000000815e-05, 4.2832999999999066e-05]</msg>
<status status="PASS" starttime="20201115 23:00:38.677" endtime="20201115 23:00:38.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.672" endtime="20201115 23:00:38.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.681" endtime="20201115 23:00:38.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.685" endtime="20201115 23:00:38.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.683" endtime="20201115 23:00:38.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.680" endtime="20201115 23:00:38.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.312" endtime="20201115 23:00:38.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.310" endtime="20201115 23:00:38.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.309" endtime="20201115 23:00:38.706"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.708" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.716" endtime="20201115 23:00:38.733"></status>
</kw>
<msg timestamp="20201115 23:00:38.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.715" endtime="20201115 23:00:38.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.734" endtime="20201115 23:00:38.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.737" endtime="20201115 23:00:38.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.712" endtime="20201115 23:00:38.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.710" endtime="20201115 23:00:38.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.746" endtime="20201115 23:00:39.031"></status>
</kw>
<msg timestamp="20201115 23:00:39.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024393833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024438361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.745" endtime="20201115 23:00:39.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024393833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024438361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.035" endtime="20201115 23:00:39.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.044" endtime="20201115 23:00:39.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.742" endtime="20201115 23:00:39.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.740" endtime="20201115 23:00:39.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.050" level="INFO">${RESULT} = [{'time': 0.024438361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.452799999999854e-05, 'source_diff': 4.452799999999854e-05}, {'time': 0.024484361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:39.047" endtime="20201115 23:00:39.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.064" level="INFO">${ACCURACY} = {'time': [0.024438361, 0.024484361, 0.024531375, 0.024577431, 0.024623389, 0.024669375, 0.024715389, 0.024762389, 0.024808389, 0.024855458, 0.024901417, 0.024948486, 0.024994417, 0.025041403, 0.025087...</msg>
<status status="PASS" starttime="20201115 23:00:39.051" endtime="20201115 23:00:39.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.069" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.068" endtime="20201115 23:00:39.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.071" level="INFO">VALUE: [4.452799999999854e-05, 4.3874999999998776e-05, 4.4624999999999526e-05, 4.3945000000000095e-05, 4.4124999999999026e-05, 4.398599999999933e-05, 4.373599999999908e-05, 4.4652999999998666e-05, 4.3874999999998776e-05, 4.4624999999999526e-05, 4.3888999999998346e-05, 4.472200000000051e-05, 4.376400000000169e-05, 4.473600000000008e-05, 4.398599999999933e-05, 4.459799999999986e-05, 4.4639000000002566e-05, 4.3973000000002704e-05, 4.384799999999911e-05, 4.3874999999998776e-05, 4.4652999999998666e-05, 4.379200000000083e-05, 4.3805000000000927e-05, 4.4610999999999956e-05, 4.463799999999962e-05, 4.39860000000028e-05, 4.402699999999857e-05, 4.3819000000000496e-05, 4.394400000000062e-05, 4.379100000000136e-05, 4.402699999999857e-05, 4.3833000000000066e-05, 4.470800000000094e-05, 4.3861000000002676e-05, 4.4096999999999886e-05, 4.3846999999999636e-05, 4.46800000000018e-05, 4.4624999999999526e-05, 4.4374999999999276e-05, 4.38060000000004e-05, 4.3846999999999636e-05, 4.376399999999822e-05, 4.402699999999857e-05, 4.3833000000000066e-05, 4.4681000000001275e-05, 4.4610999999999956e-05, 4.4597000000000386e-05, 4.4610999999999956e-05, 4.3860999999999206e-05, 4.401399999999847e-05]</msg>
<status status="PASS" starttime="20201115 23:00:39.070" endtime="20201115 23:00:39.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.065" endtime="20201115 23:00:39.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.074" endtime="20201115 23:00:39.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.078" endtime="20201115 23:00:39.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.076" endtime="20201115 23:00:39.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.073" endtime="20201115 23:00:39.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.709" endtime="20201115 23:00:39.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.707" endtime="20201115 23:00:39.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.706" endtime="20201115 23:00:39.099"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.102" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.110" endtime="20201115 23:00:39.127"></status>
</kw>
<msg timestamp="20201115 23:00:39.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.109" endtime="20201115 23:00:39.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.128" endtime="20201115 23:00:39.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.131" endtime="20201115 23:00:39.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.106" endtime="20201115 23:00:39.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.104" endtime="20201115 23:00:39.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.140" endtime="20201115 23:00:39.427"></status>
</kw>
<msg timestamp="20201115 23:00:39.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024986569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025032111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.138" endtime="20201115 23:00:39.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024986569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025032111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.431" endtime="20201115 23:00:39.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.440" endtime="20201115 23:00:39.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.136" endtime="20201115 23:00:39.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.134" endtime="20201115 23:00:39.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.447" level="INFO">${RESULT} = [{'time': 0.025032111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.554199999999911e-05, 'source_diff': 4.554199999999911e-05}, {'time': 0.025079111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:39.443" endtime="20201115 23:00:39.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.460" level="INFO">${ACCURACY} = {'time': [0.025032111, 0.025079111, 0.025126111, 0.025173139, 0.025220125, 0.025267125, 0.025315125, 0.025362125, 0.025409167, 0.025456153, 0.025503139, 0.025551139, 0.025599153, 0.025646167, 0.025694...</msg>
<status status="PASS" starttime="20201115 23:00:39.448" endtime="20201115 23:00:39.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.465" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.464" endtime="20201115 23:00:39.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.467" level="INFO">VALUE: [4.554199999999911e-05, 4.5069000000001747e-05, 4.501399999999947e-05, 4.49999999999999e-05, 4.4916999999998486e-05, 4.5097000000000886e-05, 4.575000000000065e-05, 4.498600000000033e-05, 4.5125000000000026e-05, 4.4861000000000206e-05, 4.479200000000183e-05, 4.557000000000172e-05, 4.5652999999999666e-05, 4.501399999999947e-05, 4.573600000000108e-05, 4.4861000000000206e-05, 4.5681000000002275e-05, 4.515199999999969e-05, 4.573600000000108e-05, 4.49999999999999e-05, 4.572200000000151e-05, 4.554099999999964e-05, 4.504200000000208e-05, 4.495800000000119e-05, 4.481899999999803e-05, 4.504099999999914e-05, 4.494400000000162e-05, 4.575000000000065e-05, 4.4833000000001066e-05, 4.5652999999999666e-05, 4.494400000000162e-05, 4.4861000000000206e-05, 4.4847000000000636e-05, 4.566599999999976e-05, 4.5652999999999666e-05, 4.481899999999803e-05, 4.4930999999998056e-05, 4.5652999999999666e-05, 4.477800000000226e-05, 4.5652999999999666e-05, 4.5611000000000956e-05, 4.552799999999954e-05, 4.5652999999999666e-05, 4.5402999999999416e-05, 4.509699999999742e-05, 4.575000000000065e-05, 4.49999999999999e-05, 4.4916999999998486e-05, 4.4986999999999805e-05, 4.5125000000000026e-05]</msg>
<status status="PASS" starttime="20201115 23:00:39.466" endtime="20201115 23:00:39.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.461" endtime="20201115 23:00:39.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.470" endtime="20201115 23:00:39.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.474" endtime="20201115 23:00:39.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.472" endtime="20201115 23:00:39.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.469" endtime="20201115 23:00:39.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.102" endtime="20201115 23:00:39.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.100" endtime="20201115 23:00:39.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.099" endtime="20201115 23:00:39.496"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.498" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.506" endtime="20201115 23:00:39.523"></status>
</kw>
<msg timestamp="20201115 23:00:39.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.505" endtime="20201115 23:00:39.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.524" endtime="20201115 23:00:39.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.527" endtime="20201115 23:00:39.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.502" endtime="20201115 23:00:39.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.500" endtime="20201115 23:00:39.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.536" endtime="20201115 23:00:39.822"></status>
</kw>
<msg timestamp="20201115 23:00:39.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024490028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024536486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.534" endtime="20201115 23:00:39.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024490028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024536486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.827" endtime="20201115 23:00:39.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.835" endtime="20201115 23:00:39.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.532" endtime="20201115 23:00:39.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.530" endtime="20201115 23:00:39.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.842" level="INFO">${RESULT} = [{'time': 0.024536486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.645799999999922e-05, 'source_diff': 4.645799999999922e-05}, {'time': 0.0245845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:39.838" endtime="20201115 23:00:39.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.855" level="INFO">${ACCURACY} = {'time': [0.024536486, 0.0245845, 0.024632486, 0.024680528, 0.024728583, 0.024776514, 0.0248245, 0.024873542, 0.024921514, 0.024969514, 0.025017514, 0.025065528, 0.025114528, 0.025162542, 0.025210542,...</msg>
<status status="PASS" starttime="20201115 23:00:39.843" endtime="20201115 23:00:39.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.860" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.859" endtime="20201115 23:00:39.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.862" level="INFO">VALUE: [4.645799999999922e-05, 4.599999999999743e-05, 4.636099999999824e-05, 4.5902999999999916e-05, 4.611099999999799e-05, 4.606999999999875e-05, 4.611099999999799e-05, 4.6708999999998946e-05, 4.574999999999718e-05, 4.58060000000024e-05, 4.5861000000001206e-05, 4.609699999999842e-05, 4.655599999999968e-05, 4.636099999999824e-05, 4.586099999999774e-05, 4.586099999999774e-05, 4.6375000000001276e-05, 4.673599999999861e-05, 4.656999999999925e-05, 4.6125000000001026e-05, 4.5973000000001235e-05, 4.675000000000165e-05, 4.605499999999971e-05, 4.641600000000051e-05, 4.665200000000119e-05, 4.655500000000021e-05, 4.601400000000047e-05, 4.605499999999971e-05, 4.587499999999731e-05, 4.655500000000021e-05, 4.579100000000336e-05, 4.6708999999998946e-05, 4.661099999999849e-05, 4.598599999999786e-05, 4.595800000000219e-05, 4.6125000000001026e-05, 4.6625000000001526e-05, 4.66939999999999e-05, 4.5902999999999916e-05, 4.595799999999872e-05, 4.605599999999918e-05, 4.598599999999786e-05, 4.575000000000065e-05, 4.582000000000197e-05, 4.595799999999872e-05, 4.673599999999861e-05, 4.586099999999774e-05, 4.6667000000000236e-05, 4.580599999999893e-05, 4.579200000000283e-05]</msg>
<status status="PASS" starttime="20201115 23:00:39.861" endtime="20201115 23:00:39.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.856" endtime="20201115 23:00:39.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.870" endtime="20201115 23:00:39.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.873" endtime="20201115 23:00:39.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.872" endtime="20201115 23:00:39.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.868" endtime="20201115 23:00:39.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.499" endtime="20201115 23:00:39.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.497" endtime="20201115 23:00:39.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.496" endtime="20201115 23:00:39.894"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.897" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.905" endtime="20201115 23:00:39.921"></status>
</kw>
<msg timestamp="20201115 23:00:39.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.903" endtime="20201115 23:00:39.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.922" endtime="20201115 23:00:39.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.925" endtime="20201115 23:00:39.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.901" endtime="20201115 23:00:39.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.899" endtime="20201115 23:00:39.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.934" endtime="20201115 23:00:40.221"></status>
</kw>
<msg timestamp="20201115 23:00:40.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024620375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024667347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.932" endtime="20201115 23:00:40.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024620375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024667347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.225" endtime="20201115 23:00:40.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.233" endtime="20201115 23:00:40.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.930" endtime="20201115 23:00:40.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.928" endtime="20201115 23:00:40.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.240" level="INFO">${RESULT} = [{'time': 0.024667347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.697199999999929e-05, 'source_diff': 4.697199999999929e-05}, {'time': 0.024716347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:40.237" endtime="20201115 23:00:40.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.255" level="INFO">${ACCURACY} = {'time': [0.024667347, 0.024716347, 0.024766375, 0.024815403, 0.024864375, 0.024914375, 0.024963375, 0.025013375, 0.025062389, 0.025112375, 0.025161403, 0.025211389, 0.025260389, 0.025309417, 0.025358...</msg>
<status status="PASS" starttime="20201115 23:00:40.241" endtime="20201115 23:00:40.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.260" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.259" endtime="20201115 23:00:40.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.263" level="INFO">VALUE: [4.697199999999929e-05, 4.704100000000114e-05, 4.76940000000009e-05, 4.676400000000122e-05, 4.6861000000002206e-05, 4.758300000000035e-05, 4.698599999999886e-05, 4.772200000000004e-05, 4.676400000000122e-05, 4.76940000000009e-05, 4.6958999999999196e-05, 4.7681000000000806e-05, 4.695799999999972e-05, 4.683399999999907e-05, 4.697199999999929e-05, 4.762499999999906e-05, 4.675000000000165e-05, 4.698599999999886e-05, 4.7389000000001846e-05, 4.6889000000001346e-05, 4.6889000000001346e-05, 4.711200000000193e-05, 4.761099999999949e-05, 4.6986999999998336e-05, 4.716699999999727e-05, 4.758300000000035e-05, 4.690199999999797e-05, 4.763799999999915e-05, 4.687499999999831e-05, 4.695799999999972e-05, 4.709699999999942e-05, 4.675000000000165e-05, 4.677699999999785e-05, 4.76940000000009e-05, 4.766600000000176e-05, 4.709699999999942e-05, 4.769399999999743e-05, 4.770800000000047e-05, 4.7639000000002096e-05, 4.76529999999982e-05, 4.706900000000028e-05, 4.7013999999998e-05, 4.712499999999856e-05, 4.7653000000001666e-05, 4.6931000000000056e-05, 4.6903000000000916e-05, 4.762499999999906e-05, 4.7375000000002276e-05, 4.6931000000000056e-05, 4.704200000000061e-05]</msg>
<status status="PASS" starttime="20201115 23:00:40.261" endtime="20201115 23:00:40.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.256" endtime="20201115 23:00:40.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.266" endtime="20201115 23:00:40.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.270" endtime="20201115 23:00:40.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.268" endtime="20201115 23:00:40.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.264" endtime="20201115 23:00:40.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.897" endtime="20201115 23:00:40.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.895" endtime="20201115 23:00:40.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.895" endtime="20201115 23:00:40.291"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.293" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.302" endtime="20201115 23:00:40.318"></status>
</kw>
<msg timestamp="20201115 23:00:40.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.301" endtime="20201115 23:00:40.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.320" endtime="20201115 23:00:40.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.322" endtime="20201115 23:00:40.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.298" endtime="20201115 23:00:40.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.295" endtime="20201115 23:00:40.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.331" endtime="20201115 23:00:40.617"></status>
</kw>
<msg timestamp="20201115 23:00:40.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025190167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025238694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.330" endtime="20201115 23:00:40.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025190167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025238694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.621" endtime="20201115 23:00:40.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.629" endtime="20201115 23:00:40.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.327" endtime="20201115 23:00:40.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.325" endtime="20201115 23:00:40.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.636" level="INFO">${RESULT} = [{'time': 0.025238694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.85269999999996e-05, 'source_diff': 4.85269999999996e-05}, {'time': 0.025289667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:40.633" endtime="20201115 23:00:40.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.650" level="INFO">${ACCURACY} = {'time': [0.025238694, 0.025289667, 0.025339681, 0.025390681, 0.025441694, 0.025491694, 0.025542694, 0.025592694, 0.025643694, 0.025694708, 0.025744708, 0.025795708, 0.025845722, 0.025895764, 0.025946...</msg>
<status status="PASS" starttime="20201115 23:00:40.637" endtime="20201115 23:00:40.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.654" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.653" endtime="20201115 23:00:40.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.657" level="INFO">VALUE: [4.85269999999996e-05, 4.856999999999778e-05, 4.809799999999989e-05, 4.866699999999877e-05, 4.870800000000147e-05, 4.794399999999768e-05, 4.855500000000221e-05, 4.790199999999897e-05, 4.872200000000104e-05, 4.859700000000092e-05, 4.80000000000029e-05, 4.863899999999963e-05, 4.793000000000158e-05, 4.8139000000002596e-05, 4.856900000000178e-05, 4.788899999999888e-05, 4.784700000000017e-05, 4.797199999999682e-05, 4.858300000000135e-05, 4.872200000000104e-05, 4.804200000000161e-05, 4.797200000000029e-05, 4.787499999999931e-05, 4.862500000000006e-05, 4.876399999999975e-05, 4.8695000000001376e-05, 4.854199999999864e-05, 4.78200000000005e-05, 4.779200000000136e-05, 4.857000000000125e-05, 4.872200000000104e-05, 4.809700000000042e-05, 4.795799999999725e-05, 4.7917000000001486e-05, 4.780600000000093e-05, 4.811199999999946e-05, 4.86529999999992e-05, 4.858400000000082e-05, 4.797200000000029e-05, 4.856900000000178e-05, 4.812499999999956e-05, 4.786099999999974e-05, 4.856899999999831e-05, 4.78330000000006e-05, 4.788899999999888e-05, 4.875000000000018e-05, 4.788899999999888e-05, 4.784700000000017e-05, 4.779100000000189e-05, 4.798599999999986e-05]</msg>
<status status="PASS" starttime="20201115 23:00:40.655" endtime="20201115 23:00:40.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.651" endtime="20201115 23:00:40.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.660" endtime="20201115 23:00:40.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.664" endtime="20201115 23:00:40.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.662" endtime="20201115 23:00:40.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.658" endtime="20201115 23:00:40.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.294" endtime="20201115 23:00:40.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.292" endtime="20201115 23:00:40.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.291" endtime="20201115 23:00:40.685"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.687" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.695" endtime="20201115 23:00:40.712"></status>
</kw>
<msg timestamp="20201115 23:00:40.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.694" endtime="20201115 23:00:40.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.714" endtime="20201115 23:00:40.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.716" endtime="20201115 23:00:40.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.691" endtime="20201115 23:00:40.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.689" endtime="20201115 23:00:40.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.725" endtime="20201115 23:00:41.012"></status>
</kw>
<msg timestamp="20201115 23:00:41.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024395944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024445458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.724" endtime="20201115 23:00:41.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024395944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024445458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.016" endtime="20201115 23:00:41.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.025" endtime="20201115 23:00:41.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.721" endtime="20201115 23:00:41.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.719" endtime="20201115 23:00:41.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.031" level="INFO">${RESULT} = [{'time': 0.024445458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.95140000000005e-05, 'source_diff': 4.95140000000005e-05}, {'time': 0.024496444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:41.028" endtime="20201115 23:00:41.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.045" level="INFO">${ACCURACY} = {'time': [0.024445458, 0.024496444, 0.024547444, 0.024598458, 0.024649458, 0.024700458, 0.024752472, 0.024803458, 0.024854472, 0.024905472, 0.024957486, 0.025009486, 0.025061486, 0.0251125, 0.02516348...</msg>
<status status="PASS" starttime="20201115 23:00:41.032" endtime="20201115 23:00:41.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.049" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.048" endtime="20201115 23:00:41.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.052" level="INFO">VALUE: [4.95140000000005e-05, 4.897199999999782e-05, 4.898600000000086e-05, 4.9014e-05, 4.894399999999868e-05, 4.90270000000001e-05, 4.973600000000161e-05, 4.897200000000129e-05, 4.892999999999911e-05, 4.906900000000228e-05, 4.970800000000247e-05, 4.966699999999977e-05, 4.961100000000149e-05, 4.881899999999856e-05, 4.897199999999782e-05, 4.963899999999716e-05, 4.963900000000063e-05, 4.881900000000203e-05, 4.880599999999846e-05, 4.962499999999759e-05, 4.8931000000002056e-05, 4.8958999999997727e-05, 4.938900000000038e-05, 4.966699999999977e-05, 4.959699999999845e-05, 4.8945000000001626e-05, 4.8973000000000766e-05, 4.961200000000096e-05, 4.8972999999997296e-05, 4.909800000000089e-05, 4.972200000000204e-05, 4.970800000000247e-05, 4.959700000000192e-05, 4.905499999999924e-05, 4.911099999999752e-05, 4.894400000000215e-05, 4.972200000000204e-05, 4.891699999999902e-05, 4.883299999999813e-05, 4.884700000000117e-05, 4.973600000000161e-05, 4.972199999999857e-05, 4.954199999999964e-05, 4.893099999999859e-05, 4.886100000000074e-05, 4.879199999999889e-05, 4.88469999999977e-05, 4.912500000000056e-05, 4.906899999999881e-05, 4.886200000000021e-05]</msg>
<status status="PASS" starttime="20201115 23:00:41.050" endtime="20201115 23:00:41.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.046" endtime="20201115 23:00:41.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.055" endtime="20201115 23:00:41.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.058" endtime="20201115 23:00:41.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.057" endtime="20201115 23:00:41.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.053" endtime="20201115 23:00:41.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.688" endtime="20201115 23:00:41.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.686" endtime="20201115 23:00:41.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.685" endtime="20201115 23:00:41.080"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.082" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.090" endtime="20201115 23:00:41.107"></status>
</kw>
<msg timestamp="20201115 23:00:41.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.089" endtime="20201115 23:00:41.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.109" endtime="20201115 23:00:41.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.111" endtime="20201115 23:00:41.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.086" endtime="20201115 23:00:41.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.084" endtime="20201115 23:00:41.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.121" endtime="20201115 23:00:41.408"></status>
</kw>
<msg timestamp="20201115 23:00:41.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024458097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024508083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.119" endtime="20201115 23:00:41.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024458097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024508083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.412" endtime="20201115 23:00:41.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.420" endtime="20201115 23:00:41.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.116" endtime="20201115 23:00:41.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.114" endtime="20201115 23:00:41.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.427" level="INFO">${RESULT} = [{'time': 0.024508083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.998599999999839e-05, 'source_diff': 4.998599999999839e-05}, {'time': 0.024560069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:41.424" endtime="20201115 23:00:41.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.441" level="INFO">${ACCURACY} = {'time': [0.024508083, 0.024560069, 0.024612097, 0.024664097, 0.024716083, 0.024769097, 0.024822111, 0.024874153, 0.024927097, 0.024979125, 0.025031111, 0.025083125, 0.025135125, 0.025187153, 0.025239...</msg>
<status status="PASS" starttime="20201115 23:00:41.428" endtime="20201115 23:00:41.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.445" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.444" endtime="20201115 23:00:41.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.448" level="INFO">VALUE: [4.998599999999839e-05, 5.011100000000199e-05, 4.98469999999987e-05, 4.981899999999956e-05, 4.995799999999925e-05, 5.073599999999914e-05, 5.06530000000012e-05, 5.006999999999928e-05, 5.069400000000043e-05, 5.0014000000001e-05, 5.002800000000057e-05, 5.006899999999981e-05, 4.980600000000293e-05, 4.981999999999903e-05, 5.0014000000001e-05, 5.066700000000077e-05, 4.988900000000088e-05, 4.993000000000011e-05, 4.98330000000026e-05, 5.004200000000014e-05, 5.059800000000239e-05, 5.009800000000189e-05, 5.063899999999816e-05, 5.074999999999871e-05, 4.977800000000032e-05, 5.059800000000239e-05, 5.004200000000014e-05, 4.998599999999839e-05, 5.062500000000206e-05, 4.98200000000025e-05, 5.062499999999859e-05, 5.038899999999791e-05, 4.999999999999796e-05, 5.012499999999809e-05, 5.059699999999945e-05, 4.988900000000088e-05, 4.984700000000217e-05, 4.990200000000097e-05, 5.011099999999852e-05, 5.066600000000129e-05, 4.979100000000042e-05, 5.069499999999991e-05, 4.987499999999784e-05, 4.993000000000011e-05, 4.991700000000002e-05, 4.983299999999913e-05, 4.981899999999956e-05, 5.012499999999809e-05, 5.002800000000057e-05, 4.977800000000032e-05]</msg>
<status status="PASS" starttime="20201115 23:00:41.446" endtime="20201115 23:00:41.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.441" endtime="20201115 23:00:41.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.451" endtime="20201115 23:00:41.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.454" endtime="20201115 23:00:41.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.453" endtime="20201115 23:00:41.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.449" endtime="20201115 23:00:41.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.083" endtime="20201115 23:00:41.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.081" endtime="20201115 23:00:41.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.080" endtime="20201115 23:00:41.475"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.478" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.486" endtime="20201115 23:00:41.503"></status>
</kw>
<msg timestamp="20201115 23:00:41.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.485" endtime="20201115 23:00:41.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.505" endtime="20201115 23:00:41.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.507" endtime="20201115 23:00:41.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.482" endtime="20201115 23:00:41.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.480" endtime="20201115 23:00:41.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.517" endtime="20201115 23:00:41.802"></status>
</kw>
<msg timestamp="20201115 23:00:41.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024490528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024541431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.515" endtime="20201115 23:00:41.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024490528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024541431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.806" endtime="20201115 23:00:41.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.815" endtime="20201115 23:00:41.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.513" endtime="20201115 23:00:41.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.511" endtime="20201115 23:00:41.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.822" level="INFO">${RESULT} = [{'time': 0.024541431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.090299999999798e-05, 'source_diff': 5.090299999999798e-05}, {'time': 0.024595431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:41.818" endtime="20201115 23:00:41.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.836" level="INFO">${ACCURACY} = {'time': [0.024541431, 0.024595431, 0.024648444, 0.024701444, 0.024754444, 0.024807458, 0.024860472, 0.024914458, 0.024967472, 0.025020472, 0.025074486, 0.0251275, 0.025181472, 0.025234486, 0.02528748...</msg>
<status status="PASS" starttime="20201115 23:00:41.823" endtime="20201115 23:00:41.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.841" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.840" endtime="20201115 23:00:41.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.844" level="INFO">VALUE: [5.090299999999798e-05, 5.162499999999959e-05, 5.081899999999709e-05, 5.080500000000099e-05, 5.076299999999881e-05, 5.112500000000256e-05, 5.090300000000145e-05, 5.168000000000186e-05, 5.080500000000099e-05, 5.0929999999997644e-05, 5.165299999999873e-05, 5.106900000000081e-05, 5.158300000000088e-05, 5.109699999999995e-05, 5.097199999999982e-05, 5.097199999999982e-05, 5.166700000000177e-05, 5.098599999999939e-05, 5.086099999999927e-05, 5.090300000000145e-05, 5.099999999999896e-05, 5.173600000000014e-05, 5.082000000000003e-05, 5.163900000000263e-05, 5.090299999999798e-05, 5.077800000000132e-05, 5.170899999999701e-05, 5.099999999999896e-05, 5.166700000000177e-05, 5.158400000000035e-05, 5.1401999999999004e-05, 5.158399999999688e-05, 5.086199999999874e-05, 5.158300000000088e-05, 5.105499999999777e-05, 5.106900000000081e-05, 5.106900000000081e-05, 5.156899999999784e-05, 5.112499999999909e-05, 5.1707999999997534e-05, 5.097199999999982e-05, 5.156900000000131e-05, 5.162499999999959e-05, 5.094400000000068e-05, 5.083300000000013e-05, 5.106900000000081e-05, 5.097199999999982e-05, 5.098599999999939e-05, 5.102800000000157e-05, 5.1693999999997964e-05]</msg>
<status status="PASS" starttime="20201115 23:00:41.842" endtime="20201115 23:00:41.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.837" endtime="20201115 23:00:41.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.847" endtime="20201115 23:00:41.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.850" endtime="20201115 23:00:41.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.849" endtime="20201115 23:00:41.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.845" endtime="20201115 23:00:41.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.479" endtime="20201115 23:00:41.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.477" endtime="20201115 23:00:41.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.476" endtime="20201115 23:00:41.871"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.874" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.883" endtime="20201115 23:00:41.900"></status>
</kw>
<msg timestamp="20201115 23:00:41.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.881" endtime="20201115 23:00:41.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.901" endtime="20201115 23:00:41.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.904" endtime="20201115 23:00:41.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.878" endtime="20201115 23:00:41.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.876" endtime="20201115 23:00:41.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.913" endtime="20201115 23:00:42.199"></status>
</kw>
<msg timestamp="20201115 23:00:42.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024984431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.911" endtime="20201115 23:00:42.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024984431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.203" endtime="20201115 23:00:42.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.212" endtime="20201115 23:00:42.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.909" endtime="20201115 23:00:42.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.907" endtime="20201115 23:00:42.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.219" level="INFO">${RESULT} = [{'time': 0.025037042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.261099999999755e-05, 'source_diff': 5.261099999999755e-05}, {'time': 0.025092056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:42.215" endtime="20201115 23:00:42.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.232" level="INFO">${ACCURACY} = {'time': [0.025037042, 0.025092056, 0.025146111, 0.025200083, 0.025254069, 0.025308083, 0.025362069, 0.025416069, 0.025470083, 0.025524083, 0.025578097, 0.025632139, 0.025686097, 0.025740097, 0.025794...</msg>
<status status="PASS" starttime="20201115 23:00:42.220" endtime="20201115 23:00:42.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.237" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.236" endtime="20201115 23:00:42.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.239" level="INFO">VALUE: [5.261099999999755e-05, 5.261200000000049e-05, 5.211099999999705e-05, 5.204100000000267e-05, 5.201300000000006e-05, 5.184699999999723e-05, 5.209700000000095e-05, 5.187499999999984e-05, 5.176399999999928e-05, 5.211100000000052e-05, 5.206900000000181e-05, 5.204200000000214e-05, 5.202800000000257e-05, 5.208300000000138e-05, 5.201399999999953e-05, 5.277799999999985e-05, 5.181899999999809e-05, 5.186100000000027e-05, 5.199999999999996e-05, 5.204200000000214e-05, 5.268099999999887e-05, 5.261100000000102e-05, 5.174999999999971e-05, 5.183300000000113e-05, 5.209699999999748e-05, 5.208400000000085e-05, 5.190299999999898e-05, 5.176399999999928e-05, 5.26669999999993e-05, 5.211099999999705e-05, 5.193100000000159e-05, 5.201399999999953e-05, 5.176299999999981e-05, 5.186199999999974e-05, 5.265299999999973e-05, 5.186199999999974e-05, 5.179199999999842e-05, 5.208300000000138e-05, 5.281999999999856e-05, 5.2721999999998104e-05, 5.211100000000052e-05, 5.20279999999991e-05, 5.2693999999998964e-05, 5.211100000000052e-05, 5.263900000000016e-05, 5.259700000000145e-05, 5.2665999999999824e-05, 5.204200000000214e-05, 5.212500000000009e-05, 5.263900000000016e-05]</msg>
<status status="PASS" starttime="20201115 23:00:42.238" endtime="20201115 23:00:42.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.233" endtime="20201115 23:00:42.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.242" endtime="20201115 23:00:42.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.246" endtime="20201115 23:00:42.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.244" endtime="20201115 23:00:42.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.241" endtime="20201115 23:00:42.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.874" endtime="20201115 23:00:42.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.873" endtime="20201115 23:00:42.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.872" endtime="20201115 23:00:42.268"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.270" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.278" endtime="20201115 23:00:42.295"></status>
</kw>
<msg timestamp="20201115 23:00:42.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.277" endtime="20201115 23:00:42.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.297" endtime="20201115 23:00:42.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.299" endtime="20201115 23:00:42.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.274" endtime="20201115 23:00:42.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.272" endtime="20201115 23:00:42.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.308" endtime="20201115 23:00:42.596"></status>
</kw>
<msg timestamp="20201115 23:00:42.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024916681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024969819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.307" endtime="20201115 23:00:42.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024916681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024969819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.600" endtime="20201115 23:00:42.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.608" endtime="20201115 23:00:42.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.304" endtime="20201115 23:00:42.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.302" endtime="20201115 23:00:42.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.615" level="INFO">${RESULT} = [{'time': 0.024969819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3138000000001184e-05, 'source_diff': 5.3138000000001184e-05}, {'time': 0.025025819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:42.612" endtime="20201115 23:00:42.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.629" level="INFO">${ACCURACY} = {'time': [0.024969819, 0.025025819, 0.025080847, 0.025135819, 0.025190806, 0.025245819, 0.025301833, 0.025356819, 0.025411833, 0.025466847, 0.025521833, 0.025576833, 0.025632861, 0.025687889, 0.025742...</msg>
<status status="PASS" starttime="20201115 23:00:42.616" endtime="20201115 23:00:42.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.633" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.632" endtime="20201115 23:00:42.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.636" level="INFO">VALUE: [5.3138000000001184e-05, 5.361100000000202e-05, 5.280499999999952e-05, 5.287500000000084e-05, 5.280599999999899e-05, 5.2943999999999214e-05, 5.355500000000027e-05, 5.305499999999977e-05, 5.286100000000127e-05, 5.2929999999999644e-05, 5.2902000000000504e-05, 5.281899999999909e-05, 5.363900000000116e-05, 5.309699999999848e-05, 5.306899999999934e-05, 5.338899999999744e-05, 5.291700000000302e-05, 5.283300000000213e-05, 5.305599999999924e-05, 5.284699999999823e-05, 5.293099999999912e-05, 5.28470000000017e-05, 5.301400000000053e-05, 5.288900000000041e-05, 5.294499999999869e-05, 5.3721999999999104e-05, 5.365300000000073e-05, 5.287500000000084e-05, 5.3735999999998674e-05, 5.30280000000001e-05, 5.363900000000116e-05, 5.354200000000017e-05, 5.306999999999881e-05, 5.358399999999888e-05, 5.368099999999987e-05, 5.359699999999898e-05, 5.358300000000288e-05, 5.297200000000182e-05, 5.287500000000084e-05, 5.358299999999941e-05, 5.2971999999998354e-05, 5.35410000000007e-05, 5.2929999999999644e-05, 5.31669999999998e-05, 5.276400000000028e-05, 5.297200000000182e-05, 5.337500000000134e-05, 5.304199999999967e-05, 5.356899999999984e-05, 5.290299999999998e-05]</msg>
<status status="PASS" starttime="20201115 23:00:42.634" endtime="20201115 23:00:42.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.630" endtime="20201115 23:00:42.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.639" endtime="20201115 23:00:42.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.643" endtime="20201115 23:00:42.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.641" endtime="20201115 23:00:42.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.638" endtime="20201115 23:00:42.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.271" endtime="20201115 23:00:42.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.269" endtime="20201115 23:00:42.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.268" endtime="20201115 23:00:42.664"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.666" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.675" endtime="20201115 23:00:42.691"></status>
</kw>
<msg timestamp="20201115 23:00:42.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.673" endtime="20201115 23:00:42.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.693" endtime="20201115 23:00:42.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.695" endtime="20201115 23:00:42.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.671" endtime="20201115 23:00:42.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.669" endtime="20201115 23:00:42.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.704" endtime="20201115 23:00:42.991"></status>
</kw>
<msg timestamp="20201115 23:00:42.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024403042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024457097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.703" endtime="20201115 23:00:42.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024403042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024457097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.995" endtime="20201115 23:00:43.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.004" endtime="20201115 23:00:43.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.700" endtime="20201115 23:00:43.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.699" endtime="20201115 23:00:43.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.011" level="INFO">${RESULT} = [{'time': 0.024457097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.405500000000077e-05, 'source_diff': 5.405500000000077e-05}, {'time': 0.024513097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:43.007" endtime="20201115 23:00:43.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.024" level="INFO">${ACCURACY} = {'time': [0.024457097, 0.024513097, 0.024569097, 0.024626111, 0.024682097, 0.024739181, 0.024795111, 0.024851125, 0.024907125, 0.024964139, 0.025020194, 0.025076139, 0.025132194, 0.025189139, 0.025245...</msg>
<status status="PASS" starttime="20201115 23:00:43.012" endtime="20201115 23:00:43.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.029" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.028" endtime="20201115 23:00:43.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.032" level="INFO">VALUE: [5.405500000000077e-05, 5.3971999999999354e-05, 5.400000000000196e-05, 5.462499999999912e-05, 5.388900000000141e-05, 5.473699999999915e-05, 5.40280000000011e-05, 5.408300000000338e-05, 5.38609999999988e-05, 5.4708000000000534e-05, 5.381900000000009e-05, 5.401400000000153e-05, 5.4166000000001324e-05, 5.458300000000041e-05, 5.394499999999969e-05, 5.4735999999999674e-05, 5.408399999999938e-05, 5.381999999999956e-05, 5.4735999999999674e-05, 5.383299999999966e-05, 5.375000000000171e-05, 5.412500000000209e-05, 5.376400000000128e-05, 5.411200000000199e-05, 5.4665999999998355e-05, 5.3887999999998465e-05, 5.412499999999862e-05, 5.388899999999794e-05, 5.413900000000166e-05, 5.401400000000153e-05, 5.4694000000000964e-05, 5.40280000000011e-05, 5.4722000000000104e-05, 5.411100000000252e-05, 5.466699999999783e-05, 5.412499999999862e-05, 5.475000000000271e-05, 5.395899999999926e-05, 5.38470000000027e-05, 5.380599999999999e-05, 5.3999999999998494e-05, 5.469500000000044e-05, 5.4666000000001824e-05, 5.390299999999751e-05, 5.377800000000085e-05, 5.459799999999945e-05, 5.38340000000026e-05, 5.412500000000209e-05, 5.388900000000141e-05, 5.380599999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:00:43.030" endtime="20201115 23:00:43.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.025" endtime="20201115 23:00:43.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.035" endtime="20201115 23:00:43.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.038" endtime="20201115 23:00:43.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.037" endtime="20201115 23:00:43.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.033" endtime="20201115 23:00:43.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.667" endtime="20201115 23:00:43.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.665" endtime="20201115 23:00:43.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.664" endtime="20201115 23:00:43.060"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.062" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.070" endtime="20201115 23:00:43.087"></status>
</kw>
<msg timestamp="20201115 23:00:43.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.069" endtime="20201115 23:00:43.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.089" endtime="20201115 23:00:43.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.091" endtime="20201115 23:00:43.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.066" endtime="20201115 23:00:43.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.064" endtime="20201115 23:00:43.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.101" endtime="20201115 23:00:43.387"></status>
</kw>
<msg timestamp="20201115 23:00:43.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024922167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024977583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.099" endtime="20201115 23:00:43.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024922167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024977583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.392" endtime="20201115 23:00:43.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.400" endtime="20201115 23:00:43.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.096" endtime="20201115 23:00:43.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.095" endtime="20201115 23:00:43.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.407" level="INFO">${RESULT} = [{'time': 0.024977583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5416000000002574e-05, 'source_diff': 5.5416000000002574e-05}, {'time': 0.025034583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:43.403" endtime="20201115 23:00:43.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.422" level="INFO">${ACCURACY} = {'time': [0.024977583, 0.025034583, 0.025091583, 0.025148597, 0.025205597, 0.025262597, 0.025319611, 0.025376611, 0.025433611, 0.025490625, 0.025547639, 0.025604625, 0.025661625, 0.025719639, 0.025777...</msg>
<status status="PASS" starttime="20201115 23:00:43.408" endtime="20201115 23:00:43.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.427" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.426" endtime="20201115 23:00:43.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.429" level="INFO">VALUE: [5.5416000000002574e-05, 5.512499999999962e-05, 5.4735999999999674e-05, 5.511100000000005e-05, 5.484700000000023e-05, 5.479100000000195e-05, 5.481899999999762e-05, 5.484700000000023e-05, 5.484699999999676e-05, 5.490299999999851e-05, 5.484700000000023e-05, 5.4957999999997315e-05, 5.481900000000109e-05, 5.562500000000012e-05, 5.557000000000131e-05, 5.4777999999998384e-05, 5.56670000000023e-05, 5.493100000000112e-05, 5.494500000000069e-05, 5.557000000000131e-05, 5.561099999999708e-05, 5.504099999999873e-05, 5.487500000000284e-05, 5.487499999999937e-05, 5.573699999999668e-05, 5.561200000000002e-05, 5.5651999999999785e-05, 5.4985999999999924e-05, 5.477699999999891e-05, 5.484700000000023e-05, 5.488899999999894e-05, 5.50549999999983e-05, 5.559699999999751e-05, 5.5027999999998634e-05, 5.5665999999999355e-05, 5.511100000000005e-05, 5.4944000000001214e-05, 5.4999999999999494e-05, 5.565299999999926e-05, 5.4791999999997953e-05, 5.488900000000241e-05, 5.4735999999999674e-05, 5.513899999999919e-05, 5.491699999999808e-05, 5.5027999999998634e-05, 5.477800000000185e-05, 5.4985999999999924e-05, 5.4972000000000354e-05, 5.5750000000000244e-05, 5.563900000000316e-05]</msg>
<status status="PASS" starttime="20201115 23:00:43.428" endtime="20201115 23:00:43.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.423" endtime="20201115 23:00:43.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.433" endtime="20201115 23:00:43.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.436" endtime="20201115 23:00:43.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.434" endtime="20201115 23:00:43.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.431" endtime="20201115 23:00:43.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.063" endtime="20201115 23:00:43.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.061" endtime="20201115 23:00:43.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.060" endtime="20201115 23:00:43.457"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.459" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.468" endtime="20201115 23:00:43.485"></status>
</kw>
<msg timestamp="20201115 23:00:43.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.466" endtime="20201115 23:00:43.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.486" endtime="20201115 23:00:43.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.489" endtime="20201115 23:00:43.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.464" endtime="20201115 23:00:43.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.461" endtime="20201115 23:00:43.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.498" endtime="20201115 23:00:43.783"></status>
</kw>
<msg timestamp="20201115 23:00:43.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024522778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024579292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.496" endtime="20201115 23:00:43.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024522778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024579292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.787" endtime="20201115 23:00:43.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.796" endtime="20201115 23:00:43.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.494" endtime="20201115 23:00:43.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.492" endtime="20201115 23:00:43.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.803" level="INFO">${RESULT} = [{'time': 0.024579292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6514000000000564e-05, 'source_diff': 5.6514000000000564e-05}, {'time': 0.024637292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:43.799" endtime="20201115 23:00:43.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.816" level="INFO">${ACCURACY} = {'time': [0.024579292, 0.024637292, 0.024695361, 0.024753306, 0.024812306, 0.024870306, 0.024928306, 0.024986306, 0.025045319, 0.025103319, 0.025162375, 0.025221333, 0.025280333, 0.025339361, 0.025398...</msg>
<status status="PASS" starttime="20201115 23:00:43.804" endtime="20201115 23:00:43.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.821" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.820" endtime="20201115 23:00:43.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.823" level="INFO">VALUE: [5.6514000000000564e-05, 5.591700000000255e-05, 5.590299999999951e-05, 5.5763999999999814e-05, 5.659799999999798e-05, 5.58619999999968e-05, 5.595900000000126e-05, 5.597300000000083e-05, 5.6679999999999925e-05, 5.579099999999948e-05, 5.6693999999999495e-05, 5.6693999999999495e-05, 5.6665999999996886e-05, 5.666699999999983e-05, 5.6666000000000355e-05, 5.6014000000000064e-05, 5.6736000000001674e-05, 5.5777999999999384e-05, 5.5972000000001354e-05, 5.581900000000209e-05, 5.593099999999865e-05, 5.594500000000169e-05, 5.5944000000002214e-05, 5.662499999999765e-05, 5.662500000000112e-05, 5.587500000000037e-05, 5.662499999999765e-05, 5.6541999999999704e-05, 5.5915999999999605e-05, 5.590299999999951e-05, 5.588899999999994e-05, 5.581999999999809e-05, 5.587500000000037e-05, 5.6569999999998843e-05, 5.659800000000145e-05, 5.6041999999999204e-05, 5.5750000000000244e-05, 5.579099999999948e-05, 5.5943999999998745e-05, 5.608299999999844e-05, 5.5930000000002644e-05, 5.662500000000112e-05, 5.6708000000002534e-05, 5.662500000000112e-05, 5.611100000000105e-05, 5.66670000000033e-05, 5.6693999999999495e-05, 5.6041999999999204e-05, 5.661099999999808e-05, 5.659700000000198e-05]</msg>
<status status="PASS" starttime="20201115 23:00:43.822" endtime="20201115 23:00:43.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.817" endtime="20201115 23:00:43.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.826" endtime="20201115 23:00:43.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.830" endtime="20201115 23:00:43.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.828" endtime="20201115 23:00:43.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.825" endtime="20201115 23:00:43.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.460" endtime="20201115 23:00:43.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.458" endtime="20201115 23:00:43.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.457" endtime="20201115 23:00:43.851"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.853" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.862" endtime="20201115 23:00:43.879"></status>
</kw>
<msg timestamp="20201115 23:00:43.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.860" endtime="20201115 23:00:43.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.880" endtime="20201115 23:00:43.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.883" endtime="20201115 23:00:43.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.857" endtime="20201115 23:00:43.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.855" endtime="20201115 23:00:43.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.892" endtime="20201115 23:00:44.179"></status>
</kw>
<msg timestamp="20201115 23:00:44.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024284167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024341097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.890" endtime="20201115 23:00:44.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024284167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024341097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.183" endtime="20201115 23:00:44.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.192" endtime="20201115 23:00:44.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.888" endtime="20201115 23:00:44.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.886" endtime="20201115 23:00:44.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.199" level="INFO">${RESULT} = [{'time': 0.024341097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6930000000000175e-05, 'source_diff': 5.6930000000000175e-05}, {'time': 0.024401097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:44.196" endtime="20201115 23:00:44.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.213" level="INFO">${ACCURACY} = {'time': [0.024341097, 0.024401097, 0.024460125, 0.024519125, 0.024578111, 0.024637125, 0.024697125, 0.024756139, 0.024816139, 0.024875153, 0.024935139, 0.024995208, 0.025054153, 0.025113153, 0.025173...</msg>
<status status="PASS" starttime="20201115 23:00:44.200" endtime="20201115 23:00:44.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.218" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.217" endtime="20201115 23:00:44.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.220" level="INFO">VALUE: [5.6930000000000175e-05, 5.763900000000169e-05, 5.6957999999999315e-05, 5.684699999999876e-05, 5.6957999999999315e-05, 5.690300000000051e-05, 5.7528000000001134e-05, 5.684699999999876e-05, 5.7750000000002244e-05, 5.6778000000000384e-05, 5.761099999999908e-05, 5.7750000000002244e-05, 5.695899999999879e-05, 5.683399999999866e-05, 5.772299999999911e-05, 5.681899999999962e-05, 5.761100000000255e-05, 5.697300000000183e-05, 5.761200000000202e-05, 5.679100000000048e-05, 5.711200000000152e-05, 5.7707999999996595e-05, 5.686099999999833e-05, 5.6999999999998024e-05, 5.686099999999833e-05, 5.762499999999865e-05, 5.758299999999994e-05, 5.7721999999999635e-05, 5.7042000000000204e-05, 5.688900000000094e-05, 5.706899999999987e-05, 5.688900000000094e-05, 5.6972000000002354e-05, 5.6819999999999093e-05, 5.7014000000001064e-05, 5.701299999999812e-05, 5.7014000000001064e-05, 5.7166000000000855e-05, 5.7014000000001064e-05, 5.7083999999998913e-05, 5.6750000000001244e-05, 5.7735999999999205e-05, 5.691700000000008e-05, 5.695900000000226e-05, 5.766700000000083e-05, 5.763899999999822e-05, 5.6999999999998024e-05, 5.6971999999998885e-05, 5.7013999999997594e-05, 5.683299999999919e-05]</msg>
<status status="PASS" starttime="20201115 23:00:44.219" endtime="20201115 23:00:44.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.214" endtime="20201115 23:00:44.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.224" endtime="20201115 23:00:44.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.227" endtime="20201115 23:00:44.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.225" endtime="20201115 23:00:44.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.222" endtime="20201115 23:00:44.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.854" endtime="20201115 23:00:44.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.852" endtime="20201115 23:00:44.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.851" endtime="20201115 23:00:44.248"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.251" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.259" endtime="20201115 23:00:44.276"></status>
</kw>
<msg timestamp="20201115 23:00:44.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.257" endtime="20201115 23:00:44.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.278" endtime="20201115 23:00:44.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.281" endtime="20201115 23:00:44.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.255" endtime="20201115 23:00:44.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.253" endtime="20201115 23:00:44.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.290" endtime="20201115 23:00:44.576"></status>
</kw>
<msg timestamp="20201115 23:00:44.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024620903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.288" endtime="20201115 23:00:44.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024620903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.580" endtime="20201115 23:00:44.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.589" endtime="20201115 23:00:44.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.286" endtime="20201115 23:00:44.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.284" endtime="20201115 23:00:44.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.596" level="INFO">${RESULT} = [{'time': 0.024620903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.868099999999793e-05, 'source_diff': 5.868099999999793e-05}, {'time': 0.024681903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:44.592" endtime="20201115 23:00:44.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.609" level="INFO">${ACCURACY} = {'time': [0.024620903, 0.024681903, 0.024741903, 0.024801903, 0.024861903, 0.024921931, 0.024981917, 0.025042917, 0.025102944, 0.025163931, 0.025223931, 0.025283944, 0.025343986, 0.025404944, 0.025464...</msg>
<status status="PASS" starttime="20201115 23:00:44.597" endtime="20201115 23:00:44.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.614" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.613" endtime="20201115 23:00:44.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.616" level="INFO">VALUE: [5.868099999999793e-05, 5.8750000000003244e-05, 5.793100000000065e-05, 5.811099999999958e-05, 5.812500000000262e-05, 5.8056000000000774e-05, 5.790299999999804e-05, 5.866700000000183e-05, 5.777699999999844e-05, 5.8749999999999775e-05, 5.7764000000001814e-05, 5.7971999999999885e-05, 5.7971999999999885e-05, 5.859699999999704e-05, 5.784699999999976e-05, 5.859700000000051e-05, 5.779099999999801e-05, 5.7999999999999025e-05, 5.7944000000000745e-05, 5.7971999999999885e-05, 5.8679999999998456e-05, 5.8041999999997734e-05, 5.7778000000001384e-05, 5.865299999999879e-05, 5.784699999999976e-05, 5.7763999999998344e-05, 5.7749999999998775e-05, 5.78749999999989e-05, 5.862500000000312e-05, 5.7749999999998775e-05, 5.7901999999998566e-05, 5.8056000000000774e-05, 5.8041999999997734e-05, 5.870900000000054e-05, 5.865299999999879e-05, 5.784799999999923e-05, 5.7944000000000745e-05, 5.8749999999999775e-05, 5.8070000000000344e-05, 5.783300000000019e-05, 5.78749999999989e-05, 5.858300000000094e-05, 5.7930000000001175e-05, 5.83749999999994e-05, 5.7985999999999455e-05, 5.7944000000000745e-05, 5.855499999999833e-05, 5.865299999999879e-05, 5.813899999999872e-05, 5.781900000000062e-05]</msg>
<status status="PASS" starttime="20201115 23:00:44.615" endtime="20201115 23:00:44.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.610" endtime="20201115 23:00:44.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.619" endtime="20201115 23:00:44.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.623" endtime="20201115 23:00:44.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.621" endtime="20201115 23:00:44.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.618" endtime="20201115 23:00:44.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.251" endtime="20201115 23:00:44.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.250" endtime="20201115 23:00:44.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.249" endtime="20201115 23:00:44.644"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.647" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.655" endtime="20201115 23:00:44.672"></status>
</kw>
<msg timestamp="20201115 23:00:44.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.654" endtime="20201115 23:00:44.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.674" endtime="20201115 23:00:44.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.676" endtime="20201115 23:00:44.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.651" endtime="20201115 23:00:44.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.649" endtime="20201115 23:00:44.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.686" endtime="20201115 23:00:44.973"></status>
</kw>
<msg timestamp="20201115 23:00:44.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025217528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025277167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.684" endtime="20201115 23:00:44.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025217528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025277167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.977" endtime="20201115 23:00:44.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.985" endtime="20201115 23:00:44.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.681" endtime="20201115 23:00:44.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.680" endtime="20201115 23:00:44.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.992" level="INFO">${RESULT} = [{'time': 0.025277167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.963900000000022e-05, 'source_diff': 5.963900000000022e-05}, {'time': 0.025339167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:44.989" endtime="20201115 23:00:44.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.007" level="INFO">${ACCURACY} = {'time': [0.025277167, 0.025339167, 0.025400194, 0.025461222, 0.025523194, 0.025584194, 0.025646208, 0.025707194, 0.025769208, 0.025830208, 0.025891222, 0.025952222, 0.026013222, 0.026074236, 0.026135...</msg>
<status status="PASS" starttime="20201115 23:00:44.993" endtime="20201115 23:00:45.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.012" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.011" endtime="20201115 23:00:45.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.014" level="INFO">VALUE: [5.963900000000022e-05, 5.9500000000000525e-05, 5.881900000000162e-05, 5.9013999999999595e-05, 5.9721999999998165e-05, 5.902699999999969e-05, 5.9693999999999026e-05, 5.8929999999998706e-05, 5.9721999999998165e-05, 5.911100000000058e-05, 5.9000000000000025e-05, 5.8972000000000885e-05, 5.888899999999947e-05, 5.890299999999904e-05, 5.886100000000033e-05, 5.955499999999933e-05, 5.9056000000001774e-05, 5.886100000000033e-05, 5.912500000000015e-05, 5.8763999999999345e-05, 5.8915999999999136e-05, 5.976300000000087e-05, 5.9750000000000775e-05, 5.8848000000000233e-05, 5.9013999999999595e-05, 5.9721999999998165e-05, 5.8792000000001954e-05, 5.9735999999997735e-05, 5.8805999999998054e-05, 5.890299999999904e-05, 5.9041999999998734e-05, 5.9055999999998304e-05, 5.881900000000162e-05, 5.909699999999754e-05, 5.8915999999999136e-05, 5.963900000000022e-05, 5.961099999999761e-05, 5.886100000000033e-05, 5.884700000000076e-05, 5.909700000000101e-05, 5.93750000000004e-05, 5.970900000000154e-05, 5.9693999999999026e-05, 5.9764000000000345e-05, 5.9070000000001344e-05, 5.968099999999893e-05, 5.8805999999998054e-05, 5.884700000000076e-05, 5.8805999999998054e-05, 5.8806000000001524e-05]</msg>
<status status="PASS" starttime="20201115 23:00:45.013" endtime="20201115 23:00:45.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.008" endtime="20201115 23:00:45.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.018" endtime="20201115 23:00:45.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.026" endtime="20201115 23:00:45.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.020" endtime="20201115 23:00:45.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.016" endtime="20201115 23:00:45.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.647" endtime="20201115 23:00:45.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.645" endtime="20201115 23:00:45.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.645" endtime="20201115 23:00:45.047"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.050" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.058" endtime="20201115 23:00:45.074"></status>
</kw>
<msg timestamp="20201115 23:00:45.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.056" endtime="20201115 23:00:45.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.076" endtime="20201115 23:00:45.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.078" endtime="20201115 23:00:45.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.054" endtime="20201115 23:00:45.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.052" endtime="20201115 23:00:45.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.087" endtime="20201115 23:00:45.373"></status>
</kw>
<msg timestamp="20201115 23:00:45.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024347444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024408042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.086" endtime="20201115 23:00:45.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024347444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024408042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.377" endtime="20201115 23:00:45.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.386" endtime="20201115 23:00:45.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.083" endtime="20201115 23:00:45.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.082" endtime="20201115 23:00:45.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.392" level="INFO">${RESULT} = [{'time': 0.024408042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0598000000001984e-05, 'source_diff': 6.0598000000001984e-05}, {'time': 0.024471083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:45.389" endtime="20201115 23:00:45.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.406" level="INFO">${ACCURACY} = {'time': [0.024408042, 0.024471083, 0.024534083, 0.024596056, 0.024658056, 0.024721056, 0.024784111, 0.024847069, 0.024910083, 0.024973083, 0.025036083, 0.025099083, 0.025161111, 0.025223097, 0.025285...</msg>
<status status="PASS" starttime="20201115 23:00:45.393" endtime="20201115 23:00:45.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.410" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.409" endtime="20201115 23:00:45.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.413" level="INFO">VALUE: [6.0598000000001984e-05, 6.061100000000208e-05, 6.0764000000001345e-05, 5.988900000000047e-05, 6.0041999999999734e-05, 6.062500000000165e-05, 6.0750000000001775e-05, 6.0721999999999166e-05, 6.059699999999904e-05, 6.0680000000000456e-05, 6.0736000000002205e-05, 6.0722000000002635e-05, 5.988900000000047e-05, 6.011100000000158e-05, 5.979100000000001e-05, 5.9805999999999054e-05, 6.058299999999947e-05, 6.006900000000287e-05, 5.995900000000179e-05, 6.068099999999993e-05, 5.98750000000009e-05, 5.9986000000001455e-05, 6.06949999999995e-05, 5.9986000000001455e-05, 6.0014000000000595e-05, 6.0069999999998874e-05, 6.0583999999998944e-05, 6.0749999999998305e-05, 6.072299999999864e-05, 6.0792000000000485e-05, 5.990300000000004e-05, 6.0584000000002414e-05, 6.0555999999999804e-05, 5.984699999999829e-05, 6.011100000000158e-05, 6.030500000000008e-05, 6.0652000000001316e-05, 5.986100000000133e-05, 6.063900000000122e-05, 5.9929999999999706e-05, 6.061099999999861e-05, 5.9957999999998846e-05, 6.0707999999999596e-05, 6.065300000000079e-05, 5.988900000000047e-05, 6.0055999999999304e-05, 6.0013999999997125e-05, 5.983300000000219e-05, 6.065300000000079e-05, 6.0000000000001025e-05]</msg>
<status status="PASS" starttime="20201115 23:00:45.412" endtime="20201115 23:00:45.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.407" endtime="20201115 23:00:45.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.417" endtime="20201115 23:00:45.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.420" endtime="20201115 23:00:45.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.419" endtime="20201115 23:00:45.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.415" endtime="20201115 23:00:45.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.050" endtime="20201115 23:00:45.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.048" endtime="20201115 23:00:45.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.048" endtime="20201115 23:00:45.441"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.444" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.452" endtime="20201115 23:00:45.469"></status>
</kw>
<msg timestamp="20201115 23:00:45.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.450" endtime="20201115 23:00:45.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.471" endtime="20201115 23:00:45.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.473" endtime="20201115 23:00:45.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.448" endtime="20201115 23:00:45.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.446" endtime="20201115 23:00:45.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.483" endtime="20201115 23:00:45.769"></status>
</kw>
<msg timestamp="20201115 23:00:45.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024457903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02451925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:45.481" endtime="20201115 23:00:45.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024457903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02451925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:45.773" endtime="20201115 23:00:45.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.781" endtime="20201115 23:00:45.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.478" endtime="20201115 23:00:45.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.477" endtime="20201115 23:00:45.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.788" level="INFO">${RESULT} = [{'time': 0.02451925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.134699999999979e-05, 'source_diff': 6.134699999999979e-05}, {'time': 0.024583236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:45.785" endtime="20201115 23:00:45.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.802" level="INFO">${ACCURACY} = {'time': [0.02451925, 0.024583236, 0.024646236, 0.02470925, 0.02477225, 0.024835264, 0.024898278, 0.024961278, 0.025024306, 0.025087278, 0.025150292, 0.025213278, 0.025276306, 0.025339292, 0.025402333...</msg>
<status status="PASS" starttime="20201115 23:00:45.789" endtime="20201115 23:00:45.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.806" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.805" endtime="20201115 23:00:45.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.809" level="INFO">VALUE: [6.134699999999979e-05, 6.173599999999974e-05, 6.106899999999693e-05, 6.093100000000018e-05, 6.0985999999998985e-05, 6.0985999999998985e-05, 6.109699999999954e-05, 6.0819999999999624e-05, 6.0999999999998555e-05, 6.0806000000000054e-05, 6.091700000000061e-05, 6.111099999999911e-05, 6.098699999999846e-05, 6.0763999999997875e-05, 6.0957999999999846e-05, 6.16950000000005e-05, 6.0848000000002234e-05, 6.079099999999754e-05, 6.105500000000083e-05, 6.162499999999918e-05, 6.155499999999786e-05, 6.093100000000018e-05, 6.10690000000004e-05, 6.0764000000001345e-05, 6.15690000000009e-05, 6.15690000000009e-05, 6.0778000000000915e-05, 6.086099999999886e-05, 6.0985999999998985e-05, 6.0930000000000706e-05, 6.165299999999832e-05, 6.091700000000061e-05, 6.0749999999998305e-05, 6.113899999999825e-05, 6.0985999999998985e-05, 6.108399999999944e-05, 6.10560000000003e-05, 6.0971999999999416e-05, 6.0888999999998e-05, 6.104200000000073e-05, 6.177699999999897e-05, 6.0792000000000485e-05, 6.10560000000003e-05, 6.17499999999993e-05, 6.112499999999868e-05, 6.083299999999972e-05, 6.166599999999842e-05, 6.088900000000147e-05, 6.172200000000017e-05, 6.08750000000019e-05]</msg>
<status status="PASS" starttime="20201115 23:00:45.807" endtime="20201115 23:00:45.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.803" endtime="20201115 23:00:45.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.813" endtime="20201115 23:00:45.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.816" endtime="20201115 23:00:45.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.814" endtime="20201115 23:00:45.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.811" endtime="20201115 23:00:45.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.444" endtime="20201115 23:00:45.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.442" endtime="20201115 23:00:45.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.442" endtime="20201115 23:00:45.837"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.840" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.848" endtime="20201115 23:00:45.865"></status>
</kw>
<msg timestamp="20201115 23:00:45.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.846" endtime="20201115 23:00:45.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.866" endtime="20201115 23:00:45.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.869" endtime="20201115 23:00:45.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.844" endtime="20201115 23:00:45.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.842" endtime="20201115 23:00:45.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.878" endtime="20201115 23:00:46.164"></status>
</kw>
<msg timestamp="20201115 23:00:46.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024337139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024399861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.877" endtime="20201115 23:00:46.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024337139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024399861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.168" endtime="20201115 23:00:46.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.176" endtime="20201115 23:00:46.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.874" endtime="20201115 23:00:46.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.872" endtime="20201115 23:00:46.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.183" level="INFO">${RESULT} = [{'time': 0.024399861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.27219999999977e-05, 'source_diff': 6.27219999999977e-05}, {'time': 0.024464847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:46.180" endtime="20201115 23:00:46.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.197" level="INFO">${ACCURACY} = {'time': [0.024399861, 0.024464847, 0.024528903, 0.024592847, 0.024656875, 0.024721903, 0.024785861, 0.024849889, 0.024913903, 0.024978875, 0.025042889, 0.025107903, 0.025172889, 0.025236903, 0.025301...</msg>
<status status="PASS" starttime="20201115 23:00:46.185" endtime="20201115 23:00:46.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.202" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.201" endtime="20201115 23:00:46.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.204" level="INFO">VALUE: [6.27219999999977e-05, 6.268000000000246e-05, 6.195900000000032e-05, 6.20690000000014e-05, 6.194400000000128e-05, 6.259700000000104e-05, 6.237499999999993e-05, 6.209700000000054e-05, 6.187499999999943e-05, 6.268100000000193e-05, 6.212499999999968e-05, 6.263899999999975e-05, 6.258300000000147e-05, 6.209700000000054e-05, 6.261100000000061e-05, 6.184800000000323e-05, 6.277799999999945e-05, 6.193099999999771e-05, 6.182000000000062e-05, 6.27219999999977e-05, 6.198699999999946e-05, 6.1888999999999e-05, 6.262500000000018e-05, 6.19019999999991e-05, 6.190299999999857e-05, 6.206899999999793e-05, 6.269400000000203e-05, 6.262500000000018e-05, 6.269399999999856e-05, 6.27080000000016e-05, 6.27089999999976e-05, 6.180499999999811e-05, 6.273600000000074e-05, 6.190299999999857e-05, 6.195800000000085e-05, 6.263899999999975e-05, 6.23889999999995e-05, 6.177799999999845e-05, 6.266699999999889e-05, 6.259700000000104e-05, 6.263899999999975e-05, 6.212499999999968e-05, 6.188799999999953e-05, 6.197299999999989e-05, 6.265299999999932e-05, 6.193100000000118e-05, 6.27500000000003e-05, 6.265300000000279e-05, 6.269399999999856e-05, 6.270799999999813e-05]</msg>
<status status="PASS" starttime="20201115 23:00:46.203" endtime="20201115 23:00:46.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.198" endtime="20201115 23:00:46.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.207" endtime="20201115 23:00:46.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.211" endtime="20201115 23:00:46.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.209" endtime="20201115 23:00:46.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.206" endtime="20201115 23:00:46.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.840" endtime="20201115 23:00:46.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.838" endtime="20201115 23:00:46.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.838" endtime="20201115 23:00:46.232"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.235" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.244" endtime="20201115 23:00:46.261"></status>
</kw>
<msg timestamp="20201115 23:00:46.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.242" endtime="20201115 23:00:46.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.262" endtime="20201115 23:00:46.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.265" endtime="20201115 23:00:46.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.240" endtime="20201115 23:00:46.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.237" endtime="20201115 23:00:46.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.274" endtime="20201115 23:00:46.561"></status>
</kw>
<msg timestamp="20201115 23:00:46.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025777972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025841653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.272" endtime="20201115 23:00:46.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025777972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025841653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.565" endtime="20201115 23:00:46.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.574" endtime="20201115 23:00:46.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.270" endtime="20201115 23:00:46.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.268" endtime="20201115 23:00:46.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.581" level="INFO">${RESULT} = [{'time': 0.025841653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.368099999999946e-05, 'source_diff': 6.368099999999946e-05}, {'time': 0.025906639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:46.577" endtime="20201115 23:00:46.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.596" level="INFO">${ACCURACY} = {'time': [0.025841653, 0.025906639, 0.025972694, 0.026037667, 0.026102667, 0.026167667, 0.026232667, 0.02629775, 0.026363708, 0.026429694, 0.026494681, 0.026559681, 0.026624694, 0.026690708, 0.0267556...</msg>
<status status="PASS" starttime="20201115 23:00:46.582" endtime="20201115 23:00:46.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.600" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.599" endtime="20201115 23:00:46.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.603" level="INFO">VALUE: [6.368099999999946e-05, 6.280599999999859e-05, 6.373600000000174e-05, 6.30279999999997e-05, 6.28340000000012e-05, 6.299999999999709e-05, 6.273600000000074e-05, 6.304200000000273e-05, 6.365200000000085e-05, 6.37630000000014e-05, 6.291699999999914e-05, 6.284800000000076e-05, 6.305499999999936e-05, 6.3582999999999e-05, 6.295799999999838e-05, 6.363900000000075e-05, 6.312499999999721e-05, 6.370799999999913e-05, 6.312500000000068e-05, 6.300000000000056e-05, 6.283299999999825e-05, 6.283300000000172e-05, 6.372200000000217e-05, 6.301400000000013e-05, 6.281999999999816e-05, 6.290300000000304e-05, 6.282000000000162e-05, 6.361100000000161e-05, 6.299999999999709e-05, 6.37089999999986e-05, 6.37089999999986e-05, 6.355599999999934e-05, 6.30560000000023e-05, 6.359800000000151e-05, 6.370900000000207e-05, 6.297300000000089e-05, 6.305599999999884e-05, 6.290299999999957e-05, 6.372200000000217e-05, 6.287500000000043e-05, 6.37080000000026e-05, 6.362500000000118e-05, 6.291599999999967e-05, 6.35280000000002e-05, 6.311099999999764e-05, 6.277799999999945e-05, 6.277799999999945e-05, 6.284699999999782e-05, 6.35280000000002e-05, 6.2889e-05]</msg>
<status status="PASS" starttime="20201115 23:00:46.601" endtime="20201115 23:00:46.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.597" endtime="20201115 23:00:46.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.606" endtime="20201115 23:00:46.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.610" endtime="20201115 23:00:46.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.608" endtime="20201115 23:00:46.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.604" endtime="20201115 23:00:46.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.236" endtime="20201115 23:00:46.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.234" endtime="20201115 23:00:46.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.233" endtime="20201115 23:00:46.631"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.633" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.641" endtime="20201115 23:00:46.658"></status>
</kw>
<msg timestamp="20201115 23:00:46.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.640" endtime="20201115 23:00:46.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.660" endtime="20201115 23:00:46.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.662" endtime="20201115 23:00:46.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.637" endtime="20201115 23:00:46.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.635" endtime="20201115 23:00:46.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.672" endtime="20201115 23:00:46.958"></status>
</kw>
<msg timestamp="20201115 23:00:46.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024310181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024374069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.670" endtime="20201115 23:00:46.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024310181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024374069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.962" endtime="20201115 23:00:46.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.970" endtime="20201115 23:00:46.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.667" endtime="20201115 23:00:46.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.666" endtime="20201115 23:00:46.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.977" level="INFO">${RESULT} = [{'time': 0.024374069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.388800000000153e-05, 'source_diff': 6.388800000000153e-05}, {'time': 0.024440069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:46.974" endtime="20201115 23:00:46.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.991" level="INFO">${ACCURACY} = {'time': [0.024374069, 0.024440069, 0.024506083, 0.024573083, 0.024639111, 0.024705097, 0.024772097, 0.024838097, 0.024904111, 0.024970111, 0.025037125, 0.025103153, 0.025170125, 0.025236222, 0.025302...</msg>
<status status="PASS" starttime="20201115 23:00:46.978" endtime="20201115 23:00:46.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.995" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.994" endtime="20201115 23:00:46.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.998" level="INFO">VALUE: [6.388800000000153e-05, 6.374999999999784e-05, 6.387500000000143e-05, 6.467999999999752e-05, 6.398600000000199e-05, 6.387499999999796e-05, 6.473599999999927e-05, 6.406899999999993e-05, 6.379200000000002e-05, 6.390300000000057e-05, 6.461099999999914e-05, 6.387499999999796e-05, 6.473600000000274e-05, 6.420799999999963e-05, 6.391700000000014e-05, 6.47219999999997e-05, 6.407000000000287e-05, 6.454200000000077e-05, 6.438899999999803e-05, 6.394499999999928e-05, 6.45699999999999e-05, 6.405599999999984e-05, 6.395799999999938e-05, 6.386200000000133e-05, 6.466700000000089e-05, 6.4583e-05, 6.461099999999914e-05, 6.391600000000067e-05, 6.455500000000086e-05, 6.411100000000211e-05, 6.409700000000254e-05, 6.466700000000089e-05, 6.383299999999925e-05, 6.467999999999752e-05, 6.462499999999871e-05, 6.381899999999968e-05, 6.468100000000046e-05, 6.397199999999895e-05, 6.381899999999968e-05, 6.413900000000125e-05, 6.472299999999917e-05, 6.404200000000027e-05, 6.466699999999742e-05, 6.401399999999766e-05, 6.377800000000045e-05, 6.390300000000057e-05, 6.47089999999996e-05, 6.381999999999916e-05, 6.462500000000218e-05, 6.462499999999871e-05]</msg>
<status status="PASS" starttime="20201115 23:00:46.996" endtime="20201115 23:00:46.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.991" endtime="20201115 23:00:46.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.001" endtime="20201115 23:00:47.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.004" endtime="20201115 23:00:47.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.003" endtime="20201115 23:00:47.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.999" endtime="20201115 23:00:47.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.634" endtime="20201115 23:00:47.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.632" endtime="20201115 23:00:47.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.631" endtime="20201115 23:00:47.025"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.028" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.036" endtime="20201115 23:00:47.054"></status>
</kw>
<msg timestamp="20201115 23:00:47.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.035" endtime="20201115 23:00:47.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.056" endtime="20201115 23:00:47.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.059" endtime="20201115 23:00:47.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.032" endtime="20201115 23:00:47.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.030" endtime="20201115 23:00:47.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.068" endtime="20201115 23:00:47.354"></status>
</kw>
<msg timestamp="20201115 23:00:47.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024616792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024681944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.066" endtime="20201115 23:00:47.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024616792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024681944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.358" endtime="20201115 23:00:47.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.366" endtime="20201115 23:00:47.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.064" endtime="20201115 23:00:47.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.062" endtime="20201115 23:00:47.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.373" level="INFO">${RESULT} = [{'time': 0.024681944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.515200000000235e-05, 'source_diff': 6.515200000000235e-05}, {'time': 0.024748958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:47.370" endtime="20201115 23:00:47.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.387" level="INFO">${ACCURACY} = {'time': [0.024681944, 0.024748958, 0.024815972, 0.024882972, 0.024949958, 0.025016972, 0.025083986, 0.025152014, 0.025219, 0.025286, 0.025353014, 0.02542, 0.025487, 0.025555014, 0.025622014, 0.025689...</msg>
<status status="PASS" starttime="20201115 23:00:47.374" endtime="20201115 23:00:47.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.391" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.390" endtime="20201115 23:00:47.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.394" level="INFO">VALUE: [6.515200000000235e-05, 6.495800000000038e-05, 6.492999999999777e-05, 6.495800000000038e-05, 6.500000000000256e-05, 6.506899999999746e-05, 6.505499999999789e-05, 6.562499999999971e-05, 6.50419999999978e-05, 6.49440000000008e-05, 6.486099999999939e-05, 6.49440000000008e-05, 6.50419999999978e-05, 6.55700000000009e-05, 6.477799999999798e-05, 6.50830000000005e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.569500000000103e-05, 6.509799999999955e-05, 6.491700000000114e-05, 6.497299999999942e-05, 6.555600000000134e-05, 6.5583000000001e-05, 6.504100000000179e-05, 6.497199999999995e-05, 6.502699999999875e-05, 6.561100000000014e-05, 6.552799999999873e-05, 6.55969999999971e-05, 6.487499999999896e-05, 6.50830000000005e-05, 6.567999999999852e-05, 6.495800000000038e-05, 6.49440000000008e-05, 6.511100000000311e-05, 6.509700000000007e-05, 6.566700000000189e-05, 6.491700000000114e-05, 6.498599999999952e-05, 6.561100000000014e-05, 6.483399999999973e-05, 6.558400000000048e-05, 6.477800000000145e-05, 6.494500000000028e-05, 6.555600000000134e-05, 6.500000000000256e-05, 6.479199999999755e-05, 6.50700000000004e-05, 6.562499999999971e-05]</msg>
<status status="PASS" starttime="20201115 23:00:47.392" endtime="20201115 23:00:47.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.388" endtime="20201115 23:00:47.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.397" endtime="20201115 23:00:47.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.400" endtime="20201115 23:00:47.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.399" endtime="20201115 23:00:47.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.395" endtime="20201115 23:00:47.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.029" endtime="20201115 23:00:47.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.027" endtime="20201115 23:00:47.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.026" endtime="20201115 23:00:47.422"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.424" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.433" endtime="20201115 23:00:47.450"></status>
</kw>
<msg timestamp="20201115 23:00:47.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.431" endtime="20201115 23:00:47.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.452" endtime="20201115 23:00:47.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.454" endtime="20201115 23:00:47.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.428" endtime="20201115 23:00:47.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.426" endtime="20201115 23:00:47.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.463" endtime="20201115 23:00:47.750"></status>
</kw>
<msg timestamp="20201115 23:00:47.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024937167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025003528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.462" endtime="20201115 23:00:47.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024937167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025003528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.754" endtime="20201115 23:00:47.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.763" endtime="20201115 23:00:47.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.459" endtime="20201115 23:00:47.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.457" endtime="20201115 23:00:47.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.769" level="INFO">${RESULT} = [{'time': 0.025003528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.636100000000089e-05, 'source_diff': 6.636100000000089e-05}, {'time': 0.025072597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:47.766" endtime="20201115 23:00:47.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.783" level="INFO">${ACCURACY} = {'time': [0.025003528, 0.025072597, 0.025141542, 0.025210542, 0.025279542, 0.025347556, 0.025415556, 0.025483556, 0.025551569, 0.025620569, 0.025688583, 0.025756611, 0.025824597, 0.025892597, 0.025961...</msg>
<status status="PASS" starttime="20201115 23:00:47.770" endtime="20201115 23:00:47.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.787" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.786" endtime="20201115 23:00:47.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.790" level="INFO">VALUE: [6.636100000000089e-05, 6.677799999999998e-05, 6.668099999999899e-05, 6.67359999999978e-05, 6.663900000000028e-05, 6.57639999999994e-05, 6.609800000000055e-05, 6.601399999999966e-05, 6.57769999999995e-05, 6.65969999999981e-05, 6.590199999999963e-05, 6.580499999999864e-05, 6.605500000000236e-05, 6.584700000000082e-05, 6.666699999999942e-05, 6.65969999999981e-05, 6.605500000000236e-05, 6.583299999999778e-05, 6.656899999999896e-05, 6.673600000000127e-05, 6.663900000000028e-05, 6.65419999999993e-05, 6.581999999999769e-05, 6.601399999999966e-05, 6.608400000000098e-05, 6.612500000000021e-05, 6.59029999999991e-05, 6.611100000000064e-05, 6.668100000000246e-05, 6.580599999999812e-05, 6.640200000000013e-05, 6.6583000000002e-05, 6.57639999999994e-05, 6.636099999999742e-05, 6.666599999999995e-05, 6.613899999999978e-05, 6.609700000000107e-05, 6.598600000000052e-05, 6.667999999999952e-05, 6.59440000000018e-05, 6.67640000000004e-05, 6.670800000000213e-05, 6.591699999999867e-05, 6.586100000000039e-05, 6.594399999999834e-05, 6.665299999999985e-05, 6.613899999999978e-05, 6.583299999999778e-05, 6.672199999999823e-05, 6.658400000000148e-05]</msg>
<status status="PASS" starttime="20201115 23:00:47.789" endtime="20201115 23:00:47.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.784" endtime="20201115 23:00:47.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.793" endtime="20201115 23:00:47.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.797" endtime="20201115 23:00:47.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.795" endtime="20201115 23:00:47.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.792" endtime="20201115 23:00:47.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.424" endtime="20201115 23:00:47.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.423" endtime="20201115 23:00:47.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.422" endtime="20201115 23:00:47.818"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.821" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.829" endtime="20201115 23:00:47.846"></status>
</kw>
<msg timestamp="20201115 23:00:47.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.827" endtime="20201115 23:00:47.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.848" endtime="20201115 23:00:47.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.850" endtime="20201115 23:00:47.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.825" endtime="20201115 23:00:47.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.823" endtime="20201115 23:00:47.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.859" endtime="20201115 23:00:48.146"></status>
</kw>
<msg timestamp="20201115 23:00:48.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024935722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.858" endtime="20201115 23:00:48.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024935722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.151" endtime="20201115 23:00:48.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.159" endtime="20201115 23:00:48.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.855" endtime="20201115 23:00:48.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.853" endtime="20201115 23:00:48.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.166" level="INFO">${RESULT} = [{'time': 0.025002972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.724999999999787e-05, 'source_diff': 6.724999999999787e-05}, {'time': 0.025073, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:48.163" endtime="20201115 23:00:48.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.224" level="INFO">${ACCURACY} = {'time': [0.025002972, 0.025073, 0.025142972, 0.025211972, 0.025280986, 0.025349986, 0.025419986, 0.02549, 0.025559, 0.025628, 0.025697014, 0.025766028, 0.025836028, 0.025906028, 0.025976056, 0.026045...</msg>
<status status="PASS" starttime="20201115 23:00:48.167" endtime="20201115 23:00:48.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.229" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.228" endtime="20201115 23:00:48.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.231" level="INFO">VALUE: [6.724999999999787e-05, 6.762500000000171e-05, 6.766600000000095e-05, 6.686099999999792e-05, 6.688899999999706e-05, 6.737500000000146e-05, 6.765299999999738e-05, 6.768099999999999e-05, 6.676399999999694e-05, 6.693100000000271e-05, 6.67640000000004e-05, 6.686100000000139e-05, 6.761100000000214e-05, 6.762500000000171e-05, 6.761200000000162e-05, 6.697300000000142e-05, 6.711099999999817e-05, 6.711100000000164e-05, 6.761099999999867e-05, 6.688800000000106e-05, 6.773600000000227e-05, 6.690200000000063e-05, 6.697199999999848e-05, 6.777799999999751e-05, 6.775000000000184e-05, 6.755500000000039e-05, 6.688900000000053e-05, 6.773600000000227e-05, 6.7583000000003e-05, 6.700000000000109e-05, 6.681899999999921e-05, 6.708299999999903e-05, 6.776399999999794e-05, 6.762500000000171e-05, 6.70419999999998e-05, 6.683299999999878e-05, 6.699999999999762e-05, 6.772199999999923e-05, 6.67359999999978e-05, 6.699999999999762e-05, 6.756999999999944e-05, 6.676399999999694e-05, 6.677799999999998e-05, 6.70700000000024e-05, 6.761100000000214e-05, 6.711100000000164e-05, 6.679100000000007e-05, 6.708299999999903e-05, 6.772199999999923e-05, 6.694399999999934e-05]</msg>
<status status="PASS" starttime="20201115 23:00:48.230" endtime="20201115 23:00:48.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.225" endtime="20201115 23:00:48.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.235" endtime="20201115 23:00:48.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.238" endtime="20201115 23:00:48.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.237" endtime="20201115 23:00:48.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.233" endtime="20201115 23:00:48.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.821" endtime="20201115 23:00:48.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.819" endtime="20201115 23:00:48.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.819" endtime="20201115 23:00:48.260"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.262" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.272" endtime="20201115 23:00:48.290"></status>
</kw>
<msg timestamp="20201115 23:00:48.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.270" endtime="20201115 23:00:48.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.291" endtime="20201115 23:00:48.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.294" endtime="20201115 23:00:48.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.267" endtime="20201115 23:00:48.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.265" endtime="20201115 23:00:48.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.303" endtime="20201115 23:00:48.589"></status>
</kw>
<msg timestamp="20201115 23:00:48.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026539833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026608194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.302" endtime="20201115 23:00:48.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026539833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026608194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.593" endtime="20201115 23:00:48.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.601" endtime="20201115 23:00:48.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.299" endtime="20201115 23:00:48.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.297" endtime="20201115 23:00:48.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.608" level="INFO">${RESULT} = [{'time': 0.026608194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.836100000000289e-05, 'source_diff': 6.836100000000289e-05}, {'time': 0.026679222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:48.605" endtime="20201115 23:00:48.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.622" level="INFO">${ACCURACY} = {'time': [0.026608194, 0.026679222, 0.026750222, 0.026821208, 0.026891222, 0.026961222, 0.027032222, 0.02710325, 0.02717325, 0.02724325, 0.027314264, 0.02738425, 0.027455264, 0.027526264, 0.027596278,...</msg>
<status status="PASS" starttime="20201115 23:00:48.609" endtime="20201115 23:00:48.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.626" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.625" endtime="20201115 23:00:48.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.629" level="INFO">VALUE: [6.836100000000289e-05, 6.856899999999749e-05, 6.870800000000066e-05, 6.869399999999762e-05, 6.774999999999837e-05, 6.779100000000107e-05, 6.870800000000066e-05, 6.869399999999762e-05, 6.80969999999996e-05, 6.77640000000014e-05, 6.869500000000056e-05, 6.797199999999948e-05, 6.855600000000087e-05, 6.865300000000185e-05, 6.787499999999849e-05, 6.805600000000037e-05, 6.802799999999776e-05, 6.806999999999994e-05, 6.805600000000037e-05, 6.80839999999995e-05, 6.779200000000055e-05, 6.80839999999995e-05, 6.801399999999819e-05, 6.783299999999978e-05, 6.802700000000175e-05, 6.780500000000064e-05, 6.801400000000166e-05, 6.783299999999978e-05, 6.808300000000003e-05, 6.794400000000034e-05, 6.870800000000066e-05, 6.861099999999967e-05, 6.85970000000001e-05, 6.806900000000046e-05, 6.77640000000014e-05, 6.779200000000055e-05, 6.797200000000295e-05, 6.813900000000178e-05, 6.784699999999935e-05, 6.797199999999948e-05, 6.788899999999806e-05, 6.85559999999974e-05, 6.813800000000231e-05, 6.804199999999733e-05, 6.85970000000001e-05, 6.801400000000166e-05, 6.801400000000166e-05, 6.854099999999835e-05, 6.79160000000012e-05, 6.805500000000089e-05]</msg>
<status status="PASS" starttime="20201115 23:00:48.627" endtime="20201115 23:00:48.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.623" endtime="20201115 23:00:48.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.632" endtime="20201115 23:00:48.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.636" endtime="20201115 23:00:48.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.634" endtime="20201115 23:00:48.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.631" endtime="20201115 23:00:48.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.263" endtime="20201115 23:00:48.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.261" endtime="20201115 23:00:48.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.260" endtime="20201115 23:00:48.657"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.659" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.669" endtime="20201115 23:00:48.686"></status>
</kw>
<msg timestamp="20201115 23:00:48.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.667" endtime="20201115 23:00:48.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.688" endtime="20201115 23:00:48.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.691" endtime="20201115 23:00:48.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.664" endtime="20201115 23:00:48.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.661" endtime="20201115 23:00:48.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.700" endtime="20201115 23:00:48.985"></status>
</kw>
<msg timestamp="20201115 23:00:48.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025317208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025386889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.698" endtime="20201115 23:00:48.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025317208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025386889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.989" endtime="20201115 23:00:48.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.998" endtime="20201115 23:00:48.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.695" endtime="20201115 23:00:49.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.694" endtime="20201115 23:00:49.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.004" level="INFO">${RESULT} = [{'time': 0.025386889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.968099999999852e-05, 'source_diff': 6.968099999999852e-05}, {'time': 0.025458889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:49.001" endtime="20201115 23:00:49.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.018" level="INFO">${ACCURACY} = {'time': [0.025386889, 0.025458889, 0.025530903, 0.025601889, 0.025672931, 0.025744917, 0.025815917, 0.025886917, 0.025957931, 0.026028931, 0.026099944, 0.026172, 0.026242958, 0.026313944, 0.026384986...</msg>
<status status="PASS" starttime="20201115 23:00:49.006" endtime="20201115 23:00:49.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.023" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.022" endtime="20201115 23:00:49.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.025" level="INFO">VALUE: [6.968099999999852e-05, 6.970799999999819e-05, 6.963899999999981e-05, 6.897200000000048e-05, 6.915299999999888e-05, 6.952799999999926e-05, 6.883400000000026e-05, 6.880599999999765e-05, 6.876399999999894e-05, 6.898700000000299e-05, 6.902699999999928e-05, 6.976399999999994e-05, 6.895800000000091e-05, 6.898600000000005e-05, 6.89169999999982e-05, 6.887500000000296e-05, 6.897200000000048e-05, 6.97360000000008e-05, 6.913899999999931e-05, 6.884700000000035e-05, 6.969499999999809e-05, 6.877799999999851e-05, 6.893099999999777e-05, 6.952800000000273e-05, 6.90970000000006e-05, 6.899999999999962e-05, 6.898600000000005e-05, 6.97499999999969e-05, 6.90840000000005e-05, 6.913899999999931e-05, 6.891700000000167e-05, 6.880600000000112e-05, 6.962500000000024e-05, 6.961100000000067e-05, 6.969399999999862e-05, 6.881900000000121e-05, 6.906900000000146e-05, 6.956900000000196e-05, 6.887499999999949e-05, 6.877799999999851e-05, 6.884700000000035e-05, 6.972199999999776e-05, 6.880500000000164e-05, 6.905499999999842e-05, 6.933300000000128e-05, 6.961100000000067e-05, 6.94030000000026e-05, 6.877799999999851e-05, 6.970799999999819e-05, 6.90970000000006e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.024" endtime="20201115 23:00:49.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.019" endtime="20201115 23:00:49.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.029" endtime="20201115 23:00:49.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.032" endtime="20201115 23:00:49.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.031" endtime="20201115 23:00:49.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.027" endtime="20201115 23:00:49.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.660" endtime="20201115 23:00:49.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.658" endtime="20201115 23:00:49.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.657" endtime="20201115 23:00:49.053"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.056" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.065" endtime="20201115 23:00:49.083"></status>
</kw>
<msg timestamp="20201115 23:00:49.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.063" endtime="20201115 23:00:49.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.084" endtime="20201115 23:00:49.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.087" endtime="20201115 23:00:49.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.060" endtime="20201115 23:00:49.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.058" endtime="20201115 23:00:49.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.096" endtime="20201115 23:00:49.381"></status>
</kw>
<msg timestamp="20201115 23:00:49.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025545264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025615875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.094" endtime="20201115 23:00:49.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025545264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025615875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.386" endtime="20201115 23:00:49.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.394" endtime="20201115 23:00:49.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.092" endtime="20201115 23:00:49.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.090" endtime="20201115 23:00:49.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.401" level="INFO">${RESULT} = [{'time': 0.025615875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.06109999999982e-05, 'source_diff': 7.06109999999982e-05}, {'time': 0.025687819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:49.398" endtime="20201115 23:00:49.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.415" level="INFO">${ACCURACY} = {'time': [0.025615875, 0.025687819, 0.025759819, 0.025832847, 0.025905833, 0.025977833, 0.026049861, 0.026121847, 0.026193861, 0.026266861, 0.026338861, 0.026411917, 0.026484875, 0.026556903, 0.026628...</msg>
<status status="PASS" starttime="20201115 23:00:49.402" endtime="20201115 23:00:49.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.419" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.418" endtime="20201115 23:00:49.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.422" level="INFO">VALUE: [7.06109999999982e-05, 7.00970000000016e-05, 6.976300000000046e-05, 7.070799999999919e-05, 7.065200000000091e-05, 7.005499999999942e-05, 6.99169999999992e-05, 7.00970000000016e-05, 6.994399999999887e-05, 7.05689999999995e-05, 6.986100000000092e-05, 7.058399999999854e-05, 7.055600000000287e-05, 7.011100000000117e-05, 7.001400000000019e-05, 6.990299999999963e-05, 7.012500000000074e-05, 6.987500000000049e-05, 7.037499999999752e-05, 6.993100000000224e-05, 7.00559999999989e-05, 7.069499999999909e-05, 6.990299999999963e-05, 6.999999999999715e-05, 7.072199999999876e-05, 7.013900000000031e-05, 7.006899999999899e-05, 6.988900000000006e-05, 7.011100000000117e-05, 6.997200000000148e-05, 6.983299999999831e-05, 6.994400000000234e-05, 7.000000000000062e-05, 7.037500000000099e-05, 7.059699999999863e-05, 7.062500000000124e-05, 7.062499999999777e-05, 7.05559999999994e-05, 6.998599999999758e-05, 6.99169999999992e-05, 7.070900000000213e-05, 7.008299999999856e-05, 7.065200000000091e-05, 6.997299999999748e-05, 6.981999999999822e-05, 7.068000000000005e-05, 7.070900000000213e-05, 6.997200000000148e-05, 7.066600000000048e-05, 7.005499999999942e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.421" endtime="20201115 23:00:49.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.416" endtime="20201115 23:00:49.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.425" endtime="20201115 23:00:49.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.429" endtime="20201115 23:00:49.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.427" endtime="20201115 23:00:49.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.423" endtime="20201115 23:00:49.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.056" endtime="20201115 23:00:49.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.054" endtime="20201115 23:00:49.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.054" endtime="20201115 23:00:49.450"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.452" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.461" endtime="20201115 23:00:49.478"></status>
</kw>
<msg timestamp="20201115 23:00:49.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.459" endtime="20201115 23:00:49.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.480" endtime="20201115 23:00:49.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.482" endtime="20201115 23:00:49.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.456" endtime="20201115 23:00:49.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.454" endtime="20201115 23:00:49.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.492" endtime="20201115 23:00:49.778"></status>
</kw>
<msg timestamp="20201115 23:00:49.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025216556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025287542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.490" endtime="20201115 23:00:49.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025216556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025287542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.782" endtime="20201115 23:00:49.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.791" endtime="20201115 23:00:49.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.488" endtime="20201115 23:00:49.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.486" endtime="20201115 23:00:49.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.798" level="INFO">${RESULT} = [{'time': 0.025287542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.098599999999858e-05, 'source_diff': 7.098599999999858e-05}, {'time': 0.025360556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:49.794" endtime="20201115 23:00:49.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.812" level="INFO">${ACCURACY} = {'time': [0.025287542, 0.025360556, 0.025433597, 0.025506569, 0.025579556, 0.025653556, 0.025726569, 0.025800583, 0.025874597, 0.025947583, 0.026020583, 0.026093597, 0.026167597, 0.026241597, 0.026314...</msg>
<status status="PASS" starttime="20201115 23:00:49.799" endtime="20201115 23:00:49.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.817" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.816" endtime="20201115 23:00:49.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.819" level="INFO">VALUE: [7.098599999999858e-05, 7.098699999999805e-05, 7.113899999999784e-05, 7.090200000000116e-05, 7.108399999999904e-05, 7.163900000000181e-05, 7.095800000000291e-05, 7.158300000000006e-05, 7.169400000000062e-05, 7.098599999999858e-05, 7.097199999999901e-05, 7.099999999999815e-05, 7.173599999999933e-05, 7.170799999999672e-05, 7.09300000000003e-05, 7.168100000000052e-05, 7.15560000000004e-05, 7.102800000000076e-05, 7.084699999999888e-05, 7.15560000000004e-05, 7.076400000000094e-05, 7.112500000000174e-05, 7.113900000000131e-05, 7.172199999999976e-05, 7.098600000000205e-05, 7.086099999999845e-05, 7.115300000000088e-05, 7.173599999999933e-05, 7.07910000000006e-05, 7.165200000000191e-05, 7.098600000000205e-05, 7.105500000000042e-05, 7.166599999999801e-05, 7.087499999999802e-05, 7.166699999999748e-05, 7.109699999999913e-05, 7.09170000000002e-05, 7.159699999999963e-05, 7.098600000000205e-05, 7.169400000000062e-05, 7.163899999999834e-05, 7.1069e-05, 7.156999999999997e-05, 7.11109999999987e-05, 7.156999999999997e-05, 7.134699999999938e-05, 7.159699999999963e-05, 7.158399999999954e-05, 7.168000000000105e-05, 7.168100000000052e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.818" endtime="20201115 23:00:49.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.813" endtime="20201115 23:00:49.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.823" endtime="20201115 23:00:49.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.826" endtime="20201115 23:00:49.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.824" endtime="20201115 23:00:49.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.821" endtime="20201115 23:00:49.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.453" endtime="20201115 23:00:49.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.451" endtime="20201115 23:00:49.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.450" endtime="20201115 23:00:49.847"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.850" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.858" endtime="20201115 23:00:49.876"></status>
</kw>
<msg timestamp="20201115 23:00:49.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.856" endtime="20201115 23:00:49.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.878" endtime="20201115 23:00:49.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.881" endtime="20201115 23:00:49.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.854" endtime="20201115 23:00:49.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.852" endtime="20201115 23:00:49.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.890" endtime="20201115 23:00:50.176"></status>
</kw>
<msg timestamp="20201115 23:00:50.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025555583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025627417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.889" endtime="20201115 23:00:50.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025555583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025627417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.180" endtime="20201115 23:00:50.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.189" endtime="20201115 23:00:50.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.886" endtime="20201115 23:00:50.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.884" endtime="20201115 23:00:50.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.195" level="INFO">${RESULT} = [{'time': 0.025627417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.183399999999979e-05, 'source_diff': 7.183399999999979e-05}, {'time': 0.025702417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:50.192" endtime="20201115 23:00:50.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.209" level="INFO">${ACCURACY} = {'time': [0.025627417, 0.025702417, 0.025776417, 0.025850417, 0.025924417, 0.025999431, 0.026073431, 0.026147431, 0.026221458, 0.026296444, 0.026370472, 0.026444458, 0.026518472, 0.026592472, 0.026666...</msg>
<status status="PASS" starttime="20201115 23:00:50.196" endtime="20201115 23:00:50.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.213" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.212" endtime="20201115 23:00:50.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.216" level="INFO">VALUE: [7.183399999999979e-05, 7.273600000000033e-05, 7.207000000000047e-05, 7.202800000000176e-05, 7.200000000000262e-05, 7.257000000000097e-05, 7.212500000000274e-05, 7.197299999999948e-05, 7.204099999999838e-05, 7.25829999999976e-05, 7.205499999999795e-05, 7.186099999999945e-05, 7.194400000000087e-05, 7.176399999999847e-05, 7.183300000000031e-05, 7.26110000000002e-05, 7.270800000000119e-05, 7.184699999999988e-05, 7.268099999999805e-05, 7.255599999999793e-05, 7.213899999999884e-05, 7.213899999999884e-05, 7.202800000000176e-05, 7.273600000000033e-05, 7.186099999999945e-05, 7.17499999999989e-05, 7.177799999999804e-05, 7.258400000000054e-05, 7.191699999999773e-05, 7.268000000000205e-05, 7.270799999999772e-05, 7.181900000000074e-05, 7.191600000000173e-05, 7.21109999999997e-05, 7.255500000000192e-05, 7.265299999999891e-05, 7.175000000000237e-05, 7.256899999999802e-05, 7.204200000000133e-05, 7.197200000000001e-05, 7.243100000000127e-05, 7.188899999999859e-05, 7.272199999999729e-05, 7.184699999999988e-05, 7.27499999999999e-05, 7.273600000000033e-05, 7.209799999999961e-05, 7.263799999999987e-05, 7.198699999999905e-05, 7.186100000000292e-05]</msg>
<status status="PASS" starttime="20201115 23:00:50.214" endtime="20201115 23:00:50.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.210" endtime="20201115 23:00:50.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.219" endtime="20201115 23:00:50.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.223" endtime="20201115 23:00:50.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.221" endtime="20201115 23:00:50.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.217" endtime="20201115 23:00:50.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.850" endtime="20201115 23:00:50.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.848" endtime="20201115 23:00:50.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.848" endtime="20201115 23:00:50.244"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.246" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.259" endtime="20201115 23:00:50.276"></status>
</kw>
<msg timestamp="20201115 23:00:50.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.257" endtime="20201115 23:00:50.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.278" endtime="20201115 23:00:50.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.280" endtime="20201115 23:00:50.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.250" endtime="20201115 23:00:50.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.248" endtime="20201115 23:00:50.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.290" endtime="20201115 23:00:50.576"></status>
</kw>
<msg timestamp="20201115 23:00:50.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028445944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028519639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.289" endtime="20201115 23:00:50.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028445944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028519639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.581" endtime="20201115 23:00:50.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.589" endtime="20201115 23:00:50.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.285" endtime="20201115 23:00:50.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.284" endtime="20201115 23:00:50.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.596" level="INFO">${RESULT} = [{'time': 0.028519639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.369499999999862e-05, 'source_diff': 7.369499999999862e-05}, {'time': 0.028594639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:50.593" endtime="20201115 23:00:50.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.609" level="INFO">${ACCURACY} = {'time': [0.028519639, 0.028594639, 0.028669667, 0.028744653, 0.028820667, 0.028896667, 0.028971667, 0.029046681, 0.029121681, 0.029196681, 0.029271694, 0.029347694, 0.029423722, 0.029498722, 0.029574...</msg>
<status status="PASS" starttime="20201115 23:00:50.597" endtime="20201115 23:00:50.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.614" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.613" endtime="20201115 23:00:50.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.616" level="INFO">VALUE: [7.369499999999862e-05, 7.300000000000015e-05, 7.284800000000036e-05, 7.279199999999861e-05, 7.363900000000034e-05, 7.35560000000024e-05, 7.288899999999959e-05, 7.293100000000177e-05, 7.276399999999947e-05, 7.311200000000018e-05, 7.286100000000045e-05, 7.355499999999945e-05, 7.367999999999958e-05, 7.31110000000007e-05, 7.355500000000292e-05, 7.281899999999827e-05, 7.359699999999816e-05, 7.295800000000144e-05, 7.365299999999991e-05, 7.27499999999999e-05, 7.372199999999829e-05, 7.308300000000156e-05, 7.287500000000002e-05, 7.300000000000015e-05, 7.283300000000131e-05, 7.309700000000113e-05, 7.309800000000061e-05, 7.309799999999714e-05, 7.317999999999908e-05, 7.304199999999886e-05, 7.304100000000285e-05, 7.291699999999873e-05, 7.308300000000156e-05, 7.291599999999926e-05, 7.27499999999999e-05, 7.370799999999872e-05, 7.359699999999816e-05, 7.361099999999773e-05, 7.308300000000156e-05, 7.302800000000276e-05, 7.276400000000294e-05, 7.305500000000242e-05, 7.297199999999754e-05, 7.337500000000052e-05, 7.37910000000036e-05, 7.295799999999797e-05, 7.372199999999829e-05, 7.291699999999873e-05, 7.3763999999997e-05, 7.354199999999589e-05]</msg>
<status status="PASS" starttime="20201115 23:00:50.615" endtime="20201115 23:00:50.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.610" endtime="20201115 23:00:50.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.620" endtime="20201115 23:00:50.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.623" endtime="20201115 23:00:50.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.622" endtime="20201115 23:00:50.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.618" endtime="20201115 23:00:50.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.247" endtime="20201115 23:00:50.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.245" endtime="20201115 23:00:50.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.244" endtime="20201115 23:00:50.645"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.647" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.656" endtime="20201115 23:00:50.674"></status>
</kw>
<msg timestamp="20201115 23:00:50.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.654" endtime="20201115 23:00:50.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.675" endtime="20201115 23:00:50.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.678" endtime="20201115 23:00:50.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.651" endtime="20201115 23:00:50.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.649" endtime="20201115 23:00:50.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.687" endtime="20201115 23:00:50.972"></status>
</kw>
<msg timestamp="20201115 23:00:50.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025557403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025631375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.686" endtime="20201115 23:00:50.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025557403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025631375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.976" endtime="20201115 23:00:50.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.985" endtime="20201115 23:00:50.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.683" endtime="20201115 23:00:50.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.681" endtime="20201115 23:00:50.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.992" level="INFO">${RESULT} = [{'time': 0.025631375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.397200000000201e-05, 'source_diff': 7.397200000000201e-05}, {'time': 0.025707375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:50.988" endtime="20201115 23:00:50.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.005" level="INFO">${ACCURACY} = {'time': [0.025631375, 0.025707375, 0.025784375, 0.025860375, 0.025937389, 0.026014403, 0.026091403, 0.026167403, 0.026243403, 0.026320431, 0.026397431, 0.026474431, 0.026551444, 0.026627431, 0.026703...</msg>
<status status="PASS" starttime="20201115 23:00:50.993" endtime="20201115 23:00:51.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.010" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.009" endtime="20201115 23:00:51.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.012" level="INFO">VALUE: [7.397200000000201e-05, 7.41110000000017e-05, 7.469399999999668e-05, 7.377800000000004e-05, 7.47500000000019e-05, 7.463899999999787e-05, 7.472199999999929e-05, 7.401399999999725e-05, 7.409699999999866e-05, 7.459799999999864e-05, 7.469499999999962e-05, 7.463900000000134e-05, 7.456900000000002e-05, 7.397300000000148e-05, 7.387500000000102e-05, 7.406899999999952e-05, 7.41110000000017e-05, 7.409700000000213e-05, 7.391600000000026e-05, 7.472199999999929e-05, 7.412500000000127e-05, 7.398600000000158e-05, 7.390300000000016e-05, 7.394499999999887e-05, 7.40829999999991e-05, 7.479099999999766e-05, 7.398599999999811e-05, 7.402800000000029e-05, 7.386099999999798e-05, 7.39309999999993e-05, 7.41110000000017e-05, 7.41110000000017e-05, 7.465300000000091e-05, 7.412500000000127e-05, 7.47370000000018e-05, 7.406899999999952e-05, 7.402700000000081e-05, 7.406899999999952e-05, 7.46249999999983e-05, 7.40829999999991e-05, 7.395799999999897e-05, 7.372199999999829e-05, 7.379200000000308e-05, 7.398600000000158e-05, 7.411099999999823e-05, 7.39439999999994e-05, 7.404199999999986e-05, 7.390300000000016e-05, 7.411099999999823e-05, 7.473599999999886e-05]</msg>
<status status="PASS" starttime="20201115 23:00:51.011" endtime="20201115 23:00:51.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.006" endtime="20201115 23:00:51.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.016" endtime="20201115 23:00:51.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.020" endtime="20201115 23:00:51.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.018" endtime="20201115 23:00:51.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.014" endtime="20201115 23:00:51.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.648" endtime="20201115 23:00:51.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.646" endtime="20201115 23:00:51.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.645" endtime="20201115 23:00:51.041"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.043" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.052" endtime="20201115 23:00:51.069"></status>
</kw>
<msg timestamp="20201115 23:00:51.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.050" endtime="20201115 23:00:51.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.071" endtime="20201115 23:00:51.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.074" endtime="20201115 23:00:51.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.047" endtime="20201115 23:00:51.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.045" endtime="20201115 23:00:51.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.083" endtime="20201115 23:00:51.369"></status>
</kw>
<msg timestamp="20201115 23:00:51.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025252458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025327736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.081" endtime="20201115 23:00:51.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025252458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025327736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.373" endtime="20201115 23:00:51.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.382" endtime="20201115 23:00:51.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.079" endtime="20201115 23:00:51.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.077" endtime="20201115 23:00:51.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.388" level="INFO">${RESULT} = [{'time': 0.025327736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527800000000154e-05, 'source_diff': 7.527800000000154e-05}, {'time': 0.025404764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:51.385" endtime="20201115 23:00:51.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.403" level="INFO">${ACCURACY} = {'time': [0.025327736, 0.025404764, 0.02548175, 0.025558764, 0.025635764, 0.025713764, 0.025790778, 0.025867778, 0.025944778, 0.026021806, 0.026098792, 0.026175819, 0.026252819, 0.026329806, 0.0264068...</msg>
<status status="PASS" starttime="20201115 23:00:51.390" endtime="20201115 23:00:51.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.408" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.407" endtime="20201115 23:00:51.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.411" level="INFO">VALUE: [7.527800000000154e-05, 7.507e-05, 7.502800000000129e-05, 7.500000000000215e-05, 7.483299999999984e-05, 7.563899999999887e-05, 7.538899999999862e-05, 7.49310000000003e-05, 7.487500000000202e-05, 7.491700000000073e-05, 7.497299999999901e-05, 7.498599999999911e-05, 7.488799999999865e-05, 7.509799999999914e-05, 7.497200000000301e-05, 7.570800000000072e-05, 7.488900000000159e-05, 7.504199999999739e-05, 7.559700000000016e-05, 7.566599999999854e-05, 7.536099999999948e-05, 7.55830000000006e-05, 7.483399999999932e-05, 7.579199999999814e-05, 7.559700000000016e-05, 7.4763999999998e-05, 7.505600000000043e-05, 7.495799999999997e-05, 7.507e-05, 7.56249999999993e-05, 7.565299999999844e-05, 7.494499999999987e-05, 7.563899999999887e-05, 7.491700000000073e-05, 7.488899999999812e-05, 7.481999999999975e-05, 7.500000000000215e-05, 7.509699999999966e-05, 7.502800000000129e-05, 7.486099999999898e-05, 7.487499999999855e-05, 7.490300000000116e-05, 7.477800000000104e-05, 7.483299999999984e-05, 7.57500000000029e-05, 7.476400000000147e-05, 7.573599999999986e-05, 7.497200000000301e-05, 7.483299999999984e-05, 7.501399999999825e-05]</msg>
<status status="PASS" starttime="20201115 23:00:51.409" endtime="20201115 23:00:51.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.404" endtime="20201115 23:00:51.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.414" endtime="20201115 23:00:51.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.417" endtime="20201115 23:00:51.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.416" endtime="20201115 23:00:51.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.412" endtime="20201115 23:00:51.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.044" endtime="20201115 23:00:51.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.042" endtime="20201115 23:00:51.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.041" endtime="20201115 23:00:51.439"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.441" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.449" endtime="20201115 23:00:51.468"></status>
</kw>
<msg timestamp="20201115 23:00:51.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.448" endtime="20201115 23:00:51.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.469" endtime="20201115 23:00:51.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.472" endtime="20201115 23:00:51.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.445" endtime="20201115 23:00:51.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.443" endtime="20201115 23:00:51.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.481" endtime="20201115 23:00:51.768"></status>
</kw>
<msg timestamp="20201115 23:00:51.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025392417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025468736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.480" endtime="20201115 23:00:51.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025392417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025468736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.772" endtime="20201115 23:00:51.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.780" endtime="20201115 23:00:51.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.477" endtime="20201115 23:00:51.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.475" endtime="20201115 23:00:51.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.787" level="INFO">${RESULT} = [{'time': 0.025468736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.63189999999983e-05, 'source_diff': 7.63189999999983e-05}, {'time': 0.025546806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:51.784" endtime="20201115 23:00:51.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.801" level="INFO">${ACCURACY} = {'time': [0.025468736, 0.025546806, 0.025624736, 0.02570375, 0.025781736, 0.02585975, 0.02593775, 0.026016764, 0.026094778, 0.026173792, 0.026251778, 0.026329792, 0.026408806, 0.026486792, 0.026564819...</msg>
<status status="PASS" starttime="20201115 23:00:51.789" endtime="20201115 23:00:51.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.806" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.805" endtime="20201115 23:00:51.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.808" level="INFO">VALUE: [7.63189999999983e-05, 7.599999999999968e-05, 7.594399999999793e-05, 7.656900000000202e-05, 7.591699999999826e-05, 7.609700000000066e-05, 7.583299999999737e-05, 7.66250000000003e-05, 7.605599999999796e-05, 7.661100000000073e-05, 7.61249999999998e-05, 7.590300000000216e-05, 7.668099999999858e-05, 7.591699999999826e-05, 7.605499999999848e-05, 7.609700000000066e-05, 7.597300000000001e-05, 7.663899999999987e-05, 7.583300000000084e-05, 7.665199999999997e-05, 7.601399999999925e-05, 7.677800000000304e-05, 7.595800000000097e-05, 7.675000000000043e-05, 7.588899999999912e-05, 7.670800000000172e-05, 7.611100000000023e-05, 7.586099999999998e-05, 7.655599999999846e-05, 7.61249999999998e-05, 7.609700000000066e-05, 7.608400000000057e-05, 7.591699999999826e-05, 7.609800000000014e-05, 7.604099999999892e-05, 7.654200000000236e-05, 7.673700000000033e-05, 7.586200000000293e-05, 7.675000000000043e-05, 7.588899999999912e-05, 7.611100000000023e-05, 7.670799999999825e-05, 7.591600000000226e-05, 7.672200000000129e-05, 7.665299999999944e-05, 7.59029999999987e-05, 7.661100000000073e-05, 7.611100000000023e-05, 7.668099999999858e-05, 7.663899999999987e-05]</msg>
<status status="PASS" starttime="20201115 23:00:51.807" endtime="20201115 23:00:51.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.802" endtime="20201115 23:00:51.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.811" endtime="20201115 23:00:51.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.815" endtime="20201115 23:00:51.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.813" endtime="20201115 23:00:51.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.810" endtime="20201115 23:00:51.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.442" endtime="20201115 23:00:51.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.440" endtime="20201115 23:00:51.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.439" endtime="20201115 23:00:51.836"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.838" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.847" endtime="20201115 23:00:51.864"></status>
</kw>
<msg timestamp="20201115 23:00:51.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.845" endtime="20201115 23:00:51.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.865" endtime="20201115 23:00:51.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.868" endtime="20201115 23:00:51.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.843" endtime="20201115 23:00:51.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.840" endtime="20201115 23:00:51.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.877" endtime="20201115 23:00:52.162"></status>
</kw>
<msg timestamp="20201115 23:00:52.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024513972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024590944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.875" endtime="20201115 23:00:52.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024513972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024590944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.167" endtime="20201115 23:00:52.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.175" endtime="20201115 23:00:52.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.873" endtime="20201115 23:00:52.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.871" endtime="20201115 23:00:52.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.182" level="INFO">${RESULT} = [{'time': 0.024590944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.697200000000154e-05, 'source_diff': 7.697200000000154e-05}, {'time': 0.024669944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:52.179" endtime="20201115 23:00:52.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.196" level="INFO">${ACCURACY} = {'time': [0.024590944, 0.024669944, 0.024748958, 0.024828, 0.024906986, 0.024986972, 0.025065986, 0.025145986, 0.025224986, 0.025304028, 0.025383014, 0.025463014, 0.025543014, 0.025622028, 0.025701028...</msg>
<status status="PASS" starttime="20201115 23:00:52.183" endtime="20201115 23:00:52.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.200" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.199" endtime="20201115 23:00:52.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.203" level="INFO">VALUE: [7.697200000000154e-05, 7.687500000000055e-05, 7.713900000000037e-05, 7.704199999999939e-05, 7.706899999999905e-05, 7.755499999999999e-05, 7.70969999999982e-05, 7.754199999999989e-05, 7.705500000000295e-05, 7.686099999999751e-05, 7.708299999999862e-05, 7.761099999999826e-05, 7.755599999999946e-05, 7.686100000000098e-05, 7.683400000000132e-05, 7.765200000000097e-05, 7.704199999999939e-05, 7.697299999999754e-05, 7.680600000000218e-05, 7.691699999999926e-05, 7.756999999999903e-05, 7.694399999999893e-05, 7.772199999999882e-05, 7.754100000000042e-05, 7.737499999999758e-05, 7.755499999999999e-05, 7.713900000000037e-05, 7.704099999999992e-05, 7.683299999999837e-05, 7.765300000000044e-05, 7.690300000000316e-05, 7.6764e-05, 7.768099999999958e-05, 7.69449999999984e-05, 7.675000000000043e-05, 7.694500000000187e-05, 7.75839999999986e-05, 7.704199999999939e-05, 7.679099999999967e-05, 7.699999999999721e-05, 7.761199999999774e-05, 7.761099999999826e-05, 7.70969999999982e-05, 7.75969999999987e-05, 7.7764000000001e-05, 7.677799999999957e-05, 7.761100000000173e-05, 7.768000000000011e-05, 7.677799999999957e-05, 7.768100000000305e-05]</msg>
<status status="PASS" starttime="20201115 23:00:52.201" endtime="20201115 23:00:52.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.197" endtime="20201115 23:00:52.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.206" endtime="20201115 23:00:52.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.209" endtime="20201115 23:00:52.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.208" endtime="20201115 23:00:52.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.204" endtime="20201115 23:00:52.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.839" endtime="20201115 23:00:52.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.837" endtime="20201115 23:00:52.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.836" endtime="20201115 23:00:52.231"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.233" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.241" endtime="20201115 23:00:52.259"></status>
</kw>
<msg timestamp="20201115 23:00:52.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.240" endtime="20201115 23:00:52.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.261" endtime="20201115 23:00:52.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.263" endtime="20201115 23:00:52.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.237" endtime="20201115 23:00:52.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.235" endtime="20201115 23:00:52.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.273" endtime="20201115 23:00:52.558"></status>
</kw>
<msg timestamp="20201115 23:00:52.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024578292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024656778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.271" endtime="20201115 23:00:52.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024578292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024656778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.562" endtime="20201115 23:00:52.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.571" endtime="20201115 23:00:52.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.269" endtime="20201115 23:00:52.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.267" endtime="20201115 23:00:52.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.578" level="INFO">${RESULT} = [{'time': 0.024656778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.848599999999914e-05, 'source_diff': 7.848599999999914e-05}, {'time': 0.024737792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:52.574" endtime="20201115 23:00:52.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.591" level="INFO">${ACCURACY} = {'time': [0.024656778, 0.024737792, 0.024818819, 0.024898792, 0.024978792, 0.025059819, 0.025139806, 0.025219847, 0.025299819, 0.025379833, 0.025460847, 0.025540889, 0.025621847, 0.025701917, 0.025781...</msg>
<status status="PASS" starttime="20201115 23:00:52.579" endtime="20201115 23:00:52.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.596" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.594" endtime="20201115 23:00:52.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.598" level="INFO">VALUE: [7.848599999999914e-05, 7.858400000000307e-05, 7.862499999999883e-05, 7.809799999999867e-05, 7.7764000000001e-05, 7.874999999999896e-05, 7.786200000000146e-05, 7.793000000000036e-05, 7.784700000000241e-05, 7.797200000000254e-05, 7.875000000000243e-05, 7.786100000000198e-05, 7.873599999999939e-05, 7.81250000000018e-05, 7.808299999999962e-05, 7.869400000000068e-05, 7.805599999999996e-05, 7.784700000000241e-05, 7.779200000000014e-05, 7.862499999999883e-05, 7.788899999999765e-05, 7.872199999999982e-05, 7.869500000000015e-05, 7.788900000000112e-05, 7.801400000000125e-05, 7.870800000000025e-05, 7.813900000000137e-05, 7.790199999999775e-05, 7.804199999999692e-05, 7.86519999999985e-05, 7.868000000000111e-05, 7.797200000000254e-05, 7.806900000000006e-05, 7.780500000000024e-05, 7.856899999999709e-05, 7.872199999999982e-05, 7.869400000000068e-05, 7.802800000000082e-05, 7.80969999999992e-05, 7.869500000000015e-05, 7.784699999999894e-05, 7.848599999999914e-05, 7.802799999999735e-05, 7.85969999999997e-05, 7.816699999999704e-05, 7.787499999999808e-05, 7.787500000000155e-05, 7.836099999999901e-05, 7.804100000000092e-05, 7.869399999999721e-05]</msg>
<status status="PASS" starttime="20201115 23:00:52.597" endtime="20201115 23:00:52.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.592" endtime="20201115 23:00:52.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.601" endtime="20201115 23:00:52.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.605" endtime="20201115 23:00:52.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.603" endtime="20201115 23:00:52.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.600" endtime="20201115 23:00:52.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.234" endtime="20201115 23:00:52.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.232" endtime="20201115 23:00:52.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.231" endtime="20201115 23:00:52.626"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.628" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.637" endtime="20201115 23:00:52.655"></status>
</kw>
<msg timestamp="20201115 23:00:52.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.635" endtime="20201115 23:00:52.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.657" endtime="20201115 23:00:52.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.660" endtime="20201115 23:00:52.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.633" endtime="20201115 23:00:52.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.630" endtime="20201115 23:00:52.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.669" endtime="20201115 23:00:52.955"></status>
</kw>
<msg timestamp="20201115 23:00:52.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025188583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025267889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.667" endtime="20201115 23:00:52.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025188583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025267889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.959" endtime="20201115 23:00:52.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.967" endtime="20201115 23:00:52.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.665" endtime="20201115 23:00:52.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.663" endtime="20201115 23:00:52.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.974" level="INFO">${RESULT} = [{'time': 0.025267889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930600000000121e-05, 'source_diff': 7.930600000000121e-05}, {'time': 0.025349889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:52.971" endtime="20201115 23:00:52.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.989" level="INFO">${ACCURACY} = {'time': [0.025267889, 0.025349889, 0.025431889, 0.025512889, 0.025593903, 0.025674986, 0.025755903, 0.025837931, 0.025918917, 0.026000958, 0.026081931, 0.026163958, 0.026245944, 0.026326944, 0.026408...</msg>
<status status="PASS" starttime="20201115 23:00:52.975" endtime="20201115 23:00:52.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.994" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.993" endtime="20201115 23:00:52.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.996" level="INFO">VALUE: [7.930600000000121e-05, 7.973600000000039e-05, 7.955599999999799e-05, 7.937499999999958e-05, 7.879200000000114e-05, 7.902800000000182e-05, 7.89030000000017e-05, 7.969500000000115e-05, 7.886099999999951e-05, 7.968000000000211e-05, 7.911199999999924e-05, 7.966600000000254e-05, 7.973600000000039e-05, 7.884699999999994e-05, 7.974999999999996e-05, 7.89030000000017e-05, 7.89580000000005e-05, 7.892999999999789e-05, 7.961100000000026e-05, 7.892999999999789e-05, 7.899999999999921e-05, 7.962499999999983e-05, 7.955600000000146e-05, 7.973600000000039e-05, 7.897200000000007e-05, 7.877800000000157e-05, 7.902799999999835e-05, 7.973600000000039e-05, 7.959800000000017e-05, 7.962499999999983e-05, 7.898699999999911e-05, 7.891700000000126e-05, 7.970799999999778e-05, 7.96519999999995e-05, 7.904200000000139e-05, 7.956900000000156e-05, 7.899999999999921e-05, 7.967999999999864e-05, 7.898599999999964e-05, 7.898599999999964e-05, 7.884699999999994e-05, 7.972200000000082e-05, 7.905599999999749e-05, 7.893100000000083e-05, 7.968099999999811e-05, 7.887499999999908e-05, 7.957000000000103e-05, 7.883399999999985e-05, 7.902800000000182e-05, 7.880600000000071e-05]</msg>
<status status="PASS" starttime="20201115 23:00:52.995" endtime="20201115 23:00:52.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.990" endtime="20201115 23:00:52.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.999" endtime="20201115 23:00:53.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.003" endtime="20201115 23:00:53.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.001" endtime="20201115 23:00:53.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.998" endtime="20201115 23:00:53.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.629" endtime="20201115 23:00:53.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.627" endtime="20201115 23:00:53.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.626" endtime="20201115 23:00:53.024"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.026" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.035" endtime="20201115 23:00:53.053"></status>
</kw>
<msg timestamp="20201115 23:00:53.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.034" endtime="20201115 23:00:53.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.054" endtime="20201115 23:00:53.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.057" endtime="20201115 23:00:53.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.031" endtime="20201115 23:00:53.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.029" endtime="20201115 23:00:53.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.066" endtime="20201115 23:00:53.353"></status>
</kw>
<msg timestamp="20201115 23:00:53.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024874153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.065" endtime="20201115 23:00:53.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024874153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.357" endtime="20201115 23:00:53.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.366" endtime="20201115 23:00:53.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.062" endtime="20201115 23:00:53.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.060" endtime="20201115 23:00:53.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.373" level="INFO">${RESULT} = [{'time': 0.024874153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.00840000000011e-05, 'source_diff': 8.00840000000011e-05}, {'time': 0.024957139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:53.369" endtime="20201115 23:00:53.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.386" level="INFO">${ACCURACY} = {'time': [0.024874153, 0.024957139, 0.025040139, 0.025122153, 0.025204167, 0.025286167, 0.025369181, 0.025451181, 0.025533181, 0.025616181, 0.025698208, 0.025780194, 0.025863208, 0.025945208, 0.026027...</msg>
<status status="PASS" starttime="20201115 23:00:53.374" endtime="20201115 23:00:53.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.391" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.390" endtime="20201115 23:00:53.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.393" level="INFO">VALUE: [8.00840000000011e-05, 8.069499999999868e-05, 8.065299999999997e-05, 7.99030000000027e-05, 7.97779999999991e-05, 7.997299999999707e-05, 8.066699999999954e-05, 7.976399999999953e-05, 7.997299999999707e-05, 8.054199999999942e-05, 8.002699999999988e-05, 7.981899999999834e-05, 8.056899999999909e-05, 7.990199999999975e-05, 7.993100000000183e-05, 8.070800000000225e-05, 8.001399999999978e-05, 8.06390000000004e-05, 8.06390000000004e-05, 8.000000000000021e-05, 8.062500000000083e-05, 8.005599999999849e-05, 7.980599999999824e-05, 7.982000000000128e-05, 7.997300000000054e-05, 7.993100000000183e-05, 8.066699999999954e-05, 8.000000000000021e-05, 8.008300000000163e-05, 8.007000000000153e-05, 8.002699999999988e-05, 7.998600000000064e-05, 7.981899999999834e-05, 8.011100000000076e-05, 7.984700000000094e-05, 8.072199999999835e-05, 7.976399999999953e-05, 8.075000000000096e-05, 8.05970000000017e-05, 7.993099999999836e-05, 8.059699999999823e-05, 8.011100000000076e-05, 7.998599999999717e-05, 7.993100000000183e-05, 8.073600000000139e-05, 7.97779999999991e-05, 8.072299999999782e-05, 8.000000000000021e-05, 8.056899999999909e-05, 7.991599999999932e-05]</msg>
<status status="PASS" starttime="20201115 23:00:53.392" endtime="20201115 23:00:53.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.387" endtime="20201115 23:00:53.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.396" endtime="20201115 23:00:53.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.400" endtime="20201115 23:00:53.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.398" endtime="20201115 23:00:53.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.395" endtime="20201115 23:00:53.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.027" endtime="20201115 23:00:53.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.025" endtime="20201115 23:00:53.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.024" endtime="20201115 23:00:53.422"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.424" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.432" endtime="20201115 23:00:53.451"></status>
</kw>
<msg timestamp="20201115 23:00:53.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.431" endtime="20201115 23:00:53.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.452" endtime="20201115 23:00:53.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.455" endtime="20201115 23:00:53.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.428" endtime="20201115 23:00:53.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.426" endtime="20201115 23:00:53.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.464" endtime="20201115 23:00:53.749"></status>
</kw>
<msg timestamp="20201115 23:00:53.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024913681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024994667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.462" endtime="20201115 23:00:53.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024913681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024994667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.753" endtime="20201115 23:00:53.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.762" endtime="20201115 23:00:53.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.460" endtime="20201115 23:00:53.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.458" endtime="20201115 23:00:53.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.768" level="INFO">${RESULT} = [{'time': 0.024994667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.098600000000164e-05, 'source_diff': 8.098600000000164e-05}, {'time': 0.025078653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:53.765" endtime="20201115 23:00:53.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.782" level="INFO">${ACCURACY} = {'time': [0.024994667, 0.025078653, 0.025162653, 0.025245736, 0.025328681, 0.025411681, 0.025494681, 0.025577681, 0.025661694, 0.025744694, 0.025827736, 0.025910708, 0.025993722, 0.026076722, 0.026159...</msg>
<status status="PASS" starttime="20201115 23:00:53.769" endtime="20201115 23:00:53.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.787" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.785" endtime="20201115 23:00:53.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.789" level="INFO">VALUE: [8.098600000000164e-05, 8.16109999999988e-05, 8.174999999999849e-05, 8.08190000000028e-05, 8.137499999999812e-05, 8.083399999999838e-05, 8.09450000000024e-05, 8.105600000000296e-05, 8.162499999999837e-05, 8.091599999999685e-05, 8.102800000000035e-05, 8.076400000000053e-05, 8.105500000000002e-05, 8.095799999999903e-05, 8.092999999999989e-05, 8.165300000000097e-05, 8.075000000000096e-05, 8.087499999999762e-05, 8.102800000000035e-05, 8.158399999999913e-05, 8.159699999999923e-05, 8.079199999999967e-05, 8.088900000000065e-05, 8.156999999999956e-05, 8.105599999999949e-05, 8.158399999999913e-05, 8.09169999999998e-05, 8.098699999999764e-05, 8.10269999999974e-05, 8.163799999999846e-05, 8.086100000000151e-05, 8.092999999999989e-05, 8.106899999999959e-05, 8.162499999999837e-05, 8.112499999999787e-05, 8.173600000000239e-05, 8.099999999999774e-05, 8.090300000000022e-05, 8.075000000000096e-05, 8.093099999999936e-05, 8.090300000000022e-05, 8.168100000000011e-05, 8.156999999999956e-05, 8.168100000000011e-05, 8.16529999999975e-05, 8.162499999999837e-05, 8.108300000000263e-05, 8.162499999999837e-05, 8.170799999999978e-05, 8.104100000000045e-05]</msg>
<status status="PASS" starttime="20201115 23:00:53.788" endtime="20201115 23:00:53.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.783" endtime="20201115 23:00:53.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.793" endtime="20201115 23:00:53.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.796" endtime="20201115 23:00:53.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.795" endtime="20201115 23:00:53.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.791" endtime="20201115 23:00:53.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.425" endtime="20201115 23:00:53.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.423" endtime="20201115 23:00:53.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.422" endtime="20201115 23:00:53.817"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.820" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.828" endtime="20201115 23:00:53.846"></status>
</kw>
<msg timestamp="20201115 23:00:53.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.826" endtime="20201115 23:00:53.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.848" endtime="20201115 23:00:53.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.850" endtime="20201115 23:00:53.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.824" endtime="20201115 23:00:53.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.822" endtime="20201115 23:00:53.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.860" endtime="20201115 23:00:54.145"></status>
</kw>
<msg timestamp="20201115 23:00:54.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024356667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024438931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.858" endtime="20201115 23:00:54.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024356667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024438931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.150" endtime="20201115 23:00:54.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.158" endtime="20201115 23:00:54.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.855" endtime="20201115 23:00:54.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.854" endtime="20201115 23:00:54.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.165" level="INFO">${RESULT} = [{'time': 0.024438931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.226400000000203e-05, 'source_diff': 8.226400000000203e-05}, {'time': 0.024523889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:54.162" endtime="20201115 23:00:54.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.178" level="INFO">${ACCURACY} = {'time': [0.024438931, 0.024523889, 0.024607889, 0.024691889, 0.024776917, 0.024861903, 0.024946931, 0.025030917, 0.025114917, 0.025199014, 0.025283944, 0.025367958, 0.025451958, 0.025537, 0.025621958...</msg>
<status status="PASS" starttime="20201115 23:00:54.166" endtime="20201115 23:00:54.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.183" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.182" endtime="20201115 23:00:54.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.186" level="INFO">VALUE: [8.226400000000203e-05, 8.257000000000056e-05, 8.194499999999993e-05, 8.176400000000153e-05, 8.269500000000068e-05, 8.252800000000185e-05, 8.272299999999982e-05, 8.172299999999882e-05, 8.201400000000178e-05, 8.218099999999715e-05, 8.274999999999949e-05, 8.198599999999917e-05, 8.202700000000188e-05, 8.265300000000197e-05, 8.259700000000023e-05, 8.265199999999903e-05, 8.191699999999733e-05, 8.194400000000046e-05, 8.273599999999992e-05, 8.270800000000078e-05, 8.176399999999806e-05, 8.174999999999849e-05, 8.220799999999681e-05, 8.270799999999731e-05, 8.186099999999905e-05, 8.19719999999996e-05, 8.180600000000024e-05, 8.195800000000003e-05, 8.263899999999894e-05, 8.199999999999874e-05, 8.183399999999938e-05, 8.269399999999774e-05, 8.188899999999819e-05, 8.188899999999819e-05, 8.26390000000024e-05, 8.26529999999985e-05, 8.188900000000165e-05, 8.186099999999905e-05, 8.17780000000011e-05, 8.270800000000078e-05, 8.193100000000036e-05, 8.265300000000197e-05, 8.207000000000006e-05, 8.186099999999905e-05, 8.276399999999906e-05, 8.207000000000006e-05, 8.266699999999808e-05, 8.19589999999995e-05, 8.17780000000011e-05, 8.190200000000175e-05]</msg>
<status status="PASS" starttime="20201115 23:00:54.184" endtime="20201115 23:00:54.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.179" endtime="20201115 23:00:54.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.189" endtime="20201115 23:00:54.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.193" endtime="20201115 23:00:54.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.191" endtime="20201115 23:00:54.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.188" endtime="20201115 23:00:54.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.820" endtime="20201115 23:00:54.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.819" endtime="20201115 23:00:54.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.818" endtime="20201115 23:00:54.214"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.216" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.224" endtime="20201115 23:00:54.243"></status>
</kw>
<msg timestamp="20201115 23:00:54.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.223" endtime="20201115 23:00:54.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.244" endtime="20201115 23:00:54.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.247" endtime="20201115 23:00:54.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.220" endtime="20201115 23:00:54.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.218" endtime="20201115 23:00:54.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.256" endtime="20201115 23:00:54.541"></status>
</kw>
<msg timestamp="20201115 23:00:54.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025147014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025229847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.254" endtime="20201115 23:00:54.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025147014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025229847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.545" endtime="20201115 23:00:54.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.554" endtime="20201115 23:00:54.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.252" endtime="20201115 23:00:54.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.250" endtime="20201115 23:00:54.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.561" level="INFO">${RESULT} = [{'time': 0.025229847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.28330000000009e-05, 'source_diff': 8.28330000000009e-05}, {'time': 0.025314847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:54.557" endtime="20201115 23:00:54.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.576" level="INFO">${ACCURACY} = {'time': [0.025229847, 0.025314847, 0.025399861, 0.025485847, 0.025571861, 0.025657861, 0.025742903, 0.025828875, 0.025914889, 0.026000889, 0.026085889, 0.026170917, 0.026255903, 0.026341917, 0.026426...</msg>
<status status="PASS" starttime="20201115 23:00:54.562" endtime="20201115 23:00:54.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.580" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.579" endtime="20201115 23:00:54.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.583" level="INFO">VALUE: [8.28330000000009e-05, 8.287500000000309e-05, 8.291699999999833e-05, 8.367999999999917e-05, 8.366700000000254e-05, 8.355499999999905e-05, 8.294500000000093e-05, 8.36529999999995e-05, 8.375000000000049e-05, 8.363899999999994e-05, 8.280600000000124e-05, 8.301399999999931e-05, 8.29170000000018e-05, 8.356999999999809e-05, 8.282000000000081e-05, 8.358400000000113e-05, 8.29720000000006e-05, 8.288799999999971e-05, 8.287499999999962e-05, 8.301399999999931e-05, 8.281900000000134e-05, 8.27919999999982e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.373600000000092e-05, 8.294400000000146e-05, 8.31110000000003e-05, 8.301400000000278e-05, 8.294500000000093e-05, 8.294499999999747e-05, 8.304199999999845e-05, 8.36110000000008e-05, 8.288900000000265e-05, 8.27919999999982e-05, 8.301399999999931e-05, 8.27919999999982e-05, 8.280600000000124e-05, 8.367999999999917e-05, 8.355499999999905e-05, 8.286100000000005e-05, 8.36529999999995e-05, 8.365300000000297e-05, 8.279099999999873e-05, 8.376400000000006e-05, 8.367999999999917e-05, 8.36529999999995e-05, 8.288899999999919e-05, 8.357000000000156e-05, 8.294499999999747e-05, 8.354199999999895e-05]</msg>
<status status="PASS" starttime="20201115 23:00:54.581" endtime="20201115 23:00:54.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.577" endtime="20201115 23:00:54.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.586" endtime="20201115 23:00:54.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.590" endtime="20201115 23:00:54.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.588" endtime="20201115 23:00:54.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.584" endtime="20201115 23:00:54.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.217" endtime="20201115 23:00:54.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.215" endtime="20201115 23:00:54.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.214" endtime="20201115 23:00:54.611"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.613" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.621" endtime="20201115 23:00:54.641"></status>
</kw>
<msg timestamp="20201115 23:00:54.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.620" endtime="20201115 23:00:54.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.642" endtime="20201115 23:00:54.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.645" endtime="20201115 23:00:54.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.617" endtime="20201115 23:00:54.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.615" endtime="20201115 23:00:54.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.654" endtime="20201115 23:00:54.939"></status>
</kw>
<msg timestamp="20201115 23:00:54.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024756667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024841403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.652" endtime="20201115 23:00:54.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024756667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024841403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.944" endtime="20201115 23:00:54.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.952" endtime="20201115 23:00:54.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.650" endtime="20201115 23:00:54.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.648" endtime="20201115 23:00:54.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.959" level="INFO">${RESULT} = [{'time': 0.024841403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.473600000000192e-05, 'source_diff': 8.473600000000192e-05}, {'time': 0.024928431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:54.956" endtime="20201115 23:00:54.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.973" level="INFO">${ACCURACY} = {'time': [0.024841403, 0.024928431, 0.025015403, 0.025102444, 0.025188431, 0.025274444, 0.025361431, 0.025447458, 0.025533444, 0.025619472, 0.025706458, 0.025792472, 0.025878486, 0.025964472, 0.026050...</msg>
<status status="PASS" starttime="20201115 23:00:54.960" endtime="20201115 23:00:54.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.977" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.976" endtime="20201115 23:00:54.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.980" level="INFO">VALUE: [8.473600000000192e-05, 8.458400000000213e-05, 8.463899999999747e-05, 8.476300000000159e-05, 8.380600000000224e-05, 8.395799999999856e-05, 8.461200000000127e-05, 8.375000000000049e-05, 8.3846999999998e-05, 8.39720000000016e-05, 8.475000000000149e-05, 8.398600000000117e-05, 8.397199999999813e-05, 8.370799999999831e-05, 8.380600000000224e-05, 8.463900000000094e-05, 8.380599999999877e-05, 8.469499999999922e-05, 8.463900000000094e-05, 8.462500000000137e-05, 8.388799999999724e-05, 8.468099999999965e-05, 8.395800000000203e-05, 8.400000000000074e-05, 8.468099999999965e-05, 8.39309999999989e-05, 8.462500000000137e-05, 8.472200000000235e-05, 8.394399999999899e-05, 8.375000000000049e-05, 8.402699999999694e-05, 8.408300000000216e-05, 8.401400000000031e-05, 8.392999999999942e-05, 8.384700000000148e-05, 8.413900000000044e-05, 8.475000000000149e-05, 8.388899999999672e-05, 8.462500000000137e-05, 8.456999999999909e-05, 8.372199999999788e-05, 8.458399999999866e-05, 8.39170000000028e-05, 8.455599999999952e-05, 8.469500000000268e-05, 8.386100000000105e-05, 8.459700000000223e-05, 8.392999999999942e-05, 8.405499999999955e-05, 8.394399999999899e-05]</msg>
<status status="PASS" starttime="20201115 23:00:54.979" endtime="20201115 23:00:54.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.974" endtime="20201115 23:00:54.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.983" endtime="20201115 23:00:54.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.987" endtime="20201115 23:00:55.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.985" endtime="20201115 23:00:55.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.982" endtime="20201115 23:00:55.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.614" endtime="20201115 23:00:55.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.612" endtime="20201115 23:00:55.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.611" endtime="20201115 23:00:55.008"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.010" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.019" endtime="20201115 23:00:55.037"></status>
</kw>
<msg timestamp="20201115 23:00:55.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.017" endtime="20201115 23:00:55.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.039" endtime="20201115 23:00:55.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.041" endtime="20201115 23:00:55.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.014" endtime="20201115 23:00:55.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.012" endtime="20201115 23:00:55.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.051" endtime="20201115 23:00:55.336"></status>
</kw>
<msg timestamp="20201115 23:00:55.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024502792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024587778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.049" endtime="20201115 23:00:55.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024502792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024587778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.341" endtime="20201115 23:00:55.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.349" endtime="20201115 23:00:55.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.046" endtime="20201115 23:00:55.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.044" endtime="20201115 23:00:55.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.356" level="INFO">${RESULT} = [{'time': 0.024587778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.498600000000217e-05, 'source_diff': 8.498600000000217e-05}, {'time': 0.024674778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:55.353" endtime="20201115 23:00:55.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.370" level="INFO">${ACCURACY} = {'time': [0.024587778, 0.024674778, 0.024761806, 0.024849792, 0.024937792, 0.025025819, 0.025113806, 0.025201847, 0.025289861, 0.025376833, 0.025464833, 0.025551847, 0.025638847, 0.025726875, 0.025813...</msg>
<status status="PASS" starttime="20201115 23:00:55.357" endtime="20201115 23:00:55.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.375" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.374" endtime="20201115 23:00:55.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.378" level="INFO">VALUE: [8.498600000000217e-05, 8.483400000000238e-05, 8.512500000000187e-05, 8.568100000000065e-05, 8.568100000000065e-05, 8.56660000000016e-05, 8.558399999999966e-05, 8.573599999999945e-05, 8.561099999999933e-05, 8.508299999999969e-05, 8.555499999999758e-05, 8.502799999999741e-05, 8.477800000000063e-05, 8.574999999999902e-05, 8.500000000000174e-05, 8.56530000000015e-05, 8.574999999999902e-05, 8.579100000000173e-05, 8.555600000000052e-05, 8.558300000000019e-05, 8.563899999999847e-05, 8.56530000000015e-05, 8.506999999999959e-05, 8.558399999999966e-05, 8.495899999999904e-05, 8.498699999999818e-05, 8.509699999999926e-05, 8.508299999999969e-05, 8.494399999999999e-05, 8.561099999999933e-05, 8.509699999999926e-05, 8.495799999999956e-05, 8.477800000000063e-05, 8.51110000000023e-05, 8.501400000000131e-05, 8.573599999999945e-05, 8.568100000000065e-05, 8.476400000000106e-05, 8.506999999999959e-05, 8.508399999999916e-05, 8.495899999999904e-05, 8.51249999999984e-05, 8.488900000000119e-05, 8.483399999999891e-05, 8.511200000000177e-05, 8.511200000000177e-05, 8.502700000000141e-05, 8.562500000000237e-05, 8.558300000000019e-05, 8.574999999999902e-05]</msg>
<status status="PASS" starttime="20201115 23:00:55.376" endtime="20201115 23:00:55.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.371" endtime="20201115 23:00:55.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.381" endtime="20201115 23:00:55.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.385" endtime="20201115 23:00:55.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.383" endtime="20201115 23:00:55.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.380" endtime="20201115 23:00:55.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.011" endtime="20201115 23:00:55.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.009" endtime="20201115 23:00:55.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.008" endtime="20201115 23:00:55.406"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.409" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.417" endtime="20201115 23:00:55.435"></status>
</kw>
<msg timestamp="20201115 23:00:55.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.415" endtime="20201115 23:00:55.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.437" endtime="20201115 23:00:55.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.444" endtime="20201115 23:00:55.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.413" endtime="20201115 23:00:55.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.411" endtime="20201115 23:00:55.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.453" endtime="20201115 23:00:55.739"></status>
</kw>
<msg timestamp="20201115 23:00:55.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024870111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024956056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.451" endtime="20201115 23:00:55.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024870111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024956056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.743" endtime="20201115 23:00:55.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.752" endtime="20201115 23:00:55.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.449" endtime="20201115 23:00:55.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.447" endtime="20201115 23:00:55.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.758" level="INFO">${RESULT} = [{'time': 0.024956056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.594500000000047e-05, 'source_diff': 8.594500000000047e-05}, {'time': 0.025044042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:55.755" endtime="20201115 23:00:55.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.772" level="INFO">${ACCURACY} = {'time': [0.024956056, 0.025044042, 0.025132042, 0.025220069, 0.025308069, 0.025396097, 0.025484069, 0.025573097, 0.025661111, 0.025749111, 0.025837125, 0.025925111, 0.026014111, 0.026103111, 0.026192...</msg>
<status status="PASS" starttime="20201115 23:00:55.759" endtime="20201115 23:00:55.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.777" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.776" endtime="20201115 23:00:55.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.779" level="INFO">VALUE: [8.594500000000047e-05, 8.582000000000034e-05, 8.61249999999994e-05, 8.601300000000284e-05, 8.636100000000008e-05, 8.605499999999808e-05, 8.593000000000142e-05, 8.673600000000045e-05, 8.588899999999872e-05, 8.600000000000274e-05, 8.5847e-05, 8.594400000000099e-05, 8.655499999999858e-05, 8.66249999999999e-05, 8.672200000000088e-05, 8.590300000000176e-05, 8.597200000000013e-05, 8.677799999999916e-05, 8.5944999999997e-05, 8.594399999999752e-05, 8.655600000000152e-05, 8.591699999999786e-05, 8.657000000000109e-05, 8.602799999999841e-05, 8.675000000000002e-05, 8.604099999999851e-05, 8.606900000000112e-05, 8.587500000000262e-05, 8.651399999999934e-05, 8.58050000000013e-05, 8.58189999999974e-05, 8.673600000000045e-05, 8.574999999999902e-05, 8.670899999999732e-05, 8.59859999999997e-05, 8.608400000000016e-05, 8.597200000000013e-05, 8.580600000000077e-05, 8.579199999999773e-05, 8.669500000000122e-05, 8.602700000000241e-05, 8.640199999999931e-05, 8.665200000000303e-05, 8.66799999999987e-05, 8.609700000000026e-05, 8.658300000000119e-05, 8.579100000000173e-05, 8.606899999999765e-05, 8.675000000000002e-05, 8.576399999999859e-05]</msg>
<status status="PASS" starttime="20201115 23:00:55.778" endtime="20201115 23:00:55.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.773" endtime="20201115 23:00:55.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.782" endtime="20201115 23:00:55.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.786" endtime="20201115 23:00:55.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.784" endtime="20201115 23:00:55.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.781" endtime="20201115 23:00:55.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.409" endtime="20201115 23:00:55.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.407" endtime="20201115 23:00:55.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.406" endtime="20201115 23:00:55.807"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.809" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.818" endtime="20201115 23:00:55.837"></status>
</kw>
<msg timestamp="20201115 23:00:55.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.816" endtime="20201115 23:00:55.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.839" endtime="20201115 23:00:55.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.842" endtime="20201115 23:00:55.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.813" endtime="20201115 23:00:55.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.811" endtime="20201115 23:00:55.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.851" endtime="20201115 23:00:56.137"></status>
</kw>
<msg timestamp="20201115 23:00:56.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025924194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026011708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.849" endtime="20201115 23:00:56.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025924194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026011708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.141" endtime="20201115 23:00:56.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.150" endtime="20201115 23:00:56.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.846" endtime="20201115 23:00:56.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.845" endtime="20201115 23:00:56.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.157" level="INFO">${RESULT} = [{'time': 0.026011708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.751400000000034e-05, 'source_diff': 8.751400000000034e-05}, {'time': 0.026100708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:56.153" endtime="20201115 23:00:56.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.171" level="INFO">${ACCURACY} = {'time': [0.026011708, 0.026100708, 0.026189722, 0.026278722, 0.026367806, 0.026456778, 0.02654575, 0.02663475, 0.02672475, 0.02681375, 0.026902764, 0.026991764, 0.027080778, 0.027169778, 0.027259792,...</msg>
<status status="PASS" starttime="20201115 23:00:56.158" endtime="20201115 23:00:56.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.176" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.175" endtime="20201115 23:00:56.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.178" level="INFO">VALUE: [8.751400000000034e-05, 8.705499999999908e-05, 8.712499999999693e-05, 8.68050000000023e-05, 8.708400000000116e-05, 8.715299999999954e-05, 8.687500000000015e-05, 8.702799999999941e-05, 8.756899999999915e-05, 8.697200000000113e-05, 8.684699999999754e-05, 8.737500000000065e-05, 8.691699999999886e-05, 8.686099999999711e-05, 8.754200000000295e-05, 8.775000000000102e-05, 8.76250000000009e-05, 8.71250000000004e-05, 8.756899999999915e-05, 8.6847000000001e-05, 8.759700000000176e-05, 8.704099999999951e-05, 8.773599999999798e-05, 8.711100000000083e-05, 8.768099999999918e-05, 8.688899999999972e-05, 8.687499999999668e-05, 8.711100000000083e-05, 8.770799999999884e-05, 8.708400000000116e-05, 8.69860000000007e-05, 8.768099999999918e-05, 8.688899999999972e-05, 8.713899999999997e-05, 8.702699999999994e-05, 8.683400000000091e-05, 8.683400000000091e-05, 8.704099999999951e-05, 8.705500000000255e-05, 8.713899999999997e-05, 8.763900000000047e-05, 8.765300000000004e-05, 8.687500000000015e-05, 8.738900000000022e-05, 8.69860000000007e-05, 8.683300000000144e-05, 8.707000000000159e-05, 8.704200000000245e-05, 8.68059999999983e-05, 8.709699999999779e-05]</msg>
<status status="PASS" starttime="20201115 23:00:56.177" endtime="20201115 23:00:56.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.172" endtime="20201115 23:00:56.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.182" endtime="20201115 23:00:56.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.185" endtime="20201115 23:00:56.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.183" endtime="20201115 23:00:56.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.180" endtime="20201115 23:00:56.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.810" endtime="20201115 23:00:56.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.808" endtime="20201115 23:00:56.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.807" endtime="20201115 23:00:56.207"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.209" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.217" endtime="20201115 23:00:56.235"></status>
</kw>
<msg timestamp="20201115 23:00:56.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.216" endtime="20201115 23:00:56.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.237" endtime="20201115 23:00:56.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.239" endtime="20201115 23:00:56.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.213" endtime="20201115 23:00:56.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.211" endtime="20201115 23:00:56.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.249" endtime="20201115 23:00:56.536"></status>
</kw>
<msg timestamp="20201115 23:00:56.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024851014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024939778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.247" endtime="20201115 23:00:56.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024851014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024939778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.541" endtime="20201115 23:00:56.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.549" endtime="20201115 23:00:56.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.244" endtime="20201115 23:00:56.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.243" endtime="20201115 23:00:56.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.556" level="INFO">${RESULT} = [{'time': 0.024939778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.876399999999812e-05, 'source_diff': 8.876399999999812e-05}, {'time': 0.025029778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:56.553" endtime="20201115 23:00:56.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.569" level="INFO">${ACCURACY} = {'time': [0.024939778, 0.025029778, 0.025120819, 0.025210792, 0.025300792, 0.025391819, 0.025481806, 0.025571819, 0.025661819, 0.025752833, 0.025843833, 0.025934861, 0.026025847, 0.026115875, 0.026205...</msg>
<status status="PASS" starttime="20201115 23:00:56.557" endtime="20201115 23:00:56.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.574" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.573" endtime="20201115 23:00:56.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.576" level="INFO">VALUE: [8.876399999999812e-05, 8.797199999999866e-05, 8.86519999999981e-05, 8.788900000000072e-05, 8.811099999999836e-05, 8.869400000000027e-05, 8.78059999999993e-05, 8.790200000000081e-05, 8.774999999999755e-05, 8.862499999999843e-05, 8.859699999999929e-05, 8.865300000000104e-05, 8.870799999999984e-05, 8.788900000000072e-05, 8.788900000000072e-05, 8.855600000000005e-05, 8.786100000000158e-05, 8.781999999999887e-05, 8.784799999999801e-05, 8.863900000000147e-05, 8.786100000000158e-05, 8.858399999999919e-05, 8.787500000000115e-05, 8.869499999999975e-05, 8.776400000000059e-05, 8.876300000000212e-05, 8.776300000000112e-05, 8.770800000000231e-05, 8.809700000000226e-05, 8.776400000000059e-05, 8.795900000000204e-05, 8.808299999999922e-05, 8.81389999999975e-05, 8.8638999999998e-05, 8.795799999999909e-05, 8.808300000000269e-05, 8.872199999999941e-05, 8.855600000000005e-05, 8.781999999999887e-05, 8.805599999999955e-05, 8.800000000000127e-05, 8.855600000000005e-05, 8.805599999999955e-05, 8.78189999999994e-05, 8.808399999999869e-05, 8.776300000000112e-05, 8.81250000000014e-05, 8.79860000000017e-05, 8.858299999999972e-05, 8.879200000000073e-05]</msg>
<status status="PASS" starttime="20201115 23:00:56.575" endtime="20201115 23:00:56.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.570" endtime="20201115 23:00:56.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.580" endtime="20201115 23:00:56.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.584" endtime="20201115 23:00:56.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.582" endtime="20201115 23:00:56.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.579" endtime="20201115 23:00:56.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.210" endtime="20201115 23:00:56.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.208" endtime="20201115 23:00:56.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.207" endtime="20201115 23:00:56.605"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.607" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.615" endtime="20201115 23:00:56.634"></status>
</kw>
<msg timestamp="20201115 23:00:56.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.614" endtime="20201115 23:00:56.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.636" endtime="20201115 23:00:56.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.638" endtime="20201115 23:00:56.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.611" endtime="20201115 23:00:56.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.609" endtime="20201115 23:00:56.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.647" endtime="20201115 23:00:56.932"></status>
</kw>
<msg timestamp="20201115 23:00:56.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024410625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024499778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.646" endtime="20201115 23:00:56.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024410625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024499778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.936" endtime="20201115 23:00:56.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.945" endtime="20201115 23:00:56.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.643" endtime="20201115 23:00:56.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.642" endtime="20201115 23:00:56.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.952" level="INFO">${RESULT} = [{'time': 0.024499778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.915300000000154e-05, 'source_diff': 8.915300000000154e-05}, {'time': 0.024590764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:56.948" endtime="20201115 23:00:56.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.965" level="INFO">${ACCURACY} = {'time': [0.024499778, 0.024590764, 0.024681778, 0.024772778, 0.024864792, 0.024955792, 0.025046806, 0.025137819, 0.025228819, 0.025319833, 0.025410833, 0.025502875, 0.025593847, 0.025685847, 0.025776...</msg>
<status status="PASS" starttime="20201115 23:00:56.953" endtime="20201115 23:00:56.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.970" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.969" endtime="20201115 23:00:56.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.973" level="INFO">VALUE: [8.915300000000154e-05, 8.881999999999987e-05, 8.900000000000227e-05, 8.893100000000043e-05, 8.969500000000075e-05, 8.902800000000141e-05, 8.900000000000227e-05, 8.908300000000022e-05, 8.895800000000009e-05, 8.908300000000022e-05, 8.900000000000227e-05, 8.970800000000084e-05, 8.879099999999779e-05, 8.965300000000204e-05, 8.877800000000116e-05, 8.88190000000004e-05, 8.965299999999857e-05, 8.909699999999979e-05, 8.957000000000062e-05, 8.898599999999923e-05, 8.877800000000116e-05, 8.876400000000159e-05, 8.962499999999943e-05, 8.883399999999944e-05, 8.884799999999901e-05, 8.904100000000151e-05, 8.883400000000291e-05, 8.901399999999837e-05, 8.883299999999997e-05, 8.937499999999918e-05, 8.902700000000194e-05, 8.973599999999998e-05, 8.88190000000004e-05, 8.897199999999966e-05, 8.890300000000129e-05, 8.968099999999771e-05, 8.9638999999999e-05, 8.884699999999954e-05, 8.970900000000032e-05, 8.886099999999911e-05, 8.961099999999986e-05, 8.904100000000151e-05, 8.970900000000032e-05, 8.895800000000009e-05, 8.893000000000095e-05, 8.902699999999847e-05, 8.888899999999825e-05, 8.970800000000084e-05, 8.967999999999823e-05, 8.905500000000108e-05]</msg>
<status status="PASS" starttime="20201115 23:00:56.971" endtime="20201115 23:00:56.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.966" endtime="20201115 23:00:56.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.976" endtime="20201115 23:00:56.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.980" endtime="20201115 23:00:56.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.978" endtime="20201115 23:00:57.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.974" endtime="20201115 23:00:57.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.608" endtime="20201115 23:00:57.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.606" endtime="20201115 23:00:57.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.605" endtime="20201115 23:00:57.001"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.003" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.012" endtime="20201115 23:00:57.030"></status>
</kw>
<msg timestamp="20201115 23:00:57.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.010" endtime="20201115 23:00:57.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.032" endtime="20201115 23:00:57.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.035" endtime="20201115 23:00:57.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.007" endtime="20201115 23:00:57.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.005" endtime="20201115 23:00:57.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.044" endtime="20201115 23:00:57.330"></status>
</kw>
<msg timestamp="20201115 23:00:57.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024380069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024470708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.042" endtime="20201115 23:00:57.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024380069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024470708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.334" endtime="20201115 23:00:57.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.342" endtime="20201115 23:00:57.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.040" endtime="20201115 23:00:57.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.038" endtime="20201115 23:00:57.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.349" level="INFO">${RESULT} = [{'time': 0.024470708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.0639e-05, 'source_diff': 9.0639e-05}, {'time': 0.024562736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.001400000000284e-...</msg>
<status status="PASS" starttime="20201115 23:00:57.346" endtime="20201115 23:00:57.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.363" level="INFO">${ACCURACY} = {'time': [0.024470708, 0.024562736, 0.024655722, 0.024747708, 0.024840736, 0.02493275, 0.02502475, 0.025117736, 0.02521075, 0.025302778, 0.025395833, 0.025488764, 0.025580778, 0.025672792, 0.025764792...</msg>
<status status="PASS" starttime="20201115 23:00:57.350" endtime="20201115 23:00:57.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.368" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.366" endtime="20201115 23:00:57.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.370" level="INFO">VALUE: [9.0639e-05, 9.001400000000284e-05, 9.073600000000098e-05, 8.986100000000011e-05, 9.062499999999696e-05, 8.977799999999869e-05, 8.986100000000011e-05, 9.056900000000215e-05, 9.065299999999957e-05, 8.993100000000143e-05, 9.080499999999936e-05, 9.065299999999957e-05, 8.980599999999783e-05, 8.982000000000087e-05, 9.008400000000069e-05, 9.011100000000036e-05, 8.975000000000302e-05, 9.002800000000241e-05, 9.073600000000098e-05, 9.06939999999988e-05, 8.995800000000109e-05, 8.980500000000183e-05, 8.992999999999848e-05, 8.979200000000173e-05, 8.994399999999805e-05, 8.993000000000195e-05, 9.059700000000129e-05, 8.991700000000186e-05, 9.066699999999914e-05, 9.06520000000001e-05, 9.012499999999993e-05, 9.070900000000132e-05, 8.994400000000152e-05, 9.062500000000043e-05, 9.008299999999775e-05, 8.995800000000109e-05, 9.011100000000036e-05, 9.059699999999782e-05, 8.977699999999922e-05, 9.012499999999993e-05, 8.998600000000023e-05, 9.006900000000165e-05, 8.980499999999836e-05, 8.984700000000054e-05, 8.998600000000023e-05, 8.983300000000097e-05, 9.066699999999914e-05, 8.994499999999753e-05, 8.991699999999839e-05, 9.012499999999993e-05]</msg>
<status status="PASS" starttime="20201115 23:00:57.369" endtime="20201115 23:00:57.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.364" endtime="20201115 23:00:57.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.373" endtime="20201115 23:00:57.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.377" endtime="20201115 23:00:57.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.375" endtime="20201115 23:00:57.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.372" endtime="20201115 23:00:57.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.004" endtime="20201115 23:00:57.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.002" endtime="20201115 23:00:57.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.001" endtime="20201115 23:00:57.398"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.401" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.410" endtime="20201115 23:00:57.429"></status>
</kw>
<msg timestamp="20201115 23:00:57.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.409" endtime="20201115 23:00:57.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.431" endtime="20201115 23:00:57.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.433" endtime="20201115 23:00:57.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.406" endtime="20201115 23:00:57.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.403" endtime="20201115 23:00:57.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.443" endtime="20201115 23:00:57.728"></status>
</kw>
<msg timestamp="20201115 23:00:57.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027062861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027154097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.441" endtime="20201115 23:00:57.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027062861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027154097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.732" endtime="20201115 23:00:57.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.741" endtime="20201115 23:00:57.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.438" endtime="20201115 23:00:57.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.437" endtime="20201115 23:00:57.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.748" level="INFO">${RESULT} = [{'time': 0.027154097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.123599999999801e-05, 'source_diff': 9.123599999999801e-05}, {'time': 0.027248069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:57.744" endtime="20201115 23:00:57.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.763" level="INFO">${ACCURACY} = {'time': [0.027154097, 0.027248069, 0.027341069, 0.027434125, 0.027527083, 0.027621083, 0.027714139, 0.027808125, 0.027902111, 0.027996167, 0.028089139, 0.028182125, 0.028275139, 0.028368153, 0.028462...</msg>
<status status="PASS" starttime="20201115 23:00:57.749" endtime="20201115 23:00:57.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.767" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.766" endtime="20201115 23:00:57.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.770" level="INFO">VALUE: [9.123599999999801e-05, 9.156899999999968e-05, 9.108299999999875e-05, 9.098600000000123e-05, 9.087500000000068e-05, 9.175000000000155e-05, 9.095799999999862e-05, 9.161099999999839e-05, 9.158299999999925e-05, 9.163899999999753e-05, 9.087500000000068e-05, 9.093099999999896e-05, 9.084700000000154e-05, 9.087500000000068e-05, 9.173600000000198e-05, 9.169499999999928e-05, 9.165300000000057e-05, 9.08199999999984e-05, 9.090299999999982e-05, 9.093100000000243e-05, 9.098600000000123e-05, 9.097200000000166e-05, 9.091599999999991e-05, 9.156899999999968e-05, 9.109699999999832e-05, 9.106900000000265e-05, 9.161100000000186e-05, 9.156899999999968e-05, 9.172200000000241e-05, 9.091699999999939e-05, 9.080599999999883e-05, 9.168099999999971e-05, 9.091699999999939e-05, 9.11390000000005e-05, 9.088900000000025e-05, 9.08199999999984e-05, 9.08199999999984e-05, 9.098600000000123e-05, 9.156899999999968e-05, 9.084700000000154e-05, 9.094399999999905e-05, 9.077700000000022e-05, 9.091599999999991e-05, 9.10000000000008e-05, 9.104199999999951e-05, 9.167999999999676e-05, 9.105599999999908e-05, 9.165300000000404e-05, 9.093099999999549e-05, 9.10000000000008e-05]</msg>
<status status="PASS" starttime="20201115 23:00:57.769" endtime="20201115 23:00:57.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.764" endtime="20201115 23:00:57.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.773" endtime="20201115 23:00:57.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.777" endtime="20201115 23:00:57.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.775" endtime="20201115 23:00:57.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.772" endtime="20201115 23:00:57.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.402" endtime="20201115 23:00:57.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.400" endtime="20201115 23:00:57.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.399" endtime="20201115 23:00:57.798"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.800" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.809" endtime="20201115 23:00:57.827"></status>
</kw>
<msg timestamp="20201115 23:00:57.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.807" endtime="20201115 23:00:57.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.828" endtime="20201115 23:00:57.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.831" endtime="20201115 23:00:57.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.804" endtime="20201115 23:00:57.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.802" endtime="20201115 23:00:57.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.840" endtime="20201115 23:00:58.126"></status>
</kw>
<msg timestamp="20201115 23:00:58.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02480825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024900833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:57.838" endtime="20201115 23:00:58.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02480825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024900833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:58.130" endtime="20201115 23:00:58.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.139" endtime="20201115 23:00:58.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.836" endtime="20201115 23:00:58.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.834" endtime="20201115 23:00:58.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.146" level="INFO">${RESULT} = [{'time': 0.024900833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.258300000000025e-05, 'source_diff': 9.258300000000025e-05}, {'time': 0.024995861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:58.142" endtime="20201115 23:00:58.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.159" level="INFO">${ACCURACY} = {'time': [0.024900833, 0.024995861, 0.025089875, 0.025184861, 0.025278861, 0.025372875, 0.025466875, 0.025560903, 0.025654889, 0.025748903, 0.025842917, 0.025936903, 0.026030917, 0.026124944, 0.026218...</msg>
<status status="PASS" starttime="20201115 23:00:58.147" endtime="20201115 23:00:58.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.164" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.163" endtime="20201115 23:00:58.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.166" level="INFO">VALUE: [9.258300000000025e-05, 9.258300000000025e-05, 9.198600000000223e-05, 9.272199999999994e-05, 9.201400000000137e-05, 9.209699999999932e-05, 9.205600000000008e-05, 9.188899999999778e-05, 9.194499999999953e-05, 9.186099999999864e-05, 9.179200000000026e-05, 9.198600000000223e-05, 9.190300000000082e-05, 9.193000000000048e-05, 9.176400000000112e-05, 9.194400000000005e-05, 9.20130000000019e-05, 9.190200000000134e-05, 9.267999999999776e-05, 9.261099999999939e-05, 9.26940000000008e-05, 9.204200000000051e-05, 9.209699999999932e-05, 9.204199999999704e-05, 9.183300000000297e-05, 9.268100000000071e-05, 9.212499999999846e-05, 9.268100000000071e-05, 9.184700000000254e-05, 9.274999999999908e-05, 9.261099999999939e-05, 9.275000000000255e-05, 9.276400000000212e-05, 9.177699999999775e-05, 9.204099999999757e-05, 9.268000000000123e-05, 9.19719999999992e-05, 9.213899999999803e-05, 9.181899999999993e-05, 9.259699999999982e-05, 9.277799999999822e-05, 9.202800000000094e-05, 9.194499999999953e-05, 9.2639000000002e-05, 9.273600000000298e-05, 9.269500000000028e-05, 9.202800000000094e-05, 9.211099999999889e-05, 9.272299999999942e-05, 9.273599999999951e-05]</msg>
<status status="PASS" starttime="20201115 23:00:58.165" endtime="20201115 23:00:58.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.160" endtime="20201115 23:00:58.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.170" endtime="20201115 23:00:58.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.173" endtime="20201115 23:00:58.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.171" endtime="20201115 23:00:58.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.168" endtime="20201115 23:00:58.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.801" endtime="20201115 23:00:58.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.799" endtime="20201115 23:00:58.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.798" endtime="20201115 23:00:58.194"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.205" endtime="20201115 23:00:58.223"></status>
</kw>
<msg timestamp="20201115 23:00:58.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.203" endtime="20201115 23:00:58.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.224" endtime="20201115 23:00:58.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.227" endtime="20201115 23:00:58.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.201" endtime="20201115 23:00:58.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.199" endtime="20201115 23:00:58.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.236" endtime="20201115 23:00:58.523"></status>
</kw>
<msg timestamp="20201115 23:00:58.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024473528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02456675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:58.235" endtime="20201115 23:00:58.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024473528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02456675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:58.527" endtime="20201115 23:00:58.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.535" endtime="20201115 23:00:58.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.232" endtime="20201115 23:00:58.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.231" endtime="20201115 23:00:58.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.542" level="INFO">${RESULT} = [{'time': 0.02456675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.322199999999697e-05, 'source_diff': 9.322199999999697e-05}, {'time': 0.02466175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:58.539" endtime="20201115 23:00:58.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.556" level="INFO">${ACCURACY} = {'time': [0.02456675, 0.02466175, 0.024756778, 0.024851778, 0.024947778, 0.025043764, 0.025139778, 0.025234792, 0.025329806, 0.025424792, 0.025520806, 0.025616806, 0.025712875, 0.025807819, 0.02590286...</msg>
<status status="PASS" starttime="20201115 23:00:58.543" endtime="20201115 23:00:58.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.560" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.559" endtime="20201115 23:00:58.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.563" level="INFO">VALUE: [9.322199999999697e-05, 9.291699999999792e-05, 9.293100000000096e-05, 9.290300000000182e-05, 9.363899999999953e-05, 9.361100000000039e-05, 9.366700000000214e-05, 9.290299999999835e-05, 9.290299999999835e-05, 9.288900000000225e-05, 9.36529999999991e-05, 9.363899999999953e-05, 9.362499999999996e-05, 9.308300000000075e-05, 9.304199999999804e-05, 9.362499999999996e-05, 9.29720000000002e-05, 9.288900000000225e-05, 9.372200000000094e-05, 9.286099999999964e-05, 9.309699999999685e-05, 9.299999999999933e-05, 9.277800000000169e-05, 9.280600000000083e-05, 9.295799999999715e-05, 9.374999999999661e-05, 9.293099999999749e-05, 9.297299999999967e-05, 9.305500000000161e-05, 9.311099999999989e-05, 9.341599999999894e-05, 9.295799999999715e-05, 9.312499999999946e-05, 9.279100000000179e-05, 9.361100000000039e-05, 9.294400000000105e-05, 9.302800000000194e-05, 9.358300000000125e-05, 9.288900000000225e-05, 9.36529999999991e-05, 9.358299999999778e-05, 9.291699999999792e-05, 9.272199999999994e-05, 9.299999999999933e-05, 9.284799999999954e-05, 9.313899999999903e-05, 9.297299999999967e-05, 9.363899999999953e-05, 9.372200000000094e-05, 9.279100000000179e-05]</msg>
<status status="PASS" starttime="20201115 23:00:58.561" endtime="20201115 23:00:58.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.557" endtime="20201115 23:00:58.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.566" endtime="20201115 23:00:58.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.569" endtime="20201115 23:00:58.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.568" endtime="20201115 23:00:58.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.564" endtime="20201115 23:00:58.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.197" endtime="20201115 23:00:58.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.195" endtime="20201115 23:00:58.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.194" endtime="20201115 23:00:58.591"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.593" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.602" endtime="20201115 23:00:58.621"></status>
</kw>
<msg timestamp="20201115 23:00:58.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.600" endtime="20201115 23:00:58.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.622" endtime="20201115 23:00:58.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.625" endtime="20201115 23:00:58.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.597" endtime="20201115 23:00:58.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.595" endtime="20201115 23:00:58.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.634" endtime="20201115 23:00:58.920"></status>
</kw>
<msg timestamp="20201115 23:00:58.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025233292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025327194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.633" endtime="20201115 23:00:58.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025233292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025327194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.924" endtime="20201115 23:00:58.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.933" endtime="20201115 23:00:58.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.630" endtime="20201115 23:00:58.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.628" endtime="20201115 23:00:58.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.939" level="INFO">${RESULT} = [{'time': 0.025327194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.390199999999987e-05, 'source_diff': 9.390199999999987e-05}, {'time': 0.025423194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:58.936" endtime="20201115 23:00:58.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.953" level="INFO">${ACCURACY} = {'time': [0.025327194, 0.025423194, 0.025519264, 0.025615222, 0.025712292, 0.025809222, 0.025906236, 0.026002236, 0.02609825, 0.026194264, 0.026291264, 0.026387264, 0.026484278, 0.026580278, 0.0266762...</msg>
<status status="PASS" starttime="20201115 23:00:58.940" endtime="20201115 23:00:58.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.957" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.956" endtime="20201115 23:00:58.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.960" level="INFO">VALUE: [9.390199999999987e-05, 9.370800000000137e-05, 9.394500000000153e-05, 9.392999999999901e-05, 9.469500000000228e-05, 9.462500000000096e-05, 9.454199999999954e-05, 9.390300000000282e-05, 9.39720000000012e-05, 9.379199999999879e-05, 9.462500000000096e-05, 9.408300000000175e-05, 9.448600000000126e-05, 9.375000000000008e-05, 9.393100000000196e-05, 9.381999999999793e-05, 9.476400000000065e-05, 9.387500000000021e-05, 9.380599999999836e-05, 9.458299999999878e-05, 9.40139999999999e-05, 9.404099999999957e-05, 9.405499999999914e-05, 9.46530000000001e-05, 9.47079999999989e-05, 9.412499999999699e-05, 9.397199999999772e-05, 9.468099999999924e-05, 9.408300000000175e-05, 9.376399999999965e-05, 9.456999999999868e-05, 9.472299999999795e-05, 9.462499999999749e-05, 9.400000000000033e-05, 9.404199999999904e-05, 9.381900000000193e-05, 9.46660000000002e-05, 9.46940000000028e-05, 9.391700000000239e-05, 9.461099999999792e-05, 9.391700000000239e-05, 9.462500000000096e-05, 9.463900000000053e-05, 9.388899999999978e-05, 9.473599999999804e-05, 9.458299999999878e-05, 9.455599999999911e-05, 9.473599999999804e-05, 9.404199999999904e-05, 9.391699999999892e-05]</msg>
<status status="PASS" starttime="20201115 23:00:58.959" endtime="20201115 23:00:58.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.954" endtime="20201115 23:00:58.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.963" endtime="20201115 23:00:58.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.967" endtime="20201115 23:00:58.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.965" endtime="20201115 23:00:58.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.961" endtime="20201115 23:00:58.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.594" endtime="20201115 23:00:58.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.592" endtime="20201115 23:00:58.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.591" endtime="20201115 23:00:58.988"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.991" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.999" endtime="20201115 23:00:59.018"></status>
</kw>
<msg timestamp="20201115 23:00:59.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.997" endtime="20201115 23:00:59.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.020" endtime="20201115 23:00:59.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.022" endtime="20201115 23:00:59.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.995" endtime="20201115 23:00:59.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.993" endtime="20201115 23:00:59.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.032" endtime="20201115 23:00:59.317"></status>
</kw>
<msg timestamp="20201115 23:00:59.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025884139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025979028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.030" endtime="20201115 23:00:59.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025884139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025979028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.321" endtime="20201115 23:00:59.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.330" endtime="20201115 23:00:59.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.027" endtime="20201115 23:00:59.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.026" endtime="20201115 23:00:59.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.337" level="INFO">${RESULT} = [{'time': 0.025979028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.488900000000078e-05, 'source_diff': 9.488900000000078e-05}, {'time': 0.026076042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:59.333" endtime="20201115 23:00:59.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.351" level="INFO">${ACCURACY} = {'time': [0.025979028, 0.026076042, 0.026173042, 0.026270042, 0.026368056, 0.026465056, 0.026562083, 0.026660083, 0.026758083, 0.026855111, 0.026952111, 0.027049167, 0.027146111, 0.027244125, 0.027341...</msg>
<status status="PASS" starttime="20201115 23:00:59.338" endtime="20201115 23:00:59.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.356" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.355" endtime="20201115 23:00:59.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.359" level="INFO">VALUE: [9.488900000000078e-05, 9.498600000000176e-05, 9.486100000000164e-05, 9.505599999999961e-05, 9.562500000000196e-05, 9.50140000000009e-05, 9.494399999999958e-05, 9.559700000000282e-05, 9.556900000000021e-05, 9.504200000000004e-05, 9.484700000000207e-05, 9.494499999999906e-05, 9.484700000000207e-05, 9.554200000000054e-05, 9.537500000000171e-05, 9.563900000000153e-05, 9.490300000000035e-05, 9.500000000000133e-05, 9.491699999999992e-05, 9.570899999999938e-05, 9.476400000000065e-05, 9.479199999999979e-05, 9.493099999999949e-05, 9.573600000000251e-05, 9.558299999999978e-05, 9.484700000000207e-05, 9.49720000000022e-05, 9.569400000000033e-05, 9.569400000000033e-05, 9.565299999999763e-05, 9.513899999999756e-05, 9.508299999999928e-05, 9.498600000000176e-05, 9.566700000000067e-05, 9.509699999999885e-05, 9.493100000000296e-05, 9.565299999999763e-05, 9.490300000000035e-05, 9.568100000000024e-05, 9.55270000000015e-05, 9.483299999999903e-05, 9.487499999999774e-05, 9.562499999999849e-05, 9.48469999999986e-05, 9.572199999999947e-05, 9.509699999999885e-05, 9.559699999999935e-05, 9.537500000000171e-05, 9.508299999999928e-05, 9.512499999999799e-05]</msg>
<status status="PASS" starttime="20201115 23:00:59.357" endtime="20201115 23:00:59.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.352" endtime="20201115 23:00:59.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.362" endtime="20201115 23:00:59.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.366" endtime="20201115 23:00:59.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.364" endtime="20201115 23:00:59.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.361" endtime="20201115 23:00:59.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.991" endtime="20201115 23:00:59.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.989" endtime="20201115 23:00:59.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.989" endtime="20201115 23:00:59.387"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.389" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.397" endtime="20201115 23:00:59.416"></status>
</kw>
<msg timestamp="20201115 23:00:59.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.396" endtime="20201115 23:00:59.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.418" endtime="20201115 23:00:59.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.420" endtime="20201115 23:00:59.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.393" endtime="20201115 23:00:59.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.391" endtime="20201115 23:00:59.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.430" endtime="20201115 23:00:59.716"></status>
</kw>
<msg timestamp="20201115 23:00:59.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024362181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024458222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.428" endtime="20201115 23:00:59.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024362181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024458222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.720" endtime="20201115 23:00:59.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.728" endtime="20201115 23:00:59.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.425" endtime="20201115 23:00:59.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.424" endtime="20201115 23:00:59.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.735" level="INFO">${RESULT} = [{'time': 0.024458222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.604100000000157e-05, 'source_diff': 9.604100000000157e-05}, {'time': 0.024556319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:59.732" endtime="20201115 23:00:59.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.749" level="INFO">${ACCURACY} = {'time': [0.024458222, 0.024556319, 0.024654292, 0.024753264, 0.024851264, 0.024950264, 0.025048278, 0.025147278, 0.025246278, 0.025345306, 0.025443306, 0.025541319, 0.025639306, 0.025738375, 0.025836...</msg>
<status status="PASS" starttime="20201115 23:00:59.736" endtime="20201115 23:00:59.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.753" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.752" endtime="20201115 23:00:59.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.756" level="INFO">VALUE: [9.604100000000157e-05, 9.594400000000058e-05, 9.616700000000117e-05, 9.657000000000068e-05, 9.612500000000246e-05, 9.674999999999961e-05, 9.58469999999996e-05, 9.673600000000004e-05, 9.661099999999992e-05, 9.666700000000167e-05, 9.572299999999895e-05, 9.58469999999996e-05, 9.579200000000079e-05, 9.666700000000167e-05, 9.581900000000046e-05, 9.668100000000124e-05, 9.673600000000004e-05, 9.593000000000101e-05, 9.669400000000133e-05, 9.654200000000154e-05, 9.587499999999874e-05, 9.663899999999906e-05, 9.668100000000124e-05, 9.580600000000036e-05, 9.586099999999917e-05, 9.595899999999963e-05, 9.638899999999881e-05, 9.66799999999983e-05, 9.665199999999916e-05, 9.663900000000253e-05, 9.581899999999699e-05, 9.613899999999856e-05, 9.655500000000164e-05, 9.597199999999972e-05, 9.587500000000221e-05, 9.601399999999843e-05, 9.595800000000015e-05, 9.645799999999718e-05, 9.594500000000006e-05, 9.58469999999996e-05, 9.588899999999831e-05, 9.599999999999886e-05, 9.59859999999993e-05, 9.668100000000124e-05, 9.608399999999975e-05, 9.672200000000047e-05, 9.666599999999873e-05, 9.611099999999942e-05, 9.595800000000015e-05, 9.586100000000264e-05]</msg>
<status status="PASS" starttime="20201115 23:00:59.754" endtime="20201115 23:00:59.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.750" endtime="20201115 23:00:59.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.759" endtime="20201115 23:00:59.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.763" endtime="20201115 23:00:59.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.761" endtime="20201115 23:00:59.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.758" endtime="20201115 23:00:59.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.390" endtime="20201115 23:00:59.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.388" endtime="20201115 23:00:59.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.387" endtime="20201115 23:00:59.784"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.786" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.795" endtime="20201115 23:00:59.813"></status>
</kw>
<msg timestamp="20201115 23:00:59.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.793" endtime="20201115 23:00:59.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.815" endtime="20201115 23:00:59.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.818" endtime="20201115 23:00:59.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.791" endtime="20201115 23:00:59.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.788" endtime="20201115 23:00:59.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.827" endtime="20201115 23:01:00.113"></status>
</kw>
<msg timestamp="20201115 23:01:00.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024297722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024394681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.825" endtime="20201115 23:01:00.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024297722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024394681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.117" endtime="20201115 23:01:00.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.126" endtime="20201115 23:01:00.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.823" endtime="20201115 23:01:00.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.821" endtime="20201115 23:01:00.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.133" level="INFO">${RESULT} = [{'time': 0.024394681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.695900000000063e-05, 'source_diff': 9.695900000000063e-05}, {'time': 0.024493653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:00.129" endtime="20201115 23:01:00.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.147" level="INFO">${ACCURACY} = {'time': [0.024394681, 0.024493653, 0.024592667, 0.024692681, 0.024791667, 0.024891681, 0.024990681, 0.025089694, 0.025188694, 0.025287736, 0.025386708, 0.025485722, 0.025585722, 0.025685736, 0.025785...</msg>
<status status="PASS" starttime="20201115 23:01:00.134" endtime="20201115 23:01:00.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.151" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.150" endtime="20201115 23:01:00.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.154" level="INFO">VALUE: [9.695900000000063e-05, 9.690300000000235e-05, 9.686100000000017e-05, 9.772300000000095e-05, 9.691699999999845e-05, 9.756999999999821e-05, 9.708400000000075e-05, 9.699999999999986e-05, 9.706900000000171e-05, 9.706900000000171e-05, 9.679100000000232e-05, 9.683299999999756e-05, 9.77080000000019e-05, 9.763900000000006e-05, 9.758300000000178e-05, 9.763900000000006e-05, 9.69860000000003e-05, 9.704199999999857e-05, 9.755600000000211e-05, 9.686100000000017e-05, 9.770799999999843e-05, 9.699999999999986e-05, 9.773700000000052e-05, 9.76669999999992e-05, 9.769399999999887e-05, 9.676299999999971e-05, 9.688900000000278e-05, 9.69019999999994e-05, 9.691700000000192e-05, 9.769399999999887e-05, 9.701399999999943e-05, 9.69860000000003e-05, 9.763900000000006e-05, 9.755599999999864e-05, 9.695900000000063e-05, 9.711099999999695e-05, 9.699999999999986e-05, 9.699999999999986e-05, 9.691699999999845e-05, 9.702800000000247e-05, 9.699999999999986e-05, 9.761100000000092e-05, 9.7721999999998e-05, 9.693000000000201e-05, 9.765200000000016e-05, 9.699999999999986e-05, 9.76799999999993e-05, 9.713899999999956e-05, 9.697200000000072e-05, 9.777700000000028e-05]</msg>
<status status="PASS" starttime="20201115 23:01:00.152" endtime="20201115 23:01:00.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.148" endtime="20201115 23:01:00.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.157" endtime="20201115 23:01:00.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.161" endtime="20201115 23:01:00.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.159" endtime="20201115 23:01:00.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.155" endtime="20201115 23:01:00.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.787" endtime="20201115 23:01:00.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.785" endtime="20201115 23:01:00.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.784" endtime="20201115 23:01:00.182"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.184" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.192" endtime="20201115 23:01:00.211"></status>
</kw>
<msg timestamp="20201115 23:01:00.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.191" endtime="20201115 23:01:00.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.213" endtime="20201115 23:01:00.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.215" endtime="20201115 23:01:00.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.188" endtime="20201115 23:01:00.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.186" endtime="20201115 23:01:00.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.225" endtime="20201115 23:01:00.511"></status>
</kw>
<msg timestamp="20201115 23:01:00.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024461514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024559292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.223" endtime="20201115 23:01:00.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024461514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024559292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.515" endtime="20201115 23:01:00.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.524" endtime="20201115 23:01:00.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.220" endtime="20201115 23:01:00.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.219" endtime="20201115 23:01:00.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.531" level="INFO">${RESULT} = [{'time': 0.024559292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777799999999975e-05, 'source_diff': 9.777799999999975e-05}, {'time': 0.024660292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:00.528" endtime="20201115 23:01:00.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.545" level="INFO">${ACCURACY} = {'time': [0.024559292, 0.024660292, 0.024761306, 0.024861306, 0.024961319, 0.025061333, 0.025161347, 0.025261347, 0.025362389, 0.025462347, 0.025562375, 0.025662431, 0.025763375, 0.025863389, 0.025963...</msg>
<status status="PASS" starttime="20201115 23:01:00.532" endtime="20201115 23:01:00.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.549" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.548" endtime="20201115 23:01:00.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.552" level="INFO">VALUE: [9.777799999999975e-05, 9.859800000000182e-05, 9.858399999999878e-05, 9.784800000000107e-05, 9.813799999999762e-05, 9.779100000000332e-05, 9.781899999999899e-05, 9.792999999999955e-05, 9.869499999999934e-05, 9.791599999999998e-05, 9.811099999999795e-05, 9.781999999999846e-05, 9.869399999999987e-05, 9.775000000000061e-05, 9.779199999999932e-05, 9.861100000000192e-05, 9.858399999999878e-05, 9.811199999999742e-05, 9.876399999999771e-05, 9.791699999999945e-05, 9.776300000000071e-05, 9.79020000000004e-05, 9.79860000000013e-05, 9.874999999999814e-05, 9.788900000000031e-05, 9.869399999999987e-05, 9.858299999999931e-05, 9.783299999999856e-05, 9.86800000000003e-05, 9.859699999999888e-05, 9.78609999999977e-05, 9.801400000000043e-05, 9.857000000000268e-05, 9.800000000000086e-05, 9.795899999999816e-05, 9.783399999999803e-05, 9.777700000000028e-05, 9.79730000000012e-05, 9.79860000000013e-05, 9.809699999999838e-05, 9.809699999999838e-05, 9.865199999999769e-05, 9.777799999999975e-05, 9.872200000000247e-05, 9.804199999999957e-05, 9.779199999999932e-05, 9.783299999999856e-05, 9.797200000000172e-05, 9.8721999999999e-05, 9.788900000000031e-05]</msg>
<status status="PASS" starttime="20201115 23:01:00.550" endtime="20201115 23:01:00.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.546" endtime="20201115 23:01:00.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.555" endtime="20201115 23:01:00.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.559" endtime="20201115 23:01:00.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.557" endtime="20201115 23:01:00.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.553" endtime="20201115 23:01:00.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.185" endtime="20201115 23:01:00.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.183" endtime="20201115 23:01:00.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.182" endtime="20201115 23:01:00.580"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.582" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.591" endtime="20201115 23:01:00.610"></status>
</kw>
<msg timestamp="20201115 23:01:00.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.589" endtime="20201115 23:01:00.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.612" endtime="20201115 23:01:00.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.614" endtime="20201115 23:01:00.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.586" endtime="20201115 23:01:00.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.584" endtime="20201115 23:01:00.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.624" endtime="20201115 23:01:00.910"></status>
</kw>
<msg timestamp="20201115 23:01:00.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025140528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0252395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:00.622" endtime="20201115 23:01:00.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025140528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0252395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:00.915" endtime="20201115 23:01:00.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.923" endtime="20201115 23:01:00.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.619" endtime="20201115 23:01:00.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.618" endtime="20201115 23:01:00.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.930" level="INFO">${RESULT} = [{'time': 0.0252395, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.897200000000272e-05, 'source_diff': 9.897200000000272e-05}, {'time': 0.025340514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:00.926" endtime="20201115 23:01:00.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.944" level="INFO">${ACCURACY} = {'time': [0.0252395, 0.025340514, 0.025441514, 0.0255425, 0.025643514, 0.025745528, 0.025847528, 0.025948542, 0.026049542, 0.026150556, 0.026252569, 0.026353569, 0.026454569, 0.026555597, 0.026656583,...</msg>
<status status="PASS" starttime="20201115 23:01:00.931" endtime="20201115 23:01:00.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.949" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.948" endtime="20201115 23:01:00.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.951" level="INFO">VALUE: [9.897200000000272e-05, 9.888900000000131e-05, 9.915299999999766e-05, 9.890300000000088e-05, 9.898599999999882e-05, 9.970899999999991e-05, 9.968100000000077e-05, 9.908400000000275e-05, 9.881999999999946e-05, 9.89869999999983e-05, 9.973599999999957e-05, 9.88609999999987e-05, 9.897199999999926e-05, 9.890300000000088e-05, 9.887500000000174e-05, 9.95549999999977e-05, 9.911099999999895e-05, 9.96800000000013e-05, 9.911099999999895e-05, 9.965300000000163e-05, 9.897199999999926e-05, 9.961099999999945e-05, 9.909699999999938e-05, 9.966599999999826e-05, 9.901400000000143e-05, 9.958399999999978e-05, 9.966599999999826e-05, 9.901400000000143e-05, 9.969400000000087e-05, 9.908299999999981e-05, 9.962499999999902e-05, 9.956900000000074e-05, 9.897199999999926e-05, 9.95280000000015e-05, 9.897200000000272e-05, 9.969500000000034e-05, 9.909699999999938e-05, 9.887499999999827e-05, 9.9028000000001e-05, 9.89999999999984e-05, 9.963799999999912e-05, 9.907000000000318e-05, 9.890299999999741e-05, 9.895899999999916e-05, 9.890199999999794e-05, 9.898599999999882e-05, 9.900000000000186e-05, 9.958300000000031e-05, 9.959699999999988e-05, 9.900000000000186e-05]</msg>
<status status="PASS" starttime="20201115 23:01:00.950" endtime="20201115 23:01:00.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.945" endtime="20201115 23:01:00.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.954" endtime="20201115 23:01:00.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.958" endtime="20201115 23:01:00.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.956" endtime="20201115 23:01:00.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.953" endtime="20201115 23:01:00.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.583" endtime="20201115 23:01:00.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.581" endtime="20201115 23:01:00.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.580" endtime="20201115 23:01:00.979"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.981" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.990" endtime="20201115 23:01:01.008"></status>
</kw>
<msg timestamp="20201115 23:01:01.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.988" endtime="20201115 23:01:01.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.009" endtime="20201115 23:01:01.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.012" endtime="20201115 23:01:01.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.985" endtime="20201115 23:01:01.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.983" endtime="20201115 23:01:01.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.021" endtime="20201115 23:01:01.325"></status>
</kw>
<msg timestamp="20201115 23:01:01.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024029708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024130236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.020" endtime="20201115 23:01:01.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024029708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024130236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.329" endtime="20201115 23:01:01.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.338" endtime="20201115 23:01:01.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.017" endtime="20201115 23:01:01.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.015" endtime="20201115 23:01:01.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.344" level="INFO">${RESULT} = [{'time': 0.024130236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010052799999999903, 'source_diff': 0.00010052799999999903}, {'time': 0.024232236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:01.341" endtime="20201115 23:01:01.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.357" level="INFO">${ACCURACY} = {'time': [0.024130236, 0.024232236, 0.02433425, 0.024436264, 0.024539278, 0.024642264, 0.024744278, 0.024847333, 0.024949306, 0.025052319, 0.025154319, 0.025257319, 0.025359319, 0.025461389, 0.0255643...</msg>
<status status="PASS" starttime="20201115 23:01:01.345" endtime="20201115 23:01:01.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.362" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.361" endtime="20201115 23:01:01.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.364" level="INFO">VALUE: [0.00010052799999999903, 0.00010006900000000124, 9.99860000000033e-05, 9.982000000000046e-05, 0.00010073600000000058, 0.00010069500000000134, 0.00010038900000000281, 0.00010072199999999754, 0.00010007000000000071, 0.00010059700000000088, 9.98609999999997e-05, 0.00010070800000000144, 9.99020000000024e-05, 9.994500000000059e-05, 0.00010063900000000306, 9.98060000000009e-05, 0.00010008300000000081, 9.980500000000142e-05, 0.00010011099999999995, 0.00010005600000000114, 0.00010063899999999959, 0.00010062500000000002, 0.00010065299999999916, 9.984700000000013e-05, 0.00010006999999999724, 0.00010062500000000002, 9.984700000000013e-05, 0.00010011199999999942, 9.997200000000026e-05, 9.98609999999997e-05, 9.974999999999914e-05, 0.00010066599999999926, 9.981900000000099e-05, 0.00010066699999999873, 0.00010055500000000217, 0.00010063899999999959, 0.0001004999999999999, 0.00010063899999999959, 0.00010058299999999784, 9.977800000000175e-05, 0.00010062500000000002, 0.00010005600000000114, 0.00010061100000000045, 9.98609999999997e-05, 9.997200000000026e-05, 0.00010006899999999777, 0.0001006800000000023, 0.0001006939999999984, 0.00010061100000000045, 0.0001000549999999982]</msg>
<status status="PASS" starttime="20201115 23:01:01.363" endtime="20201115 23:01:01.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.358" endtime="20201115 23:01:01.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.368" endtime="20201115 23:01:01.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.371" endtime="20201115 23:01:01.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.369" endtime="20201115 23:01:01.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.366" endtime="20201115 23:01:01.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.982" endtime="20201115 23:01:01.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.980" endtime="20201115 23:01:01.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.979" endtime="20201115 23:01:01.392"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.394" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.403" endtime="20201115 23:01:01.422"></status>
</kw>
<msg timestamp="20201115 23:01:01.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.402" endtime="20201115 23:01:01.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.424" endtime="20201115 23:01:01.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.426" endtime="20201115 23:01:01.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.399" endtime="20201115 23:01:01.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.396" endtime="20201115 23:01:01.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.435" endtime="20201115 23:01:01.723"></status>
</kw>
<msg timestamp="20201115 23:01:01.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025032097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025133528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.434" endtime="20201115 23:01:01.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025032097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025133528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.727" endtime="20201115 23:01:01.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.736" endtime="20201115 23:01:01.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.431" endtime="20201115 23:01:01.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.429" endtime="20201115 23:01:01.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.743" level="INFO">${RESULT} = [{'time': 0.025133528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010143099999999905, 'source_diff': 0.00010143099999999905}, {'time': 0.025236528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:01.739" endtime="20201115 23:01:01.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.756" level="INFO">${ACCURACY} = {'time': [0.025133528, 0.025236528, 0.025339528, 0.025443556, 0.025546625, 0.025649569, 0.025753583, 0.025856569, 0.025960583, 0.026063611, 0.026166611, 0.026269611, 0.026372639, 0.026476611, 0.026579...</msg>
<status status="PASS" starttime="20201115 23:01:01.744" endtime="20201115 23:01:01.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.761" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.760" endtime="20201115 23:01:01.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.764" level="INFO">VALUE: [0.00010143099999999905, 0.0001008060000000019, 0.0001010419999999991, 0.00010162499999999755, 0.00010093099999999855, 0.00010104099999999963, 0.00010158299999999884, 0.00010092999999999908, 0.0001016939999999994, 0.00010092999999999908, 0.00010079199999999885, 0.00010112499999999705, 0.00010082000000000146, 0.00010163900000000059, 0.00010075000000000014, 0.00010108300000000181, 0.00010087500000000027, 0.00010107000000000171, 0.00010101399999999996, 0.0001009870000000003, 0.00010093099999999855, 0.00010168100000000277, 0.0001009159999999995, 0.00010161100000000145, 0.00010105500000000267, 0.00010172199999999854, 0.00010106999999999824, 0.00010102799999999953, 0.00010170900000000191, 0.00010176400000000071, 0.00010098600000000083, 0.00010090299999999941, 0.00010168100000000277, 0.00010084700000000113, 0.00010083400000000103, 0.00010155599999999917, 0.0001008060000000019, 0.00010081899999999852, 0.00010116599999999976, 0.00010092999999999908, 0.00010077699999999981, 0.0001015549999999997, 0.00010156899999999927, 0.00010133299999999859, 0.00010090299999999941, 0.00010176299999999777, 0.0001010419999999991, 0.00010091700000000245, 0.00010088899999999984, 0.00010094499999999812]</msg>
<status status="PASS" starttime="20201115 23:01:01.762" endtime="20201115 23:01:01.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.757" endtime="20201115 23:01:01.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.767" endtime="20201115 23:01:01.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.771" endtime="20201115 23:01:01.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.769" endtime="20201115 23:01:01.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.765" endtime="20201115 23:01:01.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.395" endtime="20201115 23:01:01.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.393" endtime="20201115 23:01:01.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.392" endtime="20201115 23:01:01.792"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.795" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.804" endtime="20201115 23:01:01.823"></status>
</kw>
<msg timestamp="20201115 23:01:01.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.802" endtime="20201115 23:01:01.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.825" endtime="20201115 23:01:01.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.828" endtime="20201115 23:01:01.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.799" endtime="20201115 23:01:01.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.797" endtime="20201115 23:01:01.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.837" endtime="20201115 23:01:02.143"></status>
</kw>
<msg timestamp="20201115 23:01:02.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025554722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025656917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.836" endtime="20201115 23:01:02.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025554722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025656917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.148" endtime="20201115 23:01:02.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.156" endtime="20201115 23:01:02.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.833" endtime="20201115 23:01:02.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.831" endtime="20201115 23:01:02.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.163" level="INFO">${RESULT} = [{'time': 0.025656917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010219500000000284, 'source_diff': 0.00010219500000000284}, {'time': 0.025760889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:02.159" endtime="20201115 23:01:02.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.176" level="INFO">${ACCURACY} = {'time': [0.025656917, 0.025760889, 0.025864889, 0.025969917, 0.026073903, 0.026177931, 0.026281931, 0.026385931, 0.026490944, 0.026594958, 0.026698958, 0.026802958, 0.026907972, 0.027012, 0.027115986...</msg>
<status status="PASS" starttime="20201115 23:01:02.164" endtime="20201115 23:01:02.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.181" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.180" endtime="20201115 23:01:02.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.184" level="INFO">VALUE: [0.00010219500000000284, 0.00010193099999999955, 0.00010199999999999793, 0.00010276399999999825, 0.00010197199999999879, 0.00010213900000000109, 0.00010187500000000127, 0.00010193100000000302, 0.00010259699999999941, 0.00010204099999999716, 0.00010197199999999879, 0.00010193000000000008, 0.00010263899999999812, 0.0001018060000000029, 0.00010209700000000238, 0.00010211099999999848, 0.00010175000000000115, 0.00010258299999999984, 0.0001020420000000001, 0.00010190300000000041, 0.00010202800000000053, 0.00010206999999999924, 0.0001018480000000016, 0.00010265300000000116, 0.0001018610000000017, 0.00010265200000000169, 0.00010254099999999766, 0.0001026940000000004, 0.00010211099999999848, 0.00010215300000000066, 0.00010256900000000027, 0.00010268000000000083, 0.00010198599999999836, 0.00010261099999999898, 0.00010255600000000017, 0.00010206899999999977, 0.00010176400000000071, 0.00010195899999999869, 0.00010197300000000173, 0.00010263900000000159, 0.00010195799999999922, 0.00010180499999999995, 0.00010273600000000258, 0.0001018610000000017, 0.00010263900000000159, 0.00010188900000000084, 0.00010270799999999997, 0.00010181899999999952, 0.00010265300000000116, 0.00010198599999999836]</msg>
<status status="PASS" starttime="20201115 23:01:02.182" endtime="20201115 23:01:02.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.177" endtime="20201115 23:01:02.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.188" endtime="20201115 23:01:02.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.191" endtime="20201115 23:01:02.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.190" endtime="20201115 23:01:02.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.186" endtime="20201115 23:01:02.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.796" endtime="20201115 23:01:02.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.794" endtime="20201115 23:01:02.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.793" endtime="20201115 23:01:02.213"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.215" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.224" endtime="20201115 23:01:02.244"></status>
</kw>
<msg timestamp="20201115 23:01:02.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.222" endtime="20201115 23:01:02.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.245" endtime="20201115 23:01:02.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.248" endtime="20201115 23:01:02.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.219" endtime="20201115 23:01:02.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.217" endtime="20201115 23:01:02.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.258" endtime="20201115 23:01:02.546"></status>
</kw>
<msg timestamp="20201115 23:01:02.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025740861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025843819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.256" endtime="20201115 23:01:02.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025740861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025843819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.551" endtime="20201115 23:01:02.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.559" endtime="20201115 23:01:02.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.253" endtime="20201115 23:01:02.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.251" endtime="20201115 23:01:02.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.565" level="INFO">${RESULT} = [{'time': 0.025843819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010295800000000022, 'source_diff': 0.00010295800000000022}, {'time': 0.025948861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:02.562" endtime="20201115 23:01:02.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.580" level="INFO">${ACCURACY} = {'time': [0.025843819, 0.025948861, 0.026053847, 0.026159833, 0.026265847, 0.026371861, 0.026477861, 0.026583875, 0.026689875, 0.026795903, 0.026901903, 0.027007917, 0.027113917, 0.027218917, 0.027324...</msg>
<status status="PASS" starttime="20201115 23:01:02.566" endtime="20201115 23:01:02.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.584" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.583" endtime="20201115 23:01:02.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.587" level="INFO">VALUE: [0.00010295800000000022, 0.00010306900000000077, 0.0001030550000000012, 0.00010366599999999879, 0.00010358299999999737, 0.00010367999999999836, 0.00010365299999999869, 0.0001036810000000013, 0.00010359699999999694, 0.0001035559999999977, 0.00010366700000000173, 0.00010362499999999955, 0.00010358400000000031, 0.00010308399999999981, 0.00010361099999999998, 0.00010295899999999969, 0.00010361099999999998, 0.00010284699999999966, 0.00010304100000000163, 0.00010283300000000009, 0.00010295800000000022, 0.00010372200000000054, 0.00010284799999999913, 0.00010274999999999868, 0.0001030420000000011, 0.00010290300000000141, 0.00010302800000000154, 0.00010290300000000141, 0.00010290299999999794, 0.00010293100000000055, 0.00010359799999999988, 0.00010280599999999696, 0.00010277699999999834, 0.00010362499999999955, 0.00010273600000000258, 0.0001035550000000017, 0.00010297300000000273, 0.00010359700000000041, 0.00010313899999999862, 0.00010372200000000054, 0.00010312499999999905, 0.00010290299999999794, 0.0001030139999999985, 0.00010284799999999913, 0.00010308399999999981, 0.00010284799999999913, 0.00010366699999999826, 0.00010305600000000067, 0.00010294400000000065, 0.00010367999999999836]</msg>
<status status="PASS" starttime="20201115 23:01:02.585" endtime="20201115 23:01:02.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.581" endtime="20201115 23:01:02.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.590" endtime="20201115 23:01:02.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.594" endtime="20201115 23:01:02.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.592" endtime="20201115 23:01:02.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.589" endtime="20201115 23:01:02.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.216" endtime="20201115 23:01:02.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.214" endtime="20201115 23:01:02.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.213" endtime="20201115 23:01:02.615"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.617" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.625" endtime="20201115 23:01:02.646"></status>
</kw>
<msg timestamp="20201115 23:01:02.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.624" endtime="20201115 23:01:02.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.647" endtime="20201115 23:01:02.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.650" endtime="20201115 23:01:02.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.621" endtime="20201115 23:01:02.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.619" endtime="20201115 23:01:02.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.659" endtime="20201115 23:01:02.961"></status>
</kw>
<msg timestamp="20201115 23:01:02.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024513181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024617417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.657" endtime="20201115 23:01:02.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024513181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024617417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.966" endtime="20201115 23:01:02.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.974" endtime="20201115 23:01:02.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.654" endtime="20201115 23:01:02.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.653" endtime="20201115 23:01:02.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.980" level="INFO">${RESULT} = [{'time': 0.024617417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001042360000000006, 'source_diff': 0.0001042360000000006}, {'time': 0.024723431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:02.977" endtime="20201115 23:01:02.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.994" level="INFO">${ACCURACY} = {'time': [0.024617417, 0.024723431, 0.024829444, 0.024935472, 0.025041444, 0.025148472, 0.025254458, 0.025360458, 0.025467528, 0.025573486, 0.0256795, 0.0257855, 0.025891514, 0.025997514, 0.026103528,...</msg>
<status status="PASS" starttime="20201115 23:01:02.982" endtime="20201115 23:01:02.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.999" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.997" endtime="20201115 23:01:02.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.001" level="INFO">VALUE: [0.0001042360000000006, 0.00010397300000000026, 0.00010394399999999818, 0.00010412500000000005, 0.00010380499999999848, 0.00010462500000000055, 0.00010380500000000195, 0.00010376399999999925, 0.00010466699999999926, 0.0001040689999999983, 0.00010390300000000241, 0.0001040559999999982, 0.00010402800000000254, 0.00010404199999999864, 0.00010388899999999937, 0.00010393099999999808, 0.00010383400000000056, 0.0001040139999999995, 0.00010458399999999785, 0.00010399999999999993, 0.00010454099999999966, 0.00010390200000000294, 0.00010461100000000098, 0.00010388899999999937, 0.00010381900000000152, 0.00010399999999999993, 0.00010388899999999937, 0.00010397199999999732, 0.00010402799999999907, 0.00010399999999999993, 0.00010461100000000098, 0.0001037360000000001, 0.00010409800000000038, 0.00010466699999999926, 0.00010394400000000165, 0.0001038619999999997, 0.00010413899999999962, 0.00010401300000000002, 0.00010399999999999993, 0.00010456900000000227, 0.00010462500000000055, 0.00010390299999999894, 0.00010386100000000023, 0.00010393099999999808, 0.00010408300000000134, 0.00010462500000000055, 0.00010394500000000112, 0.00010472200000000154, 0.00010384800000000013, 0.00010461100000000098]</msg>
<status status="PASS" starttime="20201115 23:01:03.000" endtime="20201115 23:01:03.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.995" endtime="20201115 23:01:03.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.004" endtime="20201115 23:01:03.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.008" endtime="20201115 23:01:03.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.006" endtime="20201115 23:01:03.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.003" endtime="20201115 23:01:03.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.618" endtime="20201115 23:01:03.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.616" endtime="20201115 23:01:03.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.615" endtime="20201115 23:01:03.029"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.031" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.039" endtime="20201115 23:01:03.058"></status>
</kw>
<msg timestamp="20201115 23:01:03.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.038" endtime="20201115 23:01:03.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.060" endtime="20201115 23:01:03.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.063" endtime="20201115 23:01:03.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.035" endtime="20201115 23:01:03.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.033" endtime="20201115 23:01:03.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.072" endtime="20201115 23:01:03.358"></status>
</kw>
<msg timestamp="20201115 23:01:03.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024128778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024233694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.070" endtime="20201115 23:01:03.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024128778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024233694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.362" endtime="20201115 23:01:03.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.371" endtime="20201115 23:01:03.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.068" endtime="20201115 23:01:03.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.066" endtime="20201115 23:01:03.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.377" level="INFO">${RESULT} = [{'time': 0.024233694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010491600000000004, 'source_diff': 0.00010491600000000004}, {'time': 0.024340708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:03.374" endtime="20201115 23:01:03.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.390" level="INFO">${ACCURACY} = {'time': [0.024233694, 0.024340708, 0.024447722, 0.024554778, 0.024661722, 0.024768736, 0.024875736, 0.02498275, 0.025089764, 0.025197778, 0.025305833, 0.025412792, 0.025519792, 0.025626792, 0.0257338...</msg>
<status status="PASS" starttime="20201115 23:01:03.378" endtime="20201115 23:01:03.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.395" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.394" endtime="20201115 23:01:03.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.397" level="INFO">VALUE: [0.00010491600000000004, 0.00010486099999999776, 0.00010483300000000209, 0.00010504199999999964, 0.00010492999999999961, 0.00010492999999999961, 0.00010477799999999982, 0.00010512500000000105, 0.00010480599999999896, 0.00010575000000000168, 0.00010562499999999808, 0.00010484800000000113, 0.0001048339999999981, 0.00010504199999999964, 0.00010495800000000222, 0.00010479099999999991, 0.00010575000000000168, 0.00010513900000000062, 0.00010483300000000209, 0.00010566700000000026, 0.00010481899999999905, 0.00010562499999999808, 0.000105207999999999, 0.00010507000000000224, 0.0001050140000000005, 0.00010572199999999907, 0.00010559700000000241, 0.00010476400000000025, 0.0001048339999999981, 0.00010575000000000168, 0.00010484700000000166, 0.00010497200000000179, 0.00010495800000000222, 0.0001048750000000008, 0.0001048750000000008, 0.00010554100000000066, 0.00010511100000000148, 0.0001057079999999995, 0.00010490299999999994, 0.0001057499999999982, 0.00010566700000000026, 0.00010563899999999765, 0.00010561099999999851, 0.00010488900000000037, 0.00010484800000000113, 0.00010559800000000188, 0.00010562499999999808, 0.00010506900000000277, 0.00010505499999999973, 0.00010480600000000242]</msg>
<status status="PASS" starttime="20201115 23:01:03.396" endtime="20201115 23:01:03.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.391" endtime="20201115 23:01:03.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.400" endtime="20201115 23:01:03.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.404" endtime="20201115 23:01:03.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.402" endtime="20201115 23:01:03.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.399" endtime="20201115 23:01:03.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.032" endtime="20201115 23:01:03.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.030" endtime="20201115 23:01:03.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.029" endtime="20201115 23:01:03.425"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.427" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.435" endtime="20201115 23:01:03.455"></status>
</kw>
<msg timestamp="20201115 23:01:03.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.434" endtime="20201115 23:01:03.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.456" endtime="20201115 23:01:03.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.459" endtime="20201115 23:01:03.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.431" endtime="20201115 23:01:03.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.429" endtime="20201115 23:01:03.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.468" endtime="20201115 23:01:03.754"></status>
</kw>
<msg timestamp="20201115 23:01:03.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024074417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024181042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.466" endtime="20201115 23:01:03.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024074417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024181042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.759" endtime="20201115 23:01:03.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.767" endtime="20201115 23:01:03.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.464" endtime="20201115 23:01:03.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.462" endtime="20201115 23:01:03.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.774" level="INFO">${RESULT} = [{'time': 0.024181042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010662499999999908, 'source_diff': 0.00010662499999999908}, {'time': 0.024289056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:03.770" endtime="20201115 23:01:03.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.787" level="INFO">${ACCURACY} = {'time': [0.024181042, 0.024289056, 0.024397056, 0.024506083, 0.024614069, 0.024722083, 0.024830083, 0.024939097, 0.025048111, 0.025156111, 0.025265139, 0.025373139, 0.025481153, 0.025590139, 0.025699...</msg>
<status status="PASS" starttime="20201115 23:01:03.775" endtime="20201115 23:01:03.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.791" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.790" endtime="20201115 23:01:03.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.794" level="INFO">VALUE: [0.00010662499999999908, 0.0001058339999999991, 0.00010602800000000107, 0.00010662500000000255, 0.00010595799999999975, 0.00010592999999999714, 0.00010583299999999962, 0.00010654100000000166, 0.00010672200000000007, 0.0001060279999999976, 0.00010672200000000007, 0.00010594499999999965, 0.00010580599999999996, 0.00010672200000000007, 0.00010670899999999997, 0.00010598599999999889, 0.00010665299999999822, 0.00010579100000000091, 0.00010600000000000193, 0.00010672200000000007, 0.00010597199999999932, 0.0001065690000000008, 0.00010668000000000136, 0.00010611099999999901, 0.00010581900000000005, 0.00010665300000000169, 0.00010583299999999962, 0.00010577800000000082, 0.00010665300000000169, 0.00010597300000000226, 0.00010657000000000028, 0.00010597299999999879, 0.00010584799999999867, 0.00010609699999999944, 0.00010672200000000007, 0.00010594400000000018, 0.00010663899999999865, 0.00010609699999999944, 0.00010608299999999987, 0.00010666699999999779, 0.00010588900000000137, 0.00010658300000000037, 0.00010668100000000083, 0.00010599999999999846, 0.00010604200000000064, 0.00010590300000000094, 0.00010661099999999951, 0.00010594400000000018, 0.00010587499999999833, 0.00010668100000000083]</msg>
<status status="PASS" starttime="20201115 23:01:03.792" endtime="20201115 23:01:03.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.788" endtime="20201115 23:01:03.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.797" endtime="20201115 23:01:03.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.800" endtime="20201115 23:01:03.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.799" endtime="20201115 23:01:03.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.795" endtime="20201115 23:01:03.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.428" endtime="20201115 23:01:03.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.426" endtime="20201115 23:01:03.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.425" endtime="20201115 23:01:03.821"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.824" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.832" endtime="20201115 23:01:03.852"></status>
</kw>
<msg timestamp="20201115 23:01:03.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.830" endtime="20201115 23:01:03.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.854" endtime="20201115 23:01:03.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.857" endtime="20201115 23:01:03.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.828" endtime="20201115 23:01:03.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.826" endtime="20201115 23:01:03.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.866" endtime="20201115 23:01:04.152"></status>
</kw>
<msg timestamp="20201115 23:01:04.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025458972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025566681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.864" endtime="20201115 23:01:04.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025458972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025566681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.156" endtime="20201115 23:01:04.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.164" endtime="20201115 23:01:04.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.862" endtime="20201115 23:01:04.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.860" endtime="20201115 23:01:04.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.171" level="INFO">${RESULT} = [{'time': 0.025566681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010770900000000097, 'source_diff': 0.00010770900000000097}, {'time': 0.025675667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:04.168" endtime="20201115 23:01:04.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.185" level="INFO">${ACCURACY} = {'time': [0.025566681, 0.025675667, 0.025785681, 0.025894764, 0.026003694, 0.026113708, 0.026223736, 0.026333722, 0.026442806, 0.02655275, 0.026661764, 0.026770764, 0.026879778, 0.026988792, 0.0270978...</msg>
<status status="PASS" starttime="20201115 23:01:04.172" endtime="20201115 23:01:04.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.190" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.189" endtime="20201115 23:01:04.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.192" level="INFO">VALUE: [0.00010770900000000097, 0.00010699999999999946, 0.00010762500000000008, 0.00010713899999999915, 0.00010691600000000204, 0.00010767999999999889, 0.00010766700000000226, 0.00010773600000000064, 0.00010697299999999979, 0.00010773600000000064, 0.00010698599999999989, 0.0001070279999999986, 0.00010701399999999903, 0.00010691700000000151, 0.00010679199999999792, 0.00010683300000000062, 0.00010768099999999836, 0.000106901999999999, 0.0001077500000000002, 0.0001075829999999979, 0.00010758300000000137, 0.00010687499999999933, 0.00010772200000000107, 0.00010767999999999889, 0.00010763899999999965, 0.00010698599999999989, 0.00010694500000000065, 0.00010697200000000032, 0.00010763899999999965, 0.00010776299999999683, 0.00010686099999999976, 0.00010759800000000042, 0.00010687499999999933, 0.00010761199999999999, 0.00010774999999999674, 0.00010699999999999946, 0.00010763899999999965, 0.00010684700000000019, 0.00010694400000000118, 0.00010773600000000064, 0.00010772200000000107, 0.00010684700000000019, 0.00010776399999999978, 0.00010690299999999847, 0.00010712499999999958, 0.00010738900000000287, 0.00010695900000000022, 0.00010763899999999965, 0.00010691599999999857, 0.00010770799999999803]</msg>
<status status="PASS" starttime="20201115 23:01:04.191" endtime="20201115 23:01:04.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.186" endtime="20201115 23:01:04.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.195" endtime="20201115 23:01:04.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.199" endtime="20201115 23:01:04.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.197" endtime="20201115 23:01:04.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.194" endtime="20201115 23:01:04.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.824" endtime="20201115 23:01:04.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.823" endtime="20201115 23:01:04.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.822" endtime="20201115 23:01:04.220"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.222" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.231" endtime="20201115 23:01:04.250"></status>
</kw>
<msg timestamp="20201115 23:01:04.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.229" endtime="20201115 23:01:04.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.252" endtime="20201115 23:01:04.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.254" endtime="20201115 23:01:04.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.227" endtime="20201115 23:01:04.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.224" endtime="20201115 23:01:04.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.263" endtime="20201115 23:01:04.549"></status>
</kw>
<msg timestamp="20201115 23:01:04.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024927139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025035139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.262" endtime="20201115 23:01:04.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024927139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025035139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.553" endtime="20201115 23:01:04.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.561" endtime="20201115 23:01:04.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.259" endtime="20201115 23:01:04.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.257" endtime="20201115 23:01:04.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.568" level="INFO">${RESULT} = [{'time': 0.025035139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010800000000000046, 'source_diff': 0.00010800000000000046}, {'time': 0.025145167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:04.565" endtime="20201115 23:01:04.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.581" level="INFO">${ACCURACY} = {'time': [0.025035139, 0.025145167, 0.025255222, 0.025366167, 0.025477181, 0.025588194, 0.025698208, 0.025808194, 0.025918222, 0.026028222, 0.026138222, 0.026248236, 0.026358236, 0.026469264, 0.026579...</msg>
<status status="PASS" starttime="20201115 23:01:04.569" endtime="20201115 23:01:04.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.586" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.585" endtime="20201115 23:01:04.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.588" level="INFO">VALUE: [0.00010800000000000046, 0.00010812500000000058, 0.00010786100000000076, 0.00010869499999999893, 0.00010861200000000099, 0.00010862500000000108, 0.00010786100000000076, 0.00010794399999999871, 0.00010797200000000132, 0.0001078889999999999, 0.00010797199999999785, 0.00010783300000000162, 0.0001077500000000002, 0.00010873599999999817, 0.00010784699999999772, 0.00010873599999999817, 0.00010786100000000076, 0.00010787500000000033, 0.0001078889999999999, 0.00010784800000000067, 0.00010795899999999775, 0.00010779200000000239, 0.00010867999999999989, 0.00010863900000000065, 0.00010858300000000237, 0.00010859699999999847, 0.00010869399999999946, 0.0001080279999999996, 0.0001087219999999986, 0.00010777799999999935, 0.00010777799999999935, 0.0001078889999999999, 0.00010876400000000078, 0.0001078340000000011, 0.00010840299999999997, 0.0001084020000000005, 0.00010859800000000142, 0.00010801400000000003, 0.00010862500000000108, 0.00010793000000000261, 0.00010855499999999976, 0.00010777799999999935, 0.00010807000000000178, 0.00010777799999999935, 0.00010798600000000089, 0.00010862500000000108, 0.00010790300000000294, 0.00010861099999999804, 0.00010807000000000178, 0.00010880500000000001]</msg>
<status status="PASS" starttime="20201115 23:01:04.587" endtime="20201115 23:01:04.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.582" endtime="20201115 23:01:04.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.592" endtime="20201115 23:01:04.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.595" endtime="20201115 23:01:04.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.593" endtime="20201115 23:01:04.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.590" endtime="20201115 23:01:04.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.223" endtime="20201115 23:01:04.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.221" endtime="20201115 23:01:04.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.220" endtime="20201115 23:01:04.617"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.619" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.627" endtime="20201115 23:01:04.647"></status>
</kw>
<msg timestamp="20201115 23:01:04.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.626" endtime="20201115 23:01:04.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.648" endtime="20201115 23:01:04.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.651" endtime="20201115 23:01:04.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.623" endtime="20201115 23:01:04.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.621" endtime="20201115 23:01:04.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.660" endtime="20201115 23:01:04.946"></status>
</kw>
<msg timestamp="20201115 23:01:04.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024247736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024357333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.658" endtime="20201115 23:01:04.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024247736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024357333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.950" endtime="20201115 23:01:04.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.958" endtime="20201115 23:01:04.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.656" endtime="20201115 23:01:04.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.654" endtime="20201115 23:01:04.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.965" level="INFO">${RESULT} = [{'time': 0.024357333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010959699999999947, 'source_diff': 0.00010959699999999947}, {'time': 0.024468264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:04.962" endtime="20201115 23:01:04.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.978" level="INFO">${ACCURACY} = {'time': [0.024357333, 0.024468264, 0.024579278, 0.024690306, 0.024802292, 0.024913306, 0.025024319, 0.025135319, 0.025246389, 0.025358347, 0.025470347, 0.025581375, 0.025692403, 0.025804389, 0.025915...</msg>
<status status="PASS" starttime="20201115 23:01:04.966" endtime="20201115 23:01:04.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.983" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.982" endtime="20201115 23:01:04.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.985" level="INFO">VALUE: [0.00010959699999999947, 0.00010897199999999885, 0.00010901400000000103, 0.00010893099999999961, 0.00010966700000000079, 0.00010897299999999832, 0.00010911099999999854, 0.00010937499999999836, 0.00010905599999999974, 0.00010966600000000132, 0.00010969400000000046, 0.00010905599999999974, 0.00010908399999999888, 0.00010969499999999993, 0.00010893099999999961, 0.00010969499999999993, 0.00010875000000000121, 0.0001088340000000021, 0.00010881999999999906, 0.00010958400000000285, 0.00010900000000000146, 0.00010890300000000047, 0.0001090829999999994, 0.00010911100000000201, 0.00010969400000000046, 0.00010973600000000264, 0.00010888899999999743, 0.00010900000000000146, 0.00010901400000000103, 0.0001095829999999999, 0.0001095829999999999, 0.0001095699999999998, 0.00010893099999999961, 0.00010876400000000078, 0.00010893099999999961, 0.0001097219999999996, 0.00010979100000000144, 0.0001097219999999996, 0.00010956900000000033, 0.00010894399999999971, 0.00010892999999999667, 0.00010890300000000047, 0.00010962499999999861, 0.00010894399999999971, 0.00010973599999999917, 0.00010973599999999917, 0.00010965300000000122, 0.00010937500000000183, 0.00010900000000000146, 0.00010909799999999845]</msg>
<status status="PASS" starttime="20201115 23:01:04.984" endtime="20201115 23:01:04.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.979" endtime="20201115 23:01:04.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.989" endtime="20201115 23:01:04.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.992" endtime="20201115 23:01:05.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.990" endtime="20201115 23:01:05.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.987" endtime="20201115 23:01:05.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.620" endtime="20201115 23:01:05.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.618" endtime="20201115 23:01:05.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.617" endtime="20201115 23:01:05.013"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.015" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.024" endtime="20201115 23:01:05.043"></status>
</kw>
<msg timestamp="20201115 23:01:05.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.022" endtime="20201115 23:01:05.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.045" endtime="20201115 23:01:05.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.047" endtime="20201115 23:01:05.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.020" endtime="20201115 23:01:05.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.018" endtime="20201115 23:01:05.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.056" endtime="20201115 23:01:05.341"></status>
</kw>
<msg timestamp="20201115 23:01:05.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024352931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024463028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.055" endtime="20201115 23:01:05.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024352931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024463028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.346" endtime="20201115 23:01:05.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.354" endtime="20201115 23:01:05.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.052" endtime="20201115 23:01:05.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.050" endtime="20201115 23:01:05.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.360" level="INFO">${RESULT} = [{'time': 0.024463028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011009699999999997, 'source_diff': 0.00011009699999999997}, {'time': 0.024575097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:05.357" endtime="20201115 23:01:05.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.374" level="INFO">${ACCURACY} = {'time': [0.024463028, 0.024575097, 0.024687042, 0.024800125, 0.024912125, 0.025024069, 0.025137083, 0.025250083, 0.025363097, 0.025475097, 0.025588111, 0.025700111, 0.025812139, 0.025925181, 0.026037...</msg>
<status status="PASS" starttime="20201115 23:01:05.361" endtime="20201115 23:01:05.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.378" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.377" endtime="20201115 23:01:05.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.381" level="INFO">VALUE: [0.00011009699999999997, 0.00011004100000000169, 0.00010977799999999788, 0.00011063899999999918, 0.00010983300000000015, 0.0001100549999999978, 0.00011068000000000189, 0.00011061100000000004, 0.00011070800000000103, 0.00010992999999999767, 0.00011056900000000133, 0.0001100830000000004, 0.00010980600000000049, 0.00011077799999999888, 0.00011009699999999997, 0.00011011100000000301, 0.00010976399999999831, 0.00011055600000000124, 0.00010987500000000233, 0.00011059799999999995, 0.00010983300000000015, 0.00010993000000000114, 0.00010979099999999797, 0.00011066599999999885, 0.00011059700000000047, 0.00010991699999999757, 0.00011005500000000126, 0.00011065300000000222, 0.00011012499999999911, 0.00011065300000000222, 0.00010976400000000178, 0.00010993100000000061, 0.00011038899999999893, 0.0001107220000000006, 0.00011066699999999832, 0.00011070800000000103, 0.00011056900000000133, 0.00011011099999999954, 0.00011067999999999842, 0.00011006900000000083, 0.00011062500000000308, 0.0001100549999999978, 0.00011004200000000117, 0.00011004200000000117, 0.00010983300000000015, 0.00011011100000000301, 0.00010986099999999929, 0.00010994500000000018, 0.00010987499999999886, 0.00011055599999999777]</msg>
<status status="PASS" starttime="20201115 23:01:05.379" endtime="20201115 23:01:05.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.374" endtime="20201115 23:01:05.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.384" endtime="20201115 23:01:05.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.388" endtime="20201115 23:01:05.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.386" endtime="20201115 23:01:05.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.383" endtime="20201115 23:01:05.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.016" endtime="20201115 23:01:05.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.014" endtime="20201115 23:01:05.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.013" endtime="20201115 23:01:05.409"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.411" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.419" endtime="20201115 23:01:05.440"></status>
</kw>
<msg timestamp="20201115 23:01:05.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.418" endtime="20201115 23:01:05.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.442" endtime="20201115 23:01:05.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.444" endtime="20201115 23:01:05.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.415" endtime="20201115 23:01:05.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.413" endtime="20201115 23:01:05.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.453" endtime="20201115 23:01:05.739"></status>
</kw>
<msg timestamp="20201115 23:01:05.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025069569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02518125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:05.452" endtime="20201115 23:01:05.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025069569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02518125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:05.743" endtime="20201115 23:01:05.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.752" endtime="20201115 23:01:05.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.449" endtime="20201115 23:01:05.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.448" endtime="20201115 23:01:05.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.758" level="INFO">${RESULT} = [{'time': 0.02518125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011168099999999889, 'source_diff': 0.00011168099999999889}, {'time': 0.025295278, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:05.755" endtime="20201115 23:01:05.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.780" level="INFO">${ACCURACY} = {'time': [0.02518125, 0.025295278, 0.025409264, 0.025522278, 0.025636278, 0.025749292, 0.025863306, 0.025976306, 0.026089306, 0.026202319, 0.026315319, 0.026429347, 0.026542361, 0.026656347, 0.0267693...</msg>
<status status="PASS" starttime="20201115 23:01:05.767" endtime="20201115 23:01:05.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.785" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.784" endtime="20201115 23:01:05.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.787" level="INFO">VALUE: [0.00011168099999999889, 0.0001115700000000018, 0.00011168100000000236, 0.00011099999999999999, 0.00011161099999999757, 0.0001108480000000002, 0.0001117229999999976, 0.00011083400000000063, 0.00011079199999999845, 0.00011075000000000321, 0.00011087499999999986, 0.00011172199999999813, 0.00011113899999999968, 0.00011156899999999886, 0.00011102799999999913, 0.00011170800000000203, 0.00011112500000000011, 0.00011161200000000052, 0.00011173600000000117, 0.00011087499999999986, 0.00011077800000000235, 0.00011095900000000075, 0.00011169399999999899, 0.0001107769999999994, 0.00011074999999999974, 0.00011163800000000071, 0.0001115830000000019, 0.00011154099999999972, 0.00011165299999999975, 0.000111596999999998, 0.00011113899999999968, 0.00011094399999999824, 0.00011159800000000095, 0.00011165299999999975, 0.00011091699999999857, 0.00011080600000000149, 0.00011087499999999986, 0.00011166599999999985, 0.00011076399999999931, 0.00011166599999999985, 0.00011092999999999867, 0.00011095800000000128, 0.00011163900000000018, 0.00011109700000000097, 0.00011076399999999931, 0.00011111100000000054, 0.00011109700000000097, 0.00011088899999999943, 0.00011161100000000104, 0.00011113899999999968]</msg>
<status status="PASS" starttime="20201115 23:01:05.786" endtime="20201115 23:01:05.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.781" endtime="20201115 23:01:05.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.790" endtime="20201115 23:01:05.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.794" endtime="20201115 23:01:05.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.792" endtime="20201115 23:01:05.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.789" endtime="20201115 23:01:05.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.412" endtime="20201115 23:01:05.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.410" endtime="20201115 23:01:05.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.409" endtime="20201115 23:01:05.815"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.817" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.825" endtime="20201115 23:01:05.845"></status>
</kw>
<msg timestamp="20201115 23:01:05.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.824" endtime="20201115 23:01:05.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.847" endtime="20201115 23:01:05.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.849" endtime="20201115 23:01:05.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.821" endtime="20201115 23:01:05.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.819" endtime="20201115 23:01:05.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.858" endtime="20201115 23:01:06.144"></status>
</kw>
<msg timestamp="20201115 23:01:06.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024373306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024485542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.857" endtime="20201115 23:01:06.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024373306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024485542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.149" endtime="20201115 23:01:06.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.157" endtime="20201115 23:01:06.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.854" endtime="20201115 23:01:06.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.852" endtime="20201115 23:01:06.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.164" level="INFO">${RESULT} = [{'time': 0.024485542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001122359999999982, 'source_diff': 0.0001122359999999982}, {'time': 0.024599569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:06.160" endtime="20201115 23:01:06.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.177" level="INFO">${ACCURACY} = {'time': [0.024485542, 0.024599569, 0.024714569, 0.024829569, 0.024943569, 0.025057583, 0.025171611, 0.025285597, 0.025400611, 0.025515611, 0.025630625, 0.025744694, 0.025859639, 0.025974667, 0.026089...</msg>
<status status="PASS" starttime="20201115 23:01:06.165" endtime="20201115 23:01:06.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.181" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.180" endtime="20201115 23:01:06.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.184" level="INFO">VALUE: [0.0001122359999999982, 0.0001117770000000004, 0.0001127359999999987, 0.00011266600000000085, 0.00011183299999999868, 0.00011176400000000031, 0.00011206899999999936, 0.00011201400000000056, 0.00011270799999999956, 0.00011270799999999956, 0.00011256899999999986, 0.00011190199999999706, 0.00011248600000000192, 0.00011268099999999989, 0.0001127090000000025, 0.00011195799999999881, 0.00011193099999999914, 0.0001125420000000002, 0.0001120969999999985, 0.00011270799999999956, 0.00011184699999999825, 0.00011211100000000154, 0.00011256899999999986, 0.00011198600000000142, 0.00011187500000000086, 0.00011265300000000075, 0.0001120419999999997, 0.00011266700000000032, 0.00011188899999999696, 0.00011212500000000111, 0.00011262499999999814, 0.00011202800000000013, 0.00011197300000000132, 0.00011188900000000043, 0.0001124030000000005, 0.000112596999999999, 0.00011269399999999999, 0.00011198600000000142, 0.00011186099999999782, 0.00011198600000000142, 0.00011176400000000031, 0.000111903, 0.00011188900000000043, 0.00011183400000000163, 0.00011251400000000106, 0.00011186100000000129, 0.00011184700000000172, 0.00011192999999999967, 0.00011186099999999782, 0.00011206899999999936]</msg>
<status status="PASS" starttime="20201115 23:01:06.182" endtime="20201115 23:01:06.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.178" endtime="20201115 23:01:06.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.187" endtime="20201115 23:01:06.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.190" endtime="20201115 23:01:06.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.189" endtime="20201115 23:01:06.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.185" endtime="20201115 23:01:06.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.818" endtime="20201115 23:01:06.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.816" endtime="20201115 23:01:06.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.815" endtime="20201115 23:01:06.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.448" endtime="20201115 23:01:06.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.216" endtime="20201115 23:01:06.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.214" endtime="20201115 23:01:06.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.213" endtime="20201115 23:01:06.237"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:00:26.377" endtime="20201115 23:01:06.237" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:44.982" endtime="20201115 23:01:06.242"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:59:42.948" endtime="20201115 23:01:06.254"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
