<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 23:01:12.493" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.056" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:13.064" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:14.191" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:13.054" endtime="20201115 23:01:14.191"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.194" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:14.192" endtime="20201115 23:01:14.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.053" endtime="20201115 23:01:14.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:14.197" endtime="20201115 23:01:14.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.195" endtime="20201115 23:01:14.381"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.394" endtime="20201115 23:01:14.408"></status>
</kw>
<msg timestamp="20201115 23:01:14.408" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.393" endtime="20201115 23:01:14.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.411" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.410" endtime="20201115 23:01:14.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.415" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:14.412" endtime="20201115 23:01:14.415"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:14.390" endtime="20201115 23:01:14.416"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:14.388" endtime="20201115 23:01:14.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.386" endtime="20201115 23:01:14.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:14.420" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:14.420" endtime="20201115 23:01:14.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.418" endtime="20201115 23:01:14.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.385" endtime="20201115 23:01:14.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.385" endtime="20201115 23:01:14.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.422" endtime="20201115 23:01:14.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.383" endtime="20201115 23:01:14.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.425" endtime="20201115 23:01:14.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.382" endtime="20201115 23:01:14.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.051" endtime="20201115 23:01:14.427"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:14.434" endtime="20201115 23:01:14.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.433" endtime="20201115 23:01:14.454"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.468" endtime="20201115 23:01:14.483"></status>
</kw>
<msg timestamp="20201115 23:01:14.483" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.466" endtime="20201115 23:01:14.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.485" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.484" endtime="20201115 23:01:14.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.489" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:14.487" endtime="20201115 23:01:14.489"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:14.463" endtime="20201115 23:01:14.489"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:14.461" endtime="20201115 23:01:14.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.459" endtime="20201115 23:01:14.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:14.494" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:14.493" endtime="20201115 23:01:14.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.491" endtime="20201115 23:01:14.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.458" endtime="20201115 23:01:14.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.458" endtime="20201115 23:01:14.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.496" endtime="20201115 23:01:14.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.456" endtime="20201115 23:01:14.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.455" endtime="20201115 23:01:14.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.431" endtime="20201115 23:01:14.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.506" endtime="20201115 23:01:14.516"></status>
</kw>
<msg timestamp="20201115 23:01:14.517" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.504" endtime="20201115 23:01:14.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.519" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.518" endtime="20201115 23:01:14.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.520" endtime="20201115 23:01:14.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.502" endtime="20201115 23:01:14.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.500" endtime="20201115 23:01:14.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.528" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 23:01:14.527" endtime="20201115 23:01:14.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.530" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 23:01:14.529" endtime="20201115 23:01:14.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.524" endtime="20201115 23:01:14.531"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:14.428" endtime="20201115 23:01:14.532" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:12.604" endtime="20201115 23:01:14.535"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.592" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:14.607" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:15.771" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:14.589" endtime="20201115 23:01:15.772"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.774" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:15.773" endtime="20201115 23:01:15.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.586" endtime="20201115 23:01:15.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.777" endtime="20201115 23:01:15.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.776" endtime="20201115 23:01:15.998"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.010" endtime="20201115 23:01:16.024"></status>
</kw>
<msg timestamp="20201115 23:01:16.025" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.009" endtime="20201115 23:01:16.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.027" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.026" endtime="20201115 23:01:16.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.030" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:16.028" endtime="20201115 23:01:16.031"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:16.006" endtime="20201115 23:01:16.031"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:16.004" endtime="20201115 23:01:16.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.003" endtime="20201115 23:01:16.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:16.036" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:16.035" endtime="20201115 23:01:16.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.033" endtime="20201115 23:01:16.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.002" endtime="20201115 23:01:16.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.002" endtime="20201115 23:01:16.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.037" endtime="20201115 23:01:16.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.000" endtime="20201115 23:01:16.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.040" endtime="20201115 23:01:16.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.999" endtime="20201115 23:01:16.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.583" endtime="20201115 23:01:16.042"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.049" endtime="20201115 23:01:16.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.047" endtime="20201115 23:01:16.070"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.084" endtime="20201115 23:01:16.097"></status>
</kw>
<msg timestamp="20201115 23:01:16.098" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.082" endtime="20201115 23:01:16.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.101" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.099" endtime="20201115 23:01:16.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.104" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:16.102" endtime="20201115 23:01:16.104"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:16.079" endtime="20201115 23:01:16.105"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:16.077" endtime="20201115 23:01:16.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.075" endtime="20201115 23:01:16.105"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:16.111" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:16.110" endtime="20201115 23:01:16.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.106" endtime="20201115 23:01:16.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.074" endtime="20201115 23:01:16.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.073" endtime="20201115 23:01:16.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.114" endtime="20201115 23:01:16.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.072" endtime="20201115 23:01:16.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.070" endtime="20201115 23:01:16.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.046" endtime="20201115 23:01:16.120"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.127" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.147" endtime="20201115 23:01:16.164"></status>
</kw>
<msg timestamp="20201115 23:01:16.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.141" endtime="20201115 23:01:16.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.167" endtime="20201115 23:01:16.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.172" endtime="20201115 23:01:16.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.136" endtime="20201115 23:01:16.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.132" endtime="20201115 23:01:16.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.191" endtime="20201115 23:01:16.487"></status>
</kw>
<msg timestamp="20201115 23:01:16.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.090743236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.090745917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.188" endtime="20201115 23:01:16.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.090743236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.090745917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.491" endtime="20201115 23:01:16.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.500" endtime="20201115 23:01:16.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.182" endtime="20201115 23:01:16.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.179" endtime="20201115 23:01:16.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:16.507" level="INFO">${RESULT} = [{'time': 0.090745917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6809999999904965e-06, 'source_diff': 2.6809999999904965e-06}, {'time': 0.090756694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:16.504" endtime="20201115 23:01:16.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:16.521" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:16.508" endtime="20201115 23:01:16.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.526" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 23:01:16.525" endtime="20201115 23:01:16.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.529" level="INFO">VALUE: [2.6809999999904965e-06, 2.637999999999252e-06, 2.5129999999956576e-06, 1.973000000002334e-06, 2.360999999992397e-06, 2.916000000005581e-06, 1.986000000009369e-06, 2.346999999999766e-06, 2.888999999992037e-06, 2.473000000002834e-06, 2.52800000000164e-06, 2.0409999999942974e-06, 1.9449999999893164e-06, 1.9579999999963515e-06, 2.9029999999985456e-06, 2.514000000009009e-06, 2.7499999999958114e-06, 2.278000000008329e-06, 2.7499999999958114e-06, 1.9579999999963515e-06, 2.9029999999985456e-06, 2.4579999999968516e-06, 2.4999999999886224e-06, 1.9299999999972117e-06, 2.874999999999406e-06, 2.514000000009009e-06, 2.7499999999958114e-06, 2.2769999999949775e-06, 2.541999999994271e-06, 2.52800000000164e-06, 2.52800000000164e-06, 2.5139999999951312e-06, 2.278000000008329e-06, 2.514000000009009e-06, 2.278000000008329e-06, 2.3049999999941173e-06, 2.7360000000031803e-06, 2.278000000008329e-06, 2.5000000000025002e-06, 2.2910000000014863e-06, 2.277999999994451e-06, 2.29200000000096e-06, 2.52800000000164e-06, 1.9300000000110895e-06, 2.9309999999976855e-06, 2.52800000000164e-06, 2.4859999999959914e-06, 2.4999999999886224e-06, 2.278000000008329e-06, 2.5139999999951312e-06]</msg>
<status status="PASS" starttime="20201115 23:01:16.527" endtime="20201115 23:01:16.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.522" endtime="20201115 23:01:16.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.532" endtime="20201115 23:01:16.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.536" endtime="20201115 23:01:16.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.534" endtime="20201115 23:01:16.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.530" endtime="20201115 23:01:16.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.129" endtime="20201115 23:01:16.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.125" endtime="20201115 23:01:16.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.123" endtime="20201115 23:01:16.557"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.559" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.568" endtime="20201115 23:01:16.584"></status>
</kw>
<msg timestamp="20201115 23:01:16.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.566" endtime="20201115 23:01:16.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.586" endtime="20201115 23:01:16.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.588" endtime="20201115 23:01:16.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.563" endtime="20201115 23:01:16.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.561" endtime="20201115 23:01:16.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.598" endtime="20201115 23:01:16.879"></status>
</kw>
<msg timestamp="20201115 23:01:16.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025483944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.596" endtime="20201115 23:01:16.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025483944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.883" endtime="20201115 23:01:16.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.900" endtime="20201115 23:01:16.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.593" endtime="20201115 23:01:16.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.592" endtime="20201115 23:01:16.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:16.906" level="INFO">${RESULT} = [{'time': 0.025483944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.025494847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:16.903" endtime="20201115 23:01:16.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:16.923" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:16.907" endtime="20201115 23:01:16.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.932" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 23:01:16.930" endtime="20201115 23:01:16.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.938" level="INFO">VALUE: [3.486000000000461e-06, 3.208000000001071e-06, 3.431000000001655e-06, 3.4440000000017512e-06, 2.985999999999961e-06, 2.999999999999531e-06, 3.693999999998532e-06, 3.2079999999976017e-06, 2.972000000000391e-06, 2.9729999999998646e-06, 3.708000000001571e-06, 3.1939999999980317e-06, 2.972000000000391e-06, 3.374999999999906e-06, 3.236000000000211e-06, 2.9589999999968253e-06, 3.236000000000211e-06, 3.4300000000021813e-06, 2.958000000000821e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.2230000000001147e-06, 2.999999999999531e-06, 3.4169999999986156e-06, 3.6809999999984355e-06, 3.208000000001071e-06, 3.4309999999981855e-06, 3.417000000002085e-06, 2.972000000000391e-06, 3.4309999999981855e-06, 3.195000000000975e-06, 3.2230000000001147e-06, 3.722000000001141e-06, 2.9579999999973516e-06, 3.902999999999546e-06, 2.9729999999998646e-06, 3.667000000002335e-06, 2.9869999999994346e-06, 3.388000000000002e-06, 3.6809999999984355e-06, 3.222000000000641e-06, 3.4859999999969915e-06, 3.262999999999877e-06, 2.985999999999961e-06, 3.4309999999981855e-06, 3.4440000000017512e-06, 3.888999999999976e-06, 3.6800000000024313e-06, 2.9719999999969215e-06, 2.958000000000821e-06]</msg>
<status status="PASS" starttime="20201115 23:01:16.935" endtime="20201115 23:01:16.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.925" endtime="20201115 23:01:16.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.944" endtime="20201115 23:01:16.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.952" endtime="20201115 23:01:16.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.948" endtime="20201115 23:01:16.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.941" endtime="20201115 23:01:16.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.560" endtime="20201115 23:01:16.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.558" endtime="20201115 23:01:16.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.557" endtime="20201115 23:01:16.977"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.982" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.999" endtime="20201115 23:01:17.018"></status>
</kw>
<msg timestamp="20201115 23:01:17.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.996" endtime="20201115 23:01:17.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.021" endtime="20201115 23:01:17.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.023" endtime="20201115 23:01:17.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.991" endtime="20201115 23:01:17.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.986" endtime="20201115 23:01:17.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.033" endtime="20201115 23:01:17.321"></status>
</kw>
<msg timestamp="20201115 23:01:17.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042260125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042265014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.031" endtime="20201115 23:01:17.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042260125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042265014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.326" endtime="20201115 23:01:17.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.334" endtime="20201115 23:01:17.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.028" endtime="20201115 23:01:17.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.026" endtime="20201115 23:01:17.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.341" level="INFO">${RESULT} = [{'time': 0.042265014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.888999999994037e-06, 'source_diff': 4.888999999994037e-06}, {'time': 0.042276903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:17.337" endtime="20201115 23:01:17.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.355" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:17.342" endtime="20201115 23:01:17.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.360" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.359" endtime="20201115 23:01:17.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.362" level="INFO">VALUE: [4.888999999994037e-06, 4.583999999994981e-06, 4.139000000000226e-06, 4.55600000000278e-06, 4.861000000001836e-06, 3.846999999994327e-06, 4.346999999994827e-06, 4.110999999994147e-06, 4.833000000002696e-06, 4.361000000001336e-06, 4.139000000000226e-06, 4.179999999999462e-06, 4.319999999995161e-06, 3.888999999999976e-06, 3.888999999999976e-06, 4.097999999994051e-06, 4.125000000000656e-06, 3.888999999999976e-06, 3.916999999999116e-06, 4.917000000000116e-06, 4.58400000000192e-06, 4.139000000000226e-06, 4.597000000002016e-06, 4.568999999995937e-06, 4.583999999994981e-06, 4.819999999995661e-06, 4.125000000000656e-06, 3.888999999999976e-06, 4.777000000004417e-06, 4.54200000000321e-06, 4.847000000002266e-06, 4.125000000000656e-06, 3.8200000000016e-06, 4.34800000000124e-06, 4.59800000000149e-06, 4.34800000000124e-06, 4.7499999999978115e-06, 4.361000000001336e-06, 4.360999999994397e-06, 3.902999999999546e-06, 4.791999999996521e-06, 4.583000000002446e-06, 4.832999999995757e-06, 4.0549999999958675e-06, 4.611000000001586e-06, 4.125000000000656e-06, 4.332999999995257e-06, 3.902000000000072e-06, 4.625000000001156e-06, 4.125000000000656e-06]</msg>
<status status="PASS" starttime="20201115 23:01:17.361" endtime="20201115 23:01:17.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.356" endtime="20201115 23:01:17.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.365" endtime="20201115 23:01:17.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.369" endtime="20201115 23:01:17.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.367" endtime="20201115 23:01:17.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.363" endtime="20201115 23:01:17.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.983" endtime="20201115 23:01:17.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.980" endtime="20201115 23:01:17.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.978" endtime="20201115 23:01:17.390"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.392" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.400" endtime="20201115 23:01:17.415"></status>
</kw>
<msg timestamp="20201115 23:01:17.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.399" endtime="20201115 23:01:17.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.417" endtime="20201115 23:01:17.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.420" endtime="20201115 23:01:17.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.396" endtime="20201115 23:01:17.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.394" endtime="20201115 23:01:17.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.429" endtime="20201115 23:01:17.714"></status>
</kw>
<msg timestamp="20201115 23:01:17.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024245389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024251431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.427" endtime="20201115 23:01:17.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024245389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024251431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.718" endtime="20201115 23:01:17.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.726" endtime="20201115 23:01:17.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.425" endtime="20201115 23:01:17.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.423" endtime="20201115 23:01:17.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.733" level="INFO">${RESULT} = [{'time': 0.024251431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.024262556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:17.730" endtime="20201115 23:01:17.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.747" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:17.734" endtime="20201115 23:01:17.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.751" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.750" endtime="20201115 23:01:17.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.754" level="INFO">VALUE: [6.042000000001241e-06, 5.278000000000921e-06, 5.735999999999242e-06, 5.527999999997701e-06, 5.304999999997118e-06, 5.055000000000337e-06, 4.833000000002696e-06, 5.833000000000227e-06, 5.291000000001017e-06, 5.0699999999993806e-06, 5.34799999999877e-06, 5.749999999998812e-06, 5.319000000000157e-06, 5.749999999998812e-06, 5.5139999999981315e-06, 5.055000000000337e-06, 5.527999999997701e-06, 5.277999999997451e-06, 5.528000000001171e-06, 5.292000000000491e-06, 5.278000000000921e-06, 5.0699999999993806e-06, 5.096999999999047e-06, 5.055999999999811e-06, 5.292000000000491e-06, 4.833000000002696e-06, 5.0549999999968676e-06, 5.514000000001601e-06, 5.319999999999631e-06, 4.8200000000026e-06, 5.292000000000491e-06, 5.777000000001947e-06, 5.042000000000241e-06, 5.749999999998812e-06, 5.292000000000491e-06, 5.082999999999477e-06, 5.763000000002377e-06, 4.9999999999980616e-06, 5.527000000001697e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.764000000001851e-06, 5.042000000000241e-06, 5.278000000000921e-06, 4.9999999999980616e-06, 5.721999999999672e-06, 5.541000000001267e-06, 5.055000000000337e-06, 4.902000000001072e-06, 5.514000000001601e-06]</msg>
<status status="PASS" starttime="20201115 23:01:17.752" endtime="20201115 23:01:17.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.748" endtime="20201115 23:01:17.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.757" endtime="20201115 23:01:17.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.760" endtime="20201115 23:01:17.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.759" endtime="20201115 23:01:17.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.755" endtime="20201115 23:01:17.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.393" endtime="20201115 23:01:17.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.391" endtime="20201115 23:01:17.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.390" endtime="20201115 23:01:17.782"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.784" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.794" endtime="20201115 23:01:17.808"></status>
</kw>
<msg timestamp="20201115 23:01:17.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.792" endtime="20201115 23:01:17.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.809" endtime="20201115 23:01:17.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.812" endtime="20201115 23:01:17.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.789" endtime="20201115 23:01:17.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.787" endtime="20201115 23:01:17.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.822" endtime="20201115 23:01:18.106"></status>
</kw>
<msg timestamp="20201115 23:01:18.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026267181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026273681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.820" endtime="20201115 23:01:18.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026267181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026273681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.110" endtime="20201115 23:01:18.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.119" endtime="20201115 23:01:18.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.818" endtime="20201115 23:01:18.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.816" endtime="20201115 23:01:18.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.125" level="INFO">${RESULT} = [{'time': 0.026273681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.026283556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:18.122" endtime="20201115 23:01:18.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.139" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:18.126" endtime="20201115 23:01:18.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.143" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.142" endtime="20201115 23:01:18.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.145" level="INFO">VALUE: [6.499999999999562e-06, 6.195000000000506e-06, 6.040999999998298e-06, 6.208000000000602e-06, 5.986000000002961e-06, 6.000000000002531e-06, 6.415999999998673e-06, 6.291000000002017e-06, 6.679999999998493e-06, 5.985999999999492e-06, 5.971999999999922e-06, 6.222000000000172e-06, 5.971999999999922e-06, 6.208000000000602e-06, 6.695000000001006e-06, 6.930999999998216e-06, 6.2090000000000756e-06, 6.444000000001282e-06, 6.208000000000602e-06, 6.667000000001866e-06, 6.222000000000172e-06, 5.985999999999492e-06, 6.847000000000797e-06, 6.693999999998063e-06, 6.472000000000422e-06, 6.208000000000602e-06, 5.987000000002435e-06, 6.681000000001436e-06, 6.680000000001962e-06, 6.194000000001032e-06, 7.000000000000062e-06, 6.415999999998673e-06, 6.179999999997993e-06, 6.681000000001436e-06, 6.444000000001282e-06, 6.667000000001866e-06, 6.4579999999973825e-06, 6.2090000000000756e-06, 6.458000000000852e-06, 5.917000000001116e-06, 6.445000000000756e-06, 6.194000000001032e-06, 5.971999999999922e-06, 6.763999999999382e-06, 5.7639999999983815e-06, 6.459000000000326e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.917000000002116e-06]</msg>
<status status="PASS" starttime="20201115 23:01:18.144" endtime="20201115 23:01:18.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.139" endtime="20201115 23:01:18.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.149" endtime="20201115 23:01:18.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.152" endtime="20201115 23:01:18.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.151" endtime="20201115 23:01:18.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.147" endtime="20201115 23:01:18.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.785" endtime="20201115 23:01:18.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.783" endtime="20201115 23:01:18.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.782" endtime="20201115 23:01:18.174"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.176" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.184" endtime="20201115 23:01:18.198"></status>
</kw>
<msg timestamp="20201115 23:01:18.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.183" endtime="20201115 23:01:18.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.200" endtime="20201115 23:01:18.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.202" endtime="20201115 23:01:18.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.180" endtime="20201115 23:01:18.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.178" endtime="20201115 23:01:18.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.211" endtime="20201115 23:01:18.495"></status>
</kw>
<msg timestamp="20201115 23:01:18.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024291778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024299417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.210" endtime="20201115 23:01:18.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024291778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024299417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.499" endtime="20201115 23:01:18.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.507" endtime="20201115 23:01:18.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.207" endtime="20201115 23:01:18.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.205" endtime="20201115 23:01:18.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.514" level="INFO">${RESULT} = [{'time': 0.024299417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.024309403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:18.511" endtime="20201115 23:01:18.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.527" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:18.515" endtime="20201115 23:01:18.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.532" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.531" endtime="20201115 23:01:18.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.534" level="INFO">VALUE: [7.639000000000257e-06, 7.375000000000437e-06, 7.138000000000283e-06, 6.930000000002212e-06, 7.819000000002657e-06, 7.624999999997217e-06, 7.333000000001727e-06, 7.361000000000867e-06, 7.389000000000007e-06, 7.583000000001977e-06, 7.347000000001297e-06, 7.167000000002366e-06, 6.958000000001352e-06, 7.818999999999188e-06, 7.791000000000048e-06, 7.846999999998328e-06, 7.111000000000617e-06, 7.0829999999980076e-06, 7.389000000000007e-06, 7.361000000000867e-06, 7.097000000001047e-06, 7.5969999999980775e-06, 6.986000000000492e-06, 7.1529999999993266e-06, 7.375000000000437e-06, 7.138999999999757e-06, 7.611000000001117e-06, 7.806000000002561e-06, 7.208999999997606e-06, 7.5969999999980775e-06, 7.415999999999673e-06, 7.1529999999993266e-06, 7.389000000000007e-06, 7.625000000000687e-06, 7.5969999999980775e-06, 6.9029999999990765e-06, 7.375000000000437e-06, 7.151999999999853e-06, 6.9169999999986465e-06, 7.375000000000437e-06, 7.1529999999993266e-06, 7.5969999999980775e-06, 7.222000000001172e-06, 7.583000000001977e-06, 7.069000000001907e-06, 6.901999999999603e-06, 7.1529999999993266e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.8340000000017e-06]</msg>
<status status="PASS" starttime="20201115 23:01:18.533" endtime="20201115 23:01:18.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.528" endtime="20201115 23:01:18.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.538" endtime="20201115 23:01:18.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.541" endtime="20201115 23:01:18.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.540" endtime="20201115 23:01:18.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.536" endtime="20201115 23:01:18.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.177" endtime="20201115 23:01:18.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.175" endtime="20201115 23:01:18.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.174" endtime="20201115 23:01:18.562"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.565" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.573" endtime="20201115 23:01:18.588"></status>
</kw>
<msg timestamp="20201115 23:01:18.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.572" endtime="20201115 23:01:18.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.589" endtime="20201115 23:01:18.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.592" endtime="20201115 23:01:18.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.569" endtime="20201115 23:01:18.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.567" endtime="20201115 23:01:18.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.601" endtime="20201115 23:01:18.888"></status>
</kw>
<msg timestamp="20201115 23:01:18.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024877, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024885806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:18.600" endtime="20201115 23:01:18.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024877, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024885806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:18.892" endtime="20201115 23:01:18.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.900" endtime="20201115 23:01:18.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.597" endtime="20201115 23:01:18.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.595" endtime="20201115 23:01:18.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.907" level="INFO">${RESULT} = [{'time': 0.024885806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.024903861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:18.904" endtime="20201115 23:01:18.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.922" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:18.908" endtime="20201115 23:01:18.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.926" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.925" endtime="20201115 23:01:18.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.929" level="INFO">VALUE: [8.806000000000092e-06, 8.054999999999868e-06, 8.110999999998147e-06, 8.305999999999591e-06, 8.625000000001687e-06, 8.500000000001562e-06, 8.763999999997912e-06, 8.082999999999008e-06, 8.764000000001382e-06, 7.832999999998758e-06, 8.292000000000022e-06, 8.528000000000702e-06, 7.833000000002227e-06, 8.763000000001908e-06, 8.513999999997662e-06, 8.083999999998481e-06, 7.8340000000017e-06, 8.513999999997662e-06, 8.318999999999688e-06, 8.750000000001812e-06, 8.305999999999591e-06, 8.110999999998147e-06, 8.764000000001382e-06, 8.528000000000702e-06, 8.055999999999341e-06, 8.305999999999591e-06, 7.819999999998661e-06, 8.764000000001382e-06, 8.055000000003337e-06, 8.555000000000368e-06, 8.750000000001812e-06, 8.305000000000118e-06, 8.290999999997078e-06, 8.500000000001562e-06, 8.763999999997912e-06, 8.069999999998911e-06, 8.542000000000272e-06, 8.542000000000272e-06, 8.249999999997842e-06, 8.527999999997232e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.528000000000702e-06, 8.514000000001132e-06, 7.833000000002227e-06, 8.528000000000702e-06, 8.555999999999842e-06, 8.763000000001908e-06, 8.054999999999868e-06, 8.291000000000548e-06]</msg>
<status status="PASS" starttime="20201115 23:01:18.927" endtime="20201115 23:01:18.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.923" endtime="20201115 23:01:18.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.932" endtime="20201115 23:01:18.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.936" endtime="20201115 23:01:18.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.934" endtime="20201115 23:01:18.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.931" endtime="20201115 23:01:18.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.565" endtime="20201115 23:01:18.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.564" endtime="20201115 23:01:18.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.563" endtime="20201115 23:01:18.957"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.959" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.968" endtime="20201115 23:01:18.982"></status>
</kw>
<msg timestamp="20201115 23:01:18.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.966" endtime="20201115 23:01:18.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.983" endtime="20201115 23:01:18.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.986" endtime="20201115 23:01:18.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.963" endtime="20201115 23:01:18.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.961" endtime="20201115 23:01:18.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.995" endtime="20201115 23:01:19.280"></status>
</kw>
<msg timestamp="20201115 23:01:19.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024184597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024194806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.993" endtime="20201115 23:01:19.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024184597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024194806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.284" endtime="20201115 23:01:19.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.292" endtime="20201115 23:01:19.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.991" endtime="20201115 23:01:19.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.989" endtime="20201115 23:01:19.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.299" level="INFO">${RESULT} = [{'time': 0.024194806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0209000000000606e-05, 'source_diff': 1.0209000000000606e-05}, {'time': 0.024208569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:19.296" endtime="20201115 23:01:19.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.313" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:19.300" endtime="20201115 23:01:19.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.318" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.317" endtime="20201115 23:01:19.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.320" level="INFO">VALUE: [1.0209000000000606e-05, 9.012999999998689e-06, 9.930999999997747e-06, 9.222999999999176e-06, 9.637999999999314e-06, 9.417000000001147e-06, 9.457999999996913e-06, 9.430999999997247e-06, 9.445000000000286e-06, 8.971999999999453e-06, 9.695000000000537e-06, 9.638999999998787e-06, 8.999999999998592e-06, 9.458000000000383e-06, 8.957999999999883e-06, 8.917000000000647e-06, 9.693999999997593e-06, 9.236000000002742e-06, 9.902999999998607e-06, 9.236000000002742e-06, 8.985999999999023e-06, 8.972000000002922e-06, 9.431000000000717e-06, 9.221999999999703e-06, 9.236000000002742e-06, 9.930999999997747e-06, 9.221999999999703e-06, 9.014000000001632e-06, 9.444000000000813e-06, 9.722000000000203e-06, 8.985999999999023e-06, 9.709000000000106e-06, 9.472999999999426e-06, 9.514000000002132e-06, 9.458000000000383e-06, 9.069000000000438e-06, 9.195000000000036e-06, 9.694000000001063e-06, 8.971999999999453e-06, 8.999999999998592e-06, 9.944999999997317e-06, 9.735999999999773e-06, 9.695000000000537e-06, 8.986999999998496e-06, 9.472999999999426e-06, 9.695000000000537e-06, 9.235999999999273e-06, 9.292000000001022e-06, 9.221999999999703e-06, 8.999999999998592e-06]</msg>
<status status="PASS" starttime="20201115 23:01:19.319" endtime="20201115 23:01:19.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.314" endtime="20201115 23:01:19.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.323" endtime="20201115 23:01:19.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.327" endtime="20201115 23:01:19.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.325" endtime="20201115 23:01:19.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.322" endtime="20201115 23:01:19.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.960" endtime="20201115 23:01:19.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.958" endtime="20201115 23:01:19.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.957" endtime="20201115 23:01:19.348"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.350" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.358" endtime="20201115 23:01:19.373"></status>
</kw>
<msg timestamp="20201115 23:01:19.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.357" endtime="20201115 23:01:19.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.375" endtime="20201115 23:01:19.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.378" endtime="20201115 23:01:19.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.354" endtime="20201115 23:01:19.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.352" endtime="20201115 23:01:19.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.387" endtime="20201115 23:01:19.671"></status>
</kw>
<msg timestamp="20201115 23:01:19.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024432597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024443278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.385" endtime="20201115 23:01:19.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024432597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024443278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.675" endtime="20201115 23:01:19.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.684" endtime="20201115 23:01:19.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.383" endtime="20201115 23:01:19.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.381" endtime="20201115 23:01:19.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.691" level="INFO">${RESULT} = [{'time': 0.024443278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0680999999998497e-05, 'source_diff': 1.0680999999998497e-05}, {'time': 0.024455194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:19.687" endtime="20201115 23:01:19.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.704" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:19.692" endtime="20201115 23:01:19.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.709" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.708" endtime="20201115 23:01:19.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.711" level="INFO">VALUE: [1.0680999999998497e-05, 1.0401999999999634e-05, 1.0166999999998427e-05, 1.0625000000000218e-05, 1.0597000000001078e-05, 1.0152999999998857e-05, 1.0138999999999287e-05, 1.0334000000000731e-05, 9.902999999998607e-06, 1.0403000000002577e-05, 1.0847000000001328e-05, 1.0153000000002327e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0125000000003187e-05, 1.0374999999999968e-05, 1.0638999999999788e-05, 1.0152999999998857e-05, 9.972000000000453e-06, 1.0681000000001967e-05, 1.0625000000000218e-05, 1.0652999999999357e-05, 1.0639000000003257e-05, 1.0374999999999968e-05, 1.0625000000000218e-05, 1.0846999999997858e-05, 1.0848000000000801e-05, 9.916999999998177e-06, 9.901999999999134e-06, 1.0834000000001232e-05, 1.0389000000003007e-05, 1.0625000000000218e-05, 1.0611000000000648e-05, 1.0611000000000648e-05, 9.917000000001647e-06, 9.944000000001313e-06, 9.916999999998177e-06, 1.0152999999998857e-05, 9.945000000000787e-06, 1.0611000000000648e-05, 1.0361000000000398e-05, 1.0610999999997178e-05, 1.0611000000000648e-05, 1.0625000000000218e-05, 1.0374999999999968e-05, 1.0152999999998857e-05, 1.0374999999999968e-05, 1.0152999999998857e-05]</msg>
<status status="PASS" starttime="20201115 23:01:19.710" endtime="20201115 23:01:19.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.705" endtime="20201115 23:01:19.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.714" endtime="20201115 23:01:19.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.718" endtime="20201115 23:01:19.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.716" endtime="20201115 23:01:19.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.713" endtime="20201115 23:01:19.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.351" endtime="20201115 23:01:19.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.349" endtime="20201115 23:01:19.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.348" endtime="20201115 23:01:19.739"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.741" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.749" endtime="20201115 23:01:19.764"></status>
</kw>
<msg timestamp="20201115 23:01:19.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.748" endtime="20201115 23:01:19.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.766" endtime="20201115 23:01:19.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.768" endtime="20201115 23:01:19.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.745" endtime="20201115 23:01:19.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.743" endtime="20201115 23:01:19.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.778" endtime="20201115 23:01:20.064"></status>
</kw>
<msg timestamp="20201115 23:01:20.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024101236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024112597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.776" endtime="20201115 23:01:20.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024101236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024112597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.068" endtime="20201115 23:01:20.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.076" endtime="20201115 23:01:20.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.773" endtime="20201115 23:01:20.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.771" endtime="20201115 23:01:20.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.083" level="INFO">${RESULT} = [{'time': 0.024112597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1360999999997928e-05, 'source_diff': 1.1360999999997928e-05}, {'time': 0.024126639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:20.080" endtime="20201115 23:01:20.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.096" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:20.084" endtime="20201115 23:01:20.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.101" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.100" endtime="20201115 23:01:20.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.104" level="INFO">VALUE: [1.1360999999997928e-05, 1.1305999999999122e-05, 1.1277999999999982e-05, 1.1763999999997443e-05, 1.0832999999998288e-05, 1.0834000000001232e-05, 1.0915999999999704e-05, 1.1305999999999122e-05, 1.1305999999999122e-05, 1.1084000000001482e-05, 1.1306000000002592e-05, 1.0848000000000801e-05, 1.1054999999999399e-05, 1.1778000000000483e-05, 1.1305999999999122e-05, 1.1763999999997443e-05, 1.1084000000001482e-05, 1.1068999999998969e-05, 1.1277999999999982e-05, 1.1541000000000329e-05, 1.1554999999999899e-05, 1.1027999999999732e-05, 1.1318999999999219e-05, 1.1736000000001773e-05, 1.1513999999997193e-05, 1.1069999999998442e-05, 1.1541999999999802e-05, 1.1778000000000483e-05, 1.1097000000001578e-05, 1.1304999999999649e-05, 1.1319999999998692e-05, 1.1777000000001009e-05, 1.1541999999999802e-05, 1.1082999999998538e-05, 1.1708999999998637e-05, 1.1152999999999857e-05, 1.1306000000002592e-05, 1.0819000000002188e-05, 1.1319999999998692e-05, 1.1541999999999802e-05, 1.1792000000000052e-05, 1.1083000000002008e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1082999999998538e-05, 1.1263000000000939e-05, 1.1554999999999899e-05, 1.1541999999999802e-05, 1.0847000000001328e-05, 1.1139000000000288e-05]</msg>
<status status="PASS" starttime="20201115 23:01:20.102" endtime="20201115 23:01:20.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.097" endtime="20201115 23:01:20.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.107" endtime="20201115 23:01:20.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.110" endtime="20201115 23:01:20.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.109" endtime="20201115 23:01:20.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.105" endtime="20201115 23:01:20.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.742" endtime="20201115 23:01:20.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.740" endtime="20201115 23:01:20.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.739" endtime="20201115 23:01:20.131"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.134" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.142" endtime="20201115 23:01:20.156"></status>
</kw>
<msg timestamp="20201115 23:01:20.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.140" endtime="20201115 23:01:20.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.158" endtime="20201115 23:01:20.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.161" endtime="20201115 23:01:20.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.138" endtime="20201115 23:01:20.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.136" endtime="20201115 23:01:20.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.170" endtime="20201115 23:01:20.456"></status>
</kw>
<msg timestamp="20201115 23:01:20.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02479325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024806014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:20.169" endtime="20201115 23:01:20.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02479325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024806014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:20.460" endtime="20201115 23:01:20.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.469" endtime="20201115 23:01:20.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.166" endtime="20201115 23:01:20.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.164" endtime="20201115 23:01:20.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.475" level="INFO">${RESULT} = [{'time': 0.024806014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2764000000001913e-05, 'source_diff': 1.2764000000001913e-05}, {'time': 0.024826833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:20.472" endtime="20201115 23:01:20.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.490" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:20.476" endtime="20201115 23:01:20.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.495" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.494" endtime="20201115 23:01:20.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.497" level="INFO">VALUE: [1.2764000000001913e-05, 1.2041000000000829e-05, 1.2471999999999483e-05, 1.2014000000001163e-05, 1.2458999999999387e-05, 1.2680000000001024e-05, 1.2000000000001593e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.2695000000000067e-05, 1.2222999999998707e-05, 1.2000000000001593e-05, 1.2014000000001163e-05, 1.1986000000002023e-05, 1.2459000000002857e-05, 1.2693999999997124e-05, 1.1999999999998123e-05, 1.2471999999999483e-05, 1.2014000000001163e-05, 1.1999999999998123e-05, 1.2013999999997693e-05, 1.2222000000002703e-05, 1.2249999999998373e-05, 1.2000000000001593e-05, 1.2694000000000594e-05, 1.2471999999999483e-05, 1.2457999999999914e-05, 1.2694000000000594e-05, 1.2249999999998373e-05, 1.2457999999999914e-05, 1.2764000000001913e-05, 1.2457999999999914e-05, 1.1986000000002023e-05, 1.2708000000000164e-05, 1.1999999999998123e-05, 1.2693999999997124e-05, 1.2681000000000497e-05, 1.2013999999997693e-05, 1.2930000000001274e-05, 1.2694000000000594e-05, 1.2235999999998803e-05, 1.2708000000000164e-05, 1.2472999999998957e-05, 1.2222999999998707e-05, 1.2485999999999053e-05, 1.1972999999998457e-05, 1.2708999999999637e-05, 1.2014000000001163e-05, 1.2694000000000594e-05, 1.1999999999998123e-05]</msg>
<status status="PASS" starttime="20201115 23:01:20.496" endtime="20201115 23:01:20.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.491" endtime="20201115 23:01:20.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.500" endtime="20201115 23:01:20.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.504" endtime="20201115 23:01:20.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.502" endtime="20201115 23:01:20.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.499" endtime="20201115 23:01:20.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.134" endtime="20201115 23:01:20.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.132" endtime="20201115 23:01:20.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.132" endtime="20201115 23:01:20.525"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.527" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.536" endtime="20201115 23:01:20.551"></status>
</kw>
<msg timestamp="20201115 23:01:20.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.535" endtime="20201115 23:01:20.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.553" endtime="20201115 23:01:20.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.555" endtime="20201115 23:01:20.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.532" endtime="20201115 23:01:20.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.530" endtime="20201115 23:01:20.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.564" endtime="20201115 23:01:20.850"></status>
</kw>
<msg timestamp="20201115 23:01:20.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024871875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.563" endtime="20201115 23:01:20.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024871875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.854" endtime="20201115 23:01:20.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.862" endtime="20201115 23:01:20.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.560" endtime="20201115 23:01:20.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.559" endtime="20201115 23:01:20.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.869" level="INFO">${RESULT} = [{'time': 0.024871875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3917000000002178e-05, 'source_diff': 1.3917000000002178e-05}, {'time': 0.024892653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:20.866" endtime="20201115 23:01:20.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.882" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:20.870" endtime="20201115 23:01:20.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.887" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.886" endtime="20201115 23:01:20.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.890" level="INFO">VALUE: [1.3917000000002178e-05, 1.3611000000000179e-05, 1.3152999999998388e-05, 1.3415999999998734e-05, 1.3624999999999748e-05, 1.3166999999997958e-05, 1.3388999999999068e-05, 1.3652999999998888e-05, 1.3387999999999595e-05, 1.3388999999999068e-05, 1.3638999999999318e-05, 1.2929999999997804e-05, 1.3611000000000179e-05, 1.3403000000002108e-05, 1.2945000000000317e-05, 1.3860999999996959e-05, 1.3165999999998484e-05, 1.2943999999997374e-05, 1.2902000000002134e-05, 1.2888999999998568e-05, 1.3415999999998734e-05, 1.3847000000000859e-05, 1.3401999999999165e-05, 1.3167000000001428e-05, 1.3151999999998915e-05, 1.3638999999999318e-05, 1.3624999999999748e-05, 1.3402999999998638e-05, 1.3833000000001289e-05, 1.381899999999825e-05, 1.3611000000000179e-05, 1.3624999999999748e-05, 1.3445000000000817e-05, 1.3847000000000859e-05, 1.3125000000002718e-05, 1.2931000000000747e-05, 1.2930999999997278e-05, 1.3139000000002288e-05, 1.2903000000001608e-05, 1.3138999999998818e-05, 1.3598000000000082e-05, 1.3638999999999318e-05, 1.3429999999998304e-05, 1.3624999999999748e-05, 1.3388999999999068e-05, 1.3611000000000179e-05, 1.2929999999997804e-05, 1.2930000000001274e-05, 1.3624999999999748e-05, 1.3638999999999318e-05]</msg>
<status status="PASS" starttime="20201115 23:01:20.888" endtime="20201115 23:01:20.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.883" endtime="20201115 23:01:20.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.893" endtime="20201115 23:01:20.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.897" endtime="20201115 23:01:20.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.895" endtime="20201115 23:01:20.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.891" endtime="20201115 23:01:20.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.528" endtime="20201115 23:01:20.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.526" endtime="20201115 23:01:20.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.525" endtime="20201115 23:01:20.918"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.920" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.929" endtime="20201115 23:01:20.943"></status>
</kw>
<msg timestamp="20201115 23:01:20.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.927" endtime="20201115 23:01:20.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.944" endtime="20201115 23:01:20.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.947" endtime="20201115 23:01:20.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.924" endtime="20201115 23:01:20.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.922" endtime="20201115 23:01:20.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.956" endtime="20201115 23:01:21.242"></status>
</kw>
<msg timestamp="20201115 23:01:21.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024200597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024215639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.955" endtime="20201115 23:01:21.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024200597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024215639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.247" endtime="20201115 23:01:21.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.255" endtime="20201115 23:01:21.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.952" endtime="20201115 23:01:21.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.950" endtime="20201115 23:01:21.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.262" level="INFO">${RESULT} = [{'time': 0.024215639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5041999999999833e-05, 'source_diff': 1.5041999999999833e-05}, {'time': 0.024232444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:21.258" endtime="20201115 23:01:21.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.275" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:21.263" endtime="20201115 23:01:21.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.280" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.279" endtime="20201115 23:01:21.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.282" level="INFO">VALUE: [1.5041999999999833e-05, 1.433299999999832e-05, 1.4347000000001359e-05, 1.455499999999943e-05, 1.4333000000001789e-05, 1.3902999999999138e-05, 1.480499999999968e-05, 1.408299999999807e-05, 1.4485999999997584e-05, 1.4305999999998653e-05, 1.3861000000000429e-05, 1.4555999999998903e-05, 1.4069999999997973e-05, 1.4070000000001442e-05, 1.4098000000000582e-05, 1.4319999999998223e-05, 1.4778000000000013e-05, 1.3874999999999998e-05, 1.3915999999999235e-05, 1.4556000000002373e-05, 1.455499999999943e-05, 1.458299999999857e-05, 1.3861000000000429e-05, 1.3834000000000762e-05, 1.3888000000000095e-05, 1.4541999999999333e-05, 1.3861000000000429e-05, 1.4541999999999333e-05, 1.431899999999875e-05, 1.3861000000000429e-05, 1.433299999999832e-05, 1.4306000000002123e-05, 1.4083000000001539e-05, 1.455499999999943e-05, 1.3861000000000429e-05, 1.4084000000001012e-05, 1.3916000000002704e-05, 1.4069000000001969e-05, 1.4098000000000582e-05, 1.4556000000002373e-05, 1.3861000000000429e-05, 1.4778000000000013e-05, 1.4097000000001109e-05, 1.4541999999999333e-05, 1.479100000000011e-05, 1.4083000000001539e-05, 1.483299999999882e-05, 1.4568999999999e-05, 1.4319999999998223e-05, 1.433299999999832e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.281" endtime="20201115 23:01:21.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.276" endtime="20201115 23:01:21.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.286" endtime="20201115 23:01:21.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.289" endtime="20201115 23:01:21.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.288" endtime="20201115 23:01:21.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.284" endtime="20201115 23:01:21.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.921" endtime="20201115 23:01:21.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.919" endtime="20201115 23:01:21.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.918" endtime="20201115 23:01:21.310"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.313" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.321" endtime="20201115 23:01:21.336"></status>
</kw>
<msg timestamp="20201115 23:01:21.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.320" endtime="20201115 23:01:21.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.338" endtime="20201115 23:01:21.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.340" endtime="20201115 23:01:21.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.317" endtime="20201115 23:01:21.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.315" endtime="20201115 23:01:21.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.349" endtime="20201115 23:01:21.635"></status>
</kw>
<msg timestamp="20201115 23:01:21.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024054264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024070014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.348" endtime="20201115 23:01:21.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024054264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024070014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.639" endtime="20201115 23:01:21.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.648" endtime="20201115 23:01:21.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.345" endtime="20201115 23:01:21.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.343" endtime="20201115 23:01:21.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.654" level="INFO">${RESULT} = [{'time': 0.024070014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5750000000001874e-05, 'source_diff': 1.5750000000001874e-05}, {'time': 0.024093028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:21.651" endtime="20201115 23:01:21.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.668" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:21.655" endtime="20201115 23:01:21.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.672" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.671" endtime="20201115 23:01:21.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.675" level="INFO">VALUE: [1.5750000000001874e-05, 1.5014000000000693e-05, 1.5500000000001624e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.5471999999999014e-05, 1.5236000000001804e-05, 1.5472000000002484e-05, 1.5457999999999444e-05, 1.5471999999999014e-05, 1.4985999999998084e-05, 1.5458999999998918e-05, 1.566700000000046e-05, 1.5722000000002734e-05, 1.4999999999997654e-05, 1.5236000000001804e-05, 1.5235999999998334e-05, 1.5958999999999418e-05, 1.501300000000122e-05, 1.5236000000001804e-05, 1.5430000000000305e-05, 1.5707999999999694e-05, 1.5459000000002387e-05, 1.5458999999998918e-05, 1.5735999999998834e-05, 1.5458000000002914e-05, 1.5723000000002207e-05, 1.5207999999999194e-05, 1.5931000000000278e-05, 1.4959000000001887e-05, 1.5014000000000693e-05, 1.5485999999998584e-05, 1.5221999999998764e-05, 1.5750000000001874e-05, 1.5235999999998334e-05, 1.5694000000000125e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.5013999999997224e-05, 1.5221999999998764e-05, 1.5250000000001374e-05, 1.4736000000001304e-05, 1.5487000000001527e-05, 1.5471999999999014e-05, 1.5443999999999874e-05, 1.5485999999998584e-05, 1.4778000000000013e-05, 1.5721999999999264e-05, 1.4805999999999153e-05, 1.5472000000002484e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.673" endtime="20201115 23:01:21.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.669" endtime="20201115 23:01:21.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.679" endtime="20201115 23:01:21.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.682" endtime="20201115 23:01:21.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.680" endtime="20201115 23:01:21.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.677" endtime="20201115 23:01:21.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.313" endtime="20201115 23:01:21.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.312" endtime="20201115 23:01:21.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.311" endtime="20201115 23:01:21.703"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.706" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.714" endtime="20201115 23:01:21.729"></status>
</kw>
<msg timestamp="20201115 23:01:21.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.712" endtime="20201115 23:01:21.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.731" endtime="20201115 23:01:21.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.734" endtime="20201115 23:01:21.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.710" endtime="20201115 23:01:21.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.708" endtime="20201115 23:01:21.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.743" endtime="20201115 23:01:22.029"></status>
</kw>
<msg timestamp="20201115 23:01:22.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025184375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025201069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.741" endtime="20201115 23:01:22.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025184375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025201069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.033" endtime="20201115 23:01:22.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.041" endtime="20201115 23:01:22.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.739" endtime="20201115 23:01:22.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.737" endtime="20201115 23:01:22.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.048" level="INFO">${RESULT} = [{'time': 0.025201069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6694000000001125e-05, 'source_diff': 1.6694000000001125e-05}, {'time': 0.025221056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:22.045" endtime="20201115 23:01:22.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.068" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:22.054" endtime="20201115 23:01:22.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.072" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.071" endtime="20201115 23:01:22.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.075" level="INFO">VALUE: [1.6694000000001125e-05, 1.618099999999706e-05, 1.6402000000002165e-05, 1.640300000000164e-05, 1.5862000000001902e-05, 1.63889999999986e-05, 1.686099999999996e-05, 1.6194000000000625e-05, 1.663899999999885e-05, 1.588900000000157e-05, 1.663899999999885e-05, 1.666699999999799e-05, 1.690300000000214e-05, 1.6166000000001485e-05, 1.6651999999998945e-05, 1.612499999999878e-05, 1.638900000000207e-05, 1.6180000000001055e-05, 1.691699999999824e-05, 1.662499999999928e-05, 1.5930000000000805e-05, 1.6180000000001055e-05, 1.5915999999997765e-05, 1.636099999999946e-05, 1.5944000000000375e-05, 1.643100000000078e-05, 1.658300000000057e-05, 1.5943999999996905e-05, 1.686099999999996e-05, 1.662499999999928e-05, 1.5931000000000278e-05, 1.591699999999724e-05, 1.641700000000121e-05, 1.663899999999885e-05, 1.6181000000000528e-05, 1.6652000000002415e-05, 1.5957999999999944e-05, 1.663899999999885e-05, 1.6693999999997655e-05, 1.5944999999999848e-05, 1.5944000000000375e-05, 1.5931000000000278e-05, 1.688900000000257e-05, 1.662499999999928e-05, 1.5931000000000278e-05, 1.662499999999928e-05, 1.641700000000121e-05, 1.638900000000207e-05, 1.641700000000121e-05, 1.638900000000207e-05]</msg>
<status status="PASS" starttime="20201115 23:01:22.073" endtime="20201115 23:01:22.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.068" endtime="20201115 23:01:22.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.078" endtime="20201115 23:01:22.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.081" endtime="20201115 23:01:22.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.080" endtime="20201115 23:01:22.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.076" endtime="20201115 23:01:22.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.706" endtime="20201115 23:01:22.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.704" endtime="20201115 23:01:22.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.703" endtime="20201115 23:01:22.102"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.105" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.113" endtime="20201115 23:01:22.127"></status>
</kw>
<msg timestamp="20201115 23:01:22.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.111" endtime="20201115 23:01:22.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.129" endtime="20201115 23:01:22.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.131" endtime="20201115 23:01:22.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.109" endtime="20201115 23:01:22.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.107" endtime="20201115 23:01:22.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.140" endtime="20201115 23:01:22.426"></status>
</kw>
<msg timestamp="20201115 23:01:22.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024107944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024125306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.139" endtime="20201115 23:01:22.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024107944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024125306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.431" endtime="20201115 23:01:22.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.439" endtime="20201115 23:01:22.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.136" endtime="20201115 23:01:22.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.135" endtime="20201115 23:01:22.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.446" level="INFO">${RESULT} = [{'time': 0.024125306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7361999999999933e-05, 'source_diff': 1.7361999999999933e-05}, {'time': 0.024144264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:22.443" endtime="20201115 23:01:22.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.459" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:22.447" endtime="20201115 23:01:22.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.464" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.463" endtime="20201115 23:01:22.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.466" level="INFO">VALUE: [1.7361999999999933e-05, 1.68889999999991e-05, 1.733300000000132e-05, 1.7805999999998684e-05, 1.709699999999717e-05, 1.7041999999998364e-05, 1.709700000000064e-05, 1.7333999999997324e-05, 1.7569000000002e-05, 1.7556000000001903e-05, 1.7570000000001473e-05, 1.7320000000001223e-05, 1.7583999999997574e-05, 1.7777999999999544e-05, 1.7569000000002e-05, 1.756899999999853e-05, 1.7555999999998434e-05, 1.7736000000000834e-05, 1.708300000000107e-05, 1.7791999999999114e-05, 1.7319999999997754e-05, 1.709700000000064e-05, 1.7569000000002e-05, 1.738900000000307e-05, 1.7805999999998684e-05, 1.702699999999932e-05, 1.684700000000039e-05, 1.7334000000000793e-05, 1.7320000000001223e-05, 1.709700000000064e-05, 1.7111999999999683e-05, 1.709700000000064e-05, 1.684700000000039e-05, 1.731899999999828e-05, 1.7527999999999294e-05, 1.6861999999999433e-05, 1.7792000000002584e-05, 1.709700000000064e-05, 1.7778000000003014e-05, 1.712499999999978e-05, 1.7569999999998004e-05, 1.7763999999999974e-05, 1.7013999999999224e-05, 1.709700000000064e-05, 1.683300000000082e-05, 1.709700000000064e-05, 1.7556000000001903e-05, 1.708300000000107e-05, 1.709700000000064e-05, 1.7777999999999544e-05]</msg>
<status status="PASS" starttime="20201115 23:01:22.465" endtime="20201115 23:01:22.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.460" endtime="20201115 23:01:22.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.470" endtime="20201115 23:01:22.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.473" endtime="20201115 23:01:22.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.472" endtime="20201115 23:01:22.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.468" endtime="20201115 23:01:22.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.105" endtime="20201115 23:01:22.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.103" endtime="20201115 23:01:22.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.103" endtime="20201115 23:01:22.494"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.497" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.505" endtime="20201115 23:01:22.520"></status>
</kw>
<msg timestamp="20201115 23:01:22.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.503" endtime="20201115 23:01:22.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.521" endtime="20201115 23:01:22.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.524" endtime="20201115 23:01:22.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.501" endtime="20201115 23:01:22.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.499" endtime="20201115 23:01:22.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.533" endtime="20201115 23:01:22.820"></status>
</kw>
<msg timestamp="20201115 23:01:22.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024067444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024086208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.531" endtime="20201115 23:01:22.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024067444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024086208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.824" endtime="20201115 23:01:22.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.832" endtime="20201115 23:01:22.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.529" endtime="20201115 23:01:22.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.527" endtime="20201115 23:01:22.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.839" level="INFO">${RESULT} = [{'time': 0.024086208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8764000000000974e-05, 'source_diff': 1.8764000000000974e-05}, {'time': 0.024110222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:22.836" endtime="20201115 23:01:22.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.853" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:22.840" endtime="20201115 23:01:22.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.857" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.856" endtime="20201115 23:01:22.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.860" level="INFO">VALUE: [1.8764000000000974e-05, 1.8722000000002265e-05, 1.8513999999997255e-05, 1.8750000000001404e-05, 1.8707999999999225e-05, 1.8264000000000474e-05, 1.843099999999931e-05, 1.779099999999964e-05, 1.779099999999964e-05, 1.8027999999999794e-05, 1.8250000000000904e-05, 1.8722000000002265e-05, 1.8207999999998725e-05, 1.8485999999998115e-05, 1.8500000000001154e-05, 1.8250000000000904e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.8499999999997685e-05, 1.8250000000000904e-05, 1.801300000000075e-05, 1.845900000000192e-05, 1.8528000000000294e-05, 1.7791999999999114e-05, 1.8249999999997435e-05, 1.8485999999998115e-05, 1.843099999999931e-05, 1.8264000000000474e-05, 1.8250000000000904e-05, 1.8499999999997685e-05, 1.8693999999999655e-05, 1.802700000000032e-05, 1.8707999999999225e-05, 1.8014000000000224e-05, 1.8486000000001584e-05, 1.8000000000000654e-05, 1.8693999999999655e-05, 1.8013999999996755e-05, 1.804099999999989e-05, 1.8237000000000808e-05, 1.831899999999928e-05, 1.8500000000001154e-05, 1.8027999999999794e-05, 1.7777999999999544e-05, 1.8722000000002265e-05, 1.8055999999998934e-05, 1.844500000000235e-05, 1.8736000000001835e-05, 1.8735999999998365e-05, 1.8458000000002445e-05]</msg>
<status status="PASS" starttime="20201115 23:01:22.859" endtime="20201115 23:01:22.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.853" endtime="20201115 23:01:22.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.864" endtime="20201115 23:01:22.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.868" endtime="20201115 23:01:22.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.866" endtime="20201115 23:01:22.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.862" endtime="20201115 23:01:22.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.497" endtime="20201115 23:01:22.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.495" endtime="20201115 23:01:22.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.495" endtime="20201115 23:01:22.889"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.891" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.900" endtime="20201115 23:01:22.915"></status>
</kw>
<msg timestamp="20201115 23:01:22.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.898" endtime="20201115 23:01:22.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.916" endtime="20201115 23:01:22.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.919" endtime="20201115 23:01:22.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.895" endtime="20201115 23:01:22.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.893" endtime="20201115 23:01:22.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.929" endtime="20201115 23:01:23.214"></status>
</kw>
<msg timestamp="20201115 23:01:23.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024335014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.927" endtime="20201115 23:01:23.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024335014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.218" endtime="20201115 23:01:23.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.226" endtime="20201115 23:01:23.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.924" endtime="20201115 23:01:23.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.923" endtime="20201115 23:01:23.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.233" level="INFO">${RESULT} = [{'time': 0.024335014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.969500000000013e-05, 'source_diff': 1.969500000000013e-05}, {'time': 0.024359069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:23.230" endtime="20201115 23:01:23.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.246" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:23.234" endtime="20201115 23:01:23.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.251" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.250" endtime="20201115 23:01:23.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.254" level="INFO">VALUE: [1.969500000000013e-05, 1.9444000000000405e-05, 1.916699999999702e-05, 1.963899999999838e-05, 1.893099999999981e-05, 1.8943999999999905e-05, 1.9597999999999144e-05, 1.941700000000074e-05, 1.94029999999977e-05, 1.8943999999999905e-05, 1.9416000000001266e-05, 1.987499999999906e-05, 1.963899999999838e-05, 1.918100000000006e-05, 1.986099999999949e-05, 1.963900000000185e-05, 1.9180000000000585e-05, 1.962499999999881e-05, 1.99029999999982e-05, 1.9179999999997116e-05, 1.987499999999906e-05, 1.963899999999838e-05, 1.9415999999997796e-05, 1.963899999999838e-05, 1.965299999999795e-05, 1.993100000000081e-05, 1.988899999999863e-05, 1.961099999999924e-05, 1.963900000000185e-05, 1.915300000000092e-05, 1.962500000000228e-05, 1.963900000000185e-05, 1.936099999999899e-05, 1.986100000000296e-05, 1.93890000000016e-05, 1.962500000000228e-05, 1.93890000000016e-05, 1.916699999999702e-05, 1.940300000000117e-05, 1.9680000000001086e-05, 1.9236000000002335e-05, 1.986099999999949e-05, 1.918100000000006e-05, 1.987499999999906e-05, 1.886100000000196e-05, 1.962499999999881e-05, 1.94029999999977e-05, 1.963899999999838e-05, 1.959699999999967e-05, 1.919499999999963e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.252" endtime="20201115 23:01:23.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.247" endtime="20201115 23:01:23.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.257" endtime="20201115 23:01:23.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.260" endtime="20201115 23:01:23.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.259" endtime="20201115 23:01:23.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.255" endtime="20201115 23:01:23.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.892" endtime="20201115 23:01:23.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.890" endtime="20201115 23:01:23.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.889" endtime="20201115 23:01:23.281"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.284" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.293" endtime="20201115 23:01:23.309"></status>
</kw>
<msg timestamp="20201115 23:01:23.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.291" endtime="20201115 23:01:23.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.310" endtime="20201115 23:01:23.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.313" endtime="20201115 23:01:23.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.289" endtime="20201115 23:01:23.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.286" endtime="20201115 23:01:23.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.322" endtime="20201115 23:01:23.606"></status>
</kw>
<msg timestamp="20201115 23:01:23.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025572861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025593264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.320" endtime="20201115 23:01:23.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025572861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025593264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.610" endtime="20201115 23:01:23.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.619" endtime="20201115 23:01:23.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.318" endtime="20201115 23:01:23.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.316" endtime="20201115 23:01:23.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.625" level="INFO">${RESULT} = [{'time': 0.025593264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.040300000000217e-05, 'source_diff': 2.040300000000217e-05}, {'time': 0.025623306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:23.622" endtime="20201115 23:01:23.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.640" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:23.626" endtime="20201115 23:01:23.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.645" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.644" endtime="20201115 23:01:23.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.647" level="INFO">VALUE: [2.040300000000217e-05, 2.0319999999997285e-05, 2.0805999999998215e-05, 2.034700000000042e-05, 2.005499999999799e-05, 2.0792000000002114e-05, 2.034700000000042e-05, 2.009700000000017e-05, 2.0778000000002544e-05, 2.0320000000000754e-05, 2.0805999999998215e-05, 2.0528000000002294e-05, 2.0111999999999214e-05, 2.0429999999998366e-05, 2.0791999999998645e-05, 1.988899999999863e-05, 2.0347999999999894e-05, 2.034700000000042e-05, 2.033300000000085e-05, 2.036099999999999e-05, 2.0333999999996855e-05, 2.034700000000042e-05, 1.994499999999691e-05, 1.9888000000002626e-05, 2.0097999999999644e-05, 2.056899999999806e-05, 2.011099999999974e-05, 2.0820000000001254e-05, 2.061100000000024e-05, 2.034700000000042e-05, 2.080499999999874e-05, 2.009700000000017e-05, 2.012500000000278e-05, 2.0486000000000115e-05, 2.033299999999738e-05, 2.0777999999999075e-05, 2.033300000000085e-05, 2.031899999999781e-05, 2.0334000000000324e-05, 1.987499999999906e-05, 2.084699999999745e-05, 2.0527999999998825e-05, 2.056899999999806e-05, 1.986100000000296e-05, 2.05830000000011e-05, 2.0834000000000824e-05, 2.0111999999999214e-05, 2.056900000000153e-05, 2.0806000000001684e-05, 2.034700000000042e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.646" endtime="20201115 23:01:23.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.641" endtime="20201115 23:01:23.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.650" endtime="20201115 23:01:23.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.654" endtime="20201115 23:01:23.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.652" endtime="20201115 23:01:23.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.649" endtime="20201115 23:01:23.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.285" endtime="20201115 23:01:23.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.283" endtime="20201115 23:01:23.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.282" endtime="20201115 23:01:23.675"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.678" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.686" endtime="20201115 23:01:23.701"></status>
</kw>
<msg timestamp="20201115 23:01:23.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.684" endtime="20201115 23:01:23.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.702" endtime="20201115 23:01:23.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.705" endtime="20201115 23:01:23.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.682" endtime="20201115 23:01:23.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.680" endtime="20201115 23:01:23.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.714" endtime="20201115 23:01:24.001"></status>
</kw>
<msg timestamp="20201115 23:01:24.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024149833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024172097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.713" endtime="20201115 23:01:24.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024149833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024172097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.005" endtime="20201115 23:01:24.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.014" endtime="20201115 23:01:24.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.710" endtime="20201115 23:01:24.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.708" endtime="20201115 23:01:24.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.020" level="INFO">${RESULT} = [{'time': 0.024172097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2264000000001005e-05, 'source_diff': 2.2264000000001005e-05}, {'time': 0.024200042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:24.017" endtime="20201115 23:01:24.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.034" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:24.021" endtime="20201115 23:01:24.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.038" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.037" endtime="20201115 23:01:24.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.041" level="INFO">VALUE: [2.2264000000001005e-05, 2.1056000000001934e-05, 2.1277999999999575e-05, 2.17090000000017e-05, 2.172300000000127e-05, 2.1486000000001115e-05, 2.1013999999999755e-05, 2.15830000000021e-05, 2.104099999999942e-05, 2.1486000000001115e-05, 2.1264000000000005e-05, 2.1042000000002364e-05, 2.122300000000077e-05, 2.1027999999999325e-05, 2.1013999999999755e-05, 2.169500000000213e-05, 2.1485999999997646e-05, 2.1486000000001115e-05, 2.1486000000001115e-05, 2.1707999999998756e-05, 2.1013999999999755e-05, 2.1514000000000255e-05, 2.1679999999999616e-05, 2.1264000000000005e-05, 2.1736000000001365e-05, 2.1264000000000005e-05, 2.094499999999791e-05, 2.1486000000001115e-05, 2.0985999999997146e-05, 2.1277999999999575e-05, 2.102699999999985e-05, 2.1027999999999325e-05, 2.1722000000001795e-05, 2.129099999999967e-05, 2.1083999999997605e-05, 2.101300000000028e-05, 2.0763999999999505e-05, 2.1236000000000865e-05, 2.1721999999998326e-05, 2.1041999999998895e-05, 2.1500000000000685e-05, 2.1250000000000435e-05, 2.1722000000001795e-05, 2.102699999999985e-05, 2.1735999999997896e-05, 2.1027999999999325e-05, 2.1499999999997216e-05, 2.1027999999999325e-05, 2.1527999999999825e-05, 2.1500000000000685e-05]</msg>
<status status="PASS" starttime="20201115 23:01:24.040" endtime="20201115 23:01:24.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.035" endtime="20201115 23:01:24.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.044" endtime="20201115 23:01:24.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.048" endtime="20201115 23:01:24.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.046" endtime="20201115 23:01:24.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.043" endtime="20201115 23:01:24.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.678" endtime="20201115 23:01:24.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.676" endtime="20201115 23:01:24.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.676" endtime="20201115 23:01:24.069"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.072" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.080" endtime="20201115 23:01:24.095"></status>
</kw>
<msg timestamp="20201115 23:01:24.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.078" endtime="20201115 23:01:24.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.096" endtime="20201115 23:01:24.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.099" endtime="20201115 23:01:24.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.076" endtime="20201115 23:01:24.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.073" endtime="20201115 23:01:24.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.108" endtime="20201115 23:01:24.395"></status>
</kw>
<msg timestamp="20201115 23:01:24.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024155708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024178875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.106" endtime="20201115 23:01:24.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024155708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024178875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.399" endtime="20201115 23:01:24.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.407" endtime="20201115 23:01:24.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.104" endtime="20201115 23:01:24.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.102" endtime="20201115 23:01:24.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.414" level="INFO">${RESULT} = [{'time': 0.024178875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.316699999999755e-05, 'source_diff': 2.316699999999755e-05}, {'time': 0.024203819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:24.411" endtime="20201115 23:01:24.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.428" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:24.415" endtime="20201115 23:01:24.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.432" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.431" endtime="20201115 23:01:24.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.435" level="INFO">VALUE: [2.316699999999755e-05, 2.287500000000206e-05, 2.2429999999996897e-05, 2.2430000000000366e-05, 2.265299999999748e-05, 2.2179999999996647e-05, 2.218099999999959e-05, 2.2193999999999686e-05, 2.288900000000163e-05, 2.243099999999984e-05, 2.2680000000000616e-05, 2.265300000000095e-05, 2.1943999999999436e-05, 2.218099999999959e-05, 2.241700000000027e-05, 2.266700000000052e-05, 2.266699999999705e-05, 2.220899999999873e-05, 2.1986000000001615e-05, 2.265300000000095e-05, 2.288899999999816e-05, 2.2193999999999686e-05, 2.24030000000007e-05, 2.241700000000027e-05, 2.2235999999998396e-05, 2.240299999999723e-05, 2.286100000000249e-05, 2.266700000000052e-05, 2.219499999999916e-05, 2.195899999999848e-05, 2.2180000000000116e-05, 2.2916000000001296e-05, 2.2707999999999756e-05, 2.194499999999891e-05, 2.2194000000003156e-05, 2.2666000000001046e-05, 2.24030000000007e-05, 2.2415999999997327e-05, 2.218099999999959e-05, 2.218100000000306e-05, 2.219499999999916e-05, 2.213900000000088e-05, 2.1957999999999006e-05, 2.2666000000001046e-05, 2.2166000000000546e-05, 2.29030000000012e-05, 2.2194000000003156e-05, 2.294499999999991e-05, 2.1971999999998576e-05, 2.243099999999984e-05]</msg>
<status status="PASS" starttime="20201115 23:01:24.433" endtime="20201115 23:01:24.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.429" endtime="20201115 23:01:24.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.438" endtime="20201115 23:01:24.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.442" endtime="20201115 23:01:24.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.440" endtime="20201115 23:01:24.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.437" endtime="20201115 23:01:24.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.072" endtime="20201115 23:01:24.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.070" endtime="20201115 23:01:24.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.069" endtime="20201115 23:01:24.463"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.465" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.473" endtime="20201115 23:01:24.489"></status>
</kw>
<msg timestamp="20201115 23:01:24.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.472" endtime="20201115 23:01:24.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.490" endtime="20201115 23:01:24.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.493" endtime="20201115 23:01:24.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.469" endtime="20201115 23:01:24.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.467" endtime="20201115 23:01:24.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.502" endtime="20201115 23:01:24.786"></status>
</kw>
<msg timestamp="20201115 23:01:24.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024324181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024348014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.500" endtime="20201115 23:01:24.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024324181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024348014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.791" endtime="20201115 23:01:24.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.799" endtime="20201115 23:01:24.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.498" endtime="20201115 23:01:24.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.496" endtime="20201115 23:01:24.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.806" level="INFO">${RESULT} = [{'time': 0.024348014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.383300000000088e-05, 'source_diff': 2.383300000000088e-05}, {'time': 0.024379111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:24.802" endtime="20201115 23:01:24.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.820" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:24.807" endtime="20201115 23:01:24.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.824" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.823" endtime="20201115 23:01:24.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.827" level="INFO">VALUE: [2.383300000000088e-05, 2.312499999999884e-05, 2.287500000000206e-05, 2.3582999999997162e-05, 2.358300000000063e-05, 2.287500000000206e-05, 2.334699999999995e-05, 2.3570000000000535e-05, 2.3584000000000105e-05, 2.358300000000063e-05, 2.3320000000000285e-05, 2.30969999999997e-05, 2.333300000000038e-05, 2.3528000000001825e-05, 2.287500000000206e-05, 2.3832999999997412e-05, 2.3570000000000535e-05, 2.3806000000001215e-05, 2.334699999999995e-05, 2.3570000000000535e-05, 2.358300000000063e-05, 2.3584000000000105e-05, 2.356900000000106e-05, 2.336099999999952e-05, 2.312499999999884e-05, 2.334699999999995e-05, 2.3791999999998176e-05, 2.334699999999995e-05, 2.3805999999997746e-05, 2.334699999999995e-05, 2.312499999999884e-05, 2.338899999999866e-05, 2.3347999999999425e-05, 2.361100000000324e-05, 2.358300000000063e-05, 2.356900000000106e-05, 2.358300000000063e-05, 2.3555999999997496e-05, 2.3806000000001215e-05, 2.287500000000206e-05, 2.313900000000188e-05, 2.287499999999859e-05, 2.3820000000000785e-05, 2.312499999999884e-05, 2.287499999999859e-05, 2.338900000000213e-05, 2.355500000000149e-05, 2.308300000000013e-05, 2.288900000000163e-05, 2.358300000000063e-05]</msg>
<status status="PASS" starttime="20201115 23:01:24.825" endtime="20201115 23:01:24.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.821" endtime="20201115 23:01:24.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.830" endtime="20201115 23:01:24.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.833" endtime="20201115 23:01:24.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.832" endtime="20201115 23:01:24.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.828" endtime="20201115 23:01:24.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.466" endtime="20201115 23:01:24.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.464" endtime="20201115 23:01:24.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.463" endtime="20201115 23:01:24.854"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.857" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.865" endtime="20201115 23:01:24.881"></status>
</kw>
<msg timestamp="20201115 23:01:24.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.864" endtime="20201115 23:01:24.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.883" endtime="20201115 23:01:24.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.885" endtime="20201115 23:01:24.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.861" endtime="20201115 23:01:24.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.859" endtime="20201115 23:01:24.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.895" endtime="20201115 23:01:25.181"></status>
</kw>
<msg timestamp="20201115 23:01:25.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025034667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025059222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.893" endtime="20201115 23:01:25.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025034667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025059222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.185" endtime="20201115 23:01:25.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.194" endtime="20201115 23:01:25.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.891" endtime="20201115 23:01:25.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.889" endtime="20201115 23:01:25.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.201" level="INFO">${RESULT} = [{'time': 0.025059222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4554999999999022e-05, 'source_diff': 2.4554999999999022e-05}, {'time': 0.025093222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:25.198" endtime="20201115 23:01:25.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.216" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:25.202" endtime="20201115 23:01:25.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.220" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.219" endtime="20201115 23:01:25.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.223" level="INFO">VALUE: [2.4554999999999022e-05, 2.4290999999999202e-05, 2.4750000000000466e-05, 2.4013999999999286e-05, 2.4055999999997996e-05, 2.4458000000001506e-05, 2.4513999999999786e-05, 2.4472000000001076e-05, 2.4513999999999786e-05, 2.4249999999999966e-05, 2.4500000000000216e-05, 2.4277999999999106e-05, 2.4722000000001326e-05, 2.4263999999999536e-05, 2.4721999999997857e-05, 2.4500000000000216e-05, 2.3804999999998272e-05, 2.4277999999999106e-05, 2.4750000000000466e-05, 2.3818999999997842e-05, 2.4736000000000896e-05, 2.4541999999998926e-05, 2.4222000000000826e-05, 2.4292000000002145e-05, 2.468100000000209e-05, 2.4040999999998952e-05, 2.4236000000000396e-05, 2.3999999999999716e-05, 2.4276999999999632e-05, 2.4485999999997177e-05, 2.4236000000000396e-05, 2.4541999999998926e-05, 2.4041999999998426e-05, 2.4055999999997996e-05, 2.4249999999999966e-05, 2.4277999999999106e-05, 2.4236000000000396e-05, 2.4513999999999786e-05, 2.4054999999998522e-05, 2.4707999999998287e-05, 2.4263999999999536e-05, 2.4764000000000036e-05, 2.4735999999997427e-05, 2.4500000000000216e-05, 2.4042000000001895e-05, 2.4054999999998522e-05, 2.4263999999999536e-05, 2.4249999999999966e-05, 2.4513000000000312e-05, 2.406900000000156e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.221" endtime="20201115 23:01:25.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.217" endtime="20201115 23:01:25.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.226" endtime="20201115 23:01:25.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.229" endtime="20201115 23:01:25.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.228" endtime="20201115 23:01:25.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.224" endtime="20201115 23:01:25.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.858" endtime="20201115 23:01:25.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.856" endtime="20201115 23:01:25.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.855" endtime="20201115 23:01:25.250"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.253" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.261" endtime="20201115 23:01:25.277"></status>
</kw>
<msg timestamp="20201115 23:01:25.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.259" endtime="20201115 23:01:25.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.279" endtime="20201115 23:01:25.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.281" endtime="20201115 23:01:25.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.257" endtime="20201115 23:01:25.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.255" endtime="20201115 23:01:25.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.291" endtime="20201115 23:01:25.576"></status>
</kw>
<msg timestamp="20201115 23:01:25.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024001708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024027431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.289" endtime="20201115 23:01:25.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024001708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024027431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.581" endtime="20201115 23:01:25.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.589" endtime="20201115 23:01:25.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.286" endtime="20201115 23:01:25.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.284" endtime="20201115 23:01:25.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.596" level="INFO">${RESULT} = [{'time': 0.024027431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.572299999999833e-05, 'source_diff': 2.572299999999833e-05}, {'time': 0.024054292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:25.592" endtime="20201115 23:01:25.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.609" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:25.597" endtime="20201115 23:01:25.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.614" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.613" endtime="20201115 23:01:25.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.616" level="INFO">VALUE: [2.572299999999833e-05, 2.519500000000216e-05, 2.5652000000001007e-05, 2.519499999999869e-05, 2.4972000000001576e-05, 2.5152000000000507e-05, 2.5666000000000577e-05, 2.5666000000000577e-05, 2.565300000000048e-05, 2.590300000000073e-05, 2.5222000000001826e-05, 2.566700000000005e-05, 2.543099999999937e-05, 2.495900000000148e-05, 2.566700000000005e-05, 2.588900000000116e-05, 2.5193999999999217e-05, 2.520899999999826e-05, 2.545900000000198e-05, 2.5652000000001007e-05, 2.5193999999999217e-05, 2.590300000000073e-05, 2.4971999999998107e-05, 2.537499999999762e-05, 2.520899999999826e-05, 2.5193999999999217e-05, 2.544499999999894e-05, 2.5429999999999897e-05, 2.5651999999997538e-05, 2.563899999999744e-05, 2.568099999999962e-05, 2.5416000000000327e-05, 2.543100000000284e-05, 2.5193999999999217e-05, 2.5264000000000536e-05, 2.54169999999998e-05, 2.5443999999999467e-05, 2.495900000000148e-05, 2.537499999999762e-05, 2.498700000000062e-05, 2.568099999999962e-05, 2.566700000000005e-05, 2.4985999999997677e-05, 2.5652000000001007e-05, 2.590300000000073e-05, 2.4972000000001576e-05, 2.5458000000002506e-05, 2.565300000000048e-05, 2.5208000000002256e-05, 2.544500000000241e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.615" endtime="20201115 23:01:25.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.610" endtime="20201115 23:01:25.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.620" endtime="20201115 23:01:25.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.623" endtime="20201115 23:01:25.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.621" endtime="20201115 23:01:25.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.618" endtime="20201115 23:01:25.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.253" endtime="20201115 23:01:25.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.252" endtime="20201115 23:01:25.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.251" endtime="20201115 23:01:25.644"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.646" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.655" endtime="20201115 23:01:25.670"></status>
</kw>
<msg timestamp="20201115 23:01:25.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.653" endtime="20201115 23:01:25.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.671" endtime="20201115 23:01:25.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.674" endtime="20201115 23:01:25.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.651" endtime="20201115 23:01:25.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.648" endtime="20201115 23:01:25.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.683" endtime="20201115 23:01:25.970"></status>
</kw>
<msg timestamp="20201115 23:01:25.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024007083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024034417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.682" endtime="20201115 23:01:25.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024007083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024034417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.974" endtime="20201115 23:01:25.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.983" endtime="20201115 23:01:25.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.679" endtime="20201115 23:01:25.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.678" endtime="20201115 23:01:25.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.989" level="INFO">${RESULT} = [{'time': 0.024034417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7334000000000386e-05, 'source_diff': 2.7334000000000386e-05}, {'time': 0.024065264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:25.986" endtime="20201115 23:01:25.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.003" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:25.990" endtime="20201115 23:01:26.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.008" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.007" endtime="20201115 23:01:26.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.010" level="INFO">VALUE: [2.7334000000000386e-05, 2.6360999999999052e-05, 2.6583999999999636e-05, 2.6360999999999052e-05, 2.6583000000000162e-05, 2.6805000000001272e-05, 2.586100000000202e-05, 2.6542000000000926e-05, 2.6583000000000162e-05, 2.6597999999999206e-05, 2.6110999999998802e-05, 2.6346999999999482e-05, 2.60970000000027e-05, 2.59170000000003e-05, 2.611100000000227e-05, 2.612500000000184e-05, 2.613899999999794e-05, 2.6833000000000412e-05, 2.590299999999726e-05, 2.6083999999999136e-05, 2.6791999999997707e-05, 2.6624999999998872e-05, 2.6346999999999482e-05, 2.613899999999794e-05, 2.612500000000184e-05, 2.587500000000159e-05, 2.6124999999998372e-05, 2.612500000000184e-05, 2.5902000000001257e-05, 2.6124999999998372e-05, 2.6819000000000842e-05, 2.588900000000116e-05, 2.6583999999999636e-05, 2.6347999999998956e-05, 2.6292000000000676e-05, 2.6570000000000066e-05, 2.665300000000148e-05, 2.6583000000000162e-05, 2.5971999999999107e-05, 2.6347999999998956e-05, 2.6819000000000842e-05, 2.611100000000227e-05, 2.6583999999999636e-05, 2.6110999999998802e-05, 2.6360999999999052e-05, 2.6110999999998802e-05, 2.6570000000000066e-05, 2.6597999999999206e-05, 2.6833000000000412e-05, 2.6833000000000412e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.009" endtime="20201115 23:01:26.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.004" endtime="20201115 23:01:26.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.013" endtime="20201115 23:01:26.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.017" endtime="20201115 23:01:26.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.015" endtime="20201115 23:01:26.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.012" endtime="20201115 23:01:26.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.647" endtime="20201115 23:01:26.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.645" endtime="20201115 23:01:26.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.644" endtime="20201115 23:01:26.038"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.040" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.049" endtime="20201115 23:01:26.065"></status>
</kw>
<msg timestamp="20201115 23:01:26.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.047" endtime="20201115 23:01:26.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.067" endtime="20201115 23:01:26.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.069" endtime="20201115 23:01:26.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.045" endtime="20201115 23:01:26.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.042" endtime="20201115 23:01:26.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.078" endtime="20201115 23:01:26.364"></status>
</kw>
<msg timestamp="20201115 23:01:26.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024942931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024971181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.077" endtime="20201115 23:01:26.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024942931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024971181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.368" endtime="20201115 23:01:26.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.377" endtime="20201115 23:01:26.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.074" endtime="20201115 23:01:26.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.072" endtime="20201115 23:01:26.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.383" level="INFO">${RESULT} = [{'time': 0.024971181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8249999999997027e-05, 'source_diff': 2.8249999999997027e-05}, {'time': 0.025007056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:26.380" endtime="20201115 23:01:26.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.397" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:26.384" endtime="20201115 23:01:26.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.401" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.400" endtime="20201115 23:01:26.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.404" level="INFO">VALUE: [2.8249999999997027e-05, 2.7513999999999317e-05, 2.7512999999999843e-05, 2.7277999999998637e-05, 2.7055000000001522e-05, 2.7292000000001676e-05, 2.7069000000001092e-05, 2.7527000000002882e-05, 2.7292000000001676e-05, 2.7028000000001856e-05, 2.7056000000000996e-05, 2.7749999999999997e-05, 2.7513999999999317e-05, 2.7041999999997957e-05, 2.7694000000001717e-05, 2.7513999999999317e-05, 2.7278000000002106e-05, 2.7110999999999802e-05, 2.7291999999998207e-05, 2.7222000000000357e-05, 2.7693999999998248e-05, 2.7305000000001772e-05, 2.7333000000000912e-05, 2.7028000000001856e-05, 2.7042000000001426e-05, 2.7763999999999567e-05, 2.7458000000001037e-05, 2.7763000000000093e-05, 2.7277999999998637e-05, 2.7055000000001522e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.7570000000001066e-05, 2.7554999999998553e-05, 2.7749999999999997e-05, 2.7305999999997776e-05, 2.7513999999999317e-05, 2.7597000000000732e-05, 2.7319000000001342e-05, 2.7749999999999997e-05, 2.7069999999997096e-05, 2.7292000000001676e-05, 2.7069000000001092e-05, 2.7527999999998887e-05, 2.7097000000000232e-05, 2.7541999999998457e-05, 2.7556000000001496e-05, 2.7513999999999317e-05, 2.7556000000001496e-05, 2.7486000000000177e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.403" endtime="20201115 23:01:26.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.398" endtime="20201115 23:01:26.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.407" endtime="20201115 23:01:26.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.411" endtime="20201115 23:01:26.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.409" endtime="20201115 23:01:26.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.405" endtime="20201115 23:01:26.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.041" endtime="20201115 23:01:26.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.039" endtime="20201115 23:01:26.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.038" endtime="20201115 23:01:26.432"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.435" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.443" endtime="20201115 23:01:26.459"></status>
</kw>
<msg timestamp="20201115 23:01:26.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.441" endtime="20201115 23:01:26.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.461" endtime="20201115 23:01:26.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.463" endtime="20201115 23:01:26.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.439" endtime="20201115 23:01:26.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.437" endtime="20201115 23:01:26.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.472" endtime="20201115 23:01:26.758"></status>
</kw>
<msg timestamp="20201115 23:01:26.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025067514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02509625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:26.471" endtime="20201115 23:01:26.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025067514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02509625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:26.763" endtime="20201115 23:01:26.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.771" endtime="20201115 23:01:26.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.468" endtime="20201115 23:01:26.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.466" endtime="20201115 23:01:26.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.778" level="INFO">${RESULT} = [{'time': 0.02509625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8736000000001427e-05, 'source_diff': 2.8736000000001427e-05}, {'time': 0.025126111, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:26.774" endtime="20201115 23:01:26.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.792" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:26.779" endtime="20201115 23:01:26.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.797" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.796" endtime="20201115 23:01:26.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.799" level="INFO">VALUE: [2.8736000000001427e-05, 2.8054999999999053e-05, 2.843100000000237e-05, 2.8639000000000442e-05, 2.7957999999998068e-05, 2.7957999999998068e-05, 2.84309999999989e-05, 2.7972000000001107e-05, 2.8903000000000262e-05, 2.7986000000000677e-05, 2.8429999999999428e-05, 2.7986000000000677e-05, 2.8000000000000247e-05, 2.815300000000298e-05, 2.869500000000219e-05, 2.7986000000000677e-05, 2.8500000000000747e-05, 2.791699999999883e-05, 2.7986000000000677e-05, 2.866599999999664e-05, 2.7985999999997208e-05, 2.8000000000000247e-05, 2.868099999999915e-05, 2.8903000000000262e-05, 2.8666999999999582e-05, 2.8208000000001787e-05, 2.84309999999989e-05, 2.868099999999915e-05, 2.7986000000000677e-05, 2.8443999999998998e-05, 2.8236000000000927e-05, 2.8221999999997888e-05, 2.7958000000001537e-05, 2.844500000000194e-05, 2.7986000000000677e-05, 2.8943999999999498e-05, 2.8374999999997152e-05, 2.869499999999872e-05, 2.844500000000194e-05, 2.820900000000126e-05, 2.820900000000126e-05, 2.7957999999998068e-05, 2.7972000000001107e-05, 2.8457999999998568e-05, 2.8639000000000442e-05, 2.7986000000000677e-05, 2.8903000000000262e-05, 2.8889000000000692e-05, 2.8458000000002037e-05, 2.8679999999999678e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.798" endtime="20201115 23:01:26.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.793" endtime="20201115 23:01:26.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.803" endtime="20201115 23:01:26.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.806" endtime="20201115 23:01:26.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.805" endtime="20201115 23:01:26.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.801" endtime="20201115 23:01:26.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.435" endtime="20201115 23:01:26.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.433" endtime="20201115 23:01:26.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.433" endtime="20201115 23:01:26.827"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.830" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.838" endtime="20201115 23:01:26.854"></status>
</kw>
<msg timestamp="20201115 23:01:26.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.836" endtime="20201115 23:01:26.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.856" endtime="20201115 23:01:26.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.858" endtime="20201115 23:01:26.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.834" endtime="20201115 23:01:26.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.832" endtime="20201115 23:01:26.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.868" endtime="20201115 23:01:27.153"></status>
</kw>
<msg timestamp="20201115 23:01:27.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024390431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024420778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.866" endtime="20201115 23:01:27.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024390431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024420778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.157" endtime="20201115 23:01:27.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.166" endtime="20201115 23:01:27.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.863" endtime="20201115 23:01:27.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.862" endtime="20201115 23:01:27.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.172" level="INFO">${RESULT} = [{'time': 0.024420778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0347000000000013e-05, 'source_diff': 3.0347000000000013e-05}, {'time': 0.024452569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:27.169" endtime="20201115 23:01:27.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.186" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:27.173" endtime="20201115 23:01:27.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.191" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.190" endtime="20201115 23:01:27.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.200" level="INFO">VALUE: [3.0347000000000013e-05, 2.9582999999999693e-05, 2.9388999999997723e-05, 2.9610999999998833e-05, 2.9361000000002052e-05, 2.8903000000000262e-05, 2.9138999999997472e-05, 2.9139000000000942e-05, 2.9582999999999693e-05, 2.9097000000002232e-05, 2.9596999999999263e-05, 2.9375000000001622e-05, 2.9610999999998833e-05, 2.9125000000001372e-05, 2.9333999999998916e-05, 2.8889000000000692e-05, 2.9611000000002302e-05, 2.9610999999998833e-05, 2.9125000000001372e-05, 2.9334000000002386e-05, 2.9846999999999513e-05, 2.9139000000000942e-05, 2.8889000000000692e-05, 2.8874999999997653e-05, 2.9832999999999943e-05, 2.9402000000001288e-05, 2.9138999999997472e-05, 2.9361999999998056e-05, 2.9360999999998583e-05, 2.9388999999997723e-05, 2.9583999999999167e-05, 2.9610999999998833e-05, 2.8847000000001982e-05, 2.9360999999998583e-05, 2.8986000000001677e-05, 2.9833999999999417e-05, 2.9832999999999943e-05, 2.8889000000000692e-05, 2.9597999999998736e-05, 2.9375000000001622e-05, 2.9653000000001012e-05, 2.9528000000000887e-05, 2.9610999999998833e-05, 2.9596999999999263e-05, 2.9334000000002386e-05, 2.9138999999997472e-05, 2.9375000000001622e-05, 2.9389000000001192e-05, 2.9610999999998833e-05, 2.9138999999997472e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.192" endtime="20201115 23:01:27.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.187" endtime="20201115 23:01:27.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.203" endtime="20201115 23:01:27.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.207" endtime="20201115 23:01:27.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.205" endtime="20201115 23:01:27.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.202" endtime="20201115 23:01:27.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.830" endtime="20201115 23:01:27.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.829" endtime="20201115 23:01:27.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.828" endtime="20201115 23:01:27.228"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.230" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.238" endtime="20201115 23:01:27.254"></status>
</kw>
<msg timestamp="20201115 23:01:27.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.237" endtime="20201115 23:01:27.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.256" endtime="20201115 23:01:27.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.258" endtime="20201115 23:01:27.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.234" endtime="20201115 23:01:27.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.232" endtime="20201115 23:01:27.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.267" endtime="20201115 23:01:27.552"></status>
</kw>
<msg timestamp="20201115 23:01:27.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024305556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024336583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.266" endtime="20201115 23:01:27.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024305556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024336583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.557" endtime="20201115 23:01:27.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.565" endtime="20201115 23:01:27.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.263" endtime="20201115 23:01:27.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.261" endtime="20201115 23:01:27.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.572" level="INFO">${RESULT} = [{'time': 0.024336583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1026999999999444e-05, 'source_diff': 3.1026999999999444e-05}, {'time': 0.024370625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:27.568" endtime="20201115 23:01:27.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.586" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:27.573" endtime="20201115 23:01:27.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.590" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.589" endtime="20201115 23:01:27.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.593" level="INFO">VALUE: [3.1026999999999444e-05, 3.0083000000000193e-05, 3.054200000000146e-05, 3.054100000000198e-05, 3.074999999999953e-05, 3.055500000000155e-05, 3.0292000000001207e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 2.9819000000000373e-05, 3.052799999999842e-05, 3.0292000000001207e-05, 3.0513999999998848e-05, 3.0277999999998167e-05, 3.0069000000000623e-05, 2.9819999999999847e-05, 3.054199999999799e-05, 3.070800000000082e-05, 3.0554999999998084e-05, 3.0304999999997834e-05, 3.07639999999991e-05, 3.0042000000000957e-05, 2.9832999999999943e-05, 3.072199999999692e-05, 3.0069000000000623e-05, 3.074999999999953e-05, 2.9806000000000277e-05, 3.0083999999999667e-05, 2.9819999999999847e-05, 2.9847999999998986e-05, 3.054100000000198e-05, 3.0042000000000957e-05, 3.0055000000001053e-05, 3.0305999999997307e-05, 3.0304999999997834e-05, 3.0056000000000527e-05, 2.9804999999997334e-05, 3.0472000000000138e-05, 3.07639999999991e-05, 3.0083000000000193e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.0070000000000097e-05, 3.0277999999998167e-05, 3.0263999999998598e-05, 3.0762999999999624e-05, 3.074999999999953e-05, 3.0055000000001053e-05, 3.0319000000000873e-05, 3.074999999999953e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.591" endtime="20201115 23:01:27.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.587" endtime="20201115 23:01:27.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.596" endtime="20201115 23:01:27.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.599" endtime="20201115 23:01:27.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.598" endtime="20201115 23:01:27.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.594" endtime="20201115 23:01:27.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.231" endtime="20201115 23:01:27.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.229" endtime="20201115 23:01:27.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.228" endtime="20201115 23:01:27.621"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.623" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.631" endtime="20201115 23:01:27.647"></status>
</kw>
<msg timestamp="20201115 23:01:27.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.630" endtime="20201115 23:01:27.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.648" endtime="20201115 23:01:27.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.651" endtime="20201115 23:01:27.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.627" endtime="20201115 23:01:27.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.625" endtime="20201115 23:01:27.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.660" endtime="20201115 23:01:27.946"></status>
</kw>
<msg timestamp="20201115 23:01:27.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02422725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024261069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:27.658" endtime="20201115 23:01:27.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02422725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024261069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:27.951" endtime="20201115 23:01:27.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.960" endtime="20201115 23:01:27.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.656" endtime="20201115 23:01:27.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.654" endtime="20201115 23:01:27.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.967" level="INFO">${RESULT} = [{'time': 0.024261069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3819000000000904e-05, 'source_diff': 3.3819000000000904e-05}, {'time': 0.024300653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:27.963" endtime="20201115 23:01:27.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.980" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:27.968" endtime="20201115 23:01:27.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.985" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.984" endtime="20201115 23:01:27.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.987" level="INFO">VALUE: [3.3819000000000904e-05, 3.298599999999874e-05, 3.30839999999992e-05, 3.327800000000117e-05, 3.300000000000178e-05, 3.302800000000092e-05, 3.284799999999852e-05, 3.355600000000056e-05, 3.349999999999881e-05, 3.3374999999998683e-05, 3.2874999999998183e-05, 3.294400000000003e-05, 3.299999999999831e-05, 3.316599999999767e-05, 3.320799999999985e-05, 3.350000000000228e-05, 3.3526999999998475e-05, 3.3319000000000404e-05, 3.298600000000221e-05, 3.341600000000139e-05, 3.3596999999999794e-05, 3.298599999999874e-05, 3.320799999999985e-05, 3.3319000000000404e-05, 3.329200000000074e-05, 3.355600000000056e-05, 3.3610999999999364e-05, 3.288900000000122e-05, 3.379200000000124e-05, 3.354200000000099e-05, 3.313900000000147e-05, 3.2846999999999044e-05, 3.301400000000135e-05, 3.348599999999924e-05, 3.380600000000081e-05, 3.366700000000111e-05, 3.302800000000092e-05, 3.318100000000018e-05, 3.368100000000068e-05, 3.305600000000006e-05, 3.3445e-05, 3.323600000000246e-05, 3.298599999999874e-05, 3.315300000000104e-05, 3.323699999999846e-05, 3.330600000000031e-05, 3.330600000000031e-05, 3.376399999999863e-05, 3.2874999999998183e-05, 3.3833000000000474e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.986" endtime="20201115 23:01:27.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.981" endtime="20201115 23:01:27.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.990" endtime="20201115 23:01:27.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.994" endtime="20201115 23:01:28.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.992" endtime="20201115 23:01:28.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.989" endtime="20201115 23:01:28.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.624" endtime="20201115 23:01:28.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.622" endtime="20201115 23:01:28.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.621" endtime="20201115 23:01:28.015"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.017" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.026" endtime="20201115 23:01:28.042"></status>
</kw>
<msg timestamp="20201115 23:01:28.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.024" endtime="20201115 23:01:28.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.043" endtime="20201115 23:01:28.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.046" endtime="20201115 23:01:28.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.021" endtime="20201115 23:01:28.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.019" endtime="20201115 23:01:28.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.055" endtime="20201115 23:01:28.342"></status>
</kw>
<msg timestamp="20201115 23:01:28.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025025347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025060097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.053" endtime="20201115 23:01:28.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025025347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025060097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.346" endtime="20201115 23:01:28.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.354" endtime="20201115 23:01:28.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.051" endtime="20201115 23:01:28.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.049" endtime="20201115 23:01:28.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.361" level="INFO">${RESULT} = [{'time': 0.025060097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.475000000000006e-05, 'source_diff': 3.475000000000006e-05}, {'time': 0.025102722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:28.358" endtime="20201115 23:01:28.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.376" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:28.362" endtime="20201115 23:01:28.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.381" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.380" endtime="20201115 23:01:28.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.383" level="INFO">VALUE: [3.475000000000006e-05, 3.413900000000247e-05, 3.4638999999999504e-05, 3.4069000000001154e-05, 3.3819000000000904e-05, 3.416599999999867e-05, 3.4555000000002084e-05, 3.466699999999864e-05, 3.4402999999998823e-05, 3.44580000000011e-05, 3.441700000000186e-05, 3.405600000000106e-05, 3.4082999999997254e-05, 3.426399999999913e-05, 3.416700000000161e-05, 3.455599999999809e-05, 3.449999999999981e-05, 3.422200000000042e-05, 3.479199999999877e-05, 3.423599999999999e-05, 3.4402999999998823e-05, 3.416600000000214e-05, 3.433400000000045e-05, 3.4361000000000114e-05, 3.455599999999809e-05, 3.4124999999999434e-05, 3.4318999999997934e-05, 3.399999999999931e-05, 3.455600000000156e-05, 3.423599999999999e-05, 3.4304999999998365e-05, 3.476399999999963e-05, 3.398699999999921e-05, 3.445799999999763e-05, 3.423599999999999e-05, 3.4791000000002764e-05, 3.440199999999935e-05, 3.426399999999913e-05, 3.4804999999998865e-05, 3.3860999999999614e-05, 3.390300000000179e-05, 3.449999999999981e-05, 3.47779999999992e-05, 3.467999999999874e-05, 3.469400000000178e-05, 3.44580000000011e-05, 3.4819000000001904e-05, 3.416700000000161e-05, 3.4402999999998823e-05, 3.3860999999999614e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.382" endtime="20201115 23:01:28.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.377" endtime="20201115 23:01:28.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.386" endtime="20201115 23:01:28.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.390" endtime="20201115 23:01:28.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.388" endtime="20201115 23:01:28.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.384" endtime="20201115 23:01:28.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.018" endtime="20201115 23:01:28.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.016" endtime="20201115 23:01:28.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.015" endtime="20201115 23:01:28.411"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.413" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.421" endtime="20201115 23:01:28.437"></status>
</kw>
<msg timestamp="20201115 23:01:28.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.420" endtime="20201115 23:01:28.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.439" endtime="20201115 23:01:28.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.442" endtime="20201115 23:01:28.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.417" endtime="20201115 23:01:28.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.415" endtime="20201115 23:01:28.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.451" endtime="20201115 23:01:28.737"></status>
</kw>
<msg timestamp="20201115 23:01:28.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024057319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024093236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.449" endtime="20201115 23:01:28.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024057319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024093236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.741" endtime="20201115 23:01:28.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.749" endtime="20201115 23:01:28.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.447" endtime="20201115 23:01:28.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.445" endtime="20201115 23:01:28.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.756" level="INFO">${RESULT} = [{'time': 0.024093236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5916999999999893e-05, 'source_diff': 3.5916999999999893e-05}, {'time': 0.024139847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:28.753" endtime="20201115 23:01:28.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.770" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:28.757" endtime="20201115 23:01:28.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.774" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.773" endtime="20201115 23:01:28.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.776" level="INFO">VALUE: [3.5916999999999893e-05, 3.4902999999999323e-05, 3.572200000000192e-05, 3.5832999999999005e-05, 3.5597000000001794e-05, 3.5097000000001294e-05, 3.494400000000203e-05, 3.556999999999866e-05, 3.570799999999888e-05, 3.5568999999999185e-05, 3.49450000000015e-05, 3.570900000000182e-05, 3.573599999999802e-05, 3.522200000000142e-05, 3.49450000000015e-05, 3.5097000000001294e-05, 3.576399999999716e-05, 3.504199999999902e-05, 3.5389000000000254e-05, 3.507000000000163e-05, 3.530599999999884e-05, 3.570900000000182e-05, 3.5152999999999573e-05, 3.575000000000106e-05, 3.568099999999921e-05, 3.5054999999999115e-05, 3.508399999999773e-05, 3.570800000000235e-05, 3.5305000000002834e-05, 3.5804999999999865e-05, 3.5541000000000045e-05, 3.4888999999999754e-05, 3.5152999999999573e-05, 3.552799999999995e-05, 3.5625000000000934e-05, 3.5139000000000004e-05, 3.500000000000031e-05, 3.5040999999999545e-05, 3.525000000000056e-05, 3.492999999999899e-05, 3.525000000000056e-05, 3.494399999999856e-05, 3.5653000000000074e-05, 3.5304999999999365e-05, 3.49580000000016e-05, 3.5375000000000684e-05, 3.5568999999999185e-05, 3.579199999999977e-05, 3.501399999999988e-05, 3.579199999999977e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.775" endtime="20201115 23:01:28.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.770" endtime="20201115 23:01:28.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.780" endtime="20201115 23:01:28.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.783" endtime="20201115 23:01:28.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.782" endtime="20201115 23:01:28.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.778" endtime="20201115 23:01:28.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.414" endtime="20201115 23:01:28.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.412" endtime="20201115 23:01:28.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.411" endtime="20201115 23:01:28.804"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.807" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.815" endtime="20201115 23:01:28.831"></status>
</kw>
<msg timestamp="20201115 23:01:28.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.814" endtime="20201115 23:01:28.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.833" endtime="20201115 23:01:28.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.835" endtime="20201115 23:01:28.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.811" endtime="20201115 23:01:28.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.809" endtime="20201115 23:01:28.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.845" endtime="20201115 23:01:29.130"></status>
</kw>
<msg timestamp="20201115 23:01:29.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024590167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024627653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.843" endtime="20201115 23:01:29.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024590167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024627653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.134" endtime="20201115 23:01:29.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.143" endtime="20201115 23:01:29.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.840" endtime="20201115 23:01:29.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.839" endtime="20201115 23:01:29.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.150" level="INFO">${RESULT} = [{'time': 0.024627653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.748599999999977e-05, 'source_diff': 3.748599999999977e-05}, {'time': 0.024671278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.146" endtime="20201115 23:01:29.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.163" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:29.151" endtime="20201115 23:01:29.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.168" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.167" endtime="20201115 23:01:29.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.170" level="INFO">VALUE: [3.748599999999977e-05, 3.673600000000249e-05, 3.681999999999991e-05, 3.5889000000000754e-05, 3.650000000000181e-05, 3.606999999999916e-05, 3.650000000000181e-05, 3.654199999999705e-05, 3.654200000000052e-05, 3.624999999999809e-05, 3.6124999999997964e-05, 3.593099999999946e-05, 3.592999999999999e-05, 3.600000000000131e-05, 3.602800000000045e-05, 3.588800000000128e-05, 3.6417000000000394e-05, 3.648600000000224e-05, 3.6346999999999074e-05, 3.618000000000024e-05, 3.6555000000000615e-05, 3.6624999999998464e-05, 3.597200000000217e-05, 3.645799999999963e-05, 3.595799999999913e-05, 3.652800000000095e-05, 3.6569000000000185e-05, 3.5916999999999893e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.6653000000001074e-05, 3.6125000000001434e-05, 3.6569000000000185e-05, 3.655600000000009e-05, 3.6125000000001434e-05, 3.6012999999997936e-05, 3.609800000000177e-05, 3.651399999999791e-05, 3.5903000000000324e-05, 3.6388999999997784e-05, 3.649999999999834e-05, 3.5818999999999435e-05, 3.6389000000001254e-05, 3.59450000000025e-05, 3.619499999999928e-05, 3.649999999999834e-05, 3.626400000000113e-05, 3.647299999999867e-05, 3.629200000000027e-05, 3.640200000000135e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.169" endtime="20201115 23:01:29.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.164" endtime="20201115 23:01:29.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.173" endtime="20201115 23:01:29.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.177" endtime="20201115 23:01:29.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.175" endtime="20201115 23:01:29.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.172" endtime="20201115 23:01:29.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.807" endtime="20201115 23:01:29.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.805" endtime="20201115 23:01:29.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.804" endtime="20201115 23:01:29.198"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.201" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.209" endtime="20201115 23:01:29.226"></status>
</kw>
<msg timestamp="20201115 23:01:29.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.207" endtime="20201115 23:01:29.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.227" endtime="20201115 23:01:29.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.230" endtime="20201115 23:01:29.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.205" endtime="20201115 23:01:29.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.203" endtime="20201115 23:01:29.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.239" endtime="20201115 23:01:29.525"></status>
</kw>
<msg timestamp="20201115 23:01:29.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024791917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024830514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.237" endtime="20201115 23:01:29.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024791917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024830514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.529" endtime="20201115 23:01:29.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.537" endtime="20201115 23:01:29.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.235" endtime="20201115 23:01:29.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.233" endtime="20201115 23:01:29.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.544" level="INFO">${RESULT} = [{'time': 0.024830514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8597000000001325e-05, 'source_diff': 3.8597000000001325e-05}, {'time': 0.024873125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:29.541" endtime="20201115 23:01:29.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.558" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:29.545" endtime="20201115 23:01:29.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.562" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.561" endtime="20201115 23:01:29.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.565" level="INFO">VALUE: [3.8597000000001325e-05, 3.695800000000013e-05, 3.727799999999823e-05, 3.7082999999996785e-05, 3.780600000000134e-05, 3.729200000000127e-05, 3.7445000000000533e-05, 3.6931000000000463e-05, 3.694500000000003e-05, 3.6846999999999575e-05, 3.69589999999996e-05, 3.754200000000152e-05, 3.7597000000000325e-05, 3.758400000000023e-05, 3.69719999999997e-05, 3.694500000000003e-05, 3.686199999999862e-05, 3.7776999999999256e-05, 3.751399999999891e-05, 3.700000000000231e-05, 3.7332999999997035e-05, 3.7402999999998354e-05, 3.757000000000066e-05, 3.71520000000021e-05, 3.698599999999927e-05, 3.7569000000001185e-05, 3.768000000000174e-05, 3.7388999999998784e-05, 3.76659999999987e-05, 3.740199999999888e-05, 3.7374999999999214e-05, 3.6861000000002614e-05, 3.751399999999891e-05, 3.6874999999998714e-05, 3.7610999999999895e-05, 3.723599999999952e-05, 3.7374999999999214e-05, 3.7069000000000685e-05, 3.6846999999999575e-05, 3.6903000000001324e-05, 3.7124999999998964e-05, 3.7125000000002434e-05, 3.7360999999999644e-05, 3.749999999999934e-05, 3.770800000000088e-05, 3.7110999999999394e-05, 3.7624999999999464e-05, 3.729200000000127e-05, 3.732000000000041e-05, 3.7639000000002504e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.563" endtime="20201115 23:01:29.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.559" endtime="20201115 23:01:29.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.568" endtime="20201115 23:01:29.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.572" endtime="20201115 23:01:29.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.570" endtime="20201115 23:01:29.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.567" endtime="20201115 23:01:29.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.201" endtime="20201115 23:01:29.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.200" endtime="20201115 23:01:29.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.199" endtime="20201115 23:01:29.593"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.595" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.604" endtime="20201115 23:01:29.620"></status>
</kw>
<msg timestamp="20201115 23:01:29.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.602" endtime="20201115 23:01:29.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.622" endtime="20201115 23:01:29.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.625" endtime="20201115 23:01:29.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.599" endtime="20201115 23:01:29.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.597" endtime="20201115 23:01:29.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.634" endtime="20201115 23:01:29.919"></status>
</kw>
<msg timestamp="20201115 23:01:29.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025166556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025205194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.632" endtime="20201115 23:01:29.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025166556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025205194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.924" endtime="20201115 23:01:29.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.932" endtime="20201115 23:01:29.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.630" endtime="20201115 23:01:29.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.628" endtime="20201115 23:01:29.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.939" level="INFO">${RESULT} = [{'time': 0.025205194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.863800000000056e-05, 'source_diff': 3.863800000000056e-05}, {'time': 0.025255819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.935" endtime="20201115 23:01:29.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.953" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:29.940" endtime="20201115 23:01:29.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.958" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.957" endtime="20201115 23:01:29.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.961" level="INFO">VALUE: [3.863800000000056e-05, 3.8762999999997216e-05, 3.8333000000001505e-05, 3.790199999999938e-05, 3.826399999999966e-05, 3.791600000000242e-05, 3.8195000000001283e-05, 3.869399999999884e-05, 3.8138999999999534e-05, 3.817999999999877e-05, 3.8166999999998674e-05, 3.845800000000163e-05, 3.7874999999999714e-05, 3.874999999999712e-05, 3.8666999999999174e-05, 3.850000000000034e-05, 3.822199999999748e-05, 3.870800000000188e-05, 3.877799999999973e-05, 3.830600000000184e-05, 3.8166999999998674e-05, 3.7833000000001005e-05, 3.7902999999998854e-05, 3.851399999999991e-05, 3.8111000000000395e-05, 3.8402999999999354e-05, 3.788799999999981e-05, 3.823600000000052e-05, 3.825000000000009e-05, 3.876400000000016e-05, 3.87919999999993e-05, 3.875000000000059e-05, 3.786199999999962e-05, 3.8375000000000214e-05, 3.873700000000049e-05, 3.8181000000001714e-05, 3.8319000000001935e-05, 3.8361000000000645e-05, 3.8318999999998465e-05, 3.8026999999999506e-05, 3.788799999999981e-05, 3.870799999999841e-05, 3.8054999999998645e-05, 3.854199999999905e-05, 3.8347000000001075e-05, 3.854199999999905e-05, 3.854199999999905e-05, 3.8416999999998924e-05, 3.8318999999998465e-05, 3.7903000000002324e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.959" endtime="20201115 23:01:29.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.954" endtime="20201115 23:01:29.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.964" endtime="20201115 23:01:29.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.968" endtime="20201115 23:01:29.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.966" endtime="20201115 23:01:29.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.963" endtime="20201115 23:01:29.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.596" endtime="20201115 23:01:29.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.594" endtime="20201115 23:01:29.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.593" endtime="20201115 23:01:29.989"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.991" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.000" endtime="20201115 23:01:30.016"></status>
</kw>
<msg timestamp="20201115 23:01:30.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.998" endtime="20201115 23:01:30.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.017" endtime="20201115 23:01:30.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.020" endtime="20201115 23:01:30.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.996" endtime="20201115 23:01:30.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.993" endtime="20201115 23:01:30.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.029" endtime="20201115 23:01:30.315"></status>
</kw>
<msg timestamp="20201115 23:01:30.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024507778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024548236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.028" endtime="20201115 23:01:30.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024507778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024548236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.319" endtime="20201115 23:01:30.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.328" endtime="20201115 23:01:30.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.025" endtime="20201115 23:01:30.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.023" endtime="20201115 23:01:30.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.334" level="INFO">${RESULT} = [{'time': 0.024548236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.045800000000016e-05, 'source_diff': 4.045800000000016e-05}, {'time': 0.024596861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:30.331" endtime="20201115 23:01:30.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.348" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:30.336" endtime="20201115 23:01:30.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.353" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.352" endtime="20201115 23:01:30.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.355" level="INFO">VALUE: [4.045800000000016e-05, 3.9597000000002325e-05, 3.9082999999998785e-05, 3.952800000000048e-05, 3.9068999999999215e-05, 3.9416999999999924e-05, 3.9667000000000174e-05, 3.920799999999891e-05, 3.8889000000000284e-05, 3.904199999999955e-05, 3.92919999999998e-05, 3.951400000000091e-05, 3.8875000000000715e-05, 3.9444999999999064e-05, 3.950000000000134e-05, 3.9375000000001215e-05, 3.9153000000000104e-05, 3.9430999999999494e-05, 3.9610999999998425e-05, 3.9624999999997995e-05, 3.955599999999962e-05, 3.9459000000002104e-05, 3.9139000000000534e-05, 3.880600000000234e-05, 3.961200000000137e-05, 3.926400000000066e-05, 3.97920000000003e-05, 3.969399999999984e-05, 3.8875000000000715e-05, 3.89720000000017e-05, 3.919399999999934e-05, 3.980599999999987e-05, 3.9639000000001035e-05, 3.9332999999999035e-05, 3.970799999999941e-05, 3.895799999999866e-05, 3.9638999999997565e-05, 3.900000000000084e-05, 3.9138999999997065e-05, 3.969399999999984e-05, 3.9667000000000174e-05, 3.983399999999901e-05, 3.9375000000001215e-05, 3.9416999999999924e-05, 3.9681000000003214e-05, 3.880599999999887e-05, 3.981999999999944e-05, 3.9708999999998884e-05, 3.954200000000005e-05, 3.9833000000003005e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.354" endtime="20201115 23:01:30.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.349" endtime="20201115 23:01:30.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.358" endtime="20201115 23:01:30.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.362" endtime="20201115 23:01:30.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.360" endtime="20201115 23:01:30.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.357" endtime="20201115 23:01:30.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.992" endtime="20201115 23:01:30.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.990" endtime="20201115 23:01:30.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.989" endtime="20201115 23:01:30.383"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.385" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.394" endtime="20201115 23:01:30.410"></status>
</kw>
<msg timestamp="20201115 23:01:30.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.392" endtime="20201115 23:01:30.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.411" endtime="20201115 23:01:30.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.414" endtime="20201115 23:01:30.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.390" endtime="20201115 23:01:30.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.387" endtime="20201115 23:01:30.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.423" endtime="20201115 23:01:30.708"></status>
</kw>
<msg timestamp="20201115 23:01:30.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02424575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024286361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:30.421" endtime="20201115 23:01:30.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02424575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024286361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:30.712" endtime="20201115 23:01:30.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.721" endtime="20201115 23:01:30.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.419" endtime="20201115 23:01:30.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.417" endtime="20201115 23:01:30.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.728" level="INFO">${RESULT} = [{'time': 0.024286361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0610999999999425e-05, 'source_diff': 4.0610999999999425e-05}, {'time': 0.024333986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:30.725" endtime="20201115 23:01:30.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.742" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:30.729" endtime="20201115 23:01:30.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.746" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.745" endtime="20201115 23:01:30.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.749" level="INFO">VALUE: [4.0610999999999425e-05, 4.072199999999998e-05, 4.069400000000084e-05, 4.051400000000191e-05, 3.9860999999998675e-05, 4.0596999999999855e-05, 3.994400000000009e-05, 4.0624999999998995e-05, 4.0695000000000314e-05, 4.0389000000001785e-05, 4.073599999999955e-05, 4.074999999999912e-05, 4.0167000000000674e-05, 4.0417000000000924e-05, 4.0360999999999175e-05, 4.0610999999999425e-05, 3.9958999999999134e-05, 4.030600000000037e-05, 4.0153000000001104e-05, 4.049999999999887e-05, 4.0209000000002854e-05, 4.075000000000259e-05, 4.0555000000001146e-05, 4.051399999999844e-05, 4.000000000000184e-05, 4.0055000000000646e-05, 4.042999999999755e-05, 4.0138999999998065e-05, 4.0583000000000286e-05, 4.077800000000173e-05, 4.0069000000000216e-05, 4.073600000000302e-05, 4.0139000000001535e-05, 4.0110999999998925e-05, 4.023600000000252e-05, 4.0346999999999605e-05, 3.9832999999999535e-05, 4.0181000000000244e-05, 4.054199999999758e-05, 4.0695000000000314e-05, 4.0138999999998065e-05, 4.0055000000000646e-05, 4.0638999999998565e-05, 4.0290999999997856e-05, 4.0402999999997885e-05, 4.004200000000055e-05, 4.0417000000000924e-05, 3.9874999999998245e-05, 3.997199999999923e-05, 3.9875000000001715e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.747" endtime="20201115 23:01:30.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.742" endtime="20201115 23:01:30.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.752" endtime="20201115 23:01:30.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.755" endtime="20201115 23:01:30.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.754" endtime="20201115 23:01:30.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.750" endtime="20201115 23:01:30.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.386" endtime="20201115 23:01:30.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.384" endtime="20201115 23:01:30.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.383" endtime="20201115 23:01:30.776"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.779" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.787" endtime="20201115 23:01:30.804"></status>
</kw>
<msg timestamp="20201115 23:01:30.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.785" endtime="20201115 23:01:30.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.805" endtime="20201115 23:01:30.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.808" endtime="20201115 23:01:30.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.783" endtime="20201115 23:01:30.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.781" endtime="20201115 23:01:30.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.817" endtime="20201115 23:01:31.103"></status>
</kw>
<msg timestamp="20201115 23:01:31.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024203875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024245903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.815" endtime="20201115 23:01:31.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024203875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024245903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.107" endtime="20201115 23:01:31.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.116" endtime="20201115 23:01:31.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.813" endtime="20201115 23:01:31.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.811" endtime="20201115 23:01:31.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.122" level="INFO">${RESULT} = [{'time': 0.024245903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.202799999999951e-05, 'source_diff': 4.202799999999951e-05}, {'time': 0.024296514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:31.119" endtime="20201115 23:01:31.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.136" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:31.123" endtime="20201115 23:01:31.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.140" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.139" endtime="20201115 23:01:31.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.143" level="INFO">VALUE: [4.202799999999951e-05, 4.172200000000098e-05, 4.11119999999994e-05, 4.1040999999998606e-05, 4.177800000000273e-05, 4.1388999999999315e-05, 4.0959000000000134e-05, 4.1374999999999745e-05, 4.1124999999999495e-05, 4.082000000000044e-05, 4.109799999999983e-05, 4.0875000000002715e-05, 4.124999999999962e-05, 4.1374999999999745e-05, 4.151399999999944e-05, 4.1040999999998606e-05, 4.0847000000000105e-05, 4.1540999999999106e-05, 4.1875000000000245e-05, 4.0903000000001855e-05, 4.1776999999999787e-05, 4.091600000000195e-05, 4.151399999999944e-05, 4.1624999999999995e-05, 4.168000000000227e-05, 4.1430999999998025e-05, 4.1139000000002535e-05, 4.145799999999769e-05, 4.127799999999876e-05, 4.1624999999999995e-05, 4.1124999999999495e-05, 4.1276999999999286e-05, 4.1388999999999315e-05, 4.0888999999998815e-05, 4.1180999999997775e-05, 4.18059999999984e-05, 4.0860999999999675e-05, 4.177799999999926e-05, 4.1319000000001466e-05, 4.1653000000002605e-05, 4.100000000000284e-05, 4.151399999999944e-05, 4.175000000000012e-05, 4.152799999999901e-05, 4.1804999999998926e-05, 4.1624999999999995e-05, 4.090200000000238e-05, 4.1167000000001674e-05, 4.1082999999997316e-05, 4.0860999999999675e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.142" endtime="20201115 23:01:31.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.137" endtime="20201115 23:01:31.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.146" endtime="20201115 23:01:31.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.150" endtime="20201115 23:01:31.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.148" endtime="20201115 23:01:31.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.144" endtime="20201115 23:01:31.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.779" endtime="20201115 23:01:31.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.778" endtime="20201115 23:01:31.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.777" endtime="20201115 23:01:31.171"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.173" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.182" endtime="20201115 23:01:31.198"></status>
</kw>
<msg timestamp="20201115 23:01:31.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.180" endtime="20201115 23:01:31.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.200" endtime="20201115 23:01:31.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.203" endtime="20201115 23:01:31.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.177" endtime="20201115 23:01:31.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.175" endtime="20201115 23:01:31.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.212" endtime="20201115 23:01:31.497"></status>
</kw>
<msg timestamp="20201115 23:01:31.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024898653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024941792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.210" endtime="20201115 23:01:31.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024898653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024941792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.501" endtime="20201115 23:01:31.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.509" endtime="20201115 23:01:31.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.208" endtime="20201115 23:01:31.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.206" endtime="20201115 23:01:31.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.516" level="INFO">${RESULT} = [{'time': 0.024941792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3139000000001065e-05, 'source_diff': 4.3139000000001065e-05}, {'time': 0.024993403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:31.513" endtime="20201115 23:01:31.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.531" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:31.517" endtime="20201115 23:01:31.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.535" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.534" endtime="20201115 23:01:31.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.538" level="INFO">VALUE: [4.3139000000001065e-05, 4.2195000000001814e-05, 4.197200000000123e-05, 4.256999999999872e-05, 4.28059999999994e-05, 4.2111000000000925e-05, 4.1875000000000245e-05, 4.255599999999915e-05, 4.234800000000108e-05, 4.2541000000000107e-05, 4.2153000000003105e-05, 4.254199999999958e-05, 4.229199999999933e-05, 4.2554999999999676e-05, 4.2597000000001856e-05, 4.276299999999775e-05, 4.274999999999765e-05, 4.254199999999958e-05, 4.206999999999822e-05, 4.2347000000001606e-05, 4.2568999999999246e-05, 4.197200000000123e-05, 4.1833000000001536e-05, 4.192999999999905e-05, 4.2139000000000065e-05, 4.2610999999997956e-05, 4.222200000000148e-05, 4.1861000000000675e-05, 4.255599999999915e-05, 4.205599999999865e-05, 4.2680999999999275e-05, 4.2583000000002286e-05, 4.1902999999999385e-05, 4.270799999999894e-05, 4.1945000000001564e-05, 4.248599999999783e-05, 4.205599999999865e-05, 4.2666999999999705e-05, 4.231999999999847e-05, 4.254200000000305e-05, 4.208400000000126e-05, 4.24860000000013e-05, 4.2402999999999885e-05, 4.2139000000000065e-05, 4.2582999999998816e-05, 4.2195000000001814e-05, 4.188800000000034e-05, 4.2124999999997026e-05, 4.188800000000034e-05, 4.216599999999973e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.537" endtime="20201115 23:01:31.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.532" endtime="20201115 23:01:31.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.541" endtime="20201115 23:01:31.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.545" endtime="20201115 23:01:31.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.543" endtime="20201115 23:01:31.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.540" endtime="20201115 23:01:31.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.174" endtime="20201115 23:01:31.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.172" endtime="20201115 23:01:31.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.171" endtime="20201115 23:01:31.566"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.568" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.577" endtime="20201115 23:01:31.593"></status>
</kw>
<msg timestamp="20201115 23:01:31.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.575" endtime="20201115 23:01:31.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.595" endtime="20201115 23:01:31.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.597" endtime="20201115 23:01:31.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.573" endtime="20201115 23:01:31.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.570" endtime="20201115 23:01:31.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.606" endtime="20201115 23:01:31.893"></status>
</kw>
<msg timestamp="20201115 23:01:31.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024705903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024749639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.605" endtime="20201115 23:01:31.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024705903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024749639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.898" endtime="20201115 23:01:31.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.906" endtime="20201115 23:01:31.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.602" endtime="20201115 23:01:31.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.600" endtime="20201115 23:01:31.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.913" level="INFO">${RESULT} = [{'time': 0.024749639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.373599999999908e-05, 'source_diff': 4.373599999999908e-05}, {'time': 0.024803264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:31.909" endtime="20201115 23:01:31.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.926" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:31.913" endtime="20201115 23:01:31.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.931" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.930" endtime="20201115 23:01:31.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.933" level="INFO">VALUE: [4.373599999999908e-05, 4.3110999999998456e-05, 4.305599999999965e-05, 4.331999999999947e-05, 4.374999999999865e-05, 4.3110999999998456e-05, 4.372199999999951e-05, 4.2973000000001704e-05, 4.300000000000137e-05, 4.3360999999998706e-05, 4.305599999999965e-05, 4.352800000000101e-05, 4.2958999999998665e-05, 4.2903000000000385e-05, 4.329200000000033e-05, 4.3096999999998886e-05, 4.373600000000255e-05, 4.35129999999985e-05, 4.323600000000205e-05, 4.36800000000008e-05, 4.341599999999751e-05, 4.3139000000001065e-05, 4.2903000000000385e-05, 4.3541000000001107e-05, 4.2889000000000815e-05, 4.369400000000037e-05, 4.3417000000000455e-05, 4.295799999999919e-05, 4.3638999999998096e-05, 4.301400000000094e-05, 4.3389000000001315e-05, 4.348599999999883e-05, 4.369400000000037e-05, 4.3167000000000205e-05, 4.3347000000002606e-05, 4.324999999999815e-05, 4.327800000000076e-05, 4.3667000000000705e-05, 4.3096999999998886e-05, 4.3180999999999775e-05, 4.307000000000269e-05, 4.3458999999999165e-05, 4.283399999999854e-05, 4.300000000000137e-05, 4.286200000000115e-05, 4.377799999999779e-05, 4.366599999999776e-05, 4.291599999999701e-05, 4.377800000000126e-05, 4.374999999999865e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.932" endtime="20201115 23:01:31.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.927" endtime="20201115 23:01:31.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.936" endtime="20201115 23:01:31.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.940" endtime="20201115 23:01:31.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.938" endtime="20201115 23:01:31.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.935" endtime="20201115 23:01:31.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.569" endtime="20201115 23:01:31.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.567" endtime="20201115 23:01:31.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.566" endtime="20201115 23:01:31.961"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.963" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.972" endtime="20201115 23:01:31.989"></status>
</kw>
<msg timestamp="20201115 23:01:31.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.970" endtime="20201115 23:01:31.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.991" endtime="20201115 23:01:31.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.993" endtime="20201115 23:01:31.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.968" endtime="20201115 23:01:31.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.965" endtime="20201115 23:01:31.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.003" endtime="20201115 23:01:32.289"></status>
</kw>
<msg timestamp="20201115 23:01:32.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024382111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024427444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.001" endtime="20201115 23:01:32.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024382111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024427444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.293" endtime="20201115 23:01:32.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.301" endtime="20201115 23:01:32.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.998" endtime="20201115 23:01:32.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.996" endtime="20201115 23:01:32.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.308" level="INFO">${RESULT} = [{'time': 0.024427444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.53329999999981e-05, 'source_diff': 4.53329999999981e-05}, {'time': 0.024485056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:32.305" endtime="20201115 23:01:32.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.322" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:32.309" endtime="20201115 23:01:32.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.326" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.325" endtime="20201115 23:01:32.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.329" level="INFO">VALUE: [4.53329999999981e-05, 4.482000000000097e-05, 4.430499999999796e-05, 4.463799999999962e-05, 4.397199999999976e-05, 4.4569000000001247e-05, 4.390199999999844e-05, 4.4361000000003176e-05, 4.426399999999872e-05, 4.405599999999718e-05, 4.3930999999997056e-05, 4.4389000000002315e-05, 4.429100000000186e-05, 4.4583000000000816e-05, 4.408299999999685e-05, 4.4360999999999706e-05, 4.38060000000004e-05, 4.452799999999854e-05, 4.4138999999998596e-05, 4.472200000000051e-05, 4.479200000000183e-05, 4.477799999999879e-05, 4.416600000000173e-05, 4.4138999999998596e-05, 4.4431000000001025e-05, 4.4430999999997556e-05, 4.44999999999994e-05, 4.426299999999925e-05, 4.4125000000002496e-05, 4.4194999999996876e-05, 4.4167000000001205e-05, 4.393000000000105e-05, 4.436199999999918e-05, 4.465199999999919e-05, 4.427699999999882e-05, 4.427699999999882e-05, 4.4069000000000746e-05, 4.4124999999999026e-05, 4.441599999999851e-05, 4.474999999999965e-05, 4.454100000000211e-05, 4.470800000000094e-05, 4.447200000000026e-05, 4.477799999999879e-05, 4.448599999999983e-05, 4.4360999999999706e-05, 4.454199999999811e-05, 4.4360999999999706e-05, 4.4110999999999456e-05, 4.420800000000044e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.327" endtime="20201115 23:01:32.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.322" endtime="20201115 23:01:32.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.336" endtime="20201115 23:01:32.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.340" endtime="20201115 23:01:32.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.338" endtime="20201115 23:01:32.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.334" endtime="20201115 23:01:32.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.964" endtime="20201115 23:01:32.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.962" endtime="20201115 23:01:32.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.961" endtime="20201115 23:01:32.361"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.363" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.371" endtime="20201115 23:01:32.388"></status>
</kw>
<msg timestamp="20201115 23:01:32.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.370" endtime="20201115 23:01:32.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.390" endtime="20201115 23:01:32.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.392" endtime="20201115 23:01:32.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.367" endtime="20201115 23:01:32.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.365" endtime="20201115 23:01:32.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.401" endtime="20201115 23:01:32.688"></status>
</kw>
<msg timestamp="20201115 23:01:32.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023999875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024046375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.400" endtime="20201115 23:01:32.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023999875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024046375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.692" endtime="20201115 23:01:32.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.700" endtime="20201115 23:01:32.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.397" endtime="20201115 23:01:32.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.395" endtime="20201115 23:01:32.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.707" level="INFO">${RESULT} = [{'time': 0.024046375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.649999999999793e-05, 'source_diff': 4.649999999999793e-05}, {'time': 0.024103958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:32.704" endtime="20201115 23:01:32.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.721" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:32.708" endtime="20201115 23:01:32.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.725" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.724" endtime="20201115 23:01:32.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.728" level="INFO">VALUE: [4.649999999999793e-05, 4.495800000000119e-05, 4.490200000000291e-05, 4.504099999999914e-05, 4.508400000000079e-05, 4.51939999999984e-05, 4.5097000000000886e-05, 4.559699999999792e-05, 4.500000000000337e-05, 4.5111000000000456e-05, 4.580599999999893e-05, 4.495800000000119e-05, 4.4945000000001095e-05, 4.49999999999999e-05, 4.5444999999998126e-05, 4.526399999999972e-05, 4.582000000000197e-05, 4.5097000000000886e-05, 4.504199999999861e-05, 4.501399999999947e-05, 4.502799999999904e-05, 4.5625000000000526e-05, 4.4959000000000665e-05, 4.5472999999997266e-05, 4.548600000000083e-05, 4.516599999999926e-05, 4.507000000000122e-05, 4.5583000000001817e-05, 4.5361000000000706e-05, 4.5333000000001566e-05, 4.579099999999989e-05, 4.575000000000065e-05, 4.520800000000144e-05, 4.567999999999933e-05, 4.509699999999742e-05, 4.5347000000001136e-05, 4.573600000000108e-05, 4.508299999999785e-05, 4.570800000000194e-05, 4.51939999999984e-05, 4.522199999999754e-05, 4.509699999999742e-05, 4.5375000000000276e-05, 4.5402999999999416e-05, 4.5430999999998556e-05, 4.548600000000083e-05, 4.502799999999904e-05, 4.5458999999997696e-05, 4.551399999999997e-05, 4.5194999999997876e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.726" endtime="20201115 23:01:32.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.722" endtime="20201115 23:01:32.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.731" endtime="20201115 23:01:32.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.735" endtime="20201115 23:01:32.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.733" endtime="20201115 23:01:32.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.730" endtime="20201115 23:01:32.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.364" endtime="20201115 23:01:32.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.362" endtime="20201115 23:01:32.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.361" endtime="20201115 23:01:32.756"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.758" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.766" endtime="20201115 23:01:32.784"></status>
</kw>
<msg timestamp="20201115 23:01:32.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.765" endtime="20201115 23:01:32.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.785" endtime="20201115 23:01:32.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.788" endtime="20201115 23:01:32.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.762" endtime="20201115 23:01:32.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.760" endtime="20201115 23:01:32.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.797" endtime="20201115 23:01:33.083"></status>
</kw>
<msg timestamp="20201115 23:01:33.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025377306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025423972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.795" endtime="20201115 23:01:33.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025377306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025423972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.088" endtime="20201115 23:01:33.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.096" endtime="20201115 23:01:33.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.793" endtime="20201115 23:01:33.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.791" endtime="20201115 23:01:33.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.103" level="INFO">${RESULT} = [{'time': 0.025423972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666600000000076e-05, 'source_diff': 4.666600000000076e-05}, {'time': 0.025476583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:33.099" endtime="20201115 23:01:33.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.118" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:33.104" endtime="20201115 23:01:33.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.122" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.121" endtime="20201115 23:01:33.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.125" level="INFO">VALUE: [4.666600000000076e-05, 4.627700000000082e-05, 4.616600000000026e-05, 4.644399999999965e-05, 4.634699999999867e-05, 4.668000000000033e-05, 4.634699999999867e-05, 4.612499999999756e-05, 4.6389000000000846e-05, 4.6083000000002317e-05, 4.657000000000272e-05, 4.637499999999781e-05, 4.679200000000036e-05, 4.60000000000009e-05, 4.680599999999993e-05, 4.651400000000097e-05, 4.601400000000047e-05, 4.6375000000001276e-05, 4.5945000000002095e-05, 4.648599999999836e-05, 4.598600000000133e-05, 4.652800000000054e-05, 4.601400000000047e-05, 4.683399999999907e-05, 4.626400000000072e-05, 4.6222999999998016e-05, 4.625000000000115e-05, 4.6111000000001456e-05, 4.622199999999854e-05, 4.6125000000001026e-05, 4.670799999999947e-05, 4.627700000000082e-05, 4.651400000000097e-05, 4.643000000000008e-05, 4.605499999999971e-05, 4.648599999999836e-05, 4.662499999999806e-05, 4.597199999999829e-05, 4.6389000000000846e-05, 4.5875000000000776e-05, 4.643000000000008e-05, 4.5916999999999486e-05, 4.595799999999872e-05, 4.656899999999978e-05, 4.6195000000002345e-05, 4.5875000000000776e-05, 4.5902999999999916e-05, 4.633400000000204e-05, 4.677800000000079e-05, 4.658399999999882e-05]</msg>
<status status="PASS" starttime="20201115 23:01:33.123" endtime="20201115 23:01:33.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.119" endtime="20201115 23:01:33.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.128" endtime="20201115 23:01:33.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.132" endtime="20201115 23:01:33.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.130" endtime="20201115 23:01:33.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.126" endtime="20201115 23:01:33.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.759" endtime="20201115 23:01:33.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.757" endtime="20201115 23:01:33.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.756" endtime="20201115 23:01:33.153"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.155" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.163" endtime="20201115 23:01:33.179"></status>
</kw>
<msg timestamp="20201115 23:01:33.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.162" endtime="20201115 23:01:33.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.181" endtime="20201115 23:01:33.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.184" endtime="20201115 23:01:33.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.159" endtime="20201115 23:01:33.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.157" endtime="20201115 23:01:33.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.193" endtime="20201115 23:01:33.479"></status>
</kw>
<msg timestamp="20201115 23:01:33.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024093292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024141014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.191" endtime="20201115 23:01:33.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024093292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024141014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.483" endtime="20201115 23:01:33.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.491" endtime="20201115 23:01:33.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.189" endtime="20201115 23:01:33.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.187" endtime="20201115 23:01:33.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.498" level="INFO">${RESULT} = [{'time': 0.024141014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.772200000000004e-05, 'source_diff': 4.772200000000004e-05}, {'time': 0.024195625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:33.495" endtime="20201115 23:01:33.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.512" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:33.499" endtime="20201115 23:01:33.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.516" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.515" endtime="20201115 23:01:33.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.519" level="INFO">VALUE: [4.772200000000004e-05, 4.691699999999702e-05, 4.724999999999868e-05, 4.723599999999911e-05, 4.734699999999967e-05, 4.7417000000000986e-05, 4.68199999999995e-05, 4.704200000000061e-05, 4.6958999999999196e-05, 4.7681000000000806e-05, 4.704199999999714e-05, 4.740199999999847e-05, 4.7181000000000306e-05, 4.7667000000001236e-05, 4.758300000000035e-05, 4.774999999999918e-05, 4.78330000000006e-05, 4.766600000000176e-05, 4.6889000000001346e-05, 4.770800000000047e-05, 4.7417000000000986e-05, 4.708299999999985e-05, 4.754199999999764e-05, 4.686099999999874e-05, 4.752800000000154e-05, 4.76940000000009e-05, 4.736099999999924e-05, 4.756900000000078e-05, 4.7458999999999696e-05, 4.7458999999999696e-05, 4.730600000000043e-05, 4.727800000000129e-05, 4.784700000000017e-05, 4.697199999999929e-05, 4.777799999999832e-05, 4.6917000000000486e-05, 4.748599999999936e-05, 4.752799999999807e-05, 4.7389000000001846e-05, 4.761200000000243e-05, 4.7681000000000806e-05, 4.730599999999696e-05, 4.779100000000189e-05, 4.777699999999885e-05, 4.78200000000005e-05, 4.766699999999777e-05, 4.729100000000139e-05, 4.7625000000002526e-05, 4.738899999999838e-05, 4.755500000000121e-05]</msg>
<status status="PASS" starttime="20201115 23:01:33.517" endtime="20201115 23:01:33.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.513" endtime="20201115 23:01:33.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.522" endtime="20201115 23:01:33.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.525" endtime="20201115 23:01:33.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.524" endtime="20201115 23:01:33.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.520" endtime="20201115 23:01:33.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.156" endtime="20201115 23:01:33.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.154" endtime="20201115 23:01:33.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.153" endtime="20201115 23:01:33.546"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.549" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.557" endtime="20201115 23:01:33.574"></status>
</kw>
<msg timestamp="20201115 23:01:33.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.556" endtime="20201115 23:01:33.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.575" endtime="20201115 23:01:33.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.578" endtime="20201115 23:01:33.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.553" endtime="20201115 23:01:33.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.551" endtime="20201115 23:01:33.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.588" endtime="20201115 23:01:33.873"></status>
</kw>
<msg timestamp="20201115 23:01:33.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024122625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02417125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:33.586" endtime="20201115 23:01:33.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024122625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02417125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:33.877" endtime="20201115 23:01:33.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.886" endtime="20201115 23:01:33.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.583" endtime="20201115 23:01:33.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.581" endtime="20201115 23:01:33.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.893" level="INFO">${RESULT} = [{'time': 0.02417125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.862499999999659e-05, 'source_diff': 4.862499999999659e-05}, {'time': 0.024226875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:33.889" endtime="20201115 23:01:33.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.906" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:33.894" endtime="20201115 23:01:33.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.911" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.910" endtime="20201115 23:01:33.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.913" level="INFO">VALUE: [4.862499999999659e-05, 4.874999999999671e-05, 4.797200000000029e-05, 4.838899999999938e-05, 4.78330000000006e-05, 4.847200000000079e-05, 4.872199999999757e-05, 4.813899999999913e-05, 4.809699999999695e-05, 4.8013999999999e-05, 4.791699999999802e-05, 4.786099999999974e-05, 4.827800000000229e-05, 4.791599999999854e-05, 4.784799999999964e-05, 4.8667000000002236e-05, 4.8194999999997407e-05, 4.81529999999987e-05, 4.879199999999889e-05, 4.822199999999707e-05, 4.799999999999943e-05, 4.879099999999942e-05, 4.879099999999942e-05, 4.836100000000024e-05, 4.876399999999975e-05, 4.815199999999922e-05, 4.859700000000092e-05, 4.855500000000221e-05, 4.794400000000115e-05, 4.786099999999974e-05, 4.802799999999857e-05, 4.849999999999993e-05, 4.816699999999827e-05, 4.838899999999938e-05, 4.827800000000229e-05, 4.795800000000072e-05, 4.802800000000204e-05, 4.849999999999993e-05, 4.830600000000143e-05, 4.855600000000168e-05, 4.802800000000204e-05, 4.861100000000049e-05, 4.799999999999943e-05, 4.8013999999999e-05, 4.877699999999985e-05, 4.784799999999964e-05, 4.818099999999784e-05, 4.838899999999938e-05, 4.826399999999925e-05, 4.813800000000312e-05]</msg>
<status status="PASS" starttime="20201115 23:01:33.912" endtime="20201115 23:01:33.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.907" endtime="20201115 23:01:33.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.916" endtime="20201115 23:01:33.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.920" endtime="20201115 23:01:33.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.918" endtime="20201115 23:01:33.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.915" endtime="20201115 23:01:33.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.550" endtime="20201115 23:01:33.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.548" endtime="20201115 23:01:33.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.547" endtime="20201115 23:01:33.941"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.943" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.952" endtime="20201115 23:01:33.968"></status>
</kw>
<msg timestamp="20201115 23:01:33.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.950" endtime="20201115 23:01:33.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.969" endtime="20201115 23:01:33.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.972" endtime="20201115 23:01:33.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.947" endtime="20201115 23:01:33.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.945" endtime="20201115 23:01:33.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.982" endtime="20201115 23:01:34.268"></status>
</kw>
<msg timestamp="20201115 23:01:34.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024034583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024084694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.980" endtime="20201115 23:01:34.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024034583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024084694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.272" endtime="20201115 23:01:34.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.280" endtime="20201115 23:01:34.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.977" endtime="20201115 23:01:34.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.976" endtime="20201115 23:01:34.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.287" level="INFO">${RESULT} = [{'time': 0.024084694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.011099999999852e-05, 'source_diff': 5.011099999999852e-05}, {'time': 0.024142319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:34.284" endtime="20201115 23:01:34.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.300" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:34.288" endtime="20201115 23:01:34.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.305" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.304" endtime="20201115 23:01:34.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.308" level="INFO">VALUE: [5.011099999999852e-05, 4.95270000000006e-05, 4.916599999999979e-05, 4.956899999999931e-05, 4.944399999999918e-05, 4.924999999999721e-05, 4.919399999999893e-05, 4.88330000000016e-05, 4.944399999999918e-05, 4.979100000000042e-05, 4.8903000000002916e-05, 4.956899999999931e-05, 4.948600000000136e-05, 4.890299999999945e-05, 4.927799999999982e-05, 4.902799999999957e-05, 4.891699999999902e-05, 4.93469999999982e-05, 4.9153000000003166e-05, 4.948600000000136e-05, 4.888899999999988e-05, 4.957000000000225e-05, 4.893099999999859e-05, 4.956999999999878e-05, 4.937500000000081e-05, 4.973600000000161e-05, 4.933299999999863e-05, 4.927700000000035e-05, 4.904099999999967e-05, 4.908299999999838e-05, 4.956899999999931e-05, 4.951300000000103e-05, 4.954100000000017e-05, 4.968000000000333e-05, 4.980499999999999e-05, 4.909700000000142e-05, 4.950000000000093e-05, 4.983299999999913e-05, 4.981899999999956e-05, 4.948599999999789e-05, 4.955499999999974e-05, 4.954199999999964e-05, 4.923600000000111e-05, 4.96530000000002e-05, 4.948599999999789e-05, 4.911099999999752e-05, 4.888899999999988e-05, 4.929199999999939e-05, 4.904199999999914e-05, 4.925000000000068e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.306" endtime="20201115 23:01:34.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.301" endtime="20201115 23:01:34.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.311" endtime="20201115 23:01:34.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.314" endtime="20201115 23:01:34.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.313" endtime="20201115 23:01:34.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.309" endtime="20201115 23:01:34.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.944" endtime="20201115 23:01:34.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.942" endtime="20201115 23:01:34.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.941" endtime="20201115 23:01:34.335"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.338" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.346" endtime="20201115 23:01:34.364"></status>
</kw>
<msg timestamp="20201115 23:01:34.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.345" endtime="20201115 23:01:34.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.366" endtime="20201115 23:01:34.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.368" endtime="20201115 23:01:34.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.342" endtime="20201115 23:01:34.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.340" endtime="20201115 23:01:34.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.377" endtime="20201115 23:01:34.662"></status>
</kw>
<msg timestamp="20201115 23:01:34.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025427292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025478444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.376" endtime="20201115 23:01:34.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025427292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025478444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.666" endtime="20201115 23:01:34.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.675" endtime="20201115 23:01:34.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.373" endtime="20201115 23:01:34.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.372" endtime="20201115 23:01:34.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.681" level="INFO">${RESULT} = [{'time': 0.025478444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1151999999998754e-05, 'source_diff': 5.1151999999998754e-05}, {'time': 0.025539056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:34.678" endtime="20201115 23:01:34.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.696" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:34.682" endtime="20201115 23:01:34.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.701" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.700" endtime="20201115 23:01:34.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.703" level="INFO">VALUE: [5.1151999999998754e-05, 5.079200000000089e-05, 5.033299999999963e-05, 5.00279999999971e-05, 5.031900000000006e-05, 5.033299999999963e-05, 5.0651999999998254e-05, 5.013900000000113e-05, 4.988900000000088e-05, 4.994399999999968e-05, 5.019399999999993e-05, 5.073600000000261e-05, 5.076399999999828e-05, 5.01530000000007e-05, 5.063899999999816e-05, 5.059699999999945e-05, 5.022199999999907e-05, 5.06530000000012e-05, 5.076399999999828e-05, 5.034700000000267e-05, 5.03339999999991e-05, 4.984700000000217e-05, 5.073599999999914e-05, 4.988900000000088e-05, 5.072199999999957e-05, 5.061099999999902e-05, 5.005599999999971e-05, 5.012499999999809e-05, 5.0195000000002876e-05, 5.004200000000014e-05, 5.066600000000129e-05, 5.034799999999867e-05, 5.026400000000125e-05, 5.036099999999877e-05, 5.068000000000086e-05, 4.995899999999873e-05, 5.056900000000031e-05, 5.051399999999803e-05, 5.031899999999659e-05, 5.044400000000018e-05, 5.009700000000242e-05, 5.0443999999996714e-05, 5.004200000000014e-05, 4.993000000000011e-05, 5.0708e-05, 4.990300000000045e-05, 5.043100000000009e-05, 5.069400000000043e-05, 5.029200000000039e-05, 5.026399999999778e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.702" endtime="20201115 23:01:34.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.697" endtime="20201115 23:01:34.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.706" endtime="20201115 23:01:34.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.710" endtime="20201115 23:01:34.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.708" endtime="20201115 23:01:34.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.705" endtime="20201115 23:01:34.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.338" endtime="20201115 23:01:34.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.336" endtime="20201115 23:01:34.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.336" endtime="20201115 23:01:34.731"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.734" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.742" endtime="20201115 23:01:34.759"></status>
</kw>
<msg timestamp="20201115 23:01:34.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.740" endtime="20201115 23:01:34.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.761" endtime="20201115 23:01:34.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.763" endtime="20201115 23:01:34.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.738" endtime="20201115 23:01:34.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.736" endtime="20201115 23:01:34.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.772" endtime="20201115 23:01:35.057"></status>
</kw>
<msg timestamp="20201115 23:01:35.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024601931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024654097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.771" endtime="20201115 23:01:35.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024601931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024654097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.062" endtime="20201115 23:01:35.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.070" endtime="20201115 23:01:35.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.768" endtime="20201115 23:01:35.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.766" endtime="20201115 23:01:35.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.077" level="INFO">${RESULT} = [{'time': 0.024654097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2165999999999324e-05, 'source_diff': 5.2165999999999324e-05}, {'time': 0.024717736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:35.074" endtime="20201115 23:01:35.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.091" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:35.078" endtime="20201115 23:01:35.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.095" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.094" endtime="20201115 23:01:35.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.098" level="INFO">VALUE: [5.2165999999999324e-05, 5.124999999999921e-05, 5.147200000000032e-05, 5.088899999999841e-05, 5.087500000000231e-05, 5.147200000000032e-05, 5.112499999999909e-05, 5.109699999999995e-05, 5.155600000000121e-05, 5.11669999999978e-05, 5.119400000000093e-05, 5.1207999999997034e-05, 5.158300000000088e-05, 5.1429999999998144e-05, 5.149999999999946e-05, 5.141700000000152e-05, 5.157000000000078e-05, 5.157000000000078e-05, 5.140300000000195e-05, 5.134799999999967e-05, 5.1193999999997464e-05, 5.09729999999993e-05, 5.122200000000007e-05, 5.148599999999989e-05, 5.1651999999999254e-05, 5.095800000000025e-05, 5.169400000000143e-05, 5.094400000000068e-05, 5.086099999999927e-05, 5.177800000000232e-05, 5.083300000000013e-05, 5.112499999999909e-05, 5.13470000000002e-05, 5.111099999999952e-05, 5.119500000000041e-05, 5.104200000000114e-05, 5.100000000000243e-05, 5.133300000000063e-05, 5.104200000000114e-05, 5.162499999999959e-05, 5.122200000000007e-05, 5.18470000000007e-05, 5.088900000000188e-05, 5.109699999999995e-05, 5.094500000000016e-05, 5.181999999999756e-05, 5.119499999999694e-05, 5.182000000000103e-05, 5.10270000000021e-05, 5.176400000000275e-05]</msg>
<status status="PASS" starttime="20201115 23:01:35.096" endtime="20201115 23:01:35.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.091" endtime="20201115 23:01:35.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.101" endtime="20201115 23:01:35.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.105" endtime="20201115 23:01:35.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.103" endtime="20201115 23:01:35.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.100" endtime="20201115 23:01:35.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.734" endtime="20201115 23:01:35.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.732" endtime="20201115 23:01:35.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.732" endtime="20201115 23:01:35.126"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.128" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.136" endtime="20201115 23:01:35.154"></status>
</kw>
<msg timestamp="20201115 23:01:35.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.135" endtime="20201115 23:01:35.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.156" endtime="20201115 23:01:35.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.158" endtime="20201115 23:01:35.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.132" endtime="20201115 23:01:35.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.130" endtime="20201115 23:01:35.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.167" endtime="20201115 23:01:35.454"></status>
</kw>
<msg timestamp="20201115 23:01:35.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024354486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024407653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.166" endtime="20201115 23:01:35.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024354486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024407653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.458" endtime="20201115 23:01:35.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.466" endtime="20201115 23:01:35.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.163" endtime="20201115 23:01:35.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.161" endtime="20201115 23:01:35.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.473" level="INFO">${RESULT} = [{'time': 0.024407653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.31669999999998e-05, 'source_diff': 5.31669999999998e-05}, {'time': 0.024471264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:35.470" endtime="20201115 23:01:35.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.486" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:35.474" endtime="20201115 23:01:35.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.491" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.490" endtime="20201115 23:01:35.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.494" level="INFO">VALUE: [5.31669999999998e-05, 5.2707999999998534e-05, 5.194500000000116e-05, 5.237500000000034e-05, 5.268099999999887e-05, 5.200000000000343e-05, 5.236100000000077e-05, 5.229199999999892e-05, 5.258299999999841e-05, 5.24869999999969e-05, 5.2652000000000254e-05, 5.229200000000239e-05, 5.2138000000000184e-05, 5.2151999999999754e-05, 5.222200000000107e-05, 5.197200000000082e-05, 5.208299999999791e-05, 5.255499999999927e-05, 5.188900000000288e-05, 5.2193999999998464e-05, 5.184699999999723e-05, 5.215299999999923e-05, 5.226399999999978e-05, 5.225000000000021e-05, 5.2485999999997424e-05, 5.212500000000009e-05, 5.284699999999823e-05, 5.222200000000107e-05, 5.2471999999997854e-05, 5.2207999999998034e-05, 5.276400000000028e-05, 5.21669999999988e-05, 5.215299999999923e-05, 5.258400000000135e-05, 5.227699999999988e-05, 5.199999999999996e-05, 5.188899999999941e-05, 5.198600000000039e-05, 5.198600000000039e-05, 5.197200000000082e-05, 5.2443999999998714e-05, 5.187499999999984e-05, 5.198600000000039e-05, 5.205600000000171e-05, 5.261100000000102e-05, 5.25409999999997e-05, 5.280500000000299e-05, 5.206900000000181e-05, 5.186100000000027e-05, 5.211100000000052e-05]</msg>
<status status="PASS" starttime="20201115 23:01:35.492" endtime="20201115 23:01:35.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.487" endtime="20201115 23:01:35.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.497" endtime="20201115 23:01:35.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.501" endtime="20201115 23:01:35.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.499" endtime="20201115 23:01:35.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.495" endtime="20201115 23:01:35.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.129" endtime="20201115 23:01:35.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.127" endtime="20201115 23:01:35.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.126" endtime="20201115 23:01:35.522"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.524" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.532" endtime="20201115 23:01:35.550"></status>
</kw>
<msg timestamp="20201115 23:01:35.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.531" endtime="20201115 23:01:35.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.551" endtime="20201115 23:01:35.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.554" endtime="20201115 23:01:35.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.528" endtime="20201115 23:01:35.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.526" endtime="20201115 23:01:35.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.563" endtime="20201115 23:01:35.849"></status>
</kw>
<msg timestamp="20201115 23:01:35.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024507083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024560764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.561" endtime="20201115 23:01:35.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024507083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024560764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.853" endtime="20201115 23:01:35.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.862" endtime="20201115 23:01:35.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.559" endtime="20201115 23:01:35.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.557" endtime="20201115 23:01:35.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.868" level="INFO">${RESULT} = [{'time': 0.024560764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.368099999999987e-05, 'source_diff': 5.368099999999987e-05}, {'time': 0.024627403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:35.865" endtime="20201115 23:01:35.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.882" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:35.870" endtime="20201115 23:01:35.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.887" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.886" endtime="20201115 23:01:35.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.889" level="INFO">VALUE: [5.368099999999987e-05, 5.341700000000005e-05, 5.361099999999855e-05, 5.326400000000078e-05, 5.340300000000048e-05, 5.373600000000214e-05, 5.3416000000000574e-05, 5.312500000000109e-05, 5.2916000000000074e-05, 5.351400000000103e-05, 5.358299999999941e-05, 5.338900000000091e-05, 5.3666000000000824e-05, 5.308299999999891e-05, 5.2888000000000934e-05, 5.305599999999924e-05, 5.380499999999705e-05, 5.33609999999983e-05, 5.333300000000263e-05, 5.362500000000159e-05, 5.362499999999812e-05, 5.301400000000053e-05, 5.309699999999848e-05, 5.315300000000023e-05, 5.343099999999962e-05, 5.315299999999676e-05, 5.298600000000139e-05, 5.354200000000017e-05, 5.334699999999873e-05, 5.3207999999999034e-05, 5.288900000000041e-05, 5.355599999999974e-05, 5.311100000000152e-05, 5.325000000000121e-05, 5.3499999999997994e-05, 5.305600000000271e-05, 5.333399999999863e-05, 5.329100000000045e-05, 5.305599999999924e-05, 5.375000000000171e-05, 5.283299999999866e-05, 5.363900000000116e-05, 5.348600000000189e-05, 5.30410000000002e-05, 5.293099999999912e-05, 5.357000000000278e-05, 5.340300000000048e-05, 5.340300000000048e-05, 5.3235999999998174e-05, 5.362500000000159e-05]</msg>
<status status="PASS" starttime="20201115 23:01:35.888" endtime="20201115 23:01:35.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.883" endtime="20201115 23:01:35.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.893" endtime="20201115 23:01:35.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.896" endtime="20201115 23:01:35.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.894" endtime="20201115 23:01:35.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.891" endtime="20201115 23:01:35.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.525" endtime="20201115 23:01:35.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.523" endtime="20201115 23:01:35.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.522" endtime="20201115 23:01:35.917"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.920" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.928" endtime="20201115 23:01:35.946"></status>
</kw>
<msg timestamp="20201115 23:01:35.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.926" endtime="20201115 23:01:35.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.948" endtime="20201115 23:01:35.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.950" endtime="20201115 23:01:35.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.924" endtime="20201115 23:01:35.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.922" endtime="20201115 23:01:35.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.959" endtime="20201115 23:01:36.245"></status>
</kw>
<msg timestamp="20201115 23:01:36.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025087972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025143139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.958" endtime="20201115 23:01:36.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025087972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025143139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.249" endtime="20201115 23:01:36.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.258" endtime="20201115 23:01:36.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.955" endtime="20201115 23:01:36.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.953" endtime="20201115 23:01:36.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.265" level="INFO">${RESULT} = [{'time': 0.025143139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.516699999999833e-05, 'source_diff': 5.516699999999833e-05}, {'time': 0.025210736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:36.261" endtime="20201115 23:01:36.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.279" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:36.265" endtime="20201115 23:01:36.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.284" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.283" endtime="20201115 23:01:36.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.286" level="INFO">VALUE: [5.516699999999833e-05, 5.415300000000123e-05, 5.434699999999973e-05, 5.393100000000012e-05, 5.408299999999991e-05, 5.440300000000148e-05, 5.455600000000074e-05, 5.4763999999998814e-05, 5.447299999999933e-05, 5.475000000000271e-05, 5.4749999999999244e-05, 5.4249999999998744e-05, 5.423699999999865e-05, 5.408399999999938e-05, 5.427700000000188e-05, 5.4777999999998384e-05, 5.411100000000252e-05, 5.412499999999862e-05, 5.4708000000000534e-05, 5.4749999999999244e-05, 5.4165999999997855e-05, 5.402700000000163e-05, 5.412499999999862e-05, 5.38609999999988e-05, 5.40280000000011e-05, 5.430500000000102e-05, 5.440299999999801e-05, 5.457000000000031e-05, 5.384699999999923e-05, 5.394499999999969e-05, 5.4763999999998814e-05, 5.415299999999776e-05, 5.4263999999998314e-05, 5.38609999999988e-05, 5.430600000000049e-05, 5.3888000000001934e-05, 5.4027999999997633e-05, 5.457000000000031e-05, 5.4277999999997883e-05, 5.455600000000074e-05, 5.405600000000024e-05, 5.477699999999891e-05, 5.454200000000117e-05, 5.4444000000000714e-05, 5.413900000000166e-05, 5.402700000000163e-05, 5.4166000000001324e-05, 5.4013999999998064e-05, 5.390300000000098e-05, 5.4444000000000714e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.285" endtime="20201115 23:01:36.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.280" endtime="20201115 23:01:36.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.290" endtime="20201115 23:01:36.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.293" endtime="20201115 23:01:36.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.291" endtime="20201115 23:01:36.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.288" endtime="20201115 23:01:36.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.920" endtime="20201115 23:01:36.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.918" endtime="20201115 23:01:36.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.918" endtime="20201115 23:01:36.314"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.316" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.325" endtime="20201115 23:01:36.341"></status>
</kw>
<msg timestamp="20201115 23:01:36.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.323" endtime="20201115 23:01:36.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.343" endtime="20201115 23:01:36.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.346" endtime="20201115 23:01:36.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.321" endtime="20201115 23:01:36.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.318" endtime="20201115 23:01:36.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.355" endtime="20201115 23:01:36.640"></status>
</kw>
<msg timestamp="20201115 23:01:36.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023955583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024011556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.353" endtime="20201115 23:01:36.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023955583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024011556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.644" endtime="20201115 23:01:36.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.653" endtime="20201115 23:01:36.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.351" endtime="20201115 23:01:36.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.349" endtime="20201115 23:01:36.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.660" level="INFO">${RESULT} = [{'time': 0.024011556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.597300000000083e-05, 'source_diff': 5.597300000000083e-05}, {'time': 0.024080167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:36.656" endtime="20201115 23:01:36.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.673" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:36.661" endtime="20201115 23:01:36.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.678" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.677" endtime="20201115 23:01:36.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.680" level="INFO">VALUE: [5.597300000000083e-05, 5.488899999999894e-05, 5.543100000000162e-05, 5.566699999999883e-05, 5.551400000000303e-05, 5.527700000000288e-05, 5.5693999999998495e-05, 5.4901999999999035e-05, 5.4944000000001214e-05, 5.484699999999676e-05, 5.4972000000000354e-05, 5.5679999999998925e-05, 5.5443999999998245e-05, 5.48609999999998e-05, 5.5513999999999564e-05, 5.562500000000012e-05, 5.562500000000012e-05, 5.558300000000141e-05, 5.537499999999987e-05, 5.5277999999998884e-05, 5.5013999999999064e-05, 5.5013999999999064e-05, 5.565299999999926e-05, 5.494499999999722e-05, 5.515299999999876e-05, 5.48609999999998e-05, 5.497299999999983e-05, 5.493100000000112e-05, 5.572299999999711e-05, 5.490299999999851e-05, 5.50280000000021e-05, 5.554099999999923e-05, 5.505500000000177e-05, 5.5750000000000244e-05, 5.5165999999998855e-05, 5.50549999999983e-05, 5.5429999999998675e-05, 5.554099999999923e-05, 5.491700000000155e-05, 5.5179999999998425e-05, 5.543099999999815e-05, 5.562500000000012e-05, 5.53610000000003e-05, 5.581899999999862e-05, 5.540300000000248e-05, 5.4985999999999924e-05, 5.4999999999999494e-05, 5.543100000000162e-05, 5.5750000000000244e-05, 5.5249999999999744e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.679" endtime="20201115 23:01:36.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.674" endtime="20201115 23:01:36.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.683" endtime="20201115 23:01:36.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.687" endtime="20201115 23:01:36.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.685" endtime="20201115 23:01:36.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.682" endtime="20201115 23:01:36.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.317" endtime="20201115 23:01:36.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.315" endtime="20201115 23:01:36.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.314" endtime="20201115 23:01:36.708"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.710" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.719" endtime="20201115 23:01:36.736"></status>
</kw>
<msg timestamp="20201115 23:01:36.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.717" endtime="20201115 23:01:36.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.738" endtime="20201115 23:01:36.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.741" endtime="20201115 23:01:36.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.714" endtime="20201115 23:01:36.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.712" endtime="20201115 23:01:36.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.750" endtime="20201115 23:01:37.037"></status>
</kw>
<msg timestamp="20201115 23:01:37.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023997083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024053819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.748" endtime="20201115 23:01:37.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023997083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024053819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.041" endtime="20201115 23:01:37.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.050" endtime="20201115 23:01:37.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.746" endtime="20201115 23:01:37.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.744" endtime="20201115 23:01:37.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.056" level="INFO">${RESULT} = [{'time': 0.024053819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6736000000001674e-05, 'source_diff': 5.6736000000001674e-05}, {'time': 0.024116444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:37.053" endtime="20201115 23:01:37.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.070" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:37.057" endtime="20201115 23:01:37.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.075" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.074" endtime="20201115 23:01:37.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.077" level="INFO">VALUE: [5.6736000000001674e-05, 5.601300000000059e-05, 5.6541999999999704e-05, 5.5972000000001354e-05, 5.6222000000001604e-05, 5.627700000000041e-05, 5.66809999999994e-05, 5.681899999999962e-05, 5.6263999999996844e-05, 5.6805999999999524e-05, 5.608299999999844e-05, 5.6193999999998995e-05, 5.591699999999908e-05, 5.606899999999887e-05, 5.6250000000000744e-05, 5.631899999999912e-05, 5.6514000000000564e-05, 5.587500000000037e-05, 5.6750000000001244e-05, 5.6222000000001604e-05, 5.655600000000274e-05, 5.6027999999999634e-05, 5.6721999999998635e-05, 5.616699999999933e-05, 5.683399999999866e-05, 5.6027999999999634e-05, 5.605600000000224e-05, 5.608400000000138e-05, 5.622300000000108e-05, 5.636099999999783e-05, 5.5902000000000035e-05, 5.6486000000001424e-05, 5.5986000000000924e-05, 5.6514000000000564e-05, 5.5957999999998315e-05, 5.637500000000087e-05, 5.65549999999998e-05, 5.670899999999854e-05, 5.6569999999998843e-05, 5.6443999999999245e-05, 5.6221999999998135e-05, 5.606899999999887e-05, 5.6694000000002964e-05, 5.6041999999999204e-05, 5.636099999999783e-05, 5.663900000000069e-05, 5.662500000000112e-05, 5.630499999999955e-05, 5.6652000000000785e-05, 5.638900000000044e-05]</msg>
<status status="PASS" starttime="20201115 23:01:37.076" endtime="20201115 23:01:37.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.071" endtime="20201115 23:01:37.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.081" endtime="20201115 23:01:37.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.085" endtime="20201115 23:01:37.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.083" endtime="20201115 23:01:37.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.079" endtime="20201115 23:01:37.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.711" endtime="20201115 23:01:37.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.709" endtime="20201115 23:01:37.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.708" endtime="20201115 23:01:37.106"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.109" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.117" endtime="20201115 23:01:37.135"></status>
</kw>
<msg timestamp="20201115 23:01:37.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.116" endtime="20201115 23:01:37.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.137" endtime="20201115 23:01:37.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.139" endtime="20201115 23:01:37.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.113" endtime="20201115 23:01:37.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.111" endtime="20201115 23:01:37.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.148" endtime="20201115 23:01:37.435"></status>
</kw>
<msg timestamp="20201115 23:01:37.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024950861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025008861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.147" endtime="20201115 23:01:37.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024950861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025008861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.439" endtime="20201115 23:01:37.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.448" endtime="20201115 23:01:37.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.144" endtime="20201115 23:01:37.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.142" endtime="20201115 23:01:37.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.454" level="INFO">${RESULT} = [{'time': 0.025008861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7999999999999025e-05, 'source_diff': 5.7999999999999025e-05}, {'time': 0.025077486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:37.451" endtime="20201115 23:01:37.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.468" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:37.455" endtime="20201115 23:01:37.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.472" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.471" endtime="20201115 23:01:37.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.475" level="INFO">VALUE: [5.7999999999999025e-05, 5.7708000000000065e-05, 5.7055999999999774e-05, 5.766700000000083e-05, 5.697299999999836e-05, 5.686099999999833e-05, 5.738900000000144e-05, 5.7887999999998996e-05, 5.6986000000001924e-05, 5.7820000000000094e-05, 5.7083999999998913e-05, 5.705600000000324e-05, 5.6971999999998885e-05, 5.779099999999801e-05, 5.7083999999998913e-05, 5.690300000000051e-05, 5.7708000000000065e-05, 5.6902000000001035e-05, 5.762499999999865e-05, 5.727699999999794e-05, 5.7637999999998746e-05, 5.7485999999998955e-05, 5.7180000000000425e-05, 5.6930000000000175e-05, 5.758299999999994e-05, 5.766700000000083e-05, 5.733299999999969e-05, 5.719500000000294e-05, 5.7763999999998344e-05, 5.7680000000000925e-05, 5.7028000000000634e-05, 5.7764000000001814e-05, 5.715300000000076e-05, 5.7805999999997054e-05, 5.7472000000002854e-05, 5.743100000000015e-05, 5.7542000000000704e-05, 5.697299999999836e-05, 5.738900000000144e-05, 5.7014000000001064e-05, 5.7250000000001744e-05, 5.722299999999861e-05, 5.7485999999998955e-05, 5.723699999999818e-05, 5.719499999999947e-05, 5.7666000000001355e-05, 5.730500000000055e-05, 5.7499999999998525e-05, 5.7235999999998705e-05, 5.6985999999998455e-05]</msg>
<status status="PASS" starttime="20201115 23:01:37.473" endtime="20201115 23:01:37.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.469" endtime="20201115 23:01:37.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.478" endtime="20201115 23:01:37.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.482" endtime="20201115 23:01:37.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.480" endtime="20201115 23:01:37.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.476" endtime="20201115 23:01:37.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.109" endtime="20201115 23:01:37.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.107" endtime="20201115 23:01:37.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.106" endtime="20201115 23:01:37.507"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.509" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.518" endtime="20201115 23:01:37.537"></status>
</kw>
<msg timestamp="20201115 23:01:37.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.516" endtime="20201115 23:01:37.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.538" endtime="20201115 23:01:37.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.541" endtime="20201115 23:01:37.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.514" endtime="20201115 23:01:37.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.511" endtime="20201115 23:01:37.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.550" endtime="20201115 23:01:37.836"></status>
</kw>
<msg timestamp="20201115 23:01:37.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029407653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029467194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.548" endtime="20201115 23:01:37.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029407653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029467194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.841" endtime="20201115 23:01:37.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.849" endtime="20201115 23:01:37.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.546" endtime="20201115 23:01:37.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.544" endtime="20201115 23:01:37.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.856" level="INFO">${RESULT} = [{'time': 0.029467194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.954099999999976e-05, 'source_diff': 5.954099999999976e-05}, {'time': 0.029536806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:37.852" endtime="20201115 23:01:37.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.871" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:37.857" endtime="20201115 23:01:37.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.875" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.874" endtime="20201115 23:01:37.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.878" level="INFO">VALUE: [5.954099999999976e-05, 5.8041999999997734e-05, 5.809700000000001e-05, 5.8306000000001024e-05, 5.811099999999958e-05, 5.8250000000002744e-05, 5.8194000000000995e-05, 5.8749999999999775e-05, 5.8472000000000385e-05, 5.8014000000002064e-05, 5.8014000000002064e-05, 5.8235999999999705e-05, 5.858299999999747e-05, 5.833300000000069e-05, 5.811099999999958e-05, 5.8583999999996944e-05, 5.8528000000002134e-05, 5.7958000000000315e-05, 5.809700000000001e-05, 5.8235999999999705e-05, 5.870900000000054e-05, 5.861100000000008e-05, 5.81810000000009e-05, 5.788900000000194e-05, 5.8250000000002744e-05, 5.840299999999854e-05, 5.879099999999901e-05, 5.8763999999995875e-05, 5.7985999999995985e-05, 5.8000000000002494e-05, 5.8651999999999316e-05, 5.784699999999976e-05, 5.8471999999996915e-05, 5.8193999999997525e-05, 5.7957999999996845e-05, 5.808300000000044e-05, 5.8792000000001954e-05, 5.86670000000053e-05, 5.793100000000412e-05, 5.8264000000002314e-05, 5.8791999999995015e-05, 5.8556000000001274e-05, 5.791700000000455e-05, 5.816699999999786e-05, 5.8528000000002134e-05, 5.861100000000008e-05, 5.7985999999995985e-05, 5.8083999999999913e-05, 5.8735999999996735e-05, 5.788900000000541e-05]</msg>
<status status="PASS" starttime="20201115 23:01:37.876" endtime="20201115 23:01:37.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.871" endtime="20201115 23:01:37.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.881" endtime="20201115 23:01:37.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.885" endtime="20201115 23:01:37.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.883" endtime="20201115 23:01:37.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.880" endtime="20201115 23:01:37.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.510" endtime="20201115 23:01:37.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.508" endtime="20201115 23:01:37.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.507" endtime="20201115 23:01:37.906"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.908" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.916" endtime="20201115 23:01:37.934"></status>
</kw>
<msg timestamp="20201115 23:01:37.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.915" endtime="20201115 23:01:37.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.936" endtime="20201115 23:01:37.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.938" endtime="20201115 23:01:37.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.912" endtime="20201115 23:01:37.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.910" endtime="20201115 23:01:37.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.947" endtime="20201115 23:01:38.234"></status>
</kw>
<msg timestamp="20201115 23:01:38.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024068097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024128361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.946" endtime="20201115 23:01:38.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024068097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024128361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.238" endtime="20201115 23:01:38.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.247" endtime="20201115 23:01:38.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.943" endtime="20201115 23:01:38.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.942" endtime="20201115 23:01:38.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.253" level="INFO">${RESULT} = [{'time': 0.024128361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0264000000000845e-05, 'source_diff': 6.0264000000000845e-05}, {'time': 0.024197958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:38.250" endtime="20201115 23:01:38.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.267" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:38.254" endtime="20201115 23:01:38.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.271" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.270" endtime="20201115 23:01:38.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.274" level="INFO">VALUE: [6.0264000000000845e-05, 5.9235999999997235e-05, 5.936099999999736e-05, 5.913899999999972e-05, 5.9792000000002954e-05, 5.90689999999984e-05, 5.888900000000294e-05, 5.9444000000002245e-05, 5.9027999999999164e-05, 5.888900000000294e-05, 5.894499999999775e-05, 5.9569999999998374e-05, 5.958300000000194e-05, 5.894499999999775e-05, 5.919500000000147e-05, 5.9000000000000025e-05, 5.912500000000015e-05, 5.894499999999775e-05, 5.9236000000000705e-05, 5.963900000000022e-05, 5.963900000000022e-05, 5.9500000000000525e-05, 5.912500000000015e-05, 5.9665999999999886e-05, 5.8986000000000455e-05, 5.9749999999997305e-05, 5.9041999999998734e-05, 5.986100000000133e-05, 5.9250000000000275e-05, 5.95550000000028e-05, 5.9263999999999845e-05, 5.888899999999947e-05, 5.9000000000000025e-05, 5.9471999999997915e-05, 5.9028000000002634e-05, 5.913899999999972e-05, 5.943099999999868e-05, 5.9570000000001844e-05, 5.936100000000083e-05, 5.9584000000001414e-05, 5.915300000000276e-05, 5.9362000000000303e-05, 5.9334000000001164e-05, 5.888899999999947e-05, 5.9041999999998734e-05, 5.890299999999904e-05, 5.9735999999997735e-05, 5.9429999999999206e-05, 5.958299999999847e-05, 5.981899999999915e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.273" endtime="20201115 23:01:38.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.268" endtime="20201115 23:01:38.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.278" endtime="20201115 23:01:38.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.281" endtime="20201115 23:01:38.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.280" endtime="20201115 23:01:38.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.276" endtime="20201115 23:01:38.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.909" endtime="20201115 23:01:38.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.907" endtime="20201115 23:01:38.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.906" endtime="20201115 23:01:38.302"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.305" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.313" endtime="20201115 23:01:38.330"></status>
</kw>
<msg timestamp="20201115 23:01:38.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.311" endtime="20201115 23:01:38.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.331" endtime="20201115 23:01:38.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.334" endtime="20201115 23:01:38.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.309" endtime="20201115 23:01:38.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.307" endtime="20201115 23:01:38.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.343" endtime="20201115 23:01:38.629"></status>
</kw>
<msg timestamp="20201115 23:01:38.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023996375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024057014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.342" endtime="20201115 23:01:38.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023996375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024057014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.633" endtime="20201115 23:01:38.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.641" endtime="20201115 23:01:38.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.339" endtime="20201115 23:01:38.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.337" endtime="20201115 23:01:38.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.648" level="INFO">${RESULT} = [{'time': 0.024057014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.063900000000122e-05, 'source_diff': 6.063900000000122e-05}, {'time': 0.024131639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:38.645" endtime="20201115 23:01:38.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.662" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:38.650" endtime="20201115 23:01:38.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.667" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.666" endtime="20201115 23:01:38.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.669" level="INFO">VALUE: [6.063900000000122e-05, 6.0764000000001345e-05, 5.991699999999961e-05, 6.0250000000001275e-05, 6.062500000000165e-05, 6.0249999999997805e-05, 6.045899999999882e-05, 5.9888000000000996e-05, 6.0000000000001025e-05, 6.061099999999861e-05, 6.0471999999998916e-05, 6.066700000000036e-05, 6.0416000000000636e-05, 6.004100000000026e-05, 6.034699999999879e-05, 6.090299999999757e-05, 6.033299999999922e-05, 6.008299999999897e-05, 6.0736000000002205e-05, 6.0193999999999526e-05, 6.0014000000000595e-05, 5.9972000000001885e-05, 6.0750000000001775e-05, 5.9957999999998846e-05, 6.061099999999861e-05, 6.038900000000097e-05, 6.0833999999999194e-05, 6.0763999999997875e-05, 6.0041999999999734e-05, 6.0749999999998305e-05, 5.9971999999998415e-05, 6.0499999999998055e-05, 6.0555999999999804e-05, 6.041700000000011e-05, 6.020899999999857e-05, 6.015299999999682e-05, 6.00689999999994e-05, 6.033299999999922e-05, 6.0208000000002565e-05, 6.080500000000058e-05, 6.0402000000001066e-05, 6.005499999999983e-05, 6.0236000000001705e-05, 5.980499999999958e-05, 6.062499999999818e-05, 5.9957999999998846e-05, 5.991699999999961e-05, 6.0806000000000054e-05, 6.0264000000000845e-05, 5.9971999999998415e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.668" endtime="20201115 23:01:38.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.663" endtime="20201115 23:01:38.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.672" endtime="20201115 23:01:38.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.676" endtime="20201115 23:01:38.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.674" endtime="20201115 23:01:38.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.671" endtime="20201115 23:01:38.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.305" endtime="20201115 23:01:38.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.303" endtime="20201115 23:01:38.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.303" endtime="20201115 23:01:38.697"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.699" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.708" endtime="20201115 23:01:38.725"></status>
</kw>
<msg timestamp="20201115 23:01:38.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.706" endtime="20201115 23:01:38.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.726" endtime="20201115 23:01:38.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.729" endtime="20201115 23:01:38.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.703" endtime="20201115 23:01:38.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.701" endtime="20201115 23:01:38.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.738" endtime="20201115 23:01:39.024"></status>
</kw>
<msg timestamp="20201115 23:01:39.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024242625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024304847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.736" endtime="20201115 23:01:39.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024242625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024304847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.028" endtime="20201115 23:01:39.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.037" endtime="20201115 23:01:39.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.734" endtime="20201115 23:01:39.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.732" endtime="20201115 23:01:39.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.043" level="INFO">${RESULT} = [{'time': 0.024304847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222200000000067e-05, 'source_diff': 6.222200000000067e-05}, {'time': 0.024378472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:39.040" endtime="20201115 23:01:39.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.057" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:39.044" endtime="20201115 23:01:39.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.061" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.060" endtime="20201115 23:01:39.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.064" level="INFO">VALUE: [6.222200000000067e-05, 6.162500000000265e-05, 6.165299999999832e-05, 6.149999999999906e-05, 6.134699999999979e-05, 6.122199999999967e-05, 6.15279999999982e-05, 6.118100000000043e-05, 6.151399999999863e-05, 6.161099999999961e-05, 6.108299999999997e-05, 6.093100000000018e-05, 6.087499999999843e-05, 6.086099999999886e-05, 6.090300000000104e-05, 6.116700000000086e-05, 6.173699999999921e-05, 6.176399999999888e-05, 6.118000000000096e-05, 6.149999999999906e-05, 6.140200000000207e-05, 6.0971999999999416e-05, 6.180499999999811e-05, 6.181900000000115e-05, 6.134699999999979e-05, 6.133300000000022e-05, 6.0957999999999846e-05, 6.148600000000295e-05, 6.148599999999949e-05, 6.1582999999997e-05, 6.165299999999832e-05, 6.0778000000000915e-05, 6.129199999999752e-05, 6.088900000000147e-05, 6.1014000000001595e-05, 6.091700000000061e-05, 6.176399999999888e-05, 6.148699999999896e-05, 6.129200000000098e-05, 6.120899999999957e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.083299999999972e-05, 6.122199999999967e-05, 6.102700000000169e-05, 6.156899999999743e-05, 6.187499999999943e-05, 6.116600000000139e-05, 6.0986000000002455e-05, 6.090300000000104e-05]</msg>
<status status="PASS" starttime="20201115 23:01:39.063" endtime="20201115 23:01:39.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.058" endtime="20201115 23:01:39.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.067" endtime="20201115 23:01:39.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.071" endtime="20201115 23:01:39.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.069" endtime="20201115 23:01:39.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.066" endtime="20201115 23:01:39.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.700" endtime="20201115 23:01:39.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.698" endtime="20201115 23:01:39.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.697" endtime="20201115 23:01:39.092"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.094" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.102" endtime="20201115 23:01:39.121"></status>
</kw>
<msg timestamp="20201115 23:01:39.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.101" endtime="20201115 23:01:39.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.122" endtime="20201115 23:01:39.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.125" endtime="20201115 23:01:39.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.098" endtime="20201115 23:01:39.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.096" endtime="20201115 23:01:39.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.135" endtime="20201115 23:01:39.421"></status>
</kw>
<msg timestamp="20201115 23:01:39.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024837667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024901014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.133" endtime="20201115 23:01:39.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024837667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024901014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.425" endtime="20201115 23:01:39.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.433" endtime="20201115 23:01:39.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.130" endtime="20201115 23:01:39.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.129" endtime="20201115 23:01:39.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.440" level="INFO">${RESULT} = [{'time': 0.024901014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.334699999999832e-05, 'source_diff': 6.334699999999832e-05}, {'time': 0.024971625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:39.437" endtime="20201115 23:01:39.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.455" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:39.441" endtime="20201115 23:01:39.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.459" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.458" endtime="20201115 23:01:39.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.462" level="INFO">VALUE: [6.334699999999832e-05, 6.233300000000122e-05, 6.245800000000135e-05, 6.194500000000075e-05, 6.209700000000054e-05, 6.194400000000128e-05, 6.23340000000007e-05, 6.277799999999945e-05, 6.20279999999987e-05, 6.25279999999992e-05, 6.268000000000246e-05, 6.204099999999879e-05, 6.27080000000016e-05, 6.199999999999956e-05, 6.227699999999947e-05, 6.240300000000254e-05, 6.180500000000158e-05, 6.276399999999988e-05, 6.272200000000117e-05, 6.259700000000104e-05, 6.222200000000067e-05, 6.186099999999986e-05, 6.234700000000079e-05, 6.22080000000011e-05, 6.22499999999998e-05, 6.252800000000266e-05, 6.187499999999943e-05, 6.197200000000042e-05, 6.279199999999902e-05, 6.1888999999999e-05, 6.245900000000082e-05, 6.191700000000161e-05, 6.2582999999998e-05, 6.23340000000007e-05, 6.212499999999968e-05, 6.265299999999932e-05, 6.195800000000085e-05, 6.218000000000196e-05, 6.250000000000006e-05, 6.197200000000042e-05, 6.27500000000003e-05, 6.241599999999917e-05, 6.181899999999768e-05, 6.255499999999886e-05, 6.20279999999987e-05, 6.195799999999738e-05, 6.180599999999759e-05, 6.272200000000117e-05, 6.183299999999725e-05, 6.279199999999902e-05]</msg>
<status status="PASS" starttime="20201115 23:01:39.460" endtime="20201115 23:01:39.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.456" endtime="20201115 23:01:39.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.465" endtime="20201115 23:01:39.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.468" endtime="20201115 23:01:39.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.467" endtime="20201115 23:01:39.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.463" endtime="20201115 23:01:39.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.095" endtime="20201115 23:01:39.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.093" endtime="20201115 23:01:39.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.092" endtime="20201115 23:01:39.490"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.492" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.500" endtime="20201115 23:01:39.518"></status>
</kw>
<msg timestamp="20201115 23:01:39.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.499" endtime="20201115 23:01:39.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.519" endtime="20201115 23:01:39.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.522" endtime="20201115 23:01:39.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.496" endtime="20201115 23:01:39.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.494" endtime="20201115 23:01:39.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.531" endtime="20201115 23:01:39.817"></status>
</kw>
<msg timestamp="20201115 23:01:39.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024191, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024255486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:39.530" endtime="20201115 23:01:39.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024191, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024255486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:39.822" endtime="20201115 23:01:39.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.830" endtime="20201115 23:01:39.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.527" endtime="20201115 23:01:39.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.525" endtime="20201115 23:01:39.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.836" level="INFO">${RESULT} = [{'time': 0.024255486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.448599999999902e-05, 'source_diff': 6.448599999999902e-05}, {'time': 0.024326111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:39.833" endtime="20201115 23:01:39.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.850" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:39.837" endtime="20201115 23:01:39.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.855" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.853" endtime="20201115 23:01:39.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.857" level="INFO">VALUE: [6.448599999999902e-05, 6.333300000000222e-05, 6.33890000000005e-05, 6.331899999999918e-05, 6.319399999999906e-05, 6.284699999999782e-05, 6.295900000000132e-05, 6.361100000000161e-05, 6.333300000000222e-05, 6.337500000000093e-05, 6.373599999999827e-05, 6.329199999999952e-05, 6.359700000000204e-05, 6.298700000000046e-05, 6.362500000000118e-05, 6.345799999999888e-05, 6.361199999999761e-05, 6.350000000000106e-05, 6.3276999999997e-05, 6.284700000000129e-05, 6.33890000000005e-05, 6.363900000000075e-05, 6.32219999999982e-05, 6.315299999999982e-05, 6.305499999999936e-05, 6.311100000000111e-05, 6.340300000000007e-05, 6.336100000000136e-05, 6.363900000000075e-05, 6.37500000000013e-05, 6.341699999999964e-05, 6.351400000000063e-05, 6.37219999999987e-05, 6.329199999999952e-05, 6.318099999999896e-05, 6.324999999999734e-05, 6.322300000000114e-05, 6.2889e-05, 6.319399999999906e-05, 6.311100000000111e-05, 6.32500000000008e-05, 6.329199999999952e-05, 6.334699999999832e-05, 6.315200000000035e-05, 6.37500000000013e-05, 6.312500000000068e-05, 6.362500000000118e-05, 6.340300000000007e-05, 6.30829999999985e-05, 6.35280000000002e-05]</msg>
<status status="PASS" starttime="20201115 23:01:39.856" endtime="20201115 23:01:39.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.851" endtime="20201115 23:01:39.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.860" endtime="20201115 23:01:39.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.864" endtime="20201115 23:01:39.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.862" endtime="20201115 23:01:39.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.859" endtime="20201115 23:01:39.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.493" endtime="20201115 23:01:39.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.491" endtime="20201115 23:01:39.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.490" endtime="20201115 23:01:39.885"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.887" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.896" endtime="20201115 23:01:39.913"></status>
</kw>
<msg timestamp="20201115 23:01:39.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.894" endtime="20201115 23:01:39.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.915" endtime="20201115 23:01:39.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.917" endtime="20201115 23:01:39.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.891" endtime="20201115 23:01:39.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.889" endtime="20201115 23:01:39.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.926" endtime="20201115 23:01:40.212"></status>
</kw>
<msg timestamp="20201115 23:01:40.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024698014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024763, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:39.925" endtime="20201115 23:01:40.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024698014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024763, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:40.216" endtime="20201115 23:01:40.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.224" endtime="20201115 23:01:40.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.922" endtime="20201115 23:01:40.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.920" endtime="20201115 23:01:40.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.231" level="INFO">${RESULT} = [{'time': 0.024763, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.498599999999952e-05, 'source_diff': 6.498599999999952e-05}, {'time': 0.024833611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:40.228" endtime="20201115 23:01:40.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.245" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:40.232" endtime="20201115 23:01:40.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.249" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.248" endtime="20201115 23:01:40.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.252" level="INFO">VALUE: [6.498599999999952e-05, 6.415299999999735e-05, 6.469400000000056e-05, 6.402799999999723e-05, 6.45280000000012e-05, 6.465300000000132e-05, 6.469400000000056e-05, 6.395799999999938e-05, 6.391600000000067e-05, 6.444499999999978e-05, 6.462499999999871e-05, 6.419499999999953e-05, 6.45699999999999e-05, 6.393099999999971e-05, 6.38479999999983e-05, 6.427800000000095e-05, 6.480600000000059e-05, 6.398600000000199e-05, 6.47219999999997e-05, 6.463799999999881e-05, 6.399999999999809e-05, 6.469400000000056e-05, 6.381899999999968e-05, 6.451399999999816e-05, 6.43890000000015e-05, 6.413899999999778e-05, 6.468100000000046e-05, 6.411099999999864e-05, 6.423600000000224e-05, 6.400000000000156e-05, 6.415300000000082e-05, 6.438899999999803e-05, 6.438899999999803e-05, 6.42089999999991e-05, 6.473600000000274e-05, 6.419499999999953e-05, 6.466700000000089e-05, 6.466700000000089e-05, 6.391700000000014e-05, 6.391700000000014e-05, 6.398600000000199e-05, 6.395799999999938e-05, 6.480500000000111e-05, 6.474999999999884e-05, 6.424999999999834e-05, 6.44029999999976e-05, 6.405499999999689e-05, 6.390300000000057e-05, 6.40280000000007e-05, 6.470800000000013e-05]</msg>
<status status="PASS" starttime="20201115 23:01:40.250" endtime="20201115 23:01:40.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.246" endtime="20201115 23:01:40.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.255" endtime="20201115 23:01:40.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.258" endtime="20201115 23:01:40.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.257" endtime="20201115 23:01:40.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.253" endtime="20201115 23:01:40.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.888" endtime="20201115 23:01:40.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.886" endtime="20201115 23:01:40.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.885" endtime="20201115 23:01:40.280"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.282" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.291" endtime="20201115 23:01:40.308"></status>
</kw>
<msg timestamp="20201115 23:01:40.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.289" endtime="20201115 23:01:40.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.310" endtime="20201115 23:01:40.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.312" endtime="20201115 23:01:40.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.286" endtime="20201115 23:01:40.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.284" endtime="20201115 23:01:40.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.321" endtime="20201115 23:01:40.607"></status>
</kw>
<msg timestamp="20201115 23:01:40.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024571986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024637653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.320" endtime="20201115 23:01:40.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024571986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024637653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.612" endtime="20201115 23:01:40.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.620" endtime="20201115 23:01:40.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.317" endtime="20201115 23:01:40.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.315" endtime="20201115 23:01:40.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.627" level="INFO">${RESULT} = [{'time': 0.024637653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.566699999999842e-05, 'source_diff': 6.566699999999842e-05}, {'time': 0.02470925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:40.623" endtime="20201115 23:01:40.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.640" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:40.628" endtime="20201115 23:01:40.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.645" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.644" endtime="20201115 23:01:40.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.647" level="INFO">VALUE: [6.566699999999842e-05, 6.488899999999853e-05, 6.513899999999878e-05, 6.520800000000063e-05, 6.57090000000006e-05, 6.511099999999964e-05, 6.531899999999771e-05, 6.494500000000028e-05, 6.513800000000278e-05, 6.558400000000048e-05, 6.576400000000288e-05, 6.531999999999719e-05, 6.522299999999967e-05, 6.570800000000113e-05, 6.52090000000001e-05, 6.581899999999821e-05, 6.581899999999821e-05, 6.568000000000199e-05, 6.512499999999921e-05, 6.547200000000045e-05, 6.509700000000007e-05, 6.577800000000245e-05, 6.581899999999821e-05, 6.501400000000213e-05, 6.486099999999939e-05, 6.532000000000066e-05, 6.523599999999977e-05, 6.533400000000023e-05, 6.520800000000063e-05, 6.52639999999989e-05, 6.505599999999737e-05, 6.509799999999955e-05, 6.515199999999888e-05, 6.54029999999986e-05, 6.574999999999984e-05, 6.501399999999866e-05, 6.490199999999863e-05, 6.576400000000288e-05, 6.497200000000342e-05, 6.524999999999934e-05, 6.54440000000013e-05, 6.486099999999939e-05, 6.513899999999878e-05, 6.559700000000057e-05, 6.515300000000182e-05, 6.563899999999928e-05, 6.487499999999896e-05, 6.490300000000157e-05, 6.505600000000084e-05, 6.555499999999839e-05]</msg>
<status status="PASS" starttime="20201115 23:01:40.646" endtime="20201115 23:01:40.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.641" endtime="20201115 23:01:40.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.651" endtime="20201115 23:01:40.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.654" endtime="20201115 23:01:40.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.653" endtime="20201115 23:01:40.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.649" endtime="20201115 23:01:40.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.283" endtime="20201115 23:01:40.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.281" endtime="20201115 23:01:40.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.280" endtime="20201115 23:01:40.675"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.678" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.686" endtime="20201115 23:01:40.704"></status>
</kw>
<msg timestamp="20201115 23:01:40.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.684" endtime="20201115 23:01:40.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.705" endtime="20201115 23:01:40.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.708" endtime="20201115 23:01:40.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.682" endtime="20201115 23:01:40.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.680" endtime="20201115 23:01:40.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.717" endtime="20201115 23:01:41.003"></status>
</kw>
<msg timestamp="20201115 23:01:41.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025193931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025261319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.715" endtime="20201115 23:01:41.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025193931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025261319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.007" endtime="20201115 23:01:41.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.015" endtime="20201115 23:01:41.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.713" endtime="20201115 23:01:41.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.711" endtime="20201115 23:01:41.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.022" level="INFO">${RESULT} = [{'time': 0.025261319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.738800000000156e-05, 'source_diff': 6.738800000000156e-05}, {'time': 0.025333958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:41.019" endtime="20201115 23:01:41.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.037" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:41.023" endtime="20201115 23:01:41.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.042" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.040" endtime="20201115 23:01:41.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.044" level="INFO">VALUE: [6.738800000000156e-05, 6.656899999999896e-05, 6.645800000000188e-05, 6.600000000000009e-05, 6.665200000000038e-05, 6.616599999999945e-05, 6.683300000000225e-05, 6.599999999999662e-05, 6.622199999999773e-05, 6.627799999999948e-05, 6.636100000000089e-05, 6.60969999999976e-05, 6.630599999999862e-05, 6.591700000000214e-05, 6.675000000000084e-05, 6.641699999999917e-05, 6.62220000000012e-05, 6.593099999999824e-05, 6.62090000000011e-05, 6.63480000000008e-05, 6.62639999999999e-05, 6.640200000000013e-05, 6.618099999999849e-05, 6.668000000000299e-05, 6.59159999999992e-05, 6.640200000000013e-05, 6.612500000000021e-05, 6.625000000000034e-05, 6.654099999999982e-05, 6.608299999999803e-05, 6.586099999999692e-05, 6.650000000000059e-05, 6.619400000000206e-05, 6.651400000000016e-05, 6.601399999999966e-05, 6.661100000000114e-05, 6.597200000000095e-05, 6.60419999999988e-05, 6.648600000000102e-05, 6.679199999999955e-05, 6.583400000000073e-05, 6.619499999999806e-05, 6.62639999999999e-05, 6.637500000000046e-05, 6.591700000000214e-05, 6.609700000000107e-05, 6.666599999999995e-05, 6.617999999999902e-05, 6.67640000000004e-05, 6.587499999999996e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.043" endtime="20201115 23:01:41.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.038" endtime="20201115 23:01:41.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.048" endtime="20201115 23:01:41.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.051" endtime="20201115 23:01:41.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.050" endtime="20201115 23:01:41.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.046" endtime="20201115 23:01:41.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.678" endtime="20201115 23:01:41.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.676" endtime="20201115 23:01:41.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.675" endtime="20201115 23:01:41.072"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.075" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.083" endtime="20201115 23:01:41.101"></status>
</kw>
<msg timestamp="20201115 23:01:41.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.081" endtime="20201115 23:01:41.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.102" endtime="20201115 23:01:41.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.105" endtime="20201115 23:01:41.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.079" endtime="20201115 23:01:41.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.077" endtime="20201115 23:01:41.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.114" endtime="20201115 23:01:41.401"></status>
</kw>
<msg timestamp="20201115 23:01:41.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024462778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024531139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.112" endtime="20201115 23:01:41.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024462778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024531139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.405" endtime="20201115 23:01:41.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.413" endtime="20201115 23:01:41.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.110" endtime="20201115 23:01:41.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.108" endtime="20201115 23:01:41.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.420" level="INFO">${RESULT} = [{'time': 0.024531139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.836099999999942e-05, 'source_diff': 6.836099999999942e-05}, {'time': 0.024605806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:41.416" endtime="20201115 23:01:41.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.434" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:41.421" endtime="20201115 23:01:41.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.438" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.437" endtime="20201115 23:01:41.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.441" level="INFO">VALUE: [6.836099999999942e-05, 6.763900000000128e-05, 6.75420000000003e-05, 6.719499999999906e-05, 6.756999999999944e-05, 6.744499999999931e-05, 6.692999999999977e-05, 6.741700000000017e-05, 6.695799999999891e-05, 6.701400000000066e-05, 6.770799999999966e-05, 6.697200000000195e-05, 6.734699999999885e-05, 6.712499999999774e-05, 6.748600000000202e-05, 6.774999999999837e-05, 6.759799999999858e-05, 6.70830000000025e-05, 6.691699999999967e-05, 6.708299999999903e-05, 6.736100000000189e-05, 6.694499999999881e-05, 6.718100000000296e-05, 6.733399999999876e-05, 6.772199999999923e-05, 6.774999999999837e-05, 6.727800000000048e-05, 6.715300000000035e-05, 6.762499999999824e-05, 6.70839999999985e-05, 6.713900000000078e-05, 6.719499999999906e-05, 6.724999999999787e-05, 6.772199999999923e-05, 6.713800000000131e-05, 6.765300000000085e-05, 6.716600000000045e-05, 6.727800000000048e-05, 6.708299999999903e-05, 6.745899999999888e-05, 6.691699999999967e-05, 6.75969999999991e-05, 6.765300000000085e-05, 6.743099999999974e-05, 6.732000000000266e-05, 6.783299999999978e-05, 6.743099999999974e-05, 6.781999999999969e-05, 6.737499999999799e-05, 6.688900000000053e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.440" endtime="20201115 23:01:41.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.435" endtime="20201115 23:01:41.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.444" endtime="20201115 23:01:41.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.448" endtime="20201115 23:01:41.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.446" endtime="20201115 23:01:41.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.442" endtime="20201115 23:01:41.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.075" endtime="20201115 23:01:41.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.074" endtime="20201115 23:01:41.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.073" endtime="20201115 23:01:41.469"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.471" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.479" endtime="20201115 23:01:41.496"></status>
</kw>
<msg timestamp="20201115 23:01:41.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.478" endtime="20201115 23:01:41.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.498" endtime="20201115 23:01:41.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.500" endtime="20201115 23:01:41.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.475" endtime="20201115 23:01:41.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.473" endtime="20201115 23:01:41.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.509" endtime="20201115 23:01:41.795"></status>
</kw>
<msg timestamp="20201115 23:01:41.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024157972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024227458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.508" endtime="20201115 23:01:41.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024157972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024227458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.799" endtime="20201115 23:01:41.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.808" endtime="20201115 23:01:41.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.505" endtime="20201115 23:01:41.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.504" endtime="20201115 23:01:41.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.815" level="INFO">${RESULT} = [{'time': 0.024227458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.948600000000055e-05, 'source_diff': 6.948600000000055e-05}, {'time': 0.024306139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:41.811" endtime="20201115 23:01:41.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.828" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:41.816" endtime="20201115 23:01:41.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.833" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.832" endtime="20201115 23:01:41.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.835" level="INFO">VALUE: [6.948600000000055e-05, 6.857000000000044e-05, 6.847199999999998e-05, 6.795799999999991e-05, 6.813899999999831e-05, 6.866700000000142e-05, 6.830500000000114e-05, 6.852800000000173e-05, 6.879199999999808e-05, 6.836100000000289e-05, 6.832000000000019e-05, 6.797199999999948e-05, 6.865299999999838e-05, 6.80969999999996e-05, 6.816700000000092e-05, 6.84030000000016e-05, 6.80839999999995e-05, 6.827800000000148e-05, 6.834699999999985e-05, 6.834699999999985e-05, 6.827699999999853e-05, 6.797199999999948e-05, 6.822199999999973e-05, 6.806900000000046e-05, 6.79160000000012e-05, 6.794400000000034e-05, 6.836099999999942e-05, 6.880600000000112e-05, 6.794400000000034e-05, 6.85420000000013e-05, 6.802800000000123e-05, 6.829200000000105e-05, 6.845800000000041e-05, 6.838899999999856e-05, 6.87229999999997e-05, 6.863899999999881e-05, 6.783400000000273e-05, 6.877800000000198e-05, 6.79030000000011e-05, 6.802800000000123e-05, 6.79160000000012e-05, 6.843099999999727e-05, 6.862499999999924e-05, 6.863799999999934e-05, 6.799999999999862e-05, 6.786099999999892e-05, 6.830500000000114e-05, 6.880599999999765e-05, 6.813900000000178e-05, 6.806900000000046e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.834" endtime="20201115 23:01:41.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.829" endtime="20201115 23:01:41.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.838" endtime="20201115 23:01:41.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.842" endtime="20201115 23:01:41.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.840" endtime="20201115 23:01:41.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.836" endtime="20201115 23:01:41.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.472" endtime="20201115 23:01:41.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.470" endtime="20201115 23:01:41.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.469" endtime="20201115 23:01:41.863"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.865" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.873" endtime="20201115 23:01:41.890"></status>
</kw>
<msg timestamp="20201115 23:01:41.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.872" endtime="20201115 23:01:41.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.892" endtime="20201115 23:01:41.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.894" endtime="20201115 23:01:41.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.869" endtime="20201115 23:01:41.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.867" endtime="20201115 23:01:41.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.904" endtime="20201115 23:01:42.190"></status>
</kw>
<msg timestamp="20201115 23:01:42.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024060528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024130125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.902" endtime="20201115 23:01:42.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024060528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024130125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.194" endtime="20201115 23:01:42.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.203" endtime="20201115 23:01:42.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.899" endtime="20201115 23:01:42.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.898" endtime="20201115 23:01:42.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.209" level="INFO">${RESULT} = [{'time': 0.024130125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.959699999999763e-05, 'source_diff': 6.959699999999763e-05}, {'time': 0.024206764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:42.206" endtime="20201115 23:01:42.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.223" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:42.210" endtime="20201115 23:01:42.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.228" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.226" endtime="20201115 23:01:42.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.230" level="INFO">VALUE: [6.959699999999763e-05, 6.947199999999751e-05, 6.926399999999944e-05, 6.911100000000017e-05, 6.957000000000144e-05, 6.955600000000187e-05, 6.898600000000005e-05, 6.955499999999892e-05, 6.982000000000169e-05, 6.897299999999995e-05, 6.919399999999812e-05, 6.945800000000141e-05, 6.906899999999799e-05, 6.888799999999959e-05, 6.926399999999944e-05, 6.951399999999969e-05, 6.948599999999708e-05, 6.967999999999905e-05, 6.981899999999874e-05, 6.972199999999776e-05, 6.912499999999974e-05, 6.883299999999731e-05, 6.922200000000073e-05, 6.915299999999888e-05, 6.947200000000098e-05, 6.922200000000073e-05, 6.933400000000076e-05, 6.976399999999994e-05, 6.980599999999865e-05, 6.952799999999926e-05, 6.890299999999863e-05, 6.966699999999895e-05, 6.89160000000022e-05, 6.933400000000076e-05, 6.890299999999863e-05, 6.948599999999708e-05, 6.888899999999906e-05, 6.958299999999806e-05, 6.969399999999862e-05, 6.945799999999794e-05, 6.970799999999819e-05, 6.887499999999949e-05, 6.897200000000048e-05, 6.913899999999931e-05, 6.936100000000042e-05, 6.95559999999984e-05, 6.976399999999994e-05, 6.968100000000199e-05, 6.924999999999987e-05, 6.913899999999931e-05]</msg>
<status status="PASS" starttime="20201115 23:01:42.229" endtime="20201115 23:01:42.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.224" endtime="20201115 23:01:42.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.233" endtime="20201115 23:01:42.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.237" endtime="20201115 23:01:42.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.235" endtime="20201115 23:01:42.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.232" endtime="20201115 23:01:42.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.866" endtime="20201115 23:01:42.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.864" endtime="20201115 23:01:42.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.863" endtime="20201115 23:01:42.258"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.260" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.268" endtime="20201115 23:01:42.287"></status>
</kw>
<msg timestamp="20201115 23:01:42.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.267" endtime="20201115 23:01:42.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.288" endtime="20201115 23:01:42.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.291" endtime="20201115 23:01:42.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.264" endtime="20201115 23:01:42.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.262" endtime="20201115 23:01:42.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.301" endtime="20201115 23:01:42.587"></status>
</kw>
<msg timestamp="20201115 23:01:42.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0250075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025078681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:42.299" endtime="20201115 23:01:42.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0250075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025078681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:42.591" endtime="20201115 23:01:42.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.599" endtime="20201115 23:01:42.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.296" endtime="20201115 23:01:42.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.295" endtime="20201115 23:01:42.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.606" level="INFO">${RESULT} = [{'time': 0.025078681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.118100000000002e-05, 'source_diff': 7.118100000000002e-05}, {'time': 0.025162292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:42.603" endtime="20201115 23:01:42.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.621" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:42.607" endtime="20201115 23:01:42.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.625" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.624" endtime="20201115 23:01:42.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.628" level="INFO">VALUE: [7.118100000000002e-05, 7.015299999999988e-05, 7.041700000000317e-05, 6.994499999999834e-05, 7.016599999999998e-05, 7.015200000000041e-05, 7.059699999999863e-05, 6.980500000000264e-05, 7.011100000000117e-05, 6.983299999999831e-05, 7.017999999999955e-05, 7.019399999999912e-05, 7.007000000000194e-05, 7.048599999999808e-05, 7.02499999999974e-05, 7.040300000000013e-05, 7.027800000000001e-05, 7.00979999999976e-05, 7.05559999999994e-05, 6.988900000000006e-05, 7.038900000000056e-05, 7.051400000000069e-05, 6.987500000000049e-05, 7.058299999999906e-05, 7.049999999999765e-05, 7.008299999999856e-05, 7.02499999999974e-05, 7.062499999999777e-05, 7.031899999999924e-05, 6.987499999999702e-05, 7.030499999999967e-05, 6.994400000000234e-05, 7.023599999999783e-05, 6.983300000000178e-05, 6.997200000000148e-05, 6.995800000000191e-05, 7.026400000000044e-05, 7.051399999999722e-05, 7.034699999999838e-05, 7.058399999999854e-05, 7.069499999999909e-05, 7.001400000000019e-05, 6.988900000000006e-05, 7.020899999999816e-05, 7.058300000000253e-05, 7.069399999999962e-05, 7.030499999999967e-05, 7.025000000000087e-05, 7.000000000000062e-05, 7.000000000000062e-05]</msg>
<status status="PASS" starttime="20201115 23:01:42.626" endtime="20201115 23:01:42.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.622" endtime="20201115 23:01:42.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.631" endtime="20201115 23:01:42.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.634" endtime="20201115 23:01:42.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.633" endtime="20201115 23:01:42.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.629" endtime="20201115 23:01:42.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.261" endtime="20201115 23:01:42.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.259" endtime="20201115 23:01:42.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.258" endtime="20201115 23:01:42.656"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.658" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.671" endtime="20201115 23:01:42.689"></status>
</kw>
<msg timestamp="20201115 23:01:42.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.669" endtime="20201115 23:01:42.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.691" endtime="20201115 23:01:42.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.693" endtime="20201115 23:01:42.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.662" endtime="20201115 23:01:42.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.660" endtime="20201115 23:01:42.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.702" endtime="20201115 23:01:42.988"></status>
</kw>
<msg timestamp="20201115 23:01:42.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028636347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028708111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.701" endtime="20201115 23:01:42.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028636347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028708111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.992" endtime="20201115 23:01:43.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.001" endtime="20201115 23:01:43.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.698" endtime="20201115 23:01:43.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.696" endtime="20201115 23:01:43.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.007" level="INFO">${RESULT} = [{'time': 0.028708111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.176400000000194e-05, 'source_diff': 7.176400000000194e-05}, {'time': 0.028792722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:43.004" endtime="20201115 23:01:43.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.021" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:43.008" endtime="20201115 23:01:43.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.025" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.024" endtime="20201115 23:01:43.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.028" level="INFO">VALUE: [7.176400000000194e-05, 7.169400000000062e-05, 7.177800000000151e-05, 7.140300000000113e-05, 7.100000000000162e-05, 7.162499999999877e-05, 7.15560000000004e-05, 7.095799999999944e-05, 7.118100000000002e-05, 7.180600000000065e-05, 7.138900000000156e-05, 7.100000000000162e-05, 7.083400000000226e-05, 7.1762999999999e-05, 7.138900000000156e-05, 7.093099999999977e-05, 7.168000000000105e-05, 7.148600000000255e-05, 7.097199999999901e-05, 7.169400000000062e-05, 7.15690000000005e-05, 7.112500000000174e-05, 7.115300000000088e-05, 7.104199999999686e-05, 7.09170000000002e-05, 7.168100000000052e-05, 7.144499999999984e-05, 7.119400000000012e-05, 7.14170000000007e-05, 7.090300000000063e-05, 7.127799999999754e-05, 7.109699999999913e-05, 7.15560000000004e-05, 7.16109999999992e-05, 7.116700000000392e-05, 7.150000000000212e-05, 7.12639999999945e-05, 7.084699999999888e-05, 7.108299999999956e-05, 7.115200000000488e-05, 7.140200000000513e-05, 7.118000000000402e-05, 7.175000000000237e-05, 7.152800000000126e-05, 7.183300000000031e-05, 7.175000000000237e-05, 7.127800000000101e-05, 7.177800000000151e-05, 7.131999999999972e-05, 7.179200000000108e-05]</msg>
<status status="PASS" starttime="20201115 23:01:43.026" endtime="20201115 23:01:43.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.022" endtime="20201115 23:01:43.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.031" endtime="20201115 23:01:43.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.034" endtime="20201115 23:01:43.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.033" endtime="20201115 23:01:43.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.029" endtime="20201115 23:01:43.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.659" endtime="20201115 23:01:43.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.657" endtime="20201115 23:01:43.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.656" endtime="20201115 23:01:43.056"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.058" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.067" endtime="20201115 23:01:43.085"></status>
</kw>
<msg timestamp="20201115 23:01:43.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.065" endtime="20201115 23:01:43.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.086" endtime="20201115 23:01:43.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.089" endtime="20201115 23:01:43.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.062" endtime="20201115 23:01:43.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.060" endtime="20201115 23:01:43.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.098" endtime="20201115 23:01:43.384"></status>
</kw>
<msg timestamp="20201115 23:01:43.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024728056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024801194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.097" endtime="20201115 23:01:43.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024728056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024801194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.388" endtime="20201115 23:01:43.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.397" endtime="20201115 23:01:43.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.094" endtime="20201115 23:01:43.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.092" endtime="20201115 23:01:43.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.403" level="INFO">${RESULT} = [{'time': 0.024801194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.31379999999969e-05, 'source_diff': 7.31379999999969e-05}, {'time': 0.024884806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:43.400" endtime="20201115 23:01:43.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.417" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:43.404" endtime="20201115 23:01:43.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.421" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.420" endtime="20201115 23:01:43.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.424" level="INFO">VALUE: [7.31379999999969e-05, 7.234799999999986e-05, 7.218100000000102e-05, 7.263900000000281e-05, 7.236199999999943e-05, 7.238899999999909e-05, 7.222299999999973e-05, 7.219500000000059e-05, 7.213899999999884e-05, 7.215199999999894e-05, 7.226300000000296e-05, 7.252799999999879e-05, 7.200000000000262e-05, 7.25690000000015e-05, 7.233299999999734e-05, 7.270800000000119e-05, 7.193100000000077e-05, 7.194500000000034e-05, 7.261199999999968e-05, 7.229200000000158e-05, 7.208300000000056e-05, 7.26110000000002e-05, 7.188899999999859e-05, 7.219500000000059e-05, 7.227799999999854e-05, 7.268100000000152e-05, 7.211199999999918e-05, 7.282000000000122e-05, 7.222299999999973e-05, 7.191599999999826e-05, 7.205500000000142e-05, 7.252699999999931e-05, 7.26110000000002e-05, 7.213899999999884e-05, 7.26110000000002e-05, 7.184699999999988e-05, 7.237499999999952e-05, 7.209700000000013e-05, 7.248600000000008e-05, 7.265300000000238e-05, 7.188899999999859e-05, 7.219400000000112e-05, 7.252799999999879e-05, 7.215299999999841e-05, 7.188899999999859e-05, 7.204199999999786e-05, 7.231900000000124e-05, 7.226399999999897e-05, 7.254100000000235e-05, 7.218000000000155e-05]</msg>
<status status="PASS" starttime="20201115 23:01:43.422" endtime="20201115 23:01:43.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.418" endtime="20201115 23:01:43.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.427" endtime="20201115 23:01:43.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.431" endtime="20201115 23:01:43.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.429" endtime="20201115 23:01:43.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.426" endtime="20201115 23:01:43.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.059" endtime="20201115 23:01:43.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.057" endtime="20201115 23:01:43.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.056" endtime="20201115 23:01:43.452"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.454" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.462" endtime="20201115 23:01:43.481"></status>
</kw>
<msg timestamp="20201115 23:01:43.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.461" endtime="20201115 23:01:43.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.483" endtime="20201115 23:01:43.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.485" endtime="20201115 23:01:43.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.458" endtime="20201115 23:01:43.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.456" endtime="20201115 23:01:43.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.494" endtime="20201115 23:01:43.780"></status>
</kw>
<msg timestamp="20201115 23:01:43.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024328319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024402792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.493" endtime="20201115 23:01:43.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024328319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024402792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.784" endtime="20201115 23:01:43.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.793" endtime="20201115 23:01:43.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.490" endtime="20201115 23:01:43.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.488" endtime="20201115 23:01:43.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.799" level="INFO">${RESULT} = [{'time': 0.024402792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.447299999999851e-05, 'source_diff': 7.447299999999851e-05}, {'time': 0.024485403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:43.796" endtime="20201115 23:01:43.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.813" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:43.800" endtime="20201115 23:01:43.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.817" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.816" endtime="20201115 23:01:43.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.820" level="INFO">VALUE: [7.447299999999851e-05, 7.291699999999873e-05, 7.34309999999988e-05, 7.34309999999988e-05, 7.288900000000306e-05, 7.305599999999843e-05, 7.297200000000101e-05, 7.316599999999951e-05, 7.363900000000034e-05, 7.327700000000006e-05, 7.352800000000326e-05, 7.369399999999915e-05, 7.31110000000007e-05, 7.298600000000058e-05, 7.362500000000077e-05, 7.294400000000187e-05, 7.337500000000052e-05, 7.327799999999954e-05, 7.301399999999972e-05, 7.330600000000215e-05, 7.34309999999988e-05, 7.295900000000091e-05, 7.341599999999976e-05, 7.355599999999893e-05, 7.366699999999948e-05, 7.305500000000242e-05, 7.297199999999754e-05, 7.287500000000002e-05, 7.3763000000001e-05, 7.334699999999791e-05, 7.290199999999969e-05, 7.34300000000028e-05, 7.37500000000009e-05, 7.354099999999988e-05, 7.323600000000083e-05, 7.376400000000047e-05, 7.383299999999884e-05, 7.352799999999979e-05, 7.35829999999986e-05, 7.308399999999757e-05, 7.295900000000091e-05, 7.288899999999959e-05, 7.329200000000258e-05, 7.334800000000086e-05, 7.344500000000184e-05, 7.333399999999782e-05, 7.313899999999984e-05, 7.351400000000022e-05, 7.334700000000138e-05, 7.372200000000176e-05]</msg>
<status status="PASS" starttime="20201115 23:01:43.818" endtime="20201115 23:01:43.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.814" endtime="20201115 23:01:43.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.823" endtime="20201115 23:01:43.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.827" endtime="20201115 23:01:43.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.825" endtime="20201115 23:01:43.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.822" endtime="20201115 23:01:43.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.455" endtime="20201115 23:01:43.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.453" endtime="20201115 23:01:43.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.452" endtime="20201115 23:01:43.848"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.850" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.859" endtime="20201115 23:01:43.877"></status>
</kw>
<msg timestamp="20201115 23:01:43.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.857" endtime="20201115 23:01:43.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.879" endtime="20201115 23:01:43.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.881" endtime="20201115 23:01:43.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.855" endtime="20201115 23:01:43.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.852" endtime="20201115 23:01:43.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.891" endtime="20201115 23:01:44.177"></status>
</kw>
<msg timestamp="20201115 23:01:44.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024954708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025029347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.889" endtime="20201115 23:01:44.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024954708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025029347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.181" endtime="20201115 23:01:44.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.189" endtime="20201115 23:01:44.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.886" endtime="20201115 23:01:44.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.885" endtime="20201115 23:01:44.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.197" level="INFO">${RESULT} = [{'time': 0.025029347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.463900000000134e-05, 'source_diff': 7.463900000000134e-05}, {'time': 0.025111972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:44.193" endtime="20201115 23:01:44.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.212" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:44.198" endtime="20201115 23:01:44.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.217" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.216" endtime="20201115 23:01:44.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.219" level="INFO">VALUE: [7.463900000000134e-05, 7.426400000000097e-05, 7.406899999999952e-05, 7.387500000000102e-05, 7.469499999999962e-05, 7.406899999999952e-05, 7.424999999999793e-05, 7.459699999999916e-05, 7.45829999999996e-05, 7.473599999999886e-05, 7.451399999999775e-05, 7.427800000000054e-05, 7.427800000000054e-05, 7.420900000000216e-05, 7.41249999999978e-05, 7.430599999999968e-05, 7.46379999999984e-05, 7.470799999999972e-05, 7.40829999999991e-05, 7.391699999999973e-05, 7.384700000000188e-05, 7.450000000000165e-05, 7.483299999999984e-05, 7.423600000000183e-05, 7.479200000000061e-05, 7.455500000000045e-05, 7.430599999999968e-05, 7.451400000000122e-05, 7.431999999999925e-05, 7.390300000000016e-05, 7.391699999999973e-05, 7.472199999999929e-05, 7.469500000000309e-05, 7.384799999999789e-05, 7.41249999999978e-05, 7.418099999999955e-05, 7.440300000000066e-05, 7.404100000000038e-05, 7.470799999999972e-05, 7.420800000000269e-05, 7.450000000000165e-05, 7.437500000000152e-05, 7.450000000000165e-05, 7.388900000000059e-05, 7.438899999999762e-05, 7.4069999999999e-05, 7.437500000000152e-05, 7.452800000000079e-05, 7.468100000000005e-05, 7.405599999999943e-05]</msg>
<status status="PASS" starttime="20201115 23:01:44.218" endtime="20201115 23:01:44.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.213" endtime="20201115 23:01:44.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.222" endtime="20201115 23:01:44.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.226" endtime="20201115 23:01:44.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.224" endtime="20201115 23:01:44.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.221" endtime="20201115 23:01:44.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.851" endtime="20201115 23:01:44.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.849" endtime="20201115 23:01:44.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.848" endtime="20201115 23:01:44.247"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.249" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.258" endtime="20201115 23:01:44.275"></status>
</kw>
<msg timestamp="20201115 23:01:44.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.256" endtime="20201115 23:01:44.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.277" endtime="20201115 23:01:44.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.279" endtime="20201115 23:01:44.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.253" endtime="20201115 23:01:44.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.251" endtime="20201115 23:01:44.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.288" endtime="20201115 23:01:44.574"></status>
</kw>
<msg timestamp="20201115 23:01:44.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024150764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024227181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.287" endtime="20201115 23:01:44.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024150764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024227181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.579" endtime="20201115 23:01:44.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.587" endtime="20201115 23:01:44.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.284" endtime="20201115 23:01:44.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.282" endtime="20201115 23:01:44.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.594" level="INFO">${RESULT} = [{'time': 0.024227181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.641699999999876e-05, 'source_diff': 7.641699999999876e-05}, {'time': 0.024314806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:44.591" endtime="20201115 23:01:44.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.608" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:44.595" endtime="20201115 23:01:44.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.612" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.611" endtime="20201115 23:01:44.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.615" level="INFO">VALUE: [7.641699999999876e-05, 7.52370000000023e-05, 7.548699999999908e-05, 7.490199999999822e-05, 7.563899999999887e-05, 7.522199999999979e-05, 7.522199999999979e-05, 7.518100000000055e-05, 7.51110000000027e-05, 7.53890000000021e-05, 7.569500000000062e-05, 7.55830000000006e-05, 7.548599999999961e-05, 7.54310000000008e-05, 7.529200000000111e-05, 7.49310000000003e-05, 7.551399999999875e-05, 7.572299999999976e-05, 7.582000000000075e-05, 7.493099999999683e-05, 7.583300000000084e-05, 7.529100000000163e-05, 7.569400000000115e-05, 7.581900000000127e-05, 7.52769999999986e-05, 7.565199999999897e-05, 7.527700000000206e-05, 7.547200000000004e-05, 7.536099999999948e-05, 7.505499999999748e-05, 7.536099999999948e-05, 7.531900000000077e-05, 7.505600000000043e-05, 7.498600000000258e-05, 7.566699999999801e-05, 7.545899999999994e-05, 7.524999999999893e-05, 7.500000000000215e-05, 7.561099999999973e-05, 7.54029999999982e-05, 7.49310000000003e-05, 7.507e-05, 7.530600000000068e-05, 7.545800000000047e-05, 7.576299999999953e-05, 7.502700000000181e-05, 7.52769999999986e-05, 7.501399999999825e-05, 7.566600000000201e-05, 7.541599999999829e-05]</msg>
<status status="PASS" starttime="20201115 23:01:44.613" endtime="20201115 23:01:44.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.609" endtime="20201115 23:01:44.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.618" endtime="20201115 23:01:44.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.621" endtime="20201115 23:01:44.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.620" endtime="20201115 23:01:44.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.616" endtime="20201115 23:01:44.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.250" endtime="20201115 23:01:44.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.248" endtime="20201115 23:01:44.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.247" endtime="20201115 23:01:44.642"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.645" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.653" endtime="20201115 23:01:44.671"></status>
</kw>
<msg timestamp="20201115 23:01:44.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.652" endtime="20201115 23:01:44.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.672" endtime="20201115 23:01:44.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.675" endtime="20201115 23:01:44.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.649" endtime="20201115 23:01:44.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.647" endtime="20201115 23:01:44.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.685" endtime="20201115 23:01:44.969"></status>
</kw>
<msg timestamp="20201115 23:01:44.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024482097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024559556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.683" endtime="20201115 23:01:44.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024482097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024559556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.973" endtime="20201115 23:01:44.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.982" endtime="20201115 23:01:44.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.680" endtime="20201115 23:01:44.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.678" endtime="20201115 23:01:44.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.989" level="INFO">${RESULT} = [{'time': 0.024559556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.745899999999847e-05, 'source_diff': 7.745899999999847e-05}, {'time': 0.024644181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:44.985" endtime="20201115 23:01:44.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.002" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:44.990" endtime="20201115 23:01:45.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.007" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.006" endtime="20201115 23:01:45.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.009" level="INFO">VALUE: [7.745899999999847e-05, 7.637500000000005e-05, 7.679100000000313e-05, 7.672200000000129e-05, 7.595800000000097e-05, 7.652699999999985e-05, 7.583300000000084e-05, 7.58890000000026e-05, 7.592999999999836e-05, 7.629200000000211e-05, 7.670800000000172e-05, 7.64449999999979e-05, 7.648600000000061e-05, 7.627799999999907e-05, 7.627800000000254e-05, 7.604200000000186e-05, 7.620900000000069e-05, 7.650000000000018e-05, 7.663899999999987e-05, 7.604199999999839e-05, 7.584799999999989e-05, 7.662499999999683e-05, 7.656900000000202e-05, 7.633299999999787e-05, 7.623600000000036e-05, 7.629100000000263e-05, 7.613899999999937e-05, 7.655500000000245e-05, 7.597199999999707e-05, 7.601399999999925e-05, 7.588899999999912e-05, 7.609700000000066e-05, 7.637500000000005e-05, 7.669499999999815e-05, 7.681900000000227e-05, 7.679200000000261e-05, 7.599999999999968e-05, 7.65969999999977e-05, 7.587499999999955e-05, 7.680600000000218e-05, 7.629200000000211e-05, 7.599999999999968e-05, 7.634700000000091e-05, 7.62639999999995e-05, 7.590199999999922e-05, 7.590199999999922e-05, 7.651400000000322e-05, 7.623600000000036e-05, 7.605500000000195e-05, 7.663899999999987e-05]</msg>
<status status="PASS" starttime="20201115 23:01:45.008" endtime="20201115 23:01:45.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.003" endtime="20201115 23:01:45.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.012" endtime="20201115 23:01:45.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.016" endtime="20201115 23:01:45.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.014" endtime="20201115 23:01:45.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.011" endtime="20201115 23:01:45.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.645" endtime="20201115 23:01:45.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.644" endtime="20201115 23:01:45.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.643" endtime="20201115 23:01:45.037"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.039" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.048" endtime="20201115 23:01:45.065"></status>
</kw>
<msg timestamp="20201115 23:01:45.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.046" endtime="20201115 23:01:45.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.067" endtime="20201115 23:01:45.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.070" endtime="20201115 23:01:45.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.043" endtime="20201115 23:01:45.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.041" endtime="20201115 23:01:45.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.079" endtime="20201115 23:01:45.364"></status>
</kw>
<msg timestamp="20201115 23:01:45.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024173431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024251472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.077" endtime="20201115 23:01:45.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024173431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024251472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.369" endtime="20201115 23:01:45.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.377" endtime="20201115 23:01:45.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.075" endtime="20201115 23:01:45.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.073" endtime="20201115 23:01:45.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.384" level="INFO">${RESULT} = [{'time': 0.024251472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.804100000000092e-05, 'source_diff': 7.804100000000092e-05}, {'time': 0.024343056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:45.380" endtime="20201115 23:01:45.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.397" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:45.385" endtime="20201115 23:01:45.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.402" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.401" endtime="20201115 23:01:45.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.404" level="INFO">VALUE: [7.804100000000092e-05, 7.776399999999753e-05, 7.697299999999754e-05, 7.713900000000037e-05, 7.747199999999857e-05, 7.702799999999982e-05, 7.711099999999776e-05, 7.720799999999875e-05, 7.78189999999998e-05, 7.73189999999993e-05, 7.694399999999893e-05, 7.688900000000012e-05, 7.769400000000315e-05, 7.736100000000148e-05, 7.766700000000001e-05, 7.747200000000204e-05, 7.747199999999857e-05, 7.761100000000173e-05, 7.722199999999832e-05, 7.769399999999968e-05, 7.71250000000008e-05, 7.748700000000108e-05, 7.766700000000001e-05, 7.690200000000022e-05, 7.743099999999933e-05, 7.766700000000001e-05, 7.726399999999703e-05, 7.751399999999728e-05, 7.720800000000222e-05, 7.756899999999955e-05, 7.751399999999728e-05, 7.708299999999862e-05, 7.769399999999968e-05, 7.7764000000001e-05, 7.737500000000105e-05, 7.704200000000286e-05, 7.725000000000093e-05, 7.761099999999826e-05, 7.763900000000087e-05, 7.684699999999794e-05, 7.738900000000062e-05, 7.683400000000132e-05, 7.780599999999971e-05, 7.725000000000093e-05, 7.727800000000007e-05, 7.774999999999796e-05, 7.708299999999862e-05, 7.690200000000022e-05, 7.744399999999943e-05, 7.738899999999715e-05]</msg>
<status status="PASS" starttime="20201115 23:01:45.403" endtime="20201115 23:01:45.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.398" endtime="20201115 23:01:45.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.407" endtime="20201115 23:01:45.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.411" endtime="20201115 23:01:45.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.409" endtime="20201115 23:01:45.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.406" endtime="20201115 23:01:45.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.040" endtime="20201115 23:01:45.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.038" endtime="20201115 23:01:45.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.037" endtime="20201115 23:01:45.432"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.434" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.443" endtime="20201115 23:01:45.462"></status>
</kw>
<msg timestamp="20201115 23:01:45.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.441" endtime="20201115 23:01:45.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.464" endtime="20201115 23:01:45.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.466" endtime="20201115 23:01:45.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.438" endtime="20201115 23:01:45.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.436" endtime="20201115 23:01:45.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.475" endtime="20201115 23:01:45.760"></status>
</kw>
<msg timestamp="20201115 23:01:45.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025645486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025724625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.474" endtime="20201115 23:01:45.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025645486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025724625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.765" endtime="20201115 23:01:45.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.773" endtime="20201115 23:01:45.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.471" endtime="20201115 23:01:45.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.469" endtime="20201115 23:01:45.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.780" level="INFO">${RESULT} = [{'time': 0.025724625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.913900000000237e-05, 'source_diff': 7.913900000000237e-05}, {'time': 0.025811236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:45.776" endtime="20201115 23:01:45.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.794" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:45.781" endtime="20201115 23:01:45.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.799" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.798" endtime="20201115 23:01:45.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.802" level="INFO">VALUE: [7.913900000000237e-05, 7.880500000000124e-05, 7.801400000000125e-05, 7.819499999999965e-05, 7.879199999999767e-05, 7.865300000000144e-05, 7.806999999999953e-05, 7.791700000000026e-05, 7.861099999999926e-05, 7.841599999999782e-05, 7.8458e-05, 7.79449999999994e-05, 7.795900000000244e-05, 7.854200000000089e-05, 7.86519999999985e-05, 7.823599999999889e-05, 7.783299999999937e-05, 7.819400000000018e-05, 7.862499999999883e-05, 7.841600000000129e-05, 7.815300000000094e-05, 7.79579999999995e-05, 7.784699999999894e-05, 7.852800000000132e-05, 7.877800000000157e-05, 7.870800000000025e-05, 7.804200000000039e-05, 7.861100000000273e-05, 7.793099999999983e-05, 7.790299999999722e-05, 7.812499999999833e-05, 7.841600000000129e-05, 7.816700000000051e-05, 7.829200000000064e-05, 7.830500000000074e-05, 7.84030000000012e-05, 7.837499999999858e-05, 7.79030000000007e-05, 7.801399999999778e-05, 7.811099999999876e-05, 7.8764000000002e-05, 7.791700000000026e-05, 7.861099999999926e-05, 7.854200000000089e-05, 7.80969999999992e-05, 7.833400000000282e-05, 7.812499999999833e-05, 7.843100000000033e-05, 7.797299999999854e-05, 7.780599999999971e-05]</msg>
<status status="PASS" starttime="20201115 23:01:45.800" endtime="20201115 23:01:45.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.795" endtime="20201115 23:01:45.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.805" endtime="20201115 23:01:45.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.808" endtime="20201115 23:01:45.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.807" endtime="20201115 23:01:45.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.803" endtime="20201115 23:01:45.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.435" endtime="20201115 23:01:45.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.433" endtime="20201115 23:01:45.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.432" endtime="20201115 23:01:45.830"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.832" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.840" endtime="20201115 23:01:45.858"></status>
</kw>
<msg timestamp="20201115 23:01:45.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.839" endtime="20201115 23:01:45.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.859" endtime="20201115 23:01:45.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.862" endtime="20201115 23:01:45.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.836" endtime="20201115 23:01:45.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.834" endtime="20201115 23:01:45.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.871" endtime="20201115 23:01:46.156"></status>
</kw>
<msg timestamp="20201115 23:01:46.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024363806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024444319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.870" endtime="20201115 23:01:46.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024363806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024444319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.161" endtime="20201115 23:01:46.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.169" endtime="20201115 23:01:46.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.867" endtime="20201115 23:01:46.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.865" endtime="20201115 23:01:46.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.176" level="INFO">${RESULT} = [{'time': 0.024444319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.05130000000008e-05, 'source_diff': 8.05130000000008e-05}, {'time': 0.024531, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7....</msg>
<status status="PASS" starttime="20201115 23:01:46.172" endtime="20201115 23:01:46.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.189" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:46.177" endtime="20201115 23:01:46.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.194" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.193" endtime="20201115 23:01:46.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.196" level="INFO">VALUE: [8.05130000000008e-05, 7.898599999999964e-05, 7.948600000000014e-05, 7.891599999999832e-05, 7.89580000000005e-05, 7.883300000000037e-05, 7.972200000000082e-05, 7.909699999999673e-05, 7.899999999999921e-05, 7.940299999999872e-05, 7.937499999999958e-05, 7.957000000000103e-05, 7.943100000000133e-05, 7.911099999999976e-05, 7.915299999999847e-05, 7.895899999999997e-05, 7.979199999999867e-05, 7.930599999999774e-05, 7.936100000000001e-05, 7.986100000000051e-05, 7.9764000000003e-05, 7.944400000000143e-05, 7.973600000000039e-05, 7.911099999999976e-05, 7.980499999999877e-05, 7.934700000000044e-05, 7.932000000000078e-05, 7.954199999999842e-05, 7.938899999999915e-05, 7.952800000000232e-05, 7.899999999999921e-05, 7.949999999999971e-05, 7.884699999999994e-05, 7.938900000000262e-05, 7.915300000000194e-05, 7.937499999999958e-05, 7.983300000000138e-05, 7.976399999999953e-05, 7.951399999999928e-05, 7.924999999999946e-05, 7.948600000000014e-05, 7.955500000000199e-05, 7.969399999999821e-05, 7.951400000000275e-05, 7.931899999999784e-05, 7.947200000000057e-05, 7.956900000000156e-05, 7.913799999999943e-05, 7.952800000000232e-05, 7.923599999999989e-05]</msg>
<status status="PASS" starttime="20201115 23:01:46.195" endtime="20201115 23:01:46.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.190" endtime="20201115 23:01:46.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.200" endtime="20201115 23:01:46.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.203" endtime="20201115 23:01:46.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.202" endtime="20201115 23:01:46.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.198" endtime="20201115 23:01:46.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.833" endtime="20201115 23:01:46.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.831" endtime="20201115 23:01:46.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.830" endtime="20201115 23:01:46.225"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.227" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.237" endtime="20201115 23:01:46.255"></status>
</kw>
<msg timestamp="20201115 23:01:46.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.235" endtime="20201115 23:01:46.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.257" endtime="20201115 23:01:46.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.259" endtime="20201115 23:01:46.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.232" endtime="20201115 23:01:46.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.230" endtime="20201115 23:01:46.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.269" endtime="20201115 23:01:46.553"></status>
</kw>
<msg timestamp="20201115 23:01:46.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026241861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026323139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.267" endtime="20201115 23:01:46.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026241861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026323139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.558" endtime="20201115 23:01:46.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.566" endtime="20201115 23:01:46.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.264" endtime="20201115 23:01:46.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.263" endtime="20201115 23:01:46.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.573" level="INFO">${RESULT} = [{'time': 0.026323139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.12780000000006e-05, 'source_diff': 8.12780000000006e-05}, {'time': 0.026412792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:46.569" endtime="20201115 23:01:46.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.586" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:46.574" endtime="20201115 23:01:46.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.591" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.590" endtime="20201115 23:01:46.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.594" level="INFO">VALUE: [8.12780000000006e-05, 8.007000000000153e-05, 8.016699999999904e-05, 8.019500000000165e-05, 8.023600000000089e-05, 8.044400000000243e-05, 8.061200000000074e-05, 8.020899999999775e-05, 8.065199999999703e-05, 8.040200000000025e-05, 8.04719999999981e-05, 8.020799999999828e-05, 7.988899999999965e-05, 8.023600000000089e-05, 8.011100000000076e-05, 8.055499999999952e-05, 8.02779999999996e-05, 8.034700000000145e-05, 8.075000000000096e-05, 8.072199999999835e-05, 8.01389999999999e-05, 7.993100000000183e-05, 8.037500000000058e-05, 7.994399999999846e-05, 8.04169999999993e-05, 8.019499999999818e-05, 8.034800000000092e-05, 8.062499999999737e-05, 7.991599999999932e-05, 8.000000000000021e-05, 8.07910000000002e-05, 8.048600000000114e-05, 7.988900000000312e-05, 8.048600000000114e-05, 8.030500000000274e-05, 8.038900000000015e-05, 8.011100000000076e-05, 8.04169999999993e-05, 7.98329999999979e-05, 7.988899999999965e-05, 8.019499999999818e-05, 8.030599999999874e-05, 8.008299999999816e-05, 7.993100000000183e-05, 8.027800000000307e-05, 8.083399999999838e-05, 8.02230000000008e-05, 7.987500000000008e-05, 8.044400000000243e-05, 8.036099999999755e-05]</msg>
<status status="PASS" starttime="20201115 23:01:46.592" endtime="20201115 23:01:46.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.587" endtime="20201115 23:01:46.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.597" endtime="20201115 23:01:46.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.600" endtime="20201115 23:01:46.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.599" endtime="20201115 23:01:46.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.595" endtime="20201115 23:01:46.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.228" endtime="20201115 23:01:46.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.226" endtime="20201115 23:01:46.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.225" endtime="20201115 23:01:46.621"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.624" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.632" endtime="20201115 23:01:46.650"></status>
</kw>
<msg timestamp="20201115 23:01:46.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.630" endtime="20201115 23:01:46.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.651" endtime="20201115 23:01:46.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.654" endtime="20201115 23:01:46.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.628" endtime="20201115 23:01:46.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.626" endtime="20201115 23:01:46.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.663" endtime="20201115 23:01:46.949"></status>
</kw>
<msg timestamp="20201115 23:01:46.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024076111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024157819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.661" endtime="20201115 23:01:46.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024076111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024157819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.954" endtime="20201115 23:01:46.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.962" endtime="20201115 23:01:46.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.659" endtime="20201115 23:01:46.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.657" endtime="20201115 23:01:46.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.969" level="INFO">${RESULT} = [{'time': 0.024157819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.170799999999978e-05, 'source_diff': 8.170799999999978e-05}, {'time': 0.024250431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:46.965" endtime="20201115 23:01:46.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.983" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:46.970" endtime="20201115 23:01:46.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.987" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.986" endtime="20201115 23:01:46.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.990" level="INFO">VALUE: [8.170799999999978e-05, 8.144499999999943e-05, 8.170799999999978e-05, 8.152700000000138e-05, 8.176400000000153e-05, 8.105599999999949e-05, 8.084699999999848e-05, 8.08329999999989e-05, 8.155500000000052e-05, 8.083300000000238e-05, 8.155500000000052e-05, 8.179200000000067e-05, 8.162499999999837e-05, 8.173599999999892e-05, 8.116700000000004e-05, 8.131999999999931e-05, 8.088899999999719e-05, 8.084800000000142e-05, 8.14170000000003e-05, 8.140300000000072e-05, 8.123600000000189e-05, 8.127699999999766e-05, 8.106899999999959e-05, 8.184699999999948e-05, 8.162499999999837e-05, 8.125000000000146e-05, 8.166600000000107e-05, 8.148600000000214e-05, 8.126400000000103e-05, 8.119399999999971e-05, 8.079199999999967e-05, 8.120900000000222e-05, 8.090300000000022e-05, 8.115300000000047e-05, 8.155599999999999e-05, 8.151400000000128e-05, 8.181999999999981e-05, 8.148699999999814e-05, 8.100000000000121e-05, 8.087500000000108e-05, 8.118000000000014e-05, 8.181900000000034e-05, 8.140199999999778e-05, 8.148599999999867e-05, 8.126400000000103e-05, 8.16390000000014e-05, 8.143099999999986e-05, 8.102800000000035e-05, 8.086099999999805e-05, 8.184700000000295e-05]</msg>
<status status="PASS" starttime="20201115 23:01:46.988" endtime="20201115 23:01:46.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.984" endtime="20201115 23:01:46.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.993" endtime="20201115 23:01:46.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.996" endtime="20201115 23:01:47.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.995" endtime="20201115 23:01:47.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.991" endtime="20201115 23:01:47.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.624" endtime="20201115 23:01:47.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.623" endtime="20201115 23:01:47.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.622" endtime="20201115 23:01:47.017"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.020" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.028" endtime="20201115 23:01:47.048"></status>
</kw>
<msg timestamp="20201115 23:01:47.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.026" endtime="20201115 23:01:47.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.049" endtime="20201115 23:01:47.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.052" endtime="20201115 23:01:47.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.024" endtime="20201115 23:01:47.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.022" endtime="20201115 23:01:47.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.061" endtime="20201115 23:01:47.347"></status>
</kw>
<msg timestamp="20201115 23:01:47.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025298472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025382, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:47.059" endtime="20201115 23:01:47.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025298472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025382, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:47.351" endtime="20201115 23:01:47.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.360" endtime="20201115 23:01:47.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.057" endtime="20201115 23:01:47.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.055" endtime="20201115 23:01:47.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.367" level="INFO">${RESULT} = [{'time': 0.025382, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.352799999999938e-05, 'source_diff': 8.352799999999938e-05}, {'time': 0.025472653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:47.363" endtime="20201115 23:01:47.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.381" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:47.368" endtime="20201115 23:01:47.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.386" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.385" endtime="20201115 23:01:47.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.388" level="INFO">VALUE: [8.352799999999938e-05, 8.269500000000068e-05, 8.258300000000066e-05, 8.24720000000001e-05, 8.254200000000142e-05, 8.245800000000053e-05, 8.21109999999993e-05, 8.272299999999982e-05, 8.282000000000081e-05, 8.276399999999906e-05, 8.216699999999758e-05, 8.230500000000127e-05, 8.190199999999828e-05, 8.242999999999792e-05, 8.26390000000024e-05, 8.23330000000004e-05, 8.252799999999838e-05, 8.28049999999983e-05, 8.252799999999838e-05, 8.216699999999758e-05, 8.240299999999826e-05, 8.209699999999973e-05, 8.236100000000302e-05, 8.18329999999999e-05, 8.270900000000025e-05, 8.179200000000067e-05, 8.192999999999742e-05, 8.195900000000297e-05, 8.20269999999984e-05, 8.186199999999852e-05, 8.256900000000109e-05, 8.219400000000071e-05, 8.205600000000049e-05, 8.223599999999942e-05, 8.252800000000185e-05, 8.254100000000195e-05, 8.277799999999863e-05, 8.283299999999744e-05, 8.236099999999955e-05, 8.198599999999917e-05, 8.27780000000021e-05, 8.19170000000008e-05, 8.202800000000135e-05, 8.238900000000215e-05, 8.284799999999995e-05, 8.22919999999977e-05, 8.205599999999702e-05, 8.247299999999957e-05, 8.257000000000056e-05, 8.21109999999993e-05]</msg>
<status status="PASS" starttime="20201115 23:01:47.387" endtime="20201115 23:01:47.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.382" endtime="20201115 23:01:47.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.392" endtime="20201115 23:01:47.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.395" endtime="20201115 23:01:47.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.393" endtime="20201115 23:01:47.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.390" endtime="20201115 23:01:47.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.020" endtime="20201115 23:01:47.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.019" endtime="20201115 23:01:47.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.018" endtime="20201115 23:01:47.416"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.418" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.427" endtime="20201115 23:01:47.447"></status>
</kw>
<msg timestamp="20201115 23:01:47.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.425" endtime="20201115 23:01:47.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.448" endtime="20201115 23:01:47.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.451" endtime="20201115 23:01:47.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.423" endtime="20201115 23:01:47.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.420" endtime="20201115 23:01:47.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.460" endtime="20201115 23:01:47.745"></status>
</kw>
<msg timestamp="20201115 23:01:47.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024112319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024196917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.458" endtime="20201115 23:01:47.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024112319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024196917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.750" endtime="20201115 23:01:47.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.758" endtime="20201115 23:01:47.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.456" endtime="20201115 23:01:47.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.454" endtime="20201115 23:01:47.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.765" level="INFO">${RESULT} = [{'time': 0.024196917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.459799999999823e-05, 'source_diff': 8.459799999999823e-05}, {'time': 0.024291542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:47.761" endtime="20201115 23:01:47.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.778" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:47.766" endtime="20201115 23:01:47.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.783" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.782" endtime="20201115 23:01:47.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.785" level="INFO">VALUE: [8.459799999999823e-05, 8.3152999999999e-05, 8.283400000000038e-05, 8.357000000000156e-05, 8.323600000000042e-05, 8.33330000000014e-05, 8.323599999999695e-05, 8.326399999999956e-05, 8.31110000000003e-05, 8.331899999999837e-05, 8.331900000000184e-05, 8.354200000000242e-05, 8.336099999999708e-05, 8.340299999999926e-05, 8.341699999999883e-05, 8.36110000000008e-05, 8.341699999999883e-05, 8.312499999999987e-05, 8.340299999999926e-05, 8.32919999999987e-05, 8.369499999999822e-05, 8.337500000000012e-05, 8.362500000000037e-05, 8.28330000000009e-05, 8.341599999999935e-05, 8.367999999999917e-05, 8.337500000000012e-05, 8.338899999999969e-05, 8.348600000000067e-05, 8.342999999999892e-05, 8.344399999999849e-05, 8.290299999999876e-05, 8.350000000000024e-05, 8.36110000000008e-05, 8.351399999999981e-05, 8.284799999999995e-05, 8.368099999999865e-05, 8.307000000000106e-05, 8.312500000000334e-05, 8.351399999999981e-05, 8.302699999999941e-05, 8.301399999999931e-05, 8.369400000000221e-05, 8.36659999999996e-05, 8.313899999999944e-05, 8.322200000000085e-05, 8.304099999999898e-05, 8.381900000000234e-05, 8.333299999999794e-05, 8.336100000000055e-05]</msg>
<status status="PASS" starttime="20201115 23:01:47.784" endtime="20201115 23:01:47.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.779" endtime="20201115 23:01:47.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.788" endtime="20201115 23:01:47.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.792" endtime="20201115 23:01:47.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.790" endtime="20201115 23:01:47.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.787" endtime="20201115 23:01:47.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.419" endtime="20201115 23:01:47.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.417" endtime="20201115 23:01:47.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.416" endtime="20201115 23:01:47.813"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.815" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.823" endtime="20201115 23:01:47.842"></status>
</kw>
<msg timestamp="20201115 23:01:47.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.822" endtime="20201115 23:01:47.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.843" endtime="20201115 23:01:47.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.850" endtime="20201115 23:01:47.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.819" endtime="20201115 23:01:47.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.817" endtime="20201115 23:01:47.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.859" endtime="20201115 23:01:48.145"></status>
</kw>
<msg timestamp="20201115 23:01:48.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024103236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024188514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.858" endtime="20201115 23:01:48.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024103236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024188514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.150" endtime="20201115 23:01:48.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.158" endtime="20201115 23:01:48.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.855" endtime="20201115 23:01:48.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.853" endtime="20201115 23:01:48.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.165" level="INFO">${RESULT} = [{'time': 0.024188514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.527800000000113e-05, 'source_diff': 8.527800000000113e-05}, {'time': 0.024282139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:48.161" endtime="20201115 23:01:48.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.178" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:48.166" endtime="20201115 23:01:48.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.183" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.182" endtime="20201115 23:01:48.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.185" level="INFO">VALUE: [8.527800000000113e-05, 8.407000000000206e-05, 8.395800000000203e-05, 8.42919999999997e-05, 8.405600000000249e-05, 8.472200000000235e-05, 8.479099999999726e-05, 8.474999999999802e-05, 8.487500000000162e-05, 8.411200000000077e-05, 8.394499999999847e-05, 8.4846999999999e-05, 8.415200000000053e-05, 8.401400000000031e-05, 8.459699999999876e-05, 8.386099999999758e-05, 8.447199999999863e-05, 8.400000000000074e-05, 8.423600000000142e-05, 8.413900000000044e-05, 8.480599999999977e-05, 8.4153e-05, 8.42919999999997e-05, 8.401400000000031e-05, 8.476400000000106e-05, 8.477800000000063e-05, 8.461099999999833e-05, 8.413900000000044e-05, 8.419400000000271e-05, 8.470799999999931e-05, 8.437500000000112e-05, 8.480499999999683e-05, 8.426400000000056e-05, 8.422199999999838e-05, 8.416699999999958e-05, 8.416699999999958e-05, 8.480599999999977e-05, 8.402799999999988e-05, 8.422200000000185e-05, 8.422199999999838e-05, 8.466700000000008e-05, 8.461099999999833e-05, 8.39590000000015e-05, 8.384800000000095e-05, 8.468099999999965e-05, 8.420899999999829e-05, 8.436200000000102e-05, 8.431899999999937e-05, 8.404099999999998e-05, 8.479100000000073e-05]</msg>
<status status="PASS" starttime="20201115 23:01:48.184" endtime="20201115 23:01:48.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.179" endtime="20201115 23:01:48.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.188" endtime="20201115 23:01:48.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.192" endtime="20201115 23:01:48.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.190" endtime="20201115 23:01:48.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.187" endtime="20201115 23:01:48.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.816" endtime="20201115 23:01:48.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.814" endtime="20201115 23:01:48.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.813" endtime="20201115 23:01:48.213"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.215" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.224" endtime="20201115 23:01:48.242"></status>
</kw>
<msg timestamp="20201115 23:01:48.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.223" endtime="20201115 23:01:48.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.244" endtime="20201115 23:01:48.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.246" endtime="20201115 23:01:48.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.219" endtime="20201115 23:01:48.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.217" endtime="20201115 23:01:48.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.256" endtime="20201115 23:01:48.541"></status>
</kw>
<msg timestamp="20201115 23:01:48.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024574431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024660736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.254" endtime="20201115 23:01:48.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024574431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024660736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.545" endtime="20201115 23:01:48.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.553" endtime="20201115 23:01:48.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.251" endtime="20201115 23:01:48.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.249" endtime="20201115 23:01:48.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.560" level="INFO">${RESULT} = [{'time': 0.024660736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.630499999999833e-05, 'source_diff': 8.630499999999833e-05}, {'time': 0.024758361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:48.557" endtime="20201115 23:01:48.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.574" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:48.561" endtime="20201115 23:01:48.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.578" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.577" endtime="20201115 23:01:48.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.581" level="INFO">VALUE: [8.630499999999833e-05, 8.56249999999989e-05, 8.556900000000062e-05, 8.504200000000045e-05, 8.509699999999926e-05, 8.526400000000156e-05, 8.513900000000144e-05, 8.513899999999797e-05, 8.494499999999947e-05, 8.574999999999902e-05, 8.488900000000119e-05, 8.524999999999852e-05, 8.56530000000015e-05, 8.501400000000131e-05, 8.563900000000194e-05, 8.565199999999856e-05, 8.509700000000273e-05, 8.504200000000045e-05, 8.491700000000033e-05, 8.484700000000248e-05, 8.520799999999981e-05, 8.491700000000033e-05, 8.541699999999736e-05, 8.515299999999754e-05, 8.572299999999936e-05, 8.554200000000095e-05, 8.493000000000042e-05, 8.583300000000044e-05, 8.526400000000156e-05, 8.501399999999784e-05, 8.580600000000077e-05, 8.533299999999994e-05, 8.540200000000178e-05, 8.500000000000174e-05, 8.579099999999826e-05, 8.563899999999847e-05, 8.541600000000135e-05, 8.486100000000205e-05, 8.495799999999956e-05, 8.52920000000007e-05, 8.53469999999995e-05, 8.495899999999904e-05, 8.576399999999859e-05, 8.522300000000232e-05, 8.547199999999963e-05, 8.51119999999983e-05, 8.491700000000033e-05, 8.504199999999698e-05, 8.492999999999695e-05, 8.547199999999963e-05]</msg>
<status status="PASS" starttime="20201115 23:01:48.579" endtime="20201115 23:01:48.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.575" endtime="20201115 23:01:48.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.584" endtime="20201115 23:01:48.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.587" endtime="20201115 23:01:48.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.586" endtime="20201115 23:01:48.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.582" endtime="20201115 23:01:48.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.216" endtime="20201115 23:01:48.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.214" endtime="20201115 23:01:48.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.213" endtime="20201115 23:01:48.609"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.611" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.620" endtime="20201115 23:01:48.639"></status>
</kw>
<msg timestamp="20201115 23:01:48.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.618" endtime="20201115 23:01:48.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.641" endtime="20201115 23:01:48.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.644" endtime="20201115 23:01:48.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.616" endtime="20201115 23:01:48.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.613" endtime="20201115 23:01:48.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.653" endtime="20201115 23:01:48.938"></status>
</kw>
<msg timestamp="20201115 23:01:48.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025618972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025705653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.651" endtime="20201115 23:01:48.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025618972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025705653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.942" endtime="20201115 23:01:48.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.950" endtime="20201115 23:01:48.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.649" endtime="20201115 23:01:48.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.647" endtime="20201115 23:01:48.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.957" level="INFO">${RESULT} = [{'time': 0.025705653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.668099999999818e-05, 'source_diff': 8.668099999999818e-05}, {'time': 0.025802292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:48.954" endtime="20201115 23:01:48.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.972" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:48.958" endtime="20201115 23:01:48.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.976" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.975" endtime="20201115 23:01:48.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.979" level="INFO">VALUE: [8.668099999999818e-05, 8.652800000000238e-05, 8.609799999999973e-05, 8.661100000000033e-05, 8.654200000000195e-05, 8.601299999999937e-05, 8.654099999999901e-05, 8.676300000000012e-05, 8.613899999999897e-05, 8.583300000000044e-05, 8.654199999999848e-05, 8.609700000000026e-05, 8.670799999999784e-05, 8.61799999999982e-05, 8.668099999999818e-05, 8.681999999999787e-05, 8.593099999999743e-05, 8.623599999999995e-05, 8.597200000000013e-05, 8.668099999999818e-05, 8.659800000000023e-05, 8.590299999999829e-05, 8.645799999999759e-05, 8.583300000000044e-05, 8.686100000000058e-05, 8.63470000000005e-05, 8.5847e-05, 8.588899999999872e-05, 8.587499999999915e-05, 8.602799999999841e-05, 8.645800000000106e-05, 8.590299999999829e-05, 8.651399999999934e-05, 8.66249999999999e-05, 8.636100000000008e-05, 8.59310000000009e-05, 8.634699999999704e-05, 8.658400000000066e-05, 8.608300000000069e-05, 8.61799999999982e-05, 8.590299999999829e-05, 8.638899999999922e-05, 8.616599999999863e-05, 8.606900000000112e-05, 8.626399999999909e-05, 8.673600000000045e-05, 8.616599999999863e-05, 8.666700000000208e-05, 8.61249999999994e-05, 8.63059999999978e-05]</msg>
<status status="PASS" starttime="20201115 23:01:48.978" endtime="20201115 23:01:48.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.973" endtime="20201115 23:01:48.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.983" endtime="20201115 23:01:48.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.986" endtime="20201115 23:01:49.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.984" endtime="20201115 23:01:49.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.981" endtime="20201115 23:01:49.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.612" endtime="20201115 23:01:49.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.610" endtime="20201115 23:01:49.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.609" endtime="20201115 23:01:49.007"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.010" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.018" endtime="20201115 23:01:49.036"></status>
</kw>
<msg timestamp="20201115 23:01:49.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.016" endtime="20201115 23:01:49.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.037" endtime="20201115 23:01:49.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.040" endtime="20201115 23:01:49.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.014" endtime="20201115 23:01:49.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.012" endtime="20201115 23:01:49.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.049" endtime="20201115 23:01:49.336"></status>
</kw>
<msg timestamp="20201115 23:01:49.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024275458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024364, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:49.048" endtime="20201115 23:01:49.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024275458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024364, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:49.340" endtime="20201115 23:01:49.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.349" endtime="20201115 23:01:49.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.045" endtime="20201115 23:01:49.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.043" endtime="20201115 23:01:49.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:49.355" level="INFO">${RESULT} = [{'time': 0.024364, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.854200000000048e-05, 'source_diff': 8.854200000000048e-05}, {'time': 0.024464639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:49.352" endtime="20201115 23:01:49.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:49.369" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:49.356" endtime="20201115 23:01:49.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.373" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:01:49.372" endtime="20201115 23:01:49.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.376" level="INFO">VALUE: [8.854200000000048e-05, 8.74449999999985e-05, 8.713899999999997e-05, 8.7153000000003e-05, 8.76250000000009e-05, 8.734799999999751e-05, 8.772299999999789e-05, 8.726400000000009e-05, 8.773599999999798e-05, 8.772300000000136e-05, 8.754199999999948e-05, 8.765200000000056e-05, 8.784699999999854e-05, 8.761099999999786e-05, 8.708300000000169e-05, 8.683300000000144e-05, 8.722200000000138e-05, 8.754199999999948e-05, 8.705600000000202e-05, 8.741699999999936e-05, 8.686100000000058e-05, 8.758300000000219e-05, 8.751399999999687e-05, 8.754100000000001e-05, 8.687500000000015e-05, 8.708400000000116e-05, 8.738900000000022e-05, 8.765200000000056e-05, 8.701399999999984e-05, 8.745800000000206e-05, 8.73470000000015e-05, 8.733299999999847e-05, 8.713899999999997e-05, 8.754199999999948e-05, 8.709700000000126e-05, 8.69310000000019e-05, 8.725000000000052e-05, 8.690299999999929e-05, 8.691699999999886e-05, 8.708400000000116e-05, 8.775000000000102e-05, 8.69730000000006e-05, 8.704099999999951e-05, 8.719499999999825e-05, 8.711100000000083e-05, 8.715200000000006e-05, 8.770800000000231e-05, 8.688899999999972e-05, 8.691599999999938e-05, 8.701399999999984e-05]</msg>
<status status="PASS" starttime="20201115 23:01:49.374" endtime="20201115 23:01:49.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.370" endtime="20201115 23:01:49.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.380" endtime="20201115 23:01:49.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:49.383" endtime="20201115 23:01:49.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.381" endtime="20201115 23:01:49.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.378" endtime="20201115 23:01:49.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.010" endtime="20201115 23:01:49.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.008" endtime="20201115 23:01:49.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.008" endtime="20201115 23:01:49.404"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.406" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.415" endtime="20201115 23:01:49.433"></status>
</kw>
<msg timestamp="20201115 23:01:49.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.413" endtime="20201115 23:01:49.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.435" endtime="20201115 23:01:49.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.438" endtime="20201115 23:01:49.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.411" endtime="20201115 23:01:49.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.408" endtime="20201115 23:01:49.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.447" endtime="20201115 23:01:49.733"></status>
</kw>
<msg timestamp="20201115 23:01:49.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024171556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.445" endtime="20201115 23:01:49.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024171556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.737" endtime="20201115 23:01:49.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.745" endtime="20201115 23:01:49.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.442" endtime="20201115 23:01:49.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.441" endtime="20201115 23:01:49.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:49.752" level="INFO">${RESULT} = [{'time': 0.024171556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.929200000000123e-05, 'source_diff': 8.929200000000123e-05}, {'time': 0.024273181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:49.749" endtime="20201115 23:01:49.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:49.766" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:49.754" endtime="20201115 23:01:49.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.771" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:01:49.770" endtime="20201115 23:01:49.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.773" level="INFO">VALUE: [8.929200000000123e-05, 8.884800000000248e-05, 8.868100000000018e-05, 8.858400000000266e-05, 8.883399999999944e-05, 8.86670000000006e-05, 8.861099999999886e-05, 8.854100000000101e-05, 8.863900000000147e-05, 8.861099999999886e-05, 8.877800000000116e-05, 8.851400000000134e-05, 8.777800000000016e-05, 8.865300000000104e-05, 8.840300000000079e-05, 8.854200000000048e-05, 8.852800000000091e-05, 8.869499999999975e-05, 8.809799999999826e-05, 8.859799999999876e-05, 8.856900000000015e-05, 8.818099999999968e-05, 8.879100000000126e-05, 8.79860000000017e-05, 8.850000000000177e-05, 8.806900000000312e-05, 8.795799999999909e-05, 8.824999999999805e-05, 8.819399999999977e-05, 8.844400000000002e-05, 8.881999999999987e-05, 8.786099999999811e-05, 8.804199999999998e-05, 8.791699999999986e-05, 8.863900000000147e-05, 8.793099999999943e-05, 8.858399999999919e-05, 8.837500000000165e-05, 8.811099999999836e-05, 8.808399999999869e-05, 8.833299999999947e-05, 8.791599999999691e-05, 8.86519999999981e-05, 8.812499999999793e-05, 8.79860000000017e-05, 8.791600000000038e-05, 8.862499999999843e-05, 8.801399999999737e-05, 8.861100000000233e-05, 8.806999999999912e-05]</msg>
<status status="PASS" starttime="20201115 23:01:49.772" endtime="20201115 23:01:49.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.767" endtime="20201115 23:01:49.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.776" endtime="20201115 23:01:49.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:49.780" endtime="20201115 23:01:49.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.778" endtime="20201115 23:01:49.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.775" endtime="20201115 23:01:49.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.407" endtime="20201115 23:01:49.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.405" endtime="20201115 23:01:49.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.404" endtime="20201115 23:01:49.801"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.803" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.812" endtime="20201115 23:01:49.830"></status>
</kw>
<msg timestamp="20201115 23:01:49.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.810" endtime="20201115 23:01:49.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.831" endtime="20201115 23:01:49.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.834" endtime="20201115 23:01:49.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.807" endtime="20201115 23:01:49.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.805" endtime="20201115 23:01:49.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.843" endtime="20201115 23:01:50.127"></status>
</kw>
<msg timestamp="20201115 23:01:50.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024130847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024221028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.841" endtime="20201115 23:01:50.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024130847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024221028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.131" endtime="20201115 23:01:50.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.140" endtime="20201115 23:01:50.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.839" endtime="20201115 23:01:50.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.837" endtime="20201115 23:01:50.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.146" level="INFO">${RESULT} = [{'time': 0.024221028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.018099999999821e-05, 'source_diff': 9.018099999999821e-05}, {'time': 0.024320653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:50.143" endtime="20201115 23:01:50.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.160" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:50.147" endtime="20201115 23:01:50.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.164" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.163" endtime="20201115 23:01:50.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.167" level="INFO">VALUE: [9.018099999999821e-05, 8.900000000000227e-05, 8.950000000000277e-05, 8.884699999999954e-05, 8.8945e-05, 8.938900000000222e-05, 8.883400000000291e-05, 8.904200000000098e-05, 8.932000000000037e-05, 8.98190000000014e-05, 8.966599999999866e-05, 8.938900000000222e-05, 8.908300000000022e-05, 8.973599999999998e-05, 8.909699999999979e-05, 8.920800000000034e-05, 8.959700000000029e-05, 8.966699999999814e-05, 8.974999999999955e-05, 8.890299999999782e-05, 8.972199999999694e-05, 8.936099999999961e-05, 8.977800000000216e-05, 8.919500000000025e-05, 8.977799999999869e-05, 8.915300000000154e-05, 8.929200000000123e-05, 8.929100000000176e-05, 8.951400000000234e-05, 8.922199999999991e-05, 8.91939999999973e-05, 8.972200000000041e-05, 8.915300000000154e-05, 8.977799999999869e-05, 8.924999999999905e-05, 8.968100000000118e-05, 8.908399999999969e-05, 8.938899999999875e-05, 8.941699999999789e-05, 8.91389999999985e-05, 8.897299999999914e-05, 8.927700000000219e-05, 8.936099999999961e-05, 8.923599999999948e-05, 8.920800000000034e-05, 8.905500000000108e-05, 8.922199999999991e-05, 8.883299999999997e-05, 8.977800000000216e-05, 8.934700000000004e-05]</msg>
<status status="PASS" starttime="20201115 23:01:50.166" endtime="20201115 23:01:50.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.161" endtime="20201115 23:01:50.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.170" endtime="20201115 23:01:50.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.173" endtime="20201115 23:01:50.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.172" endtime="20201115 23:01:50.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.168" endtime="20201115 23:01:50.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.804" endtime="20201115 23:01:50.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.802" endtime="20201115 23:01:50.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.801" endtime="20201115 23:01:50.195"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.197" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.205" endtime="20201115 23:01:50.225"></status>
</kw>
<msg timestamp="20201115 23:01:50.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.204" endtime="20201115 23:01:50.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.226" endtime="20201115 23:01:50.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.229" endtime="20201115 23:01:50.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.201" endtime="20201115 23:01:50.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.199" endtime="20201115 23:01:50.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.238" endtime="20201115 23:01:50.525"></status>
</kw>
<msg timestamp="20201115 23:01:50.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024919792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025010486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.236" endtime="20201115 23:01:50.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024919792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025010486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.529" endtime="20201115 23:01:50.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.537" endtime="20201115 23:01:50.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.234" endtime="20201115 23:01:50.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.232" endtime="20201115 23:01:50.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.544" level="INFO">${RESULT} = [{'time': 0.025010486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.06939999999988e-05, 'source_diff': 9.06939999999988e-05}, {'time': 0.025108111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:50.541" endtime="20201115 23:01:50.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.559" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:50.545" endtime="20201115 23:01:50.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.563" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.562" endtime="20201115 23:01:50.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.566" level="INFO">VALUE: [9.06939999999988e-05, 9.017999999999873e-05, 9.0639e-05, 9.001399999999937e-05, 9.041700000000236e-05, 9.068099999999871e-05, 9.054200000000248e-05, 9.083400000000144e-05, 9.061100000000086e-05, 9.044499999999803e-05, 9.022299999999692e-05, 9.08199999999984e-05, 8.990199999999934e-05, 9.058299999999825e-05, 8.998600000000023e-05, 9.052800000000291e-05, 8.988899999999925e-05, 9.031899999999843e-05, 9.016699999999864e-05, 9.011099999999689e-05, 9.023600000000048e-05, 9.008399999999722e-05, 9.077799999999969e-05, 9.032000000000137e-05, 9.054199999999901e-05, 9.033400000000094e-05, 9.065300000000304e-05, 8.984800000000001e-05, 9.063800000000052e-05, 9.08190000000024e-05, 9.01519999999996e-05, 9.01939999999983e-05, 9.040299999999932e-05, 8.988899999999925e-05, 9.027799999999919e-05, 9.025000000000005e-05, 8.986100000000011e-05, 9.022200000000091e-05, 9.004200000000198e-05, 9.036100000000061e-05, 9.05000000000003e-05, 9.076400000000012e-05, 9.056999999999815e-05, 9.076400000000012e-05, 9.026300000000015e-05, 9.0639e-05, 9.022200000000091e-05, 9.038800000000027e-05, 9.061100000000086e-05, 9.077799999999969e-05]</msg>
<status status="PASS" starttime="20201115 23:01:50.564" endtime="20201115 23:01:50.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.560" endtime="20201115 23:01:50.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.569" endtime="20201115 23:01:50.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.572" endtime="20201115 23:01:50.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.571" endtime="20201115 23:01:50.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.567" endtime="20201115 23:01:50.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.198" endtime="20201115 23:01:50.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.196" endtime="20201115 23:01:50.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.195" endtime="20201115 23:01:50.593"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.596" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.604" endtime="20201115 23:01:50.623"></status>
</kw>
<msg timestamp="20201115 23:01:50.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.602" endtime="20201115 23:01:50.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.624" endtime="20201115 23:01:50.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.627" endtime="20201115 23:01:50.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.600" endtime="20201115 23:01:50.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.598" endtime="20201115 23:01:50.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.636" endtime="20201115 23:01:50.922"></status>
</kw>
<msg timestamp="20201115 23:01:50.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024295972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0243885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:50.635" endtime="20201115 23:01:50.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024295972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0243885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:50.927" endtime="20201115 23:01:50.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.935" endtime="20201115 23:01:50.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.632" endtime="20201115 23:01:50.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.630" endtime="20201115 23:01:50.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.942" level="INFO">${RESULT} = [{'time': 0.0243885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.252800000000144e-05, 'source_diff': 9.252800000000144e-05}, {'time': 0.024486111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:50.938" endtime="20201115 23:01:50.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.955" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:50.943" endtime="20201115 23:01:50.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.960" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.959" endtime="20201115 23:01:50.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.962" level="INFO">VALUE: [9.252800000000144e-05, 9.141699999999989e-05, 9.177800000000069e-05, 9.109700000000179e-05, 9.129199999999976e-05, 9.14719999999987e-05, 9.087500000000068e-05, 9.113899999999703e-05, 9.177800000000069e-05, 9.165300000000057e-05, 9.138899999999728e-05, 9.16659999999972e-05, 9.134700000000204e-05, 9.134699999999857e-05, 9.093000000000295e-05, 9.098600000000123e-05, 9.148599999999826e-05, 9.141699999999989e-05, 9.083300000000197e-05, 9.174999999999808e-05, 9.18329999999995e-05, 9.119499999999878e-05, 9.148600000000173e-05, 9.083399999999797e-05, 9.172299999999842e-05, 9.11390000000005e-05, 9.177800000000069e-05, 9.134799999999804e-05, 9.097200000000166e-05, 9.151400000000087e-05, 9.148599999999826e-05, 9.13190000000029e-05, 9.105600000000255e-05, 9.094399999999905e-05, 9.162500000000143e-05, 9.156899999999968e-05, 9.122199999999844e-05, 9.111099999999789e-05, 9.087500000000068e-05, 9.174999999999808e-05, 9.141699999999989e-05, 9.101400000000037e-05, 9.177800000000069e-05, 9.104100000000004e-05, 9.105499999999961e-05, 9.18329999999995e-05, 9.16520000000011e-05, 9.136099999999814e-05, 9.11520000000006e-05, 9.161099999999839e-05]</msg>
<status status="PASS" starttime="20201115 23:01:50.961" endtime="20201115 23:01:50.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.956" endtime="20201115 23:01:50.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.966" endtime="20201115 23:01:50.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.969" endtime="20201115 23:01:50.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.967" endtime="20201115 23:01:50.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.964" endtime="20201115 23:01:50.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.596" endtime="20201115 23:01:50.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.594" endtime="20201115 23:01:50.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.594" endtime="20201115 23:01:50.990"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.992" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.001" endtime="20201115 23:01:51.020"></status>
</kw>
<msg timestamp="20201115 23:01:51.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.000" endtime="20201115 23:01:51.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.022" endtime="20201115 23:01:51.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.024" endtime="20201115 23:01:51.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.996" endtime="20201115 23:01:51.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.994" endtime="20201115 23:01:51.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.033" endtime="20201115 23:01:51.320"></status>
</kw>
<msg timestamp="20201115 23:01:51.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024627486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.032" endtime="20201115 23:01:51.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024627486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.324" endtime="20201115 23:01:51.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.333" endtime="20201115 23:01:51.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.029" endtime="20201115 23:01:51.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.028" endtime="20201115 23:01:51.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:51.340" level="INFO">${RESULT} = [{'time': 0.024720597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.311099999999989e-05, 'source_diff': 9.311099999999989e-05}, {'time': 0.024821222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:51.336" endtime="20201115 23:01:51.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.353" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:51.341" endtime="20201115 23:01:51.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.358" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.357" endtime="20201115 23:01:51.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.360" level="INFO">VALUE: [9.311099999999989e-05, 9.198599999999876e-05, 9.224999999999858e-05, 9.191700000000039e-05, 9.252799999999797e-05, 9.261099999999939e-05, 9.241700000000089e-05, 9.279199999999779e-05, 9.263899999999853e-05, 9.215300000000107e-05, 9.243100000000046e-05, 9.262500000000243e-05, 9.277799999999822e-05, 9.201299999999843e-05, 9.279100000000179e-05, 9.276399999999865e-05, 9.240299999999785e-05, 9.188900000000125e-05, 9.234799999999904e-05, 9.231900000000043e-05, 9.243100000000046e-05, 9.273600000000298e-05, 9.261100000000286e-05, 9.2333e-05, 9.251400000000187e-05, 9.219499999999978e-05, 9.199999999999833e-05, 9.197300000000214e-05, 9.187500000000168e-05, 9.273700000000246e-05, 9.268000000000123e-05, 9.276400000000212e-05, 9.199999999999833e-05, 9.243000000000098e-05, 9.280500000000136e-05, 9.258300000000025e-05, 9.198600000000223e-05, 9.275000000000255e-05, 9.20000000000018e-05, 9.188899999999778e-05, 9.2333e-05, 9.261099999999939e-05, 9.280600000000083e-05, 9.233399999999947e-05, 9.204100000000104e-05, 9.204200000000051e-05, 9.184699999999907e-05, 9.249999999999883e-05, 9.265199999999862e-05, 9.220799999999987e-05]</msg>
<status status="PASS" starttime="20201115 23:01:51.359" endtime="20201115 23:01:51.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.354" endtime="20201115 23:01:51.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.363" endtime="20201115 23:01:51.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.367" endtime="20201115 23:01:51.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.365" endtime="20201115 23:01:51.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.362" endtime="20201115 23:01:51.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.993" endtime="20201115 23:01:51.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.991" endtime="20201115 23:01:51.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.990" endtime="20201115 23:01:51.388"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.391" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.399" endtime="20201115 23:01:51.418"></status>
</kw>
<msg timestamp="20201115 23:01:51.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.397" endtime="20201115 23:01:51.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.419" endtime="20201115 23:01:51.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.422" endtime="20201115 23:01:51.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.395" endtime="20201115 23:01:51.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.393" endtime="20201115 23:01:51.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.431" endtime="20201115 23:01:51.717"></status>
</kw>
<msg timestamp="20201115 23:01:51.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024421264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024515028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.429" endtime="20201115 23:01:51.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024421264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024515028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.721" endtime="20201115 23:01:51.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.729" endtime="20201115 23:01:51.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.427" endtime="20201115 23:01:51.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.425" endtime="20201115 23:01:51.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:51.736" level="INFO">${RESULT} = [{'time': 0.024515028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.376399999999965e-05, 'source_diff': 9.376399999999965e-05}, {'time': 0.024617653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:51.733" endtime="20201115 23:01:51.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.749" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:51.737" endtime="20201115 23:01:51.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.754" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.753" endtime="20201115 23:01:51.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.756" level="INFO">VALUE: [9.376399999999965e-05, 9.307000000000065e-05, 9.323600000000001e-05, 9.376399999999965e-05, 9.340299999999885e-05, 9.366600000000266e-05, 9.322299999999992e-05, 9.311099999999989e-05, 9.34720000000007e-05, 9.356900000000168e-05, 9.294400000000105e-05, 9.380500000000236e-05, 9.306900000000118e-05, 9.283299999999703e-05, 9.337499999999971e-05, 9.308299999999728e-05, 9.294500000000053e-05, 9.325000000000305e-05, 9.323600000000001e-05, 9.368000000000223e-05, 9.301400000000237e-05, 9.376399999999965e-05, 9.377800000000269e-05, 9.3639000000003e-05, 9.381899999999846e-05, 9.35269999999995e-05, 9.365300000000257e-05, 9.327799999999872e-05, 9.319399999999783e-05, 9.316699999999817e-05, 9.376399999999965e-05, 9.366700000000214e-05, 9.34720000000007e-05, 9.373600000000051e-05, 9.320800000000087e-05, 9.33879999999998e-05, 9.290300000000182e-05, 9.344500000000103e-05, 9.349999999999983e-05, 9.377799999999922e-05, 9.295800000000062e-05, 9.355500000000211e-05, 9.377699999999975e-05, 9.381900000000193e-05, 9.299999999999933e-05, 9.355500000000211e-05, 9.324999999999958e-05, 9.288900000000225e-05, 9.331999999999743e-05, 9.333299999999753e-05]</msg>
<status status="PASS" starttime="20201115 23:01:51.755" endtime="20201115 23:01:51.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.750" endtime="20201115 23:01:51.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.760" endtime="20201115 23:01:51.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.764" endtime="20201115 23:01:51.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.762" endtime="20201115 23:01:51.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.758" endtime="20201115 23:01:51.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.391" endtime="20201115 23:01:51.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.390" endtime="20201115 23:01:51.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.389" endtime="20201115 23:01:51.785"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.787" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.795" endtime="20201115 23:01:51.814"></status>
</kw>
<msg timestamp="20201115 23:01:51.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.794" endtime="20201115 23:01:51.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.816" endtime="20201115 23:01:51.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.818" endtime="20201115 23:01:51.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.791" endtime="20201115 23:01:51.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.789" endtime="20201115 23:01:51.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.827" endtime="20201115 23:01:52.113"></status>
</kw>
<msg timestamp="20201115 23:01:52.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024942042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.826" endtime="20201115 23:01:52.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024942042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.117" endtime="20201115 23:01:52.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.125" endtime="20201115 23:01:52.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.823" endtime="20201115 23:01:52.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.822" endtime="20201115 23:01:52.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.132" level="INFO">${RESULT} = [{'time': 0.025037083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.504100000000057e-05, 'source_diff': 9.504100000000057e-05}, {'time': 0.025140736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:52.129" endtime="20201115 23:01:52.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:52.147" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:52.133" endtime="20201115 23:01:52.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.152" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:52.150" endtime="20201115 23:01:52.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.154" level="INFO">VALUE: [9.504100000000057e-05, 9.462500000000096e-05, 9.408299999999828e-05, 9.430499999999939e-05, 9.393099999999849e-05, 9.390300000000282e-05, 9.456899999999921e-05, 9.475000000000108e-05, 9.424999999999711e-05, 9.419500000000178e-05, 9.429200000000276e-05, 9.46940000000028e-05, 9.402799999999947e-05, 9.438900000000028e-05, 9.412500000000046e-05, 9.47079999999989e-05, 9.434700000000157e-05, 9.398600000000076e-05, 9.445799999999865e-05, 9.45140000000004e-05, 9.430499999999939e-05, 9.436100000000114e-05, 9.409699999999785e-05, 9.426400000000015e-05, 9.433400000000147e-05, 9.468099999999924e-05, 9.451399999999693e-05, 9.452799999999997e-05, 9.456999999999868e-05, 9.391699999999892e-05, 9.40139999999999e-05, 9.477699999999728e-05, 9.454100000000007e-05, 9.391599999999944e-05, 9.44859999999978e-05, 9.417999999999926e-05, 9.405500000000261e-05, 9.46660000000002e-05, 9.452799999999997e-05, 9.426400000000015e-05, 9.438900000000028e-05, 9.426400000000015e-05, 9.458299999999878e-05, 9.430600000000233e-05, 9.469500000000228e-05, 9.430499999999939e-05, 9.42079999999984e-05, 9.384800000000054e-05, 9.405500000000261e-05, 9.39720000000012e-05]</msg>
<status status="PASS" starttime="20201115 23:01:52.153" endtime="20201115 23:01:52.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.148" endtime="20201115 23:01:52.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.158" endtime="20201115 23:01:52.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.161" endtime="20201115 23:01:52.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.160" endtime="20201115 23:01:52.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.156" endtime="20201115 23:01:52.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.788" endtime="20201115 23:01:52.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.786" endtime="20201115 23:01:52.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.785" endtime="20201115 23:01:52.182"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.185" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.193" endtime="20201115 23:01:52.212"></status>
</kw>
<msg timestamp="20201115 23:01:52.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.191" endtime="20201115 23:01:52.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.213" endtime="20201115 23:01:52.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.216" endtime="20201115 23:01:52.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.189" endtime="20201115 23:01:52.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.187" endtime="20201115 23:01:52.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.225" endtime="20201115 23:01:52.509"></status>
</kw>
<msg timestamp="20201115 23:01:52.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024032986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024128681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.223" endtime="20201115 23:01:52.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024032986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024128681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.513" endtime="20201115 23:01:52.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.522" endtime="20201115 23:01:52.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.221" endtime="20201115 23:01:52.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.219" endtime="20201115 23:01:52.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.528" level="INFO">${RESULT} = [{'time': 0.024128681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.569499999999981e-05, 'source_diff': 9.569499999999981e-05}, {'time': 0.024234319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:52.525" endtime="20201115 23:01:52.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:52.542" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:52.530" endtime="20201115 23:01:52.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.547" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:52.546" endtime="20201115 23:01:52.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.549" level="INFO">VALUE: [9.569499999999981e-05, 9.513800000000155e-05, 9.501399999999743e-05, 9.49019999999974e-05, 9.508300000000275e-05, 9.530599999999986e-05, 9.487499999999774e-05, 9.531899999999996e-05, 9.57079999999999e-05, 9.577799999999775e-05, 9.53469999999991e-05, 9.493099999999949e-05, 9.522200000000244e-05, 9.558299999999978e-05, 9.516700000000017e-05, 9.563899999999806e-05, 9.518000000000026e-05, 9.534800000000204e-05, 9.495799999999915e-05, 9.508299999999928e-05, 9.48880000000013e-05, 9.56660000000012e-05, 9.527699999999778e-05, 9.49859999999983e-05, 9.581900000000046e-05, 9.500000000000133e-05, 9.537500000000171e-05, 9.548600000000226e-05, 9.572199999999947e-05, 9.505599999999961e-05, 9.522199999999897e-05, 9.580600000000036e-05, 9.5333000000003e-05, 9.574999999999861e-05, 9.516700000000017e-05, 9.566700000000067e-05, 9.540200000000137e-05, 9.487500000000121e-05, 9.500000000000133e-05, 9.518000000000026e-05, 9.526400000000115e-05, 9.555600000000011e-05, 9.511099999999842e-05, 9.529200000000029e-05, 9.569499999999981e-05, 9.543099999999999e-05, 9.530599999999986e-05, 9.550000000000183e-05, 9.526400000000115e-05, 9.487499999999774e-05]</msg>
<status status="PASS" starttime="20201115 23:01:52.548" endtime="20201115 23:01:52.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.543" endtime="20201115 23:01:52.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.553" endtime="20201115 23:01:52.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.556" endtime="20201115 23:01:52.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.554" endtime="20201115 23:01:52.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.551" endtime="20201115 23:01:52.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.185" endtime="20201115 23:01:52.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.183" endtime="20201115 23:01:52.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.183" endtime="20201115 23:01:52.577"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.580" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.588" endtime="20201115 23:01:52.607"></status>
</kw>
<msg timestamp="20201115 23:01:52.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.586" endtime="20201115 23:01:52.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.608" endtime="20201115 23:01:52.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.611" endtime="20201115 23:01:52.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.584" endtime="20201115 23:01:52.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.581" endtime="20201115 23:01:52.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.620" endtime="20201115 23:01:52.905"></status>
</kw>
<msg timestamp="20201115 23:01:52.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024199014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024295847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.618" endtime="20201115 23:01:52.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024199014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024295847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.909" endtime="20201115 23:01:52.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.921" endtime="20201115 23:01:52.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.616" endtime="20201115 23:01:52.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.614" endtime="20201115 23:01:52.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.928" level="INFO">${RESULT} = [{'time': 0.024295847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.683299999999756e-05, 'source_diff': 9.683299999999756e-05}, {'time': 0.024404444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:52.925" endtime="20201115 23:01:52.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:52.942" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:52.929" endtime="20201115 23:01:52.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.946" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:52.945" endtime="20201115 23:01:52.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.949" level="INFO">VALUE: [9.683299999999756e-05, 9.580500000000089e-05, 9.659700000000035e-05, 9.63470000000001e-05, 9.612499999999899e-05, 9.637499999999924e-05, 9.588899999999831e-05, 9.638899999999881e-05, 9.622199999999997e-05, 9.633300000000053e-05, 9.625000000000258e-05, 9.63470000000001e-05, 9.632000000000043e-05, 9.594500000000006e-05, 9.68059999999979e-05, 9.64859999999998e-05, 9.602699999999853e-05, 9.623599999999954e-05, 9.651399999999893e-05, 9.655499999999817e-05, 9.669400000000133e-05, 9.627799999999825e-05, 9.67080000000009e-05, 9.590300000000135e-05, 9.605600000000061e-05, 9.624999999999911e-05, 9.638899999999881e-05, 9.611099999999942e-05, 9.608399999999975e-05, 9.584799999999907e-05, 9.674999999999961e-05, 9.593100000000049e-05, 9.594400000000058e-05, 9.67080000000009e-05, 9.595799999999668e-05, 9.670799999999743e-05, 9.673600000000004e-05, 9.586099999999917e-05, 9.599999999999886e-05, 9.605500000000114e-05, 9.629199999999782e-05, 9.673600000000004e-05, 9.593000000000101e-05, 9.637499999999924e-05, 9.622299999999945e-05, 9.677799999999875e-05, 9.612500000000246e-05, 9.622199999999997e-05, 9.662499999999949e-05, 9.676299999999971e-05]</msg>
<status status="PASS" starttime="20201115 23:01:52.947" endtime="20201115 23:01:52.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.943" endtime="20201115 23:01:52.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.952" endtime="20201115 23:01:52.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.955" endtime="20201115 23:01:52.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.954" endtime="20201115 23:01:52.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.950" endtime="20201115 23:01:52.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.580" endtime="20201115 23:01:52.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.578" endtime="20201115 23:01:52.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.577" endtime="20201115 23:01:52.976"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.979" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.987" endtime="20201115 23:01:53.007"></status>
</kw>
<msg timestamp="20201115 23:01:53.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.986" endtime="20201115 23:01:53.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.008" endtime="20201115 23:01:53.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.011" endtime="20201115 23:01:53.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.983" endtime="20201115 23:01:53.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.981" endtime="20201115 23:01:53.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.020" endtime="20201115 23:01:53.306"></status>
</kw>
<msg timestamp="20201115 23:01:53.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024270569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024368319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.018" endtime="20201115 23:01:53.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024270569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024368319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.310" endtime="20201115 23:01:53.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.319" endtime="20201115 23:01:53.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.016" endtime="20201115 23:01:53.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.014" endtime="20201115 23:01:53.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:53.325" level="INFO">${RESULT} = [{'time': 0.024368319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.775000000000061e-05, 'source_diff': 9.775000000000061e-05}, {'time': 0.024474958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:53.322" endtime="20201115 23:01:53.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:53.339" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:53.326" endtime="20201115 23:01:53.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.344" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:53.343" endtime="20201115 23:01:53.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.347" level="INFO">VALUE: [9.775000000000061e-05, 9.769400000000233e-05, 9.7027999999999e-05, 9.741599999999948e-05, 9.697200000000072e-05, 9.736100000000067e-05, 9.72080000000014e-05, 9.756999999999821e-05, 9.733300000000153e-05, 9.761099999999745e-05, 9.776400000000018e-05, 9.708400000000075e-05, 9.761100000000092e-05, 9.738899999999981e-05, 9.772300000000095e-05, 9.684800000000007e-05, 9.697200000000072e-05, 9.776300000000071e-05, 9.699999999999986e-05, 9.694400000000158e-05, 9.686100000000017e-05, 9.75279999999995e-05, 9.726399999999968e-05, 9.743100000000199e-05, 9.761100000000092e-05, 9.687499999999974e-05, 9.7027999999999e-05, 9.77920000000028e-05, 9.723599999999707e-05, 9.720900000000088e-05, 9.751300000000046e-05, 9.725000000000011e-05, 9.762499999999702e-05, 9.694400000000158e-05, 9.747200000000122e-05, 9.705499999999867e-05, 9.77920000000028e-05, 9.755499999999917e-05, 9.690299999999888e-05, 9.758300000000178e-05, 9.777799999999975e-05, 9.71669999999987e-05, 9.763900000000006e-05, 9.763900000000006e-05, 9.720899999999741e-05, 9.731899999999849e-05, 9.754199999999907e-05, 9.701299999999996e-05, 9.754199999999907e-05, 9.706900000000171e-05]</msg>
<status status="PASS" starttime="20201115 23:01:53.345" endtime="20201115 23:01:53.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.340" endtime="20201115 23:01:53.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.350" endtime="20201115 23:01:53.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.354" endtime="20201115 23:01:53.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.352" endtime="20201115 23:01:53.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.349" endtime="20201115 23:01:53.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.980" endtime="20201115 23:01:53.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.978" endtime="20201115 23:01:53.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.977" endtime="20201115 23:01:53.375"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.377" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.385" endtime="20201115 23:01:53.406"></status>
</kw>
<msg timestamp="20201115 23:01:53.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.384" endtime="20201115 23:01:53.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.407" endtime="20201115 23:01:53.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.410" endtime="20201115 23:01:53.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.381" endtime="20201115 23:01:53.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.379" endtime="20201115 23:01:53.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.419" endtime="20201115 23:01:53.705"></status>
</kw>
<msg timestamp="20201115 23:01:53.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025081458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025180597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.418" endtime="20201115 23:01:53.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025081458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025180597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.709" endtime="20201115 23:01:53.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.717" endtime="20201115 23:01:53.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.415" endtime="20201115 23:01:53.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.413" endtime="20201115 23:01:53.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:53.724" level="INFO">${RESULT} = [{'time': 0.025180597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.913899999999809e-05, 'source_diff': 9.913899999999809e-05}, {'time': 0.025290222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:53.721" endtime="20201115 23:01:53.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:53.738" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:53.725" endtime="20201115 23:01:53.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.743" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:01:53.742" endtime="20201115 23:01:53.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.745" level="INFO">VALUE: [9.913899999999809e-05, 9.8028e-05, 9.881899999999999e-05, 9.83470000000021e-05, 9.829199999999982e-05, 9.811100000000142e-05, 9.8721999999999e-05, 9.794500000000206e-05, 9.829199999999982e-05, 9.82219999999985e-05, 9.820899999999841e-05, 9.790299999999988e-05, 9.8334000000002e-05, 9.825000000000111e-05, 9.838900000000081e-05, 9.861099999999845e-05, 9.86800000000003e-05, 9.783300000000203e-05, 9.845799999999919e-05, 9.81669999999997e-05, 9.8028e-05, 9.793099999999902e-05, 9.843100000000299e-05, 9.881999999999946e-05, 9.812499999999752e-05, 9.862499999999802e-05, 9.863899999999759e-05, 9.80410000000001e-05, 9.811100000000142e-05, 9.851300000000146e-05, 9.85410000000006e-05, 9.883299999999956e-05, 9.843000000000005e-05, 9.811100000000142e-05, 9.86800000000003e-05, 9.805500000000314e-05, 9.827800000000025e-05, 9.859699999999888e-05, 9.843000000000005e-05, 9.8028e-05, 9.843099999999952e-05, 9.868100000000324e-05, 9.869499999999934e-05, 9.823600000000154e-05, 9.868099999999977e-05, 9.877699999999781e-05, 9.876400000000118e-05, 9.788900000000031e-05, 9.80410000000001e-05, 9.815300000000013e-05]</msg>
<status status="PASS" starttime="20201115 23:01:53.744" endtime="20201115 23:01:53.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.739" endtime="20201115 23:01:53.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.749" endtime="20201115 23:01:53.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.752" endtime="20201115 23:01:53.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.751" endtime="20201115 23:01:53.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.747" endtime="20201115 23:01:53.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.378" endtime="20201115 23:01:53.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.376" endtime="20201115 23:01:53.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.375" endtime="20201115 23:01:53.773"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.775" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.784" endtime="20201115 23:01:53.804"></status>
</kw>
<msg timestamp="20201115 23:01:53.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.783" endtime="20201115 23:01:53.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.805" endtime="20201115 23:01:53.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.808" endtime="20201115 23:01:53.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.780" endtime="20201115 23:01:53.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.778" endtime="20201115 23:01:53.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.817" endtime="20201115 23:01:54.102"></status>
</kw>
<msg timestamp="20201115 23:01:54.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024512417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024612708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.815" endtime="20201115 23:01:54.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024512417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024612708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.106" endtime="20201115 23:01:54.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.114" endtime="20201115 23:01:54.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.813" endtime="20201115 23:01:54.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.811" endtime="20201115 23:01:54.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.121" level="INFO">${RESULT} = [{'time': 0.024612708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010029099999999888, 'source_diff': 0.00010029099999999888}, {'time': 0.024717319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:54.118" endtime="20201115 23:01:54.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.134" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:54.122" endtime="20201115 23:01:54.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.139" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.138" endtime="20201115 23:01:54.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.141" level="INFO">VALUE: [0.00010029099999999888, 9.906900000000024e-05, 9.904200000000057e-05, 9.966600000000173e-05, 9.895799999999969e-05, 9.941600000000148e-05, 9.941700000000095e-05, 9.920799999999994e-05, 9.966699999999773e-05, 9.979199999999785e-05, 9.897199999999926e-05, 9.938899999999834e-05, 9.930500000000092e-05, 9.9028000000001e-05, 9.954200000000107e-05, 9.9415999999998e-05, 9.937499999999877e-05, 9.919400000000037e-05, 9.944400000000062e-05, 9.966600000000173e-05, 9.959699999999988e-05, 9.884699999999913e-05, 9.983300000000056e-05, 9.945800000000019e-05, 9.9028000000001e-05, 9.884699999999913e-05, 9.961100000000292e-05, 9.887499999999827e-05, 9.905600000000014e-05, 9.947299999999923e-05, 9.952799999999803e-05, 9.944400000000062e-05, 9.927699999999831e-05, 9.924999999999864e-05, 9.927700000000178e-05, 9.929100000000135e-05, 9.911100000000242e-05, 9.908299999999981e-05, 9.895799999999969e-05, 9.884699999999913e-05, 9.92219999999995e-05, 9.956900000000074e-05, 9.965300000000163e-05, 9.905500000000067e-05, 9.91670000000007e-05, 9.929200000000082e-05, 9.947299999999923e-05, 9.983300000000056e-05, 9.904099999999763e-05, 9.88609999999987e-05]</msg>
<status status="PASS" starttime="20201115 23:01:54.140" endtime="20201115 23:01:54.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.135" endtime="20201115 23:01:54.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.144" endtime="20201115 23:01:54.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.148" endtime="20201115 23:01:54.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.146" endtime="20201115 23:01:54.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.143" endtime="20201115 23:01:54.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.776" endtime="20201115 23:01:54.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.774" endtime="20201115 23:01:54.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.773" endtime="20201115 23:01:54.170"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.172" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.181" endtime="20201115 23:01:54.199"></status>
</kw>
<msg timestamp="20201115 23:01:54.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.179" endtime="20201115 23:01:54.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.201" endtime="20201115 23:01:54.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.203" endtime="20201115 23:01:54.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.176" endtime="20201115 23:01:54.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.174" endtime="20201115 23:01:54.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.213" endtime="20201115 23:01:54.498"></status>
</kw>
<msg timestamp="20201115 23:01:54.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024736208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024837639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.211" endtime="20201115 23:01:54.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024736208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024837639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.503" endtime="20201115 23:01:54.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.511" endtime="20201115 23:01:54.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.208" endtime="20201115 23:01:54.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.207" endtime="20201115 23:01:54.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.517" level="INFO">${RESULT} = [{'time': 0.024837639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010143100000000252, 'source_diff': 0.00010143100000000252}, {'time': 0.024950236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:54.514" endtime="20201115 23:01:54.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.531" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:54.518" endtime="20201115 23:01:54.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.535" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.534" endtime="20201115 23:01:54.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.538" level="INFO">VALUE: [0.00010143100000000252, 0.00010061100000000045, 0.00010067999999999883, 0.00010063899999999959, 0.00010002799999999853, 0.00010006999999999724, 0.0001005419999999986, 0.0001002220000000005, 0.00010079199999999885, 0.00010033399999999706, 0.0001003480000000001, 9.997299999999973e-05, 0.00010029199999999835, 0.00010024999999999964, 9.980499999999795e-05, 0.00010017999999999833, 9.98609999999997e-05, 0.00010023600000000008, 0.0001001800000000018, 0.00010027799999999878, 0.00010047300000000023, 0.00010066699999999873, 0.00010024999999999964, 9.990300000000188e-05, 9.994500000000059e-05, 0.0001001670000000017, 0.00010077799999999928, 0.0001004999999999999, 0.00010015300000000213, 0.00010061100000000045, 0.00010002699999999906, 0.00010051399999999946, 0.00010063899999999959, 0.00010075000000000014, 0.00010076399999999971, 9.997200000000026e-05, 0.00010006900000000124, 0.00010041699999999848, 0.00010073600000000058, 9.99999999999994e-05, 0.00010015299999999866, 0.00010061100000000045, 9.990299999999841e-05, 0.00010016600000000223, 0.00010052700000000303, 0.00010059699999999741, 0.00010080599999999842, 0.00010023600000000008, 0.00010001399999999896, 9.988900000000231e-05]</msg>
<status status="PASS" starttime="20201115 23:01:54.536" endtime="20201115 23:01:54.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.532" endtime="20201115 23:01:54.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.541" endtime="20201115 23:01:54.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.545" endtime="20201115 23:01:54.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.543" endtime="20201115 23:01:54.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.540" endtime="20201115 23:01:54.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.173" endtime="20201115 23:01:54.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.171" endtime="20201115 23:01:54.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.170" endtime="20201115 23:01:54.566"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.568" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.576" endtime="20201115 23:01:54.595"></status>
</kw>
<msg timestamp="20201115 23:01:54.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.575" endtime="20201115 23:01:54.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.597" endtime="20201115 23:01:54.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.600" endtime="20201115 23:01:54.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.572" endtime="20201115 23:01:54.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.570" endtime="20201115 23:01:54.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.609" endtime="20201115 23:01:54.895"></status>
</kw>
<msg timestamp="20201115 23:01:54.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024026778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.607" endtime="20201115 23:01:54.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024026778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.899" endtime="20201115 23:01:54.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.907" endtime="20201115 23:01:54.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.605" endtime="20201115 23:01:54.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.603" endtime="20201115 23:01:54.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.913" level="INFO">${RESULT} = [{'time': 0.024129306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010252800000000103, 'source_diff': 0.00010252800000000103}, {'time': 0.024243917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:54.910" endtime="20201115 23:01:54.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.926" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:54.914" endtime="20201115 23:01:54.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.931" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.930" endtime="20201115 23:01:54.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.934" level="INFO">VALUE: [0.00010252800000000103, 0.0001016809999999993, 0.00010165300000000016, 0.00010084700000000113, 0.0001009159999999995, 0.00010130599999999892, 0.00010087500000000027, 0.00010102799999999953, 0.00010170799999999897, 0.0001016939999999994, 0.00010165300000000016, 0.00010095799999999822, 0.00010120800000000194, 0.00010095900000000116, 0.00010101399999999996, 0.000101722000000002, 0.00010166699999999973, 0.00010106999999999824, 0.00010154100000000013, 0.00010116599999999976, 0.00010186099999999823, 0.0001012359999999976, 0.0001013749999999973, 0.00010108300000000181, 0.00010129199999999935, 0.0001010419999999991, 0.00010145799999999872, 0.00010176400000000071, 0.00010155599999999917, 0.00010090299999999941, 0.00010126400000000021, 0.00010132000000000196, 0.0001008480000000006, 0.00010172199999999854, 0.0001010549999999992, 0.00010134700000000163, 0.000101416, 0.00010102799999999953, 0.00010111100000000095, 0.00010123600000000108, 0.00010163900000000059, 0.00010080599999999842, 0.00010098600000000083, 0.0001012359999999976, 0.0001015419999999996, 0.00010148600000000133, 0.00010083399999999756, 0.00010138899999999687, 0.0001011809999999988, 0.00010116599999999976]</msg>
<status status="PASS" starttime="20201115 23:01:54.932" endtime="20201115 23:01:54.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.927" endtime="20201115 23:01:54.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.937" endtime="20201115 23:01:54.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.941" endtime="20201115 23:01:54.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.939" endtime="20201115 23:01:54.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.935" endtime="20201115 23:01:54.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.569" endtime="20201115 23:01:54.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.567" endtime="20201115 23:01:54.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.566" endtime="20201115 23:01:54.962"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.964" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.972" endtime="20201115 23:01:54.993"></status>
</kw>
<msg timestamp="20201115 23:01:54.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.971" endtime="20201115 23:01:54.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.994" endtime="20201115 23:01:54.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.997" endtime="20201115 23:01:54.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.968" endtime="20201115 23:01:54.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.966" endtime="20201115 23:01:55.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.006" endtime="20201115 23:01:55.292"></status>
</kw>
<msg timestamp="20201115 23:01:55.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024958486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025061917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.005" endtime="20201115 23:01:55.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024958486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025061917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.296" endtime="20201115 23:01:55.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.304" endtime="20201115 23:01:55.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.002" endtime="20201115 23:01:55.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.000" endtime="20201115 23:01:55.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.311" level="INFO">${RESULT} = [{'time': 0.025061917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010343100000000105, 'source_diff': 0.00010343100000000105}, {'time': 0.025176556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:55.308" endtime="20201115 23:01:55.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.326" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:55.312" endtime="20201115 23:01:55.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.330" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.329" endtime="20201115 23:01:55.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.333" level="INFO">VALUE: [0.00010343100000000105, 0.000102513999999998, 0.00010274999999999868, 0.00010229100000000088, 0.00010208299999999934, 0.00010281900000000052, 0.00010202700000000106, 0.0001018749999999978, 0.00010241700000000048, 0.00010226399999999775, 0.00010224999999999818, 0.0001027359999999991, 0.00010249999999999843, 0.00010262499999999855, 0.0001026810000000003, 0.00010259700000000288, 0.00010201400000000097, 0.00010216700000000023, 0.00010259799999999888, 0.00010218100000000327, 0.0001020000000000014, 0.00010225000000000165, 0.0001022359999999986, 0.00010252799999999757, 0.00010213900000000109, 0.00010236099999999873, 0.0001027359999999991, 0.00010266700000000073, 0.00010269499999999987, 0.00010266700000000073, 0.0001018610000000017, 0.00010243100000000005, 0.00010251400000000147, 0.00010226300000000174, 0.00010220900000000241, 0.0001020000000000014, 0.00010231900000000002, 0.00010218000000000033, 0.00010224999999999818, 0.00010187500000000127, 0.00010211100000000195, 0.00010219499999999937, 0.00010263899999999812, 0.00010261099999999898, 0.00010275000000000215, 0.00010252800000000103, 0.00010226400000000122, 0.00010213899999999762, 0.00010270899999999944, 0.00010223600000000208]</msg>
<status status="PASS" starttime="20201115 23:01:55.331" endtime="20201115 23:01:55.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.327" endtime="20201115 23:01:55.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.336" endtime="20201115 23:01:55.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.339" endtime="20201115 23:01:55.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.338" endtime="20201115 23:01:55.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.334" endtime="20201115 23:01:55.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.965" endtime="20201115 23:01:55.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.963" endtime="20201115 23:01:55.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.962" endtime="20201115 23:01:55.360"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.363" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.372" endtime="20201115 23:01:55.393"></status>
</kw>
<msg timestamp="20201115 23:01:55.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.371" endtime="20201115 23:01:55.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.394" endtime="20201115 23:01:55.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.397" endtime="20201115 23:01:55.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.368" endtime="20201115 23:01:55.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.365" endtime="20201115 23:01:55.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.406" endtime="20201115 23:01:55.691"></status>
</kw>
<msg timestamp="20201115 23:01:55.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026061236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026165028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.404" endtime="20201115 23:01:55.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026061236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026165028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.695" endtime="20201115 23:01:55.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.703" endtime="20201115 23:01:55.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.402" endtime="20201115 23:01:55.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.400" endtime="20201115 23:01:55.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.710" level="INFO">${RESULT} = [{'time': 0.026165028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010379199999999839, 'source_diff': 0.00010379199999999839}, {'time': 0.026282681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:55.706" endtime="20201115 23:01:55.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.723" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:55.711" endtime="20201115 23:01:55.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.728" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.726" endtime="20201115 23:01:55.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.730" level="INFO">VALUE: [0.00010379199999999839, 0.00010374999999999968, 0.00010298600000000283, 0.00010329199999999789, 0.00010286099999999923, 0.00010352700000000256, 0.00010340199999999897, 0.00010324999999999918, 0.00010338899999999887, 0.00010308299999999687, 0.00010304199999999764, 0.00010331900000000102, 0.00010307000000000024, 0.00010283300000000009, 0.00010313899999999862, 0.0001030420000000011, 0.00010372200000000054, 0.00010307000000000024, 0.00010291700000000098, 0.00010333300000000059, 0.00010366699999999826, 0.00010338899999999887, 0.00010365300000000216, 0.00010344400000000115, 0.00010295799999999675, 0.00010333300000000059, 0.00010327799999999832, 0.00010362499999999955, 0.00010288899999999837, 0.00010284699999999966, 0.00010308399999999981, 0.00010293100000000055, 0.0001033200000000005, 0.00010305600000000067, 0.0001031940000000009, 0.0001037079999999975, 0.00010352800000000204, 0.0001033749999999993, 0.00010315199999999872, 0.00010286099999999923, 0.000103513999999999, 0.0001028749999999988, 0.00010338899999999887, 0.0001031940000000009, 0.0001035420000000016, 0.00010329200000000135, 0.00010316700000000123, 0.00010343100000000105, 0.00010287500000000227, 0.00010322200000000004]</msg>
<status status="PASS" starttime="20201115 23:01:55.729" endtime="20201115 23:01:55.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.724" endtime="20201115 23:01:55.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.733" endtime="20201115 23:01:55.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.736" endtime="20201115 23:01:55.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.735" endtime="20201115 23:01:55.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.731" endtime="20201115 23:01:55.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.364" endtime="20201115 23:01:55.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.362" endtime="20201115 23:01:55.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.361" endtime="20201115 23:01:55.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.121" endtime="20201115 23:01:55.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.762" endtime="20201115 23:01:55.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.761" endtime="20201115 23:01:55.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.759" endtime="20201115 23:01:55.783"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:16.043" endtime="20201115 23:01:55.783" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.792" endtime="20201115 23:01:55.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.790" endtime="20201115 23:01:55.812"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.826" endtime="20201115 23:01:55.839"></status>
</kw>
<msg timestamp="20201115 23:01:55.840" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.824" endtime="20201115 23:01:55.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.842" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.841" endtime="20201115 23:01:55.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.845" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:55.843" endtime="20201115 23:01:55.845"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:55.821" endtime="20201115 23:01:55.846"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:55.819" endtime="20201115 23:01:55.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.817" endtime="20201115 23:01:55.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:55.851" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:55.850" endtime="20201115 23:01:55.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.848" endtime="20201115 23:01:55.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.816" endtime="20201115 23:01:55.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.815" endtime="20201115 23:01:55.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.853" endtime="20201115 23:01:55.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.814" endtime="20201115 23:01:55.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.812" endtime="20201115 23:01:55.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.789" endtime="20201115 23:01:55.855"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.859" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.867" endtime="20201115 23:01:55.881"></status>
</kw>
<msg timestamp="20201115 23:01:55.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.866" endtime="20201115 23:01:55.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.883" endtime="20201115 23:01:55.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.885" endtime="20201115 23:01:55.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.863" endtime="20201115 23:01:55.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.861" endtime="20201115 23:01:55.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.896" endtime="20201115 23:01:56.179"></status>
</kw>
<msg timestamp="20201115 23:01:56.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068283181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068288347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.894" endtime="20201115 23:01:56.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068283181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068288347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.183" endtime="20201115 23:01:56.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.192" endtime="20201115 23:01:56.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.890" endtime="20201115 23:01:56.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.889" endtime="20201115 23:01:56.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.199" level="INFO">${RESULT} = [{'time': 0.068288347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.068299236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:56.195" endtime="20201115 23:01:56.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.212" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:56.200" endtime="20201115 23:01:56.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.217" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.216" endtime="20201115 23:01:56.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.219" level="INFO">VALUE: [5.166000000000892e-06, 4.583000000002446e-06, 4.444999999991817e-06, 3.915999999992703e-06, 3.6669999999988656e-06, 3.652999999992357e-06, 3.9999999999901226e-06, 3.596999999994077e-06, 4.000000000004e-06, 4.013999999996631e-06, 4.583000000002446e-06, 4.1810000000058745e-06, 4.444000000006221e-06, 4.19400000001291e-06, 3.652999999992357e-06, 3.6530000000062346e-06, 4.02800000000314e-06, 4.569000000009815e-06, 3.6800000000059008e-06, 3.652000000006761e-06, 4.000000000004e-06, 4.597999999994551e-06, 4.445000000005694e-06, 3.9720000000048605e-06, 3.6530000000062346e-06, 4.013999999996631e-06, 4.02800000000314e-06, 4.000000000004e-06, 4.58400000000192e-06, 3.973000000004334e-06, 3.6669999999988656e-06, 4.583999999988042e-06, 3.6530000000062346e-06, 4.000000000004e-06, 4.596999999995077e-06, 4.195000000012383e-06, 4.02800000000314e-06, 4.221999999998172e-06, 4.444999999991817e-06, 3.973000000004334e-06, 4.429999999999712e-06, 4.2499999999973115e-06, 4.207999999991663e-06, 4.2360000000046805e-06, 3.986999999996965e-06, 4.4170000000065546e-06, 3.652000000006761e-06, 4.58400000000192e-06, 4.193999999999032e-06, 3.971999999990983e-06]</msg>
<status status="PASS" starttime="20201115 23:01:56.218" endtime="20201115 23:01:56.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.213" endtime="20201115 23:01:56.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.223" endtime="20201115 23:01:56.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.226" endtime="20201115 23:01:56.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.224" endtime="20201115 23:01:56.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.221" endtime="20201115 23:01:56.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.860" endtime="20201115 23:01:56.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.858" endtime="20201115 23:01:56.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.857" endtime="20201115 23:01:56.247"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.249" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.258" endtime="20201115 23:01:56.272"></status>
</kw>
<msg timestamp="20201115 23:01:56.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.256" endtime="20201115 23:01:56.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.273" endtime="20201115 23:01:56.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.276" endtime="20201115 23:01:56.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.254" endtime="20201115 23:01:56.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.251" endtime="20201115 23:01:56.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.286" endtime="20201115 23:01:56.571"></status>
</kw>
<msg timestamp="20201115 23:01:56.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024298819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024304861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.283" endtime="20201115 23:01:56.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024298819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024304861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.575" endtime="20201115 23:01:56.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.584" endtime="20201115 23:01:56.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.281" endtime="20201115 23:01:56.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.279" endtime="20201115 23:01:56.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.591" level="INFO">${RESULT} = [{'time': 0.024304861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.024315417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:56.587" endtime="20201115 23:01:56.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.604" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:56.592" endtime="20201115 23:01:56.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.609" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.607" endtime="20201115 23:01:56.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.611" level="INFO">VALUE: [6.042000000001241e-06, 4.84799999999827e-06, 4.653000000000296e-06, 5.360999999998867e-06, 4.8889999999975065e-06, 5.332999999999727e-06, 5.111000000002086e-06, 5.361000000002336e-06, 4.902999999997076e-06, 5.3889999999980065e-06, 4.666999999999866e-06, 5.361000000002336e-06, 5.58400000000292e-06, 4.903000000000546e-06, 4.903000000000546e-06, 4.666999999999866e-06, 4.639000000000726e-06, 5.596999999999547e-06, 5.375000000001906e-06, 5.346999999999297e-06, 5.139000000001226e-06, 5.110999999998617e-06, 4.8889999999975065e-06, 4.653000000000296e-06, 4.6949999999990055e-06, 5.360999999998867e-06, 5.096999999999047e-06, 5.360999999998867e-06, 5.346999999999297e-06, 4.889000000000976e-06, 5.596999999999547e-06, 5.346999999999297e-06, 5.125000000001656e-06, 4.8749999999979365e-06, 4.666999999999866e-06, 4.8889999999975065e-06, 4.653000000000296e-06, 5.402999999997576e-06, 4.875000000001406e-06, 4.875000000001406e-06, 5.597000000003016e-06, 5.125000000001656e-06, 4.889000000000976e-06, 4.679999999999962e-06, 5.388000000002002e-06, 5.1249999999981866e-06, 4.666000000000392e-06, 5.5839999999994505e-06, 4.666000000000392e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201115 23:01:56.610" endtime="20201115 23:01:56.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.605" endtime="20201115 23:01:56.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.614" endtime="20201115 23:01:56.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.618" endtime="20201115 23:01:56.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.616" endtime="20201115 23:01:56.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.612" endtime="20201115 23:01:56.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.250" endtime="20201115 23:01:56.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.248" endtime="20201115 23:01:56.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.247" endtime="20201115 23:01:56.639"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.641" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.649" endtime="20201115 23:01:56.664"></status>
</kw>
<msg timestamp="20201115 23:01:56.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.648" endtime="20201115 23:01:56.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.665" endtime="20201115 23:01:56.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.668" endtime="20201115 23:01:56.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.645" endtime="20201115 23:01:56.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.643" endtime="20201115 23:01:56.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.679" endtime="20201115 23:01:56.966"></status>
</kw>
<msg timestamp="20201115 23:01:56.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024755292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024762056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.676" endtime="20201115 23:01:56.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024755292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024762056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.970" endtime="20201115 23:01:56.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.978" endtime="20201115 23:01:56.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.673" endtime="20201115 23:01:56.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.671" endtime="20201115 23:01:56.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.985" level="INFO">${RESULT} = [{'time': 0.024762056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.0247725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:56.982" endtime="20201115 23:01:56.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.000" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:56.986" endtime="20201115 23:01:57.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.004" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.003" endtime="20201115 23:01:57.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.007" level="INFO">VALUE: [6.763999999999382e-06, 6.235999999999742e-06, 5.569999999999881e-06, 5.792000000000991e-06, 6.291000000002017e-06, 6.055999999997341e-06, 6.499999999999562e-06, 5.610999999999117e-06, 6.055999999997341e-06, 6.291999999998021e-06, 5.7639999999983815e-06, 5.582999999999977e-06, 6.5279999999987015e-06, 5.820000000000131e-06, 6.542000000001741e-06, 6.514000000002601e-06, 5.582999999999977e-06, 5.820000000000131e-06, 6.042000000001241e-06, 6.2639999999988816e-06, 6.305999999997591e-06, 5.820000000000131e-06, 6.528000000002171e-06, 6.512999999999658e-06, 5.582999999999977e-06, 6.499999999999562e-06, 6.042000000001241e-06, 6.263000000002877e-06, 5.582999999999977e-06, 6.513999999999132e-06, 5.541000000001267e-06, 6.305000000001587e-06, 6.333000000000727e-06, 6.485999999999992e-06, 6.2639999999988816e-06, 6.070000000000381e-06, 6.278000000001921e-06, 6.2229999999996455e-06, 6.514000000002601e-06, 6.292000000001491e-06, 6.513999999999132e-06, 5.59800000000249e-06, 6.262999999999408e-06, 6.042000000001241e-06, 5.860999999999367e-06, 5.5979999999990204e-06, 5.985999999999492e-06, 6.222000000000172e-06, 5.8339999999997005e-06, 6.305000000001587e-06]</msg>
<status status="PASS" starttime="20201115 23:01:57.005" endtime="20201115 23:01:57.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.001" endtime="20201115 23:01:57.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.010" endtime="20201115 23:01:57.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.013" endtime="20201115 23:01:57.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.012" endtime="20201115 23:01:57.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.008" endtime="20201115 23:01:57.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.642" endtime="20201115 23:01:57.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.640" endtime="20201115 23:01:57.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.639" endtime="20201115 23:01:57.034"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.037" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.045" endtime="20201115 23:01:57.059"></status>
</kw>
<msg timestamp="20201115 23:01:57.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.044" endtime="20201115 23:01:57.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.061" endtime="20201115 23:01:57.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.063" endtime="20201115 23:01:57.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.041" endtime="20201115 23:01:57.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.039" endtime="20201115 23:01:57.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.073" endtime="20201115 23:01:57.357"></status>
</kw>
<msg timestamp="20201115 23:01:57.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024432944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024440667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.071" endtime="20201115 23:01:57.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024432944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024440667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.362" endtime="20201115 23:01:57.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.370" endtime="20201115 23:01:57.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.069" endtime="20201115 23:01:57.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.067" endtime="20201115 23:01:57.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.377" level="INFO">${RESULT} = [{'time': 0.024440667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722999999997676e-06, 'source_diff': 7.722999999997676e-06}, {'time': 0.024450208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:57.373" endtime="20201115 23:01:57.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.390" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:57.378" endtime="20201115 23:01:57.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.394" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.393" endtime="20201115 23:01:57.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.397" level="INFO">VALUE: [7.722999999997676e-06, 6.722000000000672e-06, 6.763999999999382e-06, 7.2219999999977025e-06, 7.402999999999577e-06, 6.9869999999999655e-06, 6.513999999999132e-06, 7.180999999998466e-06, 7.402000000000103e-06, 6.513999999999132e-06, 7.2370000000002155e-06, 6.750000000003281e-06, 6.820000000001131e-06, 7.222000000001172e-06, 6.986000000000492e-06, 7.236000000000742e-06, 7.208000000001602e-06, 7.304999999999118e-06, 6.499999999999562e-06, 7.2230000000006456e-06, 7.444000000002282e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 7.000000000000062e-06, 7.000000000000062e-06, 6.9579999999978825e-06, 7.054999999998868e-06, 6.9579999999978825e-06, 7.138999999999757e-06, 6.749999999999812e-06, 6.749999999999812e-06, 7.443999999998813e-06, 7.444999999998286e-06, 7.195000000001506e-06, 7.250000000000312e-06, 7.222000000001172e-06, 7.443999999998813e-06, 6.986000000000492e-06, 7.208000000001602e-06, 6.513999999999132e-06, 7.222000000001172e-06, 6.7919999999985214e-06, 7.443999999998813e-06, 6.986000000000492e-06, 7.443999999998813e-06, 7.222999999997176e-06, 6.972000000000922e-06, 6.5279999999987015e-06, 7.000000000000062e-06, 6.945000000001256e-06]</msg>
<status status="PASS" starttime="20201115 23:01:57.396" endtime="20201115 23:01:57.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.391" endtime="20201115 23:01:57.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.401" endtime="20201115 23:01:57.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.405" endtime="20201115 23:01:57.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.403" endtime="20201115 23:01:57.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.399" endtime="20201115 23:01:57.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.038" endtime="20201115 23:01:57.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.036" endtime="20201115 23:01:57.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.035" endtime="20201115 23:01:57.426"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.428" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.437" endtime="20201115 23:01:57.452"></status>
</kw>
<msg timestamp="20201115 23:01:57.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.436" endtime="20201115 23:01:57.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.453" endtime="20201115 23:01:57.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.456" endtime="20201115 23:01:57.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.433" endtime="20201115 23:01:57.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.431" endtime="20201115 23:01:57.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.465" endtime="20201115 23:01:57.753"></status>
</kw>
<msg timestamp="20201115 23:01:57.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024948153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024956806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.463" endtime="20201115 23:01:57.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024948153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024956806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.757" endtime="20201115 23:01:57.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.765" endtime="20201115 23:01:57.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.461" endtime="20201115 23:01:57.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.459" endtime="20201115 23:01:57.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.772" level="INFO">${RESULT} = [{'time': 0.024956806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.024967403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:57.769" endtime="20201115 23:01:57.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.785" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:57.773" endtime="20201115 23:01:57.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.790" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.789" endtime="20201115 23:01:57.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.792" level="INFO">VALUE: [8.653000000000827e-06, 7.666999999999397e-06, 7.680999999998966e-06, 8.361000000001867e-06, 8.153000000000327e-06, 7.693999999999063e-06, 8.389000000001007e-06, 8.097000000002047e-06, 7.679999999999493e-06, 8.139000000000757e-06, 8.138999999997287e-06, 8.111000000001617e-06, 7.665999999999923e-06, 8.151999999997384e-06, 8.639000000001257e-06, 7.430000000002712e-06, 8.375000000001437e-06, 7.693999999999063e-06, 7.666999999999397e-06, 7.901999999997134e-06, 8.139000000000757e-06, 7.680999999998966e-06, 8.138999999997287e-06, 7.665999999999923e-06, 8.139000000000757e-06, 8.125000000001187e-06, 8.361000000001867e-06, 8.375000000001437e-06, 8.389000000001007e-06, 7.679999999999493e-06, 7.667000000002866e-06, 8.374999999997967e-06, 7.916999999999647e-06, 8.375000000001437e-06, 7.958000000002352e-06, 7.902999999996607e-06, 7.903000000000077e-06, 8.417000000000147e-06, 7.638000000000783e-06, 7.666999999999397e-06, 7.902000000000603e-06, 7.625000000000687e-06, 7.679999999999493e-06, 7.625000000000687e-06, 7.667000000002866e-06, 8.375000000001437e-06, 8.611000000002117e-06, 7.694999999998536e-06, 8.139000000000757e-06, 7.625000000000687e-06]</msg>
<status status="PASS" starttime="20201115 23:01:57.791" endtime="20201115 23:01:57.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.786" endtime="20201115 23:01:57.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.796" endtime="20201115 23:01:57.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.800" endtime="20201115 23:01:57.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.798" endtime="20201115 23:01:57.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.794" endtime="20201115 23:01:57.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.429" endtime="20201115 23:01:57.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.427" endtime="20201115 23:01:57.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.426" endtime="20201115 23:01:57.821"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.823" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.831" endtime="20201115 23:01:57.846"></status>
</kw>
<msg timestamp="20201115 23:01:57.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.830" endtime="20201115 23:01:57.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.847" endtime="20201115 23:01:57.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.850" endtime="20201115 23:01:57.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.827" endtime="20201115 23:01:57.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.825" endtime="20201115 23:01:57.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.859" endtime="20201115 23:01:58.145"></status>
</kw>
<msg timestamp="20201115 23:01:58.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024258431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024268458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.857" endtime="20201115 23:01:58.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024258431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024268458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.149" endtime="20201115 23:01:58.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.157" endtime="20201115 23:01:58.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.855" endtime="20201115 23:01:58.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.853" endtime="20201115 23:01:58.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.164" level="INFO">${RESULT} = [{'time': 0.024268458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.024281056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:58.160" endtime="20201115 23:01:58.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.177" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:58.165" endtime="20201115 23:01:58.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.181" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.180" endtime="20201115 23:01:58.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.184" level="INFO">VALUE: [1.0026999999999259e-05, 8.847999999998801e-06, 8.610999999998648e-06, 9.527999999998232e-06, 8.582999999999508e-06, 9.527999999998232e-06, 9.014000000001632e-06, 8.806000000000092e-06, 9.055000000000868e-06, 9.069999999999911e-06, 9.319000000000688e-06, 8.832999999999758e-06, 8.610999999998648e-06, 9.292000000001022e-06, 8.819999999999661e-06, 9.499999999999093e-06, 9.290999999998079e-06, 8.610999999998648e-06, 9.542000000001272e-06, 8.832999999999758e-06, 9.028000000001202e-06, 9.291000000001548e-06, 8.819000000000188e-06, 9.499999999999093e-06, 9.111000000002617e-06, 8.582999999999508e-06, 8.806000000000092e-06, 9.055000000000868e-06, 9.541000000001798e-06, 8.596999999999078e-06, 8.625000000001687e-06, 8.596999999999078e-06, 8.819999999999661e-06, 9.221999999999703e-06, 9.056000000000342e-06, 8.597000000002547e-06, 9.056000000000342e-06, 8.832999999999758e-06, 9.040999999997829e-06, 9.263999999998412e-06, 8.596999999999078e-06, 9.291999999997552e-06, 9.083000000000008e-06, 8.610999999998648e-06, 9.333000000000258e-06, 9.083999999999481e-06, 8.832999999999758e-06, 9.069000000000438e-06, 8.805000000000618e-06, 8.597000000002547e-06]</msg>
<status status="PASS" starttime="20201115 23:01:58.182" endtime="20201115 23:01:58.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.178" endtime="20201115 23:01:58.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.188" endtime="20201115 23:01:58.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.191" endtime="20201115 23:01:58.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.189" endtime="20201115 23:01:58.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.186" endtime="20201115 23:01:58.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.824" endtime="20201115 23:01:58.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.822" endtime="20201115 23:01:58.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.821" endtime="20201115 23:01:58.212"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.214" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.223" endtime="20201115 23:01:58.237"></status>
</kw>
<msg timestamp="20201115 23:01:58.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.221" endtime="20201115 23:01:58.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.238" endtime="20201115 23:01:58.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.241" endtime="20201115 23:01:58.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.219" endtime="20201115 23:01:58.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.216" endtime="20201115 23:01:58.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.250" endtime="20201115 23:01:58.536"></status>
</kw>
<msg timestamp="20201115 23:01:58.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024213, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024223736, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:58.248" endtime="20201115 23:01:58.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024213, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024223736, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:58.540" endtime="20201115 23:01:58.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.549" endtime="20201115 23:01:58.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.246" endtime="20201115 23:01:58.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.244" endtime="20201115 23:01:58.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.555" level="INFO">${RESULT} = [{'time': 0.024223736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0736000000000773e-05, 'source_diff': 1.0736000000000773e-05}, {'time': 0.024240319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:58.552" endtime="20201115 23:01:58.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.570" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:58.556" endtime="20201115 23:01:58.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.575" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.574" endtime="20201115 23:01:58.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.578" level="INFO">VALUE: [1.0736000000000773e-05, 1.0012999999999689e-05, 9.749999999999343e-06, 9.777999999998482e-06, 9.792000000001522e-06, 1.0458000000001383e-05, 1.0459000000000857e-05, 1.0416999999998677e-05, 9.764000000002382e-06, 9.986000000000023e-06, 1.0444999999997817e-05, 1.0458999999997387e-05, 9.540999999998329e-06, 9.972999999999926e-06, 9.749999999999343e-06, 1.0443999999998343e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0445000000001287e-05, 9.499999999999093e-06, 9.763999999998912e-06, 9.986000000000023e-06, 9.749999999999343e-06, 1.0166999999998427e-05, 9.763999999998912e-06, 1.0431000000001717e-05, 1.0222000000000703e-05, 1.0445000000001287e-05, 1.0444999999997817e-05, 1.0222000000000703e-05, 9.749999999999343e-06, 9.749999999999343e-06, 9.763999999998912e-06, 9.749999999999343e-06, 9.528000000001702e-06, 9.735999999999773e-06, 1.0445000000001287e-05, 9.999999999999593e-06, 1.0236000000000273e-05, 1.0444000000001813e-05, 9.528000000001702e-06, 1.0458000000001383e-05, 9.542000000001272e-06, 9.764000000002382e-06, 9.514000000002132e-06, 1.0222000000000703e-05, 9.763999999998912e-06, 9.763999999998912e-06, 9.763999999998912e-06, 1.0209000000000606e-05]</msg>
<status status="PASS" starttime="20201115 23:01:58.576" endtime="20201115 23:01:58.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.571" endtime="20201115 23:01:58.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.581" endtime="20201115 23:01:58.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.584" endtime="20201115 23:01:58.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.583" endtime="20201115 23:01:58.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.579" endtime="20201115 23:01:58.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.215" endtime="20201115 23:01:58.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.213" endtime="20201115 23:01:58.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.212" endtime="20201115 23:01:58.605"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.608" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.616" endtime="20201115 23:01:58.631"></status>
</kw>
<msg timestamp="20201115 23:01:58.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.615" endtime="20201115 23:01:58.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.632" endtime="20201115 23:01:58.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.635" endtime="20201115 23:01:58.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.612" endtime="20201115 23:01:58.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.610" endtime="20201115 23:01:58.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.644" endtime="20201115 23:01:58.930"></status>
</kw>
<msg timestamp="20201115 23:01:58.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024397319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024409944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.642" endtime="20201115 23:01:58.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024397319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024409944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.934" endtime="20201115 23:01:58.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.943" endtime="20201115 23:01:58.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.639" endtime="20201115 23:01:58.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.638" endtime="20201115 23:01:58.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.949" level="INFO">${RESULT} = [{'time': 0.024409944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2624999999998748e-05, 'source_diff': 1.2624999999998748e-05}, {'time': 0.024428431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:58.946" endtime="20201115 23:01:58.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.963" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:58.951" endtime="20201115 23:01:58.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.968" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.967" endtime="20201115 23:01:58.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.970" level="INFO">VALUE: [1.2624999999998748e-05, 1.1152999999999857e-05, 1.1125000000000718e-05, 1.1610999999998178e-05, 1.0708000000001633e-05, 1.1152999999999857e-05, 1.1402000000000634e-05, 1.0679999999999024e-05, 1.0903000000003077e-05, 1.1152999999999857e-05, 1.0917000000002647e-05, 1.0902999999999607e-05, 1.0665999999999454e-05, 1.1152999999999857e-05, 1.1389000000000538e-05, 1.1402000000000634e-05, 1.1166999999999427e-05, 1.1334000000001732e-05, 1.0693999999998594e-05, 1.1375000000000968e-05, 1.1374999999997498e-05, 1.1139000000000288e-05, 1.1375000000000968e-05, 1.0680000000002493e-05, 1.0903000000003077e-05, 1.1389000000000538e-05, 1.1152000000000384e-05, 1.0667000000002397e-05, 1.0929999999999274e-05, 1.1152999999999857e-05, 1.0665999999999454e-05, 1.1139000000000288e-05, 1.0929999999999274e-05, 1.0902000000000134e-05, 1.0679999999999024e-05, 1.0459000000000857e-05, 1.1389000000000538e-05, 1.1139000000000288e-05, 1.1375000000000968e-05, 1.1152999999999857e-05, 1.1389000000000538e-05, 1.0916999999999177e-05, 1.1125000000000718e-05, 1.1152999999999857e-05, 1.1375000000000968e-05, 1.0652999999999357e-05, 1.0875000000000468e-05, 1.1111000000001148e-05, 1.0889000000000038e-05, 1.0679999999999024e-05]</msg>
<status status="PASS" starttime="20201115 23:01:58.969" endtime="20201115 23:01:58.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.964" endtime="20201115 23:01:58.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.973" endtime="20201115 23:01:58.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.977" endtime="20201115 23:01:58.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.975" endtime="20201115 23:01:58.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.972" endtime="20201115 23:01:58.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.608" endtime="20201115 23:01:58.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.607" endtime="20201115 23:01:58.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.606" endtime="20201115 23:01:58.998"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.001" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.009" endtime="20201115 23:01:59.023"></status>
</kw>
<msg timestamp="20201115 23:01:59.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.007" endtime="20201115 23:01:59.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.025" endtime="20201115 23:01:59.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.028" endtime="20201115 23:01:59.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.005" endtime="20201115 23:01:59.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.003" endtime="20201115 23:01:59.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.037" endtime="20201115 23:01:59.323"></status>
</kw>
<msg timestamp="20201115 23:01:59.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024341653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024354694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.035" endtime="20201115 23:01:59.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024341653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024354694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.327" endtime="20201115 23:01:59.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.336" endtime="20201115 23:01:59.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.032" endtime="20201115 23:01:59.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.031" endtime="20201115 23:01:59.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:59.343" level="INFO">${RESULT} = [{'time': 0.024354694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.304099999999836e-05, 'source_diff': 1.304099999999836e-05}, {'time': 0.024369222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:59.339" endtime="20201115 23:01:59.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.356" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:59.344" endtime="20201115 23:01:59.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.361" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.360" endtime="20201115 23:01:59.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.363" level="INFO">VALUE: [1.304099999999836e-05, 1.2527999999997763e-05, 1.1875000000001468e-05, 1.2513999999998193e-05, 1.2305000000000649e-05, 1.2542000000000803e-05, 1.1624999999997748e-05, 1.2292000000000552e-05, 1.2555000000000899e-05, 1.1792000000000052e-05, 1.2305000000000649e-05, 1.1583000000002508e-05, 1.1902999999997138e-05, 1.1846999999998858e-05, 1.2069999999999442e-05, 1.1596999999998608e-05, 1.2082999999999539e-05, 1.2082999999999539e-05, 1.1610999999998178e-05, 1.2055000000000399e-05, 1.2305000000000649e-05, 1.1611000000001648e-05, 1.205499999999693e-05, 1.1832999999999289e-05, 1.2319999999999692e-05, 1.1848000000001802e-05, 1.1611000000001648e-05, 1.1805000000000149e-05, 1.1680999999999497e-05, 1.2527000000001759e-05, 1.1846999999998858e-05, 1.1612000000001121e-05, 1.2068999999999969e-05, 1.2305000000000649e-05, 1.2082999999999539e-05, 1.1832999999999289e-05, 1.1610999999998178e-05, 1.1597000000002078e-05, 1.2292000000000552e-05, 1.2082999999999539e-05, 1.2332999999999789e-05, 1.1596999999998608e-05, 1.2514000000001663e-05, 1.2513999999998193e-05, 1.2305000000000649e-05, 1.1596999999998608e-05, 1.1832999999999289e-05, 1.1568999999999469e-05, 1.1596999999998608e-05, 1.1985999999998553e-05]</msg>
<status status="PASS" starttime="20201115 23:01:59.362" endtime="20201115 23:01:59.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.357" endtime="20201115 23:01:59.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.366" endtime="20201115 23:01:59.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.370" endtime="20201115 23:01:59.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.368" endtime="20201115 23:01:59.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.365" endtime="20201115 23:01:59.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.001" endtime="20201115 23:01:59.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.999" endtime="20201115 23:01:59.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.998" endtime="20201115 23:01:59.391"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.393" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.401" endtime="20201115 23:01:59.416"></status>
</kw>
<msg timestamp="20201115 23:01:59.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.400" endtime="20201115 23:01:59.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.418" endtime="20201115 23:01:59.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.420" endtime="20201115 23:01:59.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.397" endtime="20201115 23:01:59.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.395" endtime="20201115 23:01:59.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.430" endtime="20201115 23:01:59.717"></status>
</kw>
<msg timestamp="20201115 23:01:59.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024243208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024257167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.428" endtime="20201115 23:01:59.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024243208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024257167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.721" endtime="20201115 23:01:59.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.729" endtime="20201115 23:01:59.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.425" endtime="20201115 23:01:59.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.423" endtime="20201115 23:01:59.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:59.736" level="INFO">${RESULT} = [{'time': 0.024257167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3959000000000887e-05, 'source_diff': 1.3959000000000887e-05}, {'time': 0.024275611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:59.733" endtime="20201115 23:01:59.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.750" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:59.737" endtime="20201115 23:01:59.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.754" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.753" endtime="20201115 23:01:59.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.757" level="INFO">VALUE: [1.3959000000000887e-05, 1.2541999999997333e-05, 1.2999999999999123e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.3222000000000234e-05, 1.3472000000000484e-05, 1.3222000000000234e-05, 1.2999999999999123e-05, 1.2610999999999178e-05, 1.3222000000000234e-05, 1.2999999999999123e-05, 1.3459000000000387e-05, 1.3000000000002593e-05, 1.2986999999999027e-05, 1.2681000000000497e-05, 1.3222000000000234e-05, 1.2986000000003023e-05, 1.3472000000000484e-05, 1.255499999999743e-05, 1.3263999999998943e-05, 1.3429999999998304e-05, 1.3472000000000484e-05, 1.2764000000001913e-05, 1.3472000000000484e-05, 1.3222000000000234e-05, 1.2971999999999984e-05, 1.2986000000003023e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.2944000000000844e-05, 1.3222000000000234e-05, 1.3236000000003273e-05, 1.3249999999999373e-05, 1.252699999999829e-05, 1.3222000000000234e-05, 1.3472000000000484e-05, 1.2986000000003023e-05, 1.2999999999999123e-05, 1.2986000000003023e-05, 1.2763000000002439e-05, 1.3000000000002593e-05, 1.3235999999999803e-05, 1.3457999999997444e-05, 1.2805000000001149e-05, 1.3472999999999957e-05, 1.3415999999998734e-05, 1.2777000000002009e-05, 1.352699999999929e-05, 1.2999999999999123e-05]</msg>
<status status="PASS" starttime="20201115 23:01:59.755" endtime="20201115 23:01:59.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.750" endtime="20201115 23:01:59.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.760" endtime="20201115 23:01:59.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.763" endtime="20201115 23:01:59.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.762" endtime="20201115 23:01:59.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.758" endtime="20201115 23:01:59.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.394" endtime="20201115 23:01:59.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.392" endtime="20201115 23:01:59.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.391" endtime="20201115 23:01:59.784"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.787" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.795" endtime="20201115 23:01:59.810"></status>
</kw>
<msg timestamp="20201115 23:01:59.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.793" endtime="20201115 23:01:59.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.811" endtime="20201115 23:01:59.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.814" endtime="20201115 23:01:59.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.791" endtime="20201115 23:01:59.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.789" endtime="20201115 23:01:59.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.823" endtime="20201115 23:02:00.110"></status>
</kw>
<msg timestamp="20201115 23:02:00.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024147431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024162556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.822" endtime="20201115 23:02:00.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024147431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024162556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.115" endtime="20201115 23:02:00.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.123" endtime="20201115 23:02:00.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.819" endtime="20201115 23:02:00.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.817" endtime="20201115 23:02:00.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.130" level="INFO">${RESULT} = [{'time': 0.024162556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5125000000001249e-05, 'source_diff': 1.5125000000001249e-05}, {'time': 0.024179222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:00.126" endtime="20201115 23:02:00.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.145" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:00.131" endtime="20201115 23:02:00.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.149" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.148" endtime="20201115 23:02:00.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.152" level="INFO">VALUE: [1.5125000000001249e-05, 1.4389000000000068e-05, 1.3902999999999138e-05, 1.3472000000000484e-05, 1.4152999999999388e-05, 1.3708000000001164e-05, 1.4181000000001998e-05, 1.433299999999832e-05, 1.4138999999999818e-05, 1.4611000000001179e-05, 1.3916999999998708e-05, 1.3931000000001748e-05, 1.4179999999999054e-05, 1.4166999999998958e-05, 1.4222000000001234e-05, 1.4402000000000165e-05, 1.4165999999999485e-05, 1.4389000000000068e-05, 1.4374999999997029e-05, 1.4166999999998958e-05, 1.3680999999998028e-05, 1.3667000000001928e-05, 1.4375000000000498e-05, 1.3944000000001844e-05, 1.3708000000001164e-05, 1.4097000000001109e-05, 1.4639000000000318e-05, 1.3709000000000637e-05, 1.4375000000000498e-05, 1.4360999999997459e-05, 1.3680999999998028e-05, 1.3681000000001498e-05, 1.3888999999999568e-05, 1.4389000000000068e-05, 1.4389000000000068e-05, 1.4221999999997764e-05, 1.4402999999999638e-05, 1.3430000000001774e-05, 1.3722000000000734e-05, 1.3708000000001164e-05, 1.3679999999998554e-05, 1.3847000000000859e-05, 1.4402999999999638e-05, 1.4389000000000068e-05, 1.4151999999999915e-05, 1.4625000000000749e-05, 1.4389000000000068e-05, 1.4153000000002858e-05, 1.3930999999998278e-05, 1.3930999999998278e-05]</msg>
<status status="PASS" starttime="20201115 23:02:00.150" endtime="20201115 23:02:00.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.146" endtime="20201115 23:02:00.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.155" endtime="20201115 23:02:00.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.158" endtime="20201115 23:02:00.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.157" endtime="20201115 23:02:00.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.153" endtime="20201115 23:02:00.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.787" endtime="20201115 23:02:00.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.785" endtime="20201115 23:02:00.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.785" endtime="20201115 23:02:00.180"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.182" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.191" endtime="20201115 23:02:00.206"></status>
</kw>
<msg timestamp="20201115 23:02:00.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.189" endtime="20201115 23:02:00.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.207" endtime="20201115 23:02:00.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.210" endtime="20201115 23:02:00.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.186" endtime="20201115 23:02:00.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.184" endtime="20201115 23:02:00.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.219" endtime="20201115 23:02:00.506"></status>
</kw>
<msg timestamp="20201115 23:02:00.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024749472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024765486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.218" endtime="20201115 23:02:00.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024749472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024765486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.510" endtime="20201115 23:02:00.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.518" endtime="20201115 23:02:00.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.215" endtime="20201115 23:02:00.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.213" endtime="20201115 23:02:00.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.525" level="INFO">${RESULT} = [{'time': 0.024765486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6013999999998224e-05, 'source_diff': 1.6013999999998224e-05}, {'time': 0.024786139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:00.522" endtime="20201115 23:02:00.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.538" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:00.526" endtime="20201115 23:02:00.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.543" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.542" endtime="20201115 23:02:00.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.545" level="INFO">VALUE: [1.6013999999998224e-05, 1.4555999999998903e-05, 1.4874999999997529e-05, 1.4625000000000749e-05, 1.4847000000001859e-05, 1.509699999999864e-05, 1.4805999999999153e-05, 1.4847000000001859e-05, 1.4611000000001179e-05, 1.555500000000043e-05, 1.508299999999907e-05, 1.509699999999864e-05, 1.5542000000000333e-05, 1.508299999999907e-05, 1.4611000000001179e-05, 1.5249999999997904e-05, 1.4624999999997279e-05, 1.4861000000001429e-05, 1.508299999999907e-05, 1.5069999999998973e-05, 1.5097000000002109e-05, 1.533299999999932e-05, 1.502700000000079e-05, 1.5542000000000333e-05, 1.555500000000043e-05, 1.5305999999999653e-05, 1.4625000000000749e-05, 1.537499999999803e-05, 1.4834000000001762e-05, 1.530500000000018e-05, 1.484699999999839e-05, 1.4820000000002193e-05, 1.50689999999995e-05, 1.554100000000086e-05, 1.4624999999997279e-05, 1.530500000000018e-05, 1.4833000000002289e-05, 1.5125000000001249e-05, 1.4833000000002289e-05, 1.5305999999999653e-05, 1.4625000000000749e-05, 1.5249999999997904e-05, 1.4625000000000749e-05, 1.4848000000001332e-05, 1.5139000000000818e-05, 1.4555000000002899e-05, 1.509699999999864e-05, 1.4639000000000318e-05, 1.531899999999975e-05, 1.554100000000086e-05]</msg>
<status status="PASS" starttime="20201115 23:02:00.544" endtime="20201115 23:02:00.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.539" endtime="20201115 23:02:00.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.549" endtime="20201115 23:02:00.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.552" endtime="20201115 23:02:00.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.550" endtime="20201115 23:02:00.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.547" endtime="20201115 23:02:00.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.182" endtime="20201115 23:02:00.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.181" endtime="20201115 23:02:00.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.180" endtime="20201115 23:02:00.573"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.576" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.584" endtime="20201115 23:02:00.599"></status>
</kw>
<msg timestamp="20201115 23:02:00.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.583" endtime="20201115 23:02:00.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.600" endtime="20201115 23:02:00.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.603" endtime="20201115 23:02:00.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.580" endtime="20201115 23:02:00.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.578" endtime="20201115 23:02:00.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.612" endtime="20201115 23:02:00.899"></status>
</kw>
<msg timestamp="20201115 23:02:00.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024388556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024405306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.610" endtime="20201115 23:02:00.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024388556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024405306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.903" endtime="20201115 23:02:00.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.912" endtime="20201115 23:02:00.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.608" endtime="20201115 23:02:00.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.606" endtime="20201115 23:02:00.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.918" level="INFO">${RESULT} = [{'time': 0.024405306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6750000000002874e-05, 'source_diff': 1.6750000000002874e-05}, {'time': 0.024430972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:00.915" endtime="20201115 23:02:00.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.932" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:00.919" endtime="20201115 23:02:00.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.936" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.935" endtime="20201115 23:02:00.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.939" level="INFO">VALUE: [1.6750000000002874e-05, 1.5999999999998654e-05, 1.641700000000121e-05, 1.6499999999999154e-05, 1.6472000000000014e-05, 1.6485999999999584e-05, 1.6499999999999154e-05, 1.6235999999999334e-05, 1.5542000000000333e-05, 1.5764000000001444e-05, 1.5999999999998654e-05, 1.6472000000000014e-05, 1.6235999999999334e-05, 1.5778000000001013e-05, 1.6235999999999334e-05, 1.6249999999998904e-05, 1.5791999999997114e-05, 1.6513999999998724e-05, 1.5778000000001013e-05, 1.5778000000001013e-05, 1.6249999999998904e-05, 1.6472000000000014e-05, 1.6235999999999334e-05, 1.5542000000000333e-05, 1.6013999999998224e-05, 1.5957999999999944e-05, 1.5999999999998654e-05, 1.6527999999998294e-05, 1.641700000000121e-05, 1.6472000000000014e-05, 1.5792000000000583e-05, 1.6472999999999488e-05, 1.5778000000001013e-05, 1.6194000000000625e-05, 1.6042000000000833e-05, 1.6235999999999334e-05, 1.6249999999998904e-05, 1.6235999999999334e-05, 1.5777999999997544e-05, 1.6000000000002124e-05, 1.6208000000000194e-05, 1.5528000000000763e-05, 1.554100000000086e-05, 1.6013999999998224e-05, 1.5972000000002984e-05, 1.6221999999999764e-05, 1.5971999999999514e-05, 1.579099999999764e-05, 1.5584000000002513e-05, 1.6277999999998044e-05]</msg>
<status status="PASS" starttime="20201115 23:02:00.938" endtime="20201115 23:02:00.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.933" endtime="20201115 23:02:00.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.943" endtime="20201115 23:02:00.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.946" endtime="20201115 23:02:00.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.944" endtime="20201115 23:02:00.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.941" endtime="20201115 23:02:00.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.576" endtime="20201115 23:02:00.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.575" endtime="20201115 23:02:00.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.574" endtime="20201115 23:02:00.967"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.970" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.978" endtime="20201115 23:02:00.993"></status>
</kw>
<msg timestamp="20201115 23:02:00.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.976" endtime="20201115 23:02:00.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.995" endtime="20201115 23:02:00.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.997" endtime="20201115 23:02:00.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.974" endtime="20201115 23:02:00.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.972" endtime="20201115 23:02:01.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.006" endtime="20201115 23:02:01.292"></status>
</kw>
<msg timestamp="20201115 23:02:01.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024664444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.005" endtime="20201115 23:02:01.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024664444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.296" endtime="20201115 23:02:01.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.304" endtime="20201115 23:02:01.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.002" endtime="20201115 23:02:01.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.000" endtime="20201115 23:02:01.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:01.311" level="INFO">${RESULT} = [{'time': 0.024664444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8208000000002195e-05, 'source_diff': 1.8208000000002195e-05}, {'time': 0.024686833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:01.307" endtime="20201115 23:02:01.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.324" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:01.312" endtime="20201115 23:02:01.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.329" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.328" endtime="20201115 23:02:01.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.332" level="INFO">VALUE: [1.8208000000002195e-05, 1.6707999999997225e-05, 1.763899999999985e-05, 1.7443999999998405e-05, 1.715299999999892e-05, 1.6709000000000168e-05, 1.715299999999892e-05, 1.7401999999999695e-05, 1.693100000000128e-05, 1.665299999999842e-05, 1.6695000000000598e-05, 1.6709000000000168e-05, 1.6929999999998335e-05, 1.7151999999999445e-05, 1.6458000000000444e-05, 1.6945000000000848e-05, 1.7180000000002055e-05, 1.6694000000001125e-05, 1.6458000000000444e-05, 1.740299999999917e-05, 1.6959000000000418e-05, 1.7165999999999015e-05, 1.73889999999996e-05, 1.6944000000001375e-05, 1.6959000000000418e-05, 1.6695000000000598e-05, 1.73889999999996e-05, 1.6735999999999834e-05, 1.7401999999999695e-05, 1.693100000000128e-05, 1.6458000000000444e-05, 1.6709000000000168e-05, 1.6458000000000444e-05, 1.6999999999999654e-05, 1.6458000000000444e-05, 1.6929999999998335e-05, 1.6709000000000168e-05, 1.715300000000239e-05, 1.6708000000000695e-05, 1.763899999999985e-05, 1.663900000000232e-05, 1.6694000000001125e-05, 1.6722000000000264e-05, 1.669499999999713e-05, 1.73889999999996e-05, 1.716699999999849e-05, 1.736100000000046e-05, 1.6695000000000598e-05, 1.6958000000000945e-05, 1.6929999999998335e-05]</msg>
<status status="PASS" starttime="20201115 23:02:01.330" endtime="20201115 23:02:01.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.325" endtime="20201115 23:02:01.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.335" endtime="20201115 23:02:01.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.338" endtime="20201115 23:02:01.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.337" endtime="20201115 23:02:01.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.333" endtime="20201115 23:02:01.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.970" endtime="20201115 23:02:01.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.968" endtime="20201115 23:02:01.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.968" endtime="20201115 23:02:01.359"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.362" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.370" endtime="20201115 23:02:01.386"></status>
</kw>
<msg timestamp="20201115 23:02:01.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.368" endtime="20201115 23:02:01.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.387" endtime="20201115 23:02:01.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.390" endtime="20201115 23:02:01.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.366" endtime="20201115 23:02:01.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.364" endtime="20201115 23:02:01.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.399" endtime="20201115 23:02:01.686"></status>
</kw>
<msg timestamp="20201115 23:02:01.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024212458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024231569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.397" endtime="20201115 23:02:01.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024212458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024231569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.691" endtime="20201115 23:02:01.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.702" endtime="20201115 23:02:01.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.395" endtime="20201115 23:02:01.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.393" endtime="20201115 23:02:01.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:01.713" level="INFO">${RESULT} = [{'time': 0.024231569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.911100000000221e-05, 'source_diff': 1.911100000000221e-05}, {'time': 0.024252083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:01.708" endtime="20201115 23:02:01.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.731" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:01.714" endtime="20201115 23:02:01.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.736" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.735" endtime="20201115 23:02:01.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.739" level="INFO">VALUE: [1.911100000000221e-05, 1.855499999999996e-05, 1.809700000000164e-05, 1.761100000000071e-05, 1.80829999999986e-05, 1.762500000000028e-05, 1.834700000000189e-05, 1.7848000000000863e-05, 1.8152000000000446e-05, 1.786100000000096e-05, 1.834700000000189e-05, 1.8305999999999184e-05, 1.7862000000000433e-05, 1.83890000000006e-05, 1.784700000000139e-05, 1.811100000000121e-05, 1.7847999999997394e-05, 1.811100000000121e-05, 1.761100000000071e-05, 1.787500000000053e-05, 1.8528000000000294e-05, 1.768100000000203e-05, 1.854100000000039e-05, 1.833299999999885e-05, 1.8098000000001113e-05, 1.8471999999998545e-05, 1.763899999999985e-05, 1.762500000000028e-05, 1.812499999999731e-05, 1.762500000000028e-05, 1.8305999999999184e-05, 1.7778000000003014e-05, 1.833299999999885e-05, 1.762500000000028e-05, 1.831899999999928e-05, 1.8514000000000724e-05, 1.8555999999999434e-05, 1.831899999999928e-05, 1.80690000000025e-05, 1.8305999999999184e-05, 1.784700000000139e-05, 1.784700000000139e-05, 1.762500000000028e-05, 1.787499999999706e-05, 1.761100000000071e-05, 1.831899999999928e-05, 1.806899999999903e-05, 1.855499999999996e-05, 1.763899999999985e-05, 1.809699999999817e-05]</msg>
<status status="PASS" starttime="20201115 23:02:01.738" endtime="20201115 23:02:01.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.732" endtime="20201115 23:02:01.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.742" endtime="20201115 23:02:01.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.746" endtime="20201115 23:02:01.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.744" endtime="20201115 23:02:01.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.741" endtime="20201115 23:02:01.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.362" endtime="20201115 23:02:01.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.361" endtime="20201115 23:02:01.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.360" endtime="20201115 23:02:01.767"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.769" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.778" endtime="20201115 23:02:01.793"></status>
</kw>
<msg timestamp="20201115 23:02:01.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.776" endtime="20201115 23:02:01.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.795" endtime="20201115 23:02:01.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.797" endtime="20201115 23:02:01.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.773" endtime="20201115 23:02:01.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.771" endtime="20201115 23:02:01.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.806" endtime="20201115 23:02:02.091"></status>
</kw>
<msg timestamp="20201115 23:02:02.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024521181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024540931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.805" endtime="20201115 23:02:02.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024521181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024540931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.095" endtime="20201115 23:02:02.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.104" endtime="20201115 23:02:02.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.802" endtime="20201115 23:02:02.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.800" endtime="20201115 23:02:02.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.111" level="INFO">${RESULT} = [{'time': 0.024540931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.024568444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:02.107" endtime="20201115 23:02:02.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.124" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:02.111" endtime="20201115 23:02:02.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.128" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.127" endtime="20201115 23:02:02.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.131" level="INFO">VALUE: [1.9749999999998935e-05, 1.9471999999999545e-05, 1.8777999999997075e-05, 1.9014000000001224e-05, 1.879099999999717e-05, 1.852700000000082e-05, 1.9207999999999725e-05, 1.947299999999902e-05, 1.9249999999998435e-05, 1.8778000000000544e-05, 1.9014000000001224e-05, 1.879100000000064e-05, 1.9250000000001904e-05, 1.9485999999999115e-05, 1.9250000000001904e-05, 1.9236000000002335e-05, 1.9250000000001904e-05, 1.9028000000000794e-05, 1.8778000000000544e-05, 1.9249999999998435e-05, 1.8486000000001584e-05, 1.9014000000001224e-05, 1.8971999999999045e-05, 1.8555999999999434e-05, 1.9249999999998435e-05, 1.8763999999997505e-05, 1.9055999999999934e-05, 1.8778000000000544e-05, 1.945900000000292e-05, 1.8792000000000114e-05, 1.8778000000000544e-05, 1.9471999999999545e-05, 1.8999999999998185e-05, 1.8555999999999434e-05, 1.947300000000249e-05, 1.9249999999998435e-05, 1.9499999999998685e-05, 1.9235999999998865e-05, 1.945899999999945e-05, 1.9250000000001904e-05, 1.948699999999859e-05, 1.9499999999998685e-05, 1.9486000000002585e-05, 1.8778000000000544e-05, 1.8778000000000544e-05, 1.9235999999998865e-05, 1.8778000000000544e-05, 1.9250000000001904e-05, 1.9249999999998435e-05, 1.8555999999999434e-05]</msg>
<status status="PASS" starttime="20201115 23:02:02.129" endtime="20201115 23:02:02.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.125" endtime="20201115 23:02:02.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.134" endtime="20201115 23:02:02.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.138" endtime="20201115 23:02:02.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.136" endtime="20201115 23:02:02.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.132" endtime="20201115 23:02:02.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.770" endtime="20201115 23:02:02.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.768" endtime="20201115 23:02:02.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.767" endtime="20201115 23:02:02.159"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.161" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.169" endtime="20201115 23:02:02.184"></status>
</kw>
<msg timestamp="20201115 23:02:02.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.168" endtime="20201115 23:02:02.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.186" endtime="20201115 23:02:02.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.188" endtime="20201115 23:02:02.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.165" endtime="20201115 23:02:02.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.163" endtime="20201115 23:02:02.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.198" endtime="20201115 23:02:02.485"></status>
</kw>
<msg timestamp="20201115 23:02:02.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024256819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024277486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.196" endtime="20201115 23:02:02.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024256819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024277486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.490" endtime="20201115 23:02:02.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.498" endtime="20201115 23:02:02.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.193" endtime="20201115 23:02:02.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.192" endtime="20201115 23:02:02.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.505" level="INFO">${RESULT} = [{'time': 0.024277486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.066700000000199e-05, 'source_diff': 2.066700000000199e-05}, {'time': 0.024302986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:02.502" endtime="20201115 23:02:02.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.518" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:02.506" endtime="20201115 23:02:02.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.523" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.522" endtime="20201115 23:02:02.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.525" level="INFO">VALUE: [2.066700000000199e-05, 2.041699999999827e-05, 2.018099999999759e-05, 2.0429999999998366e-05, 1.9708000000000225e-05, 2.04029999999987e-05, 2.040300000000217e-05, 2.016699999999802e-05, 1.9499999999998685e-05, 1.97089999999997e-05, 1.9944000000000905e-05, 1.9471999999999545e-05, 1.9708000000000225e-05, 1.9958000000000475e-05, 2.0166000000002016e-05, 1.994499999999691e-05, 1.9666000000001516e-05, 2.036099999999999e-05, 1.97089999999997e-05, 2.0444000000001405e-05, 1.943100000000031e-05, 1.988899999999863e-05, 2.040300000000217e-05, 1.994500000000038e-05, 2.015299999999845e-05, 2.062499999999981e-05, 2.0416000000002266e-05, 1.9958000000000475e-05, 2.016699999999802e-05, 2.0707999999997756e-05, 1.9680000000001086e-05, 1.9958000000000475e-05, 1.9472000000003015e-05, 1.993099999999734e-05, 1.9958000000000475e-05, 2.038899999999913e-05, 2.065299999999895e-05, 1.9471999999999545e-05, 2.016699999999802e-05, 2.04029999999987e-05, 2.041699999999827e-05, 2.018099999999759e-05, 1.995899999999995e-05, 1.9471999999999545e-05, 2.0013999999998755e-05, 2.041700000000174e-05, 2.038899999999913e-05, 2.0179999999998116e-05, 2.0000000000002655e-05, 1.986099999999949e-05]</msg>
<status status="PASS" starttime="20201115 23:02:02.524" endtime="20201115 23:02:02.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.519" endtime="20201115 23:02:02.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.529" endtime="20201115 23:02:02.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.532" endtime="20201115 23:02:02.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.530" endtime="20201115 23:02:02.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.527" endtime="20201115 23:02:02.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.162" endtime="20201115 23:02:02.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.160" endtime="20201115 23:02:02.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.159" endtime="20201115 23:02:02.553"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.556" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.564" endtime="20201115 23:02:02.580"></status>
</kw>
<msg timestamp="20201115 23:02:02.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.562" endtime="20201115 23:02:02.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.581" endtime="20201115 23:02:02.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.584" endtime="20201115 23:02:02.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.560" endtime="20201115 23:02:02.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.558" endtime="20201115 23:02:02.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.593" endtime="20201115 23:02:02.879"></status>
</kw>
<msg timestamp="20201115 23:02:02.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024594931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.592" endtime="20201115 23:02:02.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024594931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.883" endtime="20201115 23:02:02.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.891" endtime="20201115 23:02:02.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.589" endtime="20201115 23:02:02.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.588" endtime="20201115 23:02:02.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.898" level="INFO">${RESULT} = [{'time': 0.024616792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.186099999999802e-05, 'source_diff': 2.186099999999802e-05}, {'time': 0.024642361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:02.894" endtime="20201115 23:02:02.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.911" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:02.899" endtime="20201115 23:02:02.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.915" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.914" endtime="20201115 23:02:02.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.918" level="INFO">VALUE: [2.186099999999802e-05, 2.062499999999981e-05, 2.156900000000253e-05, 2.087500000000006e-05, 2.1112000000000214e-05, 2.133300000000185e-05, 2.061100000000024e-05, 2.0861999999999964e-05, 2.063899999999938e-05, 2.063899999999938e-05, 2.111100000000074e-05, 2.1569999999998535e-05, 2.09029999999992e-05, 2.087500000000006e-05, 2.09029999999992e-05, 2.134700000000142e-05, 2.133300000000185e-05, 2.133299999999838e-05, 2.065299999999895e-05, 2.066699999999852e-05, 2.130500000000271e-05, 2.136100000000099e-05, 2.161100000000124e-05, 2.088899999999963e-05, 2.1291999999999145e-05, 2.086100000000049e-05, 2.131899999999881e-05, 2.087500000000006e-05, 2.0915999999999296e-05, 2.063899999999938e-05, 2.10830000000016e-05, 2.111100000000074e-05, 2.10969999999977e-05, 2.10969999999977e-05, 2.088899999999963e-05, 2.1112000000000214e-05, 2.111100000000074e-05, 2.10830000000016e-05, 2.1541999999999395e-05, 2.131900000000228e-05, 2.1098000000000644e-05, 2.086100000000049e-05, 2.15830000000021e-05, 2.118099999999859e-05, 2.084700000000092e-05, 2.131899999999881e-05, 2.0805999999998215e-05, 2.08890000000031e-05, 2.0651999999999476e-05, 2.112500000000031e-05]</msg>
<status status="PASS" starttime="20201115 23:02:02.916" endtime="20201115 23:02:02.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.912" endtime="20201115 23:02:02.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.921" endtime="20201115 23:02:02.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.925" endtime="20201115 23:02:02.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.923" endtime="20201115 23:02:02.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.919" endtime="20201115 23:02:02.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.556" endtime="20201115 23:02:02.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.554" endtime="20201115 23:02:02.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.554" endtime="20201115 23:02:02.946"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.948" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.957" endtime="20201115 23:02:02.973"></status>
</kw>
<msg timestamp="20201115 23:02:02.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.955" endtime="20201115 23:02:02.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.975" endtime="20201115 23:02:02.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.977" endtime="20201115 23:02:02.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.953" endtime="20201115 23:02:02.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.950" endtime="20201115 23:02:02.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.986" endtime="20201115 23:02:03.272"></status>
</kw>
<msg timestamp="20201115 23:02:03.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025262875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025285417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.985" endtime="20201115 23:02:03.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025262875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025285417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.276" endtime="20201115 23:02:03.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.285" endtime="20201115 23:02:03.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.982" endtime="20201115 23:02:03.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.980" endtime="20201115 23:02:03.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.292" level="INFO">${RESULT} = [{'time': 0.025285417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.025315972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:03.288" endtime="20201115 23:02:03.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.306" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:03.293" endtime="20201115 23:02:03.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.311" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.310" endtime="20201115 23:02:03.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.313" level="INFO">VALUE: [2.2542000000000395e-05, 2.156899999999906e-05, 2.2485999999998646e-05, 2.2499999999998216e-05, 2.247300000000202e-05, 2.1555999999998965e-05, 2.156899999999906e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.2472000000002545e-05, 2.1791999999999645e-05, 2.155499999999949e-05, 2.202700000000085e-05, 2.2264000000001005e-05, 2.2514000000001255e-05, 2.2458000000002976e-05, 2.204100000000042e-05, 2.15830000000021e-05, 2.2249999999997966e-05, 2.2264000000001005e-05, 2.211099999999827e-05, 2.2014000000000755e-05, 2.2485999999998646e-05, 2.156900000000253e-05, 2.1584000000001574e-05, 2.2014000000000755e-05, 2.2264000000001005e-05, 2.1778000000000075e-05, 2.248699999999812e-05, 2.2292000000000145e-05, 2.2028000000000325e-05, 2.2485999999998646e-05, 2.1778000000000075e-05, 2.179100000000017e-05, 2.2250000000001435e-05, 2.1570000000002004e-05, 2.1805999999999215e-05, 2.2583999999999105e-05, 2.156900000000253e-05, 2.2014000000000755e-05, 2.229100000000067e-05, 2.1764000000000505e-05, 2.2250000000001435e-05, 2.2250000000001435e-05, 2.156900000000253e-05, 2.180499999999974e-05, 2.2028000000000325e-05, 2.161099999999777e-05, 2.1598000000001144e-05, 2.1721999999998326e-05]</msg>
<status status="PASS" starttime="20201115 23:02:03.312" endtime="20201115 23:02:03.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.307" endtime="20201115 23:02:03.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.317" endtime="20201115 23:02:03.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.320" endtime="20201115 23:02:03.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.319" endtime="20201115 23:02:03.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.315" endtime="20201115 23:02:03.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.949" endtime="20201115 23:02:03.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.947" endtime="20201115 23:02:03.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.946" endtime="20201115 23:02:03.348"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.350" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.358" endtime="20201115 23:02:03.374"></status>
</kw>
<msg timestamp="20201115 23:02:03.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.357" endtime="20201115 23:02:03.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.375" endtime="20201115 23:02:03.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.378" endtime="20201115 23:02:03.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.354" endtime="20201115 23:02:03.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.352" endtime="20201115 23:02:03.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.387" endtime="20201115 23:02:03.672"></status>
</kw>
<msg timestamp="20201115 23:02:03.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024631069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024655, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:03.385" endtime="20201115 23:02:03.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024631069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024655, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:03.676" endtime="20201115 23:02:03.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.685" endtime="20201115 23:02:03.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.383" endtime="20201115 23:02:03.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.381" endtime="20201115 23:02:03.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.691" level="INFO">${RESULT} = [{'time': 0.024655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.393100000000134e-05, 'source_diff': 2.393100000000134e-05}, {'time': 0.024679542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:03.688" endtime="20201115 23:02:03.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.705" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:03.692" endtime="20201115 23:02:03.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.709" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.708" endtime="20201115 23:02:03.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.712" level="INFO">VALUE: [2.393100000000134e-05, 2.295899999999948e-05, 2.341700000000127e-05, 2.3208000000000256e-05, 2.3194000000000686e-05, 2.338900000000213e-05, 2.295899999999948e-05, 2.265300000000095e-05, 2.2944000000000436e-05, 2.294499999999991e-05, 2.2958000000000006e-05, 2.338899999999866e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2.318100000000059e-05, 2.337499999999909e-05, 2.295900000000295e-05, 2.337499999999909e-05, 2.3194000000000686e-05, 2.3415999999998327e-05, 2.2735999999998896e-05, 2.2985999999999146e-05, 2.316700000000102e-05, 2.341700000000127e-05, 2.340299999999823e-05, 2.3415999999998327e-05, 2.2708000000003226e-05, 2.363899999999891e-05, 2.27229999999988e-05, 2.3485999999999646e-05, 2.2513999999997786e-05, 2.3416000000001796e-05, 2.2736000000002365e-05, 2.294499999999991e-05, 2.3165999999998077e-05, 2.3416000000001796e-05, 2.2944000000000436e-05, 2.343100000000084e-05, 2.340299999999823e-05, 2.2707999999999756e-05, 2.2943999999996967e-05, 2.340299999999823e-05, 2.319500000000016e-05, 2.2999999999998716e-05, 2.2528000000000825e-05, 2.2999999999998716e-05, 2.318100000000059e-05, 2.34169999999978e-05, 2.2778000000001075e-05, 2.3000000000002185e-05]</msg>
<status status="PASS" starttime="20201115 23:02:03.710" endtime="20201115 23:02:03.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.706" endtime="20201115 23:02:03.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.715" endtime="20201115 23:02:03.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.719" endtime="20201115 23:02:03.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.717" endtime="20201115 23:02:03.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.714" endtime="20201115 23:02:03.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.351" endtime="20201115 23:02:03.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.349" endtime="20201115 23:02:03.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.348" endtime="20201115 23:02:03.740"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.742" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.751" endtime="20201115 23:02:03.766"></status>
</kw>
<msg timestamp="20201115 23:02:03.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.749" endtime="20201115 23:02:03.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.767" endtime="20201115 23:02:03.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.770" endtime="20201115 23:02:03.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.746" endtime="20201115 23:02:03.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.744" endtime="20201115 23:02:03.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.779" endtime="20201115 23:02:04.065"></status>
</kw>
<msg timestamp="20201115 23:02:04.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024351042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024375667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.777" endtime="20201115 23:02:04.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024351042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024375667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.069" endtime="20201115 23:02:04.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.078" endtime="20201115 23:02:04.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.775" endtime="20201115 23:02:04.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.773" endtime="20201115 23:02:04.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.084" level="INFO">${RESULT} = [{'time': 0.024375667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.462500000000034e-05, 'source_diff': 2.462500000000034e-05}, {'time': 0.024407167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:04.081" endtime="20201115 23:02:04.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.098" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:04.085" endtime="20201115 23:02:04.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.102" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.101" endtime="20201115 23:02:04.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.105" level="INFO">VALUE: [2.462500000000034e-05, 2.4098000000000175e-05, 2.362499999999934e-05, 2.3735999999999896e-05, 2.387500000000306e-05, 2.4584000000001105e-05, 2.366699999999805e-05, 2.4333999999997385e-05, 2.434700000000095e-05, 2.436099999999705e-05, 2.458300000000163e-05, 2.434700000000095e-05, 2.391700000000177e-05, 2.434700000000095e-05, 2.365299999999848e-05, 2.387499999999959e-05, 2.365300000000195e-05, 2.363899999999891e-05, 2.4318999999998342e-05, 2.384700000000045e-05, 2.365299999999848e-05, 2.387499999999959e-05, 2.4568999999998592e-05, 2.433300000000138e-05, 2.365299999999848e-05, 2.393099999999787e-05, 2.387499999999959e-05, 2.387499999999959e-05, 2.408300000000113e-05, 2.362499999999934e-05, 2.3555999999997496e-05, 2.4070000000001035e-05, 2.411100000000027e-05, 2.4333999999997385e-05, 2.3915999999998827e-05, 2.388900000000263e-05, 2.362499999999934e-05, 2.362500000000281e-05, 2.387499999999959e-05, 2.387499999999959e-05, 2.4332999999997912e-05, 2.4568999999998592e-05, 2.365299999999848e-05, 2.412499999999984e-05, 2.3847999999999925e-05, 2.412499999999984e-05, 2.387499999999959e-05, 2.363900000000238e-05, 2.4334000000000855e-05, 2.411100000000027e-05]</msg>
<status status="PASS" starttime="20201115 23:02:04.103" endtime="20201115 23:02:04.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.099" endtime="20201115 23:02:04.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.109" endtime="20201115 23:02:04.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.112" endtime="20201115 23:02:04.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.110" endtime="20201115 23:02:04.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.107" endtime="20201115 23:02:04.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.743" endtime="20201115 23:02:04.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.741" endtime="20201115 23:02:04.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.740" endtime="20201115 23:02:04.133"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.135" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.144" endtime="20201115 23:02:04.159"></status>
</kw>
<msg timestamp="20201115 23:02:04.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.142" endtime="20201115 23:02:04.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.161" endtime="20201115 23:02:04.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.163" endtime="20201115 23:02:04.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.140" endtime="20201115 23:02:04.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.138" endtime="20201115 23:02:04.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.172" endtime="20201115 23:02:04.458"></status>
</kw>
<msg timestamp="20201115 23:02:04.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024306778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024332333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.171" endtime="20201115 23:02:04.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024306778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024332333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.462" endtime="20201115 23:02:04.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.470" endtime="20201115 23:02:04.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.168" endtime="20201115 23:02:04.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.166" endtime="20201115 23:02:04.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.477" level="INFO">${RESULT} = [{'time': 0.024332333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5555000000000022e-05, 'source_diff': 2.5555000000000022e-05}, {'time': 0.024360875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:04.474" endtime="20201115 23:02:04.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.491" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:04.479" endtime="20201115 23:02:04.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.496" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.495" endtime="20201115 23:02:04.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.498" level="INFO">VALUE: [2.5555000000000022e-05, 2.4777999999999606e-05, 2.5041999999999426e-05, 2.5485999999998177e-05, 2.4568999999998592e-05, 2.547299999999808e-05, 2.50970000000017e-05, 2.4804999999999272e-05, 2.4554999999999022e-05, 2.5069999999998566e-05, 2.458300000000163e-05, 2.5499999999997747e-05, 2.505500000000299e-05, 2.4584000000001105e-05, 2.519499999999869e-05, 2.4542000000002395e-05, 2.4527999999999356e-05, 2.4570000000001535e-05, 2.4791999999999176e-05, 2.5319999999998816e-05, 2.456900000000206e-05, 2.458300000000163e-05, 2.4568999999998592e-05, 2.462500000000034e-05, 2.5055999999998996e-05, 2.497300000000105e-05, 2.4860999999997552e-05, 2.4791999999999176e-05, 2.5056000000002465e-05, 2.4500000000000216e-05, 2.5485999999998177e-05, 2.5264000000000536e-05, 2.5027999999999856e-05, 2.4790999999999702e-05, 2.4818999999998842e-05, 2.5250000000000966e-05, 2.5429999999999897e-05, 2.5485999999998177e-05, 2.4764000000000036e-05, 2.5027999999999856e-05, 2.5500000000001216e-05, 2.4985999999997677e-05, 2.5264000000000536e-05, 2.5027999999999856e-05, 2.5500000000001216e-05, 2.5485999999998177e-05, 2.461100000000077e-05, 2.4804999999999272e-05, 2.5555000000000022e-05, 2.5041999999999426e-05]</msg>
<status status="PASS" starttime="20201115 23:02:04.497" endtime="20201115 23:02:04.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.492" endtime="20201115 23:02:04.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.501" endtime="20201115 23:02:04.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.505" endtime="20201115 23:02:04.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.503" endtime="20201115 23:02:04.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.500" endtime="20201115 23:02:04.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.136" endtime="20201115 23:02:04.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.134" endtime="20201115 23:02:04.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.133" endtime="20201115 23:02:04.526"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.528" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.537" endtime="20201115 23:02:04.552"></status>
</kw>
<msg timestamp="20201115 23:02:04.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.535" endtime="20201115 23:02:04.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.553" endtime="20201115 23:02:04.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.556" endtime="20201115 23:02:04.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.532" endtime="20201115 23:02:04.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.530" endtime="20201115 23:02:04.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.565" endtime="20201115 23:02:04.852"></status>
</kw>
<msg timestamp="20201115 23:02:04.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024669111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024695806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.563" endtime="20201115 23:02:04.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024669111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024695806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.856" endtime="20201115 23:02:04.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.865" endtime="20201115 23:02:04.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.561" endtime="20201115 23:02:04.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.559" endtime="20201115 23:02:04.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.871" level="INFO">${RESULT} = [{'time': 0.024695806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.669500000000019e-05, 'source_diff': 2.669500000000019e-05}, {'time': 0.024724514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:04.868" endtime="20201115 23:02:04.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.886" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:04.872" endtime="20201115 23:02:04.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.891" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.890" endtime="20201115 23:02:04.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.893" level="INFO">VALUE: [2.669500000000019e-05, 2.6374999999998622e-05, 2.5971999999999107e-05, 2.5721999999998857e-05, 2.5957999999999537e-05, 2.5486000000001646e-05, 2.5472000000002076e-05, 2.643100000000037e-05, 2.573700000000137e-05, 2.5722000000002326e-05, 2.619500000000316e-05, 2.5499999999997747e-05, 2.6416000000001327e-05, 2.5721999999998857e-05, 2.619499999999969e-05, 2.597299999999858e-05, 2.619499999999969e-05, 2.5735999999998427e-05, 2.6415999999997858e-05, 2.5971999999999107e-05, 2.572299999999833e-05, 2.5957999999999537e-05, 2.570900000000223e-05, 2.5999999999998247e-05, 2.5485999999998177e-05, 2.618099999999665e-05, 2.595899999999901e-05, 2.619499999999969e-05, 2.644499999999994e-05, 2.5680000000000147e-05, 2.5750000000001466e-05, 2.6027999999997387e-05, 2.644499999999994e-05, 2.6458000000000037e-05, 2.595900000000248e-05, 2.6180000000000647e-05, 2.570899999999876e-05, 2.5791999999996706e-05, 2.5750000000001466e-05, 2.6194000000000217e-05, 2.644499999999994e-05, 2.5736000000001896e-05, 2.619499999999969e-05, 2.6194000000000217e-05, 2.5943999999999967e-05, 2.6194000000000217e-05, 2.6430000000000897e-05, 2.6416000000001327e-05, 2.6416000000001327e-05, 2.5958000000003006e-05]</msg>
<status status="PASS" starttime="20201115 23:02:04.892" endtime="20201115 23:02:04.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.887" endtime="20201115 23:02:04.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.896" endtime="20201115 23:02:04.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.900" endtime="20201115 23:02:04.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.898" endtime="20201115 23:02:04.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.895" endtime="20201115 23:02:04.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.529" endtime="20201115 23:02:04.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.527" endtime="20201115 23:02:04.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.526" endtime="20201115 23:02:04.921"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.923" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.932" endtime="20201115 23:02:04.947"></status>
</kw>
<msg timestamp="20201115 23:02:04.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.930" endtime="20201115 23:02:04.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.948" endtime="20201115 23:02:04.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.951" endtime="20201115 23:02:04.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.927" endtime="20201115 23:02:04.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.925" endtime="20201115 23:02:04.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.960" endtime="20201115 23:02:05.247"></status>
</kw>
<msg timestamp="20201115 23:02:05.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024183653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024211292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.958" endtime="20201115 23:02:05.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024183653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024211292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.251" endtime="20201115 23:02:05.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.259" endtime="20201115 23:02:05.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.956" endtime="20201115 23:02:05.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.954" endtime="20201115 23:02:05.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.266" level="INFO">${RESULT} = [{'time': 0.024211292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7638999999999442e-05, 'source_diff': 2.7638999999999442e-05}, {'time': 0.024240931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:05.263" endtime="20201115 23:02:05.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.279" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:05.267" endtime="20201115 23:02:05.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.284" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.283" endtime="20201115 23:02:05.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.286" level="INFO">VALUE: [2.7638999999999442e-05, 2.7374999999999622e-05, 2.6651999999998538e-05, 2.7138999999998942e-05, 2.7361000000000052e-05, 2.6596999999999732e-05, 2.665299999999801e-05, 2.6596999999999732e-05, 2.690299999999826e-05, 2.7347000000000482e-05, 2.7110999999999802e-05, 2.690300000000173e-05, 2.7124999999999372e-05, 2.7361000000000052e-05, 2.7374999999999622e-05, 2.7152000000002507e-05, 2.7124999999999372e-05, 2.6874999999999122e-05, 2.7597000000000732e-05, 2.7568999999998123e-05, 2.7069000000001092e-05, 2.7333000000000912e-05, 2.690299999999826e-05, 2.7124999999999372e-05, 2.688900000000216e-05, 2.7179999999998178e-05, 2.7388999999999192e-05, 2.688900000000216e-05, 2.7597000000000732e-05, 2.6888999999998692e-05, 2.666699999999758e-05, 2.665299999999801e-05, 2.6944000000000967e-05, 2.6874999999999122e-05, 2.7264000000002536e-05, 2.712500000000284e-05, 2.6888999999998692e-05, 2.690299999999826e-05, 2.7584000000000636e-05, 2.7584000000000636e-05, 2.6666000000001577e-05, 2.7597000000000732e-05, 2.690299999999826e-05, 2.7347000000000482e-05, 2.716700000000155e-05, 2.7332999999997443e-05, 2.6888999999998692e-05, 2.7124999999999372e-05, 2.6888999999998692e-05, 2.7583000000001162e-05]</msg>
<status status="PASS" starttime="20201115 23:02:05.285" endtime="20201115 23:02:05.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.280" endtime="20201115 23:02:05.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.290" endtime="20201115 23:02:05.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.293" endtime="20201115 23:02:05.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.291" endtime="20201115 23:02:05.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.288" endtime="20201115 23:02:05.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.924" endtime="20201115 23:02:05.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.922" endtime="20201115 23:02:05.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.921" endtime="20201115 23:02:05.314"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.316" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.325" endtime="20201115 23:02:05.341"></status>
</kw>
<msg timestamp="20201115 23:02:05.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.323" endtime="20201115 23:02:05.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.342" endtime="20201115 23:02:05.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.345" endtime="20201115 23:02:05.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.321" endtime="20201115 23:02:05.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.318" endtime="20201115 23:02:05.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.354" endtime="20201115 23:02:05.640"></status>
</kw>
<msg timestamp="20201115 23:02:05.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024396569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024426097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.353" endtime="20201115 23:02:05.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024396569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024426097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.644" endtime="20201115 23:02:05.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.652" endtime="20201115 23:02:05.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.350" endtime="20201115 23:02:05.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.349" endtime="20201115 23:02:05.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.659" level="INFO">${RESULT} = [{'time': 0.024426097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9528000000000887e-05, 'source_diff': 2.9528000000000887e-05}, {'time': 0.024463569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:05.656" endtime="20201115 23:02:05.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.673" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:05.660" endtime="20201115 23:02:05.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.677" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.676" endtime="20201115 23:02:05.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.680" level="INFO">VALUE: [2.9528000000000887e-05, 2.7861000000000552e-05, 2.8055999999998527e-05, 2.8250000000000497e-05, 2.7555999999998027e-05, 2.8054999999999053e-05, 2.8264000000000067e-05, 2.8500000000000747e-05, 2.7777999999999137e-05, 2.7597000000000732e-05, 2.8514000000000317e-05, 2.7583000000001162e-05, 2.8013999999999817e-05, 2.7806000000001746e-05, 2.8292000000002676e-05, 2.8290999999999733e-05, 2.8500000000000747e-05, 2.7819000000001842e-05, 2.7806000000001746e-05, 2.7818999999998373e-05, 2.8334000000001386e-05, 2.7819000000001842e-05, 2.8278000000003106e-05, 2.8083000000001662e-05, 2.8263000000000593e-05, 2.8055999999998527e-05, 2.8042000000002426e-05, 2.8026999999999913e-05, 2.8500000000000747e-05, 2.8054999999999053e-05, 2.8458000000002037e-05, 2.7804999999998803e-05, 2.8277999999999637e-05, 2.8500000000000747e-05, 2.7597000000000732e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8040999999999483e-05, 2.7569000000001592e-05, 2.8514000000000317e-05, 2.765300000000248e-05, 2.7819000000001842e-05, 2.8500000000000747e-05, 2.8026999999999913e-05, 2.8041999999998957e-05, 2.8111000000000802e-05, 2.7584000000000636e-05, 2.8277999999999637e-05, 2.8055999999998527e-05, 2.7527999999998887e-05]</msg>
<status status="PASS" starttime="20201115 23:02:05.678" endtime="20201115 23:02:05.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.673" endtime="20201115 23:02:05.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.683" endtime="20201115 23:02:05.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.686" endtime="20201115 23:02:05.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.685" endtime="20201115 23:02:05.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.681" endtime="20201115 23:02:05.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.317" endtime="20201115 23:02:05.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.315" endtime="20201115 23:02:05.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.314" endtime="20201115 23:02:05.707"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.710" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.719" endtime="20201115 23:02:05.734"></status>
</kw>
<msg timestamp="20201115 23:02:05.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.717" endtime="20201115 23:02:05.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.736" endtime="20201115 23:02:05.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.738" endtime="20201115 23:02:05.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.714" endtime="20201115 23:02:05.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.712" endtime="20201115 23:02:05.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.747" endtime="20201115 23:02:06.034"></status>
</kw>
<msg timestamp="20201115 23:02:06.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024887153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024917097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.746" endtime="20201115 23:02:06.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024887153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024917097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.039" endtime="20201115 23:02:06.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.047" endtime="20201115 23:02:06.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.743" endtime="20201115 23:02:06.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.741" endtime="20201115 23:02:06.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.054" level="INFO">${RESULT} = [{'time': 0.024917097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9944000000000498e-05, 'source_diff': 2.9944000000000498e-05}, {'time': 0.024955667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:06.050" endtime="20201115 23:02:06.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.067" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:06.055" endtime="20201115 23:02:06.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.072" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.071" endtime="20201115 23:02:06.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.074" level="INFO">VALUE: [2.9944000000000498e-05, 2.944499999999947e-05, 2.8972000000002107e-05, 2.9193999999999748e-05, 2.944500000000294e-05, 2.8708000000002287e-05, 2.9207999999999318e-05, 2.945899999999904e-05, 2.9430000000000428e-05, 2.8985999999998208e-05, 2.922299999999836e-05, 2.9430000000000428e-05, 2.8972000000002107e-05, 2.8735999999997958e-05, 2.8985999999998208e-05, 2.8514000000000317e-05, 2.8554999999999553e-05, 2.918100000000312e-05, 2.9041000000000483e-05, 2.8764000000000567e-05, 2.9193999999999748e-05, 2.941599999999739e-05, 2.8818999999999373e-05, 2.9207999999999318e-05, 2.8986000000001677e-05, 2.947299999999861e-05, 2.8736000000001427e-05, 2.8514000000000317e-05, 2.9193999999999748e-05, 2.8514000000000317e-05, 2.8972000000002107e-05, 2.9403000000000762e-05, 2.9443999999999998e-05, 2.8958000000002537e-05, 2.9207999999999318e-05, 2.897300000000158e-05, 2.94309999999999e-05, 2.8986000000001677e-05, 2.945900000000251e-05, 2.919499999999922e-05, 2.8750000000000997e-05, 2.9193999999999748e-05, 2.8805000000003272e-05, 2.870900000000176e-05, 2.8985999999998208e-05, 2.8957999999999068e-05, 2.8750000000000997e-05, 2.920899999999879e-05, 2.8541999999999457e-05, 2.8500000000000747e-05]</msg>
<status status="PASS" starttime="20201115 23:02:06.073" endtime="20201115 23:02:06.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.068" endtime="20201115 23:02:06.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.077" endtime="20201115 23:02:06.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.081" endtime="20201115 23:02:06.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.079" endtime="20201115 23:02:06.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.076" endtime="20201115 23:02:06.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.710" endtime="20201115 23:02:06.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.709" endtime="20201115 23:02:06.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.708" endtime="20201115 23:02:06.102"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.105" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.113" endtime="20201115 23:02:06.129"></status>
</kw>
<msg timestamp="20201115 23:02:06.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.112" endtime="20201115 23:02:06.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.130" endtime="20201115 23:02:06.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.133" endtime="20201115 23:02:06.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.109" endtime="20201115 23:02:06.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.107" endtime="20201115 23:02:06.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.142" endtime="20201115 23:02:06.429"></status>
</kw>
<msg timestamp="20201115 23:02:06.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024270542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024301639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.141" endtime="20201115 23:02:06.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024270542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024301639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.433" endtime="20201115 23:02:06.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.441" endtime="20201115 23:02:06.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.138" endtime="20201115 23:02:06.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.136" endtime="20201115 23:02:06.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.448" level="INFO">${RESULT} = [{'time': 0.024301639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.109700000000076e-05, 'source_diff': 3.109700000000076e-05}, {'time': 0.024338306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:06.445" endtime="20201115 23:02:06.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.463" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:06.449" endtime="20201115 23:02:06.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.468" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.467" endtime="20201115 23:02:06.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.470" level="INFO">VALUE: [3.109700000000076e-05, 2.9681000000000152e-05, 2.9667000000000582e-05, 3.0124999999998903e-05, 3.0138999999998473e-05, 3.0360999999999583e-05, 3.0431000000000902e-05, 2.9902999999997792e-05, 3.0347000000000013e-05, 2.9860999999999083e-05, 2.9681000000000152e-05, 2.9681000000000152e-05, 3.0416999999997862e-05, 3.0125000000002372e-05, 2.9916000000001358e-05, 2.9888999999998223e-05, 2.9721999999999388e-05, 2.9917000000000832e-05, 3.0597999999999737e-05, 3.0110999999999333e-05, 3.056900000000112e-05, 2.9888999999998223e-05, 3.052799999999842e-05, 3.0320000000000347e-05, 2.9735999999998958e-05, 2.988800000000222e-05, 2.994499999999997e-05, 2.9875000000002122e-05, 3.0125000000002372e-05, 2.9846999999999513e-05, 2.9653000000001012e-05, 2.990199999999832e-05, 3.0111000000002802e-05, 3.0139000000001942e-05, 2.9903000000001262e-05, 2.9667000000000582e-05, 2.9666000000001108e-05, 3.0124999999998903e-05, 2.991599999999789e-05, 3.0277999999998167e-05, 3.0360999999999583e-05, 3.0374999999999153e-05, 3.0125000000002372e-05, 2.992999999999746e-05, 3.0125000000002372e-05, 2.9666000000001108e-05, 3.0375000000002622e-05, 3.0124999999998903e-05, 3.0361000000003052e-05, 3.0360999999999583e-05]</msg>
<status status="PASS" starttime="20201115 23:02:06.469" endtime="20201115 23:02:06.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.464" endtime="20201115 23:02:06.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.474" endtime="20201115 23:02:06.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.477" endtime="20201115 23:02:06.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.476" endtime="20201115 23:02:06.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.472" endtime="20201115 23:02:06.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.105" endtime="20201115 23:02:06.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.104" endtime="20201115 23:02:06.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.103" endtime="20201115 23:02:06.498"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.501" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.509" endtime="20201115 23:02:06.524"></status>
</kw>
<msg timestamp="20201115 23:02:06.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.508" endtime="20201115 23:02:06.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.526" endtime="20201115 23:02:06.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.528" endtime="20201115 23:02:06.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.505" endtime="20201115 23:02:06.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.503" endtime="20201115 23:02:06.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.537" endtime="20201115 23:02:06.824"></status>
</kw>
<msg timestamp="20201115 23:02:06.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024558181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02458975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:06.536" endtime="20201115 23:02:06.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024558181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02458975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:06.828" endtime="20201115 23:02:06.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.836" endtime="20201115 23:02:06.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.533" endtime="20201115 23:02:06.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.531" endtime="20201115 23:02:06.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.843" level="INFO">${RESULT} = [{'time': 0.02458975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.156900000000212e-05, 'source_diff': 3.156900000000212e-05}, {'time': 0.024627278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:06.839" endtime="20201115 23:02:06.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.856" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:06.844" endtime="20201115 23:02:06.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.861" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.860" endtime="20201115 23:02:06.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.864" level="INFO">VALUE: [3.156900000000212e-05, 3.150000000000028e-05, 3.077799999999867e-05, 3.105600000000153e-05, 3.12639999999996e-05, 3.150000000000028e-05, 3.0568999999997654e-05, 3.1068999999998154e-05, 3.087499999999965e-05, 3.0584000000000167e-05, 3.06249999999994e-05, 3.077799999999867e-05, 3.104200000000196e-05, 3.086100000000008e-05, 3.145800000000157e-05, 3.151399999999985e-05, 3.0818999999997904e-05, 3.1513000000000374e-05, 3.106900000000162e-05, 3.0818999999997904e-05, 3.059700000000026e-05, 3.1568999999998654e-05, 3.059700000000026e-05, 3.0584000000000167e-05, 3.104200000000196e-05, 3.080600000000128e-05, 3.151399999999985e-05, 3.148600000000071e-05, 3.150000000000028e-05, 3.132000000000135e-05, 3.106900000000162e-05, 3.084700000000051e-05, 3.086100000000008e-05, 3.104199999999849e-05, 3.082000000000085e-05, 3.059700000000026e-05, 3.102799999999892e-05, 3.1290999999999264e-05, 3.155600000000203e-05, 3.130600000000178e-05, 3.151400000000332e-05, 3.081999999999738e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.133400000000092e-05, 3.1040999999999014e-05, 3.052799999999842e-05, 3.083300000000094e-05, 3.150000000000028e-05, 3.1040999999999014e-05]</msg>
<status status="PASS" starttime="20201115 23:02:06.862" endtime="20201115 23:02:06.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.857" endtime="20201115 23:02:06.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.867" endtime="20201115 23:02:06.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.870" endtime="20201115 23:02:06.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.869" endtime="20201115 23:02:06.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.865" endtime="20201115 23:02:06.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.501" endtime="20201115 23:02:06.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.500" endtime="20201115 23:02:06.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.499" endtime="20201115 23:02:06.891"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.894" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.902" endtime="20201115 23:02:06.917"></status>
</kw>
<msg timestamp="20201115 23:02:06.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.900" endtime="20201115 23:02:06.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.919" endtime="20201115 23:02:06.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.921" endtime="20201115 23:02:06.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.898" endtime="20201115 23:02:06.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.896" endtime="20201115 23:02:06.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.930" endtime="20201115 23:02:07.217"></status>
</kw>
<msg timestamp="20201115 23:02:07.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024419694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024453111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.929" endtime="20201115 23:02:07.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024419694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024453111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.221" endtime="20201115 23:02:07.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.229" endtime="20201115 23:02:07.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.926" endtime="20201115 23:02:07.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.924" endtime="20201115 23:02:07.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.236" level="INFO">${RESULT} = [{'time': 0.024453111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.341700000000086e-05, 'source_diff': 3.341700000000086e-05}, {'time': 0.024487611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:07.233" endtime="20201115 23:02:07.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.250" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:07.237" endtime="20201115 23:02:07.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.254" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.253" endtime="20201115 23:02:07.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.257" level="INFO">VALUE: [3.341700000000086e-05, 3.1818999999998904e-05, 3.223599999999799e-05, 3.222200000000189e-05, 3.22640000000006e-05, 3.200000000000078e-05, 3.175000000000053e-05, 3.19579999999986e-05, 3.177799999999967e-05, 3.2444999999999e-05, 3.17640000000001e-05, 3.202799999999992e-05, 3.244500000000247e-05, 3.17640000000001e-05, 3.173600000000096e-05, 3.2444999999999e-05, 3.19579999999986e-05, 3.198599999999774e-05, 3.197199999999817e-05, 3.216600000000014e-05, 3.200000000000078e-05, 3.195800000000207e-05, 3.17640000000001e-05, 3.175000000000053e-05, 3.200000000000078e-05, 3.242999999999996e-05, 3.223600000000146e-05, 3.222199999999842e-05, 3.200000000000078e-05, 3.173700000000043e-05, 3.244399999999953e-05, 3.245900000000204e-05, 3.175000000000053e-05, 3.198600000000121e-05, 3.152799999999942e-05, 3.24579999999991e-05, 3.24310000000029e-05, 3.222200000000189e-05, 3.175000000000053e-05, 3.1554999999999084e-05, 3.152799999999942e-05, 3.194399999999903e-05, 3.244399999999953e-05, 3.222300000000136e-05, 3.173599999999749e-05, 3.175000000000053e-05, 3.154100000000298e-05, 3.220900000000179e-05, 3.173600000000096e-05, 3.223599999999799e-05]</msg>
<status status="PASS" starttime="20201115 23:02:07.255" endtime="20201115 23:02:07.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.251" endtime="20201115 23:02:07.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.260" endtime="20201115 23:02:07.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.263" endtime="20201115 23:02:07.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.262" endtime="20201115 23:02:07.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.258" endtime="20201115 23:02:07.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.894" endtime="20201115 23:02:07.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.893" endtime="20201115 23:02:07.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.892" endtime="20201115 23:02:07.284"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.287" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.295" endtime="20201115 23:02:07.311"></status>
</kw>
<msg timestamp="20201115 23:02:07.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.294" endtime="20201115 23:02:07.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.313" endtime="20201115 23:02:07.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.315" endtime="20201115 23:02:07.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.291" endtime="20201115 23:02:07.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.289" endtime="20201115 23:02:07.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.324" endtime="20201115 23:02:07.612"></status>
</kw>
<msg timestamp="20201115 23:02:07.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024824889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.323" endtime="20201115 23:02:07.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024824889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.616" endtime="20201115 23:02:07.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.625" endtime="20201115 23:02:07.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.320" endtime="20201115 23:02:07.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.319" endtime="20201115 23:02:07.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.632" level="INFO">${RESULT} = [{'time': 0.024824889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.329200000000033e-05, 'source_diff': 4.329200000000033e-05}, {'time': 0.024874917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:07.628" endtime="20201115 23:02:07.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.645" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:07.633" endtime="20201115 23:02:07.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.650" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.648" endtime="20201115 23:02:07.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.652" level="INFO">VALUE: [4.329200000000033e-05, 4.254199999999958e-05, 4.2930999999999525e-05, 4.2375000000000745e-05, 4.304200000000008e-05, 4.306999999999922e-05, 4.2347000000001606e-05, 4.2416999999999455e-05, 4.304200000000008e-05, 4.277800000000026e-05, 4.315200000000116e-05, 4.2527000000000537e-05, 4.320800000000291e-05, 4.259799999999786e-05, 4.2402999999999885e-05, 4.2277000000000287e-05, 4.298599999999833e-05, 4.3153000000000635e-05, 4.2583000000002286e-05, 4.265200000000066e-05, 4.265199999999719e-05, 4.2875000000001245e-05, 4.3082999999999316e-05, 4.2541000000000107e-05, 4.3167000000000205e-05, 4.250000000000087e-05, 4.245799999999869e-05, 4.24860000000013e-05, 4.244400000000259e-05, 4.3111000000001926e-05, 4.307000000000269e-05, 4.2639000000000565e-05, 4.2945000000002564e-05, 4.248599999999783e-05, 4.322199999999901e-05, 4.244399999999912e-05, 4.3167000000000205e-05, 4.297200000000223e-05, 4.320799999999944e-05, 4.231999999999847e-05, 4.2930999999999525e-05, 4.2639000000000565e-05, 4.258399999999829e-05, 4.2903000000000385e-05, 4.302800000000051e-05, 4.2638999999997096e-05, 4.2680999999999275e-05, 4.220800000000191e-05, 4.251300000000097e-05, 4.2445000000002064e-05]</msg>
<status status="PASS" starttime="20201115 23:02:07.651" endtime="20201115 23:02:07.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.646" endtime="20201115 23:02:07.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.655" endtime="20201115 23:02:07.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.659" endtime="20201115 23:02:07.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.657" endtime="20201115 23:02:07.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.653" endtime="20201115 23:02:07.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.287" endtime="20201115 23:02:07.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.286" endtime="20201115 23:02:07.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.285" endtime="20201115 23:02:07.680"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.682" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.690" endtime="20201115 23:02:07.706"></status>
</kw>
<msg timestamp="20201115 23:02:07.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.689" endtime="20201115 23:02:07.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.708" endtime="20201115 23:02:07.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.710" endtime="20201115 23:02:07.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.686" endtime="20201115 23:02:07.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.684" endtime="20201115 23:02:07.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.720" endtime="20201115 23:02:08.006"></status>
</kw>
<msg timestamp="20201115 23:02:08.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02463525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02467875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:07.718" endtime="20201115 23:02:08.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02463525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02467875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:08.010" endtime="20201115 23:02:08.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.018" endtime="20201115 23:02:08.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.715" endtime="20201115 23:02:08.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.713" endtime="20201115 23:02:08.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.025" level="INFO">${RESULT} = [{'time': 0.02467875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34999999999984e-05, 'source_diff': 4.34999999999984e-05}, {'time': 0.024729764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:08.022" endtime="20201115 23:02:08.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.040" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:08.026" endtime="20201115 23:02:08.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.044" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.043" endtime="20201115 23:02:08.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.047" level="INFO">VALUE: [4.34999999999984e-05, 4.3931000000000525e-05, 4.329200000000033e-05, 4.345799999999969e-05, 4.34860000000023e-05, 4.3180999999999775e-05, 4.426400000000219e-05, 4.3833000000000066e-05, 4.4152999999998166e-05, 4.348599999999883e-05, 4.379200000000083e-05, 4.327799999999729e-05, 4.3846999999999636e-05, 4.3874999999998776e-05, 4.3667000000000705e-05, 4.3625000000001996e-05, 4.404099999999814e-05, 4.36800000000008e-05, 4.407000000000022e-05, 4.3472999999998735e-05, 4.3596999999999386e-05, 4.3569000000000246e-05, 4.3582999999999816e-05, 4.354099999999764e-05, 4.3305000000000426e-05, 4.3805000000000927e-05, 4.379099999999789e-05, 4.3583000000003286e-05, 4.330499999999696e-05, 4.350000000000187e-05, 4.3291000000000857e-05, 4.405600000000065e-05, 4.348599999999883e-05, 4.320799999999944e-05, 4.397199999999976e-05, 4.4152999999998166e-05, 4.330600000000337e-05, 4.3638999999998096e-05, 4.3346999999999136e-05, 4.3945000000000095e-05, 4.326399999999772e-05, 4.3416999999996986e-05, 4.4208999999999915e-05, 4.3374999999998276e-05, 4.425000000000262e-05, 4.3860999999999206e-05, 4.400000000000237e-05, 4.359800000000233e-05, 4.379200000000083e-05, 4.3958999999999665e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.045" endtime="20201115 23:02:08.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.041" endtime="20201115 23:02:08.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.050" endtime="20201115 23:02:08.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.053" endtime="20201115 23:02:08.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.052" endtime="20201115 23:02:08.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.048" endtime="20201115 23:02:08.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.683" endtime="20201115 23:02:08.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.681" endtime="20201115 23:02:08.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.680" endtime="20201115 23:02:08.074"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.077" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.085" endtime="20201115 23:02:08.101"></status>
</kw>
<msg timestamp="20201115 23:02:08.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.084" endtime="20201115 23:02:08.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.103" endtime="20201115 23:02:08.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.106" endtime="20201115 23:02:08.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.081" endtime="20201115 23:02:08.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.079" endtime="20201115 23:02:08.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.115" endtime="20201115 23:02:08.401"></status>
</kw>
<msg timestamp="20201115 23:02:08.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024736389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024781097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.113" endtime="20201115 23:02:08.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024736389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024781097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.405" endtime="20201115 23:02:08.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.413" endtime="20201115 23:02:08.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.111" endtime="20201115 23:02:08.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.109" endtime="20201115 23:02:08.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.420" level="INFO">${RESULT} = [{'time': 0.024781097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.470799999999747e-05, 'source_diff': 4.470799999999747e-05}, {'time': 0.024830111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:08.417" endtime="20201115 23:02:08.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.434" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:08.421" endtime="20201115 23:02:08.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.438" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.437" endtime="20201115 23:02:08.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.441" level="INFO">VALUE: [4.470799999999747e-05, 4.472199999999704e-05, 4.5166999999998736e-05, 4.4916999999998486e-05, 4.5138999999999596e-05, 4.4681000000001275e-05, 4.4319000000000996e-05, 4.4569000000001247e-05, 4.479199999999836e-05, 4.509699999999742e-05, 4.477799999999879e-05, 4.455600000000115e-05, 4.507000000000122e-05, 4.477800000000226e-05, 4.426399999999872e-05, 4.474999999999965e-05, 4.457000000000072e-05, 4.49999999999999e-05, 4.507000000000122e-05, 4.473600000000008e-05, 4.444400000000112e-05, 4.484800000000011e-05, 4.479200000000183e-05, 4.476399999999922e-05, 4.4305000000001427e-05, 4.465199999999919e-05, 4.517999999999883e-05, 4.473600000000008e-05, 4.500000000000337e-05, 4.472200000000051e-05, 4.49999999999999e-05, 4.426399999999872e-05, 4.452799999999854e-05, 4.4375000000002746e-05, 4.505600000000165e-05, 4.44999999999994e-05, 4.48329999999976e-05, 4.467999999999833e-05, 4.4597000000000386e-05, 4.5180999999998306e-05, 4.451400000000244e-05, 4.5181000000001775e-05, 4.5138999999999596e-05, 4.4388999999998846e-05, 4.497200000000076e-05, 4.4903000000002385e-05, 4.502799999999904e-05, 4.458400000000029e-05, 4.494399999999815e-05, 4.480599999999793e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.439" endtime="20201115 23:02:08.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.434" endtime="20201115 23:02:08.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.444" endtime="20201115 23:02:08.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.447" endtime="20201115 23:02:08.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.446" endtime="20201115 23:02:08.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.442" endtime="20201115 23:02:08.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.077" endtime="20201115 23:02:08.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.076" endtime="20201115 23:02:08.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.075" endtime="20201115 23:02:08.468"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.471" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.480" endtime="20201115 23:02:08.497"></status>
</kw>
<msg timestamp="20201115 23:02:08.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.478" endtime="20201115 23:02:08.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.498" endtime="20201115 23:02:08.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.501" endtime="20201115 23:02:08.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.475" endtime="20201115 23:02:08.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.473" endtime="20201115 23:02:08.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.510" endtime="20201115 23:02:08.796"></status>
</kw>
<msg timestamp="20201115 23:02:08.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025433069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025478875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.508" endtime="20201115 23:02:08.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025433069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025478875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.800" endtime="20201115 23:02:08.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.808" endtime="20201115 23:02:08.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.505" endtime="20201115 23:02:08.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.504" endtime="20201115 23:02:08.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.815" level="INFO">${RESULT} = [{'time': 0.025478875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.58060000000024e-05, 'source_diff': 4.58060000000024e-05}, {'time': 0.025525861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:08.812" endtime="20201115 23:02:08.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.828" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:08.816" endtime="20201115 23:02:08.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.833" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.832" endtime="20201115 23:02:08.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.835" level="INFO">VALUE: [4.58060000000024e-05, 4.5416999999998986e-05, 4.595799999999872e-05, 4.5403000000002885e-05, 4.625000000000115e-05, 4.5931000000002525e-05, 4.5916999999999486e-05, 4.5402999999999416e-05, 4.6153000000000166e-05, 4.5388999999999846e-05, 4.556999999999825e-05, 4.555600000000215e-05, 4.583399999999807e-05, 4.58199999999985e-05, 4.5639000000000096e-05, 4.533399999999757e-05, 4.582000000000197e-05, 4.547200000000126e-05, 4.582000000000197e-05, 4.6083000000002317e-05, 4.536099999999724e-05, 4.606999999999875e-05, 4.540199999999994e-05, 4.598600000000133e-05, 4.575000000000065e-05, 4.517999999999883e-05, 4.5597000000001386e-05, 4.576400000000022e-05, 4.611099999999799e-05, 4.548600000000083e-05, 4.599999999999743e-05, 4.5639000000000096e-05, 4.6111000000001456e-05, 4.586099999999774e-05, 4.555500000000268e-05, 4.598600000000133e-05, 4.53329999999981e-05, 4.6111000000001456e-05, 4.586099999999774e-05, 4.5666999999999236e-05, 4.6166999999999736e-05, 4.609699999999842e-05, 4.5695000000001845e-05, 4.558299999999835e-05, 4.599999999999743e-05, 4.5652999999999666e-05, 4.579199999999936e-05, 4.5487000000000305e-05, 4.5667000000002705e-05, 4.545799999999822e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.834" endtime="20201115 23:02:08.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.829" endtime="20201115 23:02:08.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.839" endtime="20201115 23:02:08.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.842" endtime="20201115 23:02:08.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.840" endtime="20201115 23:02:08.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.837" endtime="20201115 23:02:08.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.471" endtime="20201115 23:02:08.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.470" endtime="20201115 23:02:08.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.469" endtime="20201115 23:02:08.863"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.866" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.874" endtime="20201115 23:02:08.891"></status>
</kw>
<msg timestamp="20201115 23:02:08.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.873" endtime="20201115 23:02:08.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.892" endtime="20201115 23:02:08.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.895" endtime="20201115 23:02:08.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.870" endtime="20201115 23:02:08.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.868" endtime="20201115 23:02:08.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.904" endtime="20201115 23:02:09.189"></status>
</kw>
<msg timestamp="20201115 23:02:09.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024251486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024298319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.902" endtime="20201115 23:02:09.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024251486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024298319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.193" endtime="20201115 23:02:09.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.202" endtime="20201115 23:02:09.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.900" endtime="20201115 23:02:09.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.898" endtime="20201115 23:02:09.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.208" level="INFO">${RESULT} = [{'time': 0.024298319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.68329999999996e-05, 'source_diff': 4.68329999999996e-05}, {'time': 0.024348319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:09.205" endtime="20201115 23:02:09.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.222" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:09.209" endtime="20201115 23:02:09.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.226" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.225" endtime="20201115 23:02:09.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.229" level="INFO">VALUE: [4.68329999999996e-05, 4.655500000000021e-05, 4.656999999999925e-05, 4.680500000000046e-05, 4.693000000000058e-05, 4.630499999999996e-05, 4.713799999999865e-05, 4.68329999999996e-05, 4.644399999999965e-05, 4.68329999999996e-05, 4.667999999999686e-05, 4.627799999999682e-05, 4.718000000000083e-05, 4.658299999999935e-05, 4.652800000000054e-05, 4.652800000000054e-05, 4.6583000000002817e-05, 4.6903000000000916e-05, 4.651400000000097e-05, 4.626400000000072e-05, 4.711099999999899e-05, 4.6917000000000486e-05, 4.7195000000003345e-05, 4.658299999999935e-05, 4.6403000000000416e-05, 4.7167000000000736e-05, 4.66529999999972e-05, 4.627800000000029e-05, 4.65139999999975e-05, 4.708399999999932e-05, 4.6445000000002595e-05, 4.7167000000000736e-05, 4.6708999999998946e-05, 4.640299999999695e-05, 4.6847000000002637e-05, 4.629100000000039e-05, 4.643000000000008e-05, 4.637499999999781e-05, 4.645799999999922e-05, 4.716699999999727e-05, 4.720799999999997e-05, 4.649999999999793e-05, 4.686099999999874e-05, 4.7125000000002026e-05, 4.709699999999942e-05, 4.6917000000000486e-05, 4.6653000000000666e-05, 4.654200000000011e-05, 4.6903000000000916e-05, 4.643000000000008e-05]</msg>
<status status="PASS" starttime="20201115 23:02:09.227" endtime="20201115 23:02:09.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.223" endtime="20201115 23:02:09.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.232" endtime="20201115 23:02:09.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.236" endtime="20201115 23:02:09.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.234" endtime="20201115 23:02:09.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.231" endtime="20201115 23:02:09.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.866" endtime="20201115 23:02:09.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.865" endtime="20201115 23:02:09.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.864" endtime="20201115 23:02:09.257"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.259" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.268" endtime="20201115 23:02:09.284"></status>
</kw>
<msg timestamp="20201115 23:02:09.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.266" endtime="20201115 23:02:09.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.285" endtime="20201115 23:02:09.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.288" endtime="20201115 23:02:09.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.263" endtime="20201115 23:02:09.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.261" endtime="20201115 23:02:09.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.297" endtime="20201115 23:02:09.583"></status>
</kw>
<msg timestamp="20201115 23:02:09.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024363389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.295" endtime="20201115 23:02:09.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024363389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.587" endtime="20201115 23:02:09.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.596" endtime="20201115 23:02:09.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.293" endtime="20201115 23:02:09.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.291" endtime="20201115 23:02:09.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.603" level="INFO">${RESULT} = [{'time': 0.024363389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.798599999999986e-05, 'source_diff': 4.798599999999986e-05}, {'time': 0.024413403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:09.600" endtime="20201115 23:02:09.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.618" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:09.604" endtime="20201115 23:02:09.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.623" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.622" endtime="20201115 23:02:09.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.626" level="INFO">VALUE: [4.798599999999986e-05, 4.723599999999911e-05, 4.78330000000006e-05, 4.8181000000001306e-05, 4.7389000000001846e-05, 4.788899999999888e-05, 4.738899999999838e-05, 4.7389000000001846e-05, 4.804200000000161e-05, 4.727699999999835e-05, 4.773599999999961e-05, 4.7986999999999336e-05, 4.799999999999943e-05, 4.776400000000222e-05, 4.793099999999759e-05, 4.730500000000096e-05, 4.805499999999824e-05, 4.755500000000121e-05, 4.756899999999731e-05, 4.797200000000029e-05, 4.774999999999918e-05, 4.727700000000182e-05, 4.78200000000005e-05, 4.727800000000129e-05, 4.730500000000096e-05, 4.749999999999893e-05, 4.820800000000097e-05, 4.730500000000096e-05, 4.7653000000001666e-05, 4.78330000000006e-05, 4.813899999999913e-05, 4.8181000000001306e-05, 4.78330000000006e-05, 4.811099999999999e-05, 4.7681000000000806e-05, 4.740200000000194e-05, 4.811099999999999e-05, 4.777799999999832e-05, 4.816699999999827e-05, 4.758399999999982e-05, 4.775000000000265e-05, 4.751400000000197e-05, 4.81940000000014e-05, 4.729199999999739e-05, 4.7723000000002985e-05, 4.794399999999768e-05, 4.816599999999879e-05, 4.758399999999982e-05, 4.757000000000025e-05, 4.805499999999824e-05]</msg>
<status status="PASS" starttime="20201115 23:02:09.624" endtime="20201115 23:02:09.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.619" endtime="20201115 23:02:09.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.629" endtime="20201115 23:02:09.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.633" endtime="20201115 23:02:09.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.631" endtime="20201115 23:02:09.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.627" endtime="20201115 23:02:09.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.260" endtime="20201115 23:02:09.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.258" endtime="20201115 23:02:09.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.257" endtime="20201115 23:02:09.654"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.656" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.664" endtime="20201115 23:02:09.681"></status>
</kw>
<msg timestamp="20201115 23:02:09.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.663" endtime="20201115 23:02:09.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.683" endtime="20201115 23:02:09.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.685" endtime="20201115 23:02:09.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.660" endtime="20201115 23:02:09.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.658" endtime="20201115 23:02:09.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.694" endtime="20201115 23:02:09.980"></status>
</kw>
<msg timestamp="20201115 23:02:09.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024305097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024353903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.693" endtime="20201115 23:02:09.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024305097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024353903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.984" endtime="20201115 23:02:09.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.992" endtime="20201115 23:02:09.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.690" endtime="20201115 23:02:09.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.688" endtime="20201115 23:02:09.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.999" level="INFO">${RESULT} = [{'time': 0.024353903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.880599999999846e-05, 'source_diff': 4.880599999999846e-05}, {'time': 0.024411889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:09.996" endtime="20201115 23:02:09.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.013" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:10.001" endtime="20201115 23:02:10.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.018" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.017" endtime="20201115 23:02:10.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.020" level="INFO">VALUE: [4.880599999999846e-05, 4.888899999999988e-05, 4.888899999999988e-05, 4.8972999999997296e-05, 4.837499999999981e-05, 4.8723000000000516e-05, 4.927799999999982e-05, 4.833400000000057e-05, 4.849999999999993e-05, 4.876399999999975e-05, 4.880600000000193e-05, 4.827800000000229e-05, 4.858299999999788e-05, 4.912500000000056e-05, 4.909700000000142e-05, 4.905499999999924e-05, 4.854100000000264e-05, 4.886100000000074e-05, 4.83330000000011e-05, 4.86529999999992e-05, 4.887500000000031e-05, 4.854199999999864e-05, 4.880599999999846e-05, 4.830600000000143e-05, 4.890299999999945e-05, 4.869399999999843e-05, 4.916699999999927e-05, 4.884700000000117e-05, 4.904199999999914e-05, 4.836100000000024e-05, 4.879199999999889e-05, 4.824999999999968e-05, 4.845800000000122e-05, 4.847200000000079e-05, 4.873600000000061e-05, 4.9014e-05, 4.916699999999927e-05, 4.849999999999993e-05, 4.900000000000043e-05, 4.916699999999927e-05, 4.916599999999979e-05, 4.86529999999992e-05, 4.858299999999788e-05, 4.911099999999752e-05, 4.908300000000185e-05, 4.85139999999995e-05, 4.875000000000018e-05, 4.823600000000011e-05, 4.88330000000016e-05, 4.829199999999839e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.019" endtime="20201115 23:02:10.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.014" endtime="20201115 23:02:10.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.023" endtime="20201115 23:02:10.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.027" endtime="20201115 23:02:10.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.025" endtime="20201115 23:02:10.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.022" endtime="20201115 23:02:10.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.657" endtime="20201115 23:02:10.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.655" endtime="20201115 23:02:10.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.654" endtime="20201115 23:02:10.048"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.050" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.058" endtime="20201115 23:02:10.075"></status>
</kw>
<msg timestamp="20201115 23:02:10.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.057" endtime="20201115 23:02:10.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.077" endtime="20201115 23:02:10.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.079" endtime="20201115 23:02:10.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.054" endtime="20201115 23:02:10.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.052" endtime="20201115 23:02:10.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.088" endtime="20201115 23:02:10.374"></status>
</kw>
<msg timestamp="20201115 23:02:10.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024294639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024344097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.087" endtime="20201115 23:02:10.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024294639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024344097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.378" endtime="20201115 23:02:10.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.387" endtime="20201115 23:02:10.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.084" endtime="20201115 23:02:10.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.082" endtime="20201115 23:02:10.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.394" level="INFO">${RESULT} = [{'time': 0.024344097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.945799999999875e-05, 'source_diff': 4.945799999999875e-05}, {'time': 0.024397139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:10.390" endtime="20201115 23:02:10.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.407" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:10.395" endtime="20201115 23:02:10.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.412" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.411" endtime="20201115 23:02:10.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.414" level="INFO">VALUE: [4.945799999999875e-05, 4.930600000000243e-05, 4.938900000000038e-05, 4.966600000000029e-05, 4.952800000000007e-05, 4.993000000000011e-05, 4.947200000000179e-05, 5.001399999999753e-05, 4.958299999999888e-05, 4.955599999999921e-05, 5.022199999999907e-05, 4.956900000000278e-05, 5.004200000000014e-05, 4.972200000000204e-05, 4.991700000000002e-05, 5.013899999999766e-05, 5.004100000000067e-05, 4.998599999999839e-05, 4.9736999999997616e-05, 4.9320000000002e-05, 4.959800000000139e-05, 4.96530000000002e-05, 4.961100000000149e-05, 4.972199999999857e-05, 4.976400000000075e-05, 4.988900000000088e-05, 4.954100000000017e-05, 4.976299999999781e-05, 4.9388000000000903e-05, 5.000000000000143e-05, 5.0165999999997324e-05, 4.923600000000111e-05, 4.936100000000124e-05, 4.940299999999995e-05, 5.013900000000113e-05, 4.987500000000131e-05, 4.991700000000002e-05, 4.963900000000063e-05, 4.999999999999796e-05, 4.945799999999875e-05, 4.963900000000063e-05, 4.934700000000167e-05, 5.02079999999995e-05, 4.9195000000001876e-05, 4.940299999999995e-05, 4.9473000000001266e-05, 5.012500000000156e-05, 4.922199999999807e-05, 4.961099999999802e-05, 4.969499999999891e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.413" endtime="20201115 23:02:10.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.408" endtime="20201115 23:02:10.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.417" endtime="20201115 23:02:10.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.421" endtime="20201115 23:02:10.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.419" endtime="20201115 23:02:10.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.416" endtime="20201115 23:02:10.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.051" endtime="20201115 23:02:10.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.049" endtime="20201115 23:02:10.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.048" endtime="20201115 23:02:10.442"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.444" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.453" endtime="20201115 23:02:10.469"></status>
</kw>
<msg timestamp="20201115 23:02:10.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.451" endtime="20201115 23:02:10.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.470" endtime="20201115 23:02:10.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.473" endtime="20201115 23:02:10.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.448" endtime="20201115 23:02:10.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.446" endtime="20201115 23:02:10.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.483" endtime="20201115 23:02:10.770"></status>
</kw>
<msg timestamp="20201115 23:02:10.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024269278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024320208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.481" endtime="20201115 23:02:10.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024269278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024320208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.774" endtime="20201115 23:02:10.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.782" endtime="20201115 23:02:10.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.478" endtime="20201115 23:02:10.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.476" endtime="20201115 23:02:10.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.789" level="INFO">${RESULT} = [{'time': 0.024320208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.093000000000111e-05, 'source_diff': 5.093000000000111e-05}, {'time': 0.024372236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:10.786" endtime="20201115 23:02:10.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.802" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:10.790" endtime="20201115 23:02:10.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.807" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.806" endtime="20201115 23:02:10.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.809" level="INFO">VALUE: [5.093000000000111e-05, 5.0429999999997144e-05, 5.09729999999993e-05, 5.0693999999996964e-05, 5.097199999999982e-05, 5.077800000000132e-05, 5.058299999999988e-05, 5.079199999999742e-05, 5.109699999999995e-05, 5.040300000000095e-05, 5.105599999999724e-05, 5.043100000000009e-05, 5.058299999999988e-05, 5.043100000000009e-05, 5.066700000000077e-05, 5.065299999999773e-05, 5.093100000000059e-05, 5.052800000000107e-05, 5.03339999999991e-05, 5.0209000000002446e-05, 5.048599999999889e-05, 5.074999999999871e-05, 5.043100000000009e-05, 5.079099999999795e-05, 5.030599999999996e-05, 5.10270000000021e-05, 5.122200000000007e-05, 5.012499999999809e-05, 5.1151999999998754e-05, 5.113900000000213e-05, 5.069400000000043e-05, 5.056900000000031e-05, 5.079099999999795e-05, 5.040299999999748e-05, 5.055500000000074e-05, 5.0929999999997644e-05, 5.083300000000013e-05, 5.047199999999932e-05, 5.1014000000002e-05, 5.0708e-05, 5.063900000000163e-05, 5.05140000000015e-05, 5.052800000000107e-05, 5.027800000000082e-05, 5.031999999999953e-05, 5.084799999999917e-05, 5.099999999999896e-05, 5.041700000000052e-05, 5.095899999999973e-05, 5.119500000000041e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.808" endtime="20201115 23:02:10.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.803" endtime="20201115 23:02:10.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.813" endtime="20201115 23:02:10.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.816" endtime="20201115 23:02:10.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.814" endtime="20201115 23:02:10.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.811" endtime="20201115 23:02:10.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.445" endtime="20201115 23:02:10.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.443" endtime="20201115 23:02:10.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.442" endtime="20201115 23:02:10.837"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.840" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.848" endtime="20201115 23:02:10.866"></status>
</kw>
<msg timestamp="20201115 23:02:10.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.846" endtime="20201115 23:02:10.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.868" endtime="20201115 23:02:10.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.871" endtime="20201115 23:02:10.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.844" endtime="20201115 23:02:10.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.842" endtime="20201115 23:02:10.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.880" endtime="20201115 23:02:11.167"></status>
</kw>
<msg timestamp="20201115 23:02:11.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024595722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024647639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.878" endtime="20201115 23:02:11.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024595722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024647639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.171" endtime="20201115 23:02:11.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.180" endtime="20201115 23:02:11.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.876" endtime="20201115 23:02:11.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.874" endtime="20201115 23:02:11.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.186" level="INFO">${RESULT} = [{'time': 0.024647639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.191699999999855e-05, 'source_diff': 5.191699999999855e-05}, {'time': 0.024708653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:11.183" endtime="20201115 23:02:11.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.201" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:11.187" endtime="20201115 23:02:11.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.206" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.205" endtime="20201115 23:02:11.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.208" level="INFO">VALUE: [5.191699999999855e-05, 5.216700000000227e-05, 5.18470000000007e-05, 5.169499999999744e-05, 5.218100000000184e-05, 5.122299999999955e-05, 5.204200000000214e-05, 5.19730000000003e-05, 5.157000000000078e-05, 5.15279999999986e-05, 5.158300000000088e-05, 5.161100000000002e-05, 5.174999999999971e-05, 5.187499999999984e-05, 5.1415999999998574e-05, 5.213899999999966e-05, 5.183300000000113e-05, 5.136099999999977e-05, 5.163899999999916e-05, 5.131899999999759e-05, 5.2179999999998894e-05, 5.191700000000202e-05, 5.199999999999996e-05, 5.213899999999966e-05, 5.218100000000184e-05, 5.134699999999673e-05, 5.151399999999903e-05, 5.140300000000195e-05, 5.197200000000082e-05, 5.176400000000275e-05, 5.159699999999698e-05, 5.151399999999903e-05, 5.177799999999885e-05, 5.149999999999946e-05, 5.136200000000271e-05, 5.1651999999999254e-05, 5.14729999999998e-05, 5.154199999999817e-05, 5.2165999999999324e-05, 5.1401999999999004e-05, 5.1957999999997784e-05, 5.176299999999981e-05, 5.180500000000199e-05, 5.158300000000088e-05, 5.212500000000009e-05, 5.162499999999959e-05, 5.15140000000025e-05, 5.213899999999966e-05, 5.222200000000107e-05, 5.209700000000095e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.207" endtime="20201115 23:02:11.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.202" endtime="20201115 23:02:11.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.211" endtime="20201115 23:02:11.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.215" endtime="20201115 23:02:11.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.213" endtime="20201115 23:02:11.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.210" endtime="20201115 23:02:11.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.840" endtime="20201115 23:02:11.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.838" endtime="20201115 23:02:11.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.838" endtime="20201115 23:02:11.236"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.238" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.247" endtime="20201115 23:02:11.264"></status>
</kw>
<msg timestamp="20201115 23:02:11.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.245" endtime="20201115 23:02:11.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.265" endtime="20201115 23:02:11.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.268" endtime="20201115 23:02:11.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.242" endtime="20201115 23:02:11.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.240" endtime="20201115 23:02:11.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.277" endtime="20201115 23:02:11.562"></status>
</kw>
<msg timestamp="20201115 23:02:11.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024817361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024870292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.275" endtime="20201115 23:02:11.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024817361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024870292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.566" endtime="20201115 23:02:11.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.574" endtime="20201115 23:02:11.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.273" endtime="20201115 23:02:11.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.271" endtime="20201115 23:02:11.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.581" level="INFO">${RESULT} = [{'time': 0.024870292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.293099999999912e-05, 'source_diff': 5.293099999999912e-05}, {'time': 0.024932306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:11.578" endtime="20201115 23:02:11.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.594" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:11.582" endtime="20201115 23:02:11.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.599" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.598" endtime="20201115 23:02:11.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.601" level="INFO">VALUE: [5.293099999999912e-05, 5.275000000000071e-05, 5.234800000000067e-05, 5.266700000000277e-05, 5.2679999999999394e-05, 5.315300000000023e-05, 5.305499999999977e-05, 5.284699999999823e-05, 5.256899999999884e-05, 5.227699999999988e-05, 5.273600000000114e-05, 5.240299999999948e-05, 5.305499999999977e-05, 5.273600000000114e-05, 5.28470000000017e-05, 5.251400000000003e-05, 5.2707999999998534e-05, 5.225000000000021e-05, 5.308299999999891e-05, 5.230599999999849e-05, 5.226399999999978e-05, 5.290299999999998e-05, 5.30280000000001e-05, 5.305599999999924e-05, 5.315300000000023e-05, 5.261100000000102e-05, 5.287500000000084e-05, 5.318099999999937e-05, 5.270900000000148e-05, 5.30280000000001e-05, 5.298700000000087e-05, 5.254199999999917e-05, 5.305499999999977e-05, 5.279099999999995e-05, 5.251300000000056e-05, 5.2665999999999824e-05, 5.2721999999998104e-05, 5.275000000000071e-05, 5.2916000000000074e-05, 5.2679999999999394e-05, 5.315300000000023e-05, 5.280500000000299e-05, 5.237500000000034e-05, 5.294400000000268e-05, 5.313900000000066e-05, 5.2763999999996813e-05, 5.2693999999998964e-05, 5.2943999999999214e-05, 5.241699999999905e-05, 5.243100000000209e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.600" endtime="20201115 23:02:11.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.595" endtime="20201115 23:02:11.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.605" endtime="20201115 23:02:11.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.608" endtime="20201115 23:02:11.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.606" endtime="20201115 23:02:11.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.603" endtime="20201115 23:02:11.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.239" endtime="20201115 23:02:11.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.237" endtime="20201115 23:02:11.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.236" endtime="20201115 23:02:11.630"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.633" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.641" endtime="20201115 23:02:11.659"></status>
</kw>
<msg timestamp="20201115 23:02:11.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.640" endtime="20201115 23:02:11.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.660" endtime="20201115 23:02:11.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.662" endtime="20201115 23:02:11.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.637" endtime="20201115 23:02:11.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.635" endtime="20201115 23:02:11.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.672" endtime="20201115 23:02:11.958"></status>
</kw>
<msg timestamp="20201115 23:02:11.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025939903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025993528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.670" endtime="20201115 23:02:11.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025939903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025993528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.962" endtime="20201115 23:02:11.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.971" endtime="20201115 23:02:11.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.668" endtime="20201115 23:02:11.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.666" endtime="20201115 23:02:11.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.977" level="INFO">${RESULT} = [{'time': 0.025993528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.362499999999812e-05, 'source_diff': 5.362499999999812e-05}, {'time': 0.026056556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:11.974" endtime="20201115 23:02:11.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.991" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:11.978" endtime="20201115 23:02:11.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.995" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.994" endtime="20201115 23:02:11.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.998" level="INFO">VALUE: [5.362499999999812e-05, 5.391700000000055e-05, 5.418100000000037e-05, 5.35280000000006e-05, 5.38340000000026e-05, 5.340300000000048e-05, 5.426400000000178e-05, 5.375000000000171e-05, 5.338900000000091e-05, 5.331999999999906e-05, 5.4194000000000464e-05, 5.411100000000252e-05, 5.402699999999816e-05, 5.359699999999898e-05, 5.387499999999837e-05, 5.359699999999898e-05, 5.362499999999812e-05, 5.325000000000121e-05, 5.33470000000022e-05, 5.38609999999988e-05, 5.3221999999998604e-05, 5.340300000000048e-05, 5.379200000000042e-05, 5.351400000000103e-05, 5.411099999999905e-05, 5.337499999999787e-05, 5.358400000000235e-05, 5.38609999999988e-05, 5.390300000000098e-05, 5.408399999999938e-05, 5.341700000000005e-05, 5.387500000000184e-05, 5.3666000000000824e-05, 5.348600000000189e-05, 5.39730000000023e-05, 5.330599999999949e-05, 5.336200000000124e-05, 5.326400000000078e-05, 5.3402000000001004e-05, 5.336100000000177e-05, 5.326299999999784e-05, 5.409699999999948e-05, 5.401400000000153e-05, 5.327700000000088e-05, 5.3707999999999534e-05, 5.373600000000214e-05, 5.359699999999898e-05, 5.327800000000035e-05, 5.340300000000048e-05, 5.405500000000077e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.996" endtime="20201115 23:02:11.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.991" endtime="20201115 23:02:11.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.001" endtime="20201115 23:02:12.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.005" endtime="20201115 23:02:12.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.003" endtime="20201115 23:02:12.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.000" endtime="20201115 23:02:12.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.633" endtime="20201115 23:02:12.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.631" endtime="20201115 23:02:12.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.630" endtime="20201115 23:02:12.026"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.028" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.036" endtime="20201115 23:02:12.054"></status>
</kw>
<msg timestamp="20201115 23:02:12.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.035" endtime="20201115 23:02:12.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.055" endtime="20201115 23:02:12.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.058" endtime="20201115 23:02:12.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.032" endtime="20201115 23:02:12.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.030" endtime="20201115 23:02:12.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.067" endtime="20201115 23:02:12.354"></status>
</kw>
<msg timestamp="20201115 23:02:12.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024237444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024292014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.065" endtime="20201115 23:02:12.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024237444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024292014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.358" endtime="20201115 23:02:12.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.366" endtime="20201115 23:02:12.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.063" endtime="20201115 23:02:12.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.061" endtime="20201115 23:02:12.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.373" level="INFO">${RESULT} = [{'time': 0.024292014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.457000000000031e-05, 'source_diff': 5.457000000000031e-05}, {'time': 0.024350014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:12.370" endtime="20201115 23:02:12.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.386" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:12.374" endtime="20201115 23:02:12.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.391" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.390" endtime="20201115 23:02:12.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.394" level="INFO">VALUE: [5.457000000000031e-05, 5.4249999999998744e-05, 5.466699999999783e-05, 5.4943999999997745e-05, 5.505600000000124e-05, 5.458399999999988e-05, 5.504200000000167e-05, 5.459800000000292e-05, 5.44730000000028e-05, 5.511200000000299e-05, 5.5194000000001464e-05, 5.4999999999999494e-05, 5.4416000000001574e-05, 5.462499999999912e-05, 5.48609999999998e-05, 5.4652000000002254e-05, 5.461099999999955e-05, 5.4249999999998744e-05, 5.461099999999955e-05, 5.4444000000000714e-05, 5.505500000000177e-05, 5.429200000000092e-05, 5.4972000000000354e-05, 5.513899999999919e-05, 5.479200000000142e-05, 5.4791999999997953e-05, 5.430600000000049e-05, 5.427800000000135e-05, 5.436100000000277e-05, 5.4208000000000034e-05, 5.5236000000000174e-05, 5.488900000000241e-05, 5.4415999999998105e-05, 5.513899999999919e-05, 5.448600000000289e-05, 5.488899999999894e-05, 5.491699999999808e-05, 5.433399999999963e-05, 5.505600000000124e-05, 5.4444000000000714e-05, 5.4680000000001394e-05, 5.4999999999999494e-05, 5.488899999999894e-05, 5.4999999999999494e-05, 5.458299999999694e-05, 5.462499999999912e-05, 5.527800000000235e-05, 5.4999999999999494e-05, 5.4916000000002074e-05, 5.4708000000000534e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.392" endtime="20201115 23:02:12.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.387" endtime="20201115 23:02:12.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.397" endtime="20201115 23:02:12.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.401" endtime="20201115 23:02:12.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.399" endtime="20201115 23:02:12.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.395" endtime="20201115 23:02:12.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.029" endtime="20201115 23:02:12.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.027" endtime="20201115 23:02:12.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.026" endtime="20201115 23:02:12.422"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.424" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.433" endtime="20201115 23:02:12.449"></status>
</kw>
<msg timestamp="20201115 23:02:12.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.431" endtime="20201115 23:02:12.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.450" endtime="20201115 23:02:12.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.453" endtime="20201115 23:02:12.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.428" endtime="20201115 23:02:12.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.426" endtime="20201115 23:02:12.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.462" endtime="20201115 23:02:12.750"></status>
</kw>
<msg timestamp="20201115 23:02:12.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024202319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024257931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.460" endtime="20201115 23:02:12.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024202319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024257931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.755" endtime="20201115 23:02:12.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.763" endtime="20201115 23:02:12.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.458" endtime="20201115 23:02:12.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.456" endtime="20201115 23:02:12.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.770" level="INFO">${RESULT} = [{'time': 0.024257931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.561200000000002e-05, 'source_diff': 5.561200000000002e-05}, {'time': 0.024314931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:12.766" endtime="20201115 23:02:12.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.785" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:12.771" endtime="20201115 23:02:12.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.789" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.788" endtime="20201115 23:02:12.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.792" level="INFO">VALUE: [5.561200000000002e-05, 5.541700000000205e-05, 5.53610000000003e-05, 5.6152000000000285e-05, 5.551300000000009e-05, 5.558300000000141e-05, 5.5929999999999175e-05, 5.538899999999944e-05, 5.5665999999999355e-05, 5.5986000000000924e-05, 5.6027999999999634e-05, 5.58610000000008e-05, 5.5986000000000924e-05, 5.6027999999999634e-05, 5.537499999999987e-05, 5.556899999999837e-05, 5.529200000000192e-05, 5.5471999999997385e-05, 5.60549999999993e-05, 5.561099999999708e-05, 5.590299999999951e-05, 5.595900000000126e-05, 5.593099999999865e-05, 5.551400000000303e-05, 5.577800000000285e-05, 5.6027999999999634e-05, 5.6179999999999425e-05, 5.611100000000105e-05, 5.562500000000012e-05, 5.58480000000007e-05, 5.5930000000002644e-05, 5.5458000000001284e-05, 5.5972000000001354e-05, 5.5665999999999355e-05, 5.5499999999999994e-05, 5.527800000000235e-05, 5.5750000000000244e-05, 5.5527999999999134e-05, 5.5443999999998245e-05, 5.531899999999812e-05, 5.6180000000002894e-05, 5.612499999999715e-05, 5.541699999999858e-05, 5.581900000000209e-05, 5.5457999999997815e-05, 5.530600000000149e-05, 5.55280000000026e-05, 5.611100000000105e-05, 5.591699999999908e-05, 5.615299999999976e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.791" endtime="20201115 23:02:12.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.786" endtime="20201115 23:02:12.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.795" endtime="20201115 23:02:12.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.798" endtime="20201115 23:02:12.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.797" endtime="20201115 23:02:12.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.793" endtime="20201115 23:02:12.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.425" endtime="20201115 23:02:12.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.423" endtime="20201115 23:02:12.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.422" endtime="20201115 23:02:12.820"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.822" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.830" endtime="20201115 23:02:12.848"></status>
</kw>
<msg timestamp="20201115 23:02:12.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.829" endtime="20201115 23:02:12.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.849" endtime="20201115 23:02:12.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.852" endtime="20201115 23:02:12.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.826" endtime="20201115 23:02:12.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.824" endtime="20201115 23:02:12.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.861" endtime="20201115 23:02:13.148"></status>
</kw>
<msg timestamp="20201115 23:02:13.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024273097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024329903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.859" endtime="20201115 23:02:13.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024273097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024329903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.152" endtime="20201115 23:02:13.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.161" endtime="20201115 23:02:13.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.857" endtime="20201115 23:02:13.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.855" endtime="20201115 23:02:13.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.167" level="INFO">${RESULT} = [{'time': 0.024329903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6805999999999524e-05, 'source_diff': 5.6805999999999524e-05}, {'time': 0.024390931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:13.164" endtime="20201115 23:02:13.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.181" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:13.168" endtime="20201115 23:02:13.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.185" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.184" endtime="20201115 23:02:13.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.188" level="INFO">VALUE: [5.6805999999999524e-05, 5.688900000000094e-05, 5.6416000000000105e-05, 5.7055999999999774e-05, 5.7042000000000204e-05, 5.6791999999999954e-05, 5.683400000000213e-05, 5.711199999999805e-05, 5.687500000000137e-05, 5.686099999999833e-05, 5.654100000000023e-05, 5.716700000000033e-05, 5.6693999999999495e-05, 5.711100000000205e-05, 5.656899999999937e-05, 5.6679999999999925e-05, 5.6791999999999954e-05, 5.6277999999999884e-05, 5.6791999999999954e-05, 5.6264000000000314e-05, 5.6471999999998385e-05, 5.659700000000198e-05, 5.641700000000305e-05, 5.716699999999686e-05, 5.716699999999686e-05, 5.666699999999983e-05, 5.6763999999997344e-05, 5.711100000000205e-05, 5.6985999999998455e-05, 5.634799999999773e-05, 5.693100000000312e-05, 5.7013999999997594e-05, 5.6528000000000134e-05, 5.6485999999997955e-05, 5.665300000000026e-05, 5.706899999999987e-05, 5.683299999999919e-05, 5.632000000000206e-05, 5.6402000000000535e-05, 5.7028000000000634e-05, 5.6569999999998843e-05, 5.7069999999999343e-05, 5.662499999999765e-05, 5.630499999999955e-05, 5.6250000000000744e-05, 5.720899999999904e-05, 5.683299999999919e-05, 5.6541999999999704e-05, 5.7028000000000634e-05, 5.661099999999808e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.186" endtime="20201115 23:02:13.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.182" endtime="20201115 23:02:13.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.191" endtime="20201115 23:02:13.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.194" endtime="20201115 23:02:13.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.193" endtime="20201115 23:02:13.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.189" endtime="20201115 23:02:13.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.823" endtime="20201115 23:02:13.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.821" endtime="20201115 23:02:13.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.820" endtime="20201115 23:02:13.215"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.218" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.226" endtime="20201115 23:02:13.244"></status>
</kw>
<msg timestamp="20201115 23:02:13.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.225" endtime="20201115 23:02:13.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.245" endtime="20201115 23:02:13.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.248" endtime="20201115 23:02:13.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.222" endtime="20201115 23:02:13.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.220" endtime="20201115 23:02:13.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.257" endtime="20201115 23:02:13.543"></status>
</kw>
<msg timestamp="20201115 23:02:13.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024424111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024482069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.255" endtime="20201115 23:02:13.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024424111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024482069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.547" endtime="20201115 23:02:13.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.555" endtime="20201115 23:02:13.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.253" endtime="20201115 23:02:13.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.251" endtime="20201115 23:02:13.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.562" level="INFO">${RESULT} = [{'time': 0.024482069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7958000000000315e-05, 'source_diff': 5.7958000000000315e-05}, {'time': 0.024548139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:13.559" endtime="20201115 23:02:13.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.575" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:13.563" endtime="20201115 23:02:13.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.580" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.579" endtime="20201115 23:02:13.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.582" level="INFO">VALUE: [5.7958000000000315e-05, 5.7721999999999635e-05, 5.7721999999999635e-05, 5.812499999999915e-05, 5.815300000000176e-05, 5.8013999999998594e-05, 5.8235999999999705e-05, 5.7222000000002604e-05, 5.78749999999989e-05, 5.822299999999961e-05, 5.790300000000151e-05, 5.7999999999999025e-05, 5.8194000000000995e-05, 5.812500000000262e-05, 5.791700000000108e-05, 5.745900000000276e-05, 5.8027999999998164e-05, 5.7250000000001744e-05, 5.7556000000000274e-05, 5.7486000000002424e-05, 5.815300000000176e-05, 5.811200000000252e-05, 5.73749999999984e-05, 5.766700000000083e-05, 5.737500000000187e-05, 5.804099999999826e-05, 5.762499999999865e-05, 5.777699999999844e-05, 5.812499999999915e-05, 5.80689999999974e-05, 5.759699999999951e-05, 5.7930000000001175e-05, 5.7694000000000495e-05, 5.78749999999989e-05, 5.780499999999758e-05, 5.7721999999999635e-05, 5.794500000000022e-05, 5.815300000000176e-05, 5.7777999999997914e-05, 5.7708000000000065e-05, 5.8041999999997734e-05, 5.763900000000169e-05, 5.7471999999999385e-05, 5.786099999999933e-05, 5.7971999999999885e-05, 5.795899999999979e-05, 5.794500000000022e-05, 5.8000000000002494e-05, 5.7806000000000524e-05, 5.726299999999837e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.581" endtime="20201115 23:02:13.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.576" endtime="20201115 23:02:13.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.585" endtime="20201115 23:02:13.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.589" endtime="20201115 23:02:13.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.587" endtime="20201115 23:02:13.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.584" endtime="20201115 23:02:13.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.218" endtime="20201115 23:02:13.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.217" endtime="20201115 23:02:13.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.216" endtime="20201115 23:02:13.610"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.612" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.621" endtime="20201115 23:02:13.638"></status>
</kw>
<msg timestamp="20201115 23:02:13.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.619" endtime="20201115 23:02:13.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.639" endtime="20201115 23:02:13.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.646" endtime="20201115 23:02:13.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.617" endtime="20201115 23:02:13.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.614" endtime="20201115 23:02:13.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.656" endtime="20201115 23:02:13.943"></status>
</kw>
<msg timestamp="20201115 23:02:13.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02443175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024490819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:13.654" endtime="20201115 23:02:13.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02443175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024490819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:13.947" endtime="20201115 23:02:13.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.955" endtime="20201115 23:02:13.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.651" endtime="20201115 23:02:13.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.649" endtime="20201115 23:02:13.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.962" level="INFO">${RESULT} = [{'time': 0.024490819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.906900000000187e-05, 'source_diff': 5.906900000000187e-05}, {'time': 0.024556819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:13.959" endtime="20201115 23:02:13.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.975" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:13.963" endtime="20201115 23:02:13.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.980" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.979" endtime="20201115 23:02:13.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.982" level="INFO">VALUE: [5.906900000000187e-05, 5.8915999999999136e-05, 5.8749999999999775e-05, 5.912500000000015e-05, 5.8430000000001675e-05, 5.834700000000026e-05, 5.9194000000001995e-05, 5.8986000000000455e-05, 5.9194000000001995e-05, 5.890300000000251e-05, 5.886100000000033e-05, 5.913899999999972e-05, 5.8777999999998914e-05, 5.8763999999999345e-05, 5.913900000000319e-05, 5.862499999999965e-05, 5.858300000000094e-05, 5.8556000000001274e-05, 5.8722000000000635e-05, 5.888899999999947e-05, 5.8958000000001315e-05, 5.840299999999854e-05, 5.847299999999986e-05, 5.9098000000000483e-05, 5.8430000000001675e-05, 5.9222000000001135e-05, 5.9056000000001774e-05, 5.8679999999998456e-05, 5.9013999999999595e-05, 5.9028000000002634e-05, 5.927699999999994e-05, 5.834700000000026e-05, 5.8472000000000385e-05, 5.911100000000058e-05, 5.883299999999772e-05, 5.838900000000244e-05, 5.8986000000000455e-05, 5.8916000000002605e-05, 5.88749999999999e-05, 5.913899999999972e-05, 5.8791999999998484e-05, 5.8485999999999955e-05, 5.8291999999997984e-05, 5.859700000000051e-05, 5.886100000000033e-05, 5.8277999999998414e-05, 5.836099999999983e-05, 5.916699999999886e-05, 5.8485999999999955e-05, 5.884700000000076e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.981" endtime="20201115 23:02:13.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.976" endtime="20201115 23:02:13.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.986" endtime="20201115 23:02:13.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.989" endtime="20201115 23:02:14.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.988" endtime="20201115 23:02:14.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.984" endtime="20201115 23:02:14.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.613" endtime="20201115 23:02:14.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.611" endtime="20201115 23:02:14.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.610" endtime="20201115 23:02:14.010"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.013" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.022" endtime="20201115 23:02:14.039"></status>
</kw>
<msg timestamp="20201115 23:02:14.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.020" endtime="20201115 23:02:14.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.040" endtime="20201115 23:02:14.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.043" endtime="20201115 23:02:14.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.017" endtime="20201115 23:02:14.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.015" endtime="20201115 23:02:14.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.052" endtime="20201115 23:02:14.338"></status>
</kw>
<msg timestamp="20201115 23:02:14.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024847764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024907903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.050" endtime="20201115 23:02:14.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024847764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024907903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.342" endtime="20201115 23:02:14.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.351" endtime="20201115 23:02:14.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.048" endtime="20201115 23:02:14.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.046" endtime="20201115 23:02:14.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.357" level="INFO">${RESULT} = [{'time': 0.024907903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.013899999999725e-05, 'source_diff': 6.013899999999725e-05}, {'time': 0.024976903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:14.354" endtime="20201115 23:02:14.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.372" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:14.358" endtime="20201115 23:02:14.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.377" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.376" endtime="20201115 23:02:14.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.379" level="INFO">VALUE: [6.013899999999725e-05, 5.9222000000001135e-05, 5.972300000000111e-05, 6.0083999999998444e-05, 5.93750000000004e-05, 5.991699999999961e-05, 6.022300000000161e-05, 5.9402000000000066e-05, 5.977700000000044e-05, 5.929100000000298e-05, 5.9916000000000136e-05, 5.934700000000126e-05, 6.00689999999994e-05, 5.958299999999847e-05, 5.9527999999999665e-05, 5.938899999999997e-05, 5.930499999999908e-05, 6.012500000000115e-05, 5.9277999999999414e-05, 6.0055999999999304e-05, 6.0000000000001025e-05, 5.941700000000258e-05, 5.990300000000004e-05, 6.012500000000115e-05, 5.9819999999998624e-05, 5.9500000000000525e-05, 5.9584000000001414e-05, 5.9555999999998804e-05, 5.9750000000000775e-05, 5.9777999999999915e-05, 5.9362000000000303e-05, 5.9334000000001164e-05, 5.972300000000111e-05, 6.0179999999999956e-05, 6.0207999999999096e-05, 5.930500000000255e-05, 5.962500000000065e-05, 5.93750000000004e-05, 5.9943999999999276e-05, 5.9749999999997305e-05, 5.959700000000151e-05, 5.930499999999908e-05, 5.938899999999997e-05, 5.990300000000004e-05, 5.9472000000001385e-05, 5.9971999999998415e-05, 5.9721999999998165e-05, 5.9277999999999414e-05, 5.9708000000002065e-05, 5.9986000000001455e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.378" endtime="20201115 23:02:14.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.373" endtime="20201115 23:02:14.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.382" endtime="20201115 23:02:14.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.386" endtime="20201115 23:02:14.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.384" endtime="20201115 23:02:14.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.381" endtime="20201115 23:02:14.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.013" endtime="20201115 23:02:14.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.012" endtime="20201115 23:02:14.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.011" endtime="20201115 23:02:14.408"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.410" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.418" endtime="20201115 23:02:14.435"></status>
</kw>
<msg timestamp="20201115 23:02:14.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.417" endtime="20201115 23:02:14.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.436" endtime="20201115 23:02:14.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.439" endtime="20201115 23:02:14.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.414" endtime="20201115 23:02:14.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.412" endtime="20201115 23:02:14.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.448" endtime="20201115 23:02:14.737"></status>
</kw>
<msg timestamp="20201115 23:02:14.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024312472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024373611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.446" endtime="20201115 23:02:14.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024312472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024373611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.741" endtime="20201115 23:02:14.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.749" endtime="20201115 23:02:14.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.444" endtime="20201115 23:02:14.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.442" endtime="20201115 23:02:14.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.756" level="INFO">${RESULT} = [{'time': 0.024373611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.113899999999825e-05, 'source_diff': 6.113899999999825e-05}, {'time': 0.024443625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:14.753" endtime="20201115 23:02:14.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.769" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:14.757" endtime="20201115 23:02:14.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.774" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.773" endtime="20201115 23:02:14.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.776" level="INFO">VALUE: [6.113899999999825e-05, 6.033299999999922e-05, 6.0819999999999624e-05, 6.108299999999997e-05, 6.0277999999996945e-05, 6.041700000000011e-05, 6.0485999999998485e-05, 6.0514000000001095e-05, 6.061099999999861e-05, 6.0972000000002885e-05, 6.083299999999972e-05, 6.065300000000079e-05, 6.065300000000079e-05, 6.106999999999987e-05, 6.0861999999998334e-05, 6.1028000000001165e-05, 6.1013999999998125e-05, 6.036099999999836e-05, 6.0472000000002385e-05, 6.0986000000002455e-05, 6.081900000000015e-05, 6.112499999999868e-05, 6.112499999999868e-05, 6.0735999999998735e-05, 6.041699999999664e-05, 6.061099999999861e-05, 6.066700000000036e-05, 6.0792000000000485e-05, 6.129200000000098e-05, 6.065300000000079e-05, 6.031899999999965e-05, 6.0527999999997195e-05, 6.112499999999868e-05, 6.044499999999925e-05, 6.116700000000086e-05, 6.059700000000251e-05, 6.0471999999998916e-05, 6.045899999999882e-05, 6.031899999999965e-05, 6.045900000000229e-05, 6.077699999999797e-05, 6.0416000000000636e-05, 6.083299999999972e-05, 6.037499999999793e-05, 6.062500000000165e-05, 6.03750000000014e-05, 6.122199999999967e-05, 6.1000000000002025e-05, 6.058299999999947e-05, 6.080499999999711e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.775" endtime="20201115 23:02:14.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.770" endtime="20201115 23:02:14.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.780" endtime="20201115 23:02:14.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.783" endtime="20201115 23:02:14.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.782" endtime="20201115 23:02:14.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.778" endtime="20201115 23:02:14.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.411" endtime="20201115 23:02:14.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.409" endtime="20201115 23:02:14.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.408" endtime="20201115 23:02:14.804"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.807" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.815" endtime="20201115 23:02:14.832"></status>
</kw>
<msg timestamp="20201115 23:02:14.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.814" endtime="20201115 23:02:14.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.834" endtime="20201115 23:02:14.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.836" endtime="20201115 23:02:14.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.811" endtime="20201115 23:02:14.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.809" endtime="20201115 23:02:14.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.845" endtime="20201115 23:02:15.132"></status>
</kw>
<msg timestamp="20201115 23:02:15.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024257639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024319542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.844" endtime="20201115 23:02:15.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024257639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024319542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.136" endtime="20201115 23:02:15.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.144" endtime="20201115 23:02:15.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.841" endtime="20201115 23:02:15.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.840" endtime="20201115 23:02:15.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.151" level="INFO">${RESULT} = [{'time': 0.024319542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.190299999999857e-05, 'source_diff': 6.190299999999857e-05}, {'time': 0.024388556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:15.148" endtime="20201115 23:02:15.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.164" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:15.152" endtime="20201115 23:02:15.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.169" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.168" endtime="20201115 23:02:15.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.172" level="INFO">VALUE: [6.190299999999857e-05, 6.177799999999845e-05, 6.195800000000085e-05, 6.147199999999992e-05, 6.136100000000283e-05, 6.126300000000237e-05, 6.172200000000017e-05, 6.12499999999988e-05, 6.201399999999913e-05, 6.184700000000029e-05, 6.220799999999763e-05, 6.222300000000014e-05, 6.215299999999882e-05, 6.20279999999987e-05, 6.131900000000065e-05, 6.211100000000011e-05, 6.152800000000166e-05, 6.130600000000055e-05, 6.133300000000022e-05, 6.183300000000072e-05, 6.20699999999974e-05, 6.180599999999759e-05, 6.147199999999992e-05, 6.205599999999784e-05, 6.13620000000023e-05, 6.216699999999839e-05, 6.132000000000012e-05, 6.177799999999845e-05, 6.199999999999956e-05, 6.173599999999974e-05, 6.130500000000108e-05, 6.131900000000065e-05, 6.217999999999849e-05, 6.142999999999774e-05, 6.216700000000186e-05, 6.159700000000004e-05, 6.205599999999784e-05, 6.140299999999807e-05, 6.219399999999806e-05, 6.149999999999906e-05, 6.179200000000148e-05, 6.158300000000047e-05, 6.219400000000153e-05, 6.177800000000191e-05, 6.201399999999913e-05, 6.198599999999999e-05, 6.186099999999986e-05, 6.137499999999893e-05, 6.18340000000002e-05, 6.162499999999918e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.170" endtime="20201115 23:02:15.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.165" endtime="20201115 23:02:15.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.175" endtime="20201115 23:02:15.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.179" endtime="20201115 23:02:15.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.177" endtime="20201115 23:02:15.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.173" endtime="20201115 23:02:15.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.808" endtime="20201115 23:02:15.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.806" endtime="20201115 23:02:15.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.805" endtime="20201115 23:02:15.200"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.202" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.211" endtime="20201115 23:02:15.228"></status>
</kw>
<msg timestamp="20201115 23:02:15.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.209" endtime="20201115 23:02:15.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.230" endtime="20201115 23:02:15.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.232" endtime="20201115 23:02:15.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.206" endtime="20201115 23:02:15.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.204" endtime="20201115 23:02:15.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.241" endtime="20201115 23:02:15.528"></status>
</kw>
<msg timestamp="20201115 23:02:15.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024555472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024618389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.240" endtime="20201115 23:02:15.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024555472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024618389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.532" endtime="20201115 23:02:15.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.540" endtime="20201115 23:02:15.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.237" endtime="20201115 23:02:15.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.235" endtime="20201115 23:02:15.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.547" level="INFO">${RESULT} = [{'time': 0.024618389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291700000000261e-05, 'source_diff': 6.291700000000261e-05}, {'time': 0.024689389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:15.544" endtime="20201115 23:02:15.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.561" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:15.548" endtime="20201115 23:02:15.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.565" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.564" endtime="20201115 23:02:15.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.568" level="INFO">VALUE: [6.291700000000261e-05, 6.297199999999795e-05, 6.323700000000071e-05, 6.291699999999914e-05, 6.245900000000082e-05, 6.308400000000144e-05, 6.263899999999975e-05, 6.27500000000003e-05, 6.326400000000038e-05, 6.238800000000003e-05, 6.229099999999904e-05, 6.304099999999979e-05, 6.263899999999975e-05, 6.291700000000261e-05, 6.2889e-05, 6.226399999999938e-05, 6.250000000000006e-05, 6.227800000000241e-05, 6.298600000000099e-05, 6.222200000000067e-05, 6.259700000000104e-05, 6.219400000000153e-05, 6.304199999999927e-05, 6.219400000000153e-05, 6.281999999999816e-05, 6.27500000000003e-05, 6.323600000000124e-05, 6.283300000000172e-05, 6.313899999999678e-05, 6.309700000000154e-05, 6.262500000000018e-05, 6.272300000000064e-05, 6.279099999999954e-05, 6.23340000000007e-05, 6.309800000000101e-05, 6.268099999999846e-05, 6.259700000000104e-05, 6.256899999999843e-05, 6.265199999999985e-05, 6.27500000000003e-05, 6.22219999999972e-05, 6.247200000000092e-05, 6.279100000000301e-05, 6.226400000000284e-05, 6.261100000000061e-05, 6.245800000000135e-05, 6.290299999999957e-05, 6.311099999999764e-05, 6.30279999999997e-05, 6.251399999999963e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.566" endtime="20201115 23:02:15.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.562" endtime="20201115 23:02:15.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.571" endtime="20201115 23:02:15.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.574" endtime="20201115 23:02:15.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.573" endtime="20201115 23:02:15.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.569" endtime="20201115 23:02:15.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.203" endtime="20201115 23:02:15.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.201" endtime="20201115 23:02:15.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.200" endtime="20201115 23:02:15.595"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.598" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.606" endtime="20201115 23:02:15.624"></status>
</kw>
<msg timestamp="20201115 23:02:15.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.604" endtime="20201115 23:02:15.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.625" endtime="20201115 23:02:15.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.628" endtime="20201115 23:02:15.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.602" endtime="20201115 23:02:15.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.600" endtime="20201115 23:02:15.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.637" endtime="20201115 23:02:15.924"></status>
</kw>
<msg timestamp="20201115 23:02:15.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024762153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024825778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.635" endtime="20201115 23:02:15.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024762153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024825778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.928" endtime="20201115 23:02:15.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.937" endtime="20201115 23:02:15.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.633" endtime="20201115 23:02:15.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.631" endtime="20201115 23:02:15.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.943" level="INFO">${RESULT} = [{'time': 0.024825778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.362500000000118e-05, 'source_diff': 6.362500000000118e-05}, {'time': 0.024894778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:15.940" endtime="20201115 23:02:15.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.958" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:15.944" endtime="20201115 23:02:15.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.963" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.962" endtime="20201115 23:02:15.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.965" level="INFO">VALUE: [6.362500000000118e-05, 6.379200000000002e-05, 6.42500000000018e-05, 6.380599999999959e-05, 6.398699999999799e-05, 6.341600000000017e-05, 6.398699999999799e-05, 6.32630000000009e-05, 6.418000000000049e-05, 6.390300000000057e-05, 6.3889000000001e-05, 6.351400000000063e-05, 6.336099999999789e-05, 6.336099999999789e-05, 6.416700000000039e-05, 6.334700000000179e-05, 6.341699999999964e-05, 6.377800000000045e-05, 6.327799999999995e-05, 6.322200000000167e-05, 6.411100000000211e-05, 6.409700000000254e-05, 6.363900000000075e-05, 6.397299999999842e-05, 6.388800000000153e-05, 6.316699999999939e-05, 6.399999999999809e-05, 6.40280000000007e-05, 6.386100000000186e-05, 6.326400000000038e-05, 6.350000000000106e-05, 6.40829999999995e-05, 6.334699999999832e-05, 6.363899999999728e-05, 6.423600000000224e-05, 6.401399999999766e-05, 6.337500000000093e-05, 6.331900000000265e-05, 6.42500000000018e-05, 6.406899999999993e-05, 6.351400000000063e-05, 6.390300000000057e-05, 6.406899999999993e-05, 6.361100000000161e-05, 6.401400000000113e-05, 6.345800000000235e-05, 6.418099999999996e-05, 6.32639999999969e-05, 6.42219999999992e-05, 6.393099999999971e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.964" endtime="20201115 23:02:15.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.959" endtime="20201115 23:02:15.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.968" endtime="20201115 23:02:15.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.972" endtime="20201115 23:02:15.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.970" endtime="20201115 23:02:15.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.966" endtime="20201115 23:02:15.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.598" endtime="20201115 23:02:15.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.596" endtime="20201115 23:02:15.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.596" endtime="20201115 23:02:15.993"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.995" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.003" endtime="20201115 23:02:16.020"></status>
</kw>
<msg timestamp="20201115 23:02:16.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.002" endtime="20201115 23:02:16.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.022" endtime="20201115 23:02:16.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.024" endtime="20201115 23:02:16.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.999" endtime="20201115 23:02:16.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.997" endtime="20201115 23:02:16.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.034" endtime="20201115 23:02:16.320"></status>
</kw>
<msg timestamp="20201115 23:02:16.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024361681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024426389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.032" endtime="20201115 23:02:16.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024361681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024426389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.324" endtime="20201115 23:02:16.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.332" endtime="20201115 23:02:16.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.029" endtime="20201115 23:02:16.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.027" endtime="20201115 23:02:16.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.339" level="INFO">${RESULT} = [{'time': 0.024426389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.470800000000013e-05, 'source_diff': 6.470800000000013e-05}, {'time': 0.024497361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:16.336" endtime="20201115 23:02:16.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.352" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:16.340" endtime="20201115 23:02:16.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.357" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.356" endtime="20201115 23:02:16.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.359" level="INFO">VALUE: [6.470800000000013e-05, 6.433299999999975e-05, 6.479099999999807e-05, 6.436099999999889e-05, 6.461099999999914e-05, 6.493000000000124e-05, 6.479200000000102e-05, 6.461100000000261e-05, 6.4583e-05, 6.50700000000004e-05, 6.490300000000157e-05, 6.426400000000138e-05, 6.477800000000145e-05, 6.426400000000138e-05, 6.45699999999999e-05, 6.42500000000018e-05, 6.433399999999923e-05, 6.423700000000171e-05, 6.459799999999905e-05, 6.474999999999884e-05, 6.450000000000206e-05, 6.447199999999945e-05, 6.463900000000175e-05, 6.463899999999828e-05, 6.483300000000025e-05, 6.463899999999828e-05, 6.449999999999859e-05, 6.431900000000018e-05, 6.512499999999921e-05, 6.429200000000052e-05, 6.516699999999792e-05, 6.454200000000077e-05, 6.45419999999973e-05, 6.483300000000025e-05, 6.470800000000013e-05, 6.493100000000071e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.52639999999989e-05, 6.441699999999717e-05, 6.483399999999973e-05, 6.499999999999909e-05, 6.455600000000034e-05, 6.432000000000312e-05, 6.518000000000149e-05, 6.505500000000136e-05, 6.463799999999881e-05, 6.505600000000084e-05, 6.429100000000104e-05, 6.50419999999978e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.358" endtime="20201115 23:02:16.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.353" endtime="20201115 23:02:16.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.362" endtime="20201115 23:02:16.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.366" endtime="20201115 23:02:16.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.364" endtime="20201115 23:02:16.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.361" endtime="20201115 23:02:16.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.996" endtime="20201115 23:02:16.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.994" endtime="20201115 23:02:16.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.993" endtime="20201115 23:02:16.387"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.389" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.398" endtime="20201115 23:02:16.415"></status>
</kw>
<msg timestamp="20201115 23:02:16.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.396" endtime="20201115 23:02:16.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.417" endtime="20201115 23:02:16.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.420" endtime="20201115 23:02:16.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.393" endtime="20201115 23:02:16.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.391" endtime="20201115 23:02:16.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.429" endtime="20201115 23:02:16.716"></status>
</kw>
<msg timestamp="20201115 23:02:16.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024194431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024259917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.427" endtime="20201115 23:02:16.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024194431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024259917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.720" endtime="20201115 23:02:16.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.728" endtime="20201115 23:02:16.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.425" endtime="20201115 23:02:16.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.423" endtime="20201115 23:02:16.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.735" level="INFO">${RESULT} = [{'time': 0.024259917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.548600000000002e-05, 'source_diff': 6.548600000000002e-05}, {'time': 0.024329917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:16.732" endtime="20201115 23:02:16.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.748" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:16.736" endtime="20201115 23:02:16.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.753" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.752" endtime="20201115 23:02:16.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.755" level="INFO">VALUE: [6.548600000000002e-05, 6.580599999999812e-05, 6.619500000000153e-05, 6.57359999999968e-05, 6.583300000000125e-05, 6.555499999999839e-05, 6.608299999999803e-05, 6.576400000000288e-05, 6.579100000000254e-05, 6.570800000000113e-05, 6.551399999999916e-05, 6.601399999999966e-05, 6.620799999999816e-05, 6.534699999999685e-05, 6.613899999999978e-05, 6.573600000000027e-05, 6.615299999999935e-05, 6.527799999999848e-05, 6.594399999999834e-05, 6.588899999999953e-05, 6.531900000000118e-05, 6.593100000000171e-05, 6.609700000000107e-05, 6.536099999999989e-05, 6.582000000000116e-05, 6.613899999999978e-05, 6.59029999999991e-05, 6.605599999999837e-05, 6.608400000000098e-05, 6.602799999999923e-05, 6.566599999999895e-05, 6.594499999999781e-05, 6.59159999999992e-05, 6.586100000000039e-05, 6.573600000000027e-05, 6.540199999999913e-05, 6.59029999999991e-05, 6.569400000000156e-05, 6.620799999999816e-05, 6.545800000000088e-05, 6.576400000000288e-05, 6.612500000000021e-05, 6.623600000000077e-05, 6.602799999999923e-05, 6.570800000000113e-05, 6.609700000000107e-05, 6.563899999999928e-05, 6.544499999999731e-05, 6.586100000000039e-05, 6.587499999999996e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.754" endtime="20201115 23:02:16.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.749" endtime="20201115 23:02:16.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.759" endtime="20201115 23:02:16.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.762" endtime="20201115 23:02:16.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.761" endtime="20201115 23:02:16.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.757" endtime="20201115 23:02:16.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.390" endtime="20201115 23:02:16.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.388" endtime="20201115 23:02:16.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.387" endtime="20201115 23:02:16.783"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.786" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.795" endtime="20201115 23:02:16.812"></status>
</kw>
<msg timestamp="20201115 23:02:16.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.793" endtime="20201115 23:02:16.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.813" endtime="20201115 23:02:16.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.816" endtime="20201115 23:02:16.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.790" endtime="20201115 23:02:16.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.788" endtime="20201115 23:02:16.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.825" endtime="20201115 23:02:17.110"></status>
</kw>
<msg timestamp="20201115 23:02:17.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024979153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025045931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.823" endtime="20201115 23:02:17.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024979153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025045931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.114" endtime="20201115 23:02:17.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.123" endtime="20201115 23:02:17.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.821" endtime="20201115 23:02:17.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.819" endtime="20201115 23:02:17.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.130" level="INFO">${RESULT} = [{'time': 0.025045931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.677799999999998e-05, 'source_diff': 6.677799999999998e-05}, {'time': 0.025119903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:17.126" endtime="20201115 23:02:17.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.143" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:17.130" endtime="20201115 23:02:17.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.147" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.146" endtime="20201115 23:02:17.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.150" level="INFO">VALUE: [6.677799999999998e-05, 6.651400000000016e-05, 6.679199999999955e-05, 6.684799999999783e-05, 6.68480000000013e-05, 6.719500000000253e-05, 6.700000000000109e-05, 6.680600000000259e-05, 6.716699999999992e-05, 6.67359999999978e-05, 6.706899999999946e-05, 6.631900000000218e-05, 6.633300000000175e-05, 6.62639999999999e-05, 6.64440000000023e-05, 6.630499999999914e-05, 6.720799999999916e-05, 6.715300000000035e-05, 6.636100000000089e-05, 6.675000000000084e-05, 6.688900000000053e-05, 6.709700000000207e-05, 6.656999999999844e-05, 6.70700000000024e-05, 6.687500000000096e-05, 6.641699999999917e-05, 6.645900000000135e-05, 6.701400000000066e-05, 6.680600000000259e-05, 6.67090000000016e-05, 6.659800000000105e-05, 6.650000000000059e-05, 6.633299999999828e-05, 6.654099999999982e-05, 6.670799999999866e-05, 6.640200000000013e-05, 6.67359999999978e-05, 6.64029999999996e-05, 6.684700000000182e-05, 6.662500000000071e-05, 6.693099999999924e-05, 6.650000000000059e-05, 6.658299999999853e-05, 6.6583000000002e-05, 6.662500000000071e-05, 6.630600000000209e-05, 6.625000000000034e-05, 6.62639999999999e-05, 6.655499999999939e-05, 6.690299999999663e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.148" endtime="20201115 23:02:17.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.144" endtime="20201115 23:02:17.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.153" endtime="20201115 23:02:17.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.156" endtime="20201115 23:02:17.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.155" endtime="20201115 23:02:17.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.151" endtime="20201115 23:02:17.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.786" endtime="20201115 23:02:17.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.784" endtime="20201115 23:02:17.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.784" endtime="20201115 23:02:17.178"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.180" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.189" endtime="20201115 23:02:17.207"></status>
</kw>
<msg timestamp="20201115 23:02:17.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.187" endtime="20201115 23:02:17.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.208" endtime="20201115 23:02:17.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.211" endtime="20201115 23:02:17.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.184" endtime="20201115 23:02:17.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.182" endtime="20201115 23:02:17.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.220" endtime="20201115 23:02:17.506"></status>
</kw>
<msg timestamp="20201115 23:02:17.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024756403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024824333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.218" endtime="20201115 23:02:17.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024756403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024824333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.511" endtime="20201115 23:02:17.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.519" endtime="20201115 23:02:17.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.216" endtime="20201115 23:02:17.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.214" endtime="20201115 23:02:17.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.526" level="INFO">${RESULT} = [{'time': 0.024824333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.793000000000077e-05, 'source_diff': 6.793000000000077e-05}, {'time': 0.024901347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:17.522" endtime="20201115 23:02:17.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.540" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:17.527" endtime="20201115 23:02:17.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.545" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.544" endtime="20201115 23:02:17.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.548" level="INFO">VALUE: [6.793000000000077e-05, 6.762500000000171e-05, 6.770799999999966e-05, 6.734699999999885e-05, 6.779200000000055e-05, 6.75969999999991e-05, 6.82640000000019e-05, 6.80969999999996e-05, 6.745799999999941e-05, 6.773600000000227e-05, 6.730599999999962e-05, 6.718099999999949e-05, 6.820800000000016e-05, 6.804199999999733e-05, 6.816699999999745e-05, 6.813900000000178e-05, 6.750000000000159e-05, 6.741700000000017e-05, 6.776299999999846e-05, 6.77909999999976e-05, 6.765200000000138e-05, 6.718000000000002e-05, 6.738900000000103e-05, 6.790200000000163e-05, 6.763899999999781e-05, 6.72359999999983e-05, 6.777799999999751e-05, 6.777800000000098e-05, 6.736100000000189e-05, 6.794499999999981e-05, 6.811099999999917e-05, 6.788900000000153e-05, 6.776399999999794e-05, 6.802800000000123e-05, 6.736099999999842e-05, 6.791700000000067e-05, 6.74030000000006e-05, 6.763900000000128e-05, 6.802799999999776e-05, 6.734699999999885e-05, 6.80839999999995e-05, 6.738900000000103e-05, 6.756899999999996e-05, 6.752799999999726e-05, 6.802700000000175e-05, 6.72640000000009e-05, 6.744399999999984e-05, 6.763900000000128e-05, 6.75420000000003e-05, 6.787499999999849e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.546" endtime="20201115 23:02:17.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.541" endtime="20201115 23:02:17.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.551" endtime="20201115 23:02:17.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.554" endtime="20201115 23:02:17.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.553" endtime="20201115 23:02:17.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.549" endtime="20201115 23:02:17.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.181" endtime="20201115 23:02:17.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.179" endtime="20201115 23:02:17.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.178" endtime="20201115 23:02:17.576"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.578" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.586" endtime="20201115 23:02:17.604"></status>
</kw>
<msg timestamp="20201115 23:02:17.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.585" endtime="20201115 23:02:17.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.606" endtime="20201115 23:02:17.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.608" endtime="20201115 23:02:17.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.582" endtime="20201115 23:02:17.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.580" endtime="20201115 23:02:17.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.617" endtime="20201115 23:02:17.903"></status>
</kw>
<msg timestamp="20201115 23:02:17.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024460958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024530208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.616" endtime="20201115 23:02:17.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024460958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024530208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.907" endtime="20201115 23:02:17.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.915" endtime="20201115 23:02:17.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.613" endtime="20201115 23:02:17.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.611" endtime="20201115 23:02:17.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.922" level="INFO">${RESULT} = [{'time': 0.024530208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.924999999999987e-05, 'source_diff': 6.924999999999987e-05}, {'time': 0.024609208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:17.918" endtime="20201115 23:02:17.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.935" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:17.923" endtime="20201115 23:02:17.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.940" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.939" endtime="20201115 23:02:17.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.943" level="INFO">VALUE: [6.924999999999987e-05, 6.908300000000103e-05, 6.90970000000006e-05, 6.824999999999887e-05, 6.836100000000289e-05, 6.869500000000056e-05, 6.847199999999998e-05, 6.895800000000091e-05, 6.874999999999937e-05, 6.919500000000106e-05, 6.897200000000048e-05, 6.912499999999974e-05, 6.922200000000073e-05, 6.877799999999851e-05, 6.852799999999826e-05, 6.829200000000105e-05, 6.863899999999881e-05, 6.888900000000253e-05, 6.90840000000005e-05, 6.874999999999937e-05, 6.843100000000074e-05, 6.89160000000022e-05, 6.884700000000035e-05, 6.912499999999974e-05, 6.85970000000001e-05, 6.865199999999891e-05, 6.880500000000164e-05, 6.861099999999967e-05, 6.847199999999998e-05, 6.866699999999795e-05, 6.90970000000006e-05, 6.912499999999974e-05, 6.861099999999967e-05, 6.85970000000001e-05, 6.916699999999845e-05, 6.886099999999992e-05, 6.899999999999962e-05, 6.847299999999945e-05, 6.838900000000203e-05, 6.913899999999931e-05, 6.879199999999808e-05, 6.911100000000017e-05, 6.915299999999888e-05, 6.908299999999756e-05, 6.836099999999942e-05, 6.876299999999946e-05, 6.908300000000103e-05, 6.822199999999973e-05, 6.831900000000071e-05, 6.820800000000016e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.941" endtime="20201115 23:02:17.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.936" endtime="20201115 23:02:17.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.946" endtime="20201115 23:02:17.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.949" endtime="20201115 23:02:17.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.948" endtime="20201115 23:02:17.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.944" endtime="20201115 23:02:17.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.579" endtime="20201115 23:02:17.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.577" endtime="20201115 23:02:17.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.576" endtime="20201115 23:02:17.970"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.973" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.981" endtime="20201115 23:02:17.998"></status>
</kw>
<msg timestamp="20201115 23:02:17.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.979" endtime="20201115 23:02:17.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.000" endtime="20201115 23:02:18.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.003" endtime="20201115 23:02:18.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.977" endtime="20201115 23:02:18.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.975" endtime="20201115 23:02:18.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.012" endtime="20201115 23:02:18.299"></status>
</kw>
<msg timestamp="20201115 23:02:18.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024360069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024429569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.010" endtime="20201115 23:02:18.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024360069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024429569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.303" endtime="20201115 23:02:18.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.311" endtime="20201115 23:02:18.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.007" endtime="20201115 23:02:18.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.006" endtime="20201115 23:02:18.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.318" level="INFO">${RESULT} = [{'time': 0.024429569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.950000000000012e-05, 'source_diff': 6.950000000000012e-05}, {'time': 0.024506569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:18.315" endtime="20201115 23:02:18.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.332" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:18.319" endtime="20201115 23:02:18.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.336" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.335" endtime="20201115 23:02:18.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.339" level="INFO">VALUE: [6.950000000000012e-05, 6.950000000000012e-05, 7.005499999999942e-05, 6.948600000000055e-05, 6.920800000000116e-05, 6.963899999999981e-05, 7.000000000000062e-05, 6.970799999999819e-05, 7.016699999999945e-05, 6.938899999999956e-05, 6.981999999999822e-05, 6.92360000000003e-05, 6.972199999999776e-05, 6.969500000000156e-05, 6.977799999999951e-05, 6.965299999999938e-05, 6.931900000000171e-05, 6.937499999999999e-05, 6.927799999999901e-05, 6.938899999999956e-05, 6.993100000000224e-05, 6.9584000000001e-05, 6.932000000000119e-05, 6.933300000000128e-05, 6.927699999999953e-05, 6.963899999999981e-05, 6.969399999999862e-05, 6.977799999999951e-05, 6.975000000000037e-05, 7.013900000000031e-05, 6.931899999999824e-05, 6.997199999999801e-05, 7.016699999999945e-05, 6.956899999999849e-05, 7.015299999999988e-05, 7.019499999999859e-05, 6.975000000000037e-05, 7.011100000000117e-05, 6.998600000000105e-05, 7.020900000000163e-05, 6.954199999999883e-05, 6.92230000000002e-05, 6.959800000000058e-05, 6.934800000000033e-05, 6.9584000000001e-05, 6.988900000000006e-05, 6.959699999999763e-05, 6.930499999999867e-05, 6.937499999999999e-05, 7.001400000000019e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.337" endtime="20201115 23:02:18.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.333" endtime="20201115 23:02:18.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.342" endtime="20201115 23:02:18.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.345" endtime="20201115 23:02:18.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.344" endtime="20201115 23:02:18.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.340" endtime="20201115 23:02:18.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.973" endtime="20201115 23:02:18.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.971" endtime="20201115 23:02:18.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.971" endtime="20201115 23:02:18.366"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.369" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.377" endtime="20201115 23:02:18.394"></status>
</kw>
<msg timestamp="20201115 23:02:18.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.375" endtime="20201115 23:02:18.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.396" endtime="20201115 23:02:18.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.398" endtime="20201115 23:02:18.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.373" endtime="20201115 23:02:18.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.371" endtime="20201115 23:02:18.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.407" endtime="20201115 23:02:18.694"></status>
</kw>
<msg timestamp="20201115 23:02:18.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024270222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0243415, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:18.406" endtime="20201115 23:02:18.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024270222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0243415, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:18.698" endtime="20201115 23:02:18.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.710" endtime="20201115 23:02:18.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.403" endtime="20201115 23:02:18.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.401" endtime="20201115 23:02:18.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.717" level="INFO">${RESULT} = [{'time': 0.0243415, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.127799999999754e-05, 'source_diff': 7.127799999999754e-05}, {'time': 0.0244145, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201115 23:02:18.714" endtime="20201115 23:02:18.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.731" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:18.718" endtime="20201115 23:02:18.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.735" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.734" endtime="20201115 23:02:18.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.738" level="INFO">VALUE: [7.127799999999754e-05, 7.101399999999772e-05, 7.084699999999888e-05, 7.09170000000002e-05, 7.104200000000033e-05, 7.034799999999786e-05, 7.036100000000142e-05, 7.088900000000106e-05, 7.058399999999854e-05, 7.034800000000133e-05, 7.09170000000002e-05, 7.02230000000012e-05, 7.12360000000023e-05, 7.088900000000106e-05, 7.052699999999731e-05, 7.034700000000185e-05, 7.115200000000141e-05, 7.079200000000008e-05, 7.058299999999906e-05, 7.115300000000088e-05, 7.036100000000142e-05, 7.11109999999987e-05, 7.031899999999924e-05, 7.068099999999952e-05, 7.038900000000056e-05, 7.04169999999997e-05, 7.045799999999894e-05, 7.02360000000013e-05, 7.027800000000001e-05, 7.11109999999987e-05, 7.038900000000056e-05, 7.07360000000018e-05, 7.038899999999709e-05, 7.05970000000021e-05, 7.03620000000009e-05, 7.065200000000091e-05, 7.094499999999934e-05, 7.022200000000173e-05, 7.052800000000026e-05, 7.091600000000073e-05, 7.12499999999984e-05, 7.048599999999808e-05, 7.097199999999901e-05, 7.113900000000131e-05, 7.100000000000162e-05, 7.070799999999919e-05, 7.030599999999915e-05, 7.027800000000001e-05, 7.056999999999897e-05, 7.048599999999808e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.737" endtime="20201115 23:02:18.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.731" endtime="20201115 23:02:18.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.742" endtime="20201115 23:02:18.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.746" endtime="20201115 23:02:18.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.744" endtime="20201115 23:02:18.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.740" endtime="20201115 23:02:18.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.369" endtime="20201115 23:02:18.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.368" endtime="20201115 23:02:18.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.367" endtime="20201115 23:02:18.767"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.769" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.778" endtime="20201115 23:02:18.796"></status>
</kw>
<msg timestamp="20201115 23:02:18.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.776" endtime="20201115 23:02:18.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.797" endtime="20201115 23:02:18.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.800" endtime="20201115 23:02:18.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.773" endtime="20201115 23:02:18.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.771" endtime="20201115 23:02:18.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.809" endtime="20201115 23:02:19.096"></status>
</kw>
<msg timestamp="20201115 23:02:19.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024683806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024755528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.807" endtime="20201115 23:02:19.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024683806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024755528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.100" endtime="20201115 23:02:19.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.109" endtime="20201115 23:02:19.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.805" endtime="20201115 23:02:19.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.803" endtime="20201115 23:02:19.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.115" level="INFO">${RESULT} = [{'time': 0.024755528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.172199999999976e-05, 'source_diff': 7.172199999999976e-05}, {'time': 0.024831528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:19.112" endtime="20201115 23:02:19.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.173" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:19.116" endtime="20201115 23:02:19.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.178" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.177" endtime="20201115 23:02:19.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.180" level="INFO">VALUE: [7.172199999999976e-05, 7.213899999999884e-05, 7.215299999999841e-05, 7.193100000000077e-05, 7.17360000000028e-05, 7.144499999999984e-05, 7.187499999999902e-05, 7.151400000000169e-05, 7.198599999999958e-05, 7.168000000000105e-05, 7.167999999999758e-05, 7.14300000000008e-05, 7.191599999999826e-05, 7.134699999999938e-05, 7.15690000000005e-05, 7.170800000000019e-05, 7.208300000000056e-05, 7.168099999999705e-05, 7.179200000000108e-05, 7.218100000000102e-05, 7.197200000000001e-05, 7.201400000000219e-05, 7.138900000000156e-05, 7.197200000000001e-05, 7.198599999999958e-05, 7.152800000000126e-05, 7.202800000000176e-05, 7.131999999999972e-05, 7.158399999999954e-05, 7.145799999999994e-05, 7.140200000000166e-05, 7.120799999999969e-05, 7.166599999999801e-05, 7.179099999999813e-05, 7.129099999999763e-05, 7.168000000000105e-05, 7.220800000000069e-05, 7.137500000000199e-05, 7.166700000000095e-05, 7.197200000000001e-05, 7.15690000000005e-05, 7.186100000000292e-05, 7.222200000000026e-05, 7.201400000000219e-05, 7.220900000000016e-05, 7.159699999999963e-05, 7.190300000000163e-05, 7.137500000000199e-05, 7.183399999999979e-05, 7.126300000000196e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.179" endtime="20201115 23:02:19.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.174" endtime="20201115 23:02:19.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.183" endtime="20201115 23:02:19.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.187" endtime="20201115 23:02:19.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.185" endtime="20201115 23:02:19.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.182" endtime="20201115 23:02:19.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.770" endtime="20201115 23:02:19.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.768" endtime="20201115 23:02:19.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.767" endtime="20201115 23:02:19.208"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.210" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.219" endtime="20201115 23:02:19.236"></status>
</kw>
<msg timestamp="20201115 23:02:19.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.217" endtime="20201115 23:02:19.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.238" endtime="20201115 23:02:19.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.241" endtime="20201115 23:02:19.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.214" endtime="20201115 23:02:19.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.212" endtime="20201115 23:02:19.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.250" endtime="20201115 23:02:19.535"></status>
</kw>
<msg timestamp="20201115 23:02:19.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024982236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.248" endtime="20201115 23:02:19.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024982236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.539" endtime="20201115 23:02:19.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.548" endtime="20201115 23:02:19.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.246" endtime="20201115 23:02:19.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.244" endtime="20201115 23:02:19.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.554" level="INFO">${RESULT} = [{'time': 0.025055458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.322199999999779e-05, 'source_diff': 7.322199999999779e-05}, {'time': 0.025135458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:19.551" endtime="20201115 23:02:19.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.568" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:19.555" endtime="20201115 23:02:19.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.572" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.571" endtime="20201115 23:02:19.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.575" level="INFO">VALUE: [7.322199999999779e-05, 7.249999999999965e-05, 7.249999999999965e-05, 7.277699999999956e-05, 7.265299999999891e-05, 7.308300000000156e-05, 7.227800000000201e-05, 7.279200000000208e-05, 7.300000000000015e-05, 7.277800000000251e-05, 7.305599999999843e-05, 7.252799999999879e-05, 7.259700000000063e-05, 7.305599999999843e-05, 7.238900000000256e-05, 7.276399999999947e-05, 7.276399999999947e-05, 7.31110000000007e-05, 7.272200000000076e-05, 7.244499999999737e-05, 7.24300000000018e-05, 7.24300000000018e-05, 7.248600000000008e-05, 7.251399999999922e-05, 7.323599999999736e-05, 7.3069000000002e-05, 7.234700000000038e-05, 7.262499999999977e-05, 7.312500000000027e-05, 7.267999999999858e-05, 7.249999999999965e-05, 7.284700000000088e-05, 7.319499999999812e-05, 7.3069000000002e-05, 7.288899999999959e-05, 7.302799999999929e-05, 7.302799999999929e-05, 7.237499999999952e-05, 7.307000000000147e-05, 7.316599999999951e-05, 7.261099999999673e-05, 7.276399999999947e-05, 7.265199999999944e-05, 7.300000000000015e-05, 7.291599999999926e-05, 7.276399999999947e-05, 7.273600000000033e-05, 7.283300000000131e-05, 7.300000000000015e-05, 7.245800000000094e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.573" endtime="20201115 23:02:19.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.568" endtime="20201115 23:02:19.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.578" endtime="20201115 23:02:19.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.581" endtime="20201115 23:02:19.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.580" endtime="20201115 23:02:19.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.576" endtime="20201115 23:02:19.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.211" endtime="20201115 23:02:19.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.209" endtime="20201115 23:02:19.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.208" endtime="20201115 23:02:19.602"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.605" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.614" endtime="20201115 23:02:19.631"></status>
</kw>
<msg timestamp="20201115 23:02:19.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.613" endtime="20201115 23:02:19.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.633" endtime="20201115 23:02:19.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.635" endtime="20201115 23:02:19.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.610" endtime="20201115 23:02:19.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.607" endtime="20201115 23:02:19.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.644" endtime="20201115 23:02:19.929"></status>
</kw>
<msg timestamp="20201115 23:02:19.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025634458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025707931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.643" endtime="20201115 23:02:19.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025634458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025707931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.933" endtime="20201115 23:02:19.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.941" endtime="20201115 23:02:19.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.640" endtime="20201115 23:02:19.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.638" endtime="20201115 23:02:19.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.948" level="INFO">${RESULT} = [{'time': 0.025707931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.347300000000098e-05, 'source_diff': 7.347300000000098e-05}, {'time': 0.025784958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:19.944" endtime="20201115 23:02:19.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.961" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:19.949" endtime="20201115 23:02:19.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.966" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.965" endtime="20201115 23:02:19.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.968" level="INFO">VALUE: [7.347300000000098e-05, 7.362500000000077e-05, 7.392999999999983e-05, 7.384700000000188e-05, 7.416600000000051e-05, 7.409700000000213e-05, 7.415300000000041e-05, 7.358300000000206e-05, 7.331900000000224e-05, 7.413900000000084e-05, 7.340299999999966e-05, 7.350000000000065e-05, 7.368100000000252e-05, 7.398600000000158e-05, 7.336100000000095e-05, 7.404100000000038e-05, 7.377800000000004e-05, 7.358399999999807e-05, 7.384800000000136e-05, 7.398600000000158e-05, 7.345899999999794e-05, 7.413899999999737e-05, 7.366600000000001e-05, 7.379100000000013e-05, 7.412500000000127e-05, 7.379100000000013e-05, 7.373599999999786e-05, 7.39309999999993e-05, 7.413900000000084e-05, 7.345800000000194e-05, 7.420799999999922e-05, 7.359699999999816e-05, 7.376400000000047e-05, 7.347200000000151e-05, 7.387500000000102e-05, 7.337499999999705e-05, 7.402800000000029e-05, 7.334700000000138e-05, 7.400000000000115e-05, 7.402700000000081e-05, 7.413900000000084e-05, 7.334699999999791e-05, 7.341599999999976e-05, 7.358399999999807e-05, 7.37500000000009e-05, 7.412500000000127e-05, 7.365199999999697e-05, 7.317999999999908e-05, 7.391600000000026e-05, 7.32500000000004e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.967" endtime="20201115 23:02:19.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.962" endtime="20201115 23:02:19.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.971" endtime="20201115 23:02:19.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.975" endtime="20201115 23:02:19.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.973" endtime="20201115 23:02:19.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.970" endtime="20201115 23:02:19.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.605" endtime="20201115 23:02:19.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.603" endtime="20201115 23:02:19.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.603" endtime="20201115 23:02:19.996"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.999" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.008" endtime="20201115 23:02:20.025"></status>
</kw>
<msg timestamp="20201115 23:02:20.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.006" endtime="20201115 23:02:20.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.027" endtime="20201115 23:02:20.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.029" endtime="20201115 23:02:20.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.003" endtime="20201115 23:02:20.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.001" endtime="20201115 23:02:20.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.038" endtime="20201115 23:02:20.324"></status>
</kw>
<msg timestamp="20201115 23:02:20.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025826903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025901736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.037" endtime="20201115 23:02:20.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025826903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025901736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.328" endtime="20201115 23:02:20.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.336" endtime="20201115 23:02:20.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.034" endtime="20201115 23:02:20.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.032" endtime="20201115 23:02:20.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.343" level="INFO">${RESULT} = [{'time': 0.025901736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.483300000000331e-05, 'source_diff': 7.483300000000331e-05}, {'time': 0.025978778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.340" endtime="20201115 23:02:20.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.357" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:20.344" endtime="20201115 23:02:20.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.361" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.360" endtime="20201115 23:02:20.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.364" level="INFO">VALUE: [7.483300000000331e-05, 7.518100000000055e-05, 7.509700000000313e-05, 7.445799999999947e-05, 7.490300000000116e-05, 7.518100000000055e-05, 7.437500000000152e-05, 7.481999999999975e-05, 7.502799999999782e-05, 7.452800000000079e-05, 7.511199999999871e-05, 7.429200000000011e-05, 7.508399999999957e-05, 7.426299999999803e-05, 7.440300000000066e-05, 7.416600000000051e-05, 7.519400000000065e-05, 7.459700000000263e-05, 7.445799999999947e-05, 7.4763999999998e-05, 7.445799999999947e-05, 7.468100000000005e-05, 7.520800000000022e-05, 7.506900000000052e-05, 7.473599999999886e-05, 7.449999999999818e-05, 7.440300000000066e-05, 7.420800000000269e-05, 7.505600000000043e-05, 7.433399999999882e-05, 7.488900000000159e-05, 7.504100000000138e-05, 7.44439999999999e-05, 7.443000000000033e-05, 7.472299999999876e-05, 7.443000000000033e-05, 7.436099999999848e-05, 7.434699999999891e-05, 7.488900000000159e-05, 7.506900000000052e-05, 7.427800000000054e-05, 7.504099999999791e-05, 7.455500000000045e-05, 7.455599999999993e-05, 7.477800000000104e-05, 7.513900000000184e-05, 7.506900000000052e-05, 7.429200000000011e-05, 7.487499999999855e-05, 7.481900000000027e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.362" endtime="20201115 23:02:20.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.358" endtime="20201115 23:02:20.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.368" endtime="20201115 23:02:20.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.371" endtime="20201115 23:02:20.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.370" endtime="20201115 23:02:20.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.366" endtime="20201115 23:02:20.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.999" endtime="20201115 23:02:20.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.998" endtime="20201115 23:02:20.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.997" endtime="20201115 23:02:20.392"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.395" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.403" endtime="20201115 23:02:20.421"></status>
</kw>
<msg timestamp="20201115 23:02:20.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.401" endtime="20201115 23:02:20.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.423" endtime="20201115 23:02:20.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.425" endtime="20201115 23:02:20.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.399" endtime="20201115 23:02:20.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.397" endtime="20201115 23:02:20.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.435" endtime="20201115 23:02:20.721"></status>
</kw>
<msg timestamp="20201115 23:02:20.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025214389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025289944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.433" endtime="20201115 23:02:20.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025214389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025289944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.725" endtime="20201115 23:02:20.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.733" endtime="20201115 23:02:20.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.430" endtime="20201115 23:02:20.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.429" endtime="20201115 23:02:20.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.740" level="INFO">${RESULT} = [{'time': 0.025289944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.555500000000145e-05, 'source_diff': 7.555500000000145e-05}, {'time': 0.025367944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.736" endtime="20201115 23:02:20.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.754" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:20.741" endtime="20201115 23:02:20.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.759" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.758" endtime="20201115 23:02:20.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.762" level="INFO">VALUE: [7.555500000000145e-05, 7.520800000000022e-05, 7.620799999999775e-05, 7.540199999999872e-05, 7.597200000000054e-05, 7.526400000000197e-05, 7.561099999999973e-05, 7.540300000000166e-05, 7.599999999999968e-05, 7.605499999999848e-05, 7.540300000000166e-05, 7.601399999999925e-05, 7.565300000000191e-05, 7.606899999999805e-05, 7.601399999999925e-05, 7.566699999999801e-05, 7.574999999999943e-05, 7.537499999999905e-05, 7.541600000000176e-05, 7.522300000000273e-05, 7.559800000000311e-05, 7.547299999999951e-05, 7.606899999999805e-05, 7.579099999999866e-05, 7.623600000000036e-05, 7.605500000000195e-05, 7.533300000000034e-05, 7.522199999999979e-05, 7.529099999999816e-05, 7.618100000000155e-05, 7.541700000000123e-05, 7.573599999999986e-05, 7.529200000000111e-05, 7.533300000000034e-05, 7.595899999999697e-05, 7.604199999999839e-05, 7.580600000000118e-05, 7.601399999999925e-05, 7.554200000000136e-05, 7.554199999999789e-05, 7.551399999999875e-05, 7.520800000000022e-05, 7.544500000000037e-05, 7.597200000000054e-05, 7.536099999999948e-05, 7.545800000000047e-05, 7.538899999999862e-05, 7.532000000000025e-05, 7.61249999999998e-05, 7.552799999999832e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.760" endtime="20201115 23:02:20.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.755" endtime="20201115 23:02:20.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.766" endtime="20201115 23:02:20.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.770" endtime="20201115 23:02:20.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.768" endtime="20201115 23:02:20.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.764" endtime="20201115 23:02:20.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.395" endtime="20201115 23:02:20.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.393" endtime="20201115 23:02:20.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.393" endtime="20201115 23:02:20.791"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.793" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.802" endtime="20201115 23:02:20.822"></status>
</kw>
<msg timestamp="20201115 23:02:20.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.800" endtime="20201115 23:02:20.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.823" endtime="20201115 23:02:20.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.826" endtime="20201115 23:02:20.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.798" endtime="20201115 23:02:20.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.795" endtime="20201115 23:02:20.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.835" endtime="20201115 23:02:21.121"></status>
</kw>
<msg timestamp="20201115 23:02:21.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025300819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025377403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.833" endtime="20201115 23:02:21.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025300819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025377403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.125" endtime="20201115 23:02:21.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.133" endtime="20201115 23:02:21.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.831" endtime="20201115 23:02:21.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.829" endtime="20201115 23:02:21.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.140" level="INFO">${RESULT} = [{'time': 0.025377403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.658400000000107e-05, 'source_diff': 7.658400000000107e-05}, {'time': 0.025458431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:21.136" endtime="20201115 23:02:21.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.154" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:21.141" endtime="20201115 23:02:21.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.158" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.157" endtime="20201115 23:02:21.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.161" level="INFO">VALUE: [7.658400000000107e-05, 7.636199999999996e-05, 7.686099999999751e-05, 7.702799999999982e-05, 7.674999999999696e-05, 7.688900000000012e-05, 7.640199999999972e-05, 7.702799999999982e-05, 7.623600000000036e-05, 7.648600000000061e-05, 7.629100000000263e-05, 7.692999999999936e-05, 7.670800000000172e-05, 7.633299999999787e-05, 7.634700000000091e-05, 7.675000000000043e-05, 7.692999999999936e-05, 7.716699999999951e-05, 7.697199999999807e-05, 7.658299999999812e-05, 7.7070000000002e-05, 7.638899999999962e-05, 7.686099999999751e-05, 7.691699999999926e-05, 7.7070000000002e-05, 7.709800000000114e-05, 7.66250000000003e-05, 7.663899999999987e-05, 7.72640000000005e-05, 7.71380000000009e-05, 7.694399999999893e-05, 7.648600000000061e-05, 7.723599999999789e-05, 7.687500000000055e-05, 7.654199999999889e-05, 7.624999999999993e-05, 7.663899999999987e-05, 7.705600000000243e-05, 7.679200000000261e-05, 7.679199999999914e-05, 7.700000000000068e-05, 7.622200000000079e-05, 7.651399999999975e-05, 7.651399999999975e-05, 7.629199999999864e-05, 7.69310000000023e-05, 7.686100000000098e-05, 7.701400000000025e-05, 7.669500000000162e-05, 7.638800000000015e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.159" endtime="20201115 23:02:21.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.155" endtime="20201115 23:02:21.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.164" endtime="20201115 23:02:21.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.167" endtime="20201115 23:02:21.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.166" endtime="20201115 23:02:21.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.162" endtime="20201115 23:02:21.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.794" endtime="20201115 23:02:21.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.792" endtime="20201115 23:02:21.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.791" endtime="20201115 23:02:21.189"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.191" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.199" endtime="20201115 23:02:21.218"></status>
</kw>
<msg timestamp="20201115 23:02:21.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.198" endtime="20201115 23:02:21.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.219" endtime="20201115 23:02:21.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.222" endtime="20201115 23:02:21.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.195" endtime="20201115 23:02:21.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.193" endtime="20201115 23:02:21.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.231" endtime="20201115 23:02:21.516"></status>
</kw>
<msg timestamp="20201115 23:02:21.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024640361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.230" endtime="20201115 23:02:21.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024640361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.521" endtime="20201115 23:02:21.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.529" endtime="20201115 23:02:21.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.227" endtime="20201115 23:02:21.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.225" endtime="20201115 23:02:21.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.536" level="INFO">${RESULT} = [{'time': 0.024640361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.748599999999814e-05, 'source_diff': 7.748599999999814e-05}, {'time': 0.024723347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:21.532" endtime="20201115 23:02:21.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.549" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:21.537" endtime="20201115 23:02:21.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.554" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.553" endtime="20201115 23:02:21.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.556" level="INFO">VALUE: [7.748599999999814e-05, 7.779100000000067e-05, 7.741699999999976e-05, 7.806900000000006e-05, 7.734699999999844e-05, 7.737499999999758e-05, 7.809700000000266e-05, 7.736099999999801e-05, 7.748599999999814e-05, 7.815300000000094e-05, 7.74030000000002e-05, 7.777800000000057e-05, 7.808400000000257e-05, 7.752800000000032e-05, 7.798700000000158e-05, 7.783299999999937e-05, 7.736099999999801e-05, 7.800000000000168e-05, 7.744500000000237e-05, 7.812499999999833e-05, 7.743099999999933e-05, 7.770800000000272e-05, 7.82779999999976e-05, 7.76250000000013e-05, 7.763900000000087e-05, 7.751399999999728e-05, 7.816700000000051e-05, 7.719499999999865e-05, 7.772199999999882e-05, 7.769499999999915e-05, 7.791700000000026e-05, 7.759799999999817e-05, 7.798700000000158e-05, 7.811099999999876e-05, 7.818100000000008e-05, 7.787500000000155e-05, 7.791600000000079e-05, 7.808299999999962e-05, 7.805500000000049e-05, 7.766599999999707e-05, 7.777800000000057e-05, 7.776399999999753e-05, 7.801399999999778e-05, 7.776399999999753e-05, 7.774999999999796e-05, 7.81389999999979e-05, 7.788899999999765e-05, 7.777800000000057e-05, 7.818100000000008e-05, 7.804200000000039e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.555" endtime="20201115 23:02:21.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.550" endtime="20201115 23:02:21.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.559" endtime="20201115 23:02:21.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.563" endtime="20201115 23:02:21.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.561" endtime="20201115 23:02:21.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.558" endtime="20201115 23:02:21.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.192" endtime="20201115 23:02:21.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.190" endtime="20201115 23:02:21.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.189" endtime="20201115 23:02:21.584"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.586" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.595" endtime="20201115 23:02:21.613"></status>
</kw>
<msg timestamp="20201115 23:02:21.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.593" endtime="20201115 23:02:21.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.614" endtime="20201115 23:02:21.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.617" endtime="20201115 23:02:21.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.590" endtime="20201115 23:02:21.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.588" endtime="20201115 23:02:21.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.626" endtime="20201115 23:02:21.913"></status>
</kw>
<msg timestamp="20201115 23:02:21.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025115153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025194208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.624" endtime="20201115 23:02:21.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025115153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025194208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.918" endtime="20201115 23:02:21.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.926" endtime="20201115 23:02:21.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.622" endtime="20201115 23:02:21.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.620" endtime="20201115 23:02:21.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.933" level="INFO">${RESULT} = [{'time': 0.025194208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.905499999999802e-05, 'source_diff': 7.905499999999802e-05}, {'time': 0.02528225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:21.929" endtime="20201115 23:02:21.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.946" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:21.934" endtime="20201115 23:02:21.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.951" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.950" endtime="20201115 23:02:21.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.953" level="INFO">VALUE: [7.905499999999802e-05, 7.852799999999785e-05, 7.8764000000002e-05, 7.888899999999865e-05, 7.827800000000107e-05, 7.852799999999785e-05, 7.838900000000162e-05, 7.907000000000053e-05, 7.929200000000164e-05, 7.887500000000255e-05, 7.855500000000099e-05, 7.897200000000007e-05, 7.863900000000187e-05, 7.833399999999935e-05, 7.880600000000071e-05, 7.86389999999984e-05, 7.90840000000001e-05, 7.8764000000002e-05, 7.85969999999997e-05, 7.89580000000005e-05, 7.880500000000124e-05, 7.851400000000175e-05, 7.901399999999878e-05, 7.891600000000179e-05, 7.880499999999777e-05, 7.879200000000114e-05, 7.82779999999976e-05, 7.893099999999736e-05, 7.862499999999883e-05, 7.857000000000003e-05, 7.886199999999899e-05, 7.901399999999878e-05, 7.855600000000046e-05, 7.868099999999711e-05, 7.852699999999838e-05, 7.913799999999943e-05, 7.909799999999967e-05, 7.881899999999734e-05, 7.9151999999999e-05, 7.911099999999976e-05, 7.836100000000248e-05, 7.819400000000018e-05, 7.894400000000093e-05, 7.89030000000017e-05, 7.877800000000157e-05, 7.852799999999785e-05, 7.866700000000101e-05, 7.858300000000012e-05, 7.882000000000028e-05, 7.898599999999964e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.952" endtime="20201115 23:02:21.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.947" endtime="20201115 23:02:21.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.956" endtime="20201115 23:02:21.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.960" endtime="20201115 23:02:21.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.958" endtime="20201115 23:02:21.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.955" endtime="20201115 23:02:21.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.587" endtime="20201115 23:02:21.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.585" endtime="20201115 23:02:21.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.584" endtime="20201115 23:02:21.981"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.983" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.991" endtime="20201115 23:02:22.010"></status>
</kw>
<msg timestamp="20201115 23:02:22.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.990" endtime="20201115 23:02:22.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.012" endtime="20201115 23:02:22.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.015" endtime="20201115 23:02:22.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.987" endtime="20201115 23:02:22.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.985" endtime="20201115 23:02:22.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.024" endtime="20201115 23:02:22.310"></status>
</kw>
<msg timestamp="20201115 23:02:22.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025224625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025304694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.023" endtime="20201115 23:02:22.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025224625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025304694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.314" endtime="20201115 23:02:22.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.322" endtime="20201115 23:02:22.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.020" endtime="20201115 23:02:22.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.018" endtime="20201115 23:02:22.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.329" level="INFO">${RESULT} = [{'time': 0.025304694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.006899999999859e-05, 'source_diff': 8.006899999999859e-05}, {'time': 0.025391736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:22.326" endtime="20201115 23:02:22.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.344" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:22.330" endtime="20201115 23:02:22.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.348" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.347" endtime="20201115 23:02:22.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.351" level="INFO">VALUE: [8.006899999999859e-05, 7.994400000000193e-05, 8.023599999999742e-05, 7.95970000000007e-05, 7.931899999999784e-05, 8.000000000000021e-05, 7.948600000000014e-05, 7.983300000000138e-05, 7.962499999999983e-05, 7.970800000000125e-05, 8.012499999999687e-05, 7.962499999999983e-05, 7.96389999999994e-05, 7.951400000000275e-05, 7.938900000000262e-05, 7.998599999999717e-05, 7.952799999999885e-05, 7.980599999999824e-05, 7.963799999999993e-05, 7.974999999999996e-05, 7.952699999999938e-05, 8.004099999999945e-05, 8.008300000000163e-05, 7.968099999999811e-05, 8.000000000000021e-05, 8.004100000000292e-05, 7.994400000000193e-05, 7.97779999999991e-05, 7.949999999999971e-05, 7.941700000000176e-05, 7.938899999999915e-05, 7.934700000000044e-05, 8.018100000000208e-05, 7.983400000000085e-05, 7.962499999999983e-05, 7.92229999999998e-05, 7.947300000000004e-05, 7.993100000000183e-05, 7.966599999999907e-05, 7.952699999999938e-05, 8.023600000000089e-05, 7.945900000000047e-05, 8.022199999999785e-05, 7.973600000000039e-05, 7.972200000000082e-05, 7.979199999999867e-05, 7.934700000000044e-05, 7.984699999999748e-05, 8.019399999999871e-05, 7.958299999999766e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.349" endtime="20201115 23:02:22.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.345" endtime="20201115 23:02:22.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.354" endtime="20201115 23:02:22.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.357" endtime="20201115 23:02:22.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.356" endtime="20201115 23:02:22.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.352" endtime="20201115 23:02:22.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.984" endtime="20201115 23:02:22.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.982" endtime="20201115 23:02:22.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.981" endtime="20201115 23:02:22.378"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.381" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.390" endtime="20201115 23:02:22.408"></status>
</kw>
<msg timestamp="20201115 23:02:22.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.388" endtime="20201115 23:02:22.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.409" endtime="20201115 23:02:22.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.412" endtime="20201115 23:02:22.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.385" endtime="20201115 23:02:22.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.383" endtime="20201115 23:02:22.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.421" endtime="20201115 23:02:22.707"></status>
</kw>
<msg timestamp="20201115 23:02:22.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025013931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025094389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.420" endtime="20201115 23:02:22.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025013931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025094389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.711" endtime="20201115 23:02:22.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.719" endtime="20201115 23:02:22.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.417" endtime="20201115 23:02:22.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.415" endtime="20201115 23:02:22.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.726" level="INFO">${RESULT} = [{'time': 0.025094389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.0458000000002e-05, 'source_diff': 8.0458000000002e-05}, {'time': 0.025182403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201115 23:02:22.723" endtime="20201115 23:02:22.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.739" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:22.727" endtime="20201115 23:02:22.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.744" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.743" endtime="20201115 23:02:22.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.746" level="INFO">VALUE: [8.0458000000002e-05, 8.025000000000046e-05, 8.057000000000203e-05, 8.108399999999863e-05, 8.098600000000164e-05, 8.056899999999909e-05, 8.042999999999939e-05, 8.045799999999853e-05, 8.04719999999981e-05, 8.106899999999959e-05, 8.120799999999928e-05, 8.09719999999986e-05, 8.119399999999971e-05, 8.019400000000218e-05, 8.07780000000001e-05, 8.083300000000238e-05, 8.070900000000172e-05, 8.030599999999874e-05, 8.036099999999755e-05, 8.020800000000175e-05, 8.029199999999917e-05, 8.037499999999712e-05, 8.084799999999795e-05, 8.070899999999825e-05, 8.080599999999924e-05, 8.022200000000132e-05, 8.098600000000164e-05, 8.055499999999952e-05, 8.087500000000108e-05, 8.088900000000065e-05, 8.1152999999997e-05, 8.066600000000007e-05, 8.084699999999848e-05, 8.105500000000002e-05, 8.100000000000121e-05, 8.04719999999981e-05, 8.045799999999853e-05, 8.079199999999967e-05, 8.066699999999954e-05, 8.018100000000208e-05, 8.075000000000096e-05, 8.102800000000035e-05, 8.113899999999744e-05, 8.059800000000117e-05, 8.091600000000032e-05, 8.02779999999996e-05, 8.07910000000002e-05, 8.040200000000025e-05, 8.036100000000101e-05, 8.104099999999698e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.745" endtime="20201115 23:02:22.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.740" endtime="20201115 23:02:22.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.750" endtime="20201115 23:02:22.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.753" endtime="20201115 23:02:22.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.751" endtime="20201115 23:02:22.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.748" endtime="20201115 23:02:22.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.381" endtime="20201115 23:02:22.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.380" endtime="20201115 23:02:22.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.379" endtime="20201115 23:02:22.775"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.777" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.785" endtime="20201115 23:02:22.803"></status>
</kw>
<msg timestamp="20201115 23:02:22.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.784" endtime="20201115 23:02:22.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.805" endtime="20201115 23:02:22.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.808" endtime="20201115 23:02:22.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.781" endtime="20201115 23:02:22.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.779" endtime="20201115 23:02:22.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.817" endtime="20201115 23:02:23.102"></status>
</kw>
<msg timestamp="20201115 23:02:23.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025068181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025149931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.815" endtime="20201115 23:02:23.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025068181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025149931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.106" endtime="20201115 23:02:23.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.114" endtime="20201115 23:02:23.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.813" endtime="20201115 23:02:23.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.811" endtime="20201115 23:02:23.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.121" level="INFO">${RESULT} = [{'time': 0.025149931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.175000000000196e-05, 'source_diff': 8.175000000000196e-05}, {'time': 0.025241, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:23.118" endtime="20201115 23:02:23.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.134" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:23.122" endtime="20201115 23:02:23.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.139" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.138" endtime="20201115 23:02:23.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.141" level="INFO">VALUE: [8.175000000000196e-05, 8.195800000000003e-05, 8.190199999999828e-05, 8.184700000000295e-05, 8.159699999999923e-05, 8.200000000000221e-05, 8.138900000000115e-05, 8.14719999999991e-05, 8.204200000000092e-05, 8.158299999999966e-05, 8.138900000000115e-05, 8.219500000000018e-05, 8.201400000000178e-05, 8.213899999999844e-05, 8.145799999999953e-05, 8.216700000000104e-05, 8.17369999999984e-05, 8.17780000000011e-05, 8.205600000000049e-05, 8.126400000000103e-05, 8.205500000000102e-05, 8.13329999999994e-05, 8.218000000000114e-05, 8.122199999999885e-05, 8.158299999999966e-05, 8.16390000000014e-05, 8.145799999999953e-05, 8.138900000000115e-05, 8.181900000000034e-05, 8.144499999999943e-05, 8.193100000000036e-05, 8.156900000000009e-05, 8.173599999999892e-05, 8.202799999999788e-05, 8.14170000000003e-05, 8.151400000000128e-05, 8.151399999999781e-05, 8.179200000000067e-05, 8.205600000000049e-05, 8.144499999999943e-05, 8.208300000000016e-05, 8.204199999999745e-05, 8.223599999999942e-05, 8.19719999999996e-05, 8.191600000000132e-05, 8.190299999999776e-05, 8.206900000000059e-05, 8.212499999999887e-05, 8.21109999999993e-05, 8.169499999999968e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.140" endtime="20201115 23:02:23.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.135" endtime="20201115 23:02:23.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.145" endtime="20201115 23:02:23.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.148" endtime="20201115 23:02:23.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.147" endtime="20201115 23:02:23.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.143" endtime="20201115 23:02:23.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.778" endtime="20201115 23:02:23.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.776" endtime="20201115 23:02:23.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.775" endtime="20201115 23:02:23.170"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.172" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.180" endtime="20201115 23:02:23.199"></status>
</kw>
<msg timestamp="20201115 23:02:23.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.179" endtime="20201115 23:02:23.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.201" endtime="20201115 23:02:23.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.203" endtime="20201115 23:02:23.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.176" endtime="20201115 23:02:23.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.174" endtime="20201115 23:02:23.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.212" endtime="20201115 23:02:23.498"></status>
</kw>
<msg timestamp="20201115 23:02:23.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024335875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024418319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.211" endtime="20201115 23:02:23.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024335875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024418319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.502" endtime="20201115 23:02:23.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.510" endtime="20201115 23:02:23.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.208" endtime="20201115 23:02:23.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.206" endtime="20201115 23:02:23.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.517" level="INFO">${RESULT} = [{'time': 0.024418319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.244400000000096e-05, 'source_diff': 8.244400000000096e-05}, {'time': 0.024511306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:23.514" endtime="20201115 23:02:23.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.530" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:23.518" endtime="20201115 23:02:23.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.535" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.534" endtime="20201115 23:02:23.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.538" level="INFO">VALUE: [8.244400000000096e-05, 8.30980000000002e-05, 8.272200000000035e-05, 8.319400000000171e-05, 8.266600000000207e-05, 8.302699999999941e-05, 8.31110000000003e-05, 8.224999999999899e-05, 8.28049999999983e-05, 8.286100000000005e-05, 8.29309999999979e-05, 8.227799999999813e-05, 8.268100000000111e-05, 8.232000000000031e-05, 8.27919999999982e-05, 8.282000000000081e-05, 8.226400000000203e-05, 8.286100000000005e-05, 8.237499999999912e-05, 8.251399999999881e-05, 8.298600000000017e-05, 8.302800000000235e-05, 8.240299999999826e-05, 8.252700000000238e-05, 8.28049999999983e-05, 8.308300000000116e-05, 8.286100000000005e-05, 8.308299999999769e-05, 8.318000000000214e-05, 8.256999999999709e-05, 8.323600000000042e-05, 8.22919999999977e-05, 8.277799999999863e-05, 8.27780000000021e-05, 8.29720000000006e-05, 8.258400000000013e-05, 8.29309999999979e-05, 8.312499999999987e-05, 8.232000000000031e-05, 8.222299999999932e-05, 8.319400000000171e-05, 8.236200000000249e-05, 8.24720000000001e-05, 8.306900000000159e-05, 8.291599999999885e-05, 8.241599999999835e-05, 8.29720000000006e-05, 8.26109999999998e-05, 8.245800000000053e-05, 8.263899999999894e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.536" endtime="20201115 23:02:23.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.531" endtime="20201115 23:02:23.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.541" endtime="20201115 23:02:23.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.544" endtime="20201115 23:02:23.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.543" endtime="20201115 23:02:23.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.539" endtime="20201115 23:02:23.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.173" endtime="20201115 23:02:23.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.171" endtime="20201115 23:02:23.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.170" endtime="20201115 23:02:23.566"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.568" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.576" endtime="20201115 23:02:23.595"></status>
</kw>
<msg timestamp="20201115 23:02:23.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.575" endtime="20201115 23:02:23.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.597" endtime="20201115 23:02:23.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.599" endtime="20201115 23:02:23.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.572" endtime="20201115 23:02:23.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.570" endtime="20201115 23:02:23.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.608" endtime="20201115 23:02:23.895"></status>
</kw>
<msg timestamp="20201115 23:02:23.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025584972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025668861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.607" endtime="20201115 23:02:23.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025584972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025668861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.899" endtime="20201115 23:02:23.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.907" endtime="20201115 23:02:23.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.604" endtime="20201115 23:02:23.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.602" endtime="20201115 23:02:23.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.914" level="INFO">${RESULT} = [{'time': 0.025668861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.388900000000019e-05, 'source_diff': 8.388900000000019e-05}, {'time': 0.025756889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:23.911" endtime="20201115 23:02:23.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.933" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:23.919" endtime="20201115 23:02:23.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.938" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.936" endtime="20201115 23:02:23.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.940" level="INFO">VALUE: [8.388900000000019e-05, 8.33330000000014e-05, 8.422199999999838e-05, 8.324999999999999e-05, 8.383299999999844e-05, 8.413900000000044e-05, 8.420900000000175e-05, 8.324999999999999e-05, 8.391699999999933e-05, 8.366699999999908e-05, 8.372300000000082e-05, 8.347300000000057e-05, 8.337500000000012e-05, 8.319400000000171e-05, 8.400000000000074e-05, 8.417999999999967e-05, 8.375000000000049e-05, 8.38049999999993e-05, 8.365300000000297e-05, 8.36529999999995e-05, 8.386100000000105e-05, 8.358300000000166e-05, 8.405599999999902e-05, 8.320899999999729e-05, 8.369399999999874e-05, 8.412500000000087e-05, 8.402799999999988e-05, 8.324999999999999e-05, 8.368099999999865e-05, 8.338899999999969e-05, 8.407000000000206e-05, 8.405499999999955e-05, 8.404099999999998e-05, 8.33049999999988e-05, 8.386100000000105e-05, 8.356899999999862e-05, 8.386100000000105e-05, 8.383299999999844e-05, 8.422200000000185e-05, 8.338899999999969e-05, 8.337499999999665e-05, 8.344500000000143e-05, 8.358300000000166e-05, 8.366700000000254e-05, 8.383400000000138e-05, 8.373600000000092e-05, 8.39309999999989e-05, 8.412500000000087e-05, 8.419500000000218e-05, 8.322200000000085e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.939" endtime="20201115 23:02:23.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.934" endtime="20201115 23:02:23.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.943" endtime="20201115 23:02:23.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.946" endtime="20201115 23:02:23.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.945" endtime="20201115 23:02:23.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.941" endtime="20201115 23:02:23.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.569" endtime="20201115 23:02:23.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.567" endtime="20201115 23:02:23.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.566" endtime="20201115 23:02:23.968"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.970" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.978" endtime="20201115 23:02:23.997"></status>
</kw>
<msg timestamp="20201115 23:02:23.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.977" endtime="20201115 23:02:23.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.999" endtime="20201115 23:02:24.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.001" endtime="20201115 23:02:24.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.974" endtime="20201115 23:02:24.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.972" endtime="20201115 23:02:24.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.010" endtime="20201115 23:02:24.295"></status>
</kw>
<msg timestamp="20201115 23:02:24.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024383486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024468153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.009" endtime="20201115 23:02:24.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024383486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024468153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.300" endtime="20201115 23:02:24.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.308" endtime="20201115 23:02:24.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.006" endtime="20201115 23:02:24.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.005" endtime="20201115 23:02:24.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.315" level="INFO">${RESULT} = [{'time': 0.024468153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.466700000000008e-05, 'source_diff': 8.466700000000008e-05}, {'time': 0.024563181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:24.312" endtime="20201115 23:02:24.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.328" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:24.316" endtime="20201115 23:02:24.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.333" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.332" endtime="20201115 23:02:24.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.335" level="INFO">VALUE: [8.466700000000008e-05, 8.509799999999873e-05, 8.430599999999927e-05, 8.491600000000085e-05, 8.448600000000167e-05, 8.451400000000081e-05, 8.490200000000128e-05, 8.505500000000055e-05, 8.479100000000073e-05, 8.473599999999845e-05, 8.491600000000085e-05, 8.51249999999984e-05, 8.513899999999797e-05, 8.431899999999937e-05, 8.472199999999888e-05, 8.505600000000002e-05, 8.450000000000124e-05, 8.495799999999956e-05, 8.472299999999836e-05, 8.504200000000045e-05, 8.46530000000005e-05, 8.469499999999922e-05, 8.4846999999999e-05, 8.487499999999815e-05, 8.484700000000248e-05, 8.46249999999979e-05, 8.51660000000011e-05, 8.459699999999876e-05, 8.473599999999845e-05, 8.504200000000045e-05, 8.452800000000038e-05, 8.462500000000137e-05, 8.452800000000038e-05, 8.470900000000225e-05, 8.440300000000026e-05, 8.447199999999863e-05, 8.491699999999686e-05, 8.491700000000033e-05, 8.44859999999982e-05, 8.434800000000145e-05, 8.518100000000015e-05, 8.436199999999755e-05, 8.434700000000198e-05, 8.463900000000094e-05, 8.525000000000199e-05, 8.454100000000048e-05, 8.46530000000005e-05, 8.458299999999919e-05, 8.524999999999852e-05, 8.480599999999977e-05]</msg>
<status status="PASS" starttime="20201115 23:02:24.334" endtime="20201115 23:02:24.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.329" endtime="20201115 23:02:24.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.339" endtime="20201115 23:02:24.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.342" endtime="20201115 23:02:24.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.340" endtime="20201115 23:02:24.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.337" endtime="20201115 23:02:24.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.971" endtime="20201115 23:02:24.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.969" endtime="20201115 23:02:24.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.968" endtime="20201115 23:02:24.363"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.365" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.374" endtime="20201115 23:02:24.393"></status>
</kw>
<msg timestamp="20201115 23:02:24.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.372" endtime="20201115 23:02:24.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.394" endtime="20201115 23:02:24.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.397" endtime="20201115 23:02:24.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.370" endtime="20201115 23:02:24.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.368" endtime="20201115 23:02:24.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.406" endtime="20201115 23:02:24.690"></status>
</kw>
<msg timestamp="20201115 23:02:24.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024651583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024737528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.404" endtime="20201115 23:02:24.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024651583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024737528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.694" endtime="20201115 23:02:24.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.703" endtime="20201115 23:02:24.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.402" endtime="20201115 23:02:24.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.400" endtime="20201115 23:02:24.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.709" level="INFO">${RESULT} = [{'time': 0.024737528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.594500000000047e-05, 'source_diff': 8.594500000000047e-05}, {'time': 0.024829542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:24.706" endtime="20201115 23:02:24.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.723" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:24.710" endtime="20201115 23:02:24.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.728" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.726" endtime="20201115 23:02:24.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.730" level="INFO">VALUE: [8.594500000000047e-05, 8.61249999999994e-05, 8.601400000000231e-05, 8.583399999999991e-05, 8.595800000000056e-05, 8.54310000000004e-05, 8.563799999999899e-05, 8.523599999999895e-05, 8.626400000000256e-05, 8.561099999999933e-05, 8.613899999999897e-05, 8.591599999999838e-05, 8.618099999999768e-05, 8.56249999999989e-05, 8.525000000000199e-05, 8.559699999999976e-05, 8.595900000000004e-05, 8.605600000000102e-05, 8.609799999999973e-05, 8.551400000000181e-05, 8.545899999999954e-05, 8.545800000000006e-05, 8.548699999999868e-05, 8.536199999999855e-05, 8.58050000000013e-05, 8.523599999999895e-05, 8.602799999999841e-05, 8.576400000000206e-05, 8.576399999999859e-05, 8.562500000000237e-05, 8.56249999999989e-05, 8.586100000000305e-05, 8.538899999999822e-05, 8.54310000000004e-05, 8.59729999999996e-05, 8.563900000000194e-05, 8.588799999999924e-05, 8.61249999999994e-05, 8.554200000000095e-05, 8.563800000000246e-05, 8.586100000000305e-05, 8.53050000000008e-05, 8.579199999999773e-05, 8.533399999999941e-05, 8.613799999999949e-05, 8.541600000000135e-05, 8.588899999999872e-05, 8.588900000000219e-05, 8.53469999999995e-05, 8.590300000000176e-05]</msg>
<status status="PASS" starttime="20201115 23:02:24.729" endtime="20201115 23:02:24.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.724" endtime="20201115 23:02:24.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.733" endtime="20201115 23:02:24.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.737" endtime="20201115 23:02:24.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.735" endtime="20201115 23:02:24.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.731" endtime="20201115 23:02:24.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.366" endtime="20201115 23:02:24.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.364" endtime="20201115 23:02:24.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.363" endtime="20201115 23:02:24.758"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.760" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.768" endtime="20201115 23:02:24.786"></status>
</kw>
<msg timestamp="20201115 23:02:24.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.767" endtime="20201115 23:02:24.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.788" endtime="20201115 23:02:24.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.791" endtime="20201115 23:02:24.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.764" endtime="20201115 23:02:24.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.762" endtime="20201115 23:02:24.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.800" endtime="20201115 23:02:25.088"></status>
</kw>
<msg timestamp="20201115 23:02:25.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024179792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024266806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.799" endtime="20201115 23:02:25.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024179792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024266806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.092" endtime="20201115 23:02:25.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.100" endtime="20201115 23:02:25.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.796" endtime="20201115 23:02:25.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.794" endtime="20201115 23:02:25.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.107" level="INFO">${RESULT} = [{'time': 0.024266806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.701399999999984e-05, 'source_diff': 8.701399999999984e-05}, {'time': 0.024358833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:25.104" endtime="20201115 23:02:25.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.121" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:25.108" endtime="20201115 23:02:25.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.125" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.124" endtime="20201115 23:02:25.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.128" level="INFO">VALUE: [8.701399999999984e-05, 8.623599999999995e-05, 8.643000000000192e-05, 8.68050000000023e-05, 8.659699999999729e-05, 8.681900000000187e-05, 8.713899999999997e-05, 8.637499999999965e-05, 8.651399999999934e-05, 8.651399999999934e-05, 8.726400000000009e-05, 8.661100000000033e-05, 8.720799999999834e-05, 8.668100000000165e-05, 8.641599999999888e-05, 8.627799999999866e-05, 8.715299999999954e-05, 8.680499999999883e-05, 8.684800000000048e-05, 8.659700000000076e-05, 8.709699999999779e-05, 8.652800000000238e-05, 8.716599999999963e-05, 8.709700000000126e-05, 8.677799999999916e-05, 8.695800000000156e-05, 8.633300000000094e-05, 8.680600000000177e-05, 8.706899999999865e-05, 8.686100000000058e-05, 8.670800000000131e-05, 8.679199999999873e-05, 8.702799999999941e-05, 8.637499999999965e-05, 8.634799999999998e-05, 8.651399999999934e-05, 8.656899999999815e-05, 8.657000000000109e-05, 8.647199999999716e-05, 8.711100000000083e-05, 8.652699999999944e-05, 8.656900000000162e-05, 8.656899999999815e-05, 8.686099999999711e-05, 8.701399999999984e-05, 8.677799999999916e-05, 8.656999999999762e-05, 8.63470000000005e-05, 8.66249999999999e-05, 8.71669999999991e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.126" endtime="20201115 23:02:25.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.121" endtime="20201115 23:02:25.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.131" endtime="20201115 23:02:25.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.134" endtime="20201115 23:02:25.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.133" endtime="20201115 23:02:25.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.129" endtime="20201115 23:02:25.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.761" endtime="20201115 23:02:25.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.759" endtime="20201115 23:02:25.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.758" endtime="20201115 23:02:25.155"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.158" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.166" endtime="20201115 23:02:25.187"></status>
</kw>
<msg timestamp="20201115 23:02:25.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.165" endtime="20201115 23:02:25.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.189" endtime="20201115 23:02:25.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.191" endtime="20201115 23:02:25.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.162" endtime="20201115 23:02:25.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.160" endtime="20201115 23:02:25.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.200" endtime="20201115 23:02:25.486"></status>
</kw>
<msg timestamp="20201115 23:02:25.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025661194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025749431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.199" endtime="20201115 23:02:25.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025661194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025749431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.490" endtime="20201115 23:02:25.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.498" endtime="20201115 23:02:25.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.196" endtime="20201115 23:02:25.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.194" endtime="20201115 23:02:25.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.505" level="INFO">${RESULT} = [{'time': 0.025749431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.823700000000143e-05, 'source_diff': 8.823700000000143e-05}, {'time': 0.025839431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:25.502" endtime="20201115 23:02:25.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.520" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:25.506" endtime="20201115 23:02:25.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.524" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.523" endtime="20201115 23:02:25.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.527" level="INFO">VALUE: [8.823700000000143e-05, 8.736200000000055e-05, 8.815300000000054e-05, 8.758399999999819e-05, 8.786099999999811e-05, 8.81800000000002e-05, 8.765200000000056e-05, 8.780499999999983e-05, 8.822199999999891e-05, 8.81389999999975e-05, 8.752799999999991e-05, 8.759699999999829e-05, 8.73470000000015e-05, 8.765300000000004e-05, 8.752799999999991e-05, 8.783300000000244e-05, 8.727799999999966e-05, 8.81670000000001e-05, 8.808399999999869e-05, 8.738900000000022e-05, 8.761199999999733e-05, 8.805600000000302e-05, 8.777700000000069e-05, 8.726300000000062e-05, 8.744399999999902e-05, 8.766600000000013e-05, 8.759699999999829e-05, 8.818100000000315e-05, 8.818099999999968e-05, 8.747200000000163e-05, 8.752799999999991e-05, 8.756899999999915e-05, 8.805599999999955e-05, 8.740299999999979e-05, 8.726399999999662e-05, 8.726400000000009e-05, 8.752799999999991e-05, 8.812499999999793e-05, 8.734800000000098e-05, 8.737499999999718e-05, 8.756900000000262e-05, 8.769399999999927e-05, 8.769400000000274e-05, 8.752799999999991e-05, 8.811099999999836e-05, 8.727799999999966e-05, 8.806899999999965e-05, 8.747199999999816e-05, 8.81670000000001e-05, 8.81670000000001e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.525" endtime="20201115 23:02:25.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.520" endtime="20201115 23:02:25.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.530" endtime="20201115 23:02:25.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.533" endtime="20201115 23:02:25.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.532" endtime="20201115 23:02:25.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.528" endtime="20201115 23:02:25.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.158" endtime="20201115 23:02:25.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.157" endtime="20201115 23:02:25.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.156" endtime="20201115 23:02:25.555"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.557" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.565" endtime="20201115 23:02:25.584"></status>
</kw>
<msg timestamp="20201115 23:02:25.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.564" endtime="20201115 23:02:25.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.586" endtime="20201115 23:02:25.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.588" endtime="20201115 23:02:25.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.561" endtime="20201115 23:02:25.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.559" endtime="20201115 23:02:25.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.598" endtime="20201115 23:02:25.884"></status>
</kw>
<msg timestamp="20201115 23:02:25.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024726194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024815319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.596" endtime="20201115 23:02:25.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024726194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024815319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.888" endtime="20201115 23:02:25.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.896" endtime="20201115 23:02:25.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.593" endtime="20201115 23:02:25.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.592" endtime="20201115 23:02:25.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.903" level="INFO">${RESULT} = [{'time': 0.024815319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.912499999999893e-05, 'source_diff': 8.912499999999893e-05}, {'time': 0.024907264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:25.900" endtime="20201115 23:02:25.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.916" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:25.904" endtime="20201115 23:02:25.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.921" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.920" endtime="20201115 23:02:25.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.924" level="INFO">VALUE: [8.912499999999893e-05, 8.840299999999732e-05, 8.837499999999818e-05, 8.88060000000003e-05, 8.920800000000034e-05, 8.886200000000205e-05, 8.884799999999901e-05, 8.908300000000022e-05, 8.91939999999973e-05, 8.904099999999804e-05, 8.876299999999865e-05, 8.870799999999984e-05, 8.850000000000177e-05, 8.892999999999748e-05, 8.879099999999779e-05, 8.824999999999805e-05, 8.838900000000122e-05, 8.838900000000122e-05, 8.898599999999923e-05, 8.84449999999995e-05, 8.852800000000091e-05, 8.838900000000122e-05, 8.877800000000116e-05, 8.823599999999848e-05, 8.904199999999751e-05, 8.891600000000138e-05, 8.884799999999901e-05, 8.833299999999947e-05, 8.891700000000086e-05, 8.83189999999999e-05, 8.919400000000077e-05, 8.862499999999843e-05, 8.843000000000045e-05, 8.838799999999827e-05, 8.884799999999901e-05, 8.861099999999886e-05, 8.879200000000073e-05, 8.823700000000143e-05, 8.861099999999886e-05, 8.834699999999904e-05, 8.86250000000019e-05, 8.908399999999969e-05, 8.84869999999982e-05, 8.872300000000236e-05, 8.84999999999983e-05, 8.920800000000034e-05, 8.826299999999815e-05, 8.824999999999805e-05, 8.870799999999984e-05, 8.88060000000003e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.922" endtime="20201115 23:02:25.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.917" endtime="20201115 23:02:25.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.927" endtime="20201115 23:02:25.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.931" endtime="20201115 23:02:25.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.929" endtime="20201115 23:02:25.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.925" endtime="20201115 23:02:25.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.558" endtime="20201115 23:02:25.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.556" endtime="20201115 23:02:25.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.555" endtime="20201115 23:02:25.952"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.954" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.963" endtime="20201115 23:02:25.981"></status>
</kw>
<msg timestamp="20201115 23:02:25.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.961" endtime="20201115 23:02:25.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.983" endtime="20201115 23:02:25.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.986" endtime="20201115 23:02:25.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.958" endtime="20201115 23:02:25.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.956" endtime="20201115 23:02:25.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.995" endtime="20201115 23:02:26.281"></status>
</kw>
<msg timestamp="20201115 23:02:26.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024326083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024415833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.993" endtime="20201115 23:02:26.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024326083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024415833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.285" endtime="20201115 23:02:26.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.293" endtime="20201115 23:02:26.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.990" endtime="20201115 23:02:26.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.989" endtime="20201115 23:02:26.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.300" level="INFO">${RESULT} = [{'time': 0.024415833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.975000000000302e-05, 'source_diff': 8.975000000000302e-05}, {'time': 0.024511847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:26.296" endtime="20201115 23:02:26.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.313" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:26.301" endtime="20201115 23:02:26.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.318" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.317" endtime="20201115 23:02:26.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.321" level="INFO">VALUE: [8.975000000000302e-05, 8.994400000000152e-05, 8.943100000000093e-05, 8.987499999999968e-05, 9.023600000000048e-05, 9.008299999999775e-05, 8.954200000000148e-05, 8.969400000000127e-05, 8.986100000000011e-05, 8.988900000000272e-05, 8.941700000000136e-05, 8.98060000000013e-05, 8.94450000000005e-05, 8.945800000000059e-05, 8.943099999999746e-05, 8.993000000000195e-05, 8.94999999999993e-05, 8.943000000000145e-05, 9.025000000000005e-05, 8.954099999999854e-05, 8.944400000000102e-05, 9.004200000000198e-05, 9.005600000000155e-05, 8.922199999999991e-05, 9.025000000000005e-05, 8.9945000000001e-05, 9.011100000000036e-05, 8.952799999999844e-05, 9.025000000000005e-05, 8.959799999999976e-05, 9.016699999999864e-05, 8.96939999999978e-05, 8.997300000000014e-05, 8.99999999999998e-05, 8.991600000000238e-05, 9.009700000000079e-05, 8.940199999999884e-05, 8.979099999999879e-05, 9.022200000000091e-05, 8.948599999999973e-05, 9.009800000000026e-05, 8.958300000000072e-05, 9.025000000000005e-05, 8.984700000000054e-05, 9.016699999999864e-05, 9.002800000000241e-05, 8.965299999999857e-05, 8.9638999999999e-05, 8.998600000000023e-05, 8.926399999999862e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.319" endtime="20201115 23:02:26.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.314" endtime="20201115 23:02:26.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.324" endtime="20201115 23:02:26.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.327" endtime="20201115 23:02:26.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.326" endtime="20201115 23:02:26.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.322" endtime="20201115 23:02:26.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.955" endtime="20201115 23:02:26.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.953" endtime="20201115 23:02:26.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.952" endtime="20201115 23:02:26.349"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.351" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.359" endtime="20201115 23:02:26.378"></status>
</kw>
<msg timestamp="20201115 23:02:26.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.358" endtime="20201115 23:02:26.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.380" endtime="20201115 23:02:26.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.382" endtime="20201115 23:02:26.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.355" endtime="20201115 23:02:26.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.353" endtime="20201115 23:02:26.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.391" endtime="20201115 23:02:26.676"></status>
</kw>
<msg timestamp="20201115 23:02:26.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024372125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.390" endtime="20201115 23:02:26.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024372125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.681" endtime="20201115 23:02:26.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.689" endtime="20201115 23:02:26.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.387" endtime="20201115 23:02:26.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.385" endtime="20201115 23:02:26.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.696" level="INFO">${RESULT} = [{'time': 0.024372125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.098600000000123e-05, 'source_diff': 9.098600000000123e-05}, {'time': 0.024466139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:26.692" endtime="20201115 23:02:26.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.709" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:26.697" endtime="20201115 23:02:26.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.714" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.713" endtime="20201115 23:02:26.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.716" level="INFO">VALUE: [9.098600000000123e-05, 9.082000000000187e-05, 9.05000000000003e-05, 9.066699999999914e-05, 9.076400000000012e-05, 9.106999999999865e-05, 9.040299999999932e-05, 9.077799999999969e-05, 9.038800000000027e-05, 9.051399999999987e-05, 9.06520000000001e-05, 9.055499999999911e-05, 9.091599999999991e-05, 9.067999999999923e-05, 9.070800000000184e-05, 9.115300000000007e-05, 9.104200000000298e-05, 9.106899999999918e-05, 9.098600000000123e-05, 9.086100000000111e-05, 9.084799999999754e-05, 9.086099999999764e-05, 9.061100000000086e-05, 9.047300000000064e-05, 9.059800000000076e-05, 9.052800000000291e-05, 9.063800000000052e-05, 9.106899999999918e-05, 9.086100000000111e-05, 9.079199999999926e-05, 9.030500000000233e-05, 9.111100000000136e-05, 9.027799999999919e-05, 9.086100000000111e-05, 9.058299999999825e-05, 9.105599999999908e-05, 9.102799999999994e-05, 9.076400000000012e-05, 9.086099999999764e-05, 9.026399999999962e-05, 9.040299999999932e-05, 9.043099999999846e-05, 9.070899999999785e-05, 9.025000000000005e-05, 9.067999999999923e-05, 9.025000000000005e-05, 9.055499999999911e-05, 9.037500000000018e-05, 9.092999999999948e-05, 9.101400000000037e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.715" endtime="20201115 23:02:26.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.710" endtime="20201115 23:02:26.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.720" endtime="20201115 23:02:26.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.723" endtime="20201115 23:02:26.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.721" endtime="20201115 23:02:26.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.718" endtime="20201115 23:02:26.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.352" endtime="20201115 23:02:26.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.350" endtime="20201115 23:02:26.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.349" endtime="20201115 23:02:26.744"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.746" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.755" endtime="20201115 23:02:26.774"></status>
</kw>
<msg timestamp="20201115 23:02:26.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.753" endtime="20201115 23:02:26.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.776" endtime="20201115 23:02:26.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.779" endtime="20201115 23:02:26.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.751" endtime="20201115 23:02:26.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.749" endtime="20201115 23:02:26.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.788" endtime="20201115 23:02:27.074"></status>
</kw>
<msg timestamp="20201115 23:02:27.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025047319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025139417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.786" endtime="20201115 23:02:27.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025047319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025139417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.078" endtime="20201115 23:02:27.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.087" endtime="20201115 23:02:27.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.783" endtime="20201115 23:02:27.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.782" endtime="20201115 23:02:27.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.094" level="INFO">${RESULT} = [{'time': 0.025139417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.209800000000226e-05, 'source_diff': 9.209800000000226e-05}, {'time': 0.025240417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.090" endtime="20201115 23:02:27.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.108" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:27.095" endtime="20201115 23:02:27.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.113" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.112" endtime="20201115 23:02:27.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.115" level="INFO">VALUE: [9.209800000000226e-05, 9.134800000000151e-05, 9.175000000000155e-05, 9.154200000000001e-05, 9.16520000000011e-05, 9.194400000000005e-05, 9.129100000000029e-05, 9.15000000000013e-05, 9.170900000000232e-05, 9.176400000000112e-05, 9.154200000000001e-05, 9.159699999999882e-05, 9.15139999999974e-05, 9.152800000000044e-05, 9.1639000000001e-05, 9.137500000000118e-05, 9.134700000000204e-05, 9.188900000000125e-05, 9.187500000000168e-05, 9.161099999999839e-05, 9.127699999999725e-05, 9.20000000000018e-05, 9.21940000000003e-05, 9.137500000000118e-05, 9.21390000000015e-05, 9.175000000000155e-05, 9.18329999999995e-05, 9.120800000000234e-05, 9.223599999999901e-05, 9.1639000000001e-05, 9.145799999999912e-05, 9.123600000000148e-05, 9.149999999999783e-05, 9.162499999999796e-05, 9.168099999999971e-05, 9.151400000000087e-05, 9.212499999999846e-05, 9.215199999999812e-05, 9.149999999999783e-05, 9.126399999999715e-05, 9.173600000000198e-05, 9.159700000000229e-05, 9.136099999999814e-05, 9.152800000000044e-05, 9.130499999999986e-05, 9.21529999999976e-05, 9.134700000000204e-05, 9.170799999999937e-05, 9.134700000000204e-05, 9.168099999999971e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.114" endtime="20201115 23:02:27.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.109" endtime="20201115 23:02:27.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.118" endtime="20201115 23:02:27.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.122" endtime="20201115 23:02:27.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.120" endtime="20201115 23:02:27.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.117" endtime="20201115 23:02:27.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.747" endtime="20201115 23:02:27.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.745" endtime="20201115 23:02:27.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.744" endtime="20201115 23:02:27.143"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.145" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.153" endtime="20201115 23:02:27.173"></status>
</kw>
<msg timestamp="20201115 23:02:27.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.152" endtime="20201115 23:02:27.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.174" endtime="20201115 23:02:27.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.177" endtime="20201115 23:02:27.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.149" endtime="20201115 23:02:27.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.147" endtime="20201115 23:02:27.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.186" endtime="20201115 23:02:27.471"></status>
</kw>
<msg timestamp="20201115 23:02:27.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024271208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024363917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.184" endtime="20201115 23:02:27.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024271208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024363917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.475" endtime="20201115 23:02:27.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.483" endtime="20201115 23:02:27.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.182" endtime="20201115 23:02:27.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.180" endtime="20201115 23:02:27.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.490" level="INFO">${RESULT} = [{'time': 0.024363917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.270899999999985e-05, 'source_diff': 9.270899999999985e-05}, {'time': 0.024465917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.487" endtime="20201115 23:02:27.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.504" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:27.491" endtime="20201115 23:02:27.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.508" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.507" endtime="20201115 23:02:27.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.511" level="INFO">VALUE: [9.270899999999985e-05, 9.216700000000064e-05, 9.220899999999935e-05, 9.251400000000187e-05, 9.290199999999887e-05, 9.276400000000212e-05, 9.234699999999957e-05, 9.266600000000166e-05, 9.279200000000126e-05, 9.252799999999797e-05, 9.231900000000043e-05, 9.268000000000123e-05, 9.229200000000076e-05, 9.231900000000043e-05, 9.311099999999989e-05, 9.234699999999957e-05, 9.283399999999997e-05, 9.307000000000065e-05, 9.29590000000001e-05, 9.302799999999847e-05, 9.326299999999968e-05, 9.240300000000132e-05, 9.291600000000191e-05, 9.306900000000118e-05, 9.313899999999903e-05, 9.28330000000005e-05, 9.230499999999739e-05, 9.312499999999946e-05, 9.240299999999785e-05, 9.290299999999835e-05, 9.319500000000078e-05, 9.263899999999853e-05, 9.327799999999872e-05, 9.318099999999774e-05, 9.293100000000096e-05, 9.280600000000083e-05, 9.238900000000175e-05, 9.301400000000237e-05, 9.298699999999924e-05, 9.234799999999904e-05, 9.280499999999789e-05, 9.261099999999939e-05, 9.288899999999878e-05, 9.225000000000205e-05, 9.262499999999896e-05, 9.286099999999964e-05, 9.294399999999758e-05, 9.316699999999817e-05, 9.277799999999822e-05, 9.25139999999984e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.509" endtime="20201115 23:02:27.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.504" endtime="20201115 23:02:27.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.514" endtime="20201115 23:02:27.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.517" endtime="20201115 23:02:27.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.516" endtime="20201115 23:02:27.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.512" endtime="20201115 23:02:27.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.146" endtime="20201115 23:02:27.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.144" endtime="20201115 23:02:27.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.143" endtime="20201115 23:02:27.538"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.541" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.549" endtime="20201115 23:02:27.568"></status>
</kw>
<msg timestamp="20201115 23:02:27.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.547" endtime="20201115 23:02:27.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.569" endtime="20201115 23:02:27.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.572" endtime="20201115 23:02:27.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.545" endtime="20201115 23:02:27.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.543" endtime="20201115 23:02:27.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.581" endtime="20201115 23:02:27.867"></status>
</kw>
<msg timestamp="20201115 23:02:27.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024414167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024508403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.580" endtime="20201115 23:02:27.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024414167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024508403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.871" endtime="20201115 23:02:27.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.880" endtime="20201115 23:02:27.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.577" endtime="20201115 23:02:27.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.575" endtime="20201115 23:02:27.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.887" level="INFO">${RESULT} = [{'time': 0.024508403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.423600000000101e-05, 'source_diff': 9.423600000000101e-05}, {'time': 0.024607389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.884" endtime="20201115 23:02:27.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.901" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:27.888" endtime="20201115 23:02:27.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.905" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.904" endtime="20201115 23:02:27.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.908" level="INFO">VALUE: [9.423600000000101e-05, 9.408300000000175e-05, 9.336100000000014e-05, 9.379199999999879e-05, 9.390299999999935e-05, 9.41529999999996e-05, 9.370900000000085e-05, 9.320899999999688e-05, 9.381899999999846e-05, 9.318100000000121e-05, 9.411099999999742e-05, 9.330500000000186e-05, 9.409700000000132e-05, 9.40139999999999e-05, 9.380500000000236e-05, 9.363899999999953e-05, 9.418099999999874e-05, 9.320800000000087e-05, 9.395800000000162e-05, 9.366699999999867e-05, 9.390299999999935e-05, 9.355600000000158e-05, 9.344500000000103e-05, 9.370900000000085e-05, 9.394399999999858e-05, 9.388899999999978e-05, 9.333299999999753e-05, 9.343000000000198e-05, 9.336100000000014e-05, 9.329100000000229e-05, 9.359700000000082e-05, 9.395800000000162e-05, 9.402799999999947e-05, 9.361100000000039e-05, 9.376399999999965e-05, 9.373600000000051e-05, 9.368099999999824e-05, 9.363899999999953e-05, 9.36529999999991e-05, 9.330600000000133e-05, 9.349999999999983e-05, 9.348699999999974e-05, 9.404200000000251e-05, 9.352800000000244e-05, 9.40139999999999e-05, 9.340200000000284e-05, 9.366600000000266e-05, 9.342999999999851e-05, 9.354200000000201e-05, 9.356899999999821e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.906" endtime="20201115 23:02:27.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.902" endtime="20201115 23:02:27.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.911" endtime="20201115 23:02:27.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.915" endtime="20201115 23:02:27.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.913" endtime="20201115 23:02:27.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.909" endtime="20201115 23:02:27.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.541" endtime="20201115 23:02:27.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.540" endtime="20201115 23:02:27.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.539" endtime="20201115 23:02:27.936"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.938" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.947" endtime="20201115 23:02:27.966"></status>
</kw>
<msg timestamp="20201115 23:02:27.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.945" endtime="20201115 23:02:27.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.967" endtime="20201115 23:02:27.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.970" endtime="20201115 23:02:27.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.942" endtime="20201115 23:02:27.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.940" endtime="20201115 23:02:27.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.979" endtime="20201115 23:02:28.266"></status>
</kw>
<msg timestamp="20201115 23:02:28.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025043236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025137833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.978" endtime="20201115 23:02:28.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025043236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025137833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.270" endtime="20201115 23:02:28.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.279" endtime="20201115 23:02:28.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.975" endtime="20201115 23:02:28.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.973" endtime="20201115 23:02:28.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.285" level="INFO">${RESULT} = [{'time': 0.025137833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.459699999999835e-05, 'source_diff': 9.459699999999835e-05}, {'time': 0.025238833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:28.282" endtime="20201115 23:02:28.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.299" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:28.286" endtime="20201115 23:02:28.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.303" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.302" endtime="20201115 23:02:28.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.306" level="INFO">VALUE: [9.459699999999835e-05, 9.430499999999939e-05, 9.479100000000032e-05, 9.433299999999853e-05, 9.502800000000047e-05, 9.422200000000144e-05, 9.519399999999983e-05, 9.419399999999883e-05, 9.512500000000146e-05, 9.430600000000233e-05, 9.516700000000017e-05, 9.487500000000121e-05, 9.520900000000235e-05, 9.512499999999799e-05, 9.459700000000182e-05, 9.498600000000176e-05, 9.437499999999724e-05, 9.487500000000121e-05, 9.484700000000207e-05, 9.423600000000101e-05, 9.46660000000002e-05, 9.494399999999958e-05, 9.433299999999853e-05, 9.463799999999759e-05, 9.524999999999811e-05, 9.491699999999992e-05, 9.486100000000164e-05, 9.484800000000154e-05, 9.475000000000108e-05, 9.506899999999971e-05, 9.465200000000062e-05, 9.437499999999724e-05, 9.50409999999971e-05, 9.437499999999724e-05, 9.52079999999994e-05, 9.458299999999878e-05, 9.444399999999908e-05, 9.490300000000035e-05, 9.438900000000028e-05, 9.458300000000225e-05, 9.444399999999908e-05, 9.437500000000071e-05, 9.502800000000047e-05, 9.466699999999967e-05, 9.487499999999774e-05, 9.448600000000126e-05, 9.523699999999802e-05, 9.491699999999992e-05, 9.522200000000244e-05, 9.502800000000047e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.304" endtime="20201115 23:02:28.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.300" endtime="20201115 23:02:28.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.309" endtime="20201115 23:02:28.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.312" endtime="20201115 23:02:28.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.311" endtime="20201115 23:02:28.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.307" endtime="20201115 23:02:28.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.939" endtime="20201115 23:02:28.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.937" endtime="20201115 23:02:28.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.936" endtime="20201115 23:02:28.334"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.336" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.345" endtime="20201115 23:02:28.365"></status>
</kw>
<msg timestamp="20201115 23:02:28.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.343" endtime="20201115 23:02:28.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.367" endtime="20201115 23:02:28.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.369" endtime="20201115 23:02:28.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.341" endtime="20201115 23:02:28.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.338" endtime="20201115 23:02:28.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.378" endtime="20201115 23:02:28.664"></status>
</kw>
<msg timestamp="20201115 23:02:28.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025580583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025676347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.377" endtime="20201115 23:02:28.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025580583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025676347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.669" endtime="20201115 23:02:28.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.677" endtime="20201115 23:02:28.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.374" endtime="20201115 23:02:28.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.372" endtime="20201115 23:02:28.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.684" level="INFO">${RESULT} = [{'time': 0.025676347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.576399999999818e-05, 'source_diff': 9.576399999999818e-05}, {'time': 0.025775361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:28.680" endtime="20201115 23:02:28.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.698" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:28.685" endtime="20201115 23:02:28.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.703" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.702" endtime="20201115 23:02:28.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.705" level="INFO">VALUE: [9.576399999999818e-05, 9.554200000000054e-05, 9.56530000000011e-05, 9.548600000000226e-05, 9.61669999999977e-05, 9.586099999999917e-05, 9.559699999999935e-05, 9.562499999999849e-05, 9.550000000000183e-05, 9.591699999999745e-05, 9.544400000000008e-05, 9.576399999999818e-05, 9.627699999999878e-05, 9.577800000000122e-05, 9.559699999999935e-05, 9.602699999999853e-05, 9.606900000000071e-05, 9.552800000000097e-05, 9.53469999999991e-05, 9.523600000000201e-05, 9.618100000000074e-05, 9.599999999999886e-05, 9.559699999999935e-05, 9.577799999999775e-05, 9.563899999999806e-05, 9.519499999999931e-05, 9.613900000000203e-05, 9.612500000000246e-05, 9.559799999999882e-05, 9.615200000000212e-05, 9.540200000000137e-05, 9.588900000000178e-05, 9.613899999999856e-05, 9.57079999999999e-05, 9.588900000000178e-05, 9.533299999999953e-05, 9.544400000000008e-05, 9.559699999999935e-05, 9.566700000000067e-05, 9.52079999999994e-05, 9.537499999999824e-05, 9.551399999999793e-05, 9.577799999999775e-05, 9.541600000000094e-05, 9.536200000000161e-05, 9.591600000000144e-05, 9.549999999999836e-05, 9.558299999999978e-05, 9.574999999999861e-05, 9.61530000000016e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.704" endtime="20201115 23:02:28.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.699" endtime="20201115 23:02:28.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.709" endtime="20201115 23:02:28.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.712" endtime="20201115 23:02:28.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.711" endtime="20201115 23:02:28.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.707" endtime="20201115 23:02:28.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.337" endtime="20201115 23:02:28.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.335" endtime="20201115 23:02:28.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.334" endtime="20201115 23:02:28.733"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.736" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.744" endtime="20201115 23:02:28.763"></status>
</kw>
<msg timestamp="20201115 23:02:28.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.743" endtime="20201115 23:02:28.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.765" endtime="20201115 23:02:28.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.767" endtime="20201115 23:02:28.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.740" endtime="20201115 23:02:28.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.738" endtime="20201115 23:02:28.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.776" endtime="20201115 23:02:29.062"></status>
</kw>
<msg timestamp="20201115 23:02:29.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024272444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024369042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.775" endtime="20201115 23:02:29.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024272444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024369042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.066" endtime="20201115 23:02:29.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.075" endtime="20201115 23:02:29.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.772" endtime="20201115 23:02:29.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.771" endtime="20201115 23:02:29.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.082" level="INFO">${RESULT} = [{'time': 0.024369042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.659799999999982e-05, 'source_diff': 9.659799999999982e-05}, {'time': 0.024471083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:29.078" endtime="20201115 23:02:29.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.095" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:29.082" endtime="20201115 23:02:29.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.100" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.099" endtime="20201115 23:02:29.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.109" level="INFO">VALUE: [9.659799999999982e-05, 9.654100000000207e-05, 9.715199999999966e-05, 9.622199999999997e-05, 9.627699999999878e-05, 9.679099999999885e-05, 9.712499999999999e-05, 9.663899999999906e-05, 9.693100000000149e-05, 9.656900000000121e-05, 9.645800000000065e-05, 9.69860000000003e-05, 9.673600000000004e-05, 9.705600000000161e-05, 9.713899999999956e-05, 9.711100000000042e-05, 9.670900000000038e-05, 9.65279999999985e-05, 9.719399999999837e-05, 9.636099999999967e-05, 9.726399999999968e-05, 9.655499999999817e-05, 9.680500000000189e-05, 9.629199999999782e-05, 9.658300000000078e-05, 9.701399999999943e-05, 9.661099999999992e-05, 9.629199999999782e-05, 9.62920000000013e-05, 9.643100000000099e-05, 9.682000000000093e-05, 9.62920000000013e-05, 9.709800000000032e-05, 9.695900000000063e-05, 9.652800000000197e-05, 9.652699999999903e-05, 9.69860000000003e-05, 9.659700000000035e-05, 9.624999999999911e-05, 9.626400000000215e-05, 9.691599999999898e-05, 9.626400000000215e-05, 9.627800000000172e-05, 9.683300000000103e-05, 9.672200000000047e-05, 9.651399999999893e-05, 9.704200000000204e-05, 9.620899999999988e-05, 9.668100000000124e-05, 9.65279999999985e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.101" endtime="20201115 23:02:29.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.096" endtime="20201115 23:02:29.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.113" endtime="20201115 23:02:29.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.116" endtime="20201115 23:02:29.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.115" endtime="20201115 23:02:29.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.111" endtime="20201115 23:02:29.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.736" endtime="20201115 23:02:29.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.735" endtime="20201115 23:02:29.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.734" endtime="20201115 23:02:29.137"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.140" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.148" endtime="20201115 23:02:29.167"></status>
</kw>
<msg timestamp="20201115 23:02:29.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.146" endtime="20201115 23:02:29.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.169" endtime="20201115 23:02:29.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.171" endtime="20201115 23:02:29.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.144" endtime="20201115 23:02:29.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.142" endtime="20201115 23:02:29.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.180" endtime="20201115 23:02:29.466"></status>
</kw>
<msg timestamp="20201115 23:02:29.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024266486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024364194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.179" endtime="20201115 23:02:29.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024266486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024364194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.470" endtime="20201115 23:02:29.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.478" endtime="20201115 23:02:29.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.176" endtime="20201115 23:02:29.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.175" endtime="20201115 23:02:29.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.485" level="INFO">${RESULT} = [{'time': 0.024364194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.770799999999843e-05, 'source_diff': 9.770799999999843e-05}, {'time': 0.024466208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:29.482" endtime="20201115 23:02:29.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.499" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:29.487" endtime="20201115 23:02:29.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.504" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.503" endtime="20201115 23:02:29.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.506" level="INFO">VALUE: [9.770799999999843e-05, 9.72080000000014e-05, 9.752700000000003e-05, 9.726399999999968e-05, 9.733300000000153e-05, 9.720799999999793e-05, 9.7721999999998e-05, 9.754199999999907e-05, 9.801400000000043e-05, 9.72080000000014e-05, 9.79860000000013e-05, 9.807000000000218e-05, 9.820899999999841e-05, 9.730600000000186e-05, 9.759800000000082e-05, 9.813900000000056e-05, 9.76669999999992e-05, 9.78059999999989e-05, 9.825000000000111e-05, 9.73609999999972e-05, 9.772200000000147e-05, 9.75409999999996e-05, 9.776400000000018e-05, 9.770799999999843e-05, 9.809700000000185e-05, 9.805600000000261e-05, 9.779199999999932e-05, 9.805599999999914e-05, 9.777799999999975e-05, 9.812499999999752e-05, 9.781999999999846e-05, 9.815300000000013e-05, 9.8028e-05, 9.734800000000057e-05, 9.787500000000074e-05, 9.726300000000021e-05, 9.75409999999996e-05, 9.811100000000142e-05, 9.805499999999967e-05, 9.809700000000185e-05, 9.820799999999894e-05, 9.77080000000019e-05, 9.823599999999807e-05, 9.787500000000074e-05, 9.756999999999821e-05, 9.73609999999972e-05, 9.805599999999914e-05, 9.73609999999972e-05, 9.729099999999935e-05, 9.723700000000002e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.505" endtime="20201115 23:02:29.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.500" endtime="20201115 23:02:29.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.509" endtime="20201115 23:02:29.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.513" endtime="20201115 23:02:29.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.511" endtime="20201115 23:02:29.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.508" endtime="20201115 23:02:29.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.140" endtime="20201115 23:02:29.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.138" endtime="20201115 23:02:29.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.138" endtime="20201115 23:02:29.534"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.536" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.544" endtime="20201115 23:02:29.563"></status>
</kw>
<msg timestamp="20201115 23:02:29.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.543" endtime="20201115 23:02:29.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.565" endtime="20201115 23:02:29.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.568" endtime="20201115 23:02:29.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.540" endtime="20201115 23:02:29.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.538" endtime="20201115 23:02:29.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.577" endtime="20201115 23:02:29.861"></status>
</kw>
<msg timestamp="20201115 23:02:29.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024221514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024320458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.575" endtime="20201115 23:02:29.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024221514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024320458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.865" endtime="20201115 23:02:29.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.874" endtime="20201115 23:02:29.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.572" endtime="20201115 23:02:29.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.571" endtime="20201115 23:02:29.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.881" level="INFO">${RESULT} = [{'time': 0.024320458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.894400000000012e-05, 'source_diff': 9.894400000000012e-05}, {'time': 0.024427542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:29.877" endtime="20201115 23:02:29.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.894" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:29.882" endtime="20201115 23:02:29.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.899" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.898" endtime="20201115 23:02:29.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.901" level="INFO">VALUE: [9.894400000000012e-05, 9.877800000000075e-05, 9.838899999999734e-05, 9.827800000000025e-05, 9.841699999999995e-05, 9.869399999999987e-05, 9.852799999999703e-05, 9.833299999999906e-05, 9.843099999999952e-05, 9.843099999999952e-05, 9.887499999999827e-05, 9.905600000000014e-05, 9.911199999999842e-05, 9.89730000000022e-05, 9.8721999999999e-05, 9.89159999999975e-05, 9.923599999999907e-05, 9.888900000000131e-05, 9.881999999999946e-05, 9.833299999999906e-05, 9.907000000000318e-05, 9.894500000000306e-05, 9.840300000000038e-05, 9.86670000000002e-05, 9.918100000000027e-05, 9.897199999999926e-05, 9.863900000000106e-05, 9.826400000000068e-05, 9.911199999999842e-05, 9.890300000000088e-05, 9.862500000000149e-05, 9.876300000000171e-05, 9.923599999999907e-05, 9.851400000000093e-05, 9.870799999999944e-05, 9.826400000000068e-05, 9.905500000000067e-05, 9.915300000000113e-05, 9.826400000000068e-05, 9.829199999999982e-05, 9.89999999999984e-05, 9.884699999999913e-05, 9.918100000000027e-05, 9.911199999999842e-05, 9.906999999999971e-05, 9.833300000000253e-05, 9.912499999999852e-05, 9.915200000000166e-05, 9.884699999999913e-05, 9.873599999999857e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.900" endtime="20201115 23:02:29.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.895" endtime="20201115 23:02:29.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.905" endtime="20201115 23:02:29.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.909" endtime="20201115 23:02:29.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.907" endtime="20201115 23:02:29.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.903" endtime="20201115 23:02:29.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.537" endtime="20201115 23:02:29.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.535" endtime="20201115 23:02:29.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.534" endtime="20201115 23:02:29.930"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.933" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.941" endtime="20201115 23:02:29.961"></status>
</kw>
<msg timestamp="20201115 23:02:29.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.939" endtime="20201115 23:02:29.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.963" endtime="20201115 23:02:29.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.965" endtime="20201115 23:02:29.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.937" endtime="20201115 23:02:29.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.935" endtime="20201115 23:02:29.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.975" endtime="20201115 23:02:30.260"></status>
</kw>
<msg timestamp="20201115 23:02:30.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02538275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025482403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:29.973" endtime="20201115 23:02:30.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02538275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025482403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:30.264" endtime="20201115 23:02:30.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.272" endtime="20201115 23:02:30.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.970" endtime="20201115 23:02:30.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.969" endtime="20201115 23:02:30.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.279" level="INFO">${RESULT} = [{'time': 0.025482403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.965300000000163e-05, 'source_diff': 9.965300000000163e-05}, {'time': 0.025587403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:30.276" endtime="20201115 23:02:30.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.293" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:30.280" endtime="20201115 23:02:30.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.298" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.297" endtime="20201115 23:02:30.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.301" level="INFO">VALUE: [9.965300000000163e-05, 9.98060000000009e-05, 9.943100000000052e-05, 9.919499999999984e-05, 9.954200000000107e-05, 9.933399999999953e-05, 9.937499999999877e-05, 9.988799999999937e-05, 9.983300000000056e-05, 0.00010012500000000299, 9.977800000000175e-05, 9.919400000000037e-05, 9.923599999999907e-05, 9.912499999999852e-05, 9.98060000000009e-05, 9.923600000000254e-05, 9.93060000000004e-05, 9.984700000000013e-05, 9.99999999999994e-05, 9.95280000000015e-05, 9.995900000000016e-05, 9.995800000000069e-05, 9.973699999999905e-05, 9.9722e-05, 9.981900000000099e-05, 0.0001001800000000018, 9.970800000000044e-05, 0.00010013900000000256, 0.00010023600000000008, 0.0001000419999999981, 9.987499999999927e-05, 0.00010009700000000038, 0.00010013899999999909, 0.00010015199999999919, 9.973599999999957e-05, 9.94999999999989e-05, 0.00010017999999999833, 9.961099999999945e-05, 9.994399999999765e-05, 9.943000000000105e-05, 0.00010001299999999949, 9.974999999999914e-05, 0.00010019400000000137, 9.941700000000095e-05, 0.00010006900000000124, 9.936100000000267e-05, 9.959699999999988e-05, 9.962499999999902e-05, 9.93609999999992e-05, 9.934699999999963e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.299" endtime="20201115 23:02:30.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.294" endtime="20201115 23:02:30.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.304" endtime="20201115 23:02:30.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.307" endtime="20201115 23:02:30.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.306" endtime="20201115 23:02:30.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.302" endtime="20201115 23:02:30.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.933" endtime="20201115 23:02:30.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.931" endtime="20201115 23:02:30.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.931" endtime="20201115 23:02:30.328"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.331" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.339" endtime="20201115 23:02:30.359"></status>
</kw>
<msg timestamp="20201115 23:02:30.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.337" endtime="20201115 23:02:30.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.361" endtime="20201115 23:02:30.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.363" endtime="20201115 23:02:30.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.335" endtime="20201115 23:02:30.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.333" endtime="20201115 23:02:30.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.373" endtime="20201115 23:02:30.658"></status>
</kw>
<msg timestamp="20201115 23:02:30.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024716833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02481725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:30.371" endtime="20201115 23:02:30.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024716833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02481725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:30.662" endtime="20201115 23:02:30.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.670" endtime="20201115 23:02:30.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.369" endtime="20201115 23:02:30.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.367" endtime="20201115 23:02:30.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.677" level="INFO">${RESULT} = [{'time': 0.02481725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010041699999999848, 'source_diff': 0.00010041699999999848}, {'time': 0.024920264, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:02:30.673" endtime="20201115 23:02:30.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.690" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:30.678" endtime="20201115 23:02:30.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.694" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.693" endtime="20201115 23:02:30.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.697" level="INFO">VALUE: [0.00010041699999999848, 0.00010062500000000002, 0.00010113900000000009, 0.000100722000000001, 0.0001005280000000025, 0.0001004999999999999, 0.00010059800000000035, 0.0001008610000000007, 0.0001004999999999999, 0.00010033299999999759, 0.00010126400000000021, 0.00010023600000000008, 0.0001011939999999989, 0.00010094400000000212, 0.00010030599999999792, 0.00010102799999999953, 0.00010024999999999964, 0.00010090300000000288, 0.00010027800000000225, 0.00010034700000000063, 0.00010029200000000182, 0.00010112499999999705, 0.00010029200000000182, 0.00010036199999999967, 0.00010041700000000195, 0.00010090199999999994, 0.00010065200000000316, 0.00010047200000000076, 0.00010087500000000027, 0.00010079099999999938, 0.0001010419999999991, 0.00010058299999999784, 0.00010084699999999766, 0.00010104099999999963, 0.00010108400000000128, 0.00010118100000000227, 0.00010038899999999934, 0.00010116699999999923, 0.00010062500000000002, 0.00010044500000000109, 0.00010029099999999888, 0.00010015200000000266, 0.00010083400000000103, 0.00010025000000000311, 0.0001010000000000004, 0.00010102799999999953, 0.00010077799999999928, 0.00010044400000000162, 0.00010081900000000199, 0.00010108299999999834]</msg>
<status status="PASS" starttime="20201115 23:02:30.695" endtime="20201115 23:02:30.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.691" endtime="20201115 23:02:30.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.700" endtime="20201115 23:02:30.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.703" endtime="20201115 23:02:30.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.702" endtime="20201115 23:02:30.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.698" endtime="20201115 23:02:30.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.331" endtime="20201115 23:02:30.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.329" endtime="20201115 23:02:30.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.329" endtime="20201115 23:02:30.724"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.727" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.736" endtime="20201115 23:02:30.756"></status>
</kw>
<msg timestamp="20201115 23:02:30.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.734" endtime="20201115 23:02:30.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.757" endtime="20201115 23:02:30.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.760" endtime="20201115 23:02:30.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.731" endtime="20201115 23:02:30.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.729" endtime="20201115 23:02:30.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.769" endtime="20201115 23:02:31.054"></status>
</kw>
<msg timestamp="20201115 23:02:31.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025280458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025382722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.767" endtime="20201115 23:02:31.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025280458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025382722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.059" endtime="20201115 23:02:31.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.067" endtime="20201115 23:02:31.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.765" endtime="20201115 23:02:31.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.763" endtime="20201115 23:02:31.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.073" level="INFO">${RESULT} = [{'time': 0.025382722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010226400000000122, 'source_diff': 0.00010226400000000122}, {'time': 0.025490736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:31.070" endtime="20201115 23:02:31.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.086" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:31.074" endtime="20201115 23:02:31.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.091" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.090" endtime="20201115 23:02:31.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.093" level="INFO">VALUE: [0.00010226400000000122, 0.00010184699999999866, 0.00010208299999999934, 0.00010179199999999985, 0.00010169499999999887, 0.00010209699999999891, 0.0001022220000000025, 0.00010158399999999831, 0.0001022359999999986, 0.0001020420000000001, 0.00010215199999999772, 0.00010130499999999945, 0.00010145800000000219, 0.00010130499999999945, 0.00010218000000000033, 0.00010188900000000084, 0.00010213900000000109, 0.00010193000000000008, 0.00010184700000000213, 0.00010202800000000053, 0.00010174999999999768, 0.00010197200000000226, 0.00010159699999999841, 0.00010205599999999967, 0.00010180599999999942, 0.00010162500000000102, 0.00010156900000000274, 0.00010195799999999922, 0.00010131900000000249, 0.00010176300000000124, 0.00010131899999999902, 0.00010117999999999933, 0.00010218000000000033, 0.00010151400000000046, 0.00010197200000000226, 0.00010211100000000195, 0.00010165299999999669, 0.0001021809999999998, 0.00010127799999999978, 0.00010155599999999917, 0.00010159800000000135, 0.00010211200000000142, 0.00010205599999999967, 0.00010161100000000145, 0.0001021939999999999, 0.0001013610000000012, 0.0001021809999999998, 0.00010131899999999902, 0.00010179100000000038, 0.00010198600000000183]</msg>
<status status="PASS" starttime="20201115 23:02:31.092" endtime="20201115 23:02:31.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.087" endtime="20201115 23:02:31.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.097" endtime="20201115 23:02:31.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.100" endtime="20201115 23:02:31.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.099" endtime="20201115 23:02:31.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.095" endtime="20201115 23:02:31.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.728" endtime="20201115 23:02:31.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.726" endtime="20201115 23:02:31.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.725" endtime="20201115 23:02:31.122"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.124" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.132" endtime="20201115 23:02:31.152"></status>
</kw>
<msg timestamp="20201115 23:02:31.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.131" endtime="20201115 23:02:31.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.153" endtime="20201115 23:02:31.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.156" endtime="20201115 23:02:31.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.128" endtime="20201115 23:02:31.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.126" endtime="20201115 23:02:31.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.165" endtime="20201115 23:02:31.450"></status>
</kw>
<msg timestamp="20201115 23:02:31.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024668333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024770875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.163" endtime="20201115 23:02:31.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024668333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024770875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.454" endtime="20201115 23:02:31.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.462" endtime="20201115 23:02:31.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.161" endtime="20201115 23:02:31.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.159" endtime="20201115 23:02:31.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.468" level="INFO">${RESULT} = [{'time': 0.024770875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001025420000000006, 'source_diff': 0.0001025420000000006}, {'time': 0.024877889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:31.465" endtime="20201115 23:02:31.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.481" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:31.469" endtime="20201115 23:02:31.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.486" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.485" endtime="20201115 23:02:31.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.489" level="INFO">VALUE: [0.0001025420000000006, 0.00010261099999999898, 0.00010266699999999726, 0.00010275000000000215, 0.00010224999999999818, 0.00010227799999999732, 0.00010280499999999748, 0.0001030000000000024, 0.00010263799999999865, 0.00010274999999999868, 0.00010254100000000113, 0.0001025550000000007, 0.00010230500000000045, 0.00010311100000000295, 0.00010315299999999819, 0.00010244400000000015, 0.00010280600000000042, 0.00010252800000000103, 0.00010319500000000037, 0.00010293100000000055, 0.00010269499999999987, 0.00010243100000000005, 0.00010324999999999918, 0.00010255600000000017, 0.00010240300000000091, 0.00010227700000000131, 0.00010248600000000233, 0.00010272199999999954, 0.00010315300000000166, 0.00010316699999999776, 0.0001032359999999996, 0.00010311099999999948, 0.00010226399999999775, 0.00010238899999999787, 0.0001032359999999996, 0.00010280600000000042, 0.0001031940000000009, 0.00010273700000000205, 0.00010313899999999862, 0.00010224999999999818, 0.00010313799999999915, 0.00010309699999999991, 0.00010249999999999843, 0.00010240299999999744, 0.00010316700000000123, 0.00010306900000000077, 0.00010324999999999918, 0.00010298600000000283, 0.00010308300000000034, 0.0001026810000000003]</msg>
<status status="PASS" starttime="20201115 23:02:31.487" endtime="20201115 23:02:31.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.482" endtime="20201115 23:02:31.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.492" endtime="20201115 23:02:31.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.496" endtime="20201115 23:02:31.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.494" endtime="20201115 23:02:31.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.491" endtime="20201115 23:02:31.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.125" endtime="20201115 23:02:31.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.123" endtime="20201115 23:02:31.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.122" endtime="20201115 23:02:31.517"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.519" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.527" endtime="20201115 23:02:31.547"></status>
</kw>
<msg timestamp="20201115 23:02:31.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.526" endtime="20201115 23:02:31.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.549" endtime="20201115 23:02:31.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.551" endtime="20201115 23:02:31.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.523" endtime="20201115 23:02:31.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.521" endtime="20201115 23:02:31.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.561" endtime="20201115 23:02:31.847"></status>
</kw>
<msg timestamp="20201115 23:02:31.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025128889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025233167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.559" endtime="20201115 23:02:31.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025128889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025233167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.851" endtime="20201115 23:02:31.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.859" endtime="20201115 23:02:31.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.556" endtime="20201115 23:02:31.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.555" endtime="20201115 23:02:31.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.866" level="INFO">${RESULT} = [{'time': 0.025233167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010427799999999932, 'source_diff': 0.00010427799999999932}, {'time': 0.025339167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:31.862" endtime="20201115 23:02:31.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.880" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:31.867" endtime="20201115 23:02:31.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.885" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.884" endtime="20201115 23:02:31.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.888" level="INFO">VALUE: [0.00010427799999999932, 0.00010359799999999988, 0.00010416699999999876, 0.00010334700000000016, 0.0001033749999999993, 0.00010370800000000097, 0.00010344399999999768, 0.00010367999999999836, 0.00010390300000000241, 0.00010349999999999943, 0.00010343000000000158, 0.00010377800000000229, 0.00010363899999999912, 0.00010363899999999912, 0.00010365299999999869, 0.00010386100000000023, 0.00010343100000000105, 0.00010340299999999844, 0.00010408300000000134, 0.00010386100000000023, 0.00010347200000000029, 0.00010379099999999891, 0.00010359700000000041, 0.00010409700000000091, 0.00010406900000000177, 0.00010386099999999676, 0.00010406900000000177, 0.00010406999999999778, 0.00010418099999999833, 0.00010372200000000054, 0.00010358300000000084, 0.00010372300000000001, 0.00010419500000000137, 0.00010330600000000092, 0.00010384800000000013, 0.00010408299999999787, 0.00010408300000000134, 0.00010417999999999886, 0.00010341599999999854, 0.00010347200000000029, 0.00010329200000000135, 0.00010333300000000059, 0.00010408299999999787, 0.0001038749999999998, 0.00010374999999999968, 0.00010351400000000247, 0.00010384800000000013, 0.00010333400000000006, 0.00010357000000000074, 0.00010366700000000173]</msg>
<status status="PASS" starttime="20201115 23:02:31.886" endtime="20201115 23:02:31.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.881" endtime="20201115 23:02:31.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.891" endtime="20201115 23:02:31.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.894" endtime="20201115 23:02:31.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.893" endtime="20201115 23:02:31.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.889" endtime="20201115 23:02:31.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.520" endtime="20201115 23:02:31.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.518" endtime="20201115 23:02:31.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.517" endtime="20201115 23:02:31.916"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.918" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.926" endtime="20201115 23:02:31.946"></status>
</kw>
<msg timestamp="20201115 23:02:31.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.925" endtime="20201115 23:02:31.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.947" endtime="20201115 23:02:31.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.950" endtime="20201115 23:02:31.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.922" endtime="20201115 23:02:31.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.920" endtime="20201115 23:02:31.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.960" endtime="20201115 23:02:32.245"></status>
</kw>
<msg timestamp="20201115 23:02:32.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024349583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024454542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.958" endtime="20201115 23:02:32.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024349583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024454542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.249" endtime="20201115 23:02:32.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.257" endtime="20201115 23:02:32.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.955" endtime="20201115 23:02:32.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.954" endtime="20201115 23:02:32.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.264" level="INFO">${RESULT} = [{'time': 0.024454542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010495899999999822, 'source_diff': 0.00010495899999999822}, {'time': 0.024563542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:32.261" endtime="20201115 23:02:32.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.278" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:32.265" endtime="20201115 23:02:32.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.282" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.281" endtime="20201115 23:02:32.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.285" level="INFO">VALUE: [0.00010495899999999822, 0.00010500000000000093, 0.00010450000000000043, 0.0001048880000000009, 0.00010454099999999966, 0.00010492999999999961, 0.0001045689999999988, 0.00010430499999999898, 0.00010495899999999822, 0.0001048750000000008, 0.00010516699999999976, 0.00010434699999999769, 0.0001046949999999984, 0.0001050559999999992, 0.00010507000000000224, 0.00010445899999999772, 0.00010526399999999728, 0.00010483299999999862, 0.0001043620000000002, 0.00010463900000000012, 0.0001048880000000009, 0.0001041940000000019, 0.00010504100000000016, 0.00010492999999999961, 0.00010438899999999987, 0.00010452799999999957, 0.00010479199999999939, 0.000104820000000002, 0.00010495900000000169, 0.00010445800000000172, 0.0001048750000000008, 0.0001048880000000009, 0.00010488900000000037, 0.0001048339999999981, 0.0001050689999999993, 0.00010454099999999966, 0.00010426399999999975, 0.00010479099999999991, 0.00010509700000000191, 0.0001042360000000006, 0.00010502800000000007, 0.0001050689999999993, 0.00010465300000000316, 0.0001041949999999979, 0.0001047360000000011, 0.00010490299999999994, 0.00010426399999999975, 0.00010449999999999696, 0.00010519399999999943, 0.00010448600000000086]</msg>
<status status="PASS" starttime="20201115 23:02:32.283" endtime="20201115 23:02:32.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.279" endtime="20201115 23:02:32.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.288" endtime="20201115 23:02:32.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.291" endtime="20201115 23:02:32.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.290" endtime="20201115 23:02:32.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.286" endtime="20201115 23:02:32.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.919" endtime="20201115 23:02:32.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.917" endtime="20201115 23:02:32.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.916" endtime="20201115 23:02:32.312"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.315" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.323" endtime="20201115 23:02:32.343"></status>
</kw>
<msg timestamp="20201115 23:02:32.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.322" endtime="20201115 23:02:32.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.345" endtime="20201115 23:02:32.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.347" endtime="20201115 23:02:32.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.319" endtime="20201115 23:02:32.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.317" endtime="20201115 23:02:32.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.356" endtime="20201115 23:02:32.641"></status>
</kw>
<msg timestamp="20201115 23:02:32.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024625361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024731583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.355" endtime="20201115 23:02:32.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024625361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024731583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.645" endtime="20201115 23:02:32.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.654" endtime="20201115 23:02:32.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.352" endtime="20201115 23:02:32.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.351" endtime="20201115 23:02:32.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.660" level="INFO">${RESULT} = [{'time': 0.024731583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010622200000000304, 'source_diff': 0.00010622200000000304}, {'time': 0.024842569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:32.657" endtime="20201115 23:02:32.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.674" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:32.661" endtime="20201115 23:02:32.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.678" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.677" endtime="20201115 23:02:32.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.681" level="INFO">VALUE: [0.00010622200000000304, 0.00010551299999999805, 0.00010597199999999932, 0.00010600000000000193, 0.0001057499999999982, 0.00010559700000000241, 0.00010550000000000143, 0.00010529199999999989, 0.00010558299999999937, 0.00010591700000000051, 0.00010622200000000304, 0.00010609699999999944, 0.00010579200000000039, 0.00010522300000000151, 0.00010559800000000188, 0.00010598700000000183, 0.00010559699999999894, 0.00010545799999999925, 0.00010558400000000231, 0.00010617999999999739, 0.00010597199999999932, 0.00010616700000000076, 0.00010541700000000001, 0.00010559699999999894, 0.00010548599999999839, 0.00010537499999999783, 0.00010530599999999946, 0.00010533400000000206, 0.00010601299999999855, 0.00010597300000000226, 0.00010558399999999885, 0.00010594400000000018, 0.00010622199999999957, 0.00010565199999999775, 0.00010533299999999912, 0.0001060560000000002, 0.00010611100000000248, 0.00010525000000000118, 0.00010568099999999983, 0.00010566700000000026, 0.00010531999999999903, 0.00010537499999999783, 0.00010604200000000064, 0.00010577800000000082, 0.0001053889999999974, 0.00010576399999999778, 0.00010604100000000116, 0.00010562500000000155, 0.00010580500000000048, 0.00010547200000000229]</msg>
<status status="PASS" starttime="20201115 23:02:32.679" endtime="20201115 23:02:32.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.674" endtime="20201115 23:02:32.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.684" endtime="20201115 23:02:32.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.687" endtime="20201115 23:02:32.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.686" endtime="20201115 23:02:32.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.682" endtime="20201115 23:02:32.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.315" endtime="20201115 23:02:32.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.314" endtime="20201115 23:02:32.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.313" endtime="20201115 23:02:32.709"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.711" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.719" endtime="20201115 23:02:32.740"></status>
</kw>
<msg timestamp="20201115 23:02:32.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.718" endtime="20201115 23:02:32.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.741" endtime="20201115 23:02:32.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.744" endtime="20201115 23:02:32.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.715" endtime="20201115 23:02:32.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.713" endtime="20201115 23:02:32.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.753" endtime="20201115 23:02:33.039"></status>
</kw>
<msg timestamp="20201115 23:02:33.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024277778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024384667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.751" endtime="20201115 23:02:33.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024277778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024384667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.043" endtime="20201115 23:02:33.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.052" endtime="20201115 23:02:33.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.749" endtime="20201115 23:02:33.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.747" endtime="20201115 23:02:33.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.058" level="INFO">${RESULT} = [{'time': 0.024384667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001068889999999989, 'source_diff': 0.0001068889999999989}, {'time': 0.024497667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:33.055" endtime="20201115 23:02:33.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.071" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:33.059" endtime="20201115 23:02:33.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.076" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.075" endtime="20201115 23:02:33.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.078" level="INFO">VALUE: [0.0001068889999999989, 0.00010698599999999989, 0.00010680600000000096, 0.00010691600000000204, 0.00010695800000000075, 0.00010636099999999926, 0.0001073340000000006, 0.0001067499999999992, 0.00010663900000000212, 0.00010694400000000118, 0.00010633300000000012, 0.00010673599999999964, 0.00010684700000000019, 0.00010650000000000243, 0.00010722200000000057, 0.00010695900000000022, 0.00010644500000000015, 0.00010630600000000046, 0.00010655500000000123, 0.00010652699999999862, 0.00010715199999999925, 0.00010632000000000003, 0.00010669400000000093, 0.00010716699999999829, 0.00010686099999999976, 0.0001065690000000008, 0.00010684700000000019, 0.00010644500000000015, 0.00010630600000000046, 0.00010686099999999976, 0.00010636099999999926, 0.00010713899999999915, 0.0001065279999999981, 0.00010662499999999908, 0.00010630500000000098, 0.00010698599999999989, 0.00010644400000000068, 0.00010687499999999933, 0.00010662499999999908, 0.00010677800000000182, 0.00010680599999999749, 0.00010649999999999896, 0.00010683300000000062, 0.00010699999999999946, 0.00010727699999999937, 0.00010659799999999942, 0.0001068889999999989, 0.00010691699999999804, 0.00010641599999999807, 0.0001070690000000013]</msg>
<status status="PASS" starttime="20201115 23:02:33.077" endtime="20201115 23:02:33.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.072" endtime="20201115 23:02:33.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.082" endtime="20201115 23:02:33.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.085" endtime="20201115 23:02:33.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.083" endtime="20201115 23:02:33.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.080" endtime="20201115 23:02:33.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.712" endtime="20201115 23:02:33.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.710" endtime="20201115 23:02:33.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.709" endtime="20201115 23:02:33.106"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.109" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.117" endtime="20201115 23:02:33.137"></status>
</kw>
<msg timestamp="20201115 23:02:33.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.115" endtime="20201115 23:02:33.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.139" endtime="20201115 23:02:33.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.142" endtime="20201115 23:02:33.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.113" endtime="20201115 23:02:33.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.111" endtime="20201115 23:02:33.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.151" endtime="20201115 23:02:33.437"></status>
</kw>
<msg timestamp="20201115 23:02:33.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025124806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025232319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.149" endtime="20201115 23:02:33.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025124806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025232319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.441" endtime="20201115 23:02:33.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.449" endtime="20201115 23:02:33.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.147" endtime="20201115 23:02:33.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.145" endtime="20201115 23:02:33.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.456" level="INFO">${RESULT} = [{'time': 0.025232319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010751300000000005, 'source_diff': 0.00010751300000000005}, {'time': 0.025343333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:33.452" endtime="20201115 23:02:33.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.470" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:33.457" endtime="20201115 23:02:33.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.475" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.474" endtime="20201115 23:02:33.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.477" level="INFO">VALUE: [0.00010751300000000005, 0.00010767999999999889, 0.00010808300000000187, 0.00010759700000000094, 0.00010763899999999965, 0.00010811099999999754, 0.00010797200000000132, 0.00010777799999999935, 0.00010819399999999896, 0.0001077219999999976, 0.0001080279999999996, 0.00010812499999999711, 0.00010761100000000051, 0.0001072499999999997, 0.00010818099999999886, 0.00010780600000000196, 0.00010811100000000101, 0.00010779099999999944, 0.00010782000000000153, 0.00010749999999999996, 0.00010805599999999874, 0.00010780599999999849, 0.00010748600000000039, 0.0001076950000000014, 0.00010749999999999996, 0.00010813900000000015, 0.00010772200000000107, 0.00010741699999999854, 0.00010804199999999917, 0.00010763800000000018, 0.00010763800000000018, 0.00010765299999999922, 0.00010811100000000101, 0.00010804099999999969, 0.0001077500000000002, 0.00010749999999999996, 0.00010727799999999885, 0.00010723600000000014, 0.00010740299999999897, 0.00010759700000000094, 0.0001082500000000007, 0.0001072499999999997, 0.00010798700000000036, 0.0001073340000000006, 0.00010741599999999907, 0.00010754099999999919, 0.00010797200000000132, 0.00010730500000000198, 0.00010816699999999929, 0.0001072499999999997]</msg>
<status status="PASS" starttime="20201115 23:02:33.476" endtime="20201115 23:02:33.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.471" endtime="20201115 23:02:33.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.480" endtime="20201115 23:02:33.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.484" endtime="20201115 23:02:33.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.482" endtime="20201115 23:02:33.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.479" endtime="20201115 23:02:33.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.109" endtime="20201115 23:02:33.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.107" endtime="20201115 23:02:33.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.106" endtime="20201115 23:02:33.505"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.507" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.516" endtime="20201115 23:02:33.536"></status>
</kw>
<msg timestamp="20201115 23:02:33.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.514" endtime="20201115 23:02:33.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.538" endtime="20201115 23:02:33.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.540" endtime="20201115 23:02:33.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.512" endtime="20201115 23:02:33.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.509" endtime="20201115 23:02:33.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.550" endtime="20201115 23:02:33.835"></status>
</kw>
<msg timestamp="20201115 23:02:33.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025173306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.548" endtime="20201115 23:02:33.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025173306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.839" endtime="20201115 23:02:33.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.847" endtime="20201115 23:02:33.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.545" endtime="20201115 23:02:33.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.544" endtime="20201115 23:02:33.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.854" level="INFO">${RESULT} = [{'time': 0.025173306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001085699999999988, 'source_diff': 0.0001085699999999988}, {'time': 0.025284292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:33.851" endtime="20201115 23:02:33.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.867" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:33.855" endtime="20201115 23:02:33.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.872" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.871" endtime="20201115 23:02:33.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.874" level="INFO">VALUE: [0.0001085699999999988, 0.00010900000000000146, 0.00010847199999999835, 0.00010823700000000061, 0.00010863800000000118, 0.0001087630000000013, 0.00010913900000000115, 0.00010900000000000146, 0.00010887500000000133, 0.00010866699999999979, 0.00010899999999999799, 0.00010826400000000028, 0.0001090699999999993, 0.0001085280000000001, 0.00010876400000000078, 0.00010877800000000035, 0.00010840299999999997, 0.00010893099999999961, 0.00010883299999999915, 0.00010840199999999703, 0.00010901400000000103, 0.00010897200000000232, 0.00010886099999999829, 0.00010897300000000179, 0.00010849999999999749, 0.0001085829999999989, 0.00010919399999999996, 0.0001088340000000021, 0.00010891700000000004, 0.00010831999999999856, 0.00010919499999999943, 0.00010913900000000115, 0.00010893000000000014, 0.0001085280000000001, 0.00010861100000000151, 0.00010861100000000151, 0.00010915200000000125, 0.00010873600000000164, 0.00010875000000000121, 0.00010906899999999983, 0.00010912500000000158, 0.0001085829999999989, 0.00010880599999999949, 0.00010831999999999856, 0.00010879199999999992, 0.00010916700000000029, 0.00010865300000000022, 0.00010881899999999958, 0.00010875000000000121, 0.00010891600000000057]</msg>
<status status="PASS" starttime="20201115 23:02:33.873" endtime="20201115 23:02:33.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.868" endtime="20201115 23:02:33.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.877" endtime="20201115 23:02:33.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.881" endtime="20201115 23:02:33.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.879" endtime="20201115 23:02:33.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.876" endtime="20201115 23:02:33.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.508" endtime="20201115 23:02:33.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.506" endtime="20201115 23:02:33.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.505" endtime="20201115 23:02:33.902"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.905" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.913" endtime="20201115 23:02:33.933"></status>
</kw>
<msg timestamp="20201115 23:02:33.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.912" endtime="20201115 23:02:33.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.934" endtime="20201115 23:02:33.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.937" endtime="20201115 23:02:33.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.909" endtime="20201115 23:02:33.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.907" endtime="20201115 23:02:33.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.946" endtime="20201115 23:02:34.232"></status>
</kw>
<msg timestamp="20201115 23:02:34.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024164792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024274889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.944" endtime="20201115 23:02:34.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024164792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024274889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.236" endtime="20201115 23:02:34.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.244" endtime="20201115 23:02:34.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.942" endtime="20201115 23:02:34.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.940" endtime="20201115 23:02:34.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.251" level="INFO">${RESULT} = [{'time': 0.024274889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011009699999999997, 'source_diff': 0.00011009699999999997}, {'time': 0.024387889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:34.248" endtime="20201115 23:02:34.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.264" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:34.252" endtime="20201115 23:02:34.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.269" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.268" endtime="20201115 23:02:34.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.271" level="INFO">VALUE: [0.00011009699999999997, 0.00010980600000000049, 0.00011019500000000043, 0.000109208999999999, 0.0001098479999999992, 0.00010999999999999899, 0.00010941700000000054, 0.00010959699999999947, 0.00010955500000000076, 0.00010943000000000064, 0.00011012499999999911, 0.0001100280000000016, 0.0001102220000000001, 0.00010969400000000046, 0.00010945799999999978, 0.00011011099999999954, 0.00011016699999999782, 0.00010926399999999781, 0.0001098479999999992, 0.00010944499999999968, 0.00010948600000000239, 0.00011005600000000074, 0.00010943000000000064, 0.00010999999999999899, 0.00010934700000000269, 0.00010920799999999953, 0.00011012499999999911, 0.00010927799999999738, 0.00010968100000000036, 0.00010950000000000196, 0.00010936099999999879, 0.000109208999999999, 0.00011018100000000086, 0.00011018100000000086, 0.00011024999999999924, 0.00010951400000000153, 0.00010995800000000028, 0.00010926400000000128, 0.0001100830000000004, 0.00010999999999999899, 0.00011020800000000053, 0.00010961099999999904, 0.00011002799999999813, 0.00010987499999999886, 0.00010993100000000061, 0.00010951400000000153, 0.0001095699999999998, 0.00010958399999999938, 0.00010965200000000175, 0.00010962499999999861]</msg>
<status status="PASS" starttime="20201115 23:02:34.270" endtime="20201115 23:02:34.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.265" endtime="20201115 23:02:34.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.279" endtime="20201115 23:02:34.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.282" endtime="20201115 23:02:34.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.280" endtime="20201115 23:02:34.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.277" endtime="20201115 23:02:34.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.905" endtime="20201115 23:02:34.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.904" endtime="20201115 23:02:34.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.903" endtime="20201115 23:02:34.303"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.306" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.314" endtime="20201115 23:02:34.334"></status>
</kw>
<msg timestamp="20201115 23:02:34.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.312" endtime="20201115 23:02:34.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.335" endtime="20201115 23:02:34.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.338" endtime="20201115 23:02:34.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.310" endtime="20201115 23:02:34.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.308" endtime="20201115 23:02:34.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.347" endtime="20201115 23:02:34.633"></status>
</kw>
<msg timestamp="20201115 23:02:34.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024245944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024356306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.346" endtime="20201115 23:02:34.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024245944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024356306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.637" endtime="20201115 23:02:34.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.645" endtime="20201115 23:02:34.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.343" endtime="20201115 23:02:34.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.341" endtime="20201115 23:02:34.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.652" level="INFO">${RESULT} = [{'time': 0.024356306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011036200000000274, 'source_diff': 0.00011036200000000274}, {'time': 0.024471292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:34.648" endtime="20201115 23:02:34.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.665" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:34.653" endtime="20201115 23:02:34.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.670" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.668" endtime="20201115 23:02:34.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.672" level="INFO">VALUE: [0.00011036200000000274, 0.00011113899999999968, 0.00011032000000000056, 0.00011022299999999957, 0.0001110549999999988, 0.00011048599999999992, 0.00011083299999999768, 0.00011044399999999774, 0.00011112500000000011, 0.00011061100000000004, 0.00011048599999999992, 0.00011087499999999986, 0.00011072199999999713, 0.00011054200000000167, 0.00011079200000000192, 0.00011022299999999957, 0.00011099999999999999, 0.00011105600000000174, 0.00011066600000000232, 0.00011042999999999817, 0.00011097199999999738, 0.00011058299999999743, 0.00011052799999999863, 0.0001105830000000009, 0.00011065300000000222, 0.0001110700000000013, 0.00011034699999999675, 0.00011118099999999839, 0.00011043100000000111, 0.00011044500000000068, 0.00011032000000000056, 0.00011058400000000038, 0.00011059700000000047, 0.00011056899999999786, 0.00011091700000000204, 0.0001102220000000001, 0.00011076400000000278, 0.00011102799999999913, 0.00011081900000000158, 0.00011061100000000004, 0.00011043100000000111, 0.00011036099999999979, 0.00011118099999999839, 0.00011095900000000075, 0.00011113899999999968, 0.00011029199999999795, 0.00011037499999999936, 0.00011099999999999999, 0.00011059700000000047, 0.00011109700000000097]</msg>
<status status="PASS" starttime="20201115 23:02:34.671" endtime="20201115 23:02:34.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.666" endtime="20201115 23:02:34.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.676" endtime="20201115 23:02:34.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.679" endtime="20201115 23:02:34.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.678" endtime="20201115 23:02:34.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.674" endtime="20201115 23:02:34.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.306" endtime="20201115 23:02:34.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.304" endtime="20201115 23:02:34.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.303" endtime="20201115 23:02:34.700"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.703" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.711" endtime="20201115 23:02:34.731"></status>
</kw>
<msg timestamp="20201115 23:02:34.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.709" endtime="20201115 23:02:34.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.732" endtime="20201115 23:02:34.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.735" endtime="20201115 23:02:34.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.707" endtime="20201115 23:02:34.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.705" endtime="20201115 23:02:34.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.744" endtime="20201115 23:02:35.030"></status>
</kw>
<msg timestamp="20201115 23:02:35.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025366792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025478972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.743" endtime="20201115 23:02:35.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025366792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025478972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.034" endtime="20201115 23:02:35.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.042" endtime="20201115 23:02:35.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.740" endtime="20201115 23:02:35.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.738" endtime="20201115 23:02:35.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:35.049" level="INFO">${RESULT} = [{'time': 0.025478972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011217999999999992, 'source_diff': 0.00011217999999999992}, {'time': 0.025600986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:35.046" endtime="20201115 23:02:35.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.064" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:35.050" endtime="20201115 23:02:35.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.068" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.067" endtime="20201115 23:02:35.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.071" level="INFO">VALUE: [0.00011217999999999992, 0.00011206899999999936, 0.00011169400000000246, 0.00011126399999999981, 0.00011130599999999852, 0.00011125000000000024, 0.00011220899999999853, 0.00011198600000000142, 0.00011158400000000138, 0.00011158400000000138, 0.00011179199999999945, 0.00011138899999999993, 0.00011143000000000264, 0.00011136100000000079, 0.00011223600000000167, 0.00011151400000000006, 0.00011142999999999917, 0.00011212500000000111, 0.00011165299999999975, 0.0001114029999999995, 0.00011224999999999777, 0.00011192999999999967, 0.00011168099999999889, 0.00011218100000000286, 0.0001120419999999997, 0.00011130600000000199, 0.00011148600000000092, 0.0001120969999999985, 0.00011131899999999861, 0.00011179199999999945, 0.00011126399999999981, 0.00011175000000000074, 0.0001122220000000021, 0.0001112359999999972, 0.00011198600000000142, 0.00011186099999999782, 0.00011165299999999975, 0.00011137499999999689, 0.00011215300000000025, 0.00011183399999999816, 0.00011147200000000135, 0.00011212499999999764, 0.00011158299999999843, 0.00011202800000000013, 0.00011219399999999949, 0.00011176400000000031, 0.00011202800000000013, 0.00011179200000000292, 0.00011148600000000092, 0.00011129200000000242]</msg>
<status status="PASS" starttime="20201115 23:02:35.069" endtime="20201115 23:02:35.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.065" endtime="20201115 23:02:35.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.074" endtime="20201115 23:02:35.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.077" endtime="20201115 23:02:35.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.076" endtime="20201115 23:02:35.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.072" endtime="20201115 23:02:35.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.703" endtime="20201115 23:02:35.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.701" endtime="20201115 23:02:35.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.701" endtime="20201115 23:02:35.099"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.101" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.109" endtime="20201115 23:02:35.129"></status>
</kw>
<msg timestamp="20201115 23:02:35.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.108" endtime="20201115 23:02:35.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.131" endtime="20201115 23:02:35.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.134" endtime="20201115 23:02:35.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.105" endtime="20201115 23:02:35.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.103" endtime="20201115 23:02:35.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.143" endtime="20201115 23:02:35.427"></status>
</kw>
<msg timestamp="20201115 23:02:35.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024426792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024539583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.141" endtime="20201115 23:02:35.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024426792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024539583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.431" endtime="20201115 23:02:35.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.440" endtime="20201115 23:02:35.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.138" endtime="20201115 23:02:35.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.137" endtime="20201115 23:02:35.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:35.447" level="INFO">${RESULT} = [{'time': 0.024539583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011279100000000097, 'source_diff': 0.00011279100000000097}, {'time': 0.024658583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:35.443" endtime="20201115 23:02:35.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.460" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:02:35.448" endtime="20201115 23:02:35.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.464" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.463" endtime="20201115 23:02:35.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.467" level="INFO">VALUE: [0.00011279100000000097, 0.00011231899999999961, 0.00011233299999999918, 0.00011275000000000174, 0.00011266700000000032, 0.00011284699999999925, 0.0001130969999999995, 0.00011279199999999698, 0.0001123749999999979, 0.00011268099999999989, 0.0001132229999999991, 0.00011225000000000124, 0.00011237500000000136, 0.00011272199999999913, 0.0001132359999999992, 0.00011259700000000247, 0.000112596999999999, 0.00011220799999999906, 0.00011269399999999999, 0.0001130969999999995, 0.00011238900000000093, 0.00011230599999999952, 0.00011236099999999832, 0.00011234699999999875, 0.0001125830000000029, 0.0001123749999999979, 0.00011236099999999832, 0.00011269499999999946, 0.00011238799999999799, 0.00011311099999999907, 0.00011229100000000047, 0.00011286100000000229, 0.00011229199999999995, 0.00011279200000000045, 0.000112596999999999, 0.00011247199999999888, 0.00011297199999999938, 0.00011256999999999934, 0.00011265300000000075, 0.00011313899999999821, 0.00011318100000000039, 0.00011219499999999896, 0.0001129160000000011, 0.00011313900000000168, 0.00011323600000000267, 0.00011266600000000085, 0.00011251400000000106, 0.00011251399999999759, 0.00011319400000000049, 0.00011220800000000253]</msg>
<status status="PASS" starttime="20201115 23:02:35.465" endtime="20201115 23:02:35.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.461" endtime="20201115 23:02:35.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.470" endtime="20201115 23:02:35.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.473" endtime="20201115 23:02:35.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.472" endtime="20201115 23:02:35.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.468" endtime="20201115 23:02:35.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.102" endtime="20201115 23:02:35.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.100" endtime="20201115 23:02:35.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.099" endtime="20201115 23:02:35.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.856" endtime="20201115 23:02:35.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.499" endtime="20201115 23:02:35.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.498" endtime="20201115 23:02:35.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.496" endtime="20201115 23:02:35.520"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:55.786" endtime="20201115 23:02:35.521" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:14.541" endtime="20201115 23:02:35.525"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 23:01:12.496" endtime="20201115 23:02:35.538"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
