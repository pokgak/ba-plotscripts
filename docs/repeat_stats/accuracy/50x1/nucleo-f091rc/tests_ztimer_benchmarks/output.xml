<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:59:40.781" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:41.339" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:41.347" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:42.455" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:41.338" endtime="20201115 22:59:42.456"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:42.458" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:42.457" endtime="20201115 22:59:42.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:41.336" endtime="20201115 22:59:42.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:42.462" endtime="20201115 22:59:42.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.460" endtime="20201115 22:59:42.644"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:42.657" endtime="20201115 22:59:42.671"></status>
</kw>
<msg timestamp="20201115 22:59:42.671" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:42.655" endtime="20201115 22:59:42.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:42.674" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:42.672" endtime="20201115 22:59:42.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:42.677" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:42.675" endtime="20201115 22:59:42.678"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:42.653" endtime="20201115 22:59:42.678"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:42.651" endtime="20201115 22:59:42.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.649" endtime="20201115 22:59:42.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:42.683" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:42.682" endtime="20201115 22:59:42.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.680" endtime="20201115 22:59:42.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.648" endtime="20201115 22:59:42.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.648" endtime="20201115 22:59:42.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:42.685" endtime="20201115 22:59:42.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.646" endtime="20201115 22:59:42.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:42.688" endtime="20201115 22:59:42.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.645" endtime="20201115 22:59:42.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:41.334" endtime="20201115 22:59:42.690"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:42.696" endtime="20201115 22:59:42.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.695" endtime="20201115 22:59:42.716"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:42.730" endtime="20201115 22:59:42.745"></status>
</kw>
<msg timestamp="20201115 22:59:42.746" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:42.728" endtime="20201115 22:59:42.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:42.748" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:42.747" endtime="20201115 22:59:42.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:42.752" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:42.749" endtime="20201115 22:59:42.752"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:42.726" endtime="20201115 22:59:42.753"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:42.724" endtime="20201115 22:59:42.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.722" endtime="20201115 22:59:42.754"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:42.758" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:42.757" endtime="20201115 22:59:42.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.755" endtime="20201115 22:59:42.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.721" endtime="20201115 22:59:42.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.720" endtime="20201115 22:59:42.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:42.759" endtime="20201115 22:59:42.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.719" endtime="20201115 22:59:42.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.717" endtime="20201115 22:59:42.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.694" endtime="20201115 22:59:42.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:42.770" endtime="20201115 22:59:42.781"></status>
</kw>
<msg timestamp="20201115 22:59:42.781" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:42.768" endtime="20201115 22:59:42.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:42.783" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:42.782" endtime="20201115 22:59:42.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:42.784" endtime="20201115 22:59:42.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.766" endtime="20201115 22:59:42.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.764" endtime="20201115 22:59:42.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:42.792" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:59:42.790" endtime="20201115 22:59:42.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:42.794" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:59:42.793" endtime="20201115 22:59:42.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.788" endtime="20201115 22:59:42.794"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:42.691" endtime="20201115 22:59:42.795" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:40.893" endtime="20201115 22:59:42.798"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:42.850" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:42.858" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:44.057" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:42.849" endtime="20201115 22:59:44.058"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.063" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:44.060" endtime="20201115 22:59:44.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.848" endtime="20201115 22:59:44.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:44.069" endtime="20201115 22:59:44.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.067" endtime="20201115 22:59:44.289"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.302" endtime="20201115 22:59:44.316"></status>
</kw>
<msg timestamp="20201115 22:59:44.316" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.300" endtime="20201115 22:59:44.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.319" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.317" endtime="20201115 22:59:44.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.322" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:44.320" endtime="20201115 22:59:44.322"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.298" endtime="20201115 22:59:44.323"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.295" endtime="20201115 22:59:44.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.294" endtime="20201115 22:59:44.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:44.328" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:44.327" endtime="20201115 22:59:44.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.325" endtime="20201115 22:59:44.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.293" endtime="20201115 22:59:44.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.293" endtime="20201115 22:59:44.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.329" endtime="20201115 22:59:44.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.292" endtime="20201115 22:59:44.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.332" endtime="20201115 22:59:44.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.290" endtime="20201115 22:59:44.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.846" endtime="20201115 22:59:44.334"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:44.341" endtime="20201115 22:59:44.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.339" endtime="20201115 22:59:44.361"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.374" endtime="20201115 22:59:44.389"></status>
</kw>
<msg timestamp="20201115 22:59:44.390" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.373" endtime="20201115 22:59:44.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.392" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.391" endtime="20201115 22:59:44.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.395" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:44.393" endtime="20201115 22:59:44.395"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.370" endtime="20201115 22:59:44.396"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.368" endtime="20201115 22:59:44.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.367" endtime="20201115 22:59:44.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:44.401" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:44.400" endtime="20201115 22:59:44.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.398" endtime="20201115 22:59:44.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.366" endtime="20201115 22:59:44.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.365" endtime="20201115 22:59:44.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.402" endtime="20201115 22:59:44.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.364" endtime="20201115 22:59:44.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.362" endtime="20201115 22:59:44.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.338" endtime="20201115 22:59:44.405"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.409" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.418" endtime="20201115 22:59:44.434"></status>
</kw>
<msg timestamp="20201115 22:59:44.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.415" endtime="20201115 22:59:44.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.436" endtime="20201115 22:59:44.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.438" endtime="20201115 22:59:44.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.413" endtime="20201115 22:59:44.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.411" endtime="20201115 22:59:44.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.447" endtime="20201115 22:59:44.738"></status>
</kw>
<msg timestamp="20201115 22:59:44.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068843944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068866403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:44.446" endtime="20201115 22:59:44.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068843944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068866403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:44.742" endtime="20201115 22:59:44.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.750" endtime="20201115 22:59:44.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.443" endtime="20201115 22:59:44.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.441" endtime="20201115 22:59:44.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:44.757" level="INFO">${RESULT} = [{'time': 0.068866403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.245900000000245e-05, 'source_diff': 2.245900000000245e-05}, {'time': 0.068911431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:44.754" endtime="20201115 22:59:44.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:44.771" level="INFO">${ACCURACY} = {'diff': [2.245900000000245e-05, 2.3111999999991806e-05, 2.2958000000003476e-05, 2.2666999999990112e-05, 2.2999999999995246e-05, 2.3138999999991472e-05, 2.2597999999998675e-05, 2.2583999999992166e-05,...</msg>
<status status="PASS" starttime="20201115 22:59:44.758" endtime="20201115 22:59:44.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.775" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 22:59:44.774" endtime="20201115 22:59:44.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.778" level="INFO">VALUE: [2.245900000000245e-05, 2.3111999999991806e-05, 2.2958000000003476e-05, 2.2666999999990112e-05, 2.2999999999995246e-05, 2.3138999999991472e-05, 2.2597999999998675e-05, 2.2583999999992166e-05, 2.3070000000000035e-05, 2.286099999999902e-05, 2.2902999999990792e-05, 2.3040999999987544e-05, 2.2763999999994566e-05, 2.308300000000707e-05, 2.3250000000002435e-05, 2.3473000000009958e-05, 2.329100000000861e-05, 2.254100000000092e-05, 2.2750000000001935e-05, 2.256900000000006e-05, 2.34169999999978e-05, 2.258300000000657e-05, 2.2999999999995246e-05, 2.3070000000000035e-05, 2.29169999999973e-05, 2.3000000000009124e-05, 2.30969999999997e-05, 2.2750000000001935e-05, 2.3209000000010138e-05, 2.280500000000074e-05, 2.25969999999992e-05, 2.2887999999998687e-05, 2.2848000000005864e-05, 2.29169999999973e-05, 2.2833999999999355e-05, 2.3250000000002435e-05, 2.3471999999996607e-05, 2.2999999999995246e-05, 2.30969999999997e-05, 2.3415999999998327e-05, 2.30969999999997e-05, 2.2986000000002615e-05, 2.3249999999988558e-05, 2.34169999999978e-05, 2.312499999999884e-05, 2.316700000000449e-05, 2.290300000000467e-05, 2.3250000000002435e-05, 2.2735999999995427e-05, 2.308300000000707e-05]</msg>
<status status="PASS" starttime="20201115 22:59:44.776" endtime="20201115 22:59:44.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.772" endtime="20201115 22:59:44.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.781" endtime="20201115 22:59:44.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:44.784" endtime="20201115 22:59:44.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.783" endtime="20201115 22:59:44.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.779" endtime="20201115 22:59:44.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.409" endtime="20201115 22:59:44.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.407" endtime="20201115 22:59:44.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.406" endtime="20201115 22:59:44.806"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.808" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.816" endtime="20201115 22:59:44.833"></status>
</kw>
<msg timestamp="20201115 22:59:44.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.815" endtime="20201115 22:59:44.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.835" endtime="20201115 22:59:44.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.838" endtime="20201115 22:59:44.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.812" endtime="20201115 22:59:44.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.810" endtime="20201115 22:59:44.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.846" endtime="20201115 22:59:45.132"></status>
</kw>
<msg timestamp="20201115 22:59:45.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025281431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025304514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:44.845" endtime="20201115 22:59:45.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025281431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025304514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:45.136" endtime="20201115 22:59:45.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.145" endtime="20201115 22:59:45.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.842" endtime="20201115 22:59:45.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.841" endtime="20201115 22:59:45.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:45.151" level="INFO">${RESULT} = [{'time': 0.025304514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.308300000000013e-05, 'source_diff': 2.308300000000013e-05}, {'time': 0.025348528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:45.148" endtime="20201115 22:59:45.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:45.165" level="INFO">${ACCURACY} = {'diff': [2.308300000000013e-05, 2.2569999999999535e-05, 2.3083999999999605e-05, 2.291700000000077e-05, 2.2764000000001505e-05, 2.3070000000000035e-05, 2.3042000000000895e-05, 2.273699999999837e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:59:45.152" endtime="20201115 22:59:45.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.169" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 22:59:45.168" endtime="20201115 22:59:45.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.172" level="INFO">VALUE: [2.308300000000013e-05, 2.2569999999999535e-05, 2.3083999999999605e-05, 2.291700000000077e-05, 2.2764000000001505e-05, 2.3070000000000035e-05, 2.3042000000000895e-05, 2.273699999999837e-05, 2.341700000000127e-05, 2.266700000000052e-05, 2.2985999999999146e-05, 2.3416000000001796e-05, 2.3151999999998507e-05, 2.3304999999997772e-05, 2.2929999999997397e-05, 2.283299999999988e-05, 2.3249999999998966e-05, 2.258299999999963e-05, 2.261099999999877e-05, 2.291700000000077e-05, 2.316699999999755e-05, 2.3000000000002185e-05, 2.341700000000127e-05, 2.316699999999755e-05, 2.284699999999945e-05, 2.2777999999997606e-05, 2.344500000000041e-05, 2.2819999999999785e-05, 2.319500000000016e-05, 2.293100000000034e-05, 2.2500000000001685e-05, 2.30969999999997e-05, 2.3458000000000506e-05, 2.3320000000000285e-05, 2.32229999999993e-05, 2.2971999999999576e-05, 2.279100000000117e-05, 2.2915999999997827e-05, 2.281900000000031e-05, 2.3401999999998757e-05, 2.334699999999995e-05, 2.308300000000013e-05, 2.3415999999998327e-05, 2.2999999999998716e-05, 2.258299999999963e-05, 2.338899999999866e-05, 2.315299999999798e-05, 2.333300000000038e-05, 2.308300000000013e-05, 2.25830000000031e-05]</msg>
<status status="PASS" starttime="20201115 22:59:45.170" endtime="20201115 22:59:45.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.166" endtime="20201115 22:59:45.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.175" endtime="20201115 22:59:45.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:45.178" endtime="20201115 22:59:45.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.177" endtime="20201115 22:59:45.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.173" endtime="20201115 22:59:45.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.809" endtime="20201115 22:59:45.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.807" endtime="20201115 22:59:45.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.806" endtime="20201115 22:59:45.199"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.202" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.210" endtime="20201115 22:59:45.225"></status>
</kw>
<msg timestamp="20201115 22:59:45.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.208" endtime="20201115 22:59:45.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.227" endtime="20201115 22:59:45.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.230" endtime="20201115 22:59:45.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.206" endtime="20201115 22:59:45.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.204" endtime="20201115 22:59:45.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.239" endtime="20201115 22:59:45.524"></status>
</kw>
<msg timestamp="20201115 22:59:45.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024752931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02477625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:45.238" endtime="20201115 22:59:45.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024752931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02477625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:45.528" endtime="20201115 22:59:45.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.536" endtime="20201115 22:59:45.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.235" endtime="20201115 22:59:45.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.233" endtime="20201115 22:59:45.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:45.543" level="INFO">${RESULT} = [{'time': 0.02477625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.331900000000081e-05, 'source_diff': 2.331900000000081e-05}, {'time': 0.02482025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:59:45.540" endtime="20201115 22:59:45.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:45.557" level="INFO">${ACCURACY} = {'diff': [2.331900000000081e-05, 2.2999999999998716e-05, 2.2750000000001935e-05, 2.3151999999998507e-05, 2.290299999999773e-05, 2.2819999999999785e-05, 2.3249999999998966e-05, 2.3070000000000035e-05, ...</msg>
<status status="PASS" starttime="20201115 22:59:45.544" endtime="20201115 22:59:45.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.562" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 22:59:45.561" endtime="20201115 22:59:45.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.564" level="INFO">VALUE: [2.331900000000081e-05, 2.2999999999998716e-05, 2.2750000000001935e-05, 2.3151999999998507e-05, 2.290299999999773e-05, 2.2819999999999785e-05, 2.3249999999998966e-05, 2.3070000000000035e-05, 2.3277999999998106e-05, 2.2985999999999146e-05, 2.318100000000059e-05, 2.265300000000095e-05, 2.297300000000252e-05, 2.3429999999997897e-05, 2.284699999999945e-05, 2.308300000000013e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.3082999999996662e-05, 2.287499999999859e-05, 2.2471999999999076e-05, 2.34030000000017e-05, 2.283299999999988e-05, 2.258299999999963e-05, 2.344500000000041e-05, 2.333300000000038e-05, 2.258299999999963e-05, 2.258299999999963e-05, 2.343099999999737e-05, 2.283299999999988e-05, 2.2583999999999105e-05, 2.2749999999998466e-05, 2.3249999999998966e-05, 2.2790999999997702e-05, 2.3041999999997426e-05, 2.3263999999998536e-05, 2.3098000000002644e-05, 2.29030000000012e-05, 2.315299999999798e-05, 2.2513999999997786e-05, 2.308300000000013e-05, 2.2750000000001935e-05, 2.3402000000002227e-05, 2.281900000000031e-05, 2.3056000000000465e-05, 2.30969999999997e-05, 2.3264000000002005e-05, 2.3416000000001796e-05, 2.3013999999998286e-05, 2.2749999999998466e-05]</msg>
<status status="PASS" starttime="20201115 22:59:45.563" endtime="20201115 22:59:45.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.558" endtime="20201115 22:59:45.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.568" endtime="20201115 22:59:45.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:45.571" endtime="20201115 22:59:45.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.569" endtime="20201115 22:59:45.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.566" endtime="20201115 22:59:45.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.202" endtime="20201115 22:59:45.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.201" endtime="20201115 22:59:45.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.200" endtime="20201115 22:59:45.592"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.594" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.603" endtime="20201115 22:59:45.618"></status>
</kw>
<msg timestamp="20201115 22:59:45.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.601" endtime="20201115 22:59:45.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.620" endtime="20201115 22:59:45.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.622" endtime="20201115 22:59:45.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.598" endtime="20201115 22:59:45.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.596" endtime="20201115 22:59:45.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.631" endtime="20201115 22:59:45.916"></status>
</kw>
<msg timestamp="20201115 22:59:45.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023901778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023924556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:45.630" endtime="20201115 22:59:45.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023901778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023924556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:45.921" endtime="20201115 22:59:45.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.929" endtime="20201115 22:59:45.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.627" endtime="20201115 22:59:45.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.626" endtime="20201115 22:59:45.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:45.936" level="INFO">${RESULT} = [{'time': 0.023924556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2778000000001075e-05, 'source_diff': 2.2778000000001075e-05}, {'time': 0.023966569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:45.932" endtime="20201115 22:59:45.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:45.949" level="INFO">${ACCURACY} = {'diff': [2.2778000000001075e-05, 2.283299999999988e-05, 2.2916000000001296e-05, 2.2999999999998716e-05, 2.3264000000002005e-05, 2.2750000000001935e-05, 2.25830000000031e-05, 2.30969999999997e-05, 2.2...</msg>
<status status="PASS" starttime="20201115 22:59:45.937" endtime="20201115 22:59:45.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.953" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 22:59:45.952" endtime="20201115 22:59:45.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.956" level="INFO">VALUE: [2.2778000000001075e-05, 2.283299999999988e-05, 2.2916000000001296e-05, 2.2999999999998716e-05, 2.3264000000002005e-05, 2.2750000000001935e-05, 2.25830000000031e-05, 2.30969999999997e-05, 2.2944000000000436e-05, 2.284699999999945e-05, 2.2735999999998896e-05, 2.308300000000013e-05, 2.2749999999998466e-05, 2.295899999999948e-05, 2.284699999999945e-05, 2.309700000000317e-05, 2.2764000000001505e-05, 2.3236000000002865e-05, 2.291700000000077e-05, 2.2500000000001685e-05, 2.341700000000127e-05, 2.2499999999998216e-05, 2.3250000000002435e-05, 2.2750000000001935e-05, 2.326300000000253e-05, 2.340299999999823e-05, 2.316700000000102e-05, 2.280500000000074e-05, 2.2944000000000436e-05, 2.2665999999997577e-05, 2.3013999999998286e-05, 2.3250000000002435e-05, 2.34030000000017e-05, 2.2985999999999146e-05, 2.3415999999998327e-05, 2.313900000000188e-05, 2.330500000000124e-05, 2.2750000000001935e-05, 2.308300000000013e-05, 2.288900000000163e-05, 2.281900000000031e-05, 2.30969999999997e-05, 2.2750000000001935e-05, 2.2570000000003004e-05, 2.2583999999999105e-05, 2.2611999999998245e-05, 2.2749999999998466e-05, 2.293100000000034e-05, 2.316700000000102e-05, 2.266700000000052e-05]</msg>
<status status="PASS" starttime="20201115 22:59:45.954" endtime="20201115 22:59:45.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.950" endtime="20201115 22:59:45.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.959" endtime="20201115 22:59:45.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:45.962" endtime="20201115 22:59:45.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.961" endtime="20201115 22:59:45.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.957" endtime="20201115 22:59:45.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.595" endtime="20201115 22:59:45.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.593" endtime="20201115 22:59:45.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.592" endtime="20201115 22:59:45.983"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.986" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.994" endtime="20201115 22:59:46.010"></status>
</kw>
<msg timestamp="20201115 22:59:46.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.993" endtime="20201115 22:59:46.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.011" endtime="20201115 22:59:46.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.014" endtime="20201115 22:59:46.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.990" endtime="20201115 22:59:46.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.988" endtime="20201115 22:59:46.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.024" endtime="20201115 22:59:46.309"></status>
</kw>
<msg timestamp="20201115 22:59:46.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024670611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.022" endtime="20201115 22:59:46.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024670611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.313" endtime="20201115 22:59:46.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.321" endtime="20201115 22:59:46.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.019" endtime="20201115 22:59:46.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.018" endtime="20201115 22:59:46.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:46.328" level="INFO">${RESULT} = [{'time': 0.024693292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.268100000000009e-05, 'source_diff': 2.268100000000009e-05}, {'time': 0.02473225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:59:46.324" endtime="20201115 22:59:46.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:46.341" level="INFO">${ACCURACY} = {'diff': [2.268100000000009e-05, 2.256900000000006e-05, 2.2721999999999326e-05, 2.3264000000002005e-05, 2.2570000000003004e-05, 2.25969999999992e-05, 2.25969999999992e-05, 2.341700000000127e-05, 2.299...</msg>
<status status="PASS" starttime="20201115 22:59:46.329" endtime="20201115 22:59:46.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.345" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 22:59:46.344" endtime="20201115 22:59:46.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.348" level="INFO">VALUE: [2.268100000000009e-05, 2.256900000000006e-05, 2.2721999999999326e-05, 2.3264000000002005e-05, 2.2570000000003004e-05, 2.25969999999992e-05, 2.25969999999992e-05, 2.341700000000127e-05, 2.2999999999998716e-05, 2.29169999999973e-05, 2.316699999999755e-05, 2.2985999999999146e-05, 2.313899999999841e-05, 2.3235999999999396e-05, 2.338899999999866e-05, 2.2499999999998216e-05, 2.308300000000013e-05, 2.2916000000001296e-05, 2.2486000000002115e-05, 2.3401999999998757e-05, 2.333300000000038e-05, 2.2930000000000866e-05, 2.29030000000012e-05, 2.256900000000006e-05, 2.343099999999737e-05, 2.333300000000038e-05, 2.29030000000012e-05, 2.2999999999998716e-05, 2.340299999999823e-05, 2.284699999999945e-05, 2.294499999999991e-05, 2.318100000000059e-05, 2.268100000000009e-05, 2.2500000000001685e-05, 2.2749999999998466e-05, 2.330500000000124e-05, 2.291700000000077e-05, 2.2985999999999146e-05, 2.276300000000203e-05, 2.341700000000127e-05, 2.2500000000001685e-05, 2.3264000000002005e-05, 2.2721999999999326e-05, 2.3264000000002005e-05, 2.2763999999998036e-05, 2.306900000000056e-05, 2.3458000000000506e-05, 2.3318999999997342e-05, 2.2749999999998466e-05, 2.311099999999927e-05]</msg>
<status status="PASS" starttime="20201115 22:59:46.347" endtime="20201115 22:59:46.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.342" endtime="20201115 22:59:46.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.352" endtime="20201115 22:59:46.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:46.355" endtime="20201115 22:59:46.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.354" endtime="20201115 22:59:46.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.349" endtime="20201115 22:59:46.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.987" endtime="20201115 22:59:46.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.985" endtime="20201115 22:59:46.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.984" endtime="20201115 22:59:46.376"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.378" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.387" endtime="20201115 22:59:46.402"></status>
</kw>
<msg timestamp="20201115 22:59:46.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.385" endtime="20201115 22:59:46.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.404" endtime="20201115 22:59:46.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.406" endtime="20201115 22:59:46.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.383" endtime="20201115 22:59:46.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.381" endtime="20201115 22:59:46.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.415" endtime="20201115 22:59:46.700"></status>
</kw>
<msg timestamp="20201115 22:59:46.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023934583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023957542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.414" endtime="20201115 22:59:46.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023934583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023957542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.704" endtime="20201115 22:59:46.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.713" endtime="20201115 22:59:46.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.411" endtime="20201115 22:59:46.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.410" endtime="20201115 22:59:46.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:46.719" level="INFO">${RESULT} = [{'time': 0.023957542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.295899999999948e-05, 'source_diff': 2.295899999999948e-05}, {'time': 0.023995569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:46.716" endtime="20201115 22:59:46.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:46.733" level="INFO">${ACCURACY} = {'diff': [2.295899999999948e-05, 2.286100000000249e-05, 2.316700000000102e-05, 2.2985999999999146e-05, 2.306900000000056e-05, 2.2735999999998896e-05, 2.261100000000224e-05, 2.2694000000000186e-05, 2.2...</msg>
<status status="PASS" starttime="20201115 22:59:46.720" endtime="20201115 22:59:46.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.737" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 22:59:46.736" endtime="20201115 22:59:46.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.740" level="INFO">VALUE: [2.295899999999948e-05, 2.286100000000249e-05, 2.316700000000102e-05, 2.2985999999999146e-05, 2.306900000000056e-05, 2.2735999999998896e-05, 2.261100000000224e-05, 2.2694000000000186e-05, 2.2750000000001935e-05, 2.308300000000013e-05, 2.3415999999998327e-05, 2.2528000000000825e-05, 2.340299999999823e-05, 2.288900000000163e-05, 2.287499999999859e-05, 2.3014000000001755e-05, 2.291700000000077e-05, 2.3027999999997856e-05, 2.293100000000034e-05, 2.316699999999755e-05, 2.3250000000002435e-05, 2.318100000000059e-05, 2.2486000000002115e-05, 2.2583999999999105e-05, 2.29030000000012e-05, 2.266700000000052e-05, 2.287499999999859e-05, 2.3262999999999062e-05, 2.3249999999998966e-05, 2.2861999999998495e-05, 2.333300000000038e-05, 2.258299999999963e-05, 2.3444000000000936e-05, 2.3165999999998077e-05, 2.2499999999998216e-05, 2.2916000000001296e-05, 2.3027999999997856e-05, 2.258299999999963e-05, 2.347299999999955e-05, 2.315300000000145e-05, 2.284699999999945e-05, 2.291700000000077e-05, 2.2806000000000215e-05, 2.308300000000013e-05, 2.2763999999998036e-05, 2.3070000000000035e-05, 2.258299999999963e-05, 2.2958000000000006e-05, 2.316700000000102e-05, 2.266700000000052e-05]</msg>
<status status="PASS" starttime="20201115 22:59:46.738" endtime="20201115 22:59:46.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.734" endtime="20201115 22:59:46.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.744" endtime="20201115 22:59:46.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:46.747" endtime="20201115 22:59:46.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.745" endtime="20201115 22:59:46.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.742" endtime="20201115 22:59:46.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.379" endtime="20201115 22:59:46.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.377" endtime="20201115 22:59:46.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.376" endtime="20201115 22:59:46.768"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.771" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.779" endtime="20201115 22:59:46.796"></status>
</kw>
<msg timestamp="20201115 22:59:46.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.777" endtime="20201115 22:59:46.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.797" endtime="20201115 22:59:46.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.800" endtime="20201115 22:59:46.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.775" endtime="20201115 22:59:46.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.773" endtime="20201115 22:59:46.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.810" endtime="20201115 22:59:47.096"></status>
</kw>
<msg timestamp="20201115 22:59:47.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025033778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025056889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.808" endtime="20201115 22:59:47.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025033778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025056889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.101" endtime="20201115 22:59:47.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.109" endtime="20201115 22:59:47.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.805" endtime="20201115 22:59:47.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.803" endtime="20201115 22:59:47.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:47.116" level="INFO">${RESULT} = [{'time': 0.025056889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.311099999999927e-05, 'source_diff': 2.311099999999927e-05}, {'time': 0.025103917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:47.112" endtime="20201115 22:59:47.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:47.130" level="INFO">${ACCURACY} = {'diff': [2.311099999999927e-05, 2.2764000000001505e-05, 2.2763999999998036e-05, 2.3084000000003074e-05, 2.2735999999998896e-05, 2.2944000000000436e-05, 2.2486000000002115e-05, 2.3415999999998327e-05,...</msg>
<status status="PASS" starttime="20201115 22:59:47.117" endtime="20201115 22:59:47.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.135" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 22:59:47.134" endtime="20201115 22:59:47.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.138" level="INFO">VALUE: [2.311099999999927e-05, 2.2764000000001505e-05, 2.2763999999998036e-05, 2.3084000000003074e-05, 2.2735999999998896e-05, 2.2944000000000436e-05, 2.2486000000002115e-05, 2.3415999999998327e-05, 2.281900000000031e-05, 2.3263999999998536e-05, 2.30969999999997e-05, 2.2916000000001296e-05, 2.3000000000002185e-05, 2.3415999999998327e-05, 2.2999999999998716e-05, 2.3236000000002865e-05, 2.3249999999998966e-05, 2.34030000000017e-05, 2.3180000000001116e-05, 2.268100000000009e-05, 2.281900000000031e-05, 2.2778000000001075e-05, 2.293100000000034e-05, 2.3278000000001575e-05, 2.3249999999998966e-05, 2.343100000000084e-05, 2.2499999999998216e-05, 2.3249999999998966e-05, 2.341700000000127e-05, 2.262499999999834e-05, 2.313900000000188e-05, 2.266700000000052e-05, 2.318100000000059e-05, 2.2833999999999355e-05, 2.3264000000002005e-05, 2.34169999999978e-05, 2.334699999999995e-05, 2.308300000000013e-05, 2.284699999999945e-05, 2.2680000000000616e-05, 2.2999999999998716e-05, 2.2915999999997827e-05, 2.2943999999996967e-05, 2.2915999999997827e-05, 2.318100000000059e-05, 2.283299999999988e-05, 2.291700000000077e-05, 2.318100000000059e-05, 2.244499999999941e-05, 2.3151999999998507e-05]</msg>
<status status="PASS" starttime="20201115 22:59:47.136" endtime="20201115 22:59:47.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.131" endtime="20201115 22:59:47.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.141" endtime="20201115 22:59:47.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.144" endtime="20201115 22:59:47.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.143" endtime="20201115 22:59:47.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.139" endtime="20201115 22:59:47.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.771" endtime="20201115 22:59:47.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.769" endtime="20201115 22:59:47.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.769" endtime="20201115 22:59:47.166"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.168" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.176" endtime="20201115 22:59:47.192"></status>
</kw>
<msg timestamp="20201115 22:59:47.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.175" endtime="20201115 22:59:47.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.194" endtime="20201115 22:59:47.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.196" endtime="20201115 22:59:47.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.172" endtime="20201115 22:59:47.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.170" endtime="20201115 22:59:47.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.205" endtime="20201115 22:59:47.491"></status>
</kw>
<msg timestamp="20201115 22:59:47.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024031042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02405375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:47.204" endtime="20201115 22:59:47.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024031042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02405375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:47.495" endtime="20201115 22:59:47.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.503" endtime="20201115 22:59:47.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.201" endtime="20201115 22:59:47.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.199" endtime="20201115 22:59:47.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:47.510" level="INFO">${RESULT} = [{'time': 0.02405375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2707999999999756e-05, 'source_diff': 2.2707999999999756e-05}, {'time': 0.024094806, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:59:47.507" endtime="20201115 22:59:47.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:47.524" level="INFO">${ACCURACY} = {'diff': [2.2707999999999756e-05, 2.320899999999973e-05, 2.3235999999999396e-05, 2.263900000000138e-05, 2.3333999999999855e-05, 2.3264000000002005e-05, 2.2721999999999326e-05, 2.2750000000001935e-05, ...</msg>
<status status="PASS" starttime="20201115 22:59:47.512" endtime="20201115 22:59:47.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.528" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 22:59:47.527" endtime="20201115 22:59:47.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.531" level="INFO">VALUE: [2.2707999999999756e-05, 2.320899999999973e-05, 2.3235999999999396e-05, 2.263900000000138e-05, 2.3333999999999855e-05, 2.3264000000002005e-05, 2.2721999999999326e-05, 2.2750000000001935e-05, 2.3083999999999605e-05, 2.29169999999973e-05, 2.316699999999755e-05, 2.2500000000001685e-05, 2.2930000000000866e-05, 2.284699999999945e-05, 2.3264000000002005e-05, 2.3292000000001145e-05, 2.2999999999998716e-05, 2.336100000000299e-05, 2.2763999999998036e-05, 2.308300000000013e-05, 2.2749999999998466e-05, 2.261100000000224e-05, 2.2721999999999326e-05, 2.293100000000034e-05, 2.281900000000031e-05, 2.29169999999973e-05, 2.316699999999755e-05, 2.2764000000001505e-05, 2.2763999999998036e-05, 2.3249999999998966e-05, 2.2555999999999965e-05, 2.3083999999999605e-05, 2.341700000000127e-05, 2.2500000000001685e-05, 2.2735999999998896e-05, 2.3070000000000035e-05, 2.290299999999773e-05, 2.280500000000074e-05, 2.30969999999997e-05, 2.25969999999992e-05, 2.258299999999963e-05, 2.318100000000059e-05, 2.2735999999998896e-05, 2.2916000000001296e-05, 2.280500000000074e-05, 2.3250000000002435e-05, 2.304100000000142e-05, 2.341700000000127e-05, 2.2514000000001255e-05, 2.341700000000127e-05]</msg>
<status status="PASS" starttime="20201115 22:59:47.530" endtime="20201115 22:59:47.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.525" endtime="20201115 22:59:47.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.534" endtime="20201115 22:59:47.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.537" endtime="20201115 22:59:47.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.536" endtime="20201115 22:59:47.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.532" endtime="20201115 22:59:47.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.168" endtime="20201115 22:59:47.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.167" endtime="20201115 22:59:47.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.166" endtime="20201115 22:59:47.559"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.561" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.569" endtime="20201115 22:59:47.586"></status>
</kw>
<msg timestamp="20201115 22:59:47.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.567" endtime="20201115 22:59:47.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.587" endtime="20201115 22:59:47.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.590" endtime="20201115 22:59:47.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.565" endtime="20201115 22:59:47.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.563" endtime="20201115 22:59:47.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.599" endtime="20201115 22:59:47.884"></status>
</kw>
<msg timestamp="20201115 22:59:47.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024428528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024451042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.597" endtime="20201115 22:59:47.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024428528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024451042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.888" endtime="20201115 22:59:47.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.897" endtime="20201115 22:59:47.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.595" endtime="20201115 22:59:47.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.593" endtime="20201115 22:59:47.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:47.904" level="INFO">${RESULT} = [{'time': 0.024451042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2513999999997786e-05, 'source_diff': 2.2513999999997786e-05}, {'time': 0.024488, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:59:47.900" endtime="20201115 22:59:47.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:47.917" level="INFO">${ACCURACY} = {'diff': [2.2513999999997786e-05, 2.3277999999998106e-05, 2.2764000000001505e-05, 2.25830000000031e-05, 2.2555999999999965e-05, 2.34169999999978e-05, 2.270899999999923e-05, 2.318100000000059e-05, 2.33...</msg>
<status status="PASS" starttime="20201115 22:59:47.905" endtime="20201115 22:59:47.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.921" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 22:59:47.920" endtime="20201115 22:59:47.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.924" level="INFO">VALUE: [2.2513999999997786e-05, 2.3277999999998106e-05, 2.2764000000001505e-05, 2.25830000000031e-05, 2.2555999999999965e-05, 2.34169999999978e-05, 2.270899999999923e-05, 2.318100000000059e-05, 2.3347999999999425e-05, 2.3264000000002005e-05, 2.288900000000163e-05, 2.3180000000001116e-05, 2.2820000000003254e-05, 2.2584000000002574e-05, 2.341700000000127e-05, 2.3012999999998812e-05, 2.3249999999998966e-05, 2.3249999999998966e-05, 2.311099999999927e-05, 2.3430000000001366e-05, 2.2790999999997702e-05, 2.2778000000001075e-05, 2.2930000000000866e-05, 2.2666000000001046e-05, 2.336099999999952e-05, 2.306900000000056e-05, 2.262499999999834e-05, 2.3277999999998106e-05, 2.2763999999998036e-05, 2.3221999999999826e-05, 2.2555999999999965e-05, 2.2597999999998675e-05, 2.2764000000001505e-05, 2.34030000000017e-05, 2.316700000000102e-05, 2.2819999999999785e-05, 2.3249999999998966e-05, 2.3083999999999605e-05, 2.3263999999998536e-05, 2.3430000000001366e-05, 2.301300000000228e-05, 2.3070000000000035e-05, 2.3012999999998812e-05, 2.3264000000002005e-05, 2.2902000000001727e-05, 2.3166000000001546e-05, 2.2999999999998716e-05, 2.3332999999996912e-05, 2.265300000000095e-05, 2.2944000000000436e-05]</msg>
<status status="PASS" starttime="20201115 22:59:47.923" endtime="20201115 22:59:47.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.918" endtime="20201115 22:59:47.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.927" endtime="20201115 22:59:47.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.931" endtime="20201115 22:59:47.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.929" endtime="20201115 22:59:47.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.925" endtime="20201115 22:59:47.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.562" endtime="20201115 22:59:47.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.560" endtime="20201115 22:59:47.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.559" endtime="20201115 22:59:47.952"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.954" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.962" endtime="20201115 22:59:47.979"></status>
</kw>
<msg timestamp="20201115 22:59:47.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.961" endtime="20201115 22:59:47.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.980" endtime="20201115 22:59:47.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.983" endtime="20201115 22:59:47.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.958" endtime="20201115 22:59:47.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.956" endtime="20201115 22:59:47.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.992" endtime="20201115 22:59:48.277"></status>
</kw>
<msg timestamp="20201115 22:59:48.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024451097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024474069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.990" endtime="20201115 22:59:48.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024451097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024474069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.282" endtime="20201115 22:59:48.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.290" endtime="20201115 22:59:48.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.988" endtime="20201115 22:59:48.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.986" endtime="20201115 22:59:48.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:48.297" level="INFO">${RESULT} = [{'time': 0.024474069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2971999999999576e-05, 'source_diff': 2.2971999999999576e-05}, {'time': 0.024512056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:48.293" endtime="20201115 22:59:48.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:48.310" level="INFO">${ACCURACY} = {'diff': [2.2971999999999576e-05, 2.2750000000001935e-05, 2.2916000000001296e-05, 2.2485999999998646e-05, 2.256900000000006e-05, 2.313899999999841e-05, 2.2972000000003046e-05, 2.3083999999999605e-05, ...</msg>
<status status="PASS" starttime="20201115 22:59:48.297" endtime="20201115 22:59:48.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.314" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 22:59:48.313" endtime="20201115 22:59:48.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.317" level="INFO">VALUE: [2.2971999999999576e-05, 2.2750000000001935e-05, 2.2916000000001296e-05, 2.2485999999998646e-05, 2.256900000000006e-05, 2.313899999999841e-05, 2.2972000000003046e-05, 2.3083999999999605e-05, 2.2736000000002365e-05, 2.340299999999823e-05, 2.2735999999998896e-05, 2.315300000000145e-05, 2.312499999999884e-05, 2.2999999999998716e-05, 2.2778000000001075e-05, 2.3264000000002005e-05, 2.308300000000013e-05, 2.291700000000077e-05, 2.2985999999999146e-05, 2.30969999999997e-05, 2.3444000000000936e-05, 2.2833999999999355e-05, 2.2583999999999105e-05, 2.2570000000003004e-05, 2.2749999999998466e-05, 2.2958000000000006e-05, 2.266699999999705e-05, 2.2583999999999105e-05, 2.3194000000000686e-05, 2.2721999999999326e-05, 2.283299999999988e-05, 2.3443999999997467e-05, 2.334699999999995e-05, 2.306900000000056e-05, 2.2944000000000436e-05, 2.3014000000001755e-05, 2.3263999999998536e-05, 2.258299999999963e-05, 2.311100000000274e-05, 2.306900000000056e-05, 2.2597999999998675e-05, 2.3194000000000686e-05, 2.3263999999998536e-05, 2.3264000000002005e-05, 2.30969999999997e-05, 2.3070000000000035e-05, 2.344500000000041e-05, 2.2485999999998646e-05, 2.3097999999999175e-05, 2.341700000000127e-05]</msg>
<status status="PASS" starttime="20201115 22:59:48.315" endtime="20201115 22:59:48.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.311" endtime="20201115 22:59:48.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.320" endtime="20201115 22:59:48.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:48.323" endtime="20201115 22:59:48.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.322" endtime="20201115 22:59:48.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.318" endtime="20201115 22:59:48.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.955" endtime="20201115 22:59:48.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.953" endtime="20201115 22:59:48.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.952" endtime="20201115 22:59:48.345"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.347" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.355" endtime="20201115 22:59:48.372"></status>
</kw>
<msg timestamp="20201115 22:59:48.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.353" endtime="20201115 22:59:48.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.374" endtime="20201115 22:59:48.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.377" endtime="20201115 22:59:48.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.351" endtime="20201115 22:59:48.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.349" endtime="20201115 22:59:48.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.386" endtime="20201115 22:59:48.672"></status>
</kw>
<msg timestamp="20201115 22:59:48.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024907653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024931431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.384" endtime="20201115 22:59:48.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024907653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024931431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.676" endtime="20201115 22:59:48.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.684" endtime="20201115 22:59:48.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.382" endtime="20201115 22:59:48.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.380" endtime="20201115 22:59:48.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:48.691" level="INFO">${RESULT} = [{'time': 0.024931431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3778000000002075e-05, 'source_diff': 2.3778000000002075e-05}, {'time': 0.024978431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:48.688" endtime="20201115 22:59:48.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:48.706" level="INFO">${ACCURACY} = {'diff': [2.3778000000002075e-05, 2.416699999999855e-05, 2.3499999999999216e-05, 2.4249999999999966e-05, 2.358300000000063e-05, 2.3415999999998327e-05, 2.3665999999998577e-05, 2.3999999999999716e-05, ...</msg>
<status status="PASS" starttime="20201115 22:59:48.692" endtime="20201115 22:59:48.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.710" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 22:59:48.709" endtime="20201115 22:59:48.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.713" level="INFO">VALUE: [2.3778000000002075e-05, 2.416699999999855e-05, 2.3499999999999216e-05, 2.4249999999999966e-05, 2.358300000000063e-05, 2.3415999999998327e-05, 2.3665999999998577e-05, 2.3999999999999716e-05, 2.390299999999873e-05, 2.384700000000045e-05, 2.3944000000001436e-05, 2.433300000000138e-05, 2.35970000000002e-05, 2.393100000000134e-05, 2.368100000000109e-05, 2.383300000000088e-05, 2.408300000000113e-05, 2.340299999999823e-05, 2.368100000000109e-05, 2.368100000000109e-05, 2.413899999999941e-05, 2.394499999999744e-05, 2.34169999999978e-05, 2.3834000000000355e-05, 2.3749999999999466e-05, 2.4263000000000062e-05, 2.4070000000001035e-05, 2.4084000000000605e-05, 2.3763999999999036e-05, 2.413899999999941e-05, 2.3430000000001366e-05, 2.4166000000002547e-05, 2.3832999999997412e-05, 2.408300000000113e-05, 2.391700000000177e-05, 2.4180000000002116e-05, 2.4194000000001686e-05, 2.391700000000177e-05, 2.383300000000088e-05, 2.388899999999916e-05, 2.40970000000007e-05, 2.3499999999999216e-05, 2.3584000000000105e-05, 2.3736000000003366e-05, 2.3570000000000535e-05, 2.4236000000000396e-05, 2.4249999999999966e-05, 2.3597999999999675e-05, 2.34169999999978e-05, 2.4334000000000855e-05]</msg>
<status status="PASS" starttime="20201115 22:59:48.711" endtime="20201115 22:59:48.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.707" endtime="20201115 22:59:48.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.716" endtime="20201115 22:59:48.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:48.719" endtime="20201115 22:59:48.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.718" endtime="20201115 22:59:48.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.714" endtime="20201115 22:59:48.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.347" endtime="20201115 22:59:48.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.346" endtime="20201115 22:59:48.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.345" endtime="20201115 22:59:48.740"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.743" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.751" endtime="20201115 22:59:48.768"></status>
</kw>
<msg timestamp="20201115 22:59:48.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.750" endtime="20201115 22:59:48.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.769" endtime="20201115 22:59:48.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.772" endtime="20201115 22:59:48.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.747" endtime="20201115 22:59:48.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.745" endtime="20201115 22:59:48.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.781" endtime="20201115 22:59:49.066"></status>
</kw>
<msg timestamp="20201115 22:59:49.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024869306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024894069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.780" endtime="20201115 22:59:49.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024869306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024894069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.070" endtime="20201115 22:59:49.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.079" endtime="20201115 22:59:49.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.777" endtime="20201115 22:59:49.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.775" endtime="20201115 22:59:49.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:49.085" level="INFO">${RESULT} = [{'time': 0.024894069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4763000000000562e-05, 'source_diff': 2.4763000000000562e-05}, {'time': 0.024940083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:49.082" endtime="20201115 22:59:49.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:49.099" level="INFO">${ACCURACY} = {'diff': [2.4763000000000562e-05, 2.513899999999694e-05, 2.5000000000000716e-05, 2.4429999999998897e-05, 2.4665999999999577e-05, 2.5027999999999856e-05, 2.4805999999998746e-05, 2.5264000000000536e-05,...</msg>
<status status="PASS" starttime="20201115 22:59:49.086" endtime="20201115 22:59:49.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.103" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 22:59:49.102" endtime="20201115 22:59:49.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.106" level="INFO">VALUE: [2.4763000000000562e-05, 2.513899999999694e-05, 2.5000000000000716e-05, 2.4429999999998897e-05, 2.4665999999999577e-05, 2.5027999999999856e-05, 2.4805999999998746e-05, 2.5264000000000536e-05, 2.5250000000000966e-05, 2.5236000000001396e-05, 2.5068999999999092e-05, 2.44169999999988e-05, 2.5332999999998912e-05, 2.5083999999998136e-05, 2.436100000000052e-05, 2.4500000000000216e-05, 2.5027999999999856e-05, 2.4597999999997205e-05, 2.5236000000001396e-05, 2.5097999999997705e-05, 2.5069999999998566e-05, 2.44169999999988e-05, 2.448700000000012e-05, 2.4415999999999327e-05, 2.5000000000000716e-05, 2.4471999999997607e-05, 2.4986000000001146e-05, 2.4415999999999327e-05, 2.4832999999998412e-05, 2.4415999999999327e-05, 2.515299999999998e-05, 2.520899999999826e-05, 2.533300000000238e-05, 2.494500000000191e-05, 2.512499999999737e-05, 2.4832999999998412e-05, 2.5068999999999092e-05, 2.4596999999997732e-05, 2.4569999999998066e-05, 2.4749999999996997e-05, 2.5236000000001396e-05, 2.5249999999997497e-05, 2.5084000000001605e-05, 2.44169999999988e-05, 2.4848000000000925e-05, 2.5084000000001605e-05, 2.4750000000000466e-05, 2.5096999999998232e-05, 2.5082999999998662e-05, 2.4764000000000036e-05]</msg>
<status status="PASS" starttime="20201115 22:59:49.104" endtime="20201115 22:59:49.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.100" endtime="20201115 22:59:49.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.109" endtime="20201115 22:59:49.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.113" endtime="20201115 22:59:49.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.111" endtime="20201115 22:59:49.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.107" endtime="20201115 22:59:49.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.743" endtime="20201115 22:59:49.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.741" endtime="20201115 22:59:49.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.741" endtime="20201115 22:59:49.134"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.136" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.144" endtime="20201115 22:59:49.160"></status>
</kw>
<msg timestamp="20201115 22:59:49.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.143" endtime="20201115 22:59:49.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.162" endtime="20201115 22:59:49.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.164" endtime="20201115 22:59:49.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.140" endtime="20201115 22:59:49.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.138" endtime="20201115 22:59:49.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.173" endtime="20201115 22:59:49.459"></status>
</kw>
<msg timestamp="20201115 22:59:49.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024107194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024132833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.172" endtime="20201115 22:59:49.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024107194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024132833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.463" endtime="20201115 22:59:49.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.472" endtime="20201115 22:59:49.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.169" endtime="20201115 22:59:49.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.167" endtime="20201115 22:59:49.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:49.478" level="INFO">${RESULT} = [{'time': 0.024132833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.563900000000091e-05, 'source_diff': 2.563900000000091e-05}, {'time': 0.024173861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:49.475" endtime="20201115 22:59:49.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:49.492" level="INFO">${ACCURACY} = {'diff': [2.563900000000091e-05, 2.612500000000184e-05, 2.5764000000001036e-05, 2.5736000000001896e-05, 2.5750000000001466e-05, 2.5429999999999897e-05, 2.5485999999998177e-05, 2.6278000000001106e-05, ...</msg>
<status status="PASS" starttime="20201115 22:59:49.479" endtime="20201115 22:59:49.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.496" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 22:59:49.495" endtime="20201115 22:59:49.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.499" level="INFO">VALUE: [2.563900000000091e-05, 2.612500000000184e-05, 2.5764000000001036e-05, 2.5736000000001896e-05, 2.5750000000001466e-05, 2.5429999999999897e-05, 2.5485999999998177e-05, 2.6278000000001106e-05, 2.5750000000001466e-05, 2.6110999999998802e-05, 2.6250000000001966e-05, 2.5846999999998982e-05, 2.5514000000000786e-05, 2.6250000000001966e-05, 2.6263999999998067e-05, 2.6236000000002396e-05, 2.6278000000001106e-05, 2.5598000000001675e-05, 2.59170000000003e-05, 2.5819999999999316e-05, 2.6262999999998593e-05, 2.6084000000002605e-05, 2.5749999999997997e-05, 2.6250000000001966e-05, 2.5402000000000757e-05, 2.584700000000245e-05, 2.6221999999999357e-05, 2.5568999999999592e-05, 2.5429999999999897e-05, 2.5485999999998177e-05, 2.543099999999937e-05, 2.5513999999997317e-05, 2.5568999999999592e-05, 2.558300000000263e-05, 2.541700000000327e-05, 2.5832999999999412e-05, 2.54169999999998e-05, 2.568099999999962e-05, 2.6319999999999816e-05, 2.543099999999937e-05, 2.5471999999998607e-05, 2.543099999999937e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.588900000000116e-05, 2.6069999999999566e-05, 2.59170000000003e-05, 2.5651999999997538e-05, 2.5666000000000577e-05, 2.6166000000001077e-05]</msg>
<status status="PASS" starttime="20201115 22:59:49.497" endtime="20201115 22:59:49.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.493" endtime="20201115 22:59:49.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.502" endtime="20201115 22:59:49.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.506" endtime="20201115 22:59:49.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.504" endtime="20201115 22:59:49.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.501" endtime="20201115 22:59:49.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.137" endtime="20201115 22:59:49.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.135" endtime="20201115 22:59:49.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.134" endtime="20201115 22:59:49.527"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.529" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.537" endtime="20201115 22:59:49.553"></status>
</kw>
<msg timestamp="20201115 22:59:49.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.536" endtime="20201115 22:59:49.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.555" endtime="20201115 22:59:49.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.557" endtime="20201115 22:59:49.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.533" endtime="20201115 22:59:49.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.531" endtime="20201115 22:59:49.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.566" endtime="20201115 22:59:49.852"></status>
</kw>
<msg timestamp="20201115 22:59:49.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024182236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024209153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.565" endtime="20201115 22:59:49.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024182236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024209153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.856" endtime="20201115 22:59:49.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.864" endtime="20201115 22:59:49.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.562" endtime="20201115 22:59:49.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.560" endtime="20201115 22:59:49.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:49.872" level="INFO">${RESULT} = [{'time': 0.024209153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.69170000000013e-05, 'source_diff': 2.69170000000013e-05}, {'time': 0.024258167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:59:49.868" endtime="20201115 22:59:49.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:49.886" level="INFO">${ACCURACY} = {'diff': [2.69170000000013e-05, 2.7249999999999497e-05, 2.7084000000000136e-05, 2.7097999999999706e-05, 2.6583999999999636e-05, 2.7084000000000136e-05, 2.7249999999999497e-05, 2.6596999999999732e-05, ...</msg>
<status status="PASS" starttime="20201115 22:59:49.873" endtime="20201115 22:59:49.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.890" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 22:59:49.889" endtime="20201115 22:59:49.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.893" level="INFO">VALUE: [2.69170000000013e-05, 2.7249999999999497e-05, 2.7084000000000136e-05, 2.7097999999999706e-05, 2.6583999999999636e-05, 2.7084000000000136e-05, 2.7249999999999497e-05, 2.6596999999999732e-05, 2.661100000000277e-05, 2.6415999999997858e-05, 2.7013999999998817e-05, 2.6430000000000897e-05, 2.6763999999998567e-05, 2.6402000000001757e-05, 2.6833000000000412e-05, 2.6750000000002466e-05, 2.6708000000000287e-05, 2.693100000000087e-05, 2.6513999999998317e-05, 2.69170000000013e-05, 2.6999999999999247e-05, 2.645899999999951e-05, 2.6514000000001786e-05, 2.643100000000037e-05, 2.719499999999722e-05, 2.7264000000002536e-05, 2.7111999999999276e-05, 2.6583999999999636e-05, 2.7084000000000136e-05, 2.7249999999999497e-05, 2.6750000000002466e-05, 2.6929999999997928e-05, 2.7013000000002813e-05, 2.6915999999998358e-05, 2.6819000000000842e-05, 2.6596999999999732e-05, 2.6583000000000162e-05, 2.6944000000000967e-05, 2.6819000000000842e-05, 2.690300000000173e-05, 2.6485999999999177e-05, 2.6569000000000592e-05, 2.694500000000044e-05, 2.6944000000000967e-05, 2.7292000000001676e-05, 2.690299999999826e-05, 2.668100000000062e-05, 2.6555000000001022e-05, 2.64170000000008e-05, 2.6999999999999247e-05]</msg>
<status status="PASS" starttime="20201115 22:59:49.891" endtime="20201115 22:59:49.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.886" endtime="20201115 22:59:49.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.896" endtime="20201115 22:59:49.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.900" endtime="20201115 22:59:49.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.898" endtime="20201115 22:59:49.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.895" endtime="20201115 22:59:49.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.530" endtime="20201115 22:59:49.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.528" endtime="20201115 22:59:49.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.527" endtime="20201115 22:59:49.921"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.923" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.931" endtime="20201115 22:59:49.949"></status>
</kw>
<msg timestamp="20201115 22:59:49.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.930" endtime="20201115 22:59:49.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.950" endtime="20201115 22:59:49.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.953" endtime="20201115 22:59:49.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.927" endtime="20201115 22:59:49.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.925" endtime="20201115 22:59:49.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.962" endtime="20201115 22:59:50.249"></status>
</kw>
<msg timestamp="20201115 22:59:50.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025006375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025034514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.960" endtime="20201115 22:59:50.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025006375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025034514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.253" endtime="20201115 22:59:50.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.261" endtime="20201115 22:59:50.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.958" endtime="20201115 22:59:50.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.956" endtime="20201115 22:59:50.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:50.268" level="INFO">${RESULT} = [{'time': 0.025034514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8138999999999942e-05, 'source_diff': 2.8138999999999942e-05}, {'time': 0.025078514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:50.264" endtime="20201115 22:59:50.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:50.283" level="INFO">${ACCURACY} = {'diff': [2.8138999999999942e-05, 2.743100000000137e-05, 2.766699999999858e-05, 2.8000000000000247e-05, 2.8042000000002426e-05, 2.7598000000000206e-05, 2.7583999999997166e-05, 2.7790999999999233e-05, ...</msg>
<status status="PASS" starttime="20201115 22:59:50.269" endtime="20201115 22:59:50.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.287" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 22:59:50.286" endtime="20201115 22:59:50.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.290" level="INFO">VALUE: [2.8138999999999942e-05, 2.743100000000137e-05, 2.766699999999858e-05, 2.8000000000000247e-05, 2.8042000000002426e-05, 2.7598000000000206e-05, 2.7583999999997166e-05, 2.7790999999999233e-05, 2.7861000000000552e-05, 2.8138999999999942e-05, 2.794499999999797e-05, 2.7930000000002397e-05, 2.7944000000001967e-05, 2.7596999999997263e-05, 2.7901999999999788e-05, 2.7651999999999538e-05, 2.7666000000002577e-05, 2.8000000000000247e-05, 2.7763999999999567e-05, 2.7902999999999262e-05, 2.7500000000003216e-05, 2.791699999999883e-05, 2.818099999999865e-05, 2.766699999999858e-05, 2.822300000000083e-05, 2.7972000000001107e-05, 2.8013999999999817e-05, 2.8250000000000497e-05, 2.8084000000001136e-05, 2.7611999999999776e-05, 2.768100000000162e-05, 2.8069999999998096e-05, 2.793100000000187e-05, 2.816699999999908e-05, 2.7819999999997846e-05, 2.8068999999998623e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.7415999999998858e-05, 2.8180000000002647e-05, 2.7665999999999108e-05, 2.765300000000248e-05, 2.816700000000255e-05, 2.766699999999858e-05, 2.7832999999997943e-05, 2.7986000000000677e-05, 2.7499999999999747e-05, 2.793100000000187e-05, 2.7819999999997846e-05, 2.8250000000000497e-05]</msg>
<status status="PASS" starttime="20201115 22:59:50.288" endtime="20201115 22:59:50.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.284" endtime="20201115 22:59:50.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.293" endtime="20201115 22:59:50.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.296" endtime="20201115 22:59:50.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.295" endtime="20201115 22:59:50.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.291" endtime="20201115 22:59:50.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.924" endtime="20201115 22:59:50.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.922" endtime="20201115 22:59:50.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.921" endtime="20201115 22:59:50.317"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.320" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.328" endtime="20201115 22:59:50.344"></status>
</kw>
<msg timestamp="20201115 22:59:50.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.326" endtime="20201115 22:59:50.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.345" endtime="20201115 22:59:50.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.348" endtime="20201115 22:59:50.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.324" endtime="20201115 22:59:50.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.322" endtime="20201115 22:59:50.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.357" endtime="20201115 22:59:50.643"></status>
</kw>
<msg timestamp="20201115 22:59:50.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024139306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.355" endtime="20201115 22:59:50.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024139306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.647" endtime="20201115 22:59:50.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.656" endtime="20201115 22:59:50.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.353" endtime="20201115 22:59:50.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.351" endtime="20201115 22:59:50.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:50.662" level="INFO">${RESULT} = [{'time': 0.024168611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9305000000000303e-05, 'source_diff': 2.9305000000000303e-05}, {'time': 0.024211611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:50.659" endtime="20201115 22:59:50.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:50.676" level="INFO">${ACCURACY} = {'diff': [2.9305000000000303e-05, 2.8500000000000747e-05, 2.8764000000000567e-05, 2.8596999999998263e-05, 2.9041999999999957e-05, 2.8764000000000567e-05, 2.9250000000001497e-05, 2.8750000000000997e-05...</msg>
<status status="PASS" starttime="20201115 22:59:50.663" endtime="20201115 22:59:50.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.680" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 22:59:50.679" endtime="20201115 22:59:50.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.683" level="INFO">VALUE: [2.9305000000000303e-05, 2.8500000000000747e-05, 2.8764000000000567e-05, 2.8596999999998263e-05, 2.9041999999999957e-05, 2.8764000000000567e-05, 2.9250000000001497e-05, 2.8750000000000997e-05, 2.8527999999999887e-05, 2.9250000000001497e-05, 2.8527999999999887e-05, 2.8584000000001636e-05, 2.8916999999999832e-05, 2.8527000000000413e-05, 2.9249999999998028e-05, 2.8763000000001093e-05, 2.9097000000002232e-05, 2.8554999999999553e-05, 2.8929999999999928e-05, 2.8443999999998998e-05, 2.9235999999998458e-05, 2.8582999999998693e-05, 2.8415999999999858e-05, 2.8832999999998943e-05, 2.9250000000001497e-05, 2.9332999999999443e-05, 2.8569000000002592e-05, 2.8597000000001732e-05, 2.9097000000002232e-05, 2.8763999999997097e-05, 2.9055999999999527e-05, 2.9235999999998458e-05, 2.8598000000001206e-05, 2.9277999999997167e-05, 2.8569999999998597e-05, 2.8444000000002467e-05, 2.9000000000001247e-05, 2.8916999999999832e-05, 2.8666999999999582e-05, 2.898699999999768e-05, 2.8486000000001177e-05, 2.8486000000001177e-05, 2.8778000000000137e-05, 2.9249999999998028e-05, 2.8444000000002467e-05, 2.9166000000000608e-05, 2.8999999999997778e-05, 2.8916000000000358e-05, 2.8680000000003147e-05, 2.8875000000001122e-05]</msg>
<status status="PASS" starttime="20201115 22:59:50.681" endtime="20201115 22:59:50.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.677" endtime="20201115 22:59:50.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.686" endtime="20201115 22:59:50.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.689" endtime="20201115 22:59:50.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.688" endtime="20201115 22:59:50.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.684" endtime="20201115 22:59:50.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.320" endtime="20201115 22:59:50.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.318" endtime="20201115 22:59:50.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.318" endtime="20201115 22:59:50.710"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.713" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.721" endtime="20201115 22:59:50.736"></status>
</kw>
<msg timestamp="20201115 22:59:50.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.719" endtime="20201115 22:59:50.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.738" endtime="20201115 22:59:50.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.741" endtime="20201115 22:59:50.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.717" endtime="20201115 22:59:50.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.715" endtime="20201115 22:59:50.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.750" endtime="20201115 22:59:51.036"></status>
</kw>
<msg timestamp="20201115 22:59:51.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024148306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024177778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.748" endtime="20201115 22:59:51.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024148306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024177778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.040" endtime="20201115 22:59:51.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.049" endtime="20201115 22:59:51.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.745" endtime="20201115 22:59:51.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.744" endtime="20201115 22:59:51.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.055" level="INFO">${RESULT} = [{'time': 0.024177778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9471999999999138e-05, 'source_diff': 2.9471999999999138e-05}, {'time': 0.024225764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:51.052" endtime="20201115 22:59:51.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.069" level="INFO">${ACCURACY} = {'diff': [2.9471999999999138e-05, 2.9569999999999597e-05, 3.0083999999999667e-05, 3.0097999999999236e-05, 2.9471999999999138e-05, 3.0167000000001082e-05, 3.0320000000000347e-05, 3.0096999999999763e-05...</msg>
<status status="PASS" starttime="20201115 22:59:51.056" endtime="20201115 22:59:51.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.073" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.072" endtime="20201115 22:59:51.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.076" level="INFO">VALUE: [2.9471999999999138e-05, 2.9569999999999597e-05, 3.0083999999999667e-05, 3.0097999999999236e-05, 2.9471999999999138e-05, 3.0167000000001082e-05, 3.0320000000000347e-05, 3.0096999999999763e-05, 2.9583999999999167e-05, 3.0262999999999124e-05, 2.9958000000000068e-05, 3.0347000000000013e-05, 2.9582999999999693e-05, 2.9944000000000498e-05, 3.0152999999998042e-05, 2.9971999999999638e-05, 2.9582999999999693e-05, 2.9582999999999693e-05, 3.0096999999999763e-05, 2.94309999999999e-05, 3.0166999999997612e-05, 3.0013999999998348e-05, 2.9791000000001233e-05, 2.9750000000001997e-05, 2.9736000000002427e-05, 2.9374999999998153e-05, 2.9819999999999847e-05, 2.9403000000000762e-05, 3.0374999999999153e-05, 3.0083000000000193e-05, 2.9917000000000832e-05, 2.9875000000002122e-05, 2.9582999999999693e-05, 3.0096999999999763e-05, 2.9750000000001997e-05, 3.0249999999999028e-05, 2.9596999999999263e-05, 3.0292000000001207e-05, 3.0235999999999458e-05, 3.0083000000000193e-05, 2.9417000000000332e-05, 2.969499999999972e-05, 3.0041999999997487e-05, 3.0083000000000193e-05, 2.9582999999999693e-05, 2.9917000000000832e-05, 2.9653000000001012e-05, 3.0167000000001082e-05, 2.9667000000000582e-05, 2.9499999999998278e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.074" endtime="20201115 22:59:51.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.070" endtime="20201115 22:59:51.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.079" endtime="20201115 22:59:51.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.082" endtime="20201115 22:59:51.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.081" endtime="20201115 22:59:51.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.077" endtime="20201115 22:59:51.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.713" endtime="20201115 22:59:51.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.712" endtime="20201115 22:59:51.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.711" endtime="20201115 22:59:51.103"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.106" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.114" endtime="20201115 22:59:51.131"></status>
</kw>
<msg timestamp="20201115 22:59:51.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.113" endtime="20201115 22:59:51.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.132" endtime="20201115 22:59:51.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.135" endtime="20201115 22:59:51.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.110" endtime="20201115 22:59:51.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.108" endtime="20201115 22:59:51.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.144" endtime="20201115 22:59:51.430"></status>
</kw>
<msg timestamp="20201115 22:59:51.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024234375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024264861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.143" endtime="20201115 22:59:51.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024234375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024264861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.434" endtime="20201115 22:59:51.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.442" endtime="20201115 22:59:51.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.140" endtime="20201115 22:59:51.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.138" endtime="20201115 22:59:51.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.449" level="INFO">${RESULT} = [{'time': 0.024264861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0485999999999708e-05, 'source_diff': 3.0485999999999708e-05}, {'time': 0.024312861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:51.446" endtime="20201115 22:59:51.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.462" level="INFO">${ACCURACY} = {'diff': [3.0485999999999708e-05, 3.0417000000001332e-05, 3.0513999999998848e-05, 3.044500000000047e-05, 3.0499999999999278e-05, 3.061099999999983e-05, 3.108300000000119e-05, 3.091699999999836e-05, 3....</msg>
<status status="PASS" starttime="20201115 22:59:51.450" endtime="20201115 22:59:51.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.467" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.466" endtime="20201115 22:59:51.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.469" level="INFO">VALUE: [3.0485999999999708e-05, 3.0417000000001332e-05, 3.0513999999998848e-05, 3.044500000000047e-05, 3.0499999999999278e-05, 3.061099999999983e-05, 3.108300000000119e-05, 3.091699999999836e-05, 3.133300000000144e-05, 3.06249999999994e-05, 3.061099999999983e-05, 3.091700000000183e-05, 3.099999999999978e-05, 3.073599999999996e-05, 3.077700000000266e-05, 3.086100000000008e-05, 3.052799999999842e-05, 3.12639999999996e-05, 3.058300000000069e-05, 3.108300000000119e-05, 3.092999999999846e-05, 3.104199999999849e-05, 3.125000000000003e-05, 3.125000000000003e-05, 3.0568999999997654e-05, 3.052800000000189e-05, 3.091699999999836e-05, 3.068099999999768e-05, 3.116699999999861e-05, 3.133300000000144e-05, 3.111100000000033e-05, 3.061099999999983e-05, 3.094500000000097e-05, 3.0499999999999278e-05, 3.0584000000000167e-05, 3.108400000000067e-05, 3.074999999999953e-05, 3.095800000000107e-05, 3.06379999999995e-05, 3.052700000000241e-05, 3.074999999999953e-05, 3.1318999999998404e-05, 3.0832999999997474e-05, 3.074999999999953e-05, 3.040199999999882e-05, 3.099999999999978e-05, 3.074999999999953e-05, 3.061099999999983e-05, 3.074999999999953e-05, 3.108300000000119e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.468" endtime="20201115 22:59:51.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.463" endtime="20201115 22:59:51.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.472" endtime="20201115 22:59:51.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.476" endtime="20201115 22:59:51.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.474" endtime="20201115 22:59:51.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.471" endtime="20201115 22:59:51.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.106" endtime="20201115 22:59:51.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.105" endtime="20201115 22:59:51.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.104" endtime="20201115 22:59:51.497"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.499" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.508" endtime="20201115 22:59:51.525"></status>
</kw>
<msg timestamp="20201115 22:59:51.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.506" endtime="20201115 22:59:51.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.527" endtime="20201115 22:59:51.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.530" endtime="20201115 22:59:51.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.504" endtime="20201115 22:59:51.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.501" endtime="20201115 22:59:51.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.539" endtime="20201115 22:59:51.825"></status>
</kw>
<msg timestamp="20201115 22:59:51.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025492292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025524375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.537" endtime="20201115 22:59:51.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025492292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025524375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.829" endtime="20201115 22:59:51.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.837" endtime="20201115 22:59:51.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.534" endtime="20201115 22:59:51.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.533" endtime="20201115 22:59:51.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.844" level="INFO">${RESULT} = [{'time': 0.025524375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2082999999998724e-05, 'source_diff': 3.2082999999998724e-05}, {'time': 0.025580375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:51.841" endtime="20201115 22:59:51.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.859" level="INFO">${ACCURACY} = {'diff': [3.2082999999998724e-05, 3.2082999999998724e-05, 3.188900000000022e-05, 3.168099999999868e-05, 3.141699999999886e-05, 3.227800000000017e-05, 3.191700000000283e-05, 3.229199999999974e-05, 3.16...</msg>
<status status="PASS" starttime="20201115 22:59:51.845" endtime="20201115 22:59:51.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.863" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.862" endtime="20201115 22:59:51.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.866" level="INFO">VALUE: [3.2082999999998724e-05, 3.2082999999998724e-05, 3.188900000000022e-05, 3.168099999999868e-05, 3.141699999999886e-05, 3.227800000000017e-05, 3.191700000000283e-05, 3.229199999999974e-05, 3.169500000000172e-05, 3.191700000000283e-05, 3.216699999999961e-05, 3.1846999999998044e-05, 3.140299999999929e-05, 3.234700000000201e-05, 3.159700000000126e-05, 3.22640000000006e-05, 3.141600000000286e-05, 3.204200000000296e-05, 3.19440000000025e-05, 3.1832999999998474e-05, 3.17640000000001e-05, 3.191699999999936e-05, 3.150000000000028e-05, 3.16250000000004e-05, 3.159700000000126e-05, 3.22640000000006e-05, 3.208300000000219e-05, 3.193099999999893e-05, 3.225000000000103e-05, 3.166699999999911e-05, 3.150000000000028e-05, 3.211100000000133e-05, 3.2096999999998294e-05, 3.209700000000176e-05, 3.175000000000053e-05, 3.2263000000001124e-05, 3.184700000000151e-05, 3.1582999999998224e-05, 3.141599999999939e-05, 3.151399999999985e-05, 3.1596999999997794e-05, 3.209700000000176e-05, 3.22640000000006e-05, 3.22640000000006e-05, 3.2082999999998724e-05, 3.22640000000006e-05, 3.166699999999911e-05, 3.2332999999998974e-05, 3.211100000000133e-05, 3.225000000000103e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.864" endtime="20201115 22:59:51.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.860" endtime="20201115 22:59:51.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.869" endtime="20201115 22:59:51.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.872" endtime="20201115 22:59:51.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.871" endtime="20201115 22:59:51.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.867" endtime="20201115 22:59:51.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.500" endtime="20201115 22:59:51.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.498" endtime="20201115 22:59:51.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.497" endtime="20201115 22:59:51.897"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.900" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.909" endtime="20201115 22:59:51.926"></status>
</kw>
<msg timestamp="20201115 22:59:51.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.907" endtime="20201115 22:59:51.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.927" endtime="20201115 22:59:51.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.930" endtime="20201115 22:59:51.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.904" endtime="20201115 22:59:51.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.902" endtime="20201115 22:59:51.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.939" endtime="20201115 22:59:52.225"></status>
</kw>
<msg timestamp="20201115 22:59:52.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025685056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025717694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.937" endtime="20201115 22:59:52.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025685056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025717694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.229" endtime="20201115 22:59:52.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.237" endtime="20201115 22:59:52.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.935" endtime="20201115 22:59:52.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.933" endtime="20201115 22:59:52.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.244" level="INFO">${RESULT} = [{'time': 0.025717694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.263799999999803e-05, 'source_diff': 3.263799999999803e-05}, {'time': 0.025770708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:52.241" endtime="20201115 22:59:52.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.257" level="INFO">${ACCURACY} = {'diff': [3.263799999999803e-05, 3.2596999999998794e-05, 3.290200000000132e-05, 3.2818999999999904e-05, 3.3082999999999724e-05, 3.263900000000097e-05, 3.2582999999999224e-05, 3.3082999999999724e-05, 3...</msg>
<status status="PASS" starttime="20201115 22:59:52.245" endtime="20201115 22:59:52.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.262" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.261" endtime="20201115 22:59:52.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.264" level="INFO">VALUE: [3.263799999999803e-05, 3.2596999999998794e-05, 3.290200000000132e-05, 3.2818999999999904e-05, 3.3082999999999724e-05, 3.263900000000097e-05, 3.2582999999999224e-05, 3.3082999999999724e-05, 3.3110999999998864e-05, 3.29449999999995e-05, 3.3319000000000404e-05, 3.2596999999998794e-05, 3.323600000000246e-05, 3.277800000000067e-05, 3.269499999999925e-05, 3.274999999999806e-05, 3.240300000000029e-05, 3.298600000000221e-05, 3.309799999999877e-05, 3.324999999999856e-05, 3.29579999999996e-05, 3.282000000000285e-05, 3.320799999999985e-05, 3.245800000000257e-05, 3.3082999999999724e-05, 3.291600000000089e-05, 3.3332999999999974e-05, 3.2568999999999654e-05, 3.291600000000089e-05, 3.266600000000064e-05, 3.242999999999996e-05, 3.241699999999986e-05, 3.319499999999975e-05, 3.3332999999999974e-05, 3.241699999999986e-05, 3.331999999999988e-05, 3.2582999999999224e-05, 3.254199999999999e-05, 3.29310000000034e-05, 3.268099999999968e-05, 3.331999999999988e-05, 3.25839999999987e-05, 3.241699999999986e-05, 3.265300000000054e-05, 3.2513000000001374e-05, 3.241600000000039e-05, 3.316599999999767e-05, 3.299999999999831e-05, 3.319400000000028e-05, 3.241699999999986e-05]</msg>
<status status="PASS" starttime="20201115 22:59:52.263" endtime="20201115 22:59:52.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.258" endtime="20201115 22:59:52.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.268" endtime="20201115 22:59:52.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.272" endtime="20201115 22:59:52.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.270" endtime="20201115 22:59:52.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.266" endtime="20201115 22:59:52.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.901" endtime="20201115 22:59:52.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.898" endtime="20201115 22:59:52.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.898" endtime="20201115 22:59:52.293"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.295" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.303" endtime="20201115 22:59:52.320"></status>
</kw>
<msg timestamp="20201115 22:59:52.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.302" endtime="20201115 22:59:52.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.321" endtime="20201115 22:59:52.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.324" endtime="20201115 22:59:52.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.299" endtime="20201115 22:59:52.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.297" endtime="20201115 22:59:52.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.333" endtime="20201115 22:59:52.618"></status>
</kw>
<msg timestamp="20201115 22:59:52.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02402125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:52.331" endtime="20201115 22:59:52.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02402125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:52.622" endtime="20201115 22:59:52.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.630" endtime="20201115 22:59:52.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.329" endtime="20201115 22:59:52.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.327" endtime="20201115 22:59:52.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.637" level="INFO">${RESULT} = [{'time': 0.024055208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.39580000000006e-05, 'source_diff': 3.39580000000006e-05}, {'time': 0.024103222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:59:52.634" endtime="20201115 22:59:52.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.650" level="INFO">${ACCURACY} = {'diff': [3.39580000000006e-05, 3.3596999999999794e-05, 3.375000000000253e-05, 3.4097000000000294e-05, 3.388900000000222e-05, 3.349999999999881e-05, 3.3569000000000654e-05, 3.3805000000001334e-05, 3.3...</msg>
<status status="PASS" starttime="20201115 22:59:52.638" endtime="20201115 22:59:52.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.655" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.654" endtime="20201115 22:59:52.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.658" level="INFO">VALUE: [3.39580000000006e-05, 3.3596999999999794e-05, 3.375000000000253e-05, 3.4097000000000294e-05, 3.388900000000222e-05, 3.349999999999881e-05, 3.3569000000000654e-05, 3.3805000000001334e-05, 3.391700000000136e-05, 3.401399999999888e-05, 3.393100000000093e-05, 3.433399999999698e-05, 3.35839999999997e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.4110999999999864e-05, 3.40840000000002e-05, 3.341699999999739e-05, 3.39580000000006e-05, 3.373599999999949e-05, 3.374999999999906e-05, 3.3583000000000224e-05, 3.4083000000000724e-05, 3.373599999999949e-05, 3.4097000000000294e-05, 3.374999999999906e-05, 3.345899999999957e-05, 3.416700000000161e-05, 3.415300000000204e-05, 3.430600000000131e-05, 3.373599999999949e-05, 3.37640000000021e-05, 3.340300000000129e-05, 3.434800000000002e-05, 3.391700000000136e-05, 3.399999999999931e-05, 3.3596999999999794e-05, 3.40840000000002e-05, 3.422200000000042e-05, 3.3554999999997615e-05, 3.383399999999995e-05, 3.372199999999992e-05, 3.375000000000253e-05, 3.3638999999998503e-05, 3.4083000000000724e-05, 3.3445e-05, 3.4319000000001404e-05, 3.340300000000129e-05, 3.365300000000154e-05, 3.401399999999888e-05]</msg>
<status status="PASS" starttime="20201115 22:59:52.656" endtime="20201115 22:59:52.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.651" endtime="20201115 22:59:52.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.661" endtime="20201115 22:59:52.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.664" endtime="20201115 22:59:52.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.663" endtime="20201115 22:59:52.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.659" endtime="20201115 22:59:52.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.296" endtime="20201115 22:59:52.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.294" endtime="20201115 22:59:52.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.293" endtime="20201115 22:59:52.685"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.688" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.696" endtime="20201115 22:59:52.713"></status>
</kw>
<msg timestamp="20201115 22:59:52.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.695" endtime="20201115 22:59:52.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.714" endtime="20201115 22:59:52.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.717" endtime="20201115 22:59:52.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.692" endtime="20201115 22:59:52.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.690" endtime="20201115 22:59:52.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.726" endtime="20201115 22:59:53.011"></status>
</kw>
<msg timestamp="20201115 22:59:53.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02442275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024457542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:52.724" endtime="20201115 22:59:53.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02442275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024457542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:53.016" endtime="20201115 22:59:53.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.024" endtime="20201115 22:59:53.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.722" endtime="20201115 22:59:53.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.720" endtime="20201115 22:59:53.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.031" level="INFO">${RESULT} = [{'time': 0.024457542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.479199999999877e-05, 'source_diff': 3.479199999999877e-05}, {'time': 0.024514556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:53.027" endtime="20201115 22:59:53.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.044" level="INFO">${ACCURACY} = {'diff': [3.479199999999877e-05, 3.5125000000000434e-05, 3.518000000000271e-05, 3.501399999999988e-05, 3.441599999999892e-05, 3.501399999999988e-05, 3.530599999999884e-05, 3.465300000000254e-05, 3.493...</msg>
<status status="PASS" starttime="20201115 22:59:53.032" endtime="20201115 22:59:53.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.049" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.048" endtime="20201115 22:59:53.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.051" level="INFO">VALUE: [3.479199999999877e-05, 3.5125000000000434e-05, 3.518000000000271e-05, 3.501399999999988e-05, 3.441599999999892e-05, 3.501399999999988e-05, 3.530599999999884e-05, 3.465300000000254e-05, 3.493099999999846e-05, 3.500000000000031e-05, 3.493099999999846e-05, 3.449999999999981e-05, 3.476399999999963e-05, 3.475000000000006e-05, 3.4597000000000794e-05, 3.491699999999889e-05, 3.4611000000000364e-05, 3.449999999999981e-05, 3.491700000000236e-05, 3.449999999999981e-05, 3.45840000000007e-05, 3.509800000000077e-05, 3.491699999999889e-05, 3.52779999999997e-05, 3.473600000000049e-05, 3.443000000000196e-05, 3.517999999999924e-05, 3.501399999999988e-05, 3.526400000000013e-05, 3.452800000000242e-05, 3.4611000000000364e-05, 3.491699999999889e-05, 3.449999999999981e-05, 3.523600000000099e-05, 3.4902999999999323e-05, 3.449999999999981e-05, 3.441699999999839e-05, 3.5346999999998074e-05, 3.4861000000000614e-05, 3.452800000000242e-05, 3.475000000000006e-05, 3.506999999999816e-05, 3.4763000000000155e-05, 3.4597000000000794e-05, 3.4569000000001654e-05, 3.5082999999998254e-05, 3.5040999999999545e-05, 3.525000000000056e-05, 3.523600000000099e-05, 3.441599999999892e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.050" endtime="20201115 22:59:53.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.045" endtime="20201115 22:59:53.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.055" endtime="20201115 22:59:53.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.058" endtime="20201115 22:59:53.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.056" endtime="20201115 22:59:53.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.053" endtime="20201115 22:59:53.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.689" endtime="20201115 22:59:53.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.687" endtime="20201115 22:59:53.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.686" endtime="20201115 22:59:53.079"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.081" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.090" endtime="20201115 22:59:53.108"></status>
</kw>
<msg timestamp="20201115 22:59:53.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.088" endtime="20201115 22:59:53.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.109" endtime="20201115 22:59:53.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.112" endtime="20201115 22:59:53.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.085" endtime="20201115 22:59:53.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.083" endtime="20201115 22:59:53.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.121" endtime="20201115 22:59:53.405"></status>
</kw>
<msg timestamp="20201115 22:59:53.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025427097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025462889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.119" endtime="20201115 22:59:53.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025427097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025462889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.409" endtime="20201115 22:59:53.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.418" endtime="20201115 22:59:53.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.117" endtime="20201115 22:59:53.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.115" endtime="20201115 22:59:53.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.425" level="INFO">${RESULT} = [{'time': 0.025462889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.579199999999977e-05, 'source_diff': 3.579199999999977e-05}, {'time': 0.025522903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:53.421" endtime="20201115 22:59:53.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.439" level="INFO">${ACCURACY} = {'diff': [3.579199999999977e-05, 3.601400000000088e-05, 3.623600000000199e-05, 3.574999999999759e-05, 3.550000000000081e-05, 3.551399999999691e-05, 3.5611000000001364e-05, 3.608399999999873e-05, 3.555...</msg>
<status status="PASS" starttime="20201115 22:59:53.426" endtime="20201115 22:59:53.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.444" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.443" endtime="20201115 22:59:53.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.446" level="INFO">VALUE: [3.579199999999977e-05, 3.601400000000088e-05, 3.623600000000199e-05, 3.574999999999759e-05, 3.550000000000081e-05, 3.551399999999691e-05, 3.5611000000001364e-05, 3.608399999999873e-05, 3.555600000000256e-05, 3.575000000000106e-05, 3.573599999999802e-05, 3.540200000000035e-05, 3.548599999999777e-05, 3.542999999999949e-05, 3.6167000000000143e-05, 3.5611000000001364e-05, 3.5610999999997894e-05, 3.579199999999977e-05, 3.624999999999809e-05, 3.5625000000000934e-05, 3.627799999999723e-05, 3.554199999999952e-05, 3.593099999999946e-05, 3.5666999999999643e-05, 3.602800000000045e-05, 3.623600000000199e-05, 3.574999999999759e-05, 3.575000000000106e-05, 3.5582999999998755e-05, 3.541599999999992e-05, 3.619399999999981e-05, 3.551400000000038e-05, 3.54719999999982e-05, 3.549999999999734e-05, 3.574999999999759e-05, 3.6097000000002294e-05, 3.593100000000293e-05, 3.600000000000131e-05, 3.552799999999995e-05, 3.5346999999998074e-05, 3.549999999999734e-05, 3.606999999999916e-05, 3.60840000000022e-05, 3.607000000000263e-05, 3.595799999999913e-05, 3.601400000000088e-05, 3.6277000000001225e-05, 3.608399999999873e-05, 3.575000000000106e-05, 3.6097000000002294e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.445" endtime="20201115 22:59:53.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.440" endtime="20201115 22:59:53.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.449" endtime="20201115 22:59:53.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.453" endtime="20201115 22:59:53.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.451" endtime="20201115 22:59:53.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.448" endtime="20201115 22:59:53.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.082" endtime="20201115 22:59:53.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.080" endtime="20201115 22:59:53.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.079" endtime="20201115 22:59:53.474"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.476" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.484" endtime="20201115 22:59:53.501"></status>
</kw>
<msg timestamp="20201115 22:59:53.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.483" endtime="20201115 22:59:53.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.503" endtime="20201115 22:59:53.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.505" endtime="20201115 22:59:53.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.480" endtime="20201115 22:59:53.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.478" endtime="20201115 22:59:53.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.515" endtime="20201115 22:59:53.800"></status>
</kw>
<msg timestamp="20201115 22:59:53.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024025514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024062486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.513" endtime="20201115 22:59:53.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024025514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024062486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.804" endtime="20201115 22:59:53.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.813" endtime="20201115 22:59:53.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.510" endtime="20201115 22:59:53.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.508" endtime="20201115 22:59:53.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.819" level="INFO">${RESULT} = [{'time': 0.024062486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.69719999999997e-05, 'source_diff': 3.69719999999997e-05}, {'time': 0.024113514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:59:53.816" endtime="20201115 22:59:53.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.833" level="INFO">${ACCURACY} = {'diff': [3.69719999999997e-05, 3.7110999999999394e-05, 3.7083000000000255e-05, 3.6403000000000824e-05, 3.6430999999999963e-05, 3.725000000000256e-05, 3.6903000000001324e-05, 3.734800000000302e-05, 3....</msg>
<status status="PASS" starttime="20201115 22:59:53.820" endtime="20201115 22:59:53.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.837" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.836" endtime="20201115 22:59:53.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.840" level="INFO">VALUE: [3.69719999999997e-05, 3.7110999999999394e-05, 3.7083000000000255e-05, 3.6403000000000824e-05, 3.6430999999999963e-05, 3.725000000000256e-05, 3.6903000000001324e-05, 3.734800000000302e-05, 3.724999999999909e-05, 3.658399999999923e-05, 3.724999999999909e-05, 3.708399999999973e-05, 3.673700000000196e-05, 3.7262999999999186e-05, 3.724999999999909e-05, 3.729200000000127e-05, 3.691599999999795e-05, 3.6819000000000435e-05, 3.724999999999909e-05, 3.668000000000074e-05, 3.7083000000000255e-05, 3.6403000000000824e-05, 3.7153000000001574e-05, 3.7332999999997035e-05, 3.7096999999999825e-05, 3.7096999999999825e-05, 3.656999999999966e-05, 3.708399999999973e-05, 3.694500000000003e-05, 3.6652999999997604e-05, 3.733399999999998e-05, 3.7083000000000255e-05, 3.656999999999966e-05, 3.674999999999859e-05, 3.698599999999927e-05, 3.6846999999999575e-05, 3.690199999999838e-05, 3.700000000000231e-05, 3.643000000000049e-05, 3.7166999999997674e-05, 3.6833000000000005e-05, 3.726400000000213e-05, 3.724999999999909e-05, 3.670899999999935e-05, 3.644499999999953e-05, 3.69589999999996e-05, 3.652800000000095e-05, 3.70979999999993e-05, 3.708399999999973e-05, 3.707000000000016e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.838" endtime="20201115 22:59:53.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.834" endtime="20201115 22:59:53.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.843" endtime="20201115 22:59:53.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.846" endtime="20201115 22:59:53.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.845" endtime="20201115 22:59:53.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.841" endtime="20201115 22:59:53.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.477" endtime="20201115 22:59:53.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.475" endtime="20201115 22:59:53.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.474" endtime="20201115 22:59:53.867"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.870" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.878" endtime="20201115 22:59:53.895"></status>
</kw>
<msg timestamp="20201115 22:59:53.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.876" endtime="20201115 22:59:53.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.896" endtime="20201115 22:59:53.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.899" endtime="20201115 22:59:53.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.874" endtime="20201115 22:59:53.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.872" endtime="20201115 22:59:53.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.908" endtime="20201115 22:59:54.194"></status>
</kw>
<msg timestamp="20201115 22:59:54.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024033806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024071736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.907" endtime="20201115 22:59:54.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024033806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024071736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.198" endtime="20201115 22:59:54.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.206" endtime="20201115 22:59:54.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.904" endtime="20201115 22:59:54.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.903" endtime="20201115 22:59:54.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.213" level="INFO">${RESULT} = [{'time': 0.024071736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.792999999999852e-05, 'source_diff': 3.792999999999852e-05}, {'time': 0.024126778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:54.210" endtime="20201115 22:59:54.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.226" level="INFO">${ACCURACY} = {'diff': [3.792999999999852e-05, 3.7610999999999895e-05, 3.826400000000313e-05, 3.826399999999966e-05, 3.7931000000001464e-05, 3.834800000000055e-05, 3.774999999999959e-05, 3.8082999999997785e-05, 3.7...</msg>
<status status="PASS" starttime="20201115 22:59:54.214" endtime="20201115 22:59:54.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.231" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.230" endtime="20201115 22:59:54.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.233" level="INFO">VALUE: [3.792999999999852e-05, 3.7610999999999895e-05, 3.826400000000313e-05, 3.826399999999966e-05, 3.7931000000001464e-05, 3.834800000000055e-05, 3.774999999999959e-05, 3.8082999999997785e-05, 3.7417000000001394e-05, 3.833400000000098e-05, 3.822199999999748e-05, 3.772299999999992e-05, 3.82780000000027e-05, 3.744399999999759e-05, 3.806999999999769e-05, 3.7583000000000755e-05, 3.7403000000001824e-05, 3.7832999999997535e-05, 3.7596999999996855e-05, 3.7916999999998424e-05, 3.7861000000000145e-05, 3.7416999999997924e-05, 3.801399999999941e-05, 3.7916999999998424e-05, 3.802799999999898e-05, 3.80980000000003e-05, 3.804199999999855e-05, 3.826400000000313e-05, 3.758400000000023e-05, 3.7916999999998424e-05, 3.768000000000174e-05, 3.817999999999877e-05, 3.7818999999997965e-05, 3.791600000000242e-05, 3.752799999999848e-05, 3.7583000000000755e-05, 3.74720000000002e-05, 3.772299999999992e-05, 3.7819000000001435e-05, 3.798699999999974e-05, 3.794400000000156e-05, 3.776399999999916e-05, 3.8083000000001255e-05, 3.7417000000001394e-05, 3.7639000000002504e-05, 3.832000000000141e-05, 3.826399999999966e-05, 3.7416999999997924e-05, 3.749999999999934e-05, 3.7597000000000325e-05]</msg>
<status status="PASS" starttime="20201115 22:59:54.232" endtime="20201115 22:59:54.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.227" endtime="20201115 22:59:54.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.236" endtime="20201115 22:59:54.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.240" endtime="20201115 22:59:54.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.238" endtime="20201115 22:59:54.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.235" endtime="20201115 22:59:54.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.870" endtime="20201115 22:59:54.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.868" endtime="20201115 22:59:54.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.868" endtime="20201115 22:59:54.261"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.263" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.272" endtime="20201115 22:59:54.288"></status>
</kw>
<msg timestamp="20201115 22:59:54.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.270" endtime="20201115 22:59:54.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.290" endtime="20201115 22:59:54.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.292" endtime="20201115 22:59:54.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.267" endtime="20201115 22:59:54.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.265" endtime="20201115 22:59:54.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.301" endtime="20201115 22:59:54.586"></status>
</kw>
<msg timestamp="20201115 22:59:54.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024567931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024606722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.300" endtime="20201115 22:59:54.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024567931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024606722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.591" endtime="20201115 22:59:54.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.599" endtime="20201115 22:59:54.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.297" endtime="20201115 22:59:54.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.295" endtime="20201115 22:59:54.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.606" level="INFO">${RESULT} = [{'time': 0.024606722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8790999999999826e-05, 'source_diff': 3.8790999999999826e-05}, {'time': 0.024667667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:54.602" endtime="20201115 22:59:54.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.619" level="INFO">${ACCURACY} = {'diff': [3.8790999999999826e-05, 3.8666999999999174e-05, 3.900000000000084e-05, 3.875000000000059e-05, 3.931999999999894e-05, 3.87919999999993e-05, 3.9082999999998785e-05, 3.9082999999998785e-05, 3.8...</msg>
<status status="PASS" starttime="20201115 22:59:54.607" endtime="20201115 22:59:54.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.623" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.622" endtime="20201115 22:59:54.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.626" level="INFO">VALUE: [3.8790999999999826e-05, 3.8666999999999174e-05, 3.900000000000084e-05, 3.875000000000059e-05, 3.931999999999894e-05, 3.87919999999993e-05, 3.9082999999998785e-05, 3.9082999999998785e-05, 3.8583000000001755e-05, 3.9096999999998355e-05, 3.927799999999676e-05, 3.8847000000001575e-05, 3.89859999999978e-05, 3.876400000000016e-05, 3.9097000000001825e-05, 3.8916999999999424e-05, 3.8667000000002644e-05, 3.883400000000148e-05, 3.856999999999819e-05, 3.876400000000016e-05, 3.8417000000002394e-05, 3.934800000000155e-05, 3.8416999999998924e-05, 3.900000000000084e-05, 3.875000000000059e-05, 3.845800000000163e-05, 3.8833000000002005e-05, 3.926400000000066e-05, 3.851399999999991e-05, 3.926400000000066e-05, 3.8569000000002185e-05, 3.9083000000002255e-05, 3.925000000000109e-05, 3.8416999999998924e-05, 3.9153000000000104e-05, 3.9332999999999035e-05, 3.8596999999997855e-05, 3.845799999999816e-05, 3.8680999999998744e-05, 3.933399999999851e-05, 3.85980000000008e-05, 3.875000000000059e-05, 3.9083000000002255e-05, 3.9082999999998785e-05, 3.923600000000152e-05, 3.8360999999997175e-05, 3.9304999999999896e-05, 3.922199999999848e-05, 3.8597000000001325e-05, 3.8582999999998285e-05]</msg>
<status status="PASS" starttime="20201115 22:59:54.624" endtime="20201115 22:59:54.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.620" endtime="20201115 22:59:54.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.629" endtime="20201115 22:59:54.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.632" endtime="20201115 22:59:54.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.631" endtime="20201115 22:59:54.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.627" endtime="20201115 22:59:54.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.264" endtime="20201115 22:59:54.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.262" endtime="20201115 22:59:54.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.261" endtime="20201115 22:59:54.654"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.656" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.664" endtime="20201115 22:59:54.681"></status>
</kw>
<msg timestamp="20201115 22:59:54.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.663" endtime="20201115 22:59:54.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.683" endtime="20201115 22:59:54.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.685" endtime="20201115 22:59:54.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.660" endtime="20201115 22:59:54.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.658" endtime="20201115 22:59:54.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.694" endtime="20201115 22:59:54.980"></status>
</kw>
<msg timestamp="20201115 22:59:54.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025430542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025470514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.693" endtime="20201115 22:59:54.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025430542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025470514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.984" endtime="20201115 22:59:54.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.993" endtime="20201115 22:59:54.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.690" endtime="20201115 22:59:54.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.688" endtime="20201115 22:59:54.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.999" level="INFO">${RESULT} = [{'time': 0.025470514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.997199999999923e-05, 'source_diff': 3.997199999999923e-05}, {'time': 0.025524514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:54.996" endtime="20201115 22:59:54.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.014" level="INFO">${ACCURACY} = {'diff': [3.997199999999923e-05, 3.9889000000001285e-05, 3.9832999999999535e-05, 3.975000000000159e-05, 4.023599999999905e-05, 3.975000000000159e-05, 4.0305000000000896e-05, 4.0083000000003255e-05, 4....</msg>
<status status="PASS" starttime="20201115 22:59:55.000" endtime="20201115 22:59:55.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.018" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.017" endtime="20201115 22:59:55.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.021" level="INFO">VALUE: [3.997199999999923e-05, 3.9889000000001285e-05, 3.9832999999999535e-05, 3.975000000000159e-05, 4.023599999999905e-05, 3.975000000000159e-05, 4.0305000000000896e-05, 4.0083000000003255e-05, 4.006999999999969e-05, 3.9583000000002755e-05, 4.0096999999999355e-05, 4.024999999999862e-05, 4.020799999999991e-05, 3.9568999999999716e-05, 4.0138999999998065e-05, 4.0124999999998495e-05, 3.9930999999999994e-05, 4.0333000000000035e-05, 4.026400000000166e-05, 4.0110999999998925e-05, 4.024999999999862e-05, 3.956999999999919e-05, 3.9403000000000354e-05, 3.9694999999999314e-05, 4.0389000000001785e-05, 4.024999999999862e-05, 4.008399999999926e-05, 3.943000000000002e-05, 3.9832999999999535e-05, 3.993000000000052e-05, 4.004200000000055e-05, 3.976400000000116e-05, 3.943000000000002e-05, 3.9875000000001715e-05, 3.976400000000116e-05, 4.026400000000166e-05, 4.026400000000166e-05, 3.9930999999999994e-05, 4.0181000000000244e-05, 4.0181000000000244e-05, 4.000000000000184e-05, 3.945799999999916e-05, 3.983399999999901e-05, 4.026399999999819e-05, 3.975000000000159e-05, 3.944399999999959e-05, 3.950000000000134e-05, 3.975000000000159e-05, 3.975000000000159e-05, 4.030600000000037e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.020" endtime="20201115 22:59:55.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.015" endtime="20201115 22:59:55.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.024" endtime="20201115 22:59:55.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.028" endtime="20201115 22:59:55.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.026" endtime="20201115 22:59:55.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.023" endtime="20201115 22:59:55.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.657" endtime="20201115 22:59:55.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.655" endtime="20201115 22:59:55.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.654" endtime="20201115 22:59:55.049"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.051" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.059" endtime="20201115 22:59:55.077"></status>
</kw>
<msg timestamp="20201115 22:59:55.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.058" endtime="20201115 22:59:55.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.078" endtime="20201115 22:59:55.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.081" endtime="20201115 22:59:55.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.055" endtime="20201115 22:59:55.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.053" endtime="20201115 22:59:55.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.090" endtime="20201115 22:59:55.376"></status>
</kw>
<msg timestamp="20201115 22:59:55.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024107417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024148653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.088" endtime="20201115 22:59:55.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024107417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024148653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.381" endtime="20201115 22:59:55.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.389" endtime="20201115 22:59:55.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.086" endtime="20201115 22:59:55.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.084" endtime="20201115 22:59:55.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.396" level="INFO">${RESULT} = [{'time': 0.024148653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.123600000000005e-05, 'source_diff': 4.123600000000005e-05}, {'time': 0.024204653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:55.393" endtime="20201115 22:59:55.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.409" level="INFO">${ACCURACY} = {'diff': [4.123600000000005e-05, 4.132000000000094e-05, 4.074999999999912e-05, 4.058399999999976e-05, 4.0930999999997525e-05, 4.099999999999937e-05, 4.0569000000000716e-05, 4.1083000000000786e-05, 4.1...</msg>
<status status="PASS" starttime="20201115 22:59:55.397" endtime="20201115 22:59:55.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.414" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.413" endtime="20201115 22:59:55.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.417" level="INFO">VALUE: [4.123600000000005e-05, 4.132000000000094e-05, 4.074999999999912e-05, 4.058399999999976e-05, 4.0930999999997525e-05, 4.099999999999937e-05, 4.0569000000000716e-05, 4.1083000000000786e-05, 4.126399999999919e-05, 4.119400000000134e-05, 4.0374999999998745e-05, 4.118000000000177e-05, 4.0818999999997496e-05, 4.0959000000000134e-05, 4.0666999999997705e-05, 4.0417000000000924e-05, 4.120800000000091e-05, 4.107000000000069e-05, 4.124999999999962e-05, 4.057000000000019e-05, 4.108400000000026e-05, 4.0930999999997525e-05, 4.083400000000001e-05, 4.1152999999998635e-05, 4.074999999999912e-05, 4.1083000000000786e-05, 4.1054999999998176e-05, 4.124999999999962e-05, 4.126399999999919e-05, 4.1083000000000786e-05, 4.073599999999955e-05, 4.104200000000155e-05, 4.0972999999999704e-05, 4.049999999999887e-05, 4.073599999999955e-05, 4.0917000000001424e-05, 4.104200000000155e-05, 4.123600000000005e-05, 4.107000000000069e-05, 4.124999999999962e-05, 4.108400000000026e-05, 4.0917000000001424e-05, 4.049999999999887e-05, 4.043000000000102e-05, 4.1332999999997566e-05, 4.0541000000001576e-05, 4.070800000000041e-05, 4.0833000000000536e-05, 4.069399999999737e-05, 4.0638999999998565e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.415" endtime="20201115 22:59:55.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.410" endtime="20201115 22:59:55.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.420" endtime="20201115 22:59:55.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.423" endtime="20201115 22:59:55.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.422" endtime="20201115 22:59:55.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.418" endtime="20201115 22:59:55.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.052" endtime="20201115 22:59:55.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.050" endtime="20201115 22:59:55.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.049" endtime="20201115 22:59:55.444"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.447" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.455" endtime="20201115 22:59:55.472"></status>
</kw>
<msg timestamp="20201115 22:59:55.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.453" endtime="20201115 22:59:55.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.474" endtime="20201115 22:59:55.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.476" endtime="20201115 22:59:55.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.451" endtime="20201115 22:59:55.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.449" endtime="20201115 22:59:55.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.485" endtime="20201115 22:59:55.771"></status>
</kw>
<msg timestamp="20201115 22:59:55.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024247944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024289403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.484" endtime="20201115 22:59:55.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024247944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024289403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.775" endtime="20201115 22:59:55.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.783" endtime="20201115 22:59:55.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.481" endtime="20201115 22:59:55.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.479" endtime="20201115 22:59:55.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.790" level="INFO">${RESULT} = [{'time': 0.024289403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1459000000000634e-05, 'source_diff': 4.1459000000000634e-05}, {'time': 0.024348431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:55.786" endtime="20201115 22:59:55.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.804" level="INFO">${ACCURACY} = {'diff': [4.1459000000000634e-05, 4.227799999999976e-05, 4.223600000000105e-05, 4.226400000000019e-05, 4.156999999999772e-05, 4.175000000000012e-05, 4.173600000000055e-05, 4.198599999999733e-05, 4.181...</msg>
<status status="PASS" starttime="20201115 22:59:55.791" endtime="20201115 22:59:55.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.808" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.807" endtime="20201115 22:59:55.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.810" level="INFO">VALUE: [4.1459000000000634e-05, 4.227799999999976e-05, 4.223600000000105e-05, 4.226400000000019e-05, 4.156999999999772e-05, 4.175000000000012e-05, 4.173600000000055e-05, 4.198599999999733e-05, 4.1818999999998496e-05, 4.1582999999997816e-05, 4.175000000000012e-05, 4.230600000000237e-05, 4.1930999999998525e-05, 4.1486999999999774e-05, 4.2181000000002244e-05, 4.2097000000001356e-05, 4.1916999999998955e-05, 4.234800000000108e-05, 4.1931000000001994e-05, 4.1680999999998275e-05, 4.232000000000194e-05, 4.156999999999772e-05, 4.208400000000126e-05, 4.2277000000000287e-05, 4.1569000000001716e-05, 4.2125000000000495e-05, 4.2040999999999606e-05, 4.2097000000001356e-05, 4.176399999999969e-05, 4.2097000000001356e-05, 4.1431000000001494e-05, 4.201399999999994e-05, 4.225000000000062e-05, 4.1417000000001924e-05, 4.181999999999797e-05, 4.1917000000002425e-05, 4.149999999999987e-05, 4.1930999999998525e-05, 4.233400000000151e-05, 4.225000000000062e-05, 4.225000000000062e-05, 4.1512999999999967e-05, 4.141600000000245e-05, 4.19860000000008e-05, 4.2082999999998316e-05, 4.175000000000012e-05, 4.227799999999976e-05, 4.2333000000002036e-05, 4.2082999999998316e-05, 4.1931000000001994e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.809" endtime="20201115 22:59:55.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.804" endtime="20201115 22:59:55.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.814" endtime="20201115 22:59:55.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.817" endtime="20201115 22:59:55.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.815" endtime="20201115 22:59:55.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.812" endtime="20201115 22:59:55.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.447" endtime="20201115 22:59:55.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.446" endtime="20201115 22:59:55.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.445" endtime="20201115 22:59:55.838"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.840" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.849" endtime="20201115 22:59:55.865"></status>
</kw>
<msg timestamp="20201115 22:59:55.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.847" endtime="20201115 22:59:55.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.867" endtime="20201115 22:59:55.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.869" endtime="20201115 22:59:55.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.844" endtime="20201115 22:59:55.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.842" endtime="20201115 22:59:55.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.878" endtime="20201115 22:59:56.164"></status>
</kw>
<msg timestamp="20201115 22:59:56.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024262972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024306097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.877" endtime="20201115 22:59:56.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024262972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024306097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.169" endtime="20201115 22:59:56.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.177" endtime="20201115 22:59:56.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.874" endtime="20201115 22:59:56.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.872" endtime="20201115 22:59:56.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.184" level="INFO">${RESULT} = [{'time': 0.024306097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3124999999998026e-05, 'source_diff': 4.3124999999998026e-05}, {'time': 0.024364097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:56.181" endtime="20201115 22:59:56.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.197" level="INFO">${ACCURACY} = {'diff': [4.3124999999998026e-05, 4.291600000000048e-05, 4.266599999999676e-05, 4.3139000000001065e-05, 4.24860000000013e-05, 4.324999999999815e-05, 4.3305000000000426e-05, 4.306999999999922e-05, 4.32...</msg>
<status status="PASS" starttime="20201115 22:59:56.185" endtime="20201115 22:59:56.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.202" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.201" endtime="20201115 22:59:56.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.204" level="INFO">VALUE: [4.3124999999998026e-05, 4.291600000000048e-05, 4.266599999999676e-05, 4.3139000000001065e-05, 4.24860000000013e-05, 4.324999999999815e-05, 4.3305000000000426e-05, 4.306999999999922e-05, 4.325000000000162e-05, 4.304200000000008e-05, 4.309800000000183e-05, 4.2597000000001856e-05, 4.2430999999999025e-05, 4.251300000000097e-05, 4.242999999999955e-05, 4.269399999999937e-05, 4.247199999999826e-05, 4.275000000000112e-05, 4.2625000000000995e-05, 4.2389000000000315e-05, 4.301400000000094e-05, 4.2554999999999676e-05, 4.2402999999999885e-05, 4.3209000000002384e-05, 4.2819000000002966e-05, 4.273600000000155e-05, 4.3332999999999566e-05, 4.277800000000026e-05, 4.2944999999999095e-05, 4.301400000000094e-05, 4.258400000000176e-05, 4.2916999999999955e-05, 4.277699999999732e-05, 4.275000000000112e-05, 4.244399999999912e-05, 4.266600000000023e-05, 4.277800000000026e-05, 4.3125000000001495e-05, 4.2583000000002286e-05, 4.2916999999999955e-05, 4.279199999999983e-05, 4.2416999999999455e-05, 4.2832999999999066e-05, 4.306999999999922e-05, 4.2402999999999885e-05, 4.3139000000001065e-05, 4.2666999999999705e-05, 4.250000000000087e-05, 4.277700000000079e-05, 4.2416999999999455e-05]</msg>
<status status="PASS" starttime="20201115 22:59:56.203" endtime="20201115 22:59:56.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.198" endtime="20201115 22:59:56.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.207" endtime="20201115 22:59:56.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.211" endtime="20201115 22:59:56.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.209" endtime="20201115 22:59:56.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.206" endtime="20201115 22:59:56.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.841" endtime="20201115 22:59:56.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.839" endtime="20201115 22:59:56.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.838" endtime="20201115 22:59:56.232"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.234" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.242" endtime="20201115 22:59:56.260"></status>
</kw>
<msg timestamp="20201115 22:59:56.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.241" endtime="20201115 22:59:56.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.262" endtime="20201115 22:59:56.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.264" endtime="20201115 22:59:56.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.238" endtime="20201115 22:59:56.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.236" endtime="20201115 22:59:56.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.274" endtime="20201115 22:59:56.560"></status>
</kw>
<msg timestamp="20201115 22:59:56.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025025069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025068681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.272" endtime="20201115 22:59:56.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025025069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025068681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.564" endtime="20201115 22:59:56.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.572" endtime="20201115 22:59:56.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.269" endtime="20201115 22:59:56.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.268" endtime="20201115 22:59:56.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.579" level="INFO">${RESULT} = [{'time': 0.025068681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361199999999843e-05, 'source_diff': 4.361199999999843e-05}, {'time': 0.025129694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:56.575" endtime="20201115 22:59:56.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.593" level="INFO">${ACCURACY} = {'diff': [4.361199999999843e-05, 4.3596999999999386e-05, 4.373599999999908e-05, 4.423599999999958e-05, 4.373599999999908e-05, 4.408299999999685e-05, 4.3569000000000246e-05, 4.423599999999958e-05, 4.39...</msg>
<status status="PASS" starttime="20201115 22:59:56.580" endtime="20201115 22:59:56.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.598" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.597" endtime="20201115 22:59:56.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.601" level="INFO">VALUE: [4.361199999999843e-05, 4.3596999999999386e-05, 4.373599999999908e-05, 4.423599999999958e-05, 4.373599999999908e-05, 4.408299999999685e-05, 4.3569000000000246e-05, 4.423599999999958e-05, 4.3902999999997916e-05, 4.3652999999997666e-05, 4.39999999999989e-05, 4.3417000000000455e-05, 4.352799999999754e-05, 4.425000000000262e-05, 4.401399999999847e-05, 4.34999999999984e-05, 4.429099999999839e-05, 4.376299999999875e-05, 4.4096999999999886e-05, 4.4083000000000316e-05, 4.4083000000000316e-05, 4.4083000000000316e-05, 4.3596999999999386e-05, 4.3582999999999816e-05, 4.4125000000002496e-05, 4.374999999999865e-05, 4.423599999999958e-05, 4.3417000000000455e-05, 4.350000000000187e-05, 4.397200000000323e-05, 4.4167000000001205e-05, 4.4181000000000775e-05, 4.383399999999954e-05, 4.377700000000179e-05, 4.3917000000000955e-05, 4.4319000000000996e-05, 4.3402999999997416e-05, 4.3846999999999636e-05, 4.343000000000055e-05, 4.369400000000037e-05, 4.3667000000000705e-05, 4.4167000000001205e-05, 4.351399999999797e-05, 4.375000000000212e-05, 4.3569000000000246e-05, 4.3723000000002454e-05, 4.3903000000001385e-05, 4.3555000000000677e-05, 4.3417000000000455e-05, 4.4167000000001205e-05]</msg>
<status status="PASS" starttime="20201115 22:59:56.599" endtime="20201115 22:59:56.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.594" endtime="20201115 22:59:56.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.604" endtime="20201115 22:59:56.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.607" endtime="20201115 22:59:56.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.605" endtime="20201115 22:59:56.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.602" endtime="20201115 22:59:56.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.235" endtime="20201115 22:59:56.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.233" endtime="20201115 22:59:56.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.232" endtime="20201115 22:59:56.628"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.630" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.638" endtime="20201115 22:59:56.656"></status>
</kw>
<msg timestamp="20201115 22:59:56.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.637" endtime="20201115 22:59:56.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.657" endtime="20201115 22:59:56.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.660" endtime="20201115 22:59:56.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.634" endtime="20201115 22:59:56.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.632" endtime="20201115 22:59:56.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.669" endtime="20201115 22:59:56.954"></status>
</kw>
<msg timestamp="20201115 22:59:56.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024219514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024264833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.668" endtime="20201115 22:59:56.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024219514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024264833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.959" endtime="20201115 22:59:56.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.967" endtime="20201115 22:59:56.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.665" endtime="20201115 22:59:56.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.664" endtime="20201115 22:59:56.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.974" level="INFO">${RESULT} = [{'time': 0.024264833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.531899999999853e-05, 'source_diff': 4.531899999999853e-05}, {'time': 0.024330819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:56.970" endtime="20201115 22:59:56.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.988" level="INFO">${ACCURACY} = {'diff': [4.531899999999853e-05, 4.44999999999994e-05, 4.526300000000025e-05, 4.492999999999858e-05, 4.4833000000001066e-05, 4.473600000000008e-05, 4.5083000000001316e-05, 4.454100000000211e-05, 4.513...</msg>
<status status="PASS" starttime="20201115 22:59:56.975" endtime="20201115 22:59:56.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.992" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.991" endtime="20201115 22:59:56.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.995" level="INFO">VALUE: [4.531899999999853e-05, 4.44999999999994e-05, 4.526300000000025e-05, 4.492999999999858e-05, 4.4833000000001066e-05, 4.473600000000008e-05, 4.5083000000001316e-05, 4.454100000000211e-05, 4.5138999999999596e-05, 4.5111000000000456e-05, 4.508299999999785e-05, 4.527799999999929e-05, 4.504200000000208e-05, 4.4431000000001025e-05, 4.44999999999994e-05, 4.4945000000001095e-05, 4.44999999999994e-05, 4.49999999999999e-05, 4.482000000000097e-05, 4.523599999999711e-05, 4.527799999999929e-05, 4.474999999999965e-05, 4.508299999999785e-05, 4.508299999999785e-05, 4.525000000000015e-05, 4.4402999999998416e-05, 4.4736999999999555e-05, 4.4667000000001705e-05, 4.4681000000001275e-05, 4.451399999999897e-05, 4.5097000000000886e-05, 4.526399999999972e-05, 4.479099999999889e-05, 4.4680999999997806e-05, 4.4917000000001955e-05, 4.5013e-05, 4.490199999999944e-05, 4.5361000000000706e-05, 4.444399999999765e-05, 4.44999999999994e-05, 4.491600000000248e-05, 4.44999999999994e-05, 4.4902999999998916e-05, 4.5138999999999596e-05, 4.508299999999785e-05, 4.513800000000012e-05, 4.4583000000000816e-05, 4.4944999999997626e-05, 4.484800000000011e-05, 4.509800000000036e-05]</msg>
<status status="PASS" starttime="20201115 22:59:56.993" endtime="20201115 22:59:56.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.989" endtime="20201115 22:59:56.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.998" endtime="20201115 22:59:56.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.002" endtime="20201115 22:59:57.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.000" endtime="20201115 22:59:57.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.996" endtime="20201115 22:59:57.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.631" endtime="20201115 22:59:57.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.629" endtime="20201115 22:59:57.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.628" endtime="20201115 22:59:57.023"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.025" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.090" endtime="20201115 22:59:57.106"></status>
</kw>
<msg timestamp="20201115 22:59:57.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.088" endtime="20201115 22:59:57.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.108" endtime="20201115 22:59:57.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.110" endtime="20201115 22:59:57.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.086" endtime="20201115 22:59:57.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.027" endtime="20201115 22:59:57.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.119" endtime="20201115 22:59:57.405"></status>
</kw>
<msg timestamp="20201115 22:59:57.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080752361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080798472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.118" endtime="20201115 22:59:57.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080752361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080798472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.409" endtime="20201115 22:59:57.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.417" endtime="20201115 22:59:57.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.115" endtime="20201115 22:59:57.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.114" endtime="20201115 22:59:57.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.424" level="INFO">${RESULT} = [{'time': 0.080798472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6111000000001456e-05, 'source_diff': 4.6111000000001456e-05}, {'time': 0.080859472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:57.421" endtime="20201115 22:59:57.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.438" level="INFO">${ACCURACY} = {'diff': [4.6111000000001456e-05, 4.5583000000001817e-05, 4.5930999999999056e-05, 4.5625000000007465e-05, 4.618099999999237e-05, 4.590200000000044e-05, 4.629200000000333e-05, 4.5417000000005925e-05, 4...</msg>
<status status="PASS" starttime="20201115 22:59:57.425" endtime="20201115 22:59:57.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.442" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.441" endtime="20201115 22:59:57.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.444" level="INFO">VALUE: [4.6111000000001456e-05, 4.5583000000001817e-05, 4.5930999999999056e-05, 4.5625000000007465e-05, 4.618099999999237e-05, 4.590200000000044e-05, 4.629200000000333e-05, 4.5417000000005925e-05, 4.548600000001124e-05, 4.5930999999999056e-05, 4.5653000000006605e-05, 4.552700000000354e-05, 4.6083000000002317e-05, 4.592999999999958e-05, 4.5847000000001636e-05, 4.576400000000369e-05, 4.6083000000002317e-05, 4.62780000000107e-05, 4.5583000000001817e-05, 4.6097000000008825e-05, 4.606899999999581e-05, 4.594499999999169e-05, 4.554199999999564e-05, 4.574999999999718e-05, 4.5597000000008325e-05, 4.558400000000129e-05, 4.5666999999999236e-05, 4.6209000000005385e-05, 4.609799999999442e-05, 4.611099999998758e-05, 4.541600000000645e-05, 4.552800000000301e-05, 4.608299999998844e-05, 4.6097000000008825e-05, 4.574999999999718e-05, 4.6069000000009686e-05, 4.623600000000505e-05, 4.5611000000000956e-05, 4.624999999999768e-05, 4.5875000000000776e-05, 4.622199999999854e-05, 4.5667000000013114e-05, 4.600000000000437e-05, 4.556999999999478e-05, 4.608400000000179e-05, 4.575000000001106e-05, 4.624999999999768e-05, 4.574999999999718e-05, 4.579200000000283e-05, 4.5415999999992573e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.443" endtime="20201115 22:59:57.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.438" endtime="20201115 22:59:57.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.448" endtime="20201115 22:59:57.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.451" endtime="20201115 22:59:57.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.450" endtime="20201115 22:59:57.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.446" endtime="20201115 22:59:57.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.026" endtime="20201115 22:59:57.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.024" endtime="20201115 22:59:57.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.023" endtime="20201115 22:59:57.473"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.475" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.483" endtime="20201115 22:59:57.500"></status>
</kw>
<msg timestamp="20201115 22:59:57.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.482" endtime="20201115 22:59:57.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.502" endtime="20201115 22:59:57.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.504" endtime="20201115 22:59:57.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.479" endtime="20201115 22:59:57.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.477" endtime="20201115 22:59:57.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.513" endtime="20201115 22:59:57.800"></status>
</kw>
<msg timestamp="20201115 22:59:57.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024145625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024192931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.512" endtime="20201115 22:59:57.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024145625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024192931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.804" endtime="20201115 22:59:57.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.812" endtime="20201115 22:59:57.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.509" endtime="20201115 22:59:57.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.507" endtime="20201115 22:59:57.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.819" level="INFO">${RESULT} = [{'time': 0.024192931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.730600000000043e-05, 'source_diff': 4.730600000000043e-05}, {'time': 0.024253917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:57.815" endtime="20201115 22:59:57.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.832" level="INFO">${ACCURACY} = {'diff': [4.730600000000043e-05, 4.698599999999886e-05, 4.676400000000122e-05, 4.726300000000225e-05, 4.691600000000101e-05, 4.716600000000126e-05, 4.729100000000139e-05, 4.677799999999732e-05, 4.7069...</msg>
<status status="PASS" starttime="20201115 22:59:57.820" endtime="20201115 22:59:57.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.837" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.836" endtime="20201115 22:59:57.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.839" level="INFO">VALUE: [4.730600000000043e-05, 4.698599999999886e-05, 4.676400000000122e-05, 4.726300000000225e-05, 4.691600000000101e-05, 4.716600000000126e-05, 4.729100000000139e-05, 4.677799999999732e-05, 4.706900000000028e-05, 4.649999999999793e-05, 4.65000000000014e-05, 4.709699999999942e-05, 4.6958999999999196e-05, 4.68329999999996e-05, 4.672199999999904e-05, 4.659799999999839e-05, 4.677800000000079e-05, 4.659800000000186e-05, 4.726400000000172e-05, 4.690199999999797e-05, 4.71940000000004e-05, 4.643000000000008e-05, 4.708400000000279e-05, 4.656899999999978e-05, 4.6597000000002387e-05, 4.709699999999942e-05, 4.723599999999911e-05, 4.705600000000018e-05, 4.672199999999904e-05, 4.6917000000000486e-05, 4.732e-05, 4.676400000000122e-05, 4.676399999999775e-05, 4.674999999999818e-05, 4.6416999999999986e-05, 4.683399999999907e-05, 4.658400000000229e-05, 4.676400000000122e-05, 4.693000000000058e-05, 4.666600000000076e-05, 4.649999999999793e-05, 4.674999999999818e-05, 4.643000000000008e-05, 4.6680999999999806e-05, 4.648600000000183e-05, 4.675000000000165e-05, 4.648599999999836e-05, 4.7194999999999876e-05, 4.651400000000097e-05, 4.698599999999886e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.838" endtime="20201115 22:59:57.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.833" endtime="20201115 22:59:57.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.843" endtime="20201115 22:59:57.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.846" endtime="20201115 22:59:57.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.845" endtime="20201115 22:59:57.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.841" endtime="20201115 22:59:57.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.476" endtime="20201115 22:59:57.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.474" endtime="20201115 22:59:57.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.473" endtime="20201115 22:59:57.867"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.870" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.878" endtime="20201115 22:59:57.895"></status>
</kw>
<msg timestamp="20201115 22:59:57.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.876" endtime="20201115 22:59:57.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.897" endtime="20201115 22:59:57.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.899" endtime="20201115 22:59:57.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.874" endtime="20201115 22:59:57.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.872" endtime="20201115 22:59:57.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.908" endtime="20201115 22:59:58.194"></status>
</kw>
<msg timestamp="20201115 22:59:58.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024889458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024937764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.907" endtime="20201115 22:59:58.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024889458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024937764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.199" endtime="20201115 22:59:58.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.207" endtime="20201115 22:59:58.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.904" endtime="20201115 22:59:58.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.902" endtime="20201115 22:59:58.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.213" level="INFO">${RESULT} = [{'time': 0.024937764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.830600000000143e-05, 'source_diff': 4.830600000000143e-05}, {'time': 0.025007792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:58.210" endtime="20201115 22:59:58.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.228" level="INFO">${ACCURACY} = {'diff': [4.830600000000143e-05, 4.836100000000024e-05, 4.777799999999832e-05, 4.776399999999875e-05, 4.7417000000000986e-05, 4.819399999999793e-05, 4.751299999999903e-05, 4.776299999999928e-05, 4.806...</msg>
<status status="PASS" starttime="20201115 22:59:58.214" endtime="20201115 22:59:58.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.233" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.232" endtime="20201115 22:59:58.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.236" level="INFO">VALUE: [4.830600000000143e-05, 4.836100000000024e-05, 4.777799999999832e-05, 4.776399999999875e-05, 4.7417000000000986e-05, 4.819399999999793e-05, 4.751299999999903e-05, 4.776299999999928e-05, 4.806899999999781e-05, 4.742999999999761e-05, 4.744400000000065e-05, 4.791599999999854e-05, 4.811099999999999e-05, 4.798599999999986e-05, 4.7931000000001056e-05, 4.766699999999777e-05, 4.834700000000067e-05, 4.824999999999968e-05, 4.808400000000032e-05, 4.830499999999849e-05, 4.807000000000075e-05, 4.770800000000047e-05, 4.7737000000002555e-05, 4.758399999999982e-05, 4.774999999999918e-05, 4.743000000000108e-05, 4.818000000000183e-05, 4.836100000000024e-05, 4.822200000000054e-05, 4.758300000000035e-05, 4.758300000000035e-05, 4.788899999999888e-05, 4.7667000000001236e-05, 4.798599999999986e-05, 4.809799999999989e-05, 4.7945000000000626e-05, 4.8181000000001306e-05, 4.805599999999771e-05, 4.827799999999882e-05, 4.81529999999987e-05, 4.766600000000176e-05, 4.802799999999857e-05, 4.790199999999897e-05, 4.813899999999913e-05, 4.744400000000065e-05, 4.826399999999925e-05, 4.823600000000011e-05, 4.7389000000001846e-05, 4.75000000000024e-05, 4.823600000000011e-05]</msg>
<status status="PASS" starttime="20201115 22:59:58.234" endtime="20201115 22:59:58.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.229" endtime="20201115 22:59:58.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.239" endtime="20201115 22:59:58.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.242" endtime="20201115 22:59:58.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.241" endtime="20201115 22:59:58.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.237" endtime="20201115 22:59:58.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.870" endtime="20201115 22:59:58.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.868" endtime="20201115 22:59:58.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.867" endtime="20201115 22:59:58.263"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.266" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.274" endtime="20201115 22:59:58.292"></status>
</kw>
<msg timestamp="20201115 22:59:58.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.272" endtime="20201115 22:59:58.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.293" endtime="20201115 22:59:58.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.296" endtime="20201115 22:59:58.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.270" endtime="20201115 22:59:58.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.267" endtime="20201115 22:59:58.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.305" endtime="20201115 22:59:58.590"></status>
</kw>
<msg timestamp="20201115 22:59:58.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024110319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024159389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.303" endtime="20201115 22:59:58.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024110319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024159389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.594" endtime="20201115 22:59:58.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.603" endtime="20201115 22:59:58.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.301" endtime="20201115 22:59:58.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.299" endtime="20201115 22:59:58.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.609" level="INFO">${RESULT} = [{'time': 0.024159389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.906999999999828e-05, 'source_diff': 4.906999999999828e-05}, {'time': 0.024226403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:58.606" endtime="20201115 22:59:58.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.623" level="INFO">${ACCURACY} = {'diff': [4.906999999999828e-05, 4.891699999999902e-05, 4.869499999999791e-05, 4.9167000000002736e-05, 4.887500000000031e-05, 4.841599999999904e-05, 4.868000000000233e-05, 4.93330000000021e-05, 4.8736...</msg>
<status status="PASS" starttime="20201115 22:59:58.611" endtime="20201115 22:59:58.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.627" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.626" endtime="20201115 22:59:58.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.630" level="INFO">VALUE: [4.906999999999828e-05, 4.891699999999902e-05, 4.869499999999791e-05, 4.9167000000002736e-05, 4.887500000000031e-05, 4.841599999999904e-05, 4.868000000000233e-05, 4.93330000000021e-05, 4.873600000000061e-05, 4.890199999999997e-05, 4.863899999999963e-05, 4.881900000000203e-05, 4.923599999999764e-05, 4.8931000000002056e-05, 4.91529999999997e-05, 4.851400000000297e-05, 4.856999999999778e-05, 4.893099999999859e-05, 4.884799999999717e-05, 4.838899999999938e-05, 4.933400000000157e-05, 4.926300000000078e-05, 4.909699999999795e-05, 4.927799999999982e-05, 4.843000000000208e-05, 4.867999999999886e-05, 4.881900000000203e-05, 4.876399999999975e-05, 4.925000000000068e-05, 4.859699999999745e-05, 4.8459000000000696e-05, 4.848600000000036e-05, 4.930499999999949e-05, 4.859700000000092e-05, 4.925000000000068e-05, 4.856999999999778e-05, 4.845799999999775e-05, 4.927799999999982e-05, 4.859700000000092e-05, 4.875000000000018e-05, 4.888899999999988e-05, 4.931899999999906e-05, 4.908299999999838e-05, 4.847200000000079e-05, 4.916699999999927e-05, 4.886099999999727e-05, 4.897200000000129e-05, 4.861100000000049e-05, 4.900000000000043e-05, 4.861199999999996e-05]</msg>
<status status="PASS" starttime="20201115 22:59:58.628" endtime="20201115 22:59:58.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.624" endtime="20201115 22:59:58.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.633" endtime="20201115 22:59:58.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.636" endtime="20201115 22:59:58.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.635" endtime="20201115 22:59:58.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.631" endtime="20201115 22:59:58.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.266" endtime="20201115 22:59:58.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.264" endtime="20201115 22:59:58.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.264" endtime="20201115 22:59:58.657"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.660" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.668" endtime="20201115 22:59:58.684"></status>
</kw>
<msg timestamp="20201115 22:59:58.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.666" endtime="20201115 22:59:58.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.686" endtime="20201115 22:59:58.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.688" endtime="20201115 22:59:58.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.664" endtime="20201115 22:59:58.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.662" endtime="20201115 22:59:58.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.697" endtime="20201115 22:59:58.983"></status>
</kw>
<msg timestamp="20201115 22:59:58.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024069653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024119722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.696" endtime="20201115 22:59:58.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024069653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024119722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.987" endtime="20201115 22:59:58.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.996" endtime="20201115 22:59:58.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.693" endtime="20201115 22:59:58.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.692" endtime="20201115 22:59:58.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.003" level="INFO">${RESULT} = [{'time': 0.024119722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.006899999999981e-05, 'source_diff': 5.006899999999981e-05}, {'time': 0.024184722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:58.999" endtime="20201115 22:59:59.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.017" level="INFO">${ACCURACY} = {'diff': [5.006899999999981e-05, 4.959699999999845e-05, 5.026399999999778e-05, 5.026400000000125e-05, 5.026400000000125e-05, 4.993099999999959e-05, 4.949999999999746e-05, 4.941699999999952e-05, 4.9707...</msg>
<status status="PASS" starttime="20201115 22:59:59.004" endtime="20201115 22:59:59.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.021" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.020" endtime="20201115 22:59:59.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.024" level="INFO">VALUE: [5.006899999999981e-05, 4.959699999999845e-05, 5.026399999999778e-05, 5.026400000000125e-05, 5.026400000000125e-05, 4.993099999999959e-05, 4.949999999999746e-05, 4.941699999999952e-05, 4.9707999999999e-05, 5.0320000000003e-05, 5.008399999999885e-05, 5.011099999999852e-05, 4.947199999999832e-05, 4.984700000000217e-05, 4.974999999999771e-05, 4.999999999999796e-05, 5.002800000000057e-05, 4.976399999999728e-05, 5.012500000000156e-05, 5.025000000000168e-05, 4.943099999999909e-05, 4.998599999999839e-05, 5.006999999999928e-05, 4.975000000000118e-05, 5.005599999999971e-05, 4.9931000000003056e-05, 4.984800000000164e-05, 5.009800000000189e-05, 5.006999999999928e-05, 4.96530000000002e-05, 4.976400000000075e-05, 5.009699999999895e-05, 4.959700000000192e-05, 5.025000000000168e-05, 4.993000000000011e-05, 4.952800000000007e-05, 4.9473000000001266e-05, 4.95140000000005e-05, 5.005599999999971e-05, 4.975000000000118e-05, 5.007000000000275e-05, 4.998600000000186e-05, 5.016700000000027e-05, 4.983400000000207e-05, 4.991700000000002e-05, 5.016600000000079e-05, 4.986100000000174e-05, 5.0320000000003e-05, 4.958299999999888e-05, 4.975000000000118e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.022" endtime="20201115 22:59:59.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.017" endtime="20201115 22:59:59.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.027" endtime="20201115 22:59:59.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.030" endtime="20201115 22:59:59.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.029" endtime="20201115 22:59:59.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.025" endtime="20201115 22:59:59.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.660" endtime="20201115 22:59:59.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.659" endtime="20201115 22:59:59.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.658" endtime="20201115 22:59:59.051"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.054" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.062" endtime="20201115 22:59:59.078"></status>
</kw>
<msg timestamp="20201115 22:59:59.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.060" endtime="20201115 22:59:59.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.080" endtime="20201115 22:59:59.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.083" endtime="20201115 22:59:59.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.058" endtime="20201115 22:59:59.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.056" endtime="20201115 22:59:59.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.092" endtime="20201115 22:59:59.377"></status>
</kw>
<msg timestamp="20201115 22:59:59.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024173806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024224764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.090" endtime="20201115 22:59:59.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024173806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024224764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.381" endtime="20201115 22:59:59.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.389" endtime="20201115 22:59:59.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.087" endtime="20201115 22:59:59.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.086" endtime="20201115 22:59:59.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.396" level="INFO">${RESULT} = [{'time': 0.024224764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.095800000000025e-05, 'source_diff': 5.095800000000025e-05}, {'time': 0.024293778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:59.393" endtime="20201115 22:59:59.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.409" level="INFO">${ACCURACY} = {'diff': [5.095800000000025e-05, 5.108399999999985e-05, 5.070899999999948e-05, 5.124999999999921e-05, 5.112499999999909e-05, 5.041700000000052e-05, 5.051299999999856e-05, 5.058299999999988e-05, 5.0708...</msg>
<status status="PASS" starttime="20201115 22:59:59.397" endtime="20201115 22:59:59.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.414" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.413" endtime="20201115 22:59:59.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.416" level="INFO">VALUE: [5.095800000000025e-05, 5.108399999999985e-05, 5.070899999999948e-05, 5.124999999999921e-05, 5.112499999999909e-05, 5.041700000000052e-05, 5.051299999999856e-05, 5.058299999999988e-05, 5.0708e-05, 5.076399999999828e-05, 5.073599999999914e-05, 5.127799999999835e-05, 5.040299999999748e-05, 5.133300000000063e-05, 5.124999999999921e-05, 5.090300000000145e-05, 5.0695000000003376e-05, 5.048599999999889e-05, 5.090300000000145e-05, 5.118099999999737e-05, 5.050000000000193e-05, 5.074999999999871e-05, 5.076399999999828e-05, 5.0929999999997644e-05, 5.116600000000179e-05, 5.13470000000002e-05, 5.109699999999995e-05, 5.073599999999914e-05, 5.077800000000132e-05, 5.091700000000102e-05, 5.069499999999991e-05, 5.133300000000063e-05, 5.041700000000052e-05, 5.118100000000084e-05, 5.050000000000193e-05, 5.059799999999892e-05, 5.124999999999921e-05, 5.109699999999995e-05, 5.126400000000225e-05, 5.127800000000182e-05, 5.043000000000061e-05, 5.06530000000012e-05, 5.052800000000107e-05, 5.058299999999988e-05, 5.058299999999988e-05, 5.091700000000102e-05, 5.11669999999978e-05, 5.05140000000015e-05, 5.041700000000052e-05, 5.066700000000077e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.415" endtime="20201115 22:59:59.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.410" endtime="20201115 22:59:59.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.419" endtime="20201115 22:59:59.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.423" endtime="20201115 22:59:59.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.421" endtime="20201115 22:59:59.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.418" endtime="20201115 22:59:59.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.054" endtime="20201115 22:59:59.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.052" endtime="20201115 22:59:59.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.052" endtime="20201115 22:59:59.444"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.446" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.455" endtime="20201115 22:59:59.473"></status>
</kw>
<msg timestamp="20201115 22:59:59.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.453" endtime="20201115 22:59:59.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.475" endtime="20201115 22:59:59.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.478" endtime="20201115 22:59:59.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.451" endtime="20201115 22:59:59.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.448" endtime="20201115 22:59:59.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.487" endtime="20201115 22:59:59.774"></status>
</kw>
<msg timestamp="20201115 22:59:59.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025103597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025155889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.485" endtime="20201115 22:59:59.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025103597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025155889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.779" endtime="20201115 22:59:59.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.788" endtime="20201115 22:59:59.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.483" endtime="20201115 22:59:59.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.481" endtime="20201115 22:59:59.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.795" level="INFO">${RESULT} = [{'time': 0.025155889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.229200000000239e-05, 'source_diff': 5.229200000000239e-05}, {'time': 0.025226903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:59.791" endtime="20201115 22:59:59.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.810" level="INFO">${ACCURACY} = {'diff': [5.229200000000239e-05, 5.229199999999892e-05, 5.158400000000035e-05, 5.162499999999959e-05, 5.138899999999891e-05, 5.21669999999988e-05, 5.1665999999998824e-05, 5.149999999999946e-05, 5.2097...</msg>
<status status="PASS" starttime="20201115 22:59:59.796" endtime="20201115 22:59:59.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.816" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.814" endtime="20201115 22:59:59.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.819" level="INFO">VALUE: [5.229200000000239e-05, 5.229199999999892e-05, 5.158400000000035e-05, 5.162499999999959e-05, 5.138899999999891e-05, 5.21669999999988e-05, 5.1665999999998824e-05, 5.149999999999946e-05, 5.209700000000095e-05, 5.173600000000014e-05, 5.159700000000045e-05, 5.159700000000045e-05, 5.226399999999978e-05, 5.209699999999748e-05, 5.205600000000171e-05, 5.213899999999966e-05, 5.158299999999741e-05, 5.174999999999971e-05, 5.143100000000109e-05, 5.198600000000039e-05, 5.211100000000052e-05, 5.158299999999741e-05, 5.133300000000063e-05, 5.151399999999903e-05, 5.209700000000095e-05, 5.1929999999998644e-05, 5.212500000000009e-05, 5.163900000000263e-05, 5.184699999999723e-05, 5.225000000000021e-05, 5.225000000000021e-05, 5.140300000000195e-05, 5.223600000000064e-05, 5.201399999999953e-05, 5.174999999999971e-05, 5.174999999999971e-05, 5.141699999999805e-05, 5.2151999999999754e-05, 5.2165999999999324e-05, 5.158300000000088e-05, 5.177799999999885e-05, 5.225000000000021e-05, 5.140299999999848e-05, 5.219500000000141e-05, 5.199999999999996e-05, 5.141700000000152e-05, 5.21669999999988e-05, 5.176399999999928e-05, 5.173600000000014e-05, 5.157000000000078e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.817" endtime="20201115 22:59:59.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.811" endtime="20201115 22:59:59.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.823" endtime="20201115 22:59:59.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.828" endtime="20201115 22:59:59.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.826" endtime="20201115 22:59:59.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.821" endtime="20201115 22:59:59.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.447" endtime="20201115 22:59:59.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.445" endtime="20201115 22:59:59.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.444" endtime="20201115 22:59:59.849"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.852" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.861" endtime="20201115 22:59:59.879"></status>
</kw>
<msg timestamp="20201115 22:59:59.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.859" endtime="20201115 22:59:59.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.880" endtime="20201115 22:59:59.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.883" endtime="20201115 22:59:59.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.856" endtime="20201115 22:59:59.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.854" endtime="20201115 22:59:59.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.892" endtime="20201115 23:00:00.178"></status>
</kw>
<msg timestamp="20201115 23:00:00.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025695792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025748264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.891" endtime="20201115 23:00:00.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025695792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025748264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.183" endtime="20201115 23:00:00.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.192" endtime="20201115 23:00:00.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.888" endtime="20201115 23:00:00.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.886" endtime="20201115 23:00:00.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.198" level="INFO">${RESULT} = [{'time': 0.025748264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.247200000000132e-05, 'source_diff': 5.247200000000132e-05}, {'time': 0.025821264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:00.195" endtime="20201115 23:00:00.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.212" level="INFO">${ACCURACY} = {'diff': [5.247200000000132e-05, 5.309699999999848e-05, 5.2471999999997854e-05, 5.269500000000191e-05, 5.30280000000001e-05, 5.300000000000096e-05, 5.277700000000038e-05, 5.255500000000274e-05, 5.2610...</msg>
<status status="PASS" starttime="20201115 23:00:00.200" endtime="20201115 23:00:00.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.217" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.216" endtime="20201115 23:00:00.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.220" level="INFO">VALUE: [5.247200000000132e-05, 5.309699999999848e-05, 5.2471999999997854e-05, 5.269500000000191e-05, 5.30280000000001e-05, 5.300000000000096e-05, 5.277700000000038e-05, 5.255500000000274e-05, 5.261099999999755e-05, 5.258300000000188e-05, 5.2429999999999144e-05, 5.3193999999999464e-05, 5.290299999999998e-05, 5.309700000000195e-05, 5.275000000000071e-05, 5.326400000000078e-05, 5.313899999999719e-05, 5.256999999999831e-05, 5.256999999999831e-05, 5.275000000000071e-05, 5.240299999999948e-05, 5.298700000000087e-05, 5.258400000000135e-05, 5.258299999999841e-05, 5.273600000000114e-05, 5.2735999999997674e-05, 5.2929999999999644e-05, 5.250000000000046e-05, 5.275000000000071e-05, 5.241699999999905e-05, 5.297200000000182e-05, 5.325000000000121e-05, 5.326400000000078e-05, 5.309699999999848e-05, 5.290299999999998e-05, 5.31669999999998e-05, 5.26669999999993e-05, 5.333399999999863e-05, 5.325000000000121e-05, 5.312500000000109e-05, 5.325000000000121e-05, 5.290299999999998e-05, 5.331899999999959e-05, 5.241700000000252e-05, 5.266700000000277e-05, 5.275000000000071e-05, 5.243100000000209e-05, 5.265299999999973e-05, 5.30280000000001e-05, 5.258400000000135e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.218" endtime="20201115 23:00:00.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.213" endtime="20201115 23:00:00.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.223" endtime="20201115 23:00:00.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.228" endtime="20201115 23:00:00.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.226" endtime="20201115 23:00:00.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.221" endtime="20201115 23:00:00.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.852" endtime="20201115 23:00:00.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.850" endtime="20201115 23:00:00.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.849" endtime="20201115 23:00:00.250"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.253" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.261" endtime="20201115 23:00:00.279"></status>
</kw>
<msg timestamp="20201115 23:00:00.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.260" endtime="20201115 23:00:00.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.281" endtime="20201115 23:00:00.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.284" endtime="20201115 23:00:00.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.257" endtime="20201115 23:00:00.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.255" endtime="20201115 23:00:00.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.293" endtime="20201115 23:00:00.580"></status>
</kw>
<msg timestamp="20201115 23:00:00.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025872625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025926083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.292" endtime="20201115 23:00:00.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025872625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025926083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.585" endtime="20201115 23:00:00.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.593" endtime="20201115 23:00:00.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.289" endtime="20201115 23:00:00.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.287" endtime="20201115 23:00:00.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.600" level="INFO">${RESULT} = [{'time': 0.025926083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3457999999999284e-05, 'source_diff': 5.3457999999999284e-05}, {'time': 0.026003083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:00.597" endtime="20201115 23:00:00.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.614" level="INFO">${ACCURACY} = {'diff': [5.3457999999999284e-05, 5.4249999999998744e-05, 5.4235999999999174e-05, 5.341700000000005e-05, 5.433300000000016e-05, 5.358299999999941e-05, 5.420899999999951e-05, 5.408400000000285e-05, 5.4...</msg>
<status status="PASS" starttime="20201115 23:00:00.601" endtime="20201115 23:00:00.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.619" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.618" endtime="20201115 23:00:00.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.622" level="INFO">VALUE: [5.3457999999999284e-05, 5.4249999999998744e-05, 5.4235999999999174e-05, 5.341700000000005e-05, 5.433300000000016e-05, 5.358299999999941e-05, 5.420899999999951e-05, 5.408400000000285e-05, 5.4249999999998744e-05, 5.393100000000012e-05, 5.415299999999776e-05, 5.43479999999992e-05, 5.4277999999997883e-05, 5.350000000000146e-05, 5.426400000000178e-05, 5.409699999999948e-05, 5.3430000000000144e-05, 5.355599999999974e-05, 5.359699999999898e-05, 5.408299999999991e-05, 5.355599999999974e-05, 5.343100000000309e-05, 5.35280000000006e-05, 5.408399999999938e-05, 5.381900000000009e-05, 5.391699999999708e-05, 5.41670000000008e-05, 5.437499999999887e-05, 5.408299999999991e-05, 5.3416000000000574e-05, 5.3485999999998424e-05, 5.381999999999956e-05, 5.409699999999948e-05, 5.3443999999999714e-05, 5.41670000000008e-05, 5.419499999999994e-05, 5.426400000000178e-05, 5.373600000000214e-05, 5.393100000000012e-05, 5.3485999999998424e-05, 5.413900000000166e-05, 5.426300000000231e-05, 5.375000000000171e-05, 5.35410000000007e-05, 5.429200000000092e-05, 5.359700000000245e-05, 5.376400000000128e-05, 5.358300000000288e-05, 5.408299999999991e-05, 5.341700000000005e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.620" endtime="20201115 23:00:00.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.615" endtime="20201115 23:00:00.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.625" endtime="20201115 23:00:00.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.629" endtime="20201115 23:00:00.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.627" endtime="20201115 23:00:00.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.624" endtime="20201115 23:00:00.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.253" endtime="20201115 23:00:00.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.251" endtime="20201115 23:00:00.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.251" endtime="20201115 23:00:00.650"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.653" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.661" endtime="20201115 23:00:00.678"></status>
</kw>
<msg timestamp="20201115 23:00:00.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.660" endtime="20201115 23:00:00.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.680" endtime="20201115 23:00:00.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.683" endtime="20201115 23:00:00.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.657" endtime="20201115 23:00:00.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.655" endtime="20201115 23:00:00.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.692" endtime="20201115 23:00:00.978"></status>
</kw>
<msg timestamp="20201115 23:00:00.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025049097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025103903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.691" endtime="20201115 23:00:00.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025049097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025103903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.983" endtime="20201115 23:00:00.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.991" endtime="20201115 23:00:00.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.688" endtime="20201115 23:00:00.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.686" endtime="20201115 23:00:00.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.998" level="INFO">${RESULT} = [{'time': 0.025103903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.480600000000099e-05, 'source_diff': 5.480600000000099e-05}, {'time': 0.025181903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:00.995" endtime="20201115 23:00:00.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.012" level="INFO">${ACCURACY} = {'diff': [5.480600000000099e-05, 5.5249999999999744e-05, 5.5222000000000604e-05, 5.493100000000112e-05, 5.483400000000013e-05, 5.441699999999758e-05, 5.4735999999999674e-05, 5.484700000000023e-05, 5.4...</msg>
<status status="PASS" starttime="20201115 23:00:00.999" endtime="20201115 23:00:01.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.017" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.016" endtime="20201115 23:00:01.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.020" level="INFO">VALUE: [5.480600000000099e-05, 5.5249999999999744e-05, 5.5222000000000604e-05, 5.493100000000112e-05, 5.483400000000013e-05, 5.441699999999758e-05, 5.4735999999999674e-05, 5.484700000000023e-05, 5.4930000000001644e-05, 5.5013999999999064e-05, 5.441700000000105e-05, 5.4999999999999494e-05, 5.461099999999955e-05, 5.437499999999887e-05, 5.468100000000087e-05, 5.518100000000137e-05, 5.533400000000063e-05, 5.472300000000305e-05, 5.490300000000198e-05, 5.530600000000149e-05, 5.4444000000000714e-05, 5.534700000000073e-05, 5.487499999999937e-05, 5.4680000000001394e-05, 5.4666000000001824e-05, 5.4513999999998564e-05, 5.5263999999999314e-05, 5.508300000000091e-05, 5.511100000000005e-05, 5.5277999999998884e-05, 5.4901999999999035e-05, 5.5249999999999744e-05, 5.476400000000228e-05, 5.477700000000238e-05, 5.476299999999934e-05, 5.459699999999998e-05, 5.508300000000091e-05, 5.5249999999999744e-05, 5.526400000000278e-05, 5.508300000000091e-05, 5.48609999999998e-05, 5.51670000000018e-05, 5.5013999999999064e-05, 5.444500000000019e-05, 5.48479999999997e-05, 5.5236000000000174e-05, 5.444500000000019e-05, 5.483400000000013e-05, 5.456900000000084e-05, 5.508299999999744e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.018" endtime="20201115 23:00:01.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.013" endtime="20201115 23:00:01.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.023" endtime="20201115 23:00:01.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.027" endtime="20201115 23:00:01.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.025" endtime="20201115 23:00:01.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.022" endtime="20201115 23:00:01.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.654" endtime="20201115 23:00:01.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.651" endtime="20201115 23:00:01.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.651" endtime="20201115 23:00:01.049"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.053" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.065" endtime="20201115 23:00:01.085"></status>
</kw>
<msg timestamp="20201115 23:00:01.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.062" endtime="20201115 23:00:01.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.089" endtime="20201115 23:00:01.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.093" endtime="20201115 23:00:01.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.059" endtime="20201115 23:00:01.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.056" endtime="20201115 23:00:01.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.107" endtime="20201115 23:00:01.393"></status>
</kw>
<msg timestamp="20201115 23:00:01.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031781292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031836944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.105" endtime="20201115 23:00:01.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031781292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031836944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.398" endtime="20201115 23:00:01.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.407" endtime="20201115 23:00:01.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.100" endtime="20201115 23:00:01.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.098" endtime="20201115 23:00:01.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.414" level="INFO">${RESULT} = [{'time': 0.031836944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5651999999996316e-05, 'source_diff': 5.5651999999996316e-05}, {'time': 0.031907931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:01.410" endtime="20201115 23:00:01.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.429" level="INFO">${ACCURACY} = {'diff': [5.5651999999996316e-05, 5.6250000000000744e-05, 5.555600000000521e-05, 5.5901999999996566e-05, 5.6014000000000064e-05, 5.5750000000000244e-05, 5.608300000000538e-05, 5.611099999999758e-05, 5...</msg>
<status status="PASS" starttime="20201115 23:00:01.415" endtime="20201115 23:00:01.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.434" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.433" endtime="20201115 23:00:01.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.436" level="INFO">VALUE: [5.5651999999996316e-05, 5.6250000000000744e-05, 5.555600000000521e-05, 5.5901999999996566e-05, 5.6014000000000064e-05, 5.5750000000000244e-05, 5.608300000000538e-05, 5.611099999999758e-05, 5.608299999999844e-05, 5.6305999999999023e-05, 5.608299999999844e-05, 5.5527999999999134e-05, 5.611099999999758e-05, 5.558399999999741e-05, 5.558399999999741e-05, 5.6250000000000744e-05, 5.5915999999996135e-05, 5.636099999999783e-05, 5.551300000000009e-05, 5.5750000000000244e-05, 5.609699999999801e-05, 5.6264000000000314e-05, 5.5929999999995705e-05, 5.583300000000513e-05, 5.6264000000000314e-05, 5.6000000000000494e-05, 5.5763999999999814e-05, 5.609800000000442e-05, 5.591699999999561e-05, 5.593100000000212e-05, 5.627700000000041e-05, 5.626300000000084e-05, 5.5750000000000244e-05, 5.5430000000002144e-05, 5.6180000000002894e-05, 5.6180000000002894e-05, 5.631899999999912e-05, 5.556900000000531e-05, 5.561100000000402e-05, 5.6236000000001174e-05, 5.590300000000298e-05, 5.568100000000187e-05, 5.5499999999999994e-05, 5.6277999999999884e-05, 5.608400000000485e-05, 5.6250000000000744e-05, 5.5750000000000244e-05, 5.627700000000041e-05, 5.6014000000000064e-05, 5.608300000000538e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.435" endtime="20201115 23:00:01.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.430" endtime="20201115 23:00:01.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.440" endtime="20201115 23:00:01.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.443" endtime="20201115 23:00:01.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.442" endtime="20201115 23:00:01.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.438" endtime="20201115 23:00:01.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.054" endtime="20201115 23:00:01.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.051" endtime="20201115 23:00:01.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.050" endtime="20201115 23:00:01.465"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.467" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.476" endtime="20201115 23:00:01.494"></status>
</kw>
<msg timestamp="20201115 23:00:01.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.474" endtime="20201115 23:00:01.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.495" endtime="20201115 23:00:01.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.498" endtime="20201115 23:00:01.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.472" endtime="20201115 23:00:01.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.469" endtime="20201115 23:00:01.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.508" endtime="20201115 23:00:01.795"></status>
</kw>
<msg timestamp="20201115 23:00:01.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025212167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:01.506" endtime="20201115 23:00:01.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025212167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:01.800" endtime="20201115 23:00:01.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.809" endtime="20201115 23:00:01.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.503" endtime="20201115 23:00:01.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.501" endtime="20201115 23:00:01.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.816" level="INFO">${RESULT} = [{'time': 0.025212167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.716700000000033e-05, 'source_diff': 5.716700000000033e-05}, {'time': 0.025285139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:01.812" endtime="20201115 23:00:01.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.830" level="INFO">${ACCURACY} = {'diff': [5.716700000000033e-05, 5.657000000000231e-05, 5.7250000000001744e-05, 5.691700000000008e-05, 5.6986000000001924e-05, 5.641699999999958e-05, 5.7193999999999995e-05, 5.682000000000256e-05, 5.7...</msg>
<status status="PASS" starttime="20201115 23:00:01.817" endtime="20201115 23:00:01.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.834" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.833" endtime="20201115 23:00:01.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.837" level="INFO">VALUE: [5.716700000000033e-05, 5.657000000000231e-05, 5.7250000000001744e-05, 5.691700000000008e-05, 5.6986000000001924e-05, 5.641699999999958e-05, 5.7193999999999995e-05, 5.682000000000256e-05, 5.70550000000003e-05, 5.7264000000001314e-05, 5.6902000000001035e-05, 5.73610000000023e-05, 5.708299999999944e-05, 5.6735999999998205e-05, 5.709699999999901e-05, 5.708300000000291e-05, 5.690300000000051e-05, 5.6693999999999495e-05, 5.662499999999765e-05, 5.66809999999994e-05, 5.736099999999883e-05, 5.723700000000165e-05, 5.659700000000198e-05, 5.6750000000001244e-05, 5.658299999999894e-05, 5.732000000000306e-05, 5.7028000000000634e-05, 5.708299999999944e-05, 5.7013999999997594e-05, 5.683299999999919e-05, 5.6777999999996914e-05, 5.6778000000000384e-05, 5.693099999999965e-05, 5.68480000000017e-05, 5.658399999999841e-05, 5.708400000000238e-05, 5.665300000000026e-05, 5.708299999999944e-05, 5.7263999999997844e-05, 5.684699999999876e-05, 5.7278000000000884e-05, 5.6763999999997344e-05, 5.7042000000000204e-05, 5.708299999999944e-05, 5.643099999999915e-05, 5.666699999999983e-05, 5.716699999999686e-05, 5.734799999999873e-05, 5.711100000000205e-05, 5.661100000000155e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.836" endtime="20201115 23:00:01.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.831" endtime="20201115 23:00:01.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.840" endtime="20201115 23:00:01.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.844" endtime="20201115 23:00:01.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.842" endtime="20201115 23:00:01.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.839" endtime="20201115 23:00:01.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.468" endtime="20201115 23:00:01.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.466" endtime="20201115 23:00:01.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.465" endtime="20201115 23:00:01.865"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.868" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.876" endtime="20201115 23:00:01.895"></status>
</kw>
<msg timestamp="20201115 23:00:01.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.875" endtime="20201115 23:00:01.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.897" endtime="20201115 23:00:01.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.899" endtime="20201115 23:00:01.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.872" endtime="20201115 23:00:01.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.870" endtime="20201115 23:00:01.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.910" endtime="20201115 23:00:02.197"></status>
</kw>
<msg timestamp="20201115 23:00:02.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025200819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025258764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.907" endtime="20201115 23:00:02.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025200819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025258764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.201" endtime="20201115 23:00:02.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.210" endtime="20201115 23:00:02.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.905" endtime="20201115 23:00:02.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.903" endtime="20201115 23:00:02.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.217" level="INFO">${RESULT} = [{'time': 0.025258764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.794500000000022e-05, 'source_diff': 5.794500000000022e-05}, {'time': 0.025331778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:02.213" endtime="20201115 23:00:02.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.231" level="INFO">${ACCURACY} = {'diff': [5.794500000000022e-05, 5.759699999999951e-05, 5.78610000000028e-05, 5.8000000000002494e-05, 5.78749999999989e-05, 5.7666000000001355e-05, 5.8180000000001425e-05, 5.7680000000000925e-05, 5.81...</msg>
<status status="PASS" starttime="20201115 23:00:02.218" endtime="20201115 23:00:02.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.235" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.234" endtime="20201115 23:00:02.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.238" level="INFO">VALUE: [5.794500000000022e-05, 5.759699999999951e-05, 5.78610000000028e-05, 5.8000000000002494e-05, 5.78749999999989e-05, 5.7666000000001355e-05, 5.8180000000001425e-05, 5.7680000000000925e-05, 5.8151999999998816e-05, 5.784699999999976e-05, 5.763899999999822e-05, 5.7763999999998344e-05, 5.7763999999998344e-05, 5.8249999999999275e-05, 5.7735999999999205e-05, 5.779100000000148e-05, 5.7457999999999815e-05, 5.7499999999998525e-05, 5.759799999999898e-05, 5.8250000000002744e-05, 5.7430000000000675e-05, 5.7527999999997664e-05, 5.741700000000058e-05, 5.815300000000176e-05, 5.784699999999976e-05, 5.808299999999697e-05, 5.809700000000001e-05, 5.811100000000305e-05, 5.7569999999999844e-05, 5.8263999999998844e-05, 5.743100000000015e-05, 5.766700000000083e-05, 5.784799999999923e-05, 5.808300000000044e-05, 5.7750000000002244e-05, 5.809700000000001e-05, 5.7430000000000675e-05, 5.7735999999999205e-05, 5.7694000000000495e-05, 5.8013999999998594e-05, 5.793099999999718e-05, 5.766700000000083e-05, 5.7805999999997054e-05, 5.7763999999998344e-05, 5.8083999999999913e-05, 5.8250000000002744e-05, 5.759799999999898e-05, 5.741700000000058e-05, 5.8165999999998386e-05, 5.8042000000001204e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.237" endtime="20201115 23:00:02.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.232" endtime="20201115 23:00:02.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.241" endtime="20201115 23:00:02.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.245" endtime="20201115 23:00:02.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.243" endtime="20201115 23:00:02.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.240" endtime="20201115 23:00:02.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.868" endtime="20201115 23:00:02.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.866" endtime="20201115 23:00:02.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.865" endtime="20201115 23:00:02.266"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.269" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.277" endtime="20201115 23:00:02.294"></status>
</kw>
<msg timestamp="20201115 23:00:02.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.276" endtime="20201115 23:00:02.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.296" endtime="20201115 23:00:02.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.307" endtime="20201115 23:00:02.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.273" endtime="20201115 23:00:02.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.271" endtime="20201115 23:00:02.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.316" endtime="20201115 23:00:02.603"></status>
</kw>
<msg timestamp="20201115 23:00:02.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024856319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024914778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.315" endtime="20201115 23:00:02.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024856319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024914778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.607" endtime="20201115 23:00:02.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.616" endtime="20201115 23:00:02.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.312" endtime="20201115 23:00:02.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.310" endtime="20201115 23:00:02.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.623" level="INFO">${RESULT} = [{'time': 0.024914778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.845899999999682e-05, 'source_diff': 5.845899999999682e-05}, {'time': 0.024990792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:02.619" endtime="20201115 23:00:02.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.637" level="INFO">${ACCURACY} = {'diff': [5.845899999999682e-05, 5.9084000000000914e-05, 5.911100000000058e-05, 5.8584000000000414e-05, 5.8416000000002105e-05, 5.886100000000033e-05, 5.8415999999998636e-05, 5.883299999999772e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:00:02.624" endtime="20201115 23:00:02.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.642" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.640" endtime="20201115 23:00:02.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.644" level="INFO">VALUE: [5.845899999999682e-05, 5.9084000000000914e-05, 5.911100000000058e-05, 5.8584000000000414e-05, 5.8416000000002105e-05, 5.886100000000033e-05, 5.8415999999998636e-05, 5.883299999999772e-05, 5.886100000000033e-05, 5.933300000000169e-05, 5.8736000000000205e-05, 5.911100000000058e-05, 5.9249999999996805e-05, 5.909700000000101e-05, 5.9194999999998e-05, 5.891700000000208e-05, 5.894499999999775e-05, 5.866699999999836e-05, 5.8915999999999136e-05, 5.9151999999999816e-05, 5.8499999999999525e-05, 5.908300000000144e-05, 5.90689999999984e-05, 5.858300000000094e-05, 5.908300000000144e-05, 5.9222000000001135e-05, 5.9250000000000275e-05, 5.9264000000003314e-05, 5.843100000000115e-05, 5.8848000000000233e-05, 5.9097999999997014e-05, 5.859700000000051e-05, 5.9250000000000275e-05, 5.8848000000000233e-05, 5.8943999999998276e-05, 5.9165999999999386e-05, 5.8708000000001065e-05, 5.8777999999998914e-05, 5.890299999999904e-05, 5.919500000000147e-05, 5.9000000000000025e-05, 5.8584000000000414e-05, 5.841699999999811e-05, 5.888900000000294e-05, 5.877700000000291e-05, 5.912500000000015e-05, 5.8736000000000205e-05, 5.8736000000000205e-05, 5.8929999999998706e-05, 5.934700000000126e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.643" endtime="20201115 23:00:02.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.638" endtime="20201115 23:00:02.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.647" endtime="20201115 23:00:02.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.651" endtime="20201115 23:00:02.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.649" endtime="20201115 23:00:02.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.646" endtime="20201115 23:00:02.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.269" endtime="20201115 23:00:02.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.267" endtime="20201115 23:00:02.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.267" endtime="20201115 23:00:02.672"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.675" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.684" endtime="20201115 23:00:02.703"></status>
</kw>
<msg timestamp="20201115 23:00:02.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.682" endtime="20201115 23:00:02.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.704" endtime="20201115 23:00:02.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.707" endtime="20201115 23:00:02.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.679" endtime="20201115 23:00:02.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.677" endtime="20201115 23:00:02.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.717" endtime="20201115 23:00:03.003"></status>
</kw>
<msg timestamp="20201115 23:00:03.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0263525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026412639, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:02.715" endtime="20201115 23:00:03.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0263525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026412639, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:03.008" endtime="20201115 23:00:03.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.016" endtime="20201115 23:00:03.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.712" endtime="20201115 23:00:03.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.711" endtime="20201115 23:00:03.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.023" level="INFO">${RESULT} = [{'time': 0.026412639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.013900000000072e-05, 'source_diff': 6.013900000000072e-05}, {'time': 0.026491639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:03.020" endtime="20201115 23:00:03.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.039" level="INFO">${ACCURACY} = {'diff': [6.013900000000072e-05, 5.993099999999918e-05, 6.020900000000204e-05, 5.941700000000258e-05, 5.968099999999893e-05, 5.9486000000000955e-05, 5.9402000000000066e-05, 6.002700000000069e-05, 5.95...</msg>
<status status="PASS" starttime="20201115 23:00:03.024" endtime="20201115 23:00:03.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.043" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.042" endtime="20201115 23:00:03.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.046" level="INFO">VALUE: [6.013900000000072e-05, 5.993099999999918e-05, 6.020900000000204e-05, 5.941700000000258e-05, 5.968099999999893e-05, 5.9486000000000955e-05, 5.9402000000000066e-05, 6.002700000000069e-05, 5.958299999999847e-05, 5.958299999999847e-05, 5.9486000000000955e-05, 6.0166000000000386e-05, 5.9514000000000095e-05, 6.008299999999897e-05, 5.943099999999868e-05, 5.986100000000133e-05, 5.991700000000308e-05, 6.0320000000002594e-05, 6.0112000000001053e-05, 6.0084000000001914e-05, 6.0263999999997375e-05, 6.034699999999879e-05, 6.008299999999897e-05, 5.9750000000000775e-05, 6.009700000000201e-05, 5.9415999999999636e-05, 6.033299999999922e-05, 6.009700000000201e-05, 5.941699999999911e-05, 6.0278000000000415e-05, 5.993099999999918e-05, 5.9806000000002524e-05, 6.027700000000094e-05, 5.959699999999804e-05, 5.9749999999997305e-05, 6.0250000000001275e-05, 5.959699999999804e-05, 6.0250000000001275e-05, 6.0278000000000415e-05, 5.984699999999829e-05, 5.9750000000000775e-05, 5.994499999999875e-05, 5.984699999999829e-05, 6.008299999999897e-05, 6.0278000000000415e-05, 5.9764000000000345e-05, 5.993099999999918e-05, 6.0000000000001025e-05, 5.973700000000068e-05, 5.9750000000000775e-05]</msg>
<status status="PASS" starttime="20201115 23:00:03.044" endtime="20201115 23:00:03.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.040" endtime="20201115 23:00:03.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.049" endtime="20201115 23:00:03.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.053" endtime="20201115 23:00:03.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.051" endtime="20201115 23:00:03.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.047" endtime="20201115 23:00:03.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.675" endtime="20201115 23:00:03.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.673" endtime="20201115 23:00:03.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.673" endtime="20201115 23:00:03.075"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.077" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.086" endtime="20201115 23:00:03.104"></status>
</kw>
<msg timestamp="20201115 23:00:03.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.084" endtime="20201115 23:00:03.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.106" endtime="20201115 23:00:03.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.109" endtime="20201115 23:00:03.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.082" endtime="20201115 23:00:03.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.079" endtime="20201115 23:00:03.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.118" endtime="20201115 23:00:03.405"></status>
</kw>
<msg timestamp="20201115 23:00:03.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025537375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025597958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.117" endtime="20201115 23:00:03.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025537375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025597958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.409" endtime="20201115 23:00:03.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.418" endtime="20201115 23:00:03.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.114" endtime="20201115 23:00:03.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.112" endtime="20201115 23:00:03.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.425" level="INFO">${RESULT} = [{'time': 0.025597958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.058299999999947e-05, 'source_diff': 6.058299999999947e-05}, {'time': 0.025680986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:03.421" endtime="20201115 23:00:03.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.439" level="INFO">${ACCURACY} = {'diff': [6.058299999999947e-05, 6.0749999999998305e-05, 6.0819999999999624e-05, 6.0694000000000026e-05, 6.127800000000141e-05, 6.0764000000001345e-05, 6.0569999999999374e-05, 6.0750000000001775e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:03.426" endtime="20201115 23:00:03.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.444" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.442" endtime="20201115 23:00:03.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.446" level="INFO">VALUE: [6.058299999999947e-05, 6.0749999999998305e-05, 6.0819999999999624e-05, 6.0694000000000026e-05, 6.127800000000141e-05, 6.0764000000001345e-05, 6.0569999999999374e-05, 6.0750000000001775e-05, 6.0583999999998944e-05, 6.0528000000000665e-05, 6.0597999999998514e-05, 6.0430000000000206e-05, 6.080499999999711e-05, 6.109700000000301e-05, 6.126399999999838e-05, 6.090300000000104e-05, 6.1027999999997695e-05, 6.058299999999947e-05, 6.094499999999975e-05, 6.0499999999998055e-05, 6.059699999999904e-05, 6.0612000000001554e-05, 6.093100000000018e-05, 6.116700000000086e-05, 6.136099999999936e-05, 6.059700000000251e-05, 6.12499999999988e-05, 6.058299999999947e-05, 6.0430000000000206e-05, 6.0514000000001095e-05, 6.0763999999997875e-05, 6.061100000000208e-05, 6.063899999999775e-05, 6.106999999999987e-05, 6.111099999999911e-05, 6.090300000000104e-05, 6.13339999999997e-05, 6.059700000000251e-05, 6.0916000000001136e-05, 6.134699999999979e-05, 6.0430000000000206e-05, 6.081900000000015e-05, 6.12499999999988e-05, 6.126400000000184e-05, 6.108299999999997e-05, 6.093100000000018e-05, 6.1013999999998125e-05, 6.03750000000014e-05, 6.13339999999997e-05, 6.104200000000073e-05]</msg>
<status status="PASS" starttime="20201115 23:00:03.445" endtime="20201115 23:00:03.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.440" endtime="20201115 23:00:03.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.450" endtime="20201115 23:00:03.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.453" endtime="20201115 23:00:03.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.452" endtime="20201115 23:00:03.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.448" endtime="20201115 23:00:03.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.078" endtime="20201115 23:00:03.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.076" endtime="20201115 23:00:03.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.075" endtime="20201115 23:00:03.475"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.477" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.486" endtime="20201115 23:00:03.504"></status>
</kw>
<msg timestamp="20201115 23:00:03.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.484" endtime="20201115 23:00:03.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.506" endtime="20201115 23:00:03.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.508" endtime="20201115 23:00:03.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.481" endtime="20201115 23:00:03.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.479" endtime="20201115 23:00:03.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.518" endtime="20201115 23:00:03.804"></status>
</kw>
<msg timestamp="20201115 23:00:03.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024790778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024852278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.516" endtime="20201115 23:00:03.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024790778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024852278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.808" endtime="20201115 23:00:03.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.817" endtime="20201115 23:00:03.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.514" endtime="20201115 23:00:03.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.512" endtime="20201115 23:00:03.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.824" level="INFO">${RESULT} = [{'time': 0.024852278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.149999999999906e-05, 'source_diff': 6.149999999999906e-05}, {'time': 0.02493425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:03.821" endtime="20201115 23:00:03.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.838" level="INFO">${ACCURACY} = {'diff': [6.149999999999906e-05, 6.158300000000047e-05, 6.176400000000234e-05, 6.226400000000284e-05, 6.22499999999998e-05, 6.191699999999814e-05, 6.201299999999965e-05, 6.225000000000327e-05, 6.20970...</msg>
<status status="PASS" starttime="20201115 23:00:03.825" endtime="20201115 23:00:03.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.843" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.842" endtime="20201115 23:00:03.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.846" level="INFO">VALUE: [6.149999999999906e-05, 6.158300000000047e-05, 6.176400000000234e-05, 6.226400000000284e-05, 6.22499999999998e-05, 6.191699999999814e-05, 6.201299999999965e-05, 6.225000000000327e-05, 6.209700000000054e-05, 6.229200000000198e-05, 6.13750000000024e-05, 6.169399999999756e-05, 6.20140000000026e-05, 6.20829999999975e-05, 6.143100000000068e-05, 6.233299999999775e-05, 6.173599999999974e-05, 6.208400000000044e-05, 6.177799999999845e-05, 6.141700000000111e-05, 6.166600000000189e-05, 6.154199999999777e-05, 6.191600000000214e-05, 6.183300000000072e-05, 6.162500000000265e-05, 6.20690000000014e-05, 6.191700000000161e-05, 6.233299999999775e-05, 6.17499999999993e-05, 6.194500000000075e-05, 6.161100000000308e-05, 6.205500000000183e-05, 6.158399999999994e-05, 6.191700000000161e-05, 6.191699999999814e-05, 6.191599999999867e-05, 6.168000000000146e-05, 6.20140000000026e-05, 6.187499999999943e-05, 6.199999999999956e-05, 6.143099999999721e-05, 6.215299999999882e-05, 6.16950000000005e-05, 6.151399999999863e-05, 6.188900000000247e-05, 6.151399999999863e-05, 6.193100000000118e-05, 6.165299999999832e-05, 6.234700000000079e-05, 6.176400000000234e-05]</msg>
<status status="PASS" starttime="20201115 23:00:03.844" endtime="20201115 23:00:03.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.839" endtime="20201115 23:00:03.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.849" endtime="20201115 23:00:03.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.853" endtime="20201115 23:00:03.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.851" endtime="20201115 23:00:03.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.847" endtime="20201115 23:00:03.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.478" endtime="20201115 23:00:03.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.476" endtime="20201115 23:00:03.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.475" endtime="20201115 23:00:03.874"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.877" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.885" endtime="20201115 23:00:03.904"></status>
</kw>
<msg timestamp="20201115 23:00:03.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.884" endtime="20201115 23:00:03.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.906" endtime="20201115 23:00:03.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.908" endtime="20201115 23:00:03.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.881" endtime="20201115 23:00:03.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.879" endtime="20201115 23:00:03.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.918" endtime="20201115 23:00:04.204"></status>
</kw>
<msg timestamp="20201115 23:00:04.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024907, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024970097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:03.916" endtime="20201115 23:00:04.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024907, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024970097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:04.208" endtime="20201115 23:00:04.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.217" endtime="20201115 23:00:04.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.914" endtime="20201115 23:00:04.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.912" endtime="20201115 23:00:04.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.224" level="INFO">${RESULT} = [{'time': 0.024970097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.309700000000154e-05, 'source_diff': 6.309700000000154e-05}, {'time': 0.025056097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:04.220" endtime="20201115 23:00:04.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.238" level="INFO">${ACCURACY} = {'diff': [6.309700000000154e-05, 6.27500000000003e-05, 6.243100000000168e-05, 6.286099999999739e-05, 6.24439999999983e-05, 6.26950000000015e-05, 6.248600000000049e-05, 6.276399999999988e-05, 6.3194999...</msg>
<status status="PASS" starttime="20201115 23:00:04.225" endtime="20201115 23:00:04.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.243" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.242" endtime="20201115 23:00:04.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.245" level="INFO">VALUE: [6.309700000000154e-05, 6.27500000000003e-05, 6.243100000000168e-05, 6.286099999999739e-05, 6.24439999999983e-05, 6.26950000000015e-05, 6.248600000000049e-05, 6.276399999999988e-05, 6.319499999999853e-05, 6.32630000000009e-05, 6.309700000000154e-05, 6.236100000000036e-05, 6.317999999999949e-05, 6.312500000000068e-05, 6.266600000000289e-05, 6.334699999999832e-05, 6.241699999999864e-05, 6.30279999999997e-05, 6.259700000000104e-05, 6.244500000000125e-05, 6.33340000000017e-05, 6.241699999999864e-05, 6.266699999999889e-05, 6.300000000000056e-05, 6.241599999999917e-05, 6.301400000000013e-05, 6.24300000000022e-05, 6.254200000000223e-05, 6.309699999999807e-05, 6.293100000000218e-05, 6.318100000000243e-05, 6.250000000000006e-05, 6.305599999999884e-05, 6.243099999999821e-05, 6.318100000000243e-05, 6.281999999999816e-05, 6.258400000000094e-05, 6.326299999999743e-05, 6.280600000000205e-05, 6.258300000000147e-05, 6.324999999999734e-05, 6.29300000000027e-05, 6.315299999999982e-05, 6.284700000000129e-05, 6.276399999999988e-05, 6.2582999999998e-05, 6.234800000000026e-05, 6.284800000000076e-05, 6.241699999999864e-05, 6.286100000000086e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.244" endtime="20201115 23:00:04.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.239" endtime="20201115 23:00:04.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.249" endtime="20201115 23:00:04.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.252" endtime="20201115 23:00:04.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.251" endtime="20201115 23:00:04.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.247" endtime="20201115 23:00:04.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.877" endtime="20201115 23:00:04.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.875" endtime="20201115 23:00:04.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.875" endtime="20201115 23:00:04.273"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.276" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.285" endtime="20201115 23:00:04.303"></status>
</kw>
<msg timestamp="20201115 23:00:04.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.283" endtime="20201115 23:00:04.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.305" endtime="20201115 23:00:04.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.307" endtime="20201115 23:00:04.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.280" endtime="20201115 23:00:04.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.278" endtime="20201115 23:00:04.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.317" endtime="20201115 23:00:04.602"></status>
</kw>
<msg timestamp="20201115 23:00:04.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026082917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026147208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.315" endtime="20201115 23:00:04.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026082917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026147208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.606" endtime="20201115 23:00:04.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.615" endtime="20201115 23:00:04.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.313" endtime="20201115 23:00:04.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.311" endtime="20201115 23:00:04.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.623" level="INFO">${RESULT} = [{'time': 0.026147208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.429100000000104e-05, 'source_diff': 6.429100000000104e-05}, {'time': 0.026235222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:04.619" endtime="20201115 23:00:04.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.638" level="INFO">${ACCURACY} = {'diff': [6.429100000000104e-05, 6.434699999999932e-05, 6.40829999999995e-05, 6.359699999999857e-05, 6.42500000000018e-05, 6.358300000000247e-05, 6.363900000000075e-05, 6.412500000000168e-05, 6.376400...</msg>
<status status="PASS" starttime="20201115 23:00:04.624" endtime="20201115 23:00:04.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.643" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.641" endtime="20201115 23:00:04.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.645" level="INFO">VALUE: [6.429100000000104e-05, 6.434699999999932e-05, 6.40829999999995e-05, 6.359699999999857e-05, 6.42500000000018e-05, 6.358300000000247e-05, 6.363900000000075e-05, 6.412500000000168e-05, 6.376400000000088e-05, 6.358400000000194e-05, 6.35699999999989e-05, 6.391700000000014e-05, 6.437500000000193e-05, 6.377800000000045e-05, 6.426400000000138e-05, 6.359699999999857e-05, 6.354199999999977e-05, 6.408300000000297e-05, 6.427800000000095e-05, 6.359700000000204e-05, 6.341699999999964e-05, 6.43479999999988e-05, 6.42639999999979e-05, 6.390300000000057e-05, 6.431999999999966e-05, 6.373599999999827e-05, 6.39020000000011e-05, 6.405599999999984e-05, 6.391600000000067e-05, 6.400000000000156e-05, 6.408300000000297e-05, 6.361099999999814e-05, 6.42089999999991e-05, 6.37500000000013e-05, 6.377800000000045e-05, 6.379099999999707e-05, 6.391700000000014e-05, 6.349999999999759e-05, 6.373599999999827e-05, 6.40829999999995e-05, 6.386100000000186e-05, 6.395799999999938e-05, 6.40829999999995e-05, 6.381999999999916e-05, 6.40699999999994e-05, 6.391700000000014e-05, 6.399999999999809e-05, 6.393099999999971e-05, 6.412499999999821e-05, 6.433399999999923e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.644" endtime="20201115 23:00:04.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.639" endtime="20201115 23:00:04.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.648" endtime="20201115 23:00:04.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.652" endtime="20201115 23:00:04.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.650" endtime="20201115 23:00:04.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.647" endtime="20201115 23:00:04.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.277" endtime="20201115 23:00:04.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.275" endtime="20201115 23:00:04.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.274" endtime="20201115 23:00:04.673"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.676" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.684" endtime="20201115 23:00:04.702"></status>
</kw>
<msg timestamp="20201115 23:00:04.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.683" endtime="20201115 23:00:04.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.704" endtime="20201115 23:00:04.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.706" endtime="20201115 23:00:04.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.680" endtime="20201115 23:00:04.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.678" endtime="20201115 23:00:04.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.716" endtime="20201115 23:00:05.003"></status>
</kw>
<msg timestamp="20201115 23:00:05.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024719528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024784653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.714" endtime="20201115 23:00:05.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024719528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024784653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.007" endtime="20201115 23:00:05.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.016" endtime="20201115 23:00:05.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.712" endtime="20201115 23:00:05.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.710" endtime="20201115 23:00:05.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.023" level="INFO">${RESULT} = [{'time': 0.024784653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.512499999999921e-05, 'source_diff': 6.512499999999921e-05}, {'time': 0.024873667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:05.019" endtime="20201115 23:00:05.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.037" level="INFO">${ACCURACY} = {'diff': [6.512499999999921e-05, 6.509799999999955e-05, 6.449999999999859e-05, 6.467999999999752e-05, 6.519399999999759e-05, 6.467999999999752e-05, 6.466600000000142e-05, 6.516599999999845e-05, 6.5028...</msg>
<status status="PASS" starttime="20201115 23:00:05.024" endtime="20201115 23:00:05.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.041" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.040" endtime="20201115 23:00:05.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.044" level="INFO">VALUE: [6.512499999999921e-05, 6.509799999999955e-05, 6.449999999999859e-05, 6.467999999999752e-05, 6.519399999999759e-05, 6.467999999999752e-05, 6.466600000000142e-05, 6.516599999999845e-05, 6.50280000000017e-05, 6.47639999999984e-05, 6.483300000000025e-05, 6.518099999999749e-05, 6.484699999999982e-05, 6.47500000000023e-05, 6.474999999999884e-05, 6.493099999999724e-05, 6.532000000000066e-05, 6.509700000000007e-05, 6.509700000000007e-05, 6.474999999999884e-05, 6.49159999999982e-05, 6.534700000000032e-05, 6.441700000000064e-05, 6.450000000000206e-05, 6.509700000000007e-05, 6.479099999999807e-05, 6.511099999999964e-05, 6.458399999999948e-05, 6.509799999999955e-05, 6.474999999999884e-05, 6.491600000000167e-05, 6.450000000000206e-05, 6.493000000000124e-05, 6.499999999999909e-05, 6.443100000000021e-05, 6.487499999999896e-05, 6.491699999999767e-05, 6.497199999999995e-05, 6.524999999999934e-05, 6.508399999999998e-05, 6.508399999999998e-05, 6.443099999999674e-05, 6.450000000000206e-05, 6.509700000000007e-05, 6.492999999999777e-05, 6.487500000000243e-05, 6.491600000000167e-05, 6.484700000000329e-05, 6.4583e-05, 6.493099999999724e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.043" endtime="20201115 23:00:05.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.037" endtime="20201115 23:00:05.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.047" endtime="20201115 23:00:05.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.051" endtime="20201115 23:00:05.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.049" endtime="20201115 23:00:05.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.046" endtime="20201115 23:00:05.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.676" endtime="20201115 23:00:05.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.674" endtime="20201115 23:00:05.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.673" endtime="20201115 23:00:05.072"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.075" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.083" endtime="20201115 23:00:05.101"></status>
</kw>
<msg timestamp="20201115 23:00:05.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.082" endtime="20201115 23:00:05.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.103" endtime="20201115 23:00:05.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.106" endtime="20201115 23:00:05.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.079" endtime="20201115 23:00:05.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.077" endtime="20201115 23:00:05.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.116" endtime="20201115 23:00:05.402"></status>
</kw>
<msg timestamp="20201115 23:00:05.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024789278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024855361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.114" endtime="20201115 23:00:05.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024789278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024855361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.407" endtime="20201115 23:00:05.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.416" endtime="20201115 23:00:05.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.112" endtime="20201115 23:00:05.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.110" endtime="20201115 23:00:05.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.423" level="INFO">${RESULT} = [{'time': 0.024855361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.608299999999803e-05, 'source_diff': 6.608299999999803e-05}, {'time': 0.024936375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:05.419" endtime="20201115 23:00:05.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.437" level="INFO">${ACCURACY} = {'diff': [6.608299999999803e-05, 6.591699999999867e-05, 6.601399999999966e-05, 6.55700000000009e-05, 6.541700000000164e-05, 6.569500000000103e-05, 6.586100000000039e-05, 6.540300000000207e-05, 6.61799...</msg>
<status status="PASS" starttime="20201115 23:00:05.424" endtime="20201115 23:00:05.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.441" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.440" endtime="20201115 23:00:05.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.444" level="INFO">VALUE: [6.608299999999803e-05, 6.591699999999867e-05, 6.601399999999966e-05, 6.55700000000009e-05, 6.541700000000164e-05, 6.569500000000103e-05, 6.586100000000039e-05, 6.540300000000207e-05, 6.617999999999902e-05, 6.60830000000015e-05, 6.57639999999994e-05, 6.561100000000014e-05, 6.563899999999928e-05, 6.62639999999999e-05, 6.591700000000214e-05, 6.619500000000153e-05, 6.630500000000261e-05, 6.543099999999774e-05, 6.600000000000009e-05, 6.59440000000018e-05, 6.600000000000009e-05, 6.542999999999827e-05, 6.598600000000052e-05, 6.5583000000001e-05, 6.59159999999992e-05, 6.633300000000175e-05, 6.62639999999999e-05, 6.574999999999984e-05, 6.543099999999774e-05, 6.601399999999966e-05, 6.574999999999984e-05, 6.62639999999999e-05, 6.559800000000005e-05, 6.62639999999999e-05, 6.592999999999877e-05, 6.549999999999959e-05, 6.5583000000001e-05, 6.62359999999973e-05, 6.60830000000015e-05, 6.538899999999903e-05, 6.586099999999692e-05, 6.574999999999984e-05, 6.577799999999898e-05, 6.591699999999867e-05, 6.600000000000009e-05, 6.541699999999817e-05, 6.636100000000089e-05, 6.54440000000013e-05, 6.586100000000039e-05, 6.588899999999953e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.442" endtime="20201115 23:00:05.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.437" endtime="20201115 23:00:05.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.447" endtime="20201115 23:00:05.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.451" endtime="20201115 23:00:05.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.449" endtime="20201115 23:00:05.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.445" endtime="20201115 23:00:05.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.075" endtime="20201115 23:00:05.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.073" endtime="20201115 23:00:05.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.072" endtime="20201115 23:00:05.472"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.475" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.484" endtime="20201115 23:00:05.501"></status>
</kw>
<msg timestamp="20201115 23:00:05.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.482" endtime="20201115 23:00:05.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.503" endtime="20201115 23:00:05.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.506" endtime="20201115 23:00:05.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.479" endtime="20201115 23:00:05.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.477" endtime="20201115 23:00:05.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.515" endtime="20201115 23:00:05.802"></status>
</kw>
<msg timestamp="20201115 23:00:05.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025572194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025639431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.514" endtime="20201115 23:00:05.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025572194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025639431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.806" endtime="20201115 23:00:05.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.815" endtime="20201115 23:00:05.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.511" endtime="20201115 23:00:05.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.509" endtime="20201115 23:00:05.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.822" level="INFO">${RESULT} = [{'time': 0.025639431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.723700000000124e-05, 'source_diff': 6.723700000000124e-05}, {'time': 0.025726444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:05.818" endtime="20201115 23:00:05.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.835" level="INFO">${ACCURACY} = {'diff': [6.723700000000124e-05, 6.64440000000023e-05, 6.69160000000002e-05, 6.666599999999995e-05, 6.666599999999995e-05, 6.670899999999813e-05, 6.733300000000275e-05, 6.691699999999967e-05, 6.651400...</msg>
<status status="PASS" starttime="20201115 23:00:05.823" endtime="20201115 23:00:05.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.840" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.839" endtime="20201115 23:00:05.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.843" level="INFO">VALUE: [6.723700000000124e-05, 6.64440000000023e-05, 6.69160000000002e-05, 6.666599999999995e-05, 6.666599999999995e-05, 6.670899999999813e-05, 6.733300000000275e-05, 6.691699999999967e-05, 6.651400000000016e-05, 6.643100000000221e-05, 6.718099999999949e-05, 6.715300000000035e-05, 6.652700000000025e-05, 6.658400000000148e-05, 6.67640000000004e-05, 6.72640000000009e-05, 6.72640000000009e-05, 6.673600000000127e-05, 6.687500000000096e-05, 6.723600000000177e-05, 6.641699999999917e-05, 6.70969999999986e-05, 6.700000000000109e-05, 6.709800000000155e-05, 6.708400000000198e-05, 6.644399999999884e-05, 6.649999999999712e-05, 6.666699999999942e-05, 6.72359999999983e-05, 6.727800000000048e-05, 6.675000000000084e-05, 6.65969999999981e-05, 6.659700000000157e-05, 6.643099999999874e-05, 6.67090000000016e-05, 6.677799999999998e-05, 6.709799999999808e-05, 6.711100000000164e-05, 6.64029999999996e-05, 6.683300000000225e-05, 6.692999999999977e-05, 6.683299999999878e-05, 6.69160000000002e-05, 6.736100000000189e-05, 6.637500000000046e-05, 6.716699999999992e-05, 6.698600000000152e-05, 6.72640000000009e-05, 6.69030000000001e-05, 6.732000000000266e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.841" endtime="20201115 23:00:05.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.836" endtime="20201115 23:00:05.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.846" endtime="20201115 23:00:05.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.850" endtime="20201115 23:00:05.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.848" endtime="20201115 23:00:05.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.844" endtime="20201115 23:00:05.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.475" endtime="20201115 23:00:05.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.473" endtime="20201115 23:00:05.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.472" endtime="20201115 23:00:05.872"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.874" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.883" endtime="20201115 23:00:05.901"></status>
</kw>
<msg timestamp="20201115 23:00:05.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.881" endtime="20201115 23:00:05.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.903" endtime="20201115 23:00:05.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.905" endtime="20201115 23:00:05.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.878" endtime="20201115 23:00:05.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.876" endtime="20201115 23:00:05.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.915" endtime="20201115 23:00:06.202"></status>
</kw>
<msg timestamp="20201115 23:00:06.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026234306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026302611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.914" endtime="20201115 23:00:06.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026234306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026302611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.207" endtime="20201115 23:00:06.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.215" endtime="20201115 23:00:06.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.911" endtime="20201115 23:00:06.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.909" endtime="20201115 23:00:06.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.222" level="INFO">${RESULT} = [{'time': 0.026302611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.830500000000114e-05, 'source_diff': 6.830500000000114e-05}, {'time': 0.026391611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:06.219" endtime="20201115 23:00:06.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.238" level="INFO">${ACCURACY} = {'diff': [6.830500000000114e-05, 6.75969999999991e-05, 6.816700000000092e-05, 6.769499999999956e-05, 6.768099999999999e-05, 6.818099999999702e-05, 6.833399999999976e-05, 6.758400000000248e-05, 6.77630...</msg>
<status status="PASS" starttime="20201115 23:00:06.224" endtime="20201115 23:00:06.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.242" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.241" endtime="20201115 23:00:06.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.245" level="INFO">VALUE: [6.830500000000114e-05, 6.75969999999991e-05, 6.816700000000092e-05, 6.769499999999956e-05, 6.768099999999999e-05, 6.818099999999702e-05, 6.833399999999976e-05, 6.758400000000248e-05, 6.776300000000193e-05, 6.79160000000012e-05, 6.834699999999985e-05, 6.79160000000012e-05, 6.743000000000027e-05, 6.827800000000148e-05, 6.763900000000128e-05, 6.834699999999985e-05, 6.761100000000214e-05, 6.811099999999917e-05, 6.777800000000098e-05, 6.74030000000006e-05, 6.815300000000135e-05, 6.784699999999935e-05, 6.758299999999953e-05, 6.82359999999993e-05, 6.79030000000011e-05, 6.84299999999978e-05, 6.784699999999935e-05, 6.794499999999981e-05, 6.75969999999991e-05, 6.791700000000067e-05, 6.818100000000049e-05, 6.834799999999933e-05, 6.741700000000017e-05, 6.800000000000209e-05, 6.758299999999953e-05, 6.82640000000019e-05, 6.793000000000077e-05, 6.766599999999748e-05, 6.749999999999812e-05, 6.829200000000105e-05, 6.793100000000024e-05, 6.751400000000116e-05, 6.776399999999794e-05, 6.793099999999677e-05, 6.749999999999812e-05, 6.73619999999979e-05, 6.804199999999733e-05, 6.827800000000148e-05, 6.808300000000003e-05, 6.776399999999794e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.244" endtime="20201115 23:00:06.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.239" endtime="20201115 23:00:06.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.249" endtime="20201115 23:00:06.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.252" endtime="20201115 23:00:06.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.251" endtime="20201115 23:00:06.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.247" endtime="20201115 23:00:06.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.875" endtime="20201115 23:00:06.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.873" endtime="20201115 23:00:06.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.872" endtime="20201115 23:00:06.274"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.276" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.285" endtime="20201115 23:00:06.303"></status>
</kw>
<msg timestamp="20201115 23:00:06.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.283" endtime="20201115 23:00:06.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.305" endtime="20201115 23:00:06.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.307" endtime="20201115 23:00:06.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.280" endtime="20201115 23:00:06.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.278" endtime="20201115 23:00:06.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.317" endtime="20201115 23:00:06.602"></status>
</kw>
<msg timestamp="20201115 23:00:06.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024703958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024772931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.315" endtime="20201115 23:00:06.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024703958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024772931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.607" endtime="20201115 23:00:06.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.615" endtime="20201115 23:00:06.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.313" endtime="20201115 23:00:06.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.311" endtime="20201115 23:00:06.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.622" level="INFO">${RESULT} = [{'time': 0.024772931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.897299999999995e-05, 'source_diff': 6.897299999999995e-05}, {'time': 0.024861944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:06.619" endtime="20201115 23:00:06.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.636" level="INFO">${ACCURACY} = {'diff': [6.897299999999995e-05, 6.920800000000116e-05, 6.89299999999983e-05, 6.851399999999869e-05, 6.854199999999783e-05, 6.924999999999987e-05, 6.874999999999937e-05, 6.894500000000081e-05, 6.88470...</msg>
<status status="PASS" starttime="20201115 23:00:06.624" endtime="20201115 23:00:06.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.641" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.640" endtime="20201115 23:00:06.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.644" level="INFO">VALUE: [6.897299999999995e-05, 6.920800000000116e-05, 6.89299999999983e-05, 6.851399999999869e-05, 6.854199999999783e-05, 6.924999999999987e-05, 6.874999999999937e-05, 6.894500000000081e-05, 6.884700000000035e-05, 6.874999999999937e-05, 6.909800000000008e-05, 6.913899999999931e-05, 6.891700000000167e-05, 6.900000000000309e-05, 6.90970000000006e-05, 6.843000000000127e-05, 6.899999999999962e-05, 6.855500000000139e-05, 6.875000000000284e-05, 6.893100000000124e-05, 6.931900000000171e-05, 6.876399999999894e-05, 6.909699999999713e-05, 6.876399999999894e-05, 6.8584e-05, 6.90559999999979e-05, 6.893000000000177e-05, 6.886100000000339e-05, 6.908299999999756e-05, 6.905500000000189e-05, 6.924999999999987e-05, 6.926399999999944e-05, 6.840299999999813e-05, 6.868100000000099e-05, 6.934700000000085e-05, 6.90559999999979e-05, 6.891700000000167e-05, 6.934800000000033e-05, 6.912499999999974e-05, 6.890199999999916e-05, 6.850000000000259e-05, 6.85970000000001e-05, 6.92640000000029e-05, 6.866700000000142e-05, 6.934700000000085e-05, 6.874999999999937e-05, 6.908300000000103e-05, 6.841700000000117e-05, 6.851399999999869e-05, 6.843100000000074e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.642" endtime="20201115 23:00:06.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.637" endtime="20201115 23:00:06.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.647" endtime="20201115 23:00:06.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.651" endtime="20201115 23:00:06.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.649" endtime="20201115 23:00:06.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.646" endtime="20201115 23:00:06.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.277" endtime="20201115 23:00:06.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.275" endtime="20201115 23:00:06.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.274" endtime="20201115 23:00:06.672"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.675" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.683" endtime="20201115 23:00:06.702"></status>
</kw>
<msg timestamp="20201115 23:00:06.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.682" endtime="20201115 23:00:06.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.704" endtime="20201115 23:00:06.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.706" endtime="20201115 23:00:06.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.679" endtime="20201115 23:00:06.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.677" endtime="20201115 23:00:06.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.716" endtime="20201115 23:00:07.001"></status>
</kw>
<msg timestamp="20201115 23:00:07.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024874139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024944278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.714" endtime="20201115 23:00:07.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024874139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024944278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.006" endtime="20201115 23:00:07.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.014" endtime="20201115 23:00:07.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.712" endtime="20201115 23:00:07.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.710" endtime="20201115 23:00:07.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.022" level="INFO">${RESULT} = [{'time': 0.024944278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013900000000031e-05, 'source_diff': 7.013900000000031e-05}, {'time': 0.025038278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:07.018" endtime="20201115 23:00:07.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.036" level="INFO">${ACCURACY} = {'diff': [7.013900000000031e-05, 6.99169999999992e-05, 7.016699999999945e-05, 6.968099999999852e-05, 6.984700000000135e-05, 6.973599999999733e-05, 6.994399999999887e-05, 6.967999999999905e-05, 6.97919...</msg>
<status status="PASS" starttime="20201115 23:00:07.023" endtime="20201115 23:00:07.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.041" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.040" endtime="20201115 23:00:07.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.043" level="INFO">VALUE: [7.013900000000031e-05, 6.99169999999992e-05, 7.016699999999945e-05, 6.968099999999852e-05, 6.984700000000135e-05, 6.973599999999733e-05, 6.994399999999887e-05, 6.967999999999905e-05, 6.979199999999908e-05, 6.94030000000026e-05, 6.983300000000178e-05, 6.976399999999994e-05, 6.940299999999913e-05, 7.037500000000099e-05, 7.00559999999989e-05, 6.993099999999877e-05, 7.001300000000071e-05, 6.97360000000008e-05, 7.008300000000203e-05, 6.944399999999837e-05, 6.984699999999788e-05, 6.958300000000153e-05, 6.993099999999877e-05, 7.001400000000019e-05, 6.994499999999834e-05, 6.982000000000169e-05, 6.94169999999987e-05, 6.998600000000105e-05, 6.937499999999999e-05, 7.006999999999847e-05, 6.986100000000092e-05, 7.016599999999998e-05, 6.950000000000012e-05, 6.941700000000217e-05, 6.986100000000092e-05, 7.008299999999856e-05, 7.026400000000044e-05, 7.029199999999958e-05, 7.002700000000028e-05, 6.945800000000141e-05, 7.033400000000176e-05, 7.02360000000013e-05, 6.96109999999972e-05, 7.034800000000133e-05, 6.997300000000095e-05, 6.995799999999844e-05, 6.979199999999908e-05, 7.008299999999856e-05, 7.025000000000087e-05, 6.957000000000144e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.042" endtime="20201115 23:00:07.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.037" endtime="20201115 23:00:07.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.046" endtime="20201115 23:00:07.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.050" endtime="20201115 23:00:07.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.048" endtime="20201115 23:00:07.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.045" endtime="20201115 23:00:07.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.675" endtime="20201115 23:00:07.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.673" endtime="20201115 23:00:07.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.673" endtime="20201115 23:00:07.071"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.074" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.082" endtime="20201115 23:00:07.100"></status>
</kw>
<msg timestamp="20201115 23:00:07.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.081" endtime="20201115 23:00:07.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.102" endtime="20201115 23:00:07.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.105" endtime="20201115 23:00:07.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.078" endtime="20201115 23:00:07.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.076" endtime="20201115 23:00:07.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.114" endtime="20201115 23:00:07.401"></status>
</kw>
<msg timestamp="20201115 23:00:07.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024891667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024962792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.112" endtime="20201115 23:00:07.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024891667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024962792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.405" endtime="20201115 23:00:07.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.414" endtime="20201115 23:00:07.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.110" endtime="20201115 23:00:07.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.108" endtime="20201115 23:00:07.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.422" level="INFO">${RESULT} = [{'time': 0.024962792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.112500000000174e-05, 'source_diff': 7.112500000000174e-05}, {'time': 0.025055792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:07.418" endtime="20201115 23:00:07.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.435" level="INFO">${ACCURACY} = {'diff': [7.112500000000174e-05, 7.126400000000144e-05, 7.04299999999998e-05, 7.12360000000023e-05, 7.138900000000156e-05, 7.09300000000003e-05, 7.101400000000119e-05, 7.108299999999956e-05, 7.1222000...</msg>
<status status="PASS" starttime="20201115 23:00:07.423" endtime="20201115 23:00:07.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.440" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.439" endtime="20201115 23:00:07.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.443" level="INFO">VALUE: [7.112500000000174e-05, 7.126400000000144e-05, 7.04299999999998e-05, 7.12360000000023e-05, 7.138900000000156e-05, 7.09300000000003e-05, 7.101400000000119e-05, 7.108299999999956e-05, 7.122200000000273e-05, 7.077800000000051e-05, 7.129199999999711e-05, 7.054199999999983e-05, 7.125000000000187e-05, 7.077800000000051e-05, 7.076400000000094e-05, 7.058299999999906e-05, 7.11109999999987e-05, 7.115300000000088e-05, 7.051399999999722e-05, 7.126400000000144e-05, 7.09170000000002e-05, 7.084699999999888e-05, 7.095899999999891e-05, 7.080599999999965e-05, 7.058399999999854e-05, 7.127800000000101e-05, 7.050000000000112e-05, 7.12499999999984e-05, 7.12629999999985e-05, 7.108299999999956e-05, 7.041600000000023e-05, 7.131900000000024e-05, 7.07499999999979e-05, 7.076400000000094e-05, 7.093099999999977e-05, 7.101400000000119e-05, 7.108399999999904e-05, 7.076400000000094e-05, 7.125000000000187e-05, 7.09170000000002e-05, 7.050000000000112e-05, 7.109699999999913e-05, 7.040200000000066e-05, 7.083299999999931e-05, 7.09170000000002e-05, 7.101400000000119e-05, 7.094499999999934e-05, 7.098599999999858e-05, 7.094499999999934e-05, 7.05979999999981e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.441" endtime="20201115 23:00:07.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.436" endtime="20201115 23:00:07.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.446" endtime="20201115 23:00:07.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.450" endtime="20201115 23:00:07.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.448" endtime="20201115 23:00:07.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.444" endtime="20201115 23:00:07.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.075" endtime="20201115 23:00:07.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.073" endtime="20201115 23:00:07.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.072" endtime="20201115 23:00:07.471"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.474" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.482" endtime="20201115 23:00:07.502"></status>
</kw>
<msg timestamp="20201115 23:00:07.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.481" endtime="20201115 23:00:07.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.503" endtime="20201115 23:00:07.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.506" endtime="20201115 23:00:07.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.478" endtime="20201115 23:00:07.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.476" endtime="20201115 23:00:07.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.516" endtime="20201115 23:00:07.804"></status>
</kw>
<msg timestamp="20201115 23:00:07.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026011347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026083681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.514" endtime="20201115 23:00:07.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026011347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026083681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.808" endtime="20201115 23:00:07.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.816" endtime="20201115 23:00:07.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.511" endtime="20201115 23:00:07.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.509" endtime="20201115 23:00:07.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.824" level="INFO">${RESULT} = [{'time': 0.026083681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.233400000000029e-05, 'source_diff': 7.233400000000029e-05}, {'time': 0.026172653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:07.820" endtime="20201115 23:00:07.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.839" level="INFO">${ACCURACY} = {'diff': [7.233400000000029e-05, 7.182000000000022e-05, 7.1762999999999e-05, 7.165300000000138e-05, 7.22499999999994e-05, 7.176399999999847e-05, 7.231900000000124e-05, 7.152800000000126e-05, 7.1958000...</msg>
<status status="PASS" starttime="20201115 23:00:07.825" endtime="20201115 23:00:07.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.844" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.843" endtime="20201115 23:00:07.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.846" level="INFO">VALUE: [7.233400000000029e-05, 7.182000000000022e-05, 7.1762999999999e-05, 7.165300000000138e-05, 7.22499999999994e-05, 7.176399999999847e-05, 7.231900000000124e-05, 7.152800000000126e-05, 7.195800000000044e-05, 7.216699999999798e-05, 7.166700000000095e-05, 7.177799999999804e-05, 7.175000000000237e-05, 7.193100000000077e-05, 7.218100000000102e-05, 7.201299999999924e-05, 7.182000000000022e-05, 7.158300000000006e-05, 7.209700000000013e-05, 7.195800000000044e-05, 7.201399999999872e-05, 7.223599999999983e-05, 7.2069000000001e-05, 7.134699999999938e-05, 7.184699999999988e-05, 7.22910000000021e-05, 7.14170000000007e-05, 7.236099999999995e-05, 7.15690000000005e-05, 7.208300000000056e-05, 7.168000000000105e-05, 7.227799999999854e-05, 7.209700000000013e-05, 7.15560000000004e-05, 7.205599999999743e-05, 7.19309999999973e-05, 7.202799999999829e-05, 7.162500000000224e-05, 7.17499999999989e-05, 7.17499999999989e-05, 7.159699999999963e-05, 7.176399999999847e-05, 7.22499999999994e-05, 7.20829999999971e-05, 7.191699999999773e-05, 7.149999999999865e-05, 7.230600000000115e-05, 7.156999999999997e-05, 7.193100000000077e-05, 7.152800000000126e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.845" endtime="20201115 23:00:07.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.840" endtime="20201115 23:00:07.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.849" endtime="20201115 23:00:07.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.853" endtime="20201115 23:00:07.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.851" endtime="20201115 23:00:07.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.848" endtime="20201115 23:00:07.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.474" endtime="20201115 23:00:07.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.472" endtime="20201115 23:00:07.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.471" endtime="20201115 23:00:07.874"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.877" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.885" endtime="20201115 23:00:07.903"></status>
</kw>
<msg timestamp="20201115 23:00:07.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.884" endtime="20201115 23:00:07.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.905" endtime="20201115 23:00:07.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.908" endtime="20201115 23:00:07.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.881" endtime="20201115 23:00:07.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.879" endtime="20201115 23:00:07.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.918" endtime="20201115 23:00:08.204"></status>
</kw>
<msg timestamp="20201115 23:00:08.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024811583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024884556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.916" endtime="20201115 23:00:08.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024811583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024884556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.209" endtime="20201115 23:00:08.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.217" endtime="20201115 23:00:08.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.913" endtime="20201115 23:00:08.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.911" endtime="20201115 23:00:08.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.225" level="INFO">${RESULT} = [{'time': 0.024884556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.297299999999701e-05, 'source_diff': 7.297299999999701e-05}, {'time': 0.024973597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:08.221" endtime="20201115 23:00:08.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.239" level="INFO">${ACCURACY} = {'diff': [7.297299999999701e-05, 7.31110000000007e-05, 7.242999999999833e-05, 7.266600000000248e-05, 7.333300000000181e-05, 7.244400000000137e-05, 7.300000000000015e-05, 7.297300000000048e-05, 7.31950...</msg>
<status status="PASS" starttime="20201115 23:00:08.226" endtime="20201115 23:00:08.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.243" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.242" endtime="20201115 23:00:08.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.246" level="INFO">VALUE: [7.297299999999701e-05, 7.31110000000007e-05, 7.242999999999833e-05, 7.266600000000248e-05, 7.333300000000181e-05, 7.244400000000137e-05, 7.300000000000015e-05, 7.297300000000048e-05, 7.319500000000159e-05, 7.307000000000147e-05, 7.308399999999757e-05, 7.326399999999997e-05, 7.300000000000015e-05, 7.308300000000156e-05, 7.248600000000008e-05, 7.283299999999784e-05, 7.291599999999926e-05, 7.267999999999858e-05, 7.269499999999762e-05, 7.331900000000224e-05, 7.30829999999981e-05, 7.326399999999997e-05, 7.243100000000127e-05, 7.316699999999898e-05, 7.279199999999861e-05, 7.32630000000005e-05, 7.29439999999984e-05, 7.249999999999965e-05, 7.29309999999983e-05, 7.301399999999972e-05, 7.293100000000177e-05, 7.268100000000152e-05, 7.315299999999941e-05, 7.263899999999934e-05, 7.301399999999972e-05, 7.291699999999873e-05, 7.331999999999825e-05, 7.277699999999956e-05, 7.262499999999977e-05, 7.27499999999999e-05, 7.32500000000004e-05, 7.32500000000004e-05, 7.327799999999954e-05, 7.3069999999998e-05, 7.262499999999977e-05, 7.276400000000294e-05, 7.276399999999947e-05, 7.24439999999979e-05, 7.259799999999664e-05, 7.316599999999951e-05]</msg>
<status status="PASS" starttime="20201115 23:00:08.244" endtime="20201115 23:00:08.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.240" endtime="20201115 23:00:08.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.249" endtime="20201115 23:00:08.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.253" endtime="20201115 23:00:08.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.251" endtime="20201115 23:00:08.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.247" endtime="20201115 23:00:08.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.877" endtime="20201115 23:00:08.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.875" endtime="20201115 23:00:08.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.875" endtime="20201115 23:00:08.274"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.276" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.286" endtime="20201115 23:00:08.304"></status>
</kw>
<msg timestamp="20201115 23:00:08.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.284" endtime="20201115 23:00:08.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.306" endtime="20201115 23:00:08.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.309" endtime="20201115 23:00:08.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.281" endtime="20201115 23:00:08.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.278" endtime="20201115 23:00:08.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.318" endtime="20201115 23:00:08.604"></status>
</kw>
<msg timestamp="20201115 23:00:08.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025281194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025354847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.317" endtime="20201115 23:00:08.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025281194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025354847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.608" endtime="20201115 23:00:08.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.617" endtime="20201115 23:00:08.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.314" endtime="20201115 23:00:08.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.312" endtime="20201115 23:00:08.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.624" level="INFO">${RESULT} = [{'time': 0.025354847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.365299999999991e-05, 'source_diff': 7.365299999999991e-05}, {'time': 0.025443847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:08.621" endtime="20201115 23:00:08.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.638" level="INFO">${ACCURACY} = {'diff': [7.365299999999991e-05, 7.409699999999866e-05, 7.373600000000133e-05, 7.391699999999973e-05, 7.352799999999979e-05, 7.34309999999988e-05, 7.368100000000252e-05, 7.402799999999682e-05, 7.37640...</msg>
<status status="PASS" starttime="20201115 23:00:08.625" endtime="20201115 23:00:08.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.643" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.642" endtime="20201115 23:00:08.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.645" level="INFO">VALUE: [7.365299999999991e-05, 7.409699999999866e-05, 7.373600000000133e-05, 7.391699999999973e-05, 7.352799999999979e-05, 7.34309999999988e-05, 7.368100000000252e-05, 7.402799999999682e-05, 7.376400000000047e-05, 7.39439999999994e-05, 7.383300000000231e-05, 7.341599999999976e-05, 7.349999999999718e-05, 7.41110000000017e-05, 7.376400000000047e-05, 7.376400000000047e-05, 7.348600000000108e-05, 7.381999999999875e-05, 7.42639999999975e-05, 7.400000000000115e-05, 7.398600000000158e-05, 7.3763000000001e-05, 7.373600000000133e-05, 7.376400000000047e-05, 7.39439999999994e-05, 7.348600000000108e-05, 7.426400000000097e-05, 7.427800000000054e-05, 7.39309999999993e-05, 7.433299999999934e-05, 7.408399999999857e-05, 7.359800000000111e-05, 7.341699999999923e-05, 7.381999999999875e-05, 7.35829999999986e-05, 7.404100000000038e-05, 7.34439999999989e-05, 7.359700000000163e-05, 7.400000000000115e-05, 7.376400000000047e-05, 7.39170000000032e-05, 7.402800000000029e-05, 7.358400000000154e-05, 7.358399999999807e-05, 7.393100000000277e-05, 7.434700000000238e-05, 7.391600000000026e-05, 7.416600000000051e-05, 7.433299999999934e-05, 7.431999999999925e-05]</msg>
<status status="PASS" starttime="20201115 23:00:08.644" endtime="20201115 23:00:08.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.639" endtime="20201115 23:00:08.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.649" endtime="20201115 23:00:08.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.652" endtime="20201115 23:00:08.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.651" endtime="20201115 23:00:08.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.647" endtime="20201115 23:00:08.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.277" endtime="20201115 23:00:08.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.275" endtime="20201115 23:00:08.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.274" endtime="20201115 23:00:08.674"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.676" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.685" endtime="20201115 23:00:08.704"></status>
</kw>
<msg timestamp="20201115 23:00:08.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.683" endtime="20201115 23:00:08.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.706" endtime="20201115 23:00:08.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.708" endtime="20201115 23:00:08.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.681" endtime="20201115 23:00:08.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.678" endtime="20201115 23:00:08.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.718" endtime="20201115 23:00:09.004"></status>
</kw>
<msg timestamp="20201115 23:00:09.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025700125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02577475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:08.716" endtime="20201115 23:00:09.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025700125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02577475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:09.008" endtime="20201115 23:00:09.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.016" endtime="20201115 23:00:09.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.713" endtime="20201115 23:00:09.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.712" endtime="20201115 23:00:09.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.024" level="INFO">${RESULT} = [{'time': 0.02577475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.46249999999983e-05, 'source_diff': 7.46249999999983e-05}, {'time': 0.025864764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:09.020" endtime="20201115 23:00:09.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.038" level="INFO">${ACCURACY} = {'diff': [7.46249999999983e-05, 7.4763999999998e-05, 7.459699999999916e-05, 7.438900000000109e-05, 7.523599999999936e-05, 7.450000000000165e-05, 7.526299999999903e-05, 7.511099999999923e-05, 7.4569000...</msg>
<status status="PASS" starttime="20201115 23:00:09.025" endtime="20201115 23:00:09.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.042" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.041" endtime="20201115 23:00:09.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.045" level="INFO">VALUE: [7.46249999999983e-05, 7.4763999999998e-05, 7.459699999999916e-05, 7.438900000000109e-05, 7.523599999999936e-05, 7.450000000000165e-05, 7.526299999999903e-05, 7.511099999999923e-05, 7.456900000000002e-05, 7.50830000000001e-05, 7.50830000000001e-05, 7.527800000000154e-05, 7.534699999999991e-05, 7.47500000000019e-05, 7.44309999999998e-05, 7.484799999999889e-05, 7.49440000000004e-05, 7.466700000000048e-05, 7.499999999999868e-05, 7.474999999999843e-05, 7.52639999999985e-05, 7.45829999999996e-05, 7.494499999999987e-05, 7.533300000000034e-05, 7.4763999999998e-05, 7.527799999999807e-05, 7.44439999999999e-05, 7.468100000000005e-05, 7.533399999999982e-05, 7.493000000000083e-05, 7.51249999999988e-05, 7.517999999999761e-05, 7.466600000000101e-05, 7.543000000000133e-05, 7.515200000000194e-05, 7.441700000000023e-05, 7.466700000000048e-05, 7.452799999999732e-05, 7.509800000000261e-05, 7.526299999999903e-05, 7.491599999999779e-05, 7.466600000000101e-05, 7.449999999999818e-05, 7.50830000000001e-05, 7.46110000000022e-05, 7.438900000000109e-05, 7.462500000000177e-05, 7.468100000000005e-05, 7.486099999999898e-05, 7.47500000000019e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.043" endtime="20201115 23:00:09.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.038" endtime="20201115 23:00:09.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.049" endtime="20201115 23:00:09.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.052" endtime="20201115 23:00:09.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.051" endtime="20201115 23:00:09.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.047" endtime="20201115 23:00:09.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.677" endtime="20201115 23:00:09.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.675" endtime="20201115 23:00:09.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.674" endtime="20201115 23:00:09.073"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.076" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.085" endtime="20201115 23:00:09.103"></status>
</kw>
<msg timestamp="20201115 23:00:09.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.083" endtime="20201115 23:00:09.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.105" endtime="20201115 23:00:09.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.108" endtime="20201115 23:00:09.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.080" endtime="20201115 23:00:09.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.078" endtime="20201115 23:00:09.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.117" endtime="20201115 23:00:09.403"></status>
</kw>
<msg timestamp="20201115 23:00:09.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025895458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025971097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.116" endtime="20201115 23:00:09.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025895458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025971097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.407" endtime="20201115 23:00:09.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.416" endtime="20201115 23:00:09.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.113" endtime="20201115 23:00:09.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.111" endtime="20201115 23:00:09.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.423" level="INFO">${RESULT} = [{'time': 0.025971097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.563899999999887e-05, 'source_diff': 7.563899999999887e-05}, {'time': 0.026061097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:09.419" endtime="20201115 23:00:09.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.438" level="INFO">${ACCURACY} = {'diff': [7.563899999999887e-05, 7.558299999999712e-05, 7.588899999999912e-05, 7.586099999999998e-05, 7.541700000000123e-05, 7.599999999999968e-05, 7.54310000000008e-05, 7.633400000000082e-05, 7.54310...</msg>
<status status="PASS" starttime="20201115 23:00:09.424" endtime="20201115 23:00:09.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.443" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.442" endtime="20201115 23:00:09.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.446" level="INFO">VALUE: [7.563899999999887e-05, 7.558299999999712e-05, 7.588899999999912e-05, 7.586099999999998e-05, 7.541700000000123e-05, 7.599999999999968e-05, 7.54310000000008e-05, 7.633400000000082e-05, 7.54310000000008e-05, 7.566600000000201e-05, 7.584700000000041e-05, 7.606899999999805e-05, 7.569400000000115e-05, 7.574999999999943e-05, 7.60830000000011e-05, 7.53890000000021e-05, 7.587500000000302e-05, 7.613899999999937e-05, 7.544500000000037e-05, 7.550000000000265e-05, 7.545800000000047e-05, 7.598600000000011e-05, 7.61249999999998e-05, 7.570800000000072e-05, 7.573599999999986e-05, 7.591700000000173e-05, 7.599999999999968e-05, 7.544500000000037e-05, 7.599999999999968e-05, 7.624999999999993e-05, 7.574999999999943e-05, 7.623699999999983e-05, 7.62769999999996e-05, 7.623599999999689e-05, 7.543000000000133e-05, 7.634700000000091e-05, 7.558299999999712e-05, 7.591700000000173e-05, 7.619500000000112e-05, 7.551399999999875e-05, 7.54310000000008e-05, 7.633400000000082e-05, 7.5763999999999e-05, 7.559700000000016e-05, 7.573599999999986e-05, 7.572200000000029e-05, 7.550000000000265e-05, 7.601399999999925e-05, 7.561099999999973e-05, 7.574999999999943e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.444" endtime="20201115 23:00:09.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.439" endtime="20201115 23:00:09.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.450" endtime="20201115 23:00:09.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.453" endtime="20201115 23:00:09.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.452" endtime="20201115 23:00:09.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.448" endtime="20201115 23:00:09.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.077" endtime="20201115 23:00:09.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.075" endtime="20201115 23:00:09.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.074" endtime="20201115 23:00:09.474"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.477" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.486" endtime="20201115 23:00:09.505"></status>
</kw>
<msg timestamp="20201115 23:00:09.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.484" endtime="20201115 23:00:09.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.506" endtime="20201115 23:00:09.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.509" endtime="20201115 23:00:09.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.481" endtime="20201115 23:00:09.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.479" endtime="20201115 23:00:09.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.518" endtime="20201115 23:00:09.804"></status>
</kw>
<msg timestamp="20201115 23:00:09.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024761125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024838472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.517" endtime="20201115 23:00:09.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024761125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024838472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.808" endtime="20201115 23:00:09.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.817" endtime="20201115 23:00:09.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.514" endtime="20201115 23:00:09.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.512" endtime="20201115 23:00:09.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.824" level="INFO">${RESULT} = [{'time': 0.024838472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.734700000000191e-05, 'source_diff': 7.734700000000191e-05}, {'time': 0.0249315, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:09.821" endtime="20201115 23:00:09.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.838" level="INFO">${ACCURACY} = {'diff': [7.734700000000191e-05, 7.74030000000002e-05, 7.71250000000008e-05, 7.642999999999886e-05, 7.651399999999975e-05, 7.69029999999997e-05, 7.666699999999901e-05, 7.683299999999837e-05, 7.6611000...</msg>
<status status="PASS" starttime="20201115 23:00:09.826" endtime="20201115 23:00:09.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.843" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.842" endtime="20201115 23:00:09.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.846" level="INFO">VALUE: [7.734700000000191e-05, 7.74030000000002e-05, 7.71250000000008e-05, 7.642999999999886e-05, 7.651399999999975e-05, 7.69029999999997e-05, 7.666699999999901e-05, 7.683299999999837e-05, 7.661100000000073e-05, 7.693099999999883e-05, 7.716699999999951e-05, 7.679199999999914e-05, 7.659800000000064e-05, 7.643000000000233e-05, 7.666600000000301e-05, 7.700000000000068e-05, 7.713900000000037e-05, 7.677799999999957e-05, 7.72640000000005e-05, 7.669499999999815e-05, 7.716600000000004e-05, 7.7070000000002e-05, 7.713900000000037e-05, 7.734700000000191e-05, 7.701300000000078e-05, 7.725000000000093e-05, 7.723600000000136e-05, 7.70969999999982e-05, 7.651399999999975e-05, 7.659700000000116e-05, 7.656899999999855e-05, 7.701400000000025e-05, 7.691699999999926e-05, 7.701400000000025e-05, 7.665299999999944e-05, 7.691699999999926e-05, 7.700000000000068e-05, 7.72640000000005e-05, 7.730599999999921e-05, 7.692999999999936e-05, 7.700000000000068e-05, 7.69029999999997e-05, 7.736100000000148e-05, 7.648600000000061e-05, 7.647300000000051e-05, 7.69440000000024e-05, 7.734800000000139e-05, 7.644399999999843e-05, 7.701400000000025e-05, 7.675000000000043e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.844" endtime="20201115 23:00:09.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.839" endtime="20201115 23:00:09.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.849" endtime="20201115 23:00:09.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.853" endtime="20201115 23:00:09.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.851" endtime="20201115 23:00:09.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.847" endtime="20201115 23:00:09.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.478" endtime="20201115 23:00:09.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.476" endtime="20201115 23:00:09.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.475" endtime="20201115 23:00:09.874"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.876" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.885" endtime="20201115 23:00:09.903"></status>
</kw>
<msg timestamp="20201115 23:00:09.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.883" endtime="20201115 23:00:09.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.905" endtime="20201115 23:00:09.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.907" endtime="20201115 23:00:09.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.881" endtime="20201115 23:00:09.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.878" endtime="20201115 23:00:09.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.917" endtime="20201115 23:00:10.202"></status>
</kw>
<msg timestamp="20201115 23:00:10.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024977139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025054819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.915" endtime="20201115 23:00:10.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024977139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025054819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.207" endtime="20201115 23:00:10.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.216" endtime="20201115 23:00:10.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.913" endtime="20201115 23:00:10.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.911" endtime="20201115 23:00:10.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.223" level="INFO">${RESULT} = [{'time': 0.025054819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.768000000000011e-05, 'source_diff': 7.768000000000011e-05}, {'time': 0.025151847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:10.219" endtime="20201115 23:00:10.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.237" level="INFO">${ACCURACY} = {'diff': [7.768000000000011e-05, 7.75830000000026e-05, 7.824999999999846e-05, 7.812499999999833e-05, 7.75969999999987e-05, 7.793000000000036e-05, 7.801400000000125e-05, 7.758299999999912e-05, 7.809700...</msg>
<status status="PASS" starttime="20201115 23:00:10.224" endtime="20201115 23:00:10.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.241" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.240" endtime="20201115 23:00:10.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.244" level="INFO">VALUE: [7.768000000000011e-05, 7.75830000000026e-05, 7.824999999999846e-05, 7.812499999999833e-05, 7.75969999999987e-05, 7.793000000000036e-05, 7.801400000000125e-05, 7.758299999999912e-05, 7.809700000000266e-05, 7.80969999999992e-05, 7.7764000000001e-05, 7.75969999999987e-05, 7.791700000000026e-05, 7.823600000000236e-05, 7.802699999999788e-05, 7.742999999999986e-05, 7.766600000000054e-05, 7.766600000000054e-05, 7.751400000000075e-05, 7.75969999999987e-05, 7.759700000000216e-05, 7.75830000000026e-05, 7.79030000000007e-05, 7.784700000000241e-05, 7.77779999999971e-05, 7.759799999999817e-05, 7.775000000000143e-05, 7.76250000000013e-05, 7.758299999999912e-05, 7.76250000000013e-05, 7.793000000000036e-05, 7.766700000000001e-05, 7.800000000000168e-05, 7.790299999999722e-05, 7.766700000000001e-05, 7.784800000000189e-05, 7.776399999999753e-05, 7.806999999999953e-05, 7.776300000000153e-05, 7.793000000000036e-05, 7.819400000000018e-05, 7.783299999999937e-05, 7.791700000000026e-05, 7.834699999999944e-05, 7.759700000000216e-05, 7.77779999999971e-05, 7.809799999999867e-05, 7.75839999999986e-05, 7.759800000000164e-05, 7.829100000000117e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.243" endtime="20201115 23:00:10.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.238" endtime="20201115 23:00:10.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.247" endtime="20201115 23:00:10.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.251" endtime="20201115 23:00:10.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.249" endtime="20201115 23:00:10.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.246" endtime="20201115 23:00:10.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.877" endtime="20201115 23:00:10.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.875" endtime="20201115 23:00:10.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.874" endtime="20201115 23:00:10.272"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.275" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.283" endtime="20201115 23:00:10.301"></status>
</kw>
<msg timestamp="20201115 23:00:10.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.282" endtime="20201115 23:00:10.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.303" endtime="20201115 23:00:10.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.306" endtime="20201115 23:00:10.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.279" endtime="20201115 23:00:10.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.277" endtime="20201115 23:00:10.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.316" endtime="20201115 23:00:10.602"></status>
</kw>
<msg timestamp="20201115 23:00:10.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024887639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024966111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.314" endtime="20201115 23:00:10.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024887639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024966111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.607" endtime="20201115 23:00:10.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.615" endtime="20201115 23:00:10.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.311" endtime="20201115 23:00:10.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.309" endtime="20201115 23:00:10.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.622" level="INFO">${RESULT} = [{'time': 0.024966111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847199999999957e-05, 'source_diff': 7.847199999999957e-05}, {'time': 0.025061125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:10.619" endtime="20201115 23:00:10.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.636" level="INFO">${ACCURACY} = {'diff': [7.847199999999957e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.918100000000108e-05, 7.909799999999967e-05, 7.909799999999967e-05, 7.893000000000136e-05, 7.869399999999721e-05, 7.8875...</msg>
<status status="PASS" starttime="20201115 23:00:10.624" endtime="20201115 23:00:10.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.641" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.640" endtime="20201115 23:00:10.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.644" level="INFO">VALUE: [7.847199999999957e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.918100000000108e-05, 7.909799999999967e-05, 7.909799999999967e-05, 7.893000000000136e-05, 7.869399999999721e-05, 7.887500000000255e-05, 7.906899999999759e-05, 7.90970000000002e-05, 7.89580000000005e-05, 7.868100000000058e-05, 7.866699999999754e-05, 7.932000000000078e-05, 7.930500000000174e-05, 7.926399999999903e-05, 7.926399999999903e-05, 7.89169999999978e-05, 7.919399999999771e-05, 7.869400000000068e-05, 7.919399999999771e-05, 7.88190000000008e-05, 7.858300000000012e-05, 7.873599999999939e-05, 7.887499999999908e-05, 7.918099999999761e-05, 7.859799999999917e-05, 7.89030000000017e-05, 7.899999999999921e-05, 7.908300000000063e-05, 7.876399999999853e-05, 7.923599999999989e-05, 7.908299999999716e-05, 7.875000000000243e-05, 7.926399999999903e-05, 7.843100000000033e-05, 7.884699999999994e-05, 7.877800000000157e-05, 7.930499999999827e-05, 7.90970000000002e-05, 7.930500000000174e-05, 7.85969999999997e-05, 7.8764000000002e-05, 7.861099999999926e-05, 7.854199999999742e-05, 7.85969999999997e-05, 7.923599999999989e-05, 7.926399999999903e-05, 7.859800000000264e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.642" endtime="20201115 23:00:10.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.637" endtime="20201115 23:00:10.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.647" endtime="20201115 23:00:10.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.651" endtime="20201115 23:00:10.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.649" endtime="20201115 23:00:10.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.645" endtime="20201115 23:00:10.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.275" endtime="20201115 23:00:10.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.274" endtime="20201115 23:00:10.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.273" endtime="20201115 23:00:10.672"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.675" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.683" endtime="20201115 23:00:10.703"></status>
</kw>
<msg timestamp="20201115 23:00:10.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.682" endtime="20201115 23:00:10.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.705" endtime="20201115 23:00:10.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.708" endtime="20201115 23:00:10.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.679" endtime="20201115 23:00:10.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.677" endtime="20201115 23:00:10.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.717" endtime="20201115 23:00:11.003"></status>
</kw>
<msg timestamp="20201115 23:00:11.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025915972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025996111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.716" endtime="20201115 23:00:11.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025915972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025996111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.008" endtime="20201115 23:00:11.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.016" endtime="20201115 23:00:11.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.713" endtime="20201115 23:00:11.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.711" endtime="20201115 23:00:11.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.023" level="INFO">${RESULT} = [{'time': 0.025996111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.01389999999999e-05, 'source_diff': 8.01389999999999e-05}, {'time': 0.026099111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:11.020" endtime="20201115 23:00:11.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.038" level="INFO">${ACCURACY} = {'diff': [8.01389999999999e-05, 7.941700000000176e-05, 8.034699999999798e-05, 7.95970000000007e-05, 7.95970000000007e-05, 7.993100000000183e-05, 7.984700000000094e-05, 7.942999999999839e-05, 7.9722000...</msg>
<status status="PASS" starttime="20201115 23:00:11.024" endtime="20201115 23:00:11.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.043" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.042" endtime="20201115 23:00:11.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.046" level="INFO">VALUE: [8.01389999999999e-05, 7.941700000000176e-05, 8.034699999999798e-05, 7.95970000000007e-05, 7.95970000000007e-05, 7.993100000000183e-05, 7.984700000000094e-05, 7.942999999999839e-05, 7.972200000000082e-05, 8.017999999999914e-05, 8.001399999999978e-05, 7.958300000000113e-05, 7.941700000000176e-05, 8.016699999999904e-05, 8.034700000000145e-05, 7.943099999999786e-05, 8.019499999999818e-05, 7.993099999999836e-05, 7.947300000000004e-05, 8.023600000000089e-05, 7.936100000000001e-05, 7.952800000000232e-05, 8.026400000000003e-05, 7.958299999999766e-05, 8.026400000000003e-05, 7.974999999999996e-05, 8.000000000000021e-05, 8.033399999999788e-05, 8.029199999999917e-05, 8.020799999999828e-05, 7.968000000000211e-05, 8.001399999999978e-05, 7.944499999999743e-05, 7.986100000000051e-05, 7.958299999999766e-05, 7.949999999999971e-05, 8.025000000000046e-05, 7.97909999999992e-05, 7.95840000000006e-05, 7.993100000000183e-05, 7.965300000000244e-05, 7.983300000000138e-05, 7.97779999999991e-05, 8.000000000000021e-05, 7.952799999999885e-05, 7.974999999999996e-05, 8.008300000000163e-05, 8.006999999999806e-05, 7.991700000000226e-05, 8.030599999999874e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.044" endtime="20201115 23:00:11.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.039" endtime="20201115 23:00:11.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.049" endtime="20201115 23:00:11.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.053" endtime="20201115 23:00:11.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.051" endtime="20201115 23:00:11.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.047" endtime="20201115 23:00:11.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.675" endtime="20201115 23:00:11.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.673" endtime="20201115 23:00:11.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.672" endtime="20201115 23:00:11.074"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.076" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.086" endtime="20201115 23:00:11.104"></status>
</kw>
<msg timestamp="20201115 23:00:11.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.084" endtime="20201115 23:00:11.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.106" endtime="20201115 23:00:11.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.108" endtime="20201115 23:00:11.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.081" endtime="20201115 23:00:11.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.079" endtime="20201115 23:00:11.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.118" endtime="20201115 23:00:11.404"></status>
</kw>
<msg timestamp="20201115 23:00:11.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025425403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025506042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.116" endtime="20201115 23:00:11.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025425403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025506042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.408" endtime="20201115 23:00:11.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.417" endtime="20201115 23:00:11.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.114" endtime="20201115 23:00:11.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.112" endtime="20201115 23:00:11.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.424" level="INFO">${RESULT} = [{'time': 0.025506042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.06390000000004e-05, 'source_diff': 8.06390000000004e-05}, {'time': 0.025610056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:11.420" endtime="20201115 23:00:11.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.438" level="INFO">${ACCURACY} = {'diff': [8.06390000000004e-05, 8.111199999999777e-05, 8.062500000000083e-05, 8.095799999999903e-05, 8.051400000000028e-05, 8.037500000000058e-05, 8.051400000000028e-05, 8.120799999999928e-05, 8.10140...</msg>
<status status="PASS" starttime="20201115 23:00:11.425" endtime="20201115 23:00:11.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.443" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.442" endtime="20201115 23:00:11.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.445" level="INFO">VALUE: [8.06390000000004e-05, 8.111199999999777e-05, 8.062500000000083e-05, 8.095799999999903e-05, 8.051400000000028e-05, 8.037500000000058e-05, 8.051400000000028e-05, 8.120799999999928e-05, 8.101400000000078e-05, 8.09169999999998e-05, 8.097200000000207e-05, 8.059699999999823e-05, 8.09169999999998e-05, 8.102700000000088e-05, 8.058399999999813e-05, 8.106900000000306e-05, 8.076400000000053e-05, 8.126400000000103e-05, 8.05970000000017e-05, 8.07780000000001e-05, 8.108299999999916e-05, 8.108299999999916e-05, 8.054199999999942e-05, 8.095799999999903e-05, 8.118099999999961e-05, 8.066699999999954e-05, 8.08329999999989e-05, 8.092999999999989e-05, 8.054200000000289e-05, 8.10970000000022e-05, 8.126400000000103e-05, 8.075000000000096e-05, 8.058300000000213e-05, 8.093099999999936e-05, 8.101399999999731e-05, 8.126400000000103e-05, 8.126300000000156e-05, 8.091600000000032e-05, 8.070799999999878e-05, 8.051400000000028e-05, 8.042999999999939e-05, 8.09580000000025e-05, 8.11109999999983e-05, 8.100000000000121e-05, 8.04169999999993e-05, 8.068099999999911e-05, 8.069399999999921e-05, 8.048600000000114e-05, 8.076400000000053e-05, 8.091600000000032e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.444" endtime="20201115 23:00:11.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.439" endtime="20201115 23:00:11.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.448" endtime="20201115 23:00:11.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.452" endtime="20201115 23:00:11.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.450" endtime="20201115 23:00:11.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.447" endtime="20201115 23:00:11.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.077" endtime="20201115 23:00:11.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.075" endtime="20201115 23:00:11.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.074" endtime="20201115 23:00:11.474"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.476" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.485" endtime="20201115 23:00:11.504"></status>
</kw>
<msg timestamp="20201115 23:00:11.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.483" endtime="20201115 23:00:11.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.506" endtime="20201115 23:00:11.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.508" endtime="20201115 23:00:11.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.481" endtime="20201115 23:00:11.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.479" endtime="20201115 23:00:11.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.518" endtime="20201115 23:00:11.804"></status>
</kw>
<msg timestamp="20201115 23:00:11.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025518444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025600264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.516" endtime="20201115 23:00:11.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025518444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025600264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.808" endtime="20201115 23:00:11.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.817" endtime="20201115 23:00:11.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.514" endtime="20201115 23:00:11.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.512" endtime="20201115 23:00:11.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.824" level="INFO">${RESULT} = [{'time': 0.025600264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.181999999999981e-05, 'source_diff': 8.181999999999981e-05}, {'time': 0.025703292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:11.820" endtime="20201115 23:00:11.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.838" level="INFO">${ACCURACY} = {'diff': [8.181999999999981e-05, 8.205600000000049e-05, 8.208300000000016e-05, 8.19309999999969e-05, 8.202799999999788e-05, 8.141600000000082e-05, 8.234799999999945e-05, 8.143000000000039e-05, 8.19999...</msg>
<status status="PASS" starttime="20201115 23:00:11.825" endtime="20201115 23:00:11.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.843" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.841" endtime="20201115 23:00:11.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.845" level="INFO">VALUE: [8.181999999999981e-05, 8.205600000000049e-05, 8.208300000000016e-05, 8.19309999999969e-05, 8.202799999999788e-05, 8.141600000000082e-05, 8.234799999999945e-05, 8.143000000000039e-05, 8.199999999999874e-05, 8.16109999999988e-05, 8.176400000000153e-05, 8.158299999999966e-05, 8.208300000000016e-05, 8.162499999999837e-05, 8.213799999999896e-05, 8.231900000000084e-05, 8.226400000000203e-05, 8.177700000000163e-05, 8.208300000000016e-05, 8.223599999999942e-05, 8.176400000000153e-05, 8.191599999999785e-05, 8.217999999999767e-05, 8.199999999999874e-05, 8.176399999999806e-05, 8.172200000000282e-05, 8.175000000000196e-05, 8.137499999999812e-05, 8.181900000000034e-05, 8.226300000000256e-05, 8.22780000000016e-05, 8.158299999999966e-05, 8.172199999999935e-05, 8.156999999999956e-05, 8.19170000000008e-05, 8.168100000000011e-05, 8.19589999999995e-05, 8.176400000000153e-05, 8.176400000000153e-05, 8.140200000000125e-05, 8.217999999999767e-05, 8.200000000000221e-05, 8.162500000000183e-05, 8.144499999999943e-05, 8.168100000000011e-05, 8.165300000000097e-05, 8.18329999999999e-05, 8.224999999999899e-05, 8.158399999999913e-05, 8.143000000000039e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.844" endtime="20201115 23:00:11.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.839" endtime="20201115 23:00:11.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.849" endtime="20201115 23:00:11.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.853" endtime="20201115 23:00:11.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.851" endtime="20201115 23:00:11.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.847" endtime="20201115 23:00:11.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.477" endtime="20201115 23:00:11.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.475" endtime="20201115 23:00:11.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.474" endtime="20201115 23:00:11.874"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.876" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.885" endtime="20201115 23:00:11.904"></status>
</kw>
<msg timestamp="20201115 23:00:11.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.884" endtime="20201115 23:00:11.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.906" endtime="20201115 23:00:11.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.909" endtime="20201115 23:00:11.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.881" endtime="20201115 23:00:11.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.879" endtime="20201115 23:00:11.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.918" endtime="20201115 23:00:12.204"></status>
</kw>
<msg timestamp="20201115 23:00:12.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025035653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025118347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.917" endtime="20201115 23:00:12.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025035653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025118347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.209" endtime="20201115 23:00:12.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.218" endtime="20201115 23:00:12.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.914" endtime="20201115 23:00:12.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.912" endtime="20201115 23:00:12.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.225" level="INFO">${RESULT} = [{'time': 0.025118347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.269399999999774e-05, 'source_diff': 8.269399999999774e-05}, {'time': 0.025220306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:12.221" endtime="20201115 23:00:12.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.239" level="INFO">${ACCURACY} = {'diff': [8.269399999999774e-05, 8.30980000000002e-05, 8.295800000000103e-05, 8.284700000000048e-05, 8.276399999999906e-05, 8.291600000000232e-05, 8.333299999999794e-05, 8.31110000000003e-05, 8.308299...</msg>
<status status="PASS" starttime="20201115 23:00:12.226" endtime="20201115 23:00:12.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.243" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.242" endtime="20201115 23:00:12.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.247" level="INFO">VALUE: [8.269399999999774e-05, 8.30980000000002e-05, 8.295800000000103e-05, 8.284700000000048e-05, 8.276399999999906e-05, 8.291600000000232e-05, 8.333299999999794e-05, 8.31110000000003e-05, 8.308299999999769e-05, 8.276400000000253e-05, 8.32780000000026e-05, 8.326399999999956e-05, 8.274999999999949e-05, 8.291699999999833e-05, 8.336099999999708e-05, 8.309700000000073e-05, 8.313899999999944e-05, 8.259700000000023e-05, 8.24170000000013e-05, 8.319500000000118e-05, 8.24170000000013e-05, 8.251399999999881e-05, 8.25979999999997e-05, 8.299999999999974e-05, 8.316700000000204e-05, 8.334700000000098e-05, 8.308300000000116e-05, 8.276399999999906e-05, 8.306900000000159e-05, 8.258299999999719e-05, 8.324999999999999e-05, 8.243100000000086e-05, 8.249999999999924e-05, 8.30980000000002e-05, 8.326399999999956e-05, 8.259700000000023e-05, 8.290200000000275e-05, 8.290299999999876e-05, 8.309700000000073e-05, 8.276399999999906e-05, 8.308299999999769e-05, 8.274999999999949e-05, 8.329200000000217e-05, 8.308400000000063e-05, 8.327699999999966e-05, 8.257000000000056e-05, 8.258300000000066e-05, 8.327799999999913e-05, 8.276400000000253e-05, 8.326399999999956e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.245" endtime="20201115 23:00:12.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.240" endtime="20201115 23:00:12.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.250" endtime="20201115 23:00:12.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.254" endtime="20201115 23:00:12.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.252" endtime="20201115 23:00:12.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.248" endtime="20201115 23:00:12.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.877" endtime="20201115 23:00:12.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.875" endtime="20201115 23:00:12.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.874" endtime="20201115 23:00:12.275"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.277" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.286" endtime="20201115 23:00:12.306"></status>
</kw>
<msg timestamp="20201115 23:00:12.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.284" endtime="20201115 23:00:12.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.308" endtime="20201115 23:00:12.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.310" endtime="20201115 23:00:12.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.282" endtime="20201115 23:00:12.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.280" endtime="20201115 23:00:12.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.320" endtime="20201115 23:00:12.606"></status>
</kw>
<msg timestamp="20201115 23:00:12.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026184708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026268347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.318" endtime="20201115 23:00:12.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026184708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026268347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.610" endtime="20201115 23:00:12.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.619" endtime="20201115 23:00:12.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.316" endtime="20201115 23:00:12.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.314" endtime="20201115 23:00:12.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.626" level="INFO">${RESULT} = [{'time': 0.026268347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.363899999999994e-05, 'source_diff': 8.363899999999994e-05}, {'time': 0.026369333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:12.622" endtime="20201115 23:00:12.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.646" level="INFO">${ACCURACY} = {'diff': [8.363899999999994e-05, 8.373599999999745e-05, 8.427800000000013e-05, 8.426399999999709e-05, 8.344499999999797e-05, 8.383299999999844e-05, 8.39720000000016e-05, 8.386099999999758e-05, 8.40839...</msg>
<status status="PASS" starttime="20201115 23:00:12.631" endtime="20201115 23:00:12.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.651" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.650" endtime="20201115 23:00:12.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.653" level="INFO">VALUE: [8.363899999999994e-05, 8.373599999999745e-05, 8.427800000000013e-05, 8.426399999999709e-05, 8.344499999999797e-05, 8.383299999999844e-05, 8.39720000000016e-05, 8.386099999999758e-05, 8.408399999999816e-05, 8.406999999999859e-05, 8.422199999999838e-05, 8.370799999999831e-05, 8.375000000000049e-05, 8.345800000000153e-05, 8.349999999999677e-05, 8.375000000000049e-05, 8.394500000000193e-05, 8.418099999999915e-05, 8.4153e-05, 8.422200000000185e-05, 8.36659999999996e-05, 8.417999999999967e-05, 8.431899999999937e-05, 8.340300000000272e-05, 8.354200000000242e-05, 8.408300000000216e-05, 8.39590000000015e-05, 8.433400000000188e-05, 8.376400000000006e-05, 8.374999999999702e-05, 8.426399999999709e-05, 8.375000000000049e-05, 8.41110000000013e-05, 8.342999999999892e-05, 8.401400000000031e-05, 8.36110000000008e-05, 8.343100000000186e-05, 8.436100000000155e-05, 8.426399999999709e-05, 8.34309999999984e-05, 8.368099999999865e-05, 8.431999999999884e-05, 8.424999999999752e-05, 8.423599999999795e-05, 8.409699999999826e-05, 8.394400000000246e-05, 8.402799999999988e-05, 8.356999999999809e-05, 8.373599999999745e-05, 8.343100000000186e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.652" endtime="20201115 23:00:12.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.647" endtime="20201115 23:00:12.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.656" endtime="20201115 23:00:12.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.660" endtime="20201115 23:00:12.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.658" endtime="20201115 23:00:12.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.655" endtime="20201115 23:00:12.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.278" endtime="20201115 23:00:12.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.276" endtime="20201115 23:00:12.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.275" endtime="20201115 23:00:12.682"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.684" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.693" endtime="20201115 23:00:12.712"></status>
</kw>
<msg timestamp="20201115 23:00:12.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.691" endtime="20201115 23:00:12.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.714" endtime="20201115 23:00:12.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.716" endtime="20201115 23:00:12.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.688" endtime="20201115 23:00:12.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.686" endtime="20201115 23:00:12.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.726" endtime="20201115 23:00:13.012"></status>
</kw>
<msg timestamp="20201115 23:00:13.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025257833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025342458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.724" endtime="20201115 23:00:13.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025257833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025342458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.017" endtime="20201115 23:00:13.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.026" endtime="20201115 23:00:13.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.721" endtime="20201115 23:00:13.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.720" endtime="20201115 23:00:13.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.033" level="INFO">${RESULT} = [{'time': 0.025342458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.462500000000137e-05, 'source_diff': 8.462500000000137e-05}, {'time': 0.025449486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:13.029" endtime="20201115 23:00:13.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.047" level="INFO">${ACCURACY} = {'diff': [8.462500000000137e-05, 8.476400000000106e-05, 8.530600000000027e-05, 8.527800000000113e-05, 8.444499999999897e-05, 8.483399999999891e-05, 8.491700000000033e-05, 8.44859999999982e-05, 8.46109...</msg>
<status status="PASS" starttime="20201115 23:00:13.034" endtime="20201115 23:00:13.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.052" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.051" endtime="20201115 23:00:13.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.054" level="INFO">VALUE: [8.462500000000137e-05, 8.476400000000106e-05, 8.530600000000027e-05, 8.527800000000113e-05, 8.444499999999897e-05, 8.483399999999891e-05, 8.491700000000033e-05, 8.44859999999982e-05, 8.461099999999833e-05, 8.509699999999926e-05, 8.493000000000042e-05, 8.499999999999827e-05, 8.526399999999809e-05, 8.490299999999729e-05, 8.466700000000008e-05, 8.518100000000015e-05, 8.518100000000015e-05, 8.518100000000015e-05, 8.534799999999898e-05, 8.525000000000199e-05, 8.499999999999827e-05, 8.512500000000187e-05, 8.46660000000006e-05, 8.53469999999995e-05, 8.524999999999852e-05, 8.44859999999982e-05, 8.472199999999888e-05, 8.518100000000015e-05, 8.498600000000217e-05, 8.476400000000106e-05, 8.509700000000273e-05, 8.511099999999883e-05, 8.440300000000026e-05, 8.448600000000167e-05, 8.47920000000002e-05, 8.441699999999983e-05, 8.518100000000015e-05, 8.490200000000128e-05, 8.49309999999999e-05, 8.533399999999941e-05, 8.51249999999984e-05, 8.527799999999766e-05, 8.442999999999992e-05, 8.53469999999995e-05, 8.459700000000223e-05, 8.495899999999904e-05, 8.469500000000268e-05, 8.484800000000195e-05, 8.469499999999922e-05, 8.491700000000033e-05]</msg>
<status status="PASS" starttime="20201115 23:00:13.053" endtime="20201115 23:00:13.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.048" endtime="20201115 23:00:13.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.057" endtime="20201115 23:00:13.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.061" endtime="20201115 23:00:13.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.059" endtime="20201115 23:00:13.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.056" endtime="20201115 23:00:13.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.685" endtime="20201115 23:00:13.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.683" endtime="20201115 23:00:13.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.682" endtime="20201115 23:00:13.082"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.085" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.093" endtime="20201115 23:00:13.113"></status>
</kw>
<msg timestamp="20201115 23:00:13.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.092" endtime="20201115 23:00:13.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.114" endtime="20201115 23:00:13.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.117" endtime="20201115 23:00:13.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.089" endtime="20201115 23:00:13.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.087" endtime="20201115 23:00:13.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.127" endtime="20201115 23:00:13.413"></status>
</kw>
<msg timestamp="20201115 23:00:13.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024934333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.125" endtime="20201115 23:00:13.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024934333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.417" endtime="20201115 23:00:13.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.426" endtime="20201115 23:00:13.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.122" endtime="20201115 23:00:13.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.120" endtime="20201115 23:00:13.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.433" level="INFO">${RESULT} = [{'time': 0.024934333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.545800000000006e-05, 'source_diff': 8.545800000000006e-05}, {'time': 0.025037403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:13.430" endtime="20201115 23:00:13.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.447" level="INFO">${ACCURACY} = {'diff': [8.545800000000006e-05, 8.597200000000013e-05, 8.59859999999997e-05, 8.626400000000256e-05, 8.558300000000019e-05, 8.56249999999989e-05, 8.59310000000009e-05, 8.568100000000065e-05, 8.6014000...</msg>
<status status="PASS" starttime="20201115 23:00:13.434" endtime="20201115 23:00:13.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.452" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.451" endtime="20201115 23:00:13.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.454" level="INFO">VALUE: [8.545800000000006e-05, 8.597200000000013e-05, 8.59859999999997e-05, 8.626400000000256e-05, 8.558300000000019e-05, 8.56249999999989e-05, 8.59310000000009e-05, 8.568100000000065e-05, 8.601400000000231e-05, 8.626299999999962e-05, 8.624999999999952e-05, 8.592999999999795e-05, 8.619400000000124e-05, 8.6153000000002e-05, 8.569500000000022e-05, 8.5847e-05, 8.541700000000083e-05, 8.554099999999801e-05, 8.591700000000133e-05, 8.577699999999869e-05, 8.626299999999962e-05, 8.545800000000006e-05, 8.601399999999884e-05, 8.62920000000017e-05, 8.581900000000087e-05, 8.577799999999816e-05, 8.559699999999976e-05, 8.611099999999983e-05, 8.605600000000102e-05, 8.541600000000135e-05, 8.568000000000117e-05, 8.583299999999697e-05, 8.602799999999841e-05, 8.572199999999988e-05, 8.609700000000026e-05, 8.559699999999976e-05, 8.591700000000133e-05, 8.552800000000138e-05, 8.591700000000133e-05, 8.632000000000084e-05, 8.575000000000249e-05, 8.591599999999838e-05, 8.551400000000181e-05, 8.626399999999909e-05, 8.618000000000167e-05, 8.602800000000188e-05, 8.626399999999909e-05, 8.591700000000133e-05, 8.583399999999991e-05, 8.543099999999693e-05]</msg>
<status status="PASS" starttime="20201115 23:00:13.453" endtime="20201115 23:00:13.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.448" endtime="20201115 23:00:13.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.458" endtime="20201115 23:00:13.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.461" endtime="20201115 23:00:13.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.460" endtime="20201115 23:00:13.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.456" endtime="20201115 23:00:13.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.085" endtime="20201115 23:00:13.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.084" endtime="20201115 23:00:13.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.083" endtime="20201115 23:00:13.483"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.485" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.494" endtime="20201115 23:00:13.513"></status>
</kw>
<msg timestamp="20201115 23:00:13.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.492" endtime="20201115 23:00:13.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.514" endtime="20201115 23:00:13.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.517" endtime="20201115 23:00:13.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.489" endtime="20201115 23:00:13.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.487" endtime="20201115 23:00:13.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.527" endtime="20201115 23:00:13.813"></status>
</kw>
<msg timestamp="20201115 23:00:13.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024824417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024911042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.525" endtime="20201115 23:00:13.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024824417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024911042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.817" endtime="20201115 23:00:13.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.826" endtime="20201115 23:00:13.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.523" endtime="20201115 23:00:13.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.521" endtime="20201115 23:00:13.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.833" level="INFO">${RESULT} = [{'time': 0.024911042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.66249999999999e-05, 'source_diff': 8.66249999999999e-05}, {'time': 0.025022042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:13.829" endtime="20201115 23:00:13.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.847" level="INFO">${ACCURACY} = {'diff': [8.66249999999999e-05, 8.687500000000015e-05, 8.654200000000195e-05, 8.652699999999944e-05, 8.694400000000199e-05, 8.6847000000001e-05, 8.709700000000126e-05, 8.693099999999843e-05, 8.6846999...</msg>
<status status="PASS" starttime="20201115 23:00:13.834" endtime="20201115 23:00:13.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.852" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.851" endtime="20201115 23:00:13.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.854" level="INFO">VALUE: [8.66249999999999e-05, 8.687500000000015e-05, 8.654200000000195e-05, 8.652699999999944e-05, 8.694400000000199e-05, 8.6847000000001e-05, 8.709700000000126e-05, 8.693099999999843e-05, 8.684699999999754e-05, 8.726400000000009e-05, 8.700000000000027e-05, 8.658400000000066e-05, 8.673699999999993e-05, 8.71250000000004e-05, 8.641599999999888e-05, 8.720799999999834e-05, 8.66669999999986e-05, 8.6847000000001e-05, 8.641699999999836e-05, 8.7153000000003e-05, 8.670800000000131e-05, 8.668099999999818e-05, 8.713899999999997e-05, 8.71799999999992e-05, 8.733300000000194e-05, 8.644399999999802e-05, 8.683300000000144e-05, 8.727799999999966e-05, 8.641699999999836e-05, 8.656899999999815e-05, 8.726400000000009e-05, 8.676399999999959e-05, 8.677699999999969e-05, 8.659700000000076e-05, 8.700000000000027e-05, 8.643000000000192e-05, 8.654200000000195e-05, 8.641700000000183e-05, 8.718099999999868e-05, 8.730600000000227e-05, 8.643000000000192e-05, 8.734800000000098e-05, 8.643099999999793e-05, 8.733400000000141e-05, 8.677699999999969e-05, 8.713899999999997e-05, 8.676399999999959e-05, 8.673600000000045e-05, 8.690300000000276e-05, 8.733300000000194e-05]</msg>
<status status="PASS" starttime="20201115 23:00:13.853" endtime="20201115 23:00:13.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.848" endtime="20201115 23:00:13.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.857" endtime="20201115 23:00:13.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.861" endtime="20201115 23:00:13.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.859" endtime="20201115 23:00:13.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.856" endtime="20201115 23:00:13.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.486" endtime="20201115 23:00:13.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.484" endtime="20201115 23:00:13.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.483" endtime="20201115 23:00:13.882"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.885" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.894" endtime="20201115 23:00:13.914"></status>
</kw>
<msg timestamp="20201115 23:00:13.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.892" endtime="20201115 23:00:13.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.916" endtime="20201115 23:00:13.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.918" endtime="20201115 23:00:13.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.889" endtime="20201115 23:00:13.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.887" endtime="20201115 23:00:13.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.928" endtime="20201115 23:00:14.214"></status>
</kw>
<msg timestamp="20201115 23:00:14.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026173431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026261222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.926" endtime="20201115 23:00:14.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026173431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026261222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.218" endtime="20201115 23:00:14.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.227" endtime="20201115 23:00:14.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.924" endtime="20201115 23:00:14.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.922" endtime="20201115 23:00:14.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.235" level="INFO">${RESULT} = [{'time': 0.026261222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.779100000000026e-05, 'source_diff': 8.779100000000026e-05}, {'time': 0.026366236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:14.231" endtime="20201115 23:00:14.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.250" level="INFO">${ACCURACY} = {'diff': [8.779100000000026e-05, 8.830500000000033e-05, 8.7944999999999e-05, 8.751400000000034e-05, 8.790300000000029e-05, 8.831999999999937e-05, 8.824999999999805e-05, 8.777700000000069e-05, 8.791600...</msg>
<status status="PASS" starttime="20201115 23:00:14.236" endtime="20201115 23:00:14.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.255" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.254" endtime="20201115 23:00:14.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.258" level="INFO">VALUE: [8.779100000000026e-05, 8.830500000000033e-05, 8.7944999999999e-05, 8.751400000000034e-05, 8.790300000000029e-05, 8.831999999999937e-05, 8.824999999999805e-05, 8.777700000000069e-05, 8.791600000000038e-05, 8.801400000000084e-05, 8.743000000000292e-05, 8.751400000000034e-05, 8.7638999999997e-05, 8.775000000000102e-05, 8.820799999999934e-05, 8.741699999999936e-05, 8.76669999999996e-05, 8.834800000000198e-05, 8.741599999999988e-05, 8.834699999999904e-05, 8.809699999999879e-05, 8.758299999999872e-05, 8.824999999999805e-05, 8.805599999999955e-05, 8.809699999999879e-05, 8.826400000000109e-05, 8.743099999999893e-05, 8.750000000000077e-05, 8.808300000000269e-05, 8.775000000000102e-05, 8.775000000000102e-05, 8.740299999999979e-05, 8.752799999999991e-05, 8.7944999999999e-05, 8.770900000000179e-05, 8.819499999999925e-05, 8.76120000000008e-05, 8.773599999999798e-05, 8.792999999999995e-05, 8.76799999999997e-05, 8.834699999999904e-05, 8.808299999999922e-05, 8.792999999999995e-05, 8.750000000000077e-05, 8.777800000000016e-05, 8.827700000000119e-05, 8.800000000000127e-05, 8.74310000000024e-05, 8.748599999999773e-05, 8.777699999999722e-05]</msg>
<status status="PASS" starttime="20201115 23:00:14.256" endtime="20201115 23:00:14.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.251" endtime="20201115 23:00:14.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.261" endtime="20201115 23:00:14.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.265" endtime="20201115 23:00:14.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.263" endtime="20201115 23:00:14.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.259" endtime="20201115 23:00:14.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.886" endtime="20201115 23:00:14.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.884" endtime="20201115 23:00:14.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.883" endtime="20201115 23:00:14.286"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.289" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.297" endtime="20201115 23:00:14.317"></status>
</kw>
<msg timestamp="20201115 23:00:14.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.296" endtime="20201115 23:00:14.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.318" endtime="20201115 23:00:14.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.321" endtime="20201115 23:00:14.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.293" endtime="20201115 23:00:14.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.291" endtime="20201115 23:00:14.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.331" endtime="20201115 23:00:14.617"></status>
</kw>
<msg timestamp="20201115 23:00:14.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025321542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025410514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.329" endtime="20201115 23:00:14.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025321542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025410514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.621" endtime="20201115 23:00:14.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.630" endtime="20201115 23:00:14.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.326" endtime="20201115 23:00:14.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.324" endtime="20201115 23:00:14.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.637" level="INFO">${RESULT} = [{'time': 0.025410514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.897199999999966e-05, 'source_diff': 8.897199999999966e-05}, {'time': 0.025515528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:14.633" endtime="20201115 23:00:14.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.651" level="INFO">${ACCURACY} = {'diff': [8.897199999999966e-05, 8.859699999999929e-05, 8.926399999999862e-05, 8.911099999999936e-05, 8.911100000000283e-05, 8.894400000000052e-05, 8.916600000000163e-05, 8.915300000000154e-05, 8.8986...</msg>
<status status="PASS" starttime="20201115 23:00:14.638" endtime="20201115 23:00:14.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.655" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.654" endtime="20201115 23:00:14.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.658" level="INFO">VALUE: [8.897199999999966e-05, 8.859699999999929e-05, 8.926399999999862e-05, 8.911099999999936e-05, 8.911100000000283e-05, 8.894400000000052e-05, 8.916600000000163e-05, 8.915300000000154e-05, 8.89860000000027e-05, 8.850000000000177e-05, 8.869499999999975e-05, 8.901399999999837e-05, 8.927800000000166e-05, 8.927699999999872e-05, 8.859699999999929e-05, 8.905500000000108e-05, 8.891599999999791e-05, 8.91800000000012e-05, 8.891699999999739e-05, 8.884700000000301e-05, 8.859699999999929e-05, 8.8945e-05, 8.895899999999957e-05, 8.909800000000273e-05, 8.844400000000002e-05, 8.84999999999983e-05, 8.929200000000123e-05, 8.858299999999972e-05, 8.858299999999972e-05, 8.858300000000319e-05, 8.8945e-05, 8.918100000000068e-05, 8.936200000000255e-05, 8.91389999999985e-05, 8.858299999999972e-05, 8.908300000000022e-05, 8.893000000000095e-05, 8.851399999999787e-05, 8.909699999999979e-05, 8.893100000000043e-05, 8.851400000000134e-05, 8.905600000000055e-05, 8.859799999999876e-05, 8.858399999999919e-05, 8.926299999999915e-05, 8.874999999999855e-05, 8.906900000000065e-05, 8.923599999999948e-05, 8.858299999999972e-05, 8.840299999999732e-05]</msg>
<status status="PASS" starttime="20201115 23:00:14.657" endtime="20201115 23:00:14.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.652" endtime="20201115 23:00:14.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.662" endtime="20201115 23:00:14.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.665" endtime="20201115 23:00:14.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.664" endtime="20201115 23:00:14.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.660" endtime="20201115 23:00:14.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.289" endtime="20201115 23:00:14.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.287" endtime="20201115 23:00:14.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.287" endtime="20201115 23:00:14.687"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.689" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.698" endtime="20201115 23:00:14.717"></status>
</kw>
<msg timestamp="20201115 23:00:14.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.696" endtime="20201115 23:00:14.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.718" endtime="20201115 23:00:14.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.721" endtime="20201115 23:00:14.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.693" endtime="20201115 23:00:14.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.691" endtime="20201115 23:00:14.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.731" endtime="20201115 23:00:15.018"></status>
</kw>
<msg timestamp="20201115 23:00:15.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024811875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024901986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.729" endtime="20201115 23:00:15.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024811875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024901986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.022" endtime="20201115 23:00:15.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.031" endtime="20201115 23:00:15.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.726" endtime="20201115 23:00:15.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.724" endtime="20201115 23:00:15.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.038" level="INFO">${RESULT} = [{'time': 0.024901986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.011100000000036e-05, 'source_diff': 9.011100000000036e-05}, {'time': 0.025011014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.034" endtime="20201115 23:00:15.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.051" level="INFO">${ACCURACY} = {'diff': [9.011100000000036e-05, 9.026400000000309e-05, 8.959700000000029e-05, 8.958400000000019e-05, 8.993099999999796e-05, 8.984700000000054e-05, 8.994399999999805e-05, 8.983300000000097e-05, 8.9735...</msg>
<status status="PASS" starttime="20201115 23:00:15.039" endtime="20201115 23:00:15.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.056" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.055" endtime="20201115 23:00:15.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.059" level="INFO">VALUE: [9.011100000000036e-05, 9.026400000000309e-05, 8.959700000000029e-05, 8.958400000000019e-05, 8.993099999999796e-05, 8.984700000000054e-05, 8.994399999999805e-05, 8.983300000000097e-05, 8.973599999999998e-05, 8.943100000000093e-05, 8.966699999999814e-05, 8.984800000000001e-05, 9.023600000000048e-05, 8.943100000000093e-05, 9.001399999999937e-05, 8.962499999999943e-05, 8.990199999999934e-05, 9.001399999999937e-05, 8.956899999999768e-05, 9.025000000000005e-05, 9.009699999999732e-05, 8.976399999999912e-05, 9.012499999999993e-05, 9.026399999999962e-05, 8.997200000000066e-05, 9.001399999999937e-05, 8.961099999999986e-05, 8.993000000000195e-05, 8.967999999999823e-05, 8.987499999999968e-05, 8.993100000000143e-05, 9.012499999999993e-05, 9.018100000000168e-05, 9.020900000000082e-05, 8.965300000000204e-05, 8.952699999999897e-05, 8.976299999999965e-05, 8.941600000000188e-05, 9.034699999999757e-05, 8.974999999999955e-05, 8.943000000000145e-05, 8.969499999999728e-05, 9.034700000000104e-05, 8.976399999999912e-05, 8.974999999999955e-05, 8.993100000000143e-05, 8.982000000000087e-05, 9.025000000000005e-05, 8.990300000000229e-05, 8.94999999999993e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.057" endtime="20201115 23:00:15.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.052" endtime="20201115 23:00:15.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.063" endtime="20201115 23:00:15.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.066" endtime="20201115 23:00:15.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.065" endtime="20201115 23:00:15.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.061" endtime="20201115 23:00:15.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.690" endtime="20201115 23:00:15.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.688" endtime="20201115 23:00:15.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.687" endtime="20201115 23:00:15.087"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.090" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.098" endtime="20201115 23:00:15.118"></status>
</kw>
<msg timestamp="20201115 23:00:15.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.097" endtime="20201115 23:00:15.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.119" endtime="20201115 23:00:15.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.122" endtime="20201115 23:00:15.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.094" endtime="20201115 23:00:15.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.092" endtime="20201115 23:00:15.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.132" endtime="20201115 23:00:15.418"></status>
</kw>
<msg timestamp="20201115 23:00:15.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024930875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025021333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.130" endtime="20201115 23:00:15.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024930875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025021333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.422" endtime="20201115 23:00:15.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.431" endtime="20201115 23:00:15.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.127" endtime="20201115 23:00:15.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.125" endtime="20201115 23:00:15.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.438" level="INFO">${RESULT} = [{'time': 0.025021333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.045799999999812e-05, 'source_diff': 9.045799999999812e-05}, {'time': 0.025133347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.434" endtime="20201115 23:00:15.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.452" level="INFO">${ACCURACY} = {'diff': [9.045799999999812e-05, 9.126400000000062e-05, 9.129199999999976e-05, 9.058299999999825e-05, 9.061100000000086e-05, 9.126400000000062e-05, 9.126400000000062e-05, 9.075000000000055e-05, 9.1096...</msg>
<status status="PASS" starttime="20201115 23:00:15.439" endtime="20201115 23:00:15.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.457" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.456" endtime="20201115 23:00:15.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.459" level="INFO">VALUE: [9.045799999999812e-05, 9.126400000000062e-05, 9.129199999999976e-05, 9.058299999999825e-05, 9.061100000000086e-05, 9.126400000000062e-05, 9.126400000000062e-05, 9.075000000000055e-05, 9.109699999999832e-05, 9.122200000000191e-05, 9.122200000000191e-05, 9.098600000000123e-05, 9.138900000000075e-05, 9.055500000000258e-05, 9.108299999999875e-05, 9.127800000000019e-05, 9.068100000000218e-05, 9.119499999999878e-05, 9.133399999999847e-05, 9.041599999999941e-05, 9.083300000000197e-05, 9.077799999999969e-05, 9.077799999999969e-05, 9.059700000000129e-05, 9.041699999999889e-05, 9.118099999999921e-05, 9.06670000000026e-05, 9.134799999999804e-05, 9.129100000000029e-05, 9.111100000000136e-05, 9.076400000000012e-05, 9.037500000000018e-05, 9.120899999999835e-05, 9.051399999999987e-05, 9.091699999999939e-05, 9.075000000000055e-05, 9.083400000000144e-05, 9.123600000000148e-05, 9.043000000000245e-05, 9.06520000000001e-05, 9.10139999999969e-05, 9.041600000000288e-05, 9.134700000000204e-05, 9.1332999999999e-05, 9.073600000000098e-05, 9.04450000000015e-05, 9.066699999999914e-05, 9.088900000000025e-05, 9.070899999999785e-05, 9.061100000000086e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.458" endtime="20201115 23:00:15.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.453" endtime="20201115 23:00:15.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.463" endtime="20201115 23:00:15.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.467" endtime="20201115 23:00:15.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.465" endtime="20201115 23:00:15.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.461" endtime="20201115 23:00:15.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.091" endtime="20201115 23:00:15.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.089" endtime="20201115 23:00:15.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.088" endtime="20201115 23:00:15.488"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.490" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.499" endtime="20201115 23:00:15.519"></status>
</kw>
<msg timestamp="20201115 23:00:15.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.497" endtime="20201115 23:00:15.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.521" endtime="20201115 23:00:15.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.524" endtime="20201115 23:00:15.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.495" endtime="20201115 23:00:15.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.492" endtime="20201115 23:00:15.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.533" endtime="20201115 23:00:15.819"></status>
</kw>
<msg timestamp="20201115 23:00:15.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025856556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025948042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.531" endtime="20201115 23:00:15.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025856556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025948042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.824" endtime="20201115 23:00:15.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.832" endtime="20201115 23:00:15.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.529" endtime="20201115 23:00:15.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.527" endtime="20201115 23:00:15.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.840" level="INFO">${RESULT} = [{'time': 0.025948042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.148600000000173e-05, 'source_diff': 9.148600000000173e-05}, {'time': 0.026057042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.836" endtime="20201115 23:00:15.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.855" level="INFO">${ACCURACY} = {'diff': [9.148600000000173e-05, 9.226399999999815e-05, 9.176400000000112e-05, 9.226300000000215e-05, 9.158300000000272e-05, 9.205500000000061e-05, 9.175000000000155e-05, 9.175000000000155e-05, 9.1473...</msg>
<status status="PASS" starttime="20201115 23:00:15.841" endtime="20201115 23:00:15.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.860" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.859" endtime="20201115 23:00:15.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.862" level="INFO">VALUE: [9.148600000000173e-05, 9.226399999999815e-05, 9.176400000000112e-05, 9.226300000000215e-05, 9.158300000000272e-05, 9.205500000000061e-05, 9.175000000000155e-05, 9.175000000000155e-05, 9.147300000000164e-05, 9.218100000000021e-05, 9.202800000000094e-05, 9.180500000000036e-05, 9.224999999999858e-05, 9.193000000000048e-05, 9.186100000000211e-05, 9.222199999999944e-05, 9.158300000000272e-05, 9.141700000000336e-05, 9.216700000000064e-05, 9.152800000000044e-05, 9.208400000000269e-05, 9.227799999999772e-05, 9.211099999999889e-05, 9.142999999999998e-05, 9.212499999999846e-05, 9.179099999999732e-05, 9.226399999999815e-05, 9.141699999999989e-05, 9.18329999999995e-05, 9.173599999999851e-05, 9.159800000000176e-05, 9.159800000000176e-05, 9.159800000000176e-05, 9.142999999999998e-05, 9.21520000000016e-05, 9.152799999999697e-05, 9.159699999999882e-05, 9.191700000000039e-05, 9.18329999999995e-05, 9.191700000000039e-05, 9.151400000000087e-05, 9.209800000000226e-05, 9.141699999999989e-05, 9.2333e-05, 9.193000000000048e-05, 9.217999999999726e-05, 9.180500000000036e-05, 9.176399999999765e-05, 9.208299999999975e-05, 9.176399999999765e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.861" endtime="20201115 23:00:15.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.856" endtime="20201115 23:00:15.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.866" endtime="20201115 23:00:15.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.869" endtime="20201115 23:00:15.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.868" endtime="20201115 23:00:15.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.864" endtime="20201115 23:00:15.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.491" endtime="20201115 23:00:15.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.489" endtime="20201115 23:00:15.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.488" endtime="20201115 23:00:15.890"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.893" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.902" endtime="20201115 23:00:15.921"></status>
</kw>
<msg timestamp="20201115 23:00:15.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.900" endtime="20201115 23:00:15.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.923" endtime="20201115 23:00:15.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.925" endtime="20201115 23:00:15.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.897" endtime="20201115 23:00:15.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.895" endtime="20201115 23:00:15.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.935" endtime="20201115 23:00:16.222"></status>
</kw>
<msg timestamp="20201115 23:00:16.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024922208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025014986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.933" endtime="20201115 23:00:16.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024922208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025014986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.227" endtime="20201115 23:00:16.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.235" endtime="20201115 23:00:16.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.930" endtime="20201115 23:00:16.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.929" endtime="20201115 23:00:16.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.242" level="INFO">${RESULT} = [{'time': 0.025014986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.277799999999822e-05, 'source_diff': 9.277799999999822e-05}, {'time': 0.025129, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:16.239" endtime="20201115 23:00:16.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.256" level="INFO">${ACCURACY} = {'diff': [9.277799999999822e-05, 9.284700000000007e-05, 9.244500000000003e-05, 9.302799999999847e-05, 9.293100000000096e-05, 9.25269999999985e-05, 9.258300000000025e-05, 9.294399999999758e-05, 9.28330...</msg>
<status status="PASS" starttime="20201115 23:00:16.243" endtime="20201115 23:00:16.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.261" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.260" endtime="20201115 23:00:16.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.264" level="INFO">VALUE: [9.277799999999822e-05, 9.284700000000007e-05, 9.244500000000003e-05, 9.302799999999847e-05, 9.293100000000096e-05, 9.25269999999985e-05, 9.258300000000025e-05, 9.294399999999758e-05, 9.28330000000005e-05, 9.274999999999908e-05, 9.326399999999915e-05, 9.309700000000032e-05, 9.29590000000001e-05, 9.284700000000007e-05, 9.287499999999921e-05, 9.284799999999954e-05, 9.287499999999921e-05, 9.268000000000123e-05, 9.336100000000014e-05, 9.273599999999951e-05, 9.329200000000176e-05, 9.256900000000068e-05, 9.290300000000182e-05, 9.318100000000121e-05, 9.336199999999961e-05, 9.326399999999915e-05, 9.308300000000075e-05, 9.309700000000032e-05, 9.274999999999908e-05, 9.244400000000055e-05, 9.280600000000083e-05, 9.273599999999951e-05, 9.273599999999951e-05, 9.293100000000096e-05, 9.320800000000087e-05, 9.322200000000044e-05, 9.26940000000008e-05, 9.326399999999915e-05, 9.30139999999989e-05, 9.276399999999865e-05, 9.291700000000139e-05, 9.284700000000007e-05, 9.277800000000169e-05, 9.322299999999992e-05, 9.327699999999925e-05, 9.291699999999792e-05, 9.26940000000008e-05, 9.284700000000007e-05, 9.258299999999678e-05, 9.309700000000032e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.263" endtime="20201115 23:00:16.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.257" endtime="20201115 23:00:16.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.268" endtime="20201115 23:00:16.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.272" endtime="20201115 23:00:16.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.270" endtime="20201115 23:00:16.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.266" endtime="20201115 23:00:16.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.894" endtime="20201115 23:00:16.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.892" endtime="20201115 23:00:16.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.891" endtime="20201115 23:00:16.294"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.296" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.305" endtime="20201115 23:00:16.324"></status>
</kw>
<msg timestamp="20201115 23:00:16.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.303" endtime="20201115 23:00:16.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.326" endtime="20201115 23:00:16.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.329" endtime="20201115 23:00:16.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.300" endtime="20201115 23:00:16.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.298" endtime="20201115 23:00:16.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.339" endtime="20201115 23:00:16.625"></status>
</kw>
<msg timestamp="20201115 23:00:16.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02490775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:16.337" endtime="20201115 23:00:16.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02490775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:16.630" endtime="20201115 23:00:16.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.639" endtime="20201115 23:00:16.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.334" endtime="20201115 23:00:16.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.332" endtime="20201115 23:00:16.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.646" level="INFO">${RESULT} = [{'time': 0.025002056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.430600000000233e-05, 'source_diff': 9.430600000000233e-05}, {'time': 0.025115056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:16.642" endtime="20201115 23:00:16.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.659" level="INFO">${ACCURACY} = {'diff': [9.430600000000233e-05, 9.413900000000003e-05, 9.349999999999983e-05, 9.379200000000226e-05, 9.391599999999944e-05, 9.417999999999926e-05, 9.402799999999947e-05, 9.405600000000208e-05, 9.3402...</msg>
<status status="PASS" starttime="20201115 23:00:16.647" endtime="20201115 23:00:16.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.664" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.663" endtime="20201115 23:00:16.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.667" level="INFO">VALUE: [9.430600000000233e-05, 9.413900000000003e-05, 9.349999999999983e-05, 9.379200000000226e-05, 9.391599999999944e-05, 9.417999999999926e-05, 9.402799999999947e-05, 9.405600000000208e-05, 9.340299999999885e-05, 9.418100000000221e-05, 9.404099999999957e-05, 9.392999999999901e-05, 9.35139999999994e-05, 9.398600000000076e-05, 9.381899999999846e-05, 9.425000000000058e-05, 9.358299999999778e-05, 9.391700000000239e-05, 9.388899999999978e-05, 9.402799999999947e-05, 9.394400000000205e-05, 9.384700000000107e-05, 9.422199999999797e-05, 9.341599999999894e-05, 9.35139999999994e-05, 9.352799999999897e-05, 9.394500000000153e-05, 9.402799999999947e-05, 9.344500000000103e-05, 9.400000000000033e-05, 9.343000000000198e-05, 9.348600000000026e-05, 9.426400000000015e-05, 9.341599999999894e-05, 9.400000000000033e-05, 9.358300000000125e-05, 9.359700000000082e-05, 9.336100000000014e-05, 9.386200000000011e-05, 9.391699999999892e-05, 9.361100000000039e-05, 9.384700000000107e-05, 9.359699999999735e-05, 9.348600000000026e-05, 9.363899999999953e-05, 9.434700000000157e-05, 9.358400000000072e-05, 9.427799999999972e-05, 9.431999999999843e-05, 9.392999999999901e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.665" endtime="20201115 23:00:16.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.660" endtime="20201115 23:00:16.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.670" endtime="20201115 23:00:16.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.674" endtime="20201115 23:00:16.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.672" endtime="20201115 23:00:16.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.668" endtime="20201115 23:00:16.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.297" endtime="20201115 23:00:16.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.295" endtime="20201115 23:00:16.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.294" endtime="20201115 23:00:16.695"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.697" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.707" endtime="20201115 23:00:16.725"></status>
</kw>
<msg timestamp="20201115 23:00:16.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.705" endtime="20201115 23:00:16.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.727" endtime="20201115 23:00:16.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.730" endtime="20201115 23:00:16.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.702" endtime="20201115 23:00:16.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.699" endtime="20201115 23:00:16.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.739" endtime="20201115 23:00:17.025"></status>
</kw>
<msg timestamp="20201115 23:00:17.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025386083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025480722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.738" endtime="20201115 23:00:17.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025386083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025480722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.030" endtime="20201115 23:00:17.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.038" endtime="20201115 23:00:17.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.735" endtime="20201115 23:00:17.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.733" endtime="20201115 23:00:17.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.045" level="INFO">${RESULT} = [{'time': 0.025480722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.463900000000053e-05, 'source_diff': 9.463900000000053e-05}, {'time': 0.02559775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:17.042" endtime="20201115 23:00:17.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.059" level="INFO">${ACCURACY} = {'diff': [9.463900000000053e-05, 9.524999999999811e-05, 9.458300000000225e-05, 9.493099999999949e-05, 9.51530000000006e-05, 9.481999999999893e-05, 9.458400000000172e-05, 9.509699999999885e-05, 9.46110...</msg>
<status status="PASS" starttime="20201115 23:00:17.046" endtime="20201115 23:00:17.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.064" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.063" endtime="20201115 23:00:17.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.066" level="INFO">VALUE: [9.463900000000053e-05, 9.524999999999811e-05, 9.458300000000225e-05, 9.493099999999949e-05, 9.51530000000006e-05, 9.481999999999893e-05, 9.458400000000172e-05, 9.509699999999885e-05, 9.461100000000139e-05, 9.462500000000096e-05, 9.476400000000065e-05, 9.477800000000022e-05, 9.475000000000108e-05, 9.491699999999992e-05, 9.53469999999991e-05, 9.441699999999942e-05, 9.518000000000026e-05, 9.484700000000207e-05, 9.476400000000065e-05, 9.442999999999951e-05, 9.530500000000039e-05, 9.476400000000065e-05, 9.493100000000296e-05, 9.50140000000009e-05, 9.469499999999881e-05, 9.459800000000129e-05, 9.527699999999778e-05, 9.444399999999908e-05, 9.51530000000006e-05, 9.504200000000004e-05, 9.444399999999908e-05, 9.519399999999983e-05, 9.443100000000246e-05, 9.484700000000207e-05, 9.441700000000289e-05, 9.536100000000214e-05, 9.450000000000083e-05, 9.467999999999976e-05, 9.484700000000207e-05, 9.479200000000326e-05, 9.458300000000225e-05, 9.461100000000139e-05, 9.458300000000225e-05, 9.438900000000028e-05, 9.534799999999857e-05, 9.474999999999761e-05, 9.477700000000075e-05, 9.526400000000115e-05, 9.509700000000232e-05, 9.53469999999991e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.065" endtime="20201115 23:00:17.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.060" endtime="20201115 23:00:17.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.070" endtime="20201115 23:00:17.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.073" endtime="20201115 23:00:17.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.072" endtime="20201115 23:00:17.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.068" endtime="20201115 23:00:17.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.698" endtime="20201115 23:00:17.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.696" endtime="20201115 23:00:17.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.695" endtime="20201115 23:00:17.095"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.097" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.106" endtime="20201115 23:00:17.127"></status>
</kw>
<msg timestamp="20201115 23:00:17.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.104" endtime="20201115 23:00:17.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.128" endtime="20201115 23:00:17.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.131" endtime="20201115 23:00:17.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.102" endtime="20201115 23:00:17.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.100" endtime="20201115 23:00:17.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.141" endtime="20201115 23:00:17.427"></status>
</kw>
<msg timestamp="20201115 23:00:17.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026185639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026281264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.139" endtime="20201115 23:00:17.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026185639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026281264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.431" endtime="20201115 23:00:17.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.440" endtime="20201115 23:00:17.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.136" endtime="20201115 23:00:17.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.134" endtime="20201115 23:00:17.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.447" level="INFO">${RESULT} = [{'time': 0.026281264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.562499999999849e-05, 'source_diff': 9.562499999999849e-05}, {'time': 0.026396278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:17.443" endtime="20201115 23:00:17.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.462" level="INFO">${ACCURACY} = {'diff': [9.562499999999849e-05, 9.554199999999707e-05, 9.625000000000258e-05, 9.543099999999999e-05, 9.549999999999836e-05, 9.591600000000144e-05, 9.55140000000014e-05, 9.609699999999985e-05, 9.60969...</msg>
<status status="PASS" starttime="20201115 23:00:17.448" endtime="20201115 23:00:17.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.467" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.465" endtime="20201115 23:00:17.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.469" level="INFO">VALUE: [9.562499999999849e-05, 9.554199999999707e-05, 9.625000000000258e-05, 9.543099999999999e-05, 9.549999999999836e-05, 9.591600000000144e-05, 9.55140000000014e-05, 9.609699999999985e-05, 9.609699999999985e-05, 9.543099999999999e-05, 9.569499999999981e-05, 9.618100000000074e-05, 9.56660000000012e-05, 9.601299999999896e-05, 9.623599999999954e-05, 9.541600000000094e-05, 9.566599999999773e-05, 9.583300000000003e-05, 9.608300000000028e-05, 9.575000000000208e-05, 9.609699999999985e-05, 9.576399999999818e-05, 9.593100000000049e-05, 9.568000000000076e-05, 9.58469999999996e-05, 9.611099999999942e-05, 9.547199999999922e-05, 9.566700000000067e-05, 9.63470000000001e-05, 9.593100000000049e-05, 9.568100000000024e-05, 9.622199999999997e-05, 9.618000000000126e-05, 9.600000000000233e-05, 9.556900000000021e-05, 9.606899999999724e-05, 9.559700000000282e-05, 9.608299999999681e-05, 9.591700000000092e-05, 9.60140000000019e-05, 9.574999999999861e-05, 9.556900000000021e-05, 9.559699999999935e-05, 9.626400000000215e-05, 9.626399999999868e-05, 9.609699999999638e-05, 9.559699999999588e-05, 9.627799999999825e-05, 9.612499999999552e-05, 9.576399999999818e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.468" endtime="20201115 23:00:17.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.463" endtime="20201115 23:00:17.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.473" endtime="20201115 23:00:17.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.476" endtime="20201115 23:00:17.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.475" endtime="20201115 23:00:17.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.471" endtime="20201115 23:00:17.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.098" endtime="20201115 23:00:17.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.096" endtime="20201115 23:00:17.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.095" endtime="20201115 23:00:17.498"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.500" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.509" endtime="20201115 23:00:17.528"></status>
</kw>
<msg timestamp="20201115 23:00:17.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.507" endtime="20201115 23:00:17.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.530" endtime="20201115 23:00:17.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.532" endtime="20201115 23:00:17.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.504" endtime="20201115 23:00:17.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.502" endtime="20201115 23:00:17.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.542" endtime="20201115 23:00:17.828"></status>
</kw>
<msg timestamp="20201115 23:00:17.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024924931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025022208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.541" endtime="20201115 23:00:17.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024924931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025022208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.832" endtime="20201115 23:00:17.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.841" endtime="20201115 23:00:17.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.538" endtime="20201115 23:00:17.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.536" endtime="20201115 23:00:17.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.848" level="INFO">${RESULT} = [{'time': 0.025022208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.727699999999978e-05, 'source_diff': 9.727699999999978e-05}, {'time': 0.025142222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:17.844" endtime="20201115 23:00:17.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.862" level="INFO">${ACCURACY} = {'diff': [9.727699999999978e-05, 9.666599999999873e-05, 9.694400000000158e-05, 9.704200000000204e-05, 9.643100000000099e-05, 9.643100000000099e-05, 9.723600000000054e-05, 9.723700000000002e-05, 9.7263...</msg>
<status status="PASS" starttime="20201115 23:00:17.849" endtime="20201115 23:00:17.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.867" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.866" endtime="20201115 23:00:17.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.874" level="INFO">VALUE: [9.727699999999978e-05, 9.666599999999873e-05, 9.694400000000158e-05, 9.704200000000204e-05, 9.643100000000099e-05, 9.643100000000099e-05, 9.723600000000054e-05, 9.723700000000002e-05, 9.726300000000021e-05, 9.706900000000171e-05, 9.677799999999875e-05, 9.709700000000085e-05, 9.688899999999931e-05, 9.73609999999972e-05, 9.676400000000265e-05, 9.643099999999752e-05, 9.736100000000067e-05, 9.709699999999738e-05, 9.697200000000072e-05, 9.683300000000103e-05, 9.676399999999918e-05, 9.726399999999968e-05, 9.720799999999793e-05, 9.674999999999961e-05, 9.723600000000054e-05, 9.676399999999918e-05, 9.637499999999924e-05, 9.731899999999849e-05, 9.68470000000006e-05, 9.684699999999713e-05, 9.709700000000085e-05, 9.676399999999918e-05, 9.708300000000128e-05, 9.659799999999982e-05, 9.679099999999885e-05, 9.725000000000011e-05, 9.692999999999855e-05, 9.716599999999923e-05, 9.666599999999873e-05, 9.71799999999988e-05, 9.649999999999936e-05, 9.643100000000099e-05, 9.7334000000001e-05, 9.697199999999725e-05, 9.687499999999974e-05, 9.705599999999814e-05, 9.725000000000011e-05, 9.709699999999738e-05, 9.674999999999961e-05, 9.682000000000093e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.868" endtime="20201115 23:00:17.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.863" endtime="20201115 23:00:17.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.877" endtime="20201115 23:00:17.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.881" endtime="20201115 23:00:17.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.879" endtime="20201115 23:00:17.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.875" endtime="20201115 23:00:17.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.501" endtime="20201115 23:00:17.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.499" endtime="20201115 23:00:17.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.498" endtime="20201115 23:00:17.902"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.904" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.913" endtime="20201115 23:00:17.934"></status>
</kw>
<msg timestamp="20201115 23:00:17.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.912" endtime="20201115 23:00:17.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.935" endtime="20201115 23:00:17.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.938" endtime="20201115 23:00:17.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.909" endtime="20201115 23:00:17.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.907" endtime="20201115 23:00:17.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.947" endtime="20201115 23:00:18.234"></status>
</kw>
<msg timestamp="20201115 23:00:18.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025287403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025385208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.946" endtime="20201115 23:00:18.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025287403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025385208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.238" endtime="20201115 23:00:18.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.247" endtime="20201115 23:00:18.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.943" endtime="20201115 23:00:18.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.941" endtime="20201115 23:00:18.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.254" level="INFO">${RESULT} = [{'time': 0.025385208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.780499999999942e-05, 'source_diff': 9.780499999999942e-05}, {'time': 0.025506222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:18.250" endtime="20201115 23:00:18.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.268" level="INFO">${ACCURACY} = {'diff': [9.780499999999942e-05, 9.81799999999998e-05, 9.81669999999997e-05, 9.801400000000043e-05, 9.790299999999988e-05, 9.829199999999982e-05, 9.747200000000122e-05, 9.791699999999945e-05, 9.779099...</msg>
<status status="PASS" starttime="20201115 23:00:18.255" endtime="20201115 23:00:18.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.273" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.272" endtime="20201115 23:00:18.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.275" level="INFO">VALUE: [9.780499999999942e-05, 9.81799999999998e-05, 9.81669999999997e-05, 9.801400000000043e-05, 9.790299999999988e-05, 9.829199999999982e-05, 9.747200000000122e-05, 9.791699999999945e-05, 9.779099999999985e-05, 9.792999999999955e-05, 9.751399999999993e-05, 9.825000000000111e-05, 9.793099999999902e-05, 9.765299999999963e-05, 9.783300000000203e-05, 9.757000000000168e-05, 9.775000000000061e-05, 9.770900000000138e-05, 9.777700000000028e-05, 9.774999999999714e-05, 9.809699999999838e-05, 9.761099999999745e-05, 9.758299999999831e-05, 9.741699999999895e-05, 9.819499999999884e-05, 9.818099999999927e-05, 9.751299999999699e-05, 9.826399999999721e-05, 9.806899999999924e-05, 9.794500000000206e-05, 9.783300000000203e-05, 9.775000000000061e-05, 9.827800000000025e-05, 9.773600000000104e-05, 9.744399999999862e-05, 9.80410000000001e-05, 9.809699999999838e-05, 9.809700000000185e-05, 9.775000000000061e-05, 9.776400000000018e-05, 9.806900000000271e-05, 9.776399999999671e-05, 9.777799999999975e-05, 9.775000000000061e-05, 9.743100000000199e-05, 9.800000000000086e-05, 9.742999999999905e-05, 9.752800000000297e-05, 9.740299999999938e-05, 9.78470000000016e-05]</msg>
<status status="PASS" starttime="20201115 23:00:18.274" endtime="20201115 23:00:18.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.269" endtime="20201115 23:00:18.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.279" endtime="20201115 23:00:18.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.282" endtime="20201115 23:00:18.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.281" endtime="20201115 23:00:18.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.277" endtime="20201115 23:00:18.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.905" endtime="20201115 23:00:18.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.903" endtime="20201115 23:00:18.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.902" endtime="20201115 23:00:18.304"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.306" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.315" endtime="20201115 23:00:18.335"></status>
</kw>
<msg timestamp="20201115 23:00:18.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.313" endtime="20201115 23:00:18.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.336" endtime="20201115 23:00:18.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.339" endtime="20201115 23:00:18.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.311" endtime="20201115 23:00:18.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.308" endtime="20201115 23:00:18.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.349" endtime="20201115 23:00:18.635"></status>
</kw>
<msg timestamp="20201115 23:00:18.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025357389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025456181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.347" endtime="20201115 23:00:18.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025357389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025456181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.639" endtime="20201115 23:00:18.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.648" endtime="20201115 23:00:18.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.345" endtime="20201115 23:00:18.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.343" endtime="20201115 23:00:18.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.655" level="INFO">${RESULT} = [{'time': 0.025456181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.879200000000032e-05, 'source_diff': 9.879200000000032e-05}, {'time': 0.025575208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:18.652" endtime="20201115 23:00:18.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.670" level="INFO">${ACCURACY} = {'diff': [9.879200000000032e-05, 9.88609999999987e-05, 9.88059999999999e-05, 9.84020000000009e-05, 9.84860000000018e-05, 9.909699999999938e-05, 9.890300000000088e-05, 9.933300000000006e-05, 9.92780000...</msg>
<status status="PASS" starttime="20201115 23:00:18.657" endtime="20201115 23:00:18.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.674" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.673" endtime="20201115 23:00:18.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.677" level="INFO">VALUE: [9.879200000000032e-05, 9.88609999999987e-05, 9.88059999999999e-05, 9.84020000000009e-05, 9.84860000000018e-05, 9.909699999999938e-05, 9.890300000000088e-05, 9.933300000000006e-05, 9.927800000000125e-05, 9.883399999999903e-05, 9.873599999999857e-05, 9.856899999999974e-05, 9.875000000000161e-05, 9.905500000000067e-05, 9.876399999999771e-05, 9.891700000000045e-05, 9.891600000000098e-05, 9.877799999999728e-05, 9.893100000000002e-05, 9.861100000000192e-05, 9.919400000000037e-05, 9.89999999999984e-05, 9.862499999999802e-05, 9.840300000000038e-05, 9.851400000000093e-05, 9.861100000000192e-05, 9.893100000000002e-05, 9.91670000000007e-05, 9.918100000000027e-05, 9.933300000000006e-05, 9.859700000000235e-05, 9.924999999999864e-05, 9.911100000000242e-05, 9.922200000000297e-05, 9.891700000000045e-05, 9.920900000000288e-05, 9.865300000000063e-05, 9.93609999999992e-05, 9.891700000000045e-05, 9.851400000000093e-05, 9.859700000000235e-05, 9.925000000000211e-05, 9.856899999999974e-05, 9.836100000000167e-05, 9.933300000000006e-05, 9.891700000000045e-05, 9.933399999999953e-05, 9.894399999999665e-05, 9.916599999999776e-05, 9.916600000000123e-05]</msg>
<status status="PASS" starttime="20201115 23:00:18.676" endtime="20201115 23:00:18.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.671" endtime="20201115 23:00:18.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.680" endtime="20201115 23:00:18.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.684" endtime="20201115 23:00:18.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.682" endtime="20201115 23:00:18.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.679" endtime="20201115 23:00:18.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.307" endtime="20201115 23:00:18.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.305" endtime="20201115 23:00:18.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.304" endtime="20201115 23:00:18.705"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.708" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.717" endtime="20201115 23:00:18.738"></status>
</kw>
<msg timestamp="20201115 23:00:18.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.715" endtime="20201115 23:00:18.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.739" endtime="20201115 23:00:18.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.742" endtime="20201115 23:00:18.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.712" endtime="20201115 23:00:18.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.710" endtime="20201115 23:00:18.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.752" endtime="20201115 23:00:19.038"></status>
</kw>
<msg timestamp="20201115 23:00:19.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025930375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026030292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.750" endtime="20201115 23:00:19.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025930375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026030292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.042" endtime="20201115 23:00:19.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.051" endtime="20201115 23:00:19.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.747" endtime="20201115 23:00:19.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.745" endtime="20201115 23:00:19.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.058" level="INFO">${RESULT} = [{'time': 0.026030292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.991700000000145e-05, 'source_diff': 9.991700000000145e-05}, {'time': 0.026146319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:19.054" endtime="20201115 23:00:19.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.073" level="INFO">${ACCURACY} = {'diff': [9.991700000000145e-05, 9.994400000000112e-05, 9.98609999999997e-05, 9.942999999999758e-05, 0.00010034700000000063, 9.977799999999828e-05, 9.961099999999945e-05, 9.993099999999755e-05, 0.0001...</msg>
<status status="PASS" starttime="20201115 23:00:19.059" endtime="20201115 23:00:19.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.078" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.077" endtime="20201115 23:00:19.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.080" level="INFO">VALUE: [9.991700000000145e-05, 9.994400000000112e-05, 9.98609999999997e-05, 9.942999999999758e-05, 0.00010034700000000063, 9.977799999999828e-05, 9.961099999999945e-05, 9.993099999999755e-05, 0.00010034700000000063, 9.993100000000102e-05, 9.976399999999871e-05, 9.943000000000105e-05, 9.969400000000087e-05, 0.00010033299999999759, 9.958300000000031e-05, 9.977800000000175e-05, 9.976400000000218e-05, 9.976399999999871e-05, 9.958399999999978e-05, 0.00010008400000000028, 9.941700000000095e-05, 9.984700000000013e-05, 9.958300000000031e-05, 0.00010023600000000008, 9.961100000000292e-05, 9.958299999999684e-05, 9.973600000000304e-05, 9.943099999999705e-05, 9.983400000000003e-05, 9.944399999999715e-05, 9.950000000000236e-05, 9.940199999999844e-05, 9.98609999999997e-05, 0.00010009700000000038, 9.976399999999871e-05, 9.993100000000102e-05, 9.968100000000077e-05, 9.986200000000264e-05, 9.993100000000102e-05, 9.99999999999994e-05, 0.00010026399999999921, 9.956900000000074e-05, 9.959699999999988e-05, 9.956900000000074e-05, 9.976399999999871e-05, 9.94860000000028e-05, 9.98479999999996e-05, 9.938899999999834e-05, 9.984700000000013e-05, 0.00010011099999999995]</msg>
<status status="PASS" starttime="20201115 23:00:19.079" endtime="20201115 23:00:19.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.074" endtime="20201115 23:00:19.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.083" endtime="20201115 23:00:19.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.087" endtime="20201115 23:00:19.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.085" endtime="20201115 23:00:19.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.082" endtime="20201115 23:00:19.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.708" endtime="20201115 23:00:19.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.707" endtime="20201115 23:00:19.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.706" endtime="20201115 23:00:19.108"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.111" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.119" endtime="20201115 23:00:19.139"></status>
</kw>
<msg timestamp="20201115 23:00:19.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.118" endtime="20201115 23:00:19.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.141" endtime="20201115 23:00:19.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.144" endtime="20201115 23:00:19.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.115" endtime="20201115 23:00:19.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.113" endtime="20201115 23:00:19.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.153" endtime="20201115 23:00:19.439"></status>
</kw>
<msg timestamp="20201115 23:00:19.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024958889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025059903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.152" endtime="20201115 23:00:19.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024958889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025059903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.444" endtime="20201115 23:00:19.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.452" endtime="20201115 23:00:19.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.149" endtime="20201115 23:00:19.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.147" endtime="20201115 23:00:19.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.459" level="INFO">${RESULT} = [{'time': 0.025059903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010101399999999996, 'source_diff': 0.00010101399999999996}, {'time': 0.025174903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:19.455" endtime="20201115 23:00:19.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.473" level="INFO">${ACCURACY} = {'diff': [0.00010101399999999996, 0.00010044499999999762, 0.0001010000000000004, 0.00010094500000000159, 0.0001006670000000022, 0.00010069499999999787, 0.00010068100000000177, 0.00010117999999999933, ...</msg>
<status status="PASS" starttime="20201115 23:00:19.460" endtime="20201115 23:00:19.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.477" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.476" endtime="20201115 23:00:19.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.480" level="INFO">VALUE: [0.00010101399999999996, 0.00010044499999999762, 0.0001010000000000004, 0.00010094500000000159, 0.0001006670000000022, 0.00010069499999999787, 0.00010068100000000177, 0.00010117999999999933, 0.00010051399999999946, 0.00010044399999999815, 0.0001010419999999991, 0.00010075000000000014, 0.00010067999999999883, 0.00010061100000000045, 0.00010073700000000005, 0.00010061100000000045, 0.00010125000000000065, 0.00010043000000000205, 0.0001013610000000012, 0.00010109700000000138, 0.00010094500000000159, 0.00010134699999999816, 0.00010123600000000108, 0.00010095800000000169, 0.00010118100000000227, 0.0001011939999999989, 0.00010102799999999953, 0.00010059700000000088, 0.00010108300000000181, 0.00010075000000000014, 0.00010126399999999675, 0.0001013060000000024, 0.00010083399999999756, 0.00010059800000000035, 0.00010127799999999978, 0.00010109700000000138, 0.00010094399999999865, 0.00010101399999999996, 0.00010126400000000021, 0.00010104200000000257, 0.0001010000000000004, 0.00010134799999999763, 0.00010059800000000035, 0.00010042999999999858, 0.00010134700000000163, 0.00010092999999999908, 0.00010083300000000156, 0.00010059699999999741, 0.0001010419999999991, 0.00010091699999999898]</msg>
<status status="PASS" starttime="20201115 23:00:19.478" endtime="20201115 23:00:19.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.473" endtime="20201115 23:00:19.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.483" endtime="20201115 23:00:19.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.487" endtime="20201115 23:00:19.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.485" endtime="20201115 23:00:19.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.481" endtime="20201115 23:00:19.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.112" endtime="20201115 23:00:19.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.109" endtime="20201115 23:00:19.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.109" endtime="20201115 23:00:19.508"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.510" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.520" endtime="20201115 23:00:19.540"></status>
</kw>
<msg timestamp="20201115 23:00:19.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.518" endtime="20201115 23:00:19.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.542" endtime="20201115 23:00:19.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.545" endtime="20201115 23:00:19.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.515" endtime="20201115 23:00:19.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.512" endtime="20201115 23:00:19.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.555" endtime="20201115 23:00:19.840"></status>
</kw>
<msg timestamp="20201115 23:00:19.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025483806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025585889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.553" endtime="20201115 23:00:19.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025483806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025585889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.844" endtime="20201115 23:00:19.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.852" endtime="20201115 23:00:19.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.550" endtime="20201115 23:00:19.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.549" endtime="20201115 23:00:19.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.859" level="INFO">${RESULT} = [{'time': 0.025585889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010208299999999934, 'source_diff': 0.00010208299999999934}, {'time': 0.025704917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:19.856" endtime="20201115 23:00:19.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.872" level="INFO">${ACCURACY} = {'diff': [0.00010208299999999934, 0.00010143099999999905, 0.00010166699999999973, 0.00010165300000000016, 0.0001015000000000009, 0.00010142999999999958, 0.0001018610000000017, 0.00010159699999999841, ...</msg>
<status status="PASS" starttime="20201115 23:00:19.860" endtime="20201115 23:00:19.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.876" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.875" endtime="20201115 23:00:19.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.879" level="INFO">VALUE: [0.00010208299999999934, 0.00010143099999999905, 0.00010166699999999973, 0.00010165300000000016, 0.0001015000000000009, 0.00010142999999999958, 0.0001018610000000017, 0.00010159699999999841, 0.00010194499999999912, 0.00010151400000000046, 0.00010144500000000209, 0.00010234799999999863, 0.00010165300000000016, 0.0001019160000000005, 0.00010190300000000041, 0.00010209700000000238, 0.00010209700000000238, 0.00010176400000000071, 0.00010226400000000122, 0.00010227799999999732, 0.00010201400000000097, 0.00010209799999999838, 0.00010197199999999879, 0.00010151400000000046, 0.0001022220000000025, 0.00010142999999999958, 0.00010149999999999743, 0.00010209699999999891, 0.00010226399999999775, 0.00010159800000000135, 0.00010224999999999818, 0.00010158299999999884, 0.00010161099999999798, 0.00010141699999999948, 0.00010184699999999866, 0.00010155600000000264, 0.00010193099999999955, 0.00010204100000000063, 0.00010194499999999912, 0.0001021809999999998, 0.0001020000000000014, 0.000101416, 0.0001015419999999996, 0.00010159700000000188, 0.00010144500000000209, 0.00010184699999999866, 0.00010141700000000295, 0.00010168100000000277, 0.00010237500000000177, 0.00010209700000000238]</msg>
<status status="PASS" starttime="20201115 23:00:19.877" endtime="20201115 23:00:19.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.873" endtime="20201115 23:00:19.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.882" endtime="20201115 23:00:19.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.886" endtime="20201115 23:00:19.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.884" endtime="20201115 23:00:19.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.880" endtime="20201115 23:00:19.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.511" endtime="20201115 23:00:19.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.509" endtime="20201115 23:00:19.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.508" endtime="20201115 23:00:19.907"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.910" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.918" endtime="20201115 23:00:19.937"></status>
</kw>
<msg timestamp="20201115 23:00:19.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.916" endtime="20201115 23:00:19.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.939" endtime="20201115 23:00:19.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.942" endtime="20201115 23:00:19.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.914" endtime="20201115 23:00:19.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.912" endtime="20201115 23:00:19.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.951" endtime="20201115 23:00:20.251"></status>
</kw>
<msg timestamp="20201115 23:00:20.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025035125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.949" endtime="20201115 23:00:20.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025035125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.255" endtime="20201115 23:00:20.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.263" endtime="20201115 23:00:20.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.947" endtime="20201115 23:00:20.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.945" endtime="20201115 23:00:20.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.270" level="INFO">${RESULT} = [{'time': 0.025035125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010279199999999739, 'source_diff': 0.00010279199999999739}, {'time': 0.025157139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:20.266" endtime="20201115 23:00:20.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.283" level="INFO">${ACCURACY} = {'diff': [0.00010279199999999739, 0.00010316699999999776, 0.00010282, 0.00010308399999999981, 0.00010247199999999929, 0.00010331900000000102, 0.00010241599999999754, 0.0001026940000000004, 0.000103167...</msg>
<status status="PASS" starttime="20201115 23:00:20.271" endtime="20201115 23:00:20.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.287" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.286" endtime="20201115 23:00:20.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.290" level="INFO">VALUE: [0.00010279199999999739, 0.00010316699999999776, 0.00010282, 0.00010308399999999981, 0.00010247199999999929, 0.00010331900000000102, 0.00010241599999999754, 0.0001026940000000004, 0.00010316700000000123, 0.00010248599999999886, 0.00010240300000000091, 0.00010282, 0.00010274999999999868, 0.00010276300000000224, 0.00010306900000000077, 0.00010275000000000215, 0.00010309699999999991, 0.00010288899999999837, 0.00010282, 0.00010248599999999886, 0.00010334799999999963, 0.00010258400000000278, 0.00010259699999999941, 0.0001029299999999976, 0.00010336099999999973, 0.00010308300000000034, 0.00010291700000000098, 0.0001031810000000008, 0.00010284699999999966, 0.00010308399999999981, 0.00010259800000000235, 0.00010326299999999927, 0.00010325000000000265, 0.00010324999999999918, 0.0001024299999999971, 0.00010251400000000147, 0.00010276399999999825, 0.00010293100000000055, 0.00010266700000000073, 0.00010249999999999843, 0.00010313899999999862, 0.00010256900000000027, 0.00010259699999999941, 0.00010294500000000012, 0.00010283300000000009, 0.0001025420000000006, 0.00010241700000000048, 0.0001026810000000003, 0.00010322200000000004, 0.00010261099999999898]</msg>
<status status="PASS" starttime="20201115 23:00:20.288" endtime="20201115 23:00:20.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.284" endtime="20201115 23:00:20.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.293" endtime="20201115 23:00:20.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.297" endtime="20201115 23:00:20.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.296" endtime="20201115 23:00:20.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.292" endtime="20201115 23:00:20.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.911" endtime="20201115 23:00:20.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.909" endtime="20201115 23:00:20.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.908" endtime="20201115 23:00:20.319"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.321" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.331" endtime="20201115 23:00:20.352"></status>
</kw>
<msg timestamp="20201115 23:00:20.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.329" endtime="20201115 23:00:20.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.353" endtime="20201115 23:00:20.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.356" endtime="20201115 23:00:20.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.326" endtime="20201115 23:00:20.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.324" endtime="20201115 23:00:20.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.365" endtime="20201115 23:00:20.650"></status>
</kw>
<msg timestamp="20201115 23:00:20.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026722819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026826278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.363" endtime="20201115 23:00:20.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026722819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026826278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.655" endtime="20201115 23:00:20.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.663" endtime="20201115 23:00:20.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.361" endtime="20201115 23:00:20.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.359" endtime="20201115 23:00:20.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.669" level="INFO">${RESULT} = [{'time': 0.026826278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010345900000000019, 'source_diff': 0.00010345900000000019}, {'time': 0.026948292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:20.666" endtime="20201115 23:00:20.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.684" level="INFO">${ACCURACY} = {'diff': [0.00010345900000000019, 0.00010390299999999894, 0.00010386099999999676, 0.00010377699999999934, 0.00010426399999999975, 0.00010374999999999968, 0.00010361099999999998, 0.00010394499999999765...</msg>
<status status="PASS" starttime="20201115 23:00:20.670" endtime="20201115 23:00:20.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.688" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.687" endtime="20201115 23:00:20.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.691" level="INFO">VALUE: [0.00010345900000000019, 0.00010390299999999894, 0.00010386099999999676, 0.00010377699999999934, 0.00010426399999999975, 0.00010374999999999968, 0.00010361099999999998, 0.00010394499999999765, 0.00010384700000000066, 0.00010341699999999801, 0.0001036810000000013, 0.00010384800000000013, 0.00010390199999999947, 0.00010436100000000073, 0.00010409700000000091, 0.00010426399999999975, 0.00010365299999999869, 0.00010359700000000041, 0.00010377799999999882, 0.0001037360000000001, 0.00010377699999999934, 0.00010409700000000091, 0.00010376399999999925, 0.00010394400000000165, 0.00010370800000000097, 0.00010418099999999833, 0.00010411100000000048, 0.00010416699999999876, 0.00010352799999999857, 0.00010406900000000177, 0.00010340199999999897, 0.0001035000000000029, 0.00010391599999999904, 0.00010402799999999907, 0.00010341700000000148, 0.00010401400000000297, 0.00010393100000000155, 0.0001040139999999995, 0.00010358400000000378, 0.00010376299999999977, 0.00010343000000000158, 0.00010384700000000413, 0.00010409699999999744, 0.0001037360000000001, 0.00010433300000000506, 0.00010426399999999975, 0.00010409799999999692, 0.00010343100000000105, 0.00010427699999999984, 0.00010359699999999694]</msg>
<status status="PASS" starttime="20201115 23:00:20.689" endtime="20201115 23:00:20.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.685" endtime="20201115 23:00:20.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.694" endtime="20201115 23:00:20.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.698" endtime="20201115 23:00:20.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.696" endtime="20201115 23:00:20.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.693" endtime="20201115 23:00:20.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.322" endtime="20201115 23:00:20.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.320" endtime="20201115 23:00:20.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.319" endtime="20201115 23:00:20.719"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.721" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.729" endtime="20201115 23:00:20.749"></status>
</kw>
<msg timestamp="20201115 23:00:20.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.728" endtime="20201115 23:00:20.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.751" endtime="20201115 23:00:20.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.754" endtime="20201115 23:00:20.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.725" endtime="20201115 23:00:20.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.723" endtime="20201115 23:00:20.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.763" endtime="20201115 23:00:21.048"></status>
</kw>
<msg timestamp="20201115 23:00:21.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024285361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024390139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.761" endtime="20201115 23:00:21.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024285361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024390139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.052" endtime="20201115 23:00:21.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.061" endtime="20201115 23:00:21.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.758" endtime="20201115 23:00:21.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.757" endtime="20201115 23:00:21.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.067" level="INFO">${RESULT} = [{'time': 0.024390139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010477800000000329, 'source_diff': 0.00010477800000000329}, {'time': 0.024515153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:21.064" endtime="20201115 23:00:21.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.081" level="INFO">${ACCURACY} = {'diff': [0.00010477800000000329, 0.00010500000000000093, 0.00010441699999999901, 0.00010466699999999926, 0.00010517999999999986, 0.0001047079999999985, 0.00010519500000000237, 0.00010525000000000118,...</msg>
<status status="PASS" starttime="20201115 23:00:21.068" endtime="20201115 23:00:21.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.085" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.084" endtime="20201115 23:00:21.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.087" level="INFO">VALUE: [0.00010477800000000329, 0.00010500000000000093, 0.00010441699999999901, 0.00010466699999999926, 0.00010517999999999986, 0.0001047079999999985, 0.00010519500000000237, 0.00010525000000000118, 0.00010477799999999982, 0.00010511100000000148, 0.00010477799999999982, 0.00010513900000000062, 0.00010441599999999954, 0.00010483300000000209, 0.00010509700000000191, 0.00010494399999999918, 0.00010499999999999746, 0.00010459700000000141, 0.00010526400000000075, 0.0001047360000000011, 0.00010476400000000025, 0.00010442999999999911, 0.00010466599999999979, 0.00010450000000000043, 0.00010440299999999944, 0.00010483300000000209, 0.00010509699999999844, 0.00010527799999999685, 0.00010475000000000068, 0.0001052499999999977, 0.00010497200000000179, 0.000104514, 0.00010475000000000068, 0.00010459699999999794, 0.00010509700000000191, 0.00010477799999999982, 0.00010493099999999908, 0.0001046810000000023, 0.0001048339999999981, 0.00010509699999999844, 0.00010527799999999685, 0.0001050140000000005, 0.00010475000000000068, 0.00010525000000000118, 0.00010526400000000075, 0.00010448600000000086, 0.00010468099999999883, 0.00010466699999999926, 0.00010484699999999819, 0.00010526400000000075]</msg>
<status status="PASS" starttime="20201115 23:00:21.086" endtime="20201115 23:00:21.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.082" endtime="20201115 23:00:21.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.091" endtime="20201115 23:00:21.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.094" endtime="20201115 23:00:21.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.093" endtime="20201115 23:00:21.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.089" endtime="20201115 23:00:21.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.722" endtime="20201115 23:00:21.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.720" endtime="20201115 23:00:21.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.719" endtime="20201115 23:00:21.115"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.118" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.126" endtime="20201115 23:00:21.146"></status>
</kw>
<msg timestamp="20201115 23:00:21.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.124" endtime="20201115 23:00:21.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.147" endtime="20201115 23:00:21.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.150" endtime="20201115 23:00:21.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.122" endtime="20201115 23:00:21.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.120" endtime="20201115 23:00:21.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.159" endtime="20201115 23:00:21.445"></status>
</kw>
<msg timestamp="20201115 23:00:21.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024297486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024402958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.158" endtime="20201115 23:00:21.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024297486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024402958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.449" endtime="20201115 23:00:21.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.458" endtime="20201115 23:00:21.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.155" endtime="20201115 23:00:21.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.153" endtime="20201115 23:00:21.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.464" level="INFO">${RESULT} = [{'time': 0.024402958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010547199999999882, 'source_diff': 0.00010547199999999882}, {'time': 0.024531958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:21.461" endtime="20201115 23:00:21.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.477" level="INFO">${ACCURACY} = {'diff': [0.00010547199999999882, 0.00010626399999999828, 0.00010556900000000327, 0.0001055689999999998, 0.00010576400000000125, 0.00010604200000000064, 0.00010627799999999785, 0.00010608399999999935,...</msg>
<status status="PASS" starttime="20201115 23:00:21.465" endtime="20201115 23:00:21.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.482" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.481" endtime="20201115 23:00:21.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.484" level="INFO">VALUE: [0.00010547199999999882, 0.00010626399999999828, 0.00010556900000000327, 0.0001055689999999998, 0.00010576400000000125, 0.00010604200000000064, 0.00010627799999999785, 0.00010608399999999935, 0.00010591700000000051, 0.00010600000000000193, 0.00010593000000000061, 0.00010554200000000014, 0.00010609699999999944, 0.00010609699999999944, 0.00010538900000000087, 0.00010579200000000039, 0.00010543099999999958, 0.00010633300000000012, 0.00010575000000000168, 0.00010608299999999987, 0.00010579200000000039, 0.00010576400000000125, 0.00010626399999999828, 0.00010627800000000132, 0.00010591700000000051, 0.00010616700000000076, 0.00010601299999999855, 0.00010626399999999828, 0.00010626400000000175, 0.00010591700000000051, 0.00010549999999999796, 0.00010612499999999858, 0.00010558399999999885, 0.00010627699999999837, 0.00010609799999999892, 0.00010576300000000177, 0.00010626399999999828, 0.00010541700000000001, 0.000105514000000001, 0.00010630600000000046, 0.00010575000000000168, 0.00010609799999999892, 0.00010623599999999914, 0.00010554100000000066, 0.00010595799999999975, 0.00010550000000000143, 0.00010627800000000132, 0.00010609699999999944, 0.00010544500000000262, 0.000105514000000001]</msg>
<status status="PASS" starttime="20201115 23:00:21.483" endtime="20201115 23:00:21.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.478" endtime="20201115 23:00:21.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.488" endtime="20201115 23:00:21.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.491" endtime="20201115 23:00:21.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.489" endtime="20201115 23:00:21.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.486" endtime="20201115 23:00:21.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.118" endtime="20201115 23:00:21.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.116" endtime="20201115 23:00:21.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.115" endtime="20201115 23:00:21.512"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.514" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.523" endtime="20201115 23:00:21.543"></status>
</kw>
<msg timestamp="20201115 23:00:21.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.521" endtime="20201115 23:00:21.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.544" endtime="20201115 23:00:21.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.547" endtime="20201115 23:00:21.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.518" endtime="20201115 23:00:21.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.516" endtime="20201115 23:00:21.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.556" endtime="20201115 23:00:21.842"></status>
</kw>
<msg timestamp="20201115 23:00:21.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024476167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024582958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.554" endtime="20201115 23:00:21.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024476167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024582958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.846" endtime="20201115 23:00:21.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.854" endtime="20201115 23:00:21.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.552" endtime="20201115 23:00:21.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.550" endtime="20201115 23:00:21.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.861" level="INFO">${RESULT} = [{'time': 0.024582958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010679099999999844, 'source_diff': 0.00010679099999999844}, {'time': 0.024707972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:21.858" endtime="20201115 23:00:21.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.874" level="INFO">${ACCURACY} = {'diff': [0.00010679099999999844, 0.0001070140000000025, 0.00010693100000000108, 0.00010734700000000069, 0.00010655599999999724, 0.00010641700000000101, 0.00010701399999999903, 0.0001072499999999997, ...</msg>
<status status="PASS" starttime="20201115 23:00:21.862" endtime="20201115 23:00:21.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.879" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.878" endtime="20201115 23:00:21.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.881" level="INFO">VALUE: [0.00010679099999999844, 0.0001070140000000025, 0.00010693100000000108, 0.00010734700000000069, 0.00010655599999999724, 0.00010641700000000101, 0.00010701399999999903, 0.0001072499999999997, 0.00010659699999999994, 0.00010687499999999933, 0.00010701399999999903, 0.0001072499999999997, 0.00010733300000000112, 0.00010708400000000035, 0.00010727799999999885, 0.0001072499999999997, 0.00010709700000000044, 0.00010708300000000087, 0.00010659800000000288, 0.00010711100000000001, 0.0001067360000000031, 0.00010708300000000087, 0.00010694499999999718, 0.0001073889999999994, 0.0001072499999999997, 0.00010677700000000234, 0.00010643000000000111, 0.00010651399999999853, 0.00010643000000000111, 0.00010699999999999946, 0.00010672200000000007, 0.00010691699999999804, 0.0001073340000000006, 0.000106901999999999, 0.00010684700000000019, 0.00010677800000000182, 0.00010659699999999994, 0.0001070279999999986, 0.00010676399999999878, 0.00010694500000000065, 0.0001065690000000008, 0.00010658399999999985, 0.00010697200000000032, 0.00010687499999999933, 0.00010642999999999764, 0.00010666699999999779, 0.00010650000000000243, 0.00010643100000000058, 0.00010663899999999865, 0.0001071950000000009]</msg>
<status status="PASS" starttime="20201115 23:00:21.880" endtime="20201115 23:00:21.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.875" endtime="20201115 23:00:21.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.884" endtime="20201115 23:00:21.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.888" endtime="20201115 23:00:21.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.886" endtime="20201115 23:00:21.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.883" endtime="20201115 23:00:21.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.515" endtime="20201115 23:00:21.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.513" endtime="20201115 23:00:21.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.512" endtime="20201115 23:00:21.909"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.911" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.919" endtime="20201115 23:00:21.940"></status>
</kw>
<msg timestamp="20201115 23:00:21.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.918" endtime="20201115 23:00:21.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.942" endtime="20201115 23:00:21.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.945" endtime="20201115 23:00:21.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.915" endtime="20201115 23:00:21.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.913" endtime="20201115 23:00:21.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.954" endtime="20201115 23:00:22.239"></status>
</kw>
<msg timestamp="20201115 23:00:22.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024935111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02504275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:21.952" endtime="20201115 23:00:22.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024935111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02504275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:22.243" endtime="20201115 23:00:22.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.251" endtime="20201115 23:00:22.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.950" endtime="20201115 23:00:22.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.948" endtime="20201115 23:00:22.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.258" level="INFO">${RESULT} = [{'time': 0.02504275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010763899999999965, 'source_diff': 0.00010763899999999965}, {'time': 0.025171778, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:22.255" endtime="20201115 23:00:22.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.273" level="INFO">${ACCURACY} = {'diff': [0.00010763899999999965, 0.0001077500000000002, 0.00010741699999999854, 0.0001081950000000019, 0.0001082630000000008, 0.0001077500000000002, 0.00010826400000000028, 0.0001075829999999979, 0.0...</msg>
<status status="PASS" starttime="20201115 23:00:22.259" endtime="20201115 23:00:22.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.277" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.276" endtime="20201115 23:00:22.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.280" level="INFO">VALUE: [0.00010763899999999965, 0.0001077500000000002, 0.00010741699999999854, 0.0001081950000000019, 0.0001082630000000008, 0.0001077500000000002, 0.00010826400000000028, 0.0001075829999999979, 0.00010776399999999978, 0.00010791700000000251, 0.0001080279999999996, 0.00010826400000000028, 0.00010809800000000092, 0.00010794400000000218, 0.00010801400000000003, 0.00010792999999999914, 0.00010818099999999886, 0.00010834699999999822, 0.00010776399999999978, 0.00010809799999999745, 0.00010749999999999996, 0.00010809699999999797, 0.00010742999999999864, 0.00010834699999999822, 0.00010777799999999935, 0.00010744500000000115, 0.00010831900000000255, 0.00010793099999999861, 0.00010815299999999972, 0.00010758300000000137, 0.00010752699999999962, 0.00010761100000000051, 0.00010792999999999914, 0.00010767999999999889, 0.00010768099999999836, 0.00010784699999999772, 0.00010779200000000239, 0.00010777799999999935, 0.00010759799999999695, 0.00010791599999999957, 0.0001078889999999999, 0.00010826400000000028, 0.00010826400000000028, 0.00010809700000000144, 0.00010777799999999935, 0.00010807000000000178, 0.00010809799999999745, 0.00010772300000000054, 0.00010794400000000218, 0.00010799999999999699]</msg>
<status status="PASS" starttime="20201115 23:00:22.278" endtime="20201115 23:00:22.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.274" endtime="20201115 23:00:22.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.283" endtime="20201115 23:00:22.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.286" endtime="20201115 23:00:22.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.285" endtime="20201115 23:00:22.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.281" endtime="20201115 23:00:22.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.912" endtime="20201115 23:00:22.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.910" endtime="20201115 23:00:22.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.909" endtime="20201115 23:00:22.307"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.310" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.318" endtime="20201115 23:00:22.338"></status>
</kw>
<msg timestamp="20201115 23:00:22.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.317" endtime="20201115 23:00:22.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.340" endtime="20201115 23:00:22.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.342" endtime="20201115 23:00:22.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.314" endtime="20201115 23:00:22.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.312" endtime="20201115 23:00:22.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.352" endtime="20201115 23:00:22.637"></status>
</kw>
<msg timestamp="20201115 23:00:22.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024687722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024796431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.350" endtime="20201115 23:00:22.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024687722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024796431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.641" endtime="20201115 23:00:22.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.649" endtime="20201115 23:00:22.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.347" endtime="20201115 23:00:22.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.345" endtime="20201115 23:00:22.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.656" level="INFO">${RESULT} = [{'time': 0.024796431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010870900000000197, 'source_diff': 0.00010870900000000197}, {'time': 0.024919431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:22.653" endtime="20201115 23:00:22.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.669" level="INFO">${ACCURACY} = {'diff': [0.00010870900000000197, 0.00010933399999999913, 0.00010934699999999922, 0.00010876399999999731, 0.00010858399999999838, 0.00010894399999999971, 0.00010931900000000008, 0.00010915300000000072...</msg>
<status status="PASS" starttime="20201115 23:00:22.657" endtime="20201115 23:00:22.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.673" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.672" endtime="20201115 23:00:22.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.676" level="INFO">VALUE: [0.00010870900000000197, 0.00010933399999999913, 0.00010934699999999922, 0.00010876399999999731, 0.00010858399999999838, 0.00010894399999999971, 0.00010931900000000008, 0.00010915300000000072, 0.00010926399999999781, 0.00010856899999999933, 0.0001090829999999994, 0.00010909699999999897, 0.00010922300000000204, 0.00010894399999999971, 0.00010851300000000105, 0.00010844400000000268, 0.00010933299999999965, 0.00010840299999999997, 0.00010938899999999793, 0.00010843100000000258, 0.0001088340000000021, 0.00010850000000000096, 0.00010934800000000217, 0.00010891600000000057, 0.00010890300000000047, 0.00010840299999999997, 0.00010881899999999958, 0.00010861100000000151, 0.00010843099999999911, 0.00010866699999999979, 0.00010901400000000103, 0.00010891600000000057, 0.00010911099999999854, 0.00010918000000000039, 0.00010869400000000293, 0.00010918099999999986, 0.00010918099999999986, 0.00010918099999999986, 0.00010900000000000146, 0.00010843099999999911, 0.00010934700000000269, 0.00010926400000000128, 0.00010841600000000007, 0.00010930599999999999, 0.0001090829999999994, 0.00010924999999999824, 0.00010876400000000078, 0.00010894399999999971, 0.00010930500000000051, 0.00010877800000000035]</msg>
<status status="PASS" starttime="20201115 23:00:22.675" endtime="20201115 23:00:22.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.670" endtime="20201115 23:00:22.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.679" endtime="20201115 23:00:22.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.683" endtime="20201115 23:00:22.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.681" endtime="20201115 23:00:22.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.677" endtime="20201115 23:00:22.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.310" endtime="20201115 23:00:22.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.308" endtime="20201115 23:00:22.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.308" endtime="20201115 23:00:22.704"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.706" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.715" endtime="20201115 23:00:22.735"></status>
</kw>
<msg timestamp="20201115 23:00:22.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.713" endtime="20201115 23:00:22.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.736" endtime="20201115 23:00:22.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.739" endtime="20201115 23:00:22.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.711" endtime="20201115 23:00:22.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.708" endtime="20201115 23:00:22.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.748" endtime="20201115 23:00:23.034"></status>
</kw>
<msg timestamp="20201115 23:00:23.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024344292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024454222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.746" endtime="20201115 23:00:23.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024344292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024454222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.038" endtime="20201115 23:00:23.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.046" endtime="20201115 23:00:23.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.744" endtime="20201115 23:00:23.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.742" endtime="20201115 23:00:23.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.053" level="INFO">${RESULT} = [{'time': 0.024454222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010993000000000114, 'source_diff': 0.00010993000000000114}, {'time': 0.02458625, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:23.049" endtime="20201115 23:00:23.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.066" level="INFO">${ACCURACY} = {'diff': [0.00010993000000000114, 0.0001102220000000001, 0.00010977799999999788, 0.00010991699999999757, 0.00011034700000000022, 0.00010987499999999886, 0.00011016599999999835, 0.00011033300000000065,...</msg>
<status status="PASS" starttime="20201115 23:00:23.054" endtime="20201115 23:00:23.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.070" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.069" endtime="20201115 23:00:23.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.073" level="INFO">VALUE: [0.00010993000000000114, 0.0001102220000000001, 0.00010977799999999788, 0.00010991699999999757, 0.00011034700000000022, 0.00010987499999999886, 0.00011016599999999835, 0.00011033300000000065, 0.00010959700000000294, 0.00011015300000000172, 0.0001095829999999999, 0.0001100830000000004, 0.00011023599999999967, 0.00010938899999999793, 0.00011034700000000022, 0.00011013900000000215, 0.00011026400000000228, 0.00010944400000000021, 0.00010998599999999942, 0.00010975000000000221, 0.00010941700000000054, 0.00010965300000000122, 0.00010982000000000006, 0.00011026299999999933, 0.0001100549999999978, 0.00010961099999999904, 0.00010943000000000064, 0.00010968100000000036, 0.00010999999999999899, 0.00010993100000000061, 0.0001103479999999997, 0.00011023699999999914, 0.00010944400000000021, 0.00010951400000000153, 0.00010959699999999947, 0.00010977800000000135, 0.00010956900000000033, 0.00010993100000000061, 0.00011018100000000086, 0.0001098340000000031, 0.00011011099999999954, 0.00011009699999999997, 0.00010976400000000178, 0.00011011099999999954, 0.00011011099999999954, 0.00010993100000000061, 0.00010951400000000153, 0.0001098890000000019, 0.00010982000000000006, 0.00010944400000000021]</msg>
<status status="PASS" starttime="20201115 23:00:23.072" endtime="20201115 23:00:23.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.067" endtime="20201115 23:00:23.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.081" endtime="20201115 23:00:23.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.084" endtime="20201115 23:00:23.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.083" endtime="20201115 23:00:23.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.079" endtime="20201115 23:00:23.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.707" endtime="20201115 23:00:23.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.705" endtime="20201115 23:00:23.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.704" endtime="20201115 23:00:23.105"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.108" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.116" endtime="20201115 23:00:23.137"></status>
</kw>
<msg timestamp="20201115 23:00:23.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.115" endtime="20201115 23:00:23.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.138" endtime="20201115 23:00:23.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.141" endtime="20201115 23:00:23.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.112" endtime="20201115 23:00:23.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.110" endtime="20201115 23:00:23.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.150" endtime="20201115 23:00:23.436"></status>
</kw>
<msg timestamp="20201115 23:00:23.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024377458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024488111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.148" endtime="20201115 23:00:23.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024377458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024488111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.441" endtime="20201115 23:00:23.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.449" endtime="20201115 23:00:23.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.146" endtime="20201115 23:00:23.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.144" endtime="20201115 23:00:23.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.455" level="INFO">${RESULT} = [{'time': 0.024488111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011065299999999875, 'source_diff': 0.00011065299999999875}, {'time': 0.024622111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:23.452" endtime="20201115 23:00:23.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.468" level="INFO">${ACCURACY} = {'diff': [0.00011065299999999875, 0.0001110969999999975, 0.00011133300000000165, 0.00011041699999999807, 0.00011068099999999789, 0.00011120800000000153, 0.00011116699999999882, 0.00011081900000000158,...</msg>
<status status="PASS" starttime="20201115 23:00:23.456" endtime="20201115 23:00:23.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.473" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.472" endtime="20201115 23:00:23.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.476" level="INFO">VALUE: [0.00011065299999999875, 0.0001110969999999975, 0.00011133300000000165, 0.00011041699999999807, 0.00011068099999999789, 0.00011120800000000153, 0.00011116699999999882, 0.00011081900000000158, 0.00011077799999999888, 0.00011125000000000024, 0.00011041700000000154, 0.00011086100000000029, 0.00011043100000000111, 0.00011051399999999906, 0.00011095799999999781, 0.00011069400000000146, 0.00011119400000000196, 0.00011063899999999918, 0.00011099999999999999, 0.00011113899999999968, 0.00011047199999999688, 0.00011118099999999839, 0.00011101399999999956, 0.00011130499999999904, 0.00011126399999999981, 0.00011038899999999893, 0.00011080599999999802, 0.00011109700000000097, 0.0001105830000000009, 0.00011080499999999854, 0.00011074999999999974, 0.00011129099999999947, 0.00011129099999999947, 0.00011058299999999743, 0.00011041700000000154, 0.00011102799999999913, 0.00011094500000000118, 0.00011083400000000063, 0.00011127799999999938, 0.00011093100000000161, 0.00011131899999999861, 0.0001104159999999986, 0.00011051399999999906, 0.00011041699999999807, 0.0001105280000000021, 0.00011123600000000067, 0.00011093099999999814, 0.00011102699999999965, 0.00011109700000000097, 0.00011109700000000097]</msg>
<status status="PASS" starttime="20201115 23:00:23.474" endtime="20201115 23:00:23.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.469" endtime="20201115 23:00:23.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.479" endtime="20201115 23:00:23.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.483" endtime="20201115 23:00:23.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.481" endtime="20201115 23:00:23.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.477" endtime="20201115 23:00:23.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.108" endtime="20201115 23:00:23.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.107" endtime="20201115 23:00:23.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.106" endtime="20201115 23:00:23.504"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.506" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.514" endtime="20201115 23:00:23.536"></status>
</kw>
<msg timestamp="20201115 23:00:23.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.513" endtime="20201115 23:00:23.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.538" endtime="20201115 23:00:23.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.540" endtime="20201115 23:00:23.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.510" endtime="20201115 23:00:23.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.508" endtime="20201115 23:00:23.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.549" endtime="20201115 23:00:23.835"></status>
</kw>
<msg timestamp="20201115 23:00:23.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025205958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025317917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.548" endtime="20201115 23:00:23.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025205958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025317917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.839" endtime="20201115 23:00:23.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.847" endtime="20201115 23:00:23.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.545" endtime="20201115 23:00:23.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.543" endtime="20201115 23:00:23.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.854" level="INFO">${RESULT} = [{'time': 0.025317917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011195899999999828, 'source_diff': 0.00011195899999999828}, {'time': 0.025451931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:23.851" endtime="20201115 23:00:23.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.869" level="INFO">${ACCURACY} = {'diff': [0.00011195899999999828, 0.00011208400000000188, 0.00011163900000000018, 0.00011194400000000271, 0.00011213900000000068, 0.00011184700000000172, 0.00011191699999999957, 0.00011218099999999939...</msg>
<status status="PASS" starttime="20201115 23:00:23.855" endtime="20201115 23:00:23.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.873" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.872" endtime="20201115 23:00:23.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.876" level="INFO">VALUE: [0.00011195899999999828, 0.00011208400000000188, 0.00011163900000000018, 0.00011194400000000271, 0.00011213900000000068, 0.00011184700000000172, 0.00011191699999999957, 0.00011218099999999939, 0.0001124030000000005, 0.00011223699999999767, 0.00011174999999999727, 0.00011209700000000197, 0.00011226400000000081, 0.00011141700000000254, 0.00011183300000000215, 0.00011186099999999782, 0.00011201400000000056, 0.00011213900000000068, 0.00011194399999999924, 0.00011201400000000056, 0.00011137500000000036, 0.00011186099999999782, 0.0001114029999999995, 0.00011218099999999939, 0.00011150000000000049, 0.00011209799999999798, 0.00011225000000000124, 0.00011167999999999942, 0.00011177799999999988, 0.00011192999999999967, 0.00011169499999999846, 0.00011236099999999832, 0.00011227800000000038, 0.00011188900000000043, 0.00011231999999999909, 0.00011192999999999967, 0.00011166599999999985, 0.00011201399999999709, 0.00011191699999999957, 0.00011218099999999939, 0.00011198600000000142, 0.00011165299999999975, 0.00011141699999999907, 0.00011236099999999832, 0.0001120969999999985, 0.00011176400000000031, 0.00011226400000000428, 0.00011226400000000081, 0.00011176399999999337, 0.00011190299999999653]</msg>
<status status="PASS" starttime="20201115 23:00:23.874" endtime="20201115 23:00:23.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.870" endtime="20201115 23:00:23.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.879" endtime="20201115 23:00:23.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.882" endtime="20201115 23:00:23.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.881" endtime="20201115 23:00:23.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.877" endtime="20201115 23:00:23.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.507" endtime="20201115 23:00:23.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.505" endtime="20201115 23:00:23.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.504" endtime="20201115 23:00:23.903"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.906" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.914" endtime="20201115 23:00:23.935"></status>
</kw>
<msg timestamp="20201115 23:00:23.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.913" endtime="20201115 23:00:23.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.937" endtime="20201115 23:00:23.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.939" endtime="20201115 23:00:23.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.910" endtime="20201115 23:00:23.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.908" endtime="20201115 23:00:23.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.948" endtime="20201115 23:00:24.234"></status>
</kw>
<msg timestamp="20201115 23:00:24.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024541292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024654181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.947" endtime="20201115 23:00:24.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024541292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024654181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.238" endtime="20201115 23:00:24.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.247" endtime="20201115 23:00:24.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.944" endtime="20201115 23:00:24.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.943" endtime="20201115 23:00:24.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.253" level="INFO">${RESULT} = [{'time': 0.024654181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011288900000000143, 'source_diff': 0.00011288900000000143}, {'time': 0.024791194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:24.250" endtime="20201115 23:00:24.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.266" level="INFO">${ACCURACY} = {'diff': [0.00011288900000000143, 0.00011290199999999806, 0.00011266599999999738, 0.00011262499999999814, 0.00011334699999999975, 0.00011327800000000138, 0.00011243100000000311, 0.0001128480000000022,...</msg>
<status status="PASS" starttime="20201115 23:00:24.254" endtime="20201115 23:00:24.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.271" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.270" endtime="20201115 23:00:24.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.273" level="INFO">VALUE: [0.00011288900000000143, 0.00011290199999999806, 0.00011266599999999738, 0.00011262499999999814, 0.00011334699999999975, 0.00011327800000000138, 0.00011243100000000311, 0.0001128480000000022, 0.00011293100000000014, 0.00011266600000000085, 0.00011283299999999968, 0.00011327799999999791, 0.00011334699999999975, 0.00011241700000000007, 0.00011302800000000113, 0.00011291700000000057, 0.00011302699999999818, 0.00011291700000000057, 0.00011302800000000113, 0.00011276400000000131, 0.00011326400000000181, 0.00011308299999999993, 0.00011291700000000057, 0.00011276400000000131, 0.00011258399999999891, 0.00011312500000000211, 0.00011261100000000204, 0.00011244399999999974, 0.00011268000000000042, 0.00011336099999999932, 0.00011327800000000138, 0.00011274999999999827, 0.00011270899999999903, 0.00011295799999999981, 0.00011333300000000018, 0.00011322199999999963, 0.00011277800000000088, 0.00011259700000000247, 0.0001130969999999995, 0.00011324999999999877, 0.00011324999999999877, 0.00011326399999999834, 0.000112596999999999, 0.00011309700000000297, 0.00011254100000000072, 0.00011327799999999791, 0.00011298599999999895, 0.00011293100000000014, 0.00011318100000000039, 0.00011336099999999932]</msg>
<status status="PASS" starttime="20201115 23:00:24.272" endtime="20201115 23:00:24.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.267" endtime="20201115 23:00:24.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.276" endtime="20201115 23:00:24.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.280" endtime="20201115 23:00:24.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.278" endtime="20201115 23:00:24.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.275" endtime="20201115 23:00:24.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.906" endtime="20201115 23:00:24.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.905" endtime="20201115 23:00:24.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.904" endtime="20201115 23:00:24.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.406" endtime="20201115 23:00:24.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.306" endtime="20201115 23:00:24.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.304" endtime="20201115 23:00:24.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.303" endtime="20201115 23:00:24.326"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:44.335" endtime="20201115 23:00:24.326" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.334" endtime="20201115 23:00:24.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.333" endtime="20201115 23:00:24.354"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.368" endtime="20201115 23:00:24.382"></status>
</kw>
<msg timestamp="20201115 23:00:24.383" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.366" endtime="20201115 23:00:24.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.386" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.384" endtime="20201115 23:00:24.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.389" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:00:24.387" endtime="20201115 23:00:24.389"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:24.364" endtime="20201115 23:00:24.390"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:24.361" endtime="20201115 23:00:24.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.359" endtime="20201115 23:00:24.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:00:24.395" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:00:24.394" endtime="20201115 23:00:24.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.392" endtime="20201115 23:00:24.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.358" endtime="20201115 23:00:24.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.358" endtime="20201115 23:00:24.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.397" endtime="20201115 23:00:24.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.356" endtime="20201115 23:00:24.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.355" endtime="20201115 23:00:24.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.331" endtime="20201115 23:00:24.400"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.403" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.412" endtime="20201115 23:00:24.428"></status>
</kw>
<msg timestamp="20201115 23:00:24.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.410" endtime="20201115 23:00:24.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.430" endtime="20201115 23:00:24.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.432" endtime="20201115 23:00:24.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.407" endtime="20201115 23:00:24.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.405" endtime="20201115 23:00:24.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.442" endtime="20201115 23:00:24.728"></status>
</kw>
<msg timestamp="20201115 23:00:24.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070845667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070887333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.441" endtime="20201115 23:00:24.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070845667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070887333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.732" endtime="20201115 23:00:24.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.740" endtime="20201115 23:00:24.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.437" endtime="20201115 23:00:24.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.435" endtime="20201115 23:00:24.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.747" level="INFO">${RESULT} = [{'time': 0.070887333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166599999999576e-05, 'source_diff': 4.166599999999576e-05}, {'time': 0.070939361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:24.743" endtime="20201115 23:00:24.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.761" level="INFO">${ACCURACY} = {'diff': [4.166599999999576e-05, 4.152800000001289e-05, 4.0805000000004865e-05, 4.1333000000004505e-05, 4.16939999999949e-05, 4.102799999999851e-05, 4.11939999999944e-05, 4.1347000000011014e-05, 4.149...</msg>
<status status="PASS" starttime="20201115 23:00:24.748" endtime="20201115 23:00:24.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.765" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.764" endtime="20201115 23:00:24.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.767" level="INFO">VALUE: [4.166599999999576e-05, 4.152800000001289e-05, 4.0805000000004865e-05, 4.1333000000004505e-05, 4.16939999999949e-05, 4.102799999999851e-05, 4.11939999999944e-05, 4.1347000000011014e-05, 4.149999999999987e-05, 4.1709000000000884e-05, 4.1653000000002605e-05, 4.151400000000638e-05, 4.099999999999937e-05, 4.0846999999996636e-05, 4.099999999999937e-05, 4.133400000000398e-05, 4.123600000000005e-05, 4.1681000000001744e-05, 4.134799999999661e-05, 4.166599999999576e-05, 4.081999999999697e-05, 4.1402999999995416e-05, 4.148600000000724e-05, 4.0833000000004005e-05, 4.151400000000638e-05, 4.1138999999995596e-05, 4.0861000000003145e-05, 4.1166999999994736e-05, 4.101400000000588e-05, 4.099999999999937e-05, 4.169500000000825e-05, 4.083299999999013e-05, 4.1153000000002105e-05, 4.133299999999063e-05, 4.1153000000002105e-05, 4.1361000000003645e-05, 4.1153000000002105e-05, 4.15139999999925e-05, 4.13339999999901e-05, 4.168099999998787e-05, 4.165299999998873e-05, 4.101400000000588e-05, 4.0847000000010514e-05, 4.098599999999286e-05, 4.1333000000004505e-05, 4.133299999999063e-05, 4.1318999999997996e-05, 4.1333000000004505e-05, 4.149999999999987e-05, 4.1346999999997136e-05]</msg>
<status status="PASS" starttime="20201115 23:00:24.766" endtime="20201115 23:00:24.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.761" endtime="20201115 23:00:24.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.771" endtime="20201115 23:00:24.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.774" endtime="20201115 23:00:24.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.773" endtime="20201115 23:00:24.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.769" endtime="20201115 23:00:24.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.404" endtime="20201115 23:00:24.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.402" endtime="20201115 23:00:24.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.401" endtime="20201115 23:00:24.795"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.797" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.806" endtime="20201115 23:00:24.822"></status>
</kw>
<msg timestamp="20201115 23:00:24.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.804" endtime="20201115 23:00:24.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.824" endtime="20201115 23:00:24.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.826" endtime="20201115 23:00:24.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.802" endtime="20201115 23:00:24.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.799" endtime="20201115 23:00:24.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.836" endtime="20201115 23:00:25.121"></status>
</kw>
<msg timestamp="20201115 23:00:25.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024276833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024318042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.834" endtime="20201115 23:00:25.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024276833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024318042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.126" endtime="20201115 23:00:25.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.134" endtime="20201115 23:00:25.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.831" endtime="20201115 23:00:25.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.829" endtime="20201115 23:00:25.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.141" level="INFO">${RESULT} = [{'time': 0.024318042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1209000000000384e-05, 'source_diff': 4.1209000000000384e-05}, {'time': 0.024369, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:25.137" endtime="20201115 23:00:25.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.154" level="INFO">${ACCURACY} = {'diff': [4.1209000000000384e-05, 4.127799999999876e-05, 4.1667000000002175e-05, 4.1195000000000814e-05, 4.1167000000001674e-05, 4.130600000000137e-05, 4.1167000000001674e-05, 4.134800000000008e-05, 4...</msg>
<status status="PASS" starttime="20201115 23:00:25.142" endtime="20201115 23:00:25.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.159" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.157" endtime="20201115 23:00:25.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.161" level="INFO">VALUE: [4.1209000000000384e-05, 4.127799999999876e-05, 4.1667000000002175e-05, 4.1195000000000814e-05, 4.1167000000001674e-05, 4.130600000000137e-05, 4.1167000000001674e-05, 4.134800000000008e-05, 4.133400000000051e-05, 4.1166999999998205e-05, 4.134800000000008e-05, 4.1347000000000605e-05, 4.09859999999998e-05, 4.115199999999916e-05, 4.163800000000009e-05, 4.169399999999837e-05, 4.123600000000005e-05, 4.169399999999837e-05, 4.1332999999997566e-05, 4.1319000000001466e-05, 4.09859999999998e-05, 4.149999999999987e-05, 4.0833000000000536e-05, 4.1332999999997566e-05, 4.141599999999898e-05, 4.1695000000001314e-05, 4.151399999999944e-05, 4.151400000000291e-05, 4.134800000000008e-05, 4.151399999999944e-05, 4.131999999999747e-05, 4.1152999999998635e-05, 4.1152999999998635e-05, 4.133400000000051e-05, 4.11799999999983e-05, 4.0860999999999675e-05, 4.149999999999987e-05, 4.101400000000241e-05, 4.175000000000012e-05, 4.0832999999997066e-05, 4.1347000000000605e-05, 4.104199999999808e-05, 4.099999999999937e-05, 4.1667000000002175e-05, 4.0847000000000105e-05, 4.1388999999999315e-05, 4.1681000000001744e-05, 4.099999999999937e-05, 4.100000000000284e-05, 4.1681000000001744e-05]</msg>
<status status="PASS" starttime="20201115 23:00:25.160" endtime="20201115 23:00:25.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.155" endtime="20201115 23:00:25.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.164" endtime="20201115 23:00:25.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.168" endtime="20201115 23:00:25.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.166" endtime="20201115 23:00:25.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.163" endtime="20201115 23:00:25.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.798" endtime="20201115 23:00:25.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.796" endtime="20201115 23:00:25.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.795" endtime="20201115 23:00:25.189"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.191" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.199" endtime="20201115 23:00:25.216"></status>
</kw>
<msg timestamp="20201115 23:00:25.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.198" endtime="20201115 23:00:25.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.217" endtime="20201115 23:00:25.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.220" endtime="20201115 23:00:25.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.195" endtime="20201115 23:00:25.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.193" endtime="20201115 23:00:25.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.230" endtime="20201115 23:00:25.516"></status>
</kw>
<msg timestamp="20201115 23:00:25.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024341958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024382806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.228" endtime="20201115 23:00:25.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024341958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024382806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.520" endtime="20201115 23:00:25.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.528" endtime="20201115 23:00:25.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.225" endtime="20201115 23:00:25.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.223" endtime="20201115 23:00:25.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.535" level="INFO">${RESULT} = [{'time': 0.024382806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.084799999999958e-05, 'source_diff': 4.084799999999958e-05}, {'time': 0.024431875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:25.532" endtime="20201115 23:00:25.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.550" level="INFO">${ACCURACY} = {'diff': [4.084799999999958e-05, 4.123600000000005e-05, 4.116599999999873e-05, 4.166599999999923e-05, 4.1319000000001466e-05, 4.1333000000001036e-05, 4.154199999999858e-05, 4.102799999999851e-05, 4.11...</msg>
<status status="PASS" starttime="20201115 23:00:25.536" endtime="20201115 23:00:25.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.555" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.553" endtime="20201115 23:00:25.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.557" level="INFO">VALUE: [4.084799999999958e-05, 4.123600000000005e-05, 4.116599999999873e-05, 4.166599999999923e-05, 4.1319000000001466e-05, 4.1333000000001036e-05, 4.154199999999858e-05, 4.102799999999851e-05, 4.118000000000177e-05, 4.1346999999997136e-05, 4.1347000000000605e-05, 4.0819000000000966e-05, 4.1374999999999745e-05, 4.0860999999999675e-05, 4.1347000000000605e-05, 4.1153000000002105e-05, 4.151399999999944e-05, 4.080600000000087e-05, 4.133400000000051e-05, 4.1667000000002175e-05, 4.129199999999833e-05, 4.151400000000291e-05, 4.149999999999987e-05, 4.149999999999987e-05, 4.148599999999683e-05, 4.0860999999999675e-05, 4.148599999999683e-05, 4.166599999999923e-05, 4.151399999999944e-05, 4.149999999999987e-05, 4.1346999999997136e-05, 4.1167000000001674e-05, 4.1318999999997996e-05, 4.1361000000000175e-05, 4.1333000000001036e-05, 4.101400000000241e-05, 4.1181000000001244e-05, 4.0847000000000105e-05, 4.134800000000008e-05, 4.099999999999937e-05, 4.084799999999958e-05, 4.1166999999998205e-05, 4.1681000000001744e-05, 4.1152999999998635e-05, 4.1347000000000605e-05, 4.099999999999937e-05, 4.151399999999944e-05, 4.158400000000076e-05, 4.14860000000003e-05, 4.094400000000109e-05]</msg>
<status status="PASS" starttime="20201115 23:00:25.556" endtime="20201115 23:00:25.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.551" endtime="20201115 23:00:25.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.560" endtime="20201115 23:00:25.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.564" endtime="20201115 23:00:25.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.562" endtime="20201115 23:00:25.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.559" endtime="20201115 23:00:25.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.192" endtime="20201115 23:00:25.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.190" endtime="20201115 23:00:25.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.189" endtime="20201115 23:00:25.585"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.595" endtime="20201115 23:00:25.612"></status>
</kw>
<msg timestamp="20201115 23:00:25.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.594" endtime="20201115 23:00:25.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.614" endtime="20201115 23:00:25.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.616" endtime="20201115 23:00:25.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.591" endtime="20201115 23:00:25.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.589" endtime="20201115 23:00:25.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.626" endtime="20201115 23:00:25.912"></status>
</kw>
<msg timestamp="20201115 23:00:25.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024269167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.624" endtime="20201115 23:00:25.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024269167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.916" endtime="20201115 23:00:25.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.924" endtime="20201115 23:00:25.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.621" endtime="20201115 23:00:25.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.620" endtime="20201115 23:00:25.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.931" level="INFO">${RESULT} = [{'time': 0.024269167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1361000000000175e-05, 'source_diff': 4.1361000000000175e-05}, {'time': 0.024316181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:25.927" endtime="20201115 23:00:25.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.944" level="INFO">${ACCURACY} = {'diff': [4.1361000000000175e-05, 4.083400000000001e-05, 4.1526999999999537e-05, 4.1666999999998705e-05, 4.149999999999987e-05, 4.09859999999998e-05, 4.099999999999937e-05, 4.118000000000177e-05, 4.13...</msg>
<status status="PASS" starttime="20201115 23:00:25.932" endtime="20201115 23:00:25.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.948" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.947" endtime="20201115 23:00:25.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.951" level="INFO">VALUE: [4.1361000000000175e-05, 4.083400000000001e-05, 4.1526999999999537e-05, 4.1666999999998705e-05, 4.149999999999987e-05, 4.09859999999998e-05, 4.099999999999937e-05, 4.118000000000177e-05, 4.1333000000001036e-05, 4.1332999999997566e-05, 4.0832999999997066e-05, 4.116599999999873e-05, 4.0847000000000105e-05, 4.099999999999937e-05, 4.1666999999998705e-05, 4.1667000000002175e-05, 4.1138999999999065e-05, 4.1681000000001744e-05, 4.149999999999987e-05, 4.101399999999894e-05, 4.09859999999998e-05, 4.134800000000008e-05, 4.1681000000001744e-05, 4.151399999999944e-05, 4.116599999999873e-05, 4.0847000000000105e-05, 4.165199999999966e-05, 4.0874999999999245e-05, 4.1333000000001036e-05, 4.122200000000048e-05, 4.149999999999987e-05, 4.0833000000000536e-05, 4.1347000000000605e-05, 4.16660000000027e-05, 4.0832999999997066e-05, 4.104200000000155e-05, 4.14860000000003e-05, 4.0833000000000536e-05, 4.149999999999987e-05, 4.0847000000000105e-05, 4.149999999999987e-05, 4.0847000000000105e-05, 4.099999999999937e-05, 4.1055000000001646e-05, 4.0972999999999704e-05, 4.083400000000001e-05, 4.1512999999999967e-05, 4.149999999999987e-05, 4.169399999999837e-05, 4.11660000000022e-05]</msg>
<status status="PASS" starttime="20201115 23:00:25.950" endtime="20201115 23:00:25.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.945" endtime="20201115 23:00:25.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.954" endtime="20201115 23:00:25.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.958" endtime="20201115 23:00:25.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.956" endtime="20201115 23:00:25.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.952" endtime="20201115 23:00:25.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.588" endtime="20201115 23:00:25.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.586" endtime="20201115 23:00:25.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.585" endtime="20201115 23:00:25.979"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.981" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.990" endtime="20201115 23:00:26.005"></status>
</kw>
<msg timestamp="20201115 23:00:26.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.988" endtime="20201115 23:00:26.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.007" endtime="20201115 23:00:26.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.009" endtime="20201115 23:00:26.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.986" endtime="20201115 23:00:26.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.983" endtime="20201115 23:00:26.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.018" endtime="20201115 23:00:26.305"></status>
</kw>
<msg timestamp="20201115 23:00:26.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024799833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024840833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.017" endtime="20201115 23:00:26.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024799833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024840833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.309" endtime="20201115 23:00:26.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.317" endtime="20201115 23:00:26.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.014" endtime="20201115 23:00:26.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.013" endtime="20201115 23:00:26.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.324" level="INFO">${RESULT} = [{'time': 0.024840833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.099999999999937e-05, 'source_diff': 4.099999999999937e-05}, {'time': 0.024888833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:26.321" endtime="20201115 23:00:26.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.337" level="INFO">${ACCURACY} = {'diff': [4.099999999999937e-05, 4.1638999999999565e-05, 4.118000000000177e-05, 4.1652999999999135e-05, 4.168000000000227e-05, 4.1666999999998705e-05, 4.0847000000000105e-05, 4.149999999999987e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:00:26.325" endtime="20201115 23:00:26.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.342" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.341" endtime="20201115 23:00:26.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.344" level="INFO">VALUE: [4.099999999999937e-05, 4.1638999999999565e-05, 4.118000000000177e-05, 4.1652999999999135e-05, 4.168000000000227e-05, 4.1666999999998705e-05, 4.0847000000000105e-05, 4.149999999999987e-05, 4.0833000000000536e-05, 4.0860999999999675e-05, 4.082000000000044e-05, 4.154200000000205e-05, 4.1652999999999135e-05, 4.14860000000003e-05, 4.099999999999937e-05, 4.151399999999944e-05, 4.099999999999937e-05, 4.1486999999999774e-05, 4.1473000000000204e-05, 4.120800000000091e-05, 4.0847000000000105e-05, 4.119399999999787e-05, 4.118000000000177e-05, 4.1319000000001466e-05, 4.0833000000000536e-05, 4.166599999999923e-05, 4.1332999999997566e-05, 4.1666999999998705e-05, 4.102799999999851e-05, 4.099999999999937e-05, 4.0847000000000105e-05, 4.0847000000000105e-05, 4.0833000000000536e-05, 4.169400000000184e-05, 4.1638999999999565e-05, 4.1402999999998885e-05, 4.1167000000001674e-05, 4.1681000000001744e-05, 4.1347000000000605e-05, 4.0847000000000105e-05, 4.11799999999983e-05, 4.149999999999987e-05, 4.116599999999873e-05, 4.1110999999999925e-05, 4.0847000000000105e-05, 4.0860999999999675e-05, 4.141599999999898e-05, 4.1153000000002105e-05, 4.1166999999998205e-05, 4.1167000000001674e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.343" endtime="20201115 23:00:26.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.338" endtime="20201115 23:00:26.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.348" endtime="20201115 23:00:26.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.351" endtime="20201115 23:00:26.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.350" endtime="20201115 23:00:26.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.346" endtime="20201115 23:00:26.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.982" endtime="20201115 23:00:26.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.980" endtime="20201115 23:00:26.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.979" endtime="20201115 23:00:26.373"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.375" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.383" endtime="20201115 23:00:26.399"></status>
</kw>
<msg timestamp="20201115 23:00:26.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.382" endtime="20201115 23:00:26.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.401" endtime="20201115 23:00:26.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.403" endtime="20201115 23:00:26.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.379" endtime="20201115 23:00:26.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.377" endtime="20201115 23:00:26.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.412" endtime="20201115 23:00:26.699"></status>
</kw>
<msg timestamp="20201115 23:00:26.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024382111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024423278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.411" endtime="20201115 23:00:26.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024382111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024423278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.703" endtime="20201115 23:00:26.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.712" endtime="20201115 23:00:26.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.408" endtime="20201115 23:00:26.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.406" endtime="20201115 23:00:26.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.718" level="INFO">${RESULT} = [{'time': 0.024423278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1166999999998205e-05, 'source_diff': 4.1166999999998205e-05}, {'time': 0.024472278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:26.715" endtime="20201115 23:00:26.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.732" level="INFO">${ACCURACY} = {'diff': [4.1166999999998205e-05, 4.1652999999999135e-05, 4.1666999999998705e-05, 4.132000000000094e-05, 4.1541000000002576e-05, 4.082000000000044e-05, 4.1054999999998176e-05, 4.104199999999808e-05, 4...</msg>
<status status="PASS" starttime="20201115 23:00:26.719" endtime="20201115 23:00:26.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.736" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.735" endtime="20201115 23:00:26.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.738" level="INFO">VALUE: [4.1166999999998205e-05, 4.1652999999999135e-05, 4.1666999999998705e-05, 4.132000000000094e-05, 4.1541000000002576e-05, 4.082000000000044e-05, 4.1054999999998176e-05, 4.104199999999808e-05, 4.1333000000001036e-05, 4.0888999999998815e-05, 4.145799999999769e-05, 4.102800000000198e-05, 4.11660000000022e-05, 4.1624999999999995e-05, 4.1667000000002175e-05, 4.0833000000000536e-05, 4.152799999999901e-05, 4.1152999999998635e-05, 4.1180999999997775e-05, 4.1166999999998205e-05, 4.1680999999998275e-05, 4.1181000000001244e-05, 4.0917000000001424e-05, 4.102800000000198e-05, 4.1167000000001674e-05, 4.0973000000003174e-05, 4.082000000000044e-05, 4.133400000000051e-05, 4.099999999999937e-05, 4.0819000000000966e-05, 4.116599999999873e-05, 4.0847000000000105e-05, 4.166599999999923e-05, 4.166599999999923e-05, 4.099999999999937e-05, 4.0833000000000536e-05, 4.0860999999999675e-05, 4.1361000000000175e-05, 4.09859999999998e-05, 4.1333000000001036e-05, 4.149999999999987e-05, 4.138799999999984e-05, 4.123600000000005e-05, 4.083400000000001e-05, 4.134800000000008e-05, 4.083400000000001e-05, 4.134800000000008e-05, 4.08059999999974e-05, 4.133400000000051e-05, 4.169399999999837e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.737" endtime="20201115 23:00:26.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.732" endtime="20201115 23:00:26.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.742" endtime="20201115 23:00:26.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.745" endtime="20201115 23:00:26.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.744" endtime="20201115 23:00:26.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.740" endtime="20201115 23:00:26.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.375" endtime="20201115 23:00:26.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.374" endtime="20201115 23:00:26.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.373" endtime="20201115 23:00:26.767"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.769" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.777" endtime="20201115 23:00:26.794"></status>
</kw>
<msg timestamp="20201115 23:00:26.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.776" endtime="20201115 23:00:26.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.795" endtime="20201115 23:00:26.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.798" endtime="20201115 23:00:26.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.773" endtime="20201115 23:00:26.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.771" endtime="20201115 23:00:26.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.807" endtime="20201115 23:00:27.093"></status>
</kw>
<msg timestamp="20201115 23:00:27.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02424, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281167, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 23:00:26.805" endtime="20201115 23:00:27.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02424, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281167, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 23:00:27.097" endtime="20201115 23:00:27.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.105" endtime="20201115 23:00:27.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.803" endtime="20201115 23:00:27.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.801" endtime="20201115 23:00:27.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.112" level="INFO">${RESULT} = [{'time': 0.024281167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1166999999998205e-05, 'source_diff': 4.1166999999998205e-05}, {'time': 0.024333167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:27.109" endtime="20201115 23:00:27.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.127" level="INFO">${ACCURACY} = {'diff': [4.1166999999998205e-05, 4.1166999999998205e-05, 4.169400000000184e-05, 4.11799999999983e-05, 4.1666999999998705e-05, 4.165199999999966e-05, 4.1346999999997136e-05, 4.116599999999873e-05, 4.1...</msg>
<status status="PASS" starttime="20201115 23:00:27.113" endtime="20201115 23:00:27.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.131" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.130" endtime="20201115 23:00:27.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.134" level="INFO">VALUE: [4.1166999999998205e-05, 4.1166999999998205e-05, 4.169400000000184e-05, 4.11799999999983e-05, 4.1666999999998705e-05, 4.165199999999966e-05, 4.1346999999997136e-05, 4.116599999999873e-05, 4.175000000000012e-05, 4.1347000000000605e-05, 4.116599999999873e-05, 4.152799999999901e-05, 4.1708999999997415e-05, 4.149999999999987e-05, 4.101399999999894e-05, 4.1666999999998705e-05, 4.099999999999937e-05, 4.151399999999944e-05, 4.14860000000003e-05, 4.134800000000008e-05, 4.101399999999894e-05, 4.1681000000001744e-05, 4.1667000000002175e-05, 4.134800000000008e-05, 4.1666999999998705e-05, 4.099999999999937e-05, 4.1332999999997566e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.165199999999966e-05, 4.101399999999894e-05, 4.099999999999937e-05, 4.11660000000022e-05, 4.1695000000001314e-05, 4.142999999999855e-05, 4.099999999999937e-05, 4.0833000000000536e-05, 4.105599999999765e-05, 4.1166999999998205e-05, 4.1332999999997566e-05, 4.175000000000012e-05, 4.1652999999999135e-05, 4.122200000000048e-05, 4.149999999999987e-05, 4.124999999999962e-05, 4.083400000000001e-05, 4.119400000000134e-05, 4.0860999999999675e-05, 4.16799999999988e-05, 4.16799999999988e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.132" endtime="20201115 23:00:27.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.128" endtime="20201115 23:00:27.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.137" endtime="20201115 23:00:27.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.141" endtime="20201115 23:00:27.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.139" endtime="20201115 23:00:27.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.136" endtime="20201115 23:00:27.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.770" endtime="20201115 23:00:27.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.768" endtime="20201115 23:00:27.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.767" endtime="20201115 23:00:27.162"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.164" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.172" endtime="20201115 23:00:27.189"></status>
</kw>
<msg timestamp="20201115 23:00:27.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.171" endtime="20201115 23:00:27.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.190" endtime="20201115 23:00:27.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.193" endtime="20201115 23:00:27.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.168" endtime="20201115 23:00:27.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.166" endtime="20201115 23:00:27.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.202" endtime="20201115 23:00:27.488"></status>
</kw>
<msg timestamp="20201115 23:00:27.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024635944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024677431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.200" endtime="20201115 23:00:27.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024635944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024677431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.493" endtime="20201115 23:00:27.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.501" endtime="20201115 23:00:27.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.198" endtime="20201115 23:00:27.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.196" endtime="20201115 23:00:27.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.508" level="INFO">${RESULT} = [{'time': 0.024677431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1486999999999774e-05, 'source_diff': 4.1486999999999774e-05}, {'time': 0.024730431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:27.504" endtime="20201115 23:00:27.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.522" level="INFO">${ACCURACY} = {'diff': [4.1486999999999774e-05, 4.1138999999999065e-05, 4.1667000000002175e-05, 4.099999999999937e-05, 4.1333000000001036e-05, 4.1347000000000605e-05, 4.1333000000001036e-05, 4.16799999999988e-05, 4...</msg>
<status status="PASS" starttime="20201115 23:00:27.509" endtime="20201115 23:00:27.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.526" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.525" endtime="20201115 23:00:27.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.528" level="INFO">VALUE: [4.1486999999999774e-05, 4.1138999999999065e-05, 4.1667000000002175e-05, 4.099999999999937e-05, 4.1333000000001036e-05, 4.1347000000000605e-05, 4.1333000000001036e-05, 4.16799999999988e-05, 4.101400000000241e-05, 4.14860000000003e-05, 4.151399999999944e-05, 4.1180999999997775e-05, 4.101400000000241e-05, 4.101399999999894e-05, 4.152799999999901e-05, 4.1667000000002175e-05, 4.125000000000309e-05, 4.134800000000008e-05, 4.082000000000044e-05, 4.099999999999937e-05, 4.083400000000001e-05, 4.11660000000022e-05, 4.1347000000000605e-05, 4.099999999999937e-05, 4.169400000000184e-05, 4.099999999999937e-05, 4.0833000000000536e-05, 4.149999999999987e-05, 4.102799999999851e-05, 4.0847000000000105e-05, 4.151399999999944e-05, 4.0874999999999245e-05, 4.1166999999998205e-05, 4.1694999999997845e-05, 4.099999999999937e-05, 4.1318999999997996e-05, 4.151399999999944e-05, 4.1153000000002105e-05, 4.1181000000001244e-05, 4.1167000000001674e-05, 4.1153000000002105e-05, 4.0931000000000994e-05, 4.119400000000134e-05, 4.1167000000001674e-05, 4.099999999999937e-05, 4.0847000000000105e-05, 4.099999999999937e-05, 4.108399999999679e-05, 4.1333000000001036e-05, 4.115199999999916e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.527" endtime="20201115 23:00:27.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.522" endtime="20201115 23:00:27.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.532" endtime="20201115 23:00:27.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.535" endtime="20201115 23:00:27.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.533" endtime="20201115 23:00:27.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.530" endtime="20201115 23:00:27.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.165" endtime="20201115 23:00:27.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.163" endtime="20201115 23:00:27.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.162" endtime="20201115 23:00:27.556"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.558" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.567" endtime="20201115 23:00:27.583"></status>
</kw>
<msg timestamp="20201115 23:00:27.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.565" endtime="20201115 23:00:27.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.585" endtime="20201115 23:00:27.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.587" endtime="20201115 23:00:27.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.563" endtime="20201115 23:00:27.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.561" endtime="20201115 23:00:27.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.596" endtime="20201115 23:00:27.881"></status>
</kw>
<msg timestamp="20201115 23:00:27.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024464653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024505819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.595" endtime="20201115 23:00:27.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024464653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024505819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.885" endtime="20201115 23:00:27.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.894" endtime="20201115 23:00:27.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.592" endtime="20201115 23:00:27.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.590" endtime="20201115 23:00:27.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.901" level="INFO">${RESULT} = [{'time': 0.024505819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.11660000000022e-05, 'source_diff': 4.11660000000022e-05}, {'time': 0.024551833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:27.897" endtime="20201115 23:00:27.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.914" level="INFO">${ACCURACY} = {'diff': [4.11660000000022e-05, 4.0847000000000105e-05, 4.144399999999812e-05, 4.166599999999923e-05, 4.1652999999999135e-05, 4.0833000000000536e-05, 4.152799999999901e-05, 4.099999999999937e-05, 4.10...</msg>
<status status="PASS" starttime="20201115 23:00:27.902" endtime="20201115 23:00:27.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.918" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.917" endtime="20201115 23:00:27.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.921" level="INFO">VALUE: [4.11660000000022e-05, 4.0847000000000105e-05, 4.144399999999812e-05, 4.166599999999923e-05, 4.1652999999999135e-05, 4.0833000000000536e-05, 4.152799999999901e-05, 4.099999999999937e-05, 4.102799999999851e-05, 4.1333000000001036e-05, 4.099999999999937e-05, 4.1360999999996706e-05, 4.13059999999979e-05, 4.099999999999937e-05, 4.100000000000284e-05, 4.1596999999997386e-05, 4.1624999999999995e-05, 4.130600000000137e-05, 4.1569000000001716e-05, 4.1152999999998635e-05, 4.0860999999999675e-05, 4.11660000000022e-05, 4.09859999999998e-05, 4.1319000000001466e-05, 4.0776999999998786e-05, 4.152799999999901e-05, 4.1361000000000175e-05, 4.116599999999873e-05, 4.1166999999998205e-05, 4.147199999999726e-05, 4.1181000000001244e-05, 4.1124999999999495e-05, 4.149999999999987e-05, 4.1333000000001036e-05, 4.1681000000001744e-05, 4.151399999999944e-05, 4.1667000000002175e-05, 4.101400000000241e-05, 4.16119999999999e-05, 4.1681000000001744e-05, 4.133400000000051e-05, 4.1166999999998205e-05, 4.115199999999916e-05, 4.098600000000327e-05, 4.116599999999873e-05, 4.1347000000000605e-05, 4.101399999999894e-05, 4.16799999999988e-05, 4.1332999999997566e-05, 4.0805000000001396e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.920" endtime="20201115 23:00:27.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.915" endtime="20201115 23:00:27.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.924" endtime="20201115 23:00:27.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.928" endtime="20201115 23:00:27.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.926" endtime="20201115 23:00:27.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.922" endtime="20201115 23:00:27.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.559" endtime="20201115 23:00:27.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.557" endtime="20201115 23:00:27.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.556" endtime="20201115 23:00:27.949"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.951" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.959" endtime="20201115 23:00:27.977"></status>
</kw>
<msg timestamp="20201115 23:00:27.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.958" endtime="20201115 23:00:27.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.978" endtime="20201115 23:00:27.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.981" endtime="20201115 23:00:27.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.955" endtime="20201115 23:00:27.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.953" endtime="20201115 23:00:27.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.991" endtime="20201115 23:00:28.277"></status>
</kw>
<msg timestamp="20201115 23:00:28.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024402222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024443639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.988" endtime="20201115 23:00:28.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024402222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024443639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.281" endtime="20201115 23:00:28.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.289" endtime="20201115 23:00:28.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.986" endtime="20201115 23:00:28.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.984" endtime="20201115 23:00:28.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.296" level="INFO">${RESULT} = [{'time': 0.024443639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1416999999998455e-05, 'source_diff': 4.1416999999998455e-05}, {'time': 0.024494639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:28.293" endtime="20201115 23:00:28.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.309" level="INFO">${ACCURACY} = {'diff': [4.1416999999998455e-05, 4.099999999999937e-05, 4.09859999999998e-05, 4.140199999999941e-05, 4.1347000000000605e-05, 4.1653000000002605e-05, 4.149999999999987e-05, 4.101400000000241e-05, 4.08...</msg>
<status status="PASS" starttime="20201115 23:00:28.297" endtime="20201115 23:00:28.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.314" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.313" endtime="20201115 23:00:28.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.316" level="INFO">VALUE: [4.1416999999998455e-05, 4.099999999999937e-05, 4.09859999999998e-05, 4.140199999999941e-05, 4.1347000000000605e-05, 4.1653000000002605e-05, 4.149999999999987e-05, 4.101400000000241e-05, 4.082000000000044e-05, 4.166599999999923e-05, 4.1374999999999745e-05, 4.1027000000002506e-05, 4.0833000000000536e-05, 4.1374999999999745e-05, 4.1276999999999286e-05, 4.0916999999997955e-05, 4.1361000000000175e-05, 4.1333000000001036e-05, 4.16799999999988e-05, 4.1153000000002105e-05, 4.1319000000001466e-05, 4.0832999999997066e-05, 4.1167000000001674e-05, 4.099999999999937e-05, 4.149999999999987e-05, 4.1055000000001646e-05, 4.099999999999937e-05, 4.151399999999944e-05, 4.1681000000001744e-05, 4.1666999999998705e-05, 4.0847000000000105e-05, 4.099999999999937e-05, 4.100000000000284e-05, 4.1333000000001036e-05, 4.0833000000000536e-05, 4.16799999999988e-05, 4.13059999999979e-05, 4.1347000000000605e-05, 4.1319000000001466e-05, 4.0833000000000536e-05, 4.155599999999815e-05, 4.101399999999894e-05, 4.1152999999998635e-05, 4.1333000000001036e-05, 4.0832999999997066e-05, 4.0847000000000105e-05, 4.1153000000002105e-05, 4.1681000000001744e-05, 4.151399999999944e-05, 4.151399999999944e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.315" endtime="20201115 23:00:28.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.310" endtime="20201115 23:00:28.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.320" endtime="20201115 23:00:28.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.323" endtime="20201115 23:00:28.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.321" endtime="20201115 23:00:28.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.318" endtime="20201115 23:00:28.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.952" endtime="20201115 23:00:28.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.950" endtime="20201115 23:00:28.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.949" endtime="20201115 23:00:28.344"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.346" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.355" endtime="20201115 23:00:28.371"></status>
</kw>
<msg timestamp="20201115 23:00:28.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.353" endtime="20201115 23:00:28.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.373" endtime="20201115 23:00:28.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.381" endtime="20201115 23:00:28.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.351" endtime="20201115 23:00:28.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.348" endtime="20201115 23:00:28.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.390" endtime="20201115 23:00:28.676"></status>
</kw>
<msg timestamp="20201115 23:00:28.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024387361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024429264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.388" endtime="20201115 23:00:28.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024387361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024429264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.680" endtime="20201115 23:00:28.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.688" endtime="20201115 23:00:28.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.386" endtime="20201115 23:00:28.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.384" endtime="20201115 23:00:28.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.694" level="INFO">${RESULT} = [{'time': 0.024429264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1902999999999385e-05, 'source_diff': 4.1902999999999385e-05}, {'time': 0.024477278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:28.691" endtime="20201115 23:00:28.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.709" level="INFO">${ACCURACY} = {'diff': [4.1902999999999385e-05, 4.251400000000044e-05, 4.183400000000101e-05, 4.1875000000000245e-05, 4.1681000000001744e-05, 4.183400000000101e-05, 4.1680999999998275e-05, 4.173600000000055e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:00:28.695" endtime="20201115 23:00:28.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.714" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.713" endtime="20201115 23:00:28.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.716" level="INFO">VALUE: [4.1902999999999385e-05, 4.251400000000044e-05, 4.183400000000101e-05, 4.1875000000000245e-05, 4.1681000000001744e-05, 4.183400000000101e-05, 4.1680999999998275e-05, 4.173600000000055e-05, 4.163800000000009e-05, 4.1847000000001106e-05, 4.2082999999998316e-05, 4.250000000000087e-05, 4.251399999999697e-05, 4.202799999999951e-05, 4.251399999999697e-05, 4.2152999999999635e-05, 4.1681000000001744e-05, 4.2180999999998775e-05, 4.1680999999998275e-05, 4.201300000000047e-05, 4.250000000000087e-05, 4.2332999999998566e-05, 4.1681000000001744e-05, 4.250000000000087e-05, 4.184800000000058e-05, 4.220799999999844e-05, 4.250000000000087e-05, 4.232000000000194e-05, 4.24999999999974e-05, 4.168000000000227e-05, 4.248599999999783e-05, 4.2346999999998136e-05, 4.219399999999887e-05, 4.218000000000277e-05, 4.1652999999999135e-05, 4.21799999999993e-05, 4.1847000000001106e-05, 4.1832999999998066e-05, 4.19860000000008e-05, 4.182000000000144e-05, 4.2166999999999205e-05, 4.1861000000000675e-05, 4.19860000000008e-05, 4.2180999999998775e-05, 4.202799999999951e-05, 4.233400000000151e-05, 4.231999999999847e-05, 4.2180999999998775e-05, 4.243000000000302e-05, 4.2487000000000774e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.715" endtime="20201115 23:00:28.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.710" endtime="20201115 23:00:28.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.719" endtime="20201115 23:00:28.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.723" endtime="20201115 23:00:28.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.721" endtime="20201115 23:00:28.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.718" endtime="20201115 23:00:28.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.347" endtime="20201115 23:00:28.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.345" endtime="20201115 23:00:28.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.344" endtime="20201115 23:00:28.744"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.746" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.755" endtime="20201115 23:00:28.772"></status>
</kw>
<msg timestamp="20201115 23:00:28.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.754" endtime="20201115 23:00:28.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.773" endtime="20201115 23:00:28.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.776" endtime="20201115 23:00:28.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.751" endtime="20201115 23:00:28.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.748" endtime="20201115 23:00:28.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.785" endtime="20201115 23:00:29.071"></status>
</kw>
<msg timestamp="20201115 23:00:29.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025019417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025062986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.783" endtime="20201115 23:00:29.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025019417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025062986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.075" endtime="20201115 23:00:29.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.083" endtime="20201115 23:00:29.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.781" endtime="20201115 23:00:29.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.779" endtime="20201115 23:00:29.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.090" level="INFO">${RESULT} = [{'time': 0.025062986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3569000000000246e-05, 'source_diff': 4.3569000000000246e-05}, {'time': 0.025115986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:29.087" endtime="20201115 23:00:29.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.104" level="INFO">${ACCURACY} = {'diff': [4.3569000000000246e-05, 4.2818999999999496e-05, 4.300000000000137e-05, 4.348599999999883e-05, 4.2680999999999275e-05, 4.283400000000201e-05, 4.351400000000144e-05, 4.3167000000000205e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:00:29.091" endtime="20201115 23:00:29.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.108" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.107" endtime="20201115 23:00:29.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.111" level="INFO">VALUE: [4.3569000000000246e-05, 4.2818999999999496e-05, 4.300000000000137e-05, 4.348599999999883e-05, 4.2680999999999275e-05, 4.283400000000201e-05, 4.351400000000144e-05, 4.3167000000000205e-05, 4.348599999999883e-05, 4.2680999999999275e-05, 4.283400000000201e-05, 4.2861000000001676e-05, 4.316599999999726e-05, 4.319399999999987e-05, 4.34999999999984e-05, 4.351399999999797e-05, 4.3361000000002176e-05, 4.300000000000137e-05, 4.3194999999999345e-05, 4.2903000000000385e-05, 4.319399999999987e-05, 4.350000000000187e-05, 4.29999999999979e-05, 4.29860000000018e-05, 4.3444999999999595e-05, 4.3167000000000205e-05, 4.2666999999999705e-05, 4.3346999999999136e-05, 4.2653000000000135e-05, 4.334799999999861e-05, 4.348599999999883e-05, 4.351300000000197e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.2860999999998206e-05, 4.294399999999962e-05, 4.316599999999726e-05, 4.300000000000137e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.2846999999998636e-05, 4.2667000000003175e-05, 4.34999999999984e-05, 4.2846999999998636e-05, 4.300000000000137e-05, 4.2680999999999275e-05, 4.352800000000101e-05, 4.301400000000094e-05, 4.350000000000187e-05, 4.300000000000137e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.109" endtime="20201115 23:00:29.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.104" endtime="20201115 23:00:29.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.114" endtime="20201115 23:00:29.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.117" endtime="20201115 23:00:29.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.116" endtime="20201115 23:00:29.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.112" endtime="20201115 23:00:29.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.747" endtime="20201115 23:00:29.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.745" endtime="20201115 23:00:29.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.744" endtime="20201115 23:00:29.139"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.141" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.149" endtime="20201115 23:00:29.166"></status>
</kw>
<msg timestamp="20201115 23:00:29.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.148" endtime="20201115 23:00:29.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.168" endtime="20201115 23:00:29.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.170" endtime="20201115 23:00:29.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.145" endtime="20201115 23:00:29.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.143" endtime="20201115 23:00:29.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.179" endtime="20201115 23:00:29.467"></status>
</kw>
<msg timestamp="20201115 23:00:29.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024704597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024748667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.178" endtime="20201115 23:00:29.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024704597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024748667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.471" endtime="20201115 23:00:29.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.480" endtime="20201115 23:00:29.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.175" endtime="20201115 23:00:29.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.174" endtime="20201115 23:00:29.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.486" level="INFO">${RESULT} = [{'time': 0.024748667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.407000000000022e-05, 'source_diff': 4.407000000000022e-05}, {'time': 0.024807667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:29.483" endtime="20201115 23:00:29.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.500" level="INFO">${ACCURACY} = {'diff': [4.407000000000022e-05, 4.433400000000004e-05, 4.433400000000004e-05, 4.450000000000287e-05, 4.3833000000000066e-05, 4.402800000000151e-05, 4.419400000000087e-05, 4.451399999999897e-05, 4.418...</msg>
<status status="PASS" starttime="20201115 23:00:29.487" endtime="20201115 23:00:29.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.504" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.503" endtime="20201115 23:00:29.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.506" level="INFO">VALUE: [4.407000000000022e-05, 4.433400000000004e-05, 4.433400000000004e-05, 4.450000000000287e-05, 4.3833000000000066e-05, 4.402800000000151e-05, 4.419400000000087e-05, 4.451399999999897e-05, 4.41800000000013e-05, 4.402799999999804e-05, 4.451400000000244e-05, 4.3667000000000705e-05, 4.427799999999829e-05, 4.3681000000000275e-05, 4.3667000000000705e-05, 4.390199999999844e-05, 4.4166999999997736e-05, 4.440199999999894e-05, 4.39999999999989e-05, 4.422200000000001e-05, 4.4360999999999706e-05, 4.44999999999994e-05, 4.39999999999989e-05, 4.39999999999989e-05, 4.415200000000216e-05, 4.451399999999897e-05, 4.4138999999998596e-05, 4.4347000000000136e-05, 4.4333000000000566e-05, 4.44999999999994e-05, 4.416599999999826e-05, 4.3736999999998555e-05, 4.3653000000001135e-05, 4.429199999999786e-05, 4.44999999999994e-05, 4.3833000000000066e-05, 4.4333000000000566e-05, 4.4181000000000775e-05, 4.3667000000000705e-05, 4.401400000000194e-05, 4.4166999999997736e-05, 4.451399999999897e-05, 4.4167000000001205e-05, 4.45129999999995e-05, 4.365200000000166e-05, 4.4333000000000566e-05, 4.4347000000000136e-05, 4.397199999999976e-05, 4.404200000000108e-05, 4.451399999999897e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.505" endtime="20201115 23:00:29.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.500" endtime="20201115 23:00:29.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.510" endtime="20201115 23:00:29.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.514" endtime="20201115 23:00:29.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.512" endtime="20201115 23:00:29.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.508" endtime="20201115 23:00:29.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.142" endtime="20201115 23:00:29.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.140" endtime="20201115 23:00:29.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.139" endtime="20201115 23:00:29.535"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.537" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.545" endtime="20201115 23:00:29.562"></status>
</kw>
<msg timestamp="20201115 23:00:29.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.544" endtime="20201115 23:00:29.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.563" endtime="20201115 23:00:29.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.566" endtime="20201115 23:00:29.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.541" endtime="20201115 23:00:29.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.539" endtime="20201115 23:00:29.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.575" endtime="20201115 23:00:29.861"></status>
</kw>
<msg timestamp="20201115 23:00:29.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024273111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024317861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.574" endtime="20201115 23:00:29.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024273111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024317861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.866" endtime="20201115 23:00:29.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.874" endtime="20201115 23:00:29.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.571" endtime="20201115 23:00:29.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.569" endtime="20201115 23:00:29.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.881" level="INFO">${RESULT} = [{'time': 0.024317861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.474999999999965e-05, 'source_diff': 4.474999999999965e-05}, {'time': 0.024372833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:29.877" endtime="20201115 23:00:29.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.894" level="INFO">${ACCURACY} = {'diff': [4.474999999999965e-05, 4.516599999999926e-05, 4.466600000000223e-05, 4.501399999999947e-05, 4.4819000000001497e-05, 4.5333000000001566e-05, 4.53329999999981e-05, 4.476399999999922e-05, 4.552...</msg>
<status status="PASS" starttime="20201115 23:00:29.882" endtime="20201115 23:00:29.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.898" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.897" endtime="20201115 23:00:29.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.901" level="INFO">VALUE: [4.474999999999965e-05, 4.516599999999926e-05, 4.466600000000223e-05, 4.501399999999947e-05, 4.4819000000001497e-05, 4.5333000000001566e-05, 4.53329999999981e-05, 4.476399999999922e-05, 4.552799999999954e-05, 4.551399999999997e-05, 4.482000000000097e-05, 4.5375000000000276e-05, 4.4861000000000206e-05, 4.4681000000001275e-05, 4.532000000000147e-05, 4.55130000000005e-05, 4.483400000000054e-05, 4.49999999999999e-05, 4.515199999999969e-05, 4.517999999999883e-05, 4.516599999999926e-05, 4.48329999999976e-05, 4.49999999999999e-05, 4.55000000000004e-05, 4.49999999999999e-05, 4.4847000000000636e-05, 4.4667000000001705e-05, 4.551399999999997e-05, 4.4667000000001705e-05, 4.5181000000001775e-05, 4.483400000000054e-05, 4.534799999999714e-05, 4.534800000000061e-05, 4.55000000000004e-05, 4.49999999999999e-05, 4.522200000000101e-05, 4.4653000000002135e-05, 4.49999999999999e-05, 4.4639000000002566e-05, 4.4847000000000636e-05, 4.5333000000001566e-05, 4.46800000000018e-05, 4.49999999999999e-05, 4.55000000000004e-05, 4.531899999999853e-05, 4.4847000000000636e-05, 4.4666999999998236e-05, 4.4847000000000636e-05, 4.5361000000000706e-05, 4.49999999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.899" endtime="20201115 23:00:29.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.895" endtime="20201115 23:00:29.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.904" endtime="20201115 23:00:29.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.908" endtime="20201115 23:00:29.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.906" endtime="20201115 23:00:29.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.903" endtime="20201115 23:00:29.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.538" endtime="20201115 23:00:29.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.536" endtime="20201115 23:00:29.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.535" endtime="20201115 23:00:29.929"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.931" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.939" endtime="20201115 23:00:29.957"></status>
</kw>
<msg timestamp="20201115 23:00:29.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.938" endtime="20201115 23:00:29.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.958" endtime="20201115 23:00:29.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.961" endtime="20201115 23:00:29.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.935" endtime="20201115 23:00:29.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.933" endtime="20201115 23:00:29.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.970" endtime="20201115 23:00:30.256"></status>
</kw>
<msg timestamp="20201115 23:00:30.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024415292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024461194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.968" endtime="20201115 23:00:30.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024415292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024461194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.261" endtime="20201115 23:00:30.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.269" endtime="20201115 23:00:30.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.966" endtime="20201115 23:00:30.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.964" endtime="20201115 23:00:30.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.276" level="INFO">${RESULT} = [{'time': 0.024461194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.590199999999697e-05, 'source_diff': 4.590199999999697e-05}, {'time': 0.024512194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:30.272" endtime="20201115 23:00:30.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.291" level="INFO">${ACCURACY} = {'diff': [4.590199999999697e-05, 4.5833000000002067e-05, 4.5847000000001636e-05, 4.6333000000002567e-05, 4.566599999999976e-05, 4.601400000000047e-05, 4.65000000000014e-05, 4.586099999999774e-05, 4.56...</msg>
<status status="PASS" starttime="20201115 23:00:30.277" endtime="20201115 23:00:30.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.295" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.294" endtime="20201115 23:00:30.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.298" level="INFO">VALUE: [4.590199999999697e-05, 4.5833000000002067e-05, 4.5847000000001636e-05, 4.6333000000002567e-05, 4.566599999999976e-05, 4.601400000000047e-05, 4.65000000000014e-05, 4.586099999999774e-05, 4.5652999999999666e-05, 4.5861000000001206e-05, 4.60000000000009e-05, 4.6166999999999736e-05, 4.58329999999986e-05, 4.5680999999998806e-05, 4.5680999999998806e-05, 4.6194999999998876e-05, 4.6166999999999736e-05, 4.65139999999975e-05, 4.6013000000001e-05, 4.617999999999983e-05, 4.599999999999743e-05, 4.651400000000097e-05, 4.6139000000000596e-05, 4.616600000000026e-05, 4.60000000000009e-05, 4.601400000000047e-05, 4.602800000000004e-05, 4.580499999999946e-05, 4.6361000000001706e-05, 4.63329999999991e-05, 4.601400000000047e-05, 4.5639000000000096e-05, 4.627800000000029e-05, 4.5667000000002705e-05, 4.599999999999743e-05, 4.633400000000204e-05, 4.622200000000201e-05, 4.598600000000133e-05, 4.583400000000154e-05, 4.584699999999817e-05, 4.58329999999986e-05, 4.652800000000054e-05, 4.601400000000047e-05, 4.56939999999989e-05, 4.648599999999836e-05, 4.581899999999903e-05, 4.5666999999999236e-05, 4.65000000000014e-05, 4.5652999999999666e-05, 4.6153000000000166e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.296" endtime="20201115 23:00:30.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.292" endtime="20201115 23:00:30.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.301" endtime="20201115 23:00:30.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.304" endtime="20201115 23:00:30.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.303" endtime="20201115 23:00:30.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.299" endtime="20201115 23:00:30.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.932" endtime="20201115 23:00:30.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.930" endtime="20201115 23:00:30.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.929" endtime="20201115 23:00:30.326"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.328" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.336" endtime="20201115 23:00:30.353"></status>
</kw>
<msg timestamp="20201115 23:00:30.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.335" endtime="20201115 23:00:30.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.354" endtime="20201115 23:00:30.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.357" endtime="20201115 23:00:30.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.332" endtime="20201115 23:00:30.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.330" endtime="20201115 23:00:30.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.366" endtime="20201115 23:00:30.653"></status>
</kw>
<msg timestamp="20201115 23:00:30.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024359111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024406736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.364" endtime="20201115 23:00:30.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024359111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024406736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.657" endtime="20201115 23:00:30.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.665" endtime="20201115 23:00:30.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.362" endtime="20201115 23:00:30.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.360" endtime="20201115 23:00:30.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.672" level="INFO">${RESULT} = [{'time': 0.024406736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.762499999999906e-05, 'source_diff': 4.762499999999906e-05}, {'time': 0.024466736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:30.669" endtime="20201115 23:00:30.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.685" level="INFO">${ACCURACY} = {'diff': [4.762499999999906e-05, 4.731900000000053e-05, 4.7181000000000306e-05, 4.748599999999936e-05, 4.6861000000002206e-05, 4.716699999999727e-05, 4.736099999999924e-05, 4.6667000000000236e-05, 4.7...</msg>
<status status="PASS" starttime="20201115 23:00:30.673" endtime="20201115 23:00:30.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.690" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.689" endtime="20201115 23:00:30.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.692" level="INFO">VALUE: [4.762499999999906e-05, 4.731900000000053e-05, 4.7181000000000306e-05, 4.748599999999936e-05, 4.6861000000002206e-05, 4.716699999999727e-05, 4.736099999999924e-05, 4.6667000000000236e-05, 4.736199999999871e-05, 4.688899999999788e-05, 4.673599999999861e-05, 4.733399999999957e-05, 4.730599999999696e-05, 4.666600000000076e-05, 4.748599999999936e-05, 4.717999999999736e-05, 4.73330000000001e-05, 4.684699999999917e-05, 4.732e-05, 4.749999999999893e-05, 4.6653000000000666e-05, 4.687499999999831e-05, 4.68879999999984e-05, 4.7013999999998e-05, 4.7153000000001166e-05, 4.7125000000002026e-05, 4.6667000000000236e-05, 4.698599999999886e-05, 4.75000000000024e-05, 4.749999999999893e-05, 4.6653000000000666e-05, 4.684699999999917e-05, 4.684699999999917e-05, 4.730500000000096e-05, 4.755600000000068e-05, 4.737499999999881e-05, 4.7013999999998e-05, 4.717999999999736e-05, 4.751400000000197e-05, 4.6667000000000236e-05, 4.75000000000024e-05, 4.70000000000019e-05, 4.70000000000019e-05, 4.75139999999985e-05, 4.738800000000237e-05, 4.705500000000071e-05, 4.754099999999817e-05, 4.684800000000211e-05, 4.70000000000019e-05, 4.751299999999903e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.691" endtime="20201115 23:00:30.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.686" endtime="20201115 23:00:30.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.696" endtime="20201115 23:00:30.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.699" endtime="20201115 23:00:30.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.697" endtime="20201115 23:00:30.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.694" endtime="20201115 23:00:30.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.329" endtime="20201115 23:00:30.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.327" endtime="20201115 23:00:30.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.326" endtime="20201115 23:00:30.720"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.722" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.731" endtime="20201115 23:00:30.748"></status>
</kw>
<msg timestamp="20201115 23:00:30.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.729" endtime="20201115 23:00:30.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.749" endtime="20201115 23:00:30.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.752" endtime="20201115 23:00:30.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.726" endtime="20201115 23:00:30.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.724" endtime="20201115 23:00:30.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.761" endtime="20201115 23:00:31.048"></status>
</kw>
<msg timestamp="20201115 23:00:31.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024339097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024387403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.759" endtime="20201115 23:00:31.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024339097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024387403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.052" endtime="20201115 23:00:31.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.060" endtime="20201115 23:00:31.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.756" endtime="20201115 23:00:31.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.755" endtime="20201115 23:00:31.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.067" level="INFO">${RESULT} = [{'time': 0.024387403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.830599999999796e-05, 'source_diff': 4.830599999999796e-05}, {'time': 0.024444347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:31.064" endtime="20201115 23:00:31.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.080" level="INFO">${ACCURACY} = {'diff': [4.830599999999796e-05, 4.801400000000247e-05, 4.811099999999999e-05, 4.816600000000226e-05, 4.802799999999857e-05, 4.766699999999777e-05, 4.801400000000247e-05, 4.81529999999987e-05, 4.80280...</msg>
<status status="PASS" starttime="20201115 23:00:31.068" endtime="20201115 23:00:31.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.085" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.084" endtime="20201115 23:00:31.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.087" level="INFO">VALUE: [4.830599999999796e-05, 4.801400000000247e-05, 4.811099999999999e-05, 4.816600000000226e-05, 4.802799999999857e-05, 4.766699999999777e-05, 4.801400000000247e-05, 4.81529999999987e-05, 4.802800000000204e-05, 4.85139999999995e-05, 4.8013999999999e-05, 4.833400000000057e-05, 4.783400000000007e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.783400000000007e-05, 4.7667000000001236e-05, 4.801299999999953e-05, 4.818000000000183e-05, 4.784700000000017e-05, 4.767999999999786e-05, 4.818000000000183e-05, 4.781899999999756e-05, 4.76940000000009e-05, 4.799999999999943e-05, 4.834700000000067e-05, 4.831900000000153e-05, 4.831900000000153e-05, 4.76529999999982e-05, 4.8445000000001126e-05, 4.816699999999827e-05, 4.834800000000014e-05, 4.834800000000014e-05, 4.816699999999827e-05, 4.81940000000014e-05, 4.78330000000006e-05, 4.767999999999786e-05, 4.83330000000011e-05, 4.8013999999999e-05, 4.85139999999995e-05, 4.809700000000042e-05, 4.817999999999836e-05, 4.818099999999784e-05, 4.7653000000001666e-05, 4.85139999999995e-05, 4.833299999999763e-05, 4.802800000000204e-05, 4.7653000000001666e-05, 4.8181000000001306e-05, 4.802799999999857e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.086" endtime="20201115 23:00:31.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.081" endtime="20201115 23:00:31.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.090" endtime="20201115 23:00:31.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.094" endtime="20201115 23:00:31.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.092" endtime="20201115 23:00:31.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.088" endtime="20201115 23:00:31.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.723" endtime="20201115 23:00:31.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.721" endtime="20201115 23:00:31.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.720" endtime="20201115 23:00:31.115"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.117" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.125" endtime="20201115 23:00:31.143"></status>
</kw>
<msg timestamp="20201115 23:00:31.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.124" endtime="20201115 23:00:31.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.144" endtime="20201115 23:00:31.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.147" endtime="20201115 23:00:31.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.121" endtime="20201115 23:00:31.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.119" endtime="20201115 23:00:31.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.156" endtime="20201115 23:00:31.443"></status>
</kw>
<msg timestamp="20201115 23:00:31.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024725833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024774903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.155" endtime="20201115 23:00:31.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024725833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024774903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.447" endtime="20201115 23:00:31.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.456" endtime="20201115 23:00:31.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.152" endtime="20201115 23:00:31.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.150" endtime="20201115 23:00:31.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.462" level="INFO">${RESULT} = [{'time': 0.024774903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.907000000000175e-05, 'source_diff': 4.907000000000175e-05}, {'time': 0.024832903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:31.459" endtime="20201115 23:00:31.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.475" level="INFO">${ACCURACY} = {'diff': [4.907000000000175e-05, 4.916699999999927e-05, 4.948600000000136e-05, 4.872200000000104e-05, 4.91529999999997e-05, 4.862500000000006e-05, 4.867999999999886e-05, 4.88469999999977e-05, 4.951400...</msg>
<status status="PASS" starttime="20201115 23:00:31.463" endtime="20201115 23:00:31.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.480" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.479" endtime="20201115 23:00:31.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.482" level="INFO">VALUE: [4.907000000000175e-05, 4.916699999999927e-05, 4.948600000000136e-05, 4.872200000000104e-05, 4.91529999999997e-05, 4.862500000000006e-05, 4.867999999999886e-05, 4.88469999999977e-05, 4.95140000000005e-05, 4.865199999999972e-05, 4.898600000000086e-05, 4.869399999999843e-05, 4.887500000000031e-05, 4.859700000000092e-05, 4.88330000000016e-05, 4.9014e-05, 4.912500000000056e-05, 4.883299999999813e-05, 4.933299999999863e-05, 4.951399999999703e-05, 4.950000000000093e-05, 4.8903000000002916e-05, 4.950000000000093e-05, 4.918099999999884e-05, 4.934700000000167e-05, 4.88469999999977e-05, 4.949999999999746e-05, 4.933299999999863e-05, 4.9014e-05, 4.912500000000056e-05, 4.95140000000005e-05, 4.900000000000043e-05, 4.9167000000002736e-05, 4.95140000000005e-05, 4.951399999999703e-05, 4.91529999999997e-05, 4.868099999999834e-05, 4.949999999999746e-05, 4.8681000000001806e-05, 4.884800000000064e-05, 4.8667000000002236e-05, 4.919399999999893e-05, 4.933400000000157e-05, 4.930599999999896e-05, 4.863800000000015e-05, 4.950000000000093e-05, 4.866599999999929e-05, 4.952800000000007e-05, 4.9014e-05, 4.88330000000016e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.481" endtime="20201115 23:00:31.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.476" endtime="20201115 23:00:31.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.486" endtime="20201115 23:00:31.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.489" endtime="20201115 23:00:31.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.488" endtime="20201115 23:00:31.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.484" endtime="20201115 23:00:31.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.118" endtime="20201115 23:00:31.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.116" endtime="20201115 23:00:31.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.115" endtime="20201115 23:00:31.511"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.513" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.522" endtime="20201115 23:00:31.539"></status>
</kw>
<msg timestamp="20201115 23:00:31.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.520" endtime="20201115 23:00:31.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.541" endtime="20201115 23:00:31.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.543" endtime="20201115 23:00:31.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.517" endtime="20201115 23:00:31.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.515" endtime="20201115 23:00:31.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.552" endtime="20201115 23:00:31.839"></status>
</kw>
<msg timestamp="20201115 23:00:31.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025602667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025652556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.551" endtime="20201115 23:00:31.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025602667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025652556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.844" endtime="20201115 23:00:31.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.852" endtime="20201115 23:00:31.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.548" endtime="20201115 23:00:31.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.547" endtime="20201115 23:00:31.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.858" level="INFO">${RESULT} = [{'time': 0.025652556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.988900000000088e-05, 'source_diff': 4.988900000000088e-05}, {'time': 0.025716569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:31.855" endtime="20201115 23:00:31.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.873" level="INFO">${ACCURACY} = {'diff': [4.988900000000088e-05, 5.012500000000156e-05, 5.018000000000036e-05, 4.966600000000029e-05, 4.98469999999987e-05, 4.999999999999796e-05, 5.0014000000001e-05, 4.966600000000029e-05, 5.0430000...</msg>
<status status="PASS" starttime="20201115 23:00:31.859" endtime="20201115 23:00:31.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.878" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.877" endtime="20201115 23:00:31.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.880" level="INFO">VALUE: [4.988900000000088e-05, 5.012500000000156e-05, 5.018000000000036e-05, 4.966600000000029e-05, 4.98469999999987e-05, 4.999999999999796e-05, 5.0014000000001e-05, 4.966600000000029e-05, 5.043000000000061e-05, 4.9681000000002806e-05, 5.034700000000267e-05, 4.998600000000186e-05, 4.984700000000217e-05, 5.01530000000007e-05, 4.987500000000131e-05, 5.02079999999995e-05, 5.019499999999941e-05, 4.98339999999986e-05, 5.055499999999727e-05, 4.98339999999986e-05, 5.036099999999877e-05, 5.050000000000193e-05, 4.98469999999987e-05, 4.98469999999987e-05, 4.966699999999977e-05, 5.033299999999963e-05, 4.963900000000063e-05, 4.999999999999796e-05, 5.030599999999996e-05, 4.983299999999913e-05, 5.036099999999877e-05, 5.018099999999984e-05, 4.966699999999977e-05, 5.011100000000199e-05, 5.0014000000001e-05, 4.966699999999977e-05, 4.986099999999827e-05, 4.981899999999956e-05, 5.027700000000135e-05, 5.016600000000079e-05, 5.034700000000267e-05, 4.966600000000029e-05, 5.0179999999996894e-05, 5.0415999999997574e-05, 5.03469999999992e-05, 5.05140000000015e-05, 4.968099999999934e-05, 5.048599999999889e-05, 4.969499999999891e-05, 5.049999999999846e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.879" endtime="20201115 23:00:31.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.874" endtime="20201115 23:00:31.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.883" endtime="20201115 23:00:31.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.887" endtime="20201115 23:00:31.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.885" endtime="20201115 23:00:31.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.882" endtime="20201115 23:00:31.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.514" endtime="20201115 23:00:31.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.512" endtime="20201115 23:00:31.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.511" endtime="20201115 23:00:31.908"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.911" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.919" endtime="20201115 23:00:31.936"></status>
</kw>
<msg timestamp="20201115 23:00:31.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.917" endtime="20201115 23:00:31.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.938" endtime="20201115 23:00:31.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.940" endtime="20201115 23:00:31.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.915" endtime="20201115 23:00:31.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.913" endtime="20201115 23:00:31.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.949" endtime="20201115 23:00:32.235"></status>
</kw>
<msg timestamp="20201115 23:00:32.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025113097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025164403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.948" endtime="20201115 23:00:32.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025113097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025164403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.239" endtime="20201115 23:00:32.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.247" endtime="20201115 23:00:32.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.945" endtime="20201115 23:00:32.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.944" endtime="20201115 23:00:32.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.254" level="INFO">${RESULT} = [{'time': 0.025164403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.130599999999749e-05, 'source_diff': 5.130599999999749e-05}, {'time': 0.025220417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.251" endtime="20201115 23:00:32.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.267" level="INFO">${ACCURACY} = {'diff': [5.130599999999749e-05, 5.134799999999967e-05, 5.118100000000084e-05, 5.130499999999802e-05, 5.151399999999903e-05, 5.111100000000299e-05, 5.123600000000311e-05, 5.0665999999997824e-05, 5.086...</msg>
<status status="PASS" starttime="20201115 23:00:32.255" endtime="20201115 23:00:32.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.272" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.271" endtime="20201115 23:00:32.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.274" level="INFO">VALUE: [5.130599999999749e-05, 5.134799999999967e-05, 5.118100000000084e-05, 5.130499999999802e-05, 5.151399999999903e-05, 5.111100000000299e-05, 5.123600000000311e-05, 5.0665999999997824e-05, 5.086099999999927e-05, 5.149999999999946e-05, 5.155599999999774e-05, 5.133300000000063e-05, 5.066700000000077e-05, 5.141700000000152e-05, 5.138899999999891e-05, 5.08339999999996e-05, 5.151399999999903e-05, 5.073600000000261e-05, 5.1014000000002e-05, 5.099999999999896e-05, 5.11530000000017e-05, 5.066700000000077e-05, 5.151399999999903e-05, 5.13470000000002e-05, 5.101300000000253e-05, 5.083300000000013e-05, 5.068000000000086e-05, 5.149999999999946e-05, 5.159799999999992e-05, 5.100000000000243e-05, 5.100000000000243e-05, 5.083300000000013e-05, 5.149999999999946e-05, 5.0709000000002946e-05, 5.13470000000002e-05, 5.098599999999939e-05, 5.118100000000084e-05, 5.066700000000077e-05, 5.10279999999981e-05, 5.098599999999939e-05, 5.084799999999917e-05, 5.069400000000043e-05, 5.099999999999896e-05, 5.131900000000106e-05, 5.151399999999903e-05, 5.098599999999939e-05, 5.087499999999884e-05, 5.066700000000077e-05, 5.081899999999709e-05, 5.115299999999823e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.273" endtime="20201115 23:00:32.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.268" endtime="20201115 23:00:32.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.278" endtime="20201115 23:00:32.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.281" endtime="20201115 23:00:32.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.280" endtime="20201115 23:00:32.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.276" endtime="20201115 23:00:32.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.911" endtime="20201115 23:00:32.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.909" endtime="20201115 23:00:32.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.909" endtime="20201115 23:00:32.302"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.305" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.313" endtime="20201115 23:00:32.331"></status>
</kw>
<msg timestamp="20201115 23:00:32.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.311" endtime="20201115 23:00:32.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.332" endtime="20201115 23:00:32.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.335" endtime="20201115 23:00:32.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.309" endtime="20201115 23:00:32.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.307" endtime="20201115 23:00:32.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.344" endtime="20201115 23:00:32.631"></status>
</kw>
<msg timestamp="20201115 23:00:32.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024319889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024371611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.343" endtime="20201115 23:00:32.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024319889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024371611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.636" endtime="20201115 23:00:32.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.644" endtime="20201115 23:00:32.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.340" endtime="20201115 23:00:32.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.338" endtime="20201115 23:00:32.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.651" level="INFO">${RESULT} = [{'time': 0.024371611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.172200000000057e-05, 'source_diff': 5.172200000000057e-05}, {'time': 0.024435639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.647" endtime="20201115 23:00:32.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.664" level="INFO">${ACCURACY} = {'diff': [5.172200000000057e-05, 5.219499999999794e-05, 5.21530000000027e-05, 5.2388000000000434e-05, 5.183300000000113e-05, 5.23470000000012e-05, 5.201399999999953e-05, 5.21669999999988e-05, 5.248600...</msg>
<status status="PASS" starttime="20201115 23:00:32.652" endtime="20201115 23:00:32.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.669" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.668" endtime="20201115 23:00:32.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.672" level="INFO">VALUE: [5.172200000000057e-05, 5.219499999999794e-05, 5.21530000000027e-05, 5.2388000000000434e-05, 5.183300000000113e-05, 5.23470000000012e-05, 5.201399999999953e-05, 5.21669999999988e-05, 5.248600000000089e-05, 5.190299999999898e-05, 5.218000000000236e-05, 5.219400000000193e-05, 5.231899999999859e-05, 5.1693999999997964e-05, 5.23470000000012e-05, 5.1679999999998394e-05, 5.181900000000156e-05, 5.1708000000001e-05, 5.21669999999988e-05, 5.251400000000003e-05, 5.199999999999996e-05, 5.201399999999953e-05, 5.232000000000153e-05, 5.23340000000011e-05, 5.233399999999763e-05, 5.251400000000003e-05, 5.199999999999996e-05, 5.201300000000006e-05, 5.16530000000022e-05, 5.2193999999998464e-05, 5.2166000000002793e-05, 5.184699999999723e-05, 5.183300000000113e-05, 5.251400000000003e-05, 5.198600000000039e-05, 5.199999999999996e-05, 5.166700000000177e-05, 5.218100000000184e-05, 5.229199999999892e-05, 5.172300000000005e-05, 5.251400000000003e-05, 5.16669999999983e-05, 5.18340000000006e-05, 5.184800000000017e-05, 5.215299999999923e-05, 5.16669999999983e-05, 5.199999999999996e-05, 5.2166000000002793e-05, 5.248600000000089e-05, 5.248600000000089e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.670" endtime="20201115 23:00:32.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.665" endtime="20201115 23:00:32.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.675" endtime="20201115 23:00:32.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.678" endtime="20201115 23:00:32.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.677" endtime="20201115 23:00:32.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.673" endtime="20201115 23:00:32.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.305" endtime="20201115 23:00:32.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.303" endtime="20201115 23:00:32.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.303" endtime="20201115 23:00:32.700"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.702" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.711" endtime="20201115 23:00:32.729"></status>
</kw>
<msg timestamp="20201115 23:00:32.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.709" endtime="20201115 23:00:32.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.730" endtime="20201115 23:00:32.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.733" endtime="20201115 23:00:32.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.706" endtime="20201115 23:00:32.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.704" endtime="20201115 23:00:32.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.742" endtime="20201115 23:00:33.045"></status>
</kw>
<msg timestamp="20201115 23:00:33.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025660778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025714375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.740" endtime="20201115 23:00:33.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025660778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025714375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.049" endtime="20201115 23:00:33.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.057" endtime="20201115 23:00:33.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.738" endtime="20201115 23:00:33.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.736" endtime="20201115 23:00:33.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.064" level="INFO">${RESULT} = [{'time': 0.025714375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.359700000000245e-05, 'source_diff': 5.359700000000245e-05}, {'time': 0.025774333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:33.060" endtime="20201115 23:00:33.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.077" level="INFO">${ACCURACY} = {'diff': [5.359700000000245e-05, 5.2665999999999824e-05, 5.301400000000053e-05, 5.3499999999997994e-05, 5.28470000000017e-05, 5.30280000000001e-05, 5.31669999999998e-05, 5.355599999999974e-05, 5.31809...</msg>
<status status="PASS" starttime="20201115 23:00:33.065" endtime="20201115 23:00:33.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.082" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.081" endtime="20201115 23:00:33.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.084" level="INFO">VALUE: [5.359700000000245e-05, 5.2665999999999824e-05, 5.301400000000053e-05, 5.3499999999997994e-05, 5.28470000000017e-05, 5.30280000000001e-05, 5.31669999999998e-05, 5.355599999999974e-05, 5.318099999999937e-05, 5.300000000000096e-05, 5.301400000000053e-05, 5.266700000000277e-05, 5.338899999999744e-05, 5.350000000000146e-05, 5.333399999999863e-05, 5.266700000000277e-05, 5.3235999999998174e-05, 5.2679999999999394e-05, 5.2665999999999824e-05, 5.355599999999974e-05, 5.351400000000103e-05, 5.333299999999916e-05, 5.350000000000146e-05, 5.301400000000053e-05, 5.288900000000041e-05, 5.319499999999894e-05, 5.308299999999891e-05, 5.284699999999823e-05, 5.287500000000084e-05, 5.300000000000096e-05, 5.330500000000002e-05, 5.334699999999873e-05, 5.28470000000017e-05, 5.334699999999873e-05, 5.2985999999997924e-05, 5.281899999999909e-05, 5.3179999999999894e-05, 5.331899999999959e-05, 5.3513999999997564e-05, 5.3179999999999894e-05, 5.2985999999997924e-05, 5.268099999999887e-05, 5.318099999999937e-05, 5.350000000000146e-05, 5.2763999999996813e-05, 5.3013999999997063e-05, 5.350000000000146e-05, 5.31669999999998e-05, 5.3485999999998424e-05, 5.333399999999863e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.083" endtime="20201115 23:00:33.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.078" endtime="20201115 23:00:33.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.087" endtime="20201115 23:00:33.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.091" endtime="20201115 23:00:33.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.089" endtime="20201115 23:00:33.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.086" endtime="20201115 23:00:33.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.703" endtime="20201115 23:00:33.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.701" endtime="20201115 23:00:33.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.700" endtime="20201115 23:00:33.112"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.114" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.123" endtime="20201115 23:00:33.140"></status>
</kw>
<msg timestamp="20201115 23:00:33.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.121" endtime="20201115 23:00:33.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.141" endtime="20201115 23:00:33.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.144" endtime="20201115 23:00:33.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.118" endtime="20201115 23:00:33.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.116" endtime="20201115 23:00:33.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.153" endtime="20201115 23:00:33.438"></status>
</kw>
<msg timestamp="20201115 23:00:33.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024532806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024586889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.151" endtime="20201115 23:00:33.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024532806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024586889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.442" endtime="20201115 23:00:33.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.455" endtime="20201115 23:00:33.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.149" endtime="20201115 23:00:33.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.147" endtime="20201115 23:00:33.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.462" level="INFO">${RESULT} = [{'time': 0.024586889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.408299999999991e-05, 'source_diff': 5.408299999999991e-05}, {'time': 0.024646903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:33.459" endtime="20201115 23:00:33.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.477" level="INFO">${ACCURACY} = {'diff': [5.408299999999991e-05, 5.451400000000203e-05, 5.401400000000153e-05, 5.386200000000174e-05, 5.456900000000084e-05, 5.4499999999998994e-05, 5.38340000000026e-05, 5.404099999999773e-05, 5.4013...</msg>
<status status="PASS" starttime="20201115 23:00:33.463" endtime="20201115 23:00:33.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.482" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.481" endtime="20201115 23:00:33.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.484" level="INFO">VALUE: [5.408299999999991e-05, 5.451400000000203e-05, 5.401400000000153e-05, 5.386200000000174e-05, 5.456900000000084e-05, 5.4499999999998994e-05, 5.38340000000026e-05, 5.404099999999773e-05, 5.401300000000206e-05, 5.3651999999997785e-05, 5.383299999999966e-05, 5.3999999999998494e-05, 5.390300000000098e-05, 5.3666000000000824e-05, 5.383299999999966e-05, 5.422299999999908e-05, 5.405600000000024e-05, 5.365300000000073e-05, 5.434699999999973e-05, 5.38609999999988e-05, 5.4513999999998564e-05, 5.413900000000166e-05, 5.411099999999905e-05, 5.43340000000031e-05, 5.448700000000237e-05, 5.373600000000214e-05, 5.401400000000153e-05, 5.4194000000000464e-05, 5.4180000000000894e-05, 5.4180000000000894e-05, 5.4180000000000894e-05, 5.3693999999999964e-05, 5.41670000000008e-05, 5.418100000000037e-05, 5.369499999999944e-05, 5.4249999999998744e-05, 5.443099999999715e-05, 5.368099999999987e-05, 5.41670000000008e-05, 5.4485999999999424e-05, 5.452700000000213e-05, 5.433399999999963e-05, 5.381999999999956e-05, 5.4166000000001324e-05, 5.429099999999798e-05, 5.4485999999999424e-05, 5.3693999999999964e-05, 5.3666000000000824e-05, 5.409699999999948e-05, 5.36670000000003e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.483" endtime="20201115 23:00:33.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.478" endtime="20201115 23:00:33.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.487" endtime="20201115 23:00:33.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.491" endtime="20201115 23:00:33.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.489" endtime="20201115 23:00:33.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.486" endtime="20201115 23:00:33.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.115" endtime="20201115 23:00:33.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.113" endtime="20201115 23:00:33.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.112" endtime="20201115 23:00:33.512"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.514" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.523" endtime="20201115 23:00:33.541"></status>
</kw>
<msg timestamp="20201115 23:00:33.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.521" endtime="20201115 23:00:33.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.543" endtime="20201115 23:00:33.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.545" endtime="20201115 23:00:33.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.518" endtime="20201115 23:00:33.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.516" endtime="20201115 23:00:33.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.554" endtime="20201115 23:00:33.840"></status>
</kw>
<msg timestamp="20201115 23:00:33.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025187403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025242125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.552" endtime="20201115 23:00:33.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025187403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025242125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.844" endtime="20201115 23:00:33.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.852" endtime="20201115 23:00:33.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.550" endtime="20201115 23:00:33.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.548" endtime="20201115 23:00:33.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.859" level="INFO">${RESULT} = [{'time': 0.025242125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4722000000000104e-05, 'source_diff': 5.4722000000000104e-05}, {'time': 0.025303139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:33.856" endtime="20201115 23:00:33.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.872" level="INFO">${ACCURACY} = {'diff': [5.4722000000000104e-05, 5.5513999999999564e-05, 5.516699999999833e-05, 5.484700000000023e-05, 5.533400000000063e-05, 5.544500000000119e-05, 5.494500000000069e-05, 5.534700000000073e-05, 5.55...</msg>
<status status="PASS" starttime="20201115 23:00:33.860" endtime="20201115 23:00:33.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.877" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.876" endtime="20201115 23:00:33.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.879" level="INFO">VALUE: [5.4722000000000104e-05, 5.5513999999999564e-05, 5.516699999999833e-05, 5.484700000000023e-05, 5.533400000000063e-05, 5.544500000000119e-05, 5.494500000000069e-05, 5.534700000000073e-05, 5.5513999999999564e-05, 5.4999999999999494e-05, 5.554200000000217e-05, 5.531900000000159e-05, 5.466699999999783e-05, 5.534700000000073e-05, 5.484700000000023e-05, 5.481900000000109e-05, 5.534700000000073e-05, 5.533299999999769e-05, 5.4985999999999924e-05, 5.544500000000119e-05, 5.483400000000013e-05, 5.469500000000044e-05, 5.483400000000013e-05, 5.518100000000137e-05, 5.479200000000142e-05, 5.530499999999855e-05, 5.5166000000002324e-05, 5.4693999999997495e-05, 5.4665999999998355e-05, 5.541699999999858e-05, 5.534700000000073e-05, 5.487499999999937e-05, 5.534700000000073e-05, 5.483300000000066e-05, 5.5499999999999994e-05, 5.476400000000228e-05, 5.50549999999983e-05, 5.48609999999998e-05, 5.536199999999977e-05, 5.5486000000000424e-05, 5.5513999999999564e-05, 5.515299999999876e-05, 5.5151999999999285e-05, 5.484700000000023e-05, 5.5027999999998634e-05, 5.465299999999826e-05, 5.484700000000023e-05, 5.5471999999997385e-05, 5.533300000000116e-05, 5.4985999999999924e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.878" endtime="20201115 23:00:33.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.873" endtime="20201115 23:00:33.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.882" endtime="20201115 23:00:33.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.886" endtime="20201115 23:00:33.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.884" endtime="20201115 23:00:33.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.881" endtime="20201115 23:00:33.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.515" endtime="20201115 23:00:33.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.513" endtime="20201115 23:00:33.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.512" endtime="20201115 23:00:33.907"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.909" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.917" endtime="20201115 23:00:33.935"></status>
</kw>
<msg timestamp="20201115 23:00:33.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.916" endtime="20201115 23:00:33.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.936" endtime="20201115 23:00:33.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.939" endtime="20201115 23:00:33.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.913" endtime="20201115 23:00:33.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.911" endtime="20201115 23:00:33.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.948" endtime="20201115 23:00:34.235"></status>
</kw>
<msg timestamp="20201115 23:00:34.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024257153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024313375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.947" endtime="20201115 23:00:34.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024257153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024313375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.239" endtime="20201115 23:00:34.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.247" endtime="20201115 23:00:34.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.944" endtime="20201115 23:00:34.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.943" endtime="20201115 23:00:34.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.254" level="INFO">${RESULT} = [{'time': 0.024313375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6222000000001604e-05, 'source_diff': 5.6222000000001604e-05}, {'time': 0.024384389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:34.251" endtime="20201115 23:00:34.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.267" level="INFO">${ACCURACY} = {'diff': [5.6222000000001604e-05, 5.633299999999869e-05, 5.634700000000173e-05, 5.56809999999984e-05, 5.566699999999883e-05, 5.587500000000037e-05, 5.58480000000007e-05, 5.581899999999862e-05, 5.58469...</msg>
<status status="PASS" starttime="20201115 23:00:34.255" endtime="20201115 23:00:34.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.272" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.271" endtime="20201115 23:00:34.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.275" level="INFO">VALUE: [5.6222000000001604e-05, 5.633299999999869e-05, 5.634700000000173e-05, 5.56809999999984e-05, 5.566699999999883e-05, 5.587500000000037e-05, 5.58480000000007e-05, 5.581899999999862e-05, 5.584699999999776e-05, 5.6485999999997955e-05, 5.584700000000123e-05, 5.6165999999999855e-05, 5.6513999999997094e-05, 5.6165999999999855e-05, 5.56670000000023e-05, 5.615299999999976e-05, 5.5805999999998523e-05, 5.61809999999989e-05, 5.565300000000273e-05, 5.63480000000012e-05, 5.5971999999997885e-05, 5.60280000000031e-05, 5.582000000000156e-05, 5.6514000000000564e-05, 5.583399999999766e-05, 5.651300000000109e-05, 5.634699999999826e-05, 5.581899999999862e-05, 5.6500000000000994e-05, 5.6179999999999425e-05, 5.6500000000000994e-05, 5.6499999999997524e-05, 5.6014000000000064e-05, 5.566699999999883e-05, 5.6041999999999204e-05, 5.581999999999809e-05, 5.593099999999865e-05, 5.566699999999883e-05, 5.616699999999933e-05, 5.583399999999766e-05, 5.583299999999819e-05, 5.5679999999998925e-05, 5.583300000000166e-05, 5.584700000000123e-05, 5.583299999999819e-05, 5.636099999999783e-05, 5.6000000000000494e-05, 5.6500000000000994e-05, 5.61809999999989e-05, 5.656899999999937e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.273" endtime="20201115 23:00:34.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.268" endtime="20201115 23:00:34.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.278" endtime="20201115 23:00:34.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.281" endtime="20201115 23:00:34.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.280" endtime="20201115 23:00:34.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.276" endtime="20201115 23:00:34.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.910" endtime="20201115 23:00:34.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.908" endtime="20201115 23:00:34.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.907" endtime="20201115 23:00:34.302"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.305" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.313" endtime="20201115 23:00:34.331"></status>
</kw>
<msg timestamp="20201115 23:00:34.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.312" endtime="20201115 23:00:34.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.332" endtime="20201115 23:00:34.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.335" endtime="20201115 23:00:34.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.309" endtime="20201115 23:00:34.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.307" endtime="20201115 23:00:34.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.344" endtime="20201115 23:00:34.633"></status>
</kw>
<msg timestamp="20201115 23:00:34.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024934639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024992028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.342" endtime="20201115 23:00:34.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024934639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024992028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.637" endtime="20201115 23:00:34.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.646" endtime="20201115 23:00:34.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.340" endtime="20201115 23:00:34.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.338" endtime="20201115 23:00:34.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.653" level="INFO">${RESULT} = [{'time': 0.024992028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.738899999999797e-05, 'source_diff': 5.738899999999797e-05}, {'time': 0.025063028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:34.649" endtime="20201115 23:00:34.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.666" level="INFO">${ACCURACY} = {'diff': [5.738899999999797e-05, 5.7000000000001494e-05, 5.704100000000073e-05, 5.71809999999999e-05, 5.744499999999972e-05, 5.6721999999998635e-05, 5.7499999999998525e-05, 5.734699999999926e-05, 5.73...</msg>
<status status="PASS" starttime="20201115 23:00:34.654" endtime="20201115 23:00:34.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.670" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.669" endtime="20201115 23:00:34.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.673" level="INFO">VALUE: [5.738899999999797e-05, 5.7000000000001494e-05, 5.704100000000073e-05, 5.71809999999999e-05, 5.744499999999972e-05, 5.6721999999998635e-05, 5.7499999999998525e-05, 5.734699999999926e-05, 5.733299999999969e-05, 5.684699999999876e-05, 5.684700000000223e-05, 5.68610000000018e-05, 5.716700000000033e-05, 5.738900000000144e-05, 5.684700000000223e-05, 5.716700000000033e-05, 5.683399999999866e-05, 5.6887999999997996e-05, 5.73610000000023e-05, 5.694499999999922e-05, 5.7014000000001064e-05, 5.737500000000187e-05, 5.734699999999926e-05, 5.666699999999983e-05, 5.734699999999926e-05, 5.6999999999998024e-05, 5.7485999999998955e-05, 5.7193999999999995e-05, 5.665300000000026e-05, 5.7485999999998955e-05, 5.719499999999947e-05, 5.662500000000112e-05, 5.6999999999998024e-05, 5.6791999999999954e-05, 5.7499999999998525e-05, 5.666699999999983e-05, 5.73619999999983e-05, 5.7319999999999593e-05, 5.7013999999997594e-05, 5.7499999999998525e-05, 5.683300000000266e-05, 5.7180000000000425e-05, 5.733299999999969e-05, 5.73610000000023e-05, 5.7165999999997386e-05, 5.7513999999998094e-05, 5.7499999999998525e-05, 5.683299999999919e-05, 5.734699999999926e-05, 5.71809999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.672" endtime="20201115 23:00:34.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.667" endtime="20201115 23:00:34.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.676" endtime="20201115 23:00:34.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.680" endtime="20201115 23:00:34.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.678" endtime="20201115 23:00:34.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.674" endtime="20201115 23:00:34.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.305" endtime="20201115 23:00:34.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.303" endtime="20201115 23:00:34.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.303" endtime="20201115 23:00:34.701"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.703" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.712" endtime="20201115 23:00:34.729"></status>
</kw>
<msg timestamp="20201115 23:00:34.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.710" endtime="20201115 23:00:34.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.731" endtime="20201115 23:00:34.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.733" endtime="20201115 23:00:34.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.707" endtime="20201115 23:00:34.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.705" endtime="20201115 23:00:34.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.743" endtime="20201115 23:00:35.028"></status>
</kw>
<msg timestamp="20201115 23:00:35.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024470389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024528139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.741" endtime="20201115 23:00:35.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024470389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024528139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.032" endtime="20201115 23:00:35.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.041" endtime="20201115 23:00:35.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.738" endtime="20201115 23:00:35.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.736" endtime="20201115 23:00:35.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.047" level="INFO">${RESULT} = [{'time': 0.024528139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7750000000002244e-05, 'source_diff': 5.7750000000002244e-05}, {'time': 0.024597125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:35.044" endtime="20201115 23:00:35.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.062" level="INFO">${ACCURACY} = {'diff': [5.7750000000002244e-05, 5.766700000000083e-05, 5.7901999999998566e-05, 5.769499999999997e-05, 5.816699999999786e-05, 5.7694000000000495e-05, 5.765299999999779e-05, 5.8165999999998386e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:00:35.048" endtime="20201115 23:00:35.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.067" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.066" endtime="20201115 23:00:35.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.069" level="INFO">VALUE: [5.7750000000002244e-05, 5.766700000000083e-05, 5.7901999999998566e-05, 5.769499999999997e-05, 5.816699999999786e-05, 5.7694000000000495e-05, 5.765299999999779e-05, 5.8165999999998386e-05, 5.8179999999997956e-05, 5.7666000000001355e-05, 5.784699999999976e-05, 5.8165999999998386e-05, 5.8277999999998414e-05, 5.8165999999998386e-05, 5.8013999999998594e-05, 5.8264000000002314e-05, 5.8513999999999095e-05, 5.768099999999693e-05, 5.8528000000002134e-05, 5.816700000000133e-05, 5.81810000000009e-05, 5.7985999999999455e-05, 5.765299999999779e-05, 5.798699999999893e-05, 5.7680000000000925e-05, 5.7958000000000315e-05, 5.8485999999999955e-05, 5.8179999999997956e-05, 5.8166000000001855e-05, 5.7750000000002244e-05, 5.823699999999918e-05, 5.8499999999999525e-05, 5.8472000000000385e-05, 5.8027999999998164e-05, 5.7833999999999663e-05, 5.8499999999999525e-05, 5.794500000000022e-05, 5.7792000000000954e-05, 5.784799999999923e-05, 5.8499999999999525e-05, 5.8137999999999246e-05, 5.8528000000002134e-05, 5.83749999999994e-05, 5.8472000000000385e-05, 5.833300000000069e-05, 5.766700000000083e-05, 5.8472000000000385e-05, 5.7985999999999455e-05, 5.8513999999999095e-05, 5.7985999999999455e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.068" endtime="20201115 23:00:35.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.063" endtime="20201115 23:00:35.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.073" endtime="20201115 23:00:35.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.076" endtime="20201115 23:00:35.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.075" endtime="20201115 23:00:35.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.071" endtime="20201115 23:00:35.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.704" endtime="20201115 23:00:35.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.702" endtime="20201115 23:00:35.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.701" endtime="20201115 23:00:35.097"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.100" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.108" endtime="20201115 23:00:35.125"></status>
</kw>
<msg timestamp="20201115 23:00:35.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.106" endtime="20201115 23:00:35.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.127" endtime="20201115 23:00:35.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.129" endtime="20201115 23:00:35.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.104" endtime="20201115 23:00:35.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.102" endtime="20201115 23:00:35.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.138" endtime="20201115 23:00:35.423"></status>
</kw>
<msg timestamp="20201115 23:00:35.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024417833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02447725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:35.137" endtime="20201115 23:00:35.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024417833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02447725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:35.428" endtime="20201115 23:00:35.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.436" endtime="20201115 23:00:35.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.134" endtime="20201115 23:00:35.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.133" endtime="20201115 23:00:35.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.443" level="INFO">${RESULT} = [{'time': 0.02447725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.941699999999911e-05, 'source_diff': 5.941699999999911e-05}, {'time': 0.02454625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:35.439" endtime="20201115 23:00:35.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.456" level="INFO">${ACCURACY} = {'diff': [5.941699999999911e-05, 5.881899999999815e-05, 5.866700000000183e-05, 5.8834000000000664e-05, 5.934699999999779e-05, 5.9500000000000525e-05, 5.88749999999999e-05, 5.9348000000000734e-05, 5.86...</msg>
<status status="PASS" starttime="20201115 23:00:35.444" endtime="20201115 23:00:35.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.460" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.459" endtime="20201115 23:00:35.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.463" level="INFO">VALUE: [5.941699999999911e-05, 5.881899999999815e-05, 5.866700000000183e-05, 5.8834000000000664e-05, 5.934699999999779e-05, 5.9500000000000525e-05, 5.88749999999999e-05, 5.9348000000000734e-05, 5.866700000000183e-05, 5.8651999999999316e-05, 5.933300000000169e-05, 5.8972000000000885e-05, 5.8679999999998456e-05, 5.9013999999999595e-05, 5.9013999999999595e-05, 5.9000000000000025e-05, 5.936100000000083e-05, 5.915299999999929e-05, 5.9555999999998804e-05, 5.9388000000000496e-05, 5.9013999999999595e-05, 5.916700000000233e-05, 5.916699999999886e-05, 5.901300000000012e-05, 5.916700000000233e-05, 5.884699999999729e-05, 5.9514000000000095e-05, 5.9499999999997055e-05, 5.9471999999997915e-05, 5.9165999999999386e-05, 5.929099999999951e-05, 5.866700000000183e-05, 5.9457999999998346e-05, 5.931899999999865e-05, 5.884700000000076e-05, 5.9319999999998124e-05, 5.9193999999998526e-05, 5.91810000000019e-05, 5.9319999999998124e-05, 5.91810000000019e-05, 5.884700000000076e-05, 5.9500000000000525e-05, 5.9500000000000525e-05, 5.883299999999772e-05, 5.9027999999999164e-05, 5.8680000000001925e-05, 5.915299999999929e-05, 5.8986000000000455e-05, 5.933300000000169e-05, 5.8749999999999775e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.461" endtime="20201115 23:00:35.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.457" endtime="20201115 23:00:35.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.466" endtime="20201115 23:00:35.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.470" endtime="20201115 23:00:35.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.468" endtime="20201115 23:00:35.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.465" endtime="20201115 23:00:35.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.100" endtime="20201115 23:00:35.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.098" endtime="20201115 23:00:35.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.098" endtime="20201115 23:00:35.491"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.493" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.502" endtime="20201115 23:00:35.518"></status>
</kw>
<msg timestamp="20201115 23:00:35.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.500" endtime="20201115 23:00:35.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.520" endtime="20201115 23:00:35.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.523" endtime="20201115 23:00:35.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.497" endtime="20201115 23:00:35.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.495" endtime="20201115 23:00:35.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.532" endtime="20201115 23:00:35.818"></status>
</kw>
<msg timestamp="20201115 23:00:35.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024492194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02455275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:35.530" endtime="20201115 23:00:35.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024492194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02455275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:35.822" endtime="20201115 23:00:35.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.831" endtime="20201115 23:00:35.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.527" endtime="20201115 23:00:35.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.526" endtime="20201115 23:00:35.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.837" level="INFO">${RESULT} = [{'time': 0.02455275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0556000000003274e-05, 'source_diff': 6.0556000000003274e-05}, {'time': 0.024618778, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:35.834" endtime="20201115 23:00:35.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.851" level="INFO">${ACCURACY} = {'diff': [6.0556000000003274e-05, 6.0000000000001025e-05, 5.965299999999979e-05, 6.0333999999998694e-05, 6.0514000000001095e-05, 6.038900000000097e-05, 6.052699999999772e-05, 6.0000000000001025e-05, 6...</msg>
<status status="PASS" starttime="20201115 23:00:35.839" endtime="20201115 23:00:35.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.856" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.855" endtime="20201115 23:00:35.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.858" level="INFO">VALUE: [6.0556000000003274e-05, 6.0000000000001025e-05, 5.965299999999979e-05, 6.0333999999998694e-05, 6.0514000000001095e-05, 6.038900000000097e-05, 6.052699999999772e-05, 6.0000000000001025e-05, 6.0179999999999956e-05, 6.0014000000000595e-05, 6.0152000000000816e-05, 5.984700000000176e-05, 6.033299999999922e-05, 5.980499999999958e-05, 6.059699999999904e-05, 6.0500000000001525e-05, 5.968099999999893e-05, 5.9999999999997555e-05, 6.0334000000002164e-05, 6.0500000000001525e-05, 5.9848000000001234e-05, 6.048700000000143e-05, 6.0000000000001025e-05, 6.001299999999765e-05, 5.983299999999872e-05, 6.0166000000000386e-05, 6.0264000000000845e-05, 5.9986000000001455e-05, 6.036099999999836e-05, 5.9999999999997555e-05, 5.983300000000219e-05, 6.031899999999965e-05, 6.016699999999986e-05, 5.984699999999829e-05, 6.016699999999986e-05, 6.0485999999998485e-05, 5.9598000000000984e-05, 6.0013999999997125e-05, 5.9833999999998194e-05, 6.031899999999965e-05, 5.986100000000133e-05, 6.033299999999922e-05, 6.0542000000000235e-05, 6.031899999999965e-05, 6.03889999999975e-05, 5.9791999999999484e-05, 6.0514000000001095e-05, 5.986099999999786e-05, 6.0514000000001095e-05, 5.986100000000133e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.857" endtime="20201115 23:00:35.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.852" endtime="20201115 23:00:35.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.862" endtime="20201115 23:00:35.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.865" endtime="20201115 23:00:35.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.863" endtime="20201115 23:00:35.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.860" endtime="20201115 23:00:35.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.494" endtime="20201115 23:00:35.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.492" endtime="20201115 23:00:35.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.491" endtime="20201115 23:00:35.886"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.888" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.896" endtime="20201115 23:00:35.914"></status>
</kw>
<msg timestamp="20201115 23:00:35.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.895" endtime="20201115 23:00:35.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.915" endtime="20201115 23:00:35.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.918" endtime="20201115 23:00:35.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.892" endtime="20201115 23:00:35.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.890" endtime="20201115 23:00:35.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.927" endtime="20201115 23:00:36.213"></status>
</kw>
<msg timestamp="20201115 23:00:36.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024310819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024372056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.925" endtime="20201115 23:00:36.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024310819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024372056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.217" endtime="20201115 23:00:36.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.226" endtime="20201115 23:00:36.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.923" endtime="20201115 23:00:36.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.921" endtime="20201115 23:00:36.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.233" level="INFO">${RESULT} = [{'time': 0.024372056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.123699999999871e-05, 'source_diff': 6.123699999999871e-05}, {'time': 0.024445069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:36.229" endtime="20201115 23:00:36.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.246" level="INFO">${ACCURACY} = {'diff': [6.123699999999871e-05, 6.136099999999936e-05, 6.134699999999979e-05, 6.115200000000182e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.0694000000000026e-05, 6.0666000000000886e-05, 6.14...</msg>
<status status="PASS" starttime="20201115 23:00:36.234" endtime="20201115 23:00:36.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.250" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.249" endtime="20201115 23:00:36.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.253" level="INFO">VALUE: [6.123699999999871e-05, 6.136099999999936e-05, 6.134699999999979e-05, 6.115200000000182e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.0694000000000026e-05, 6.0666000000000886e-05, 6.149999999999906e-05, 6.066700000000036e-05, 6.083299999999972e-05, 6.134699999999979e-05, 6.132000000000012e-05, 6.0999999999998555e-05, 6.116699999999739e-05, 6.1000000000002025e-05, 6.118100000000043e-05, 6.13339999999997e-05, 6.118000000000096e-05, 6.1013999999998125e-05, 6.149999999999906e-05, 6.0694000000000026e-05, 6.133300000000022e-05, 6.118000000000096e-05, 6.131900000000065e-05, 6.086099999999886e-05, 6.1027999999997695e-05, 6.083299999999972e-05, 6.1028000000001165e-05, 6.0833999999999194e-05, 6.095899999999932e-05, 6.145899999999982e-05, 6.133300000000022e-05, 6.084699999999929e-05, 6.116600000000139e-05, 6.0916000000001136e-05, 6.134699999999979e-05, 6.113899999999825e-05, 6.118000000000096e-05, 6.133300000000022e-05, 6.134699999999979e-05, 6.151399999999863e-05, 6.116700000000086e-05, 6.0848000000002234e-05, 6.156899999999743e-05, 6.1013999999998125e-05, 6.0833999999999194e-05, 6.0694000000000026e-05, 6.084699999999929e-05, 6.148599999999949e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.251" endtime="20201115 23:00:36.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.247" endtime="20201115 23:00:36.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.256" endtime="20201115 23:00:36.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.259" endtime="20201115 23:00:36.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.258" endtime="20201115 23:00:36.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.254" endtime="20201115 23:00:36.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.889" endtime="20201115 23:00:36.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.887" endtime="20201115 23:00:36.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.886" endtime="20201115 23:00:36.281"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.283" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.291" endtime="20201115 23:00:36.309"></status>
</kw>
<msg timestamp="20201115 23:00:36.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.290" endtime="20201115 23:00:36.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.310" endtime="20201115 23:00:36.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.313" endtime="20201115 23:00:36.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.287" endtime="20201115 23:00:36.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.285" endtime="20201115 23:00:36.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.322" endtime="20201115 23:00:36.608"></status>
</kw>
<msg timestamp="20201115 23:00:36.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024465403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024527125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.320" endtime="20201115 23:00:36.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024465403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024527125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.613" endtime="20201115 23:00:36.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.621" endtime="20201115 23:00:36.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.317" endtime="20201115 23:00:36.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.316" endtime="20201115 23:00:36.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.628" level="INFO">${RESULT} = [{'time': 0.024527125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.172200000000017e-05, 'source_diff': 6.172200000000017e-05}, {'time': 0.024600125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:36.624" endtime="20201115 23:00:36.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.643" level="INFO">${ACCURACY} = {'diff': [6.172200000000017e-05, 6.181900000000115e-05, 6.184700000000029e-05, 6.197200000000042e-05, 6.250000000000006e-05, 6.168100000000093e-05, 6.251399999999963e-05, 6.250000000000006e-05, 6.2179...</msg>
<status status="PASS" starttime="20201115 23:00:36.629" endtime="20201115 23:00:36.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.647" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.646" endtime="20201115 23:00:36.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.650" level="INFO">VALUE: [6.172200000000017e-05, 6.181900000000115e-05, 6.184700000000029e-05, 6.197200000000042e-05, 6.250000000000006e-05, 6.168100000000093e-05, 6.251399999999963e-05, 6.250000000000006e-05, 6.217999999999849e-05, 6.201399999999913e-05, 6.217999999999849e-05, 6.198599999999999e-05, 6.250000000000006e-05, 6.199999999999956e-05, 6.251399999999963e-05, 6.166700000000136e-05, 6.251399999999963e-05, 6.254199999999877e-05, 6.233300000000122e-05, 6.18340000000002e-05, 6.215299999999882e-05, 6.166699999999789e-05, 6.215299999999882e-05, 6.231999999999766e-05, 6.184700000000029e-05, 6.167999999999799e-05, 6.166599999999842e-05, 6.216599999999892e-05, 6.183299999999725e-05, 6.236100000000036e-05, 6.181900000000115e-05, 6.199999999999956e-05, 6.183300000000072e-05, 6.168100000000093e-05, 6.182000000000062e-05, 6.23340000000007e-05, 6.18340000000002e-05, 6.201399999999913e-05, 6.233399999999722e-05, 6.233300000000122e-05, 6.199999999999956e-05, 6.165199999999885e-05, 6.218000000000196e-05, 6.183300000000072e-05, 6.169400000000103e-05, 6.248600000000049e-05, 6.16950000000005e-05, 6.186099999999986e-05, 6.215299999999882e-05, 6.218099999999796e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.648" endtime="20201115 23:00:36.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.644" endtime="20201115 23:00:36.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.653" endtime="20201115 23:00:36.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.656" endtime="20201115 23:00:36.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.655" endtime="20201115 23:00:36.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.651" endtime="20201115 23:00:36.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.284" endtime="20201115 23:00:36.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.282" endtime="20201115 23:00:36.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.281" endtime="20201115 23:00:36.677"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.679" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.688" endtime="20201115 23:00:36.706"></status>
</kw>
<msg timestamp="20201115 23:00:36.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.686" endtime="20201115 23:00:36.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.707" endtime="20201115 23:00:36.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.710" endtime="20201115 23:00:36.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.684" endtime="20201115 23:00:36.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.681" endtime="20201115 23:00:36.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.719" endtime="20201115 23:00:37.005"></status>
</kw>
<msg timestamp="20201115 23:00:37.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024618972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024682028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.718" endtime="20201115 23:00:37.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024618972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024682028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.009" endtime="20201115 23:00:37.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.018" endtime="20201115 23:00:37.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.715" endtime="20201115 23:00:37.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.714" endtime="20201115 23:00:37.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.024" level="INFO">${RESULT} = [{'time': 0.024682028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.30560000000023e-05, 'source_diff': 6.30560000000023e-05}, {'time': 0.024753028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:37.021" endtime="20201115 23:00:37.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.038" level="INFO">${ACCURACY} = {'diff': [6.30560000000023e-05, 6.331999999999866e-05, 6.266699999999889e-05, 6.352700000000072e-05, 6.327799999999995e-05, 6.351300000000115e-05, 6.334700000000179e-05, 6.316599999999992e-05, 6.31799...</msg>
<status status="PASS" starttime="20201115 23:00:37.025" endtime="20201115 23:00:37.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.042" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.041" endtime="20201115 23:00:37.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.045" level="INFO">VALUE: [6.30560000000023e-05, 6.331999999999866e-05, 6.266699999999889e-05, 6.352700000000072e-05, 6.327799999999995e-05, 6.351300000000115e-05, 6.334700000000179e-05, 6.316599999999992e-05, 6.317999999999949e-05, 6.340300000000007e-05, 6.316699999999939e-05, 6.316699999999939e-05, 6.298600000000099e-05, 6.266699999999889e-05, 6.300000000000056e-05, 6.320900000000157e-05, 6.316699999999939e-05, 6.268100000000193e-05, 6.351400000000063e-05, 6.322200000000167e-05, 6.298599999999752e-05, 6.299999999999709e-05, 6.300000000000056e-05, 6.315299999999982e-05, 6.284700000000129e-05, 6.349999999999759e-05, 6.3195000000002e-05, 6.283300000000172e-05, 6.26950000000015e-05, 6.282000000000162e-05, 6.318099999999896e-05, 6.344499999999878e-05, 6.334800000000126e-05, 6.266699999999889e-05, 6.312500000000068e-05, 6.284699999999782e-05, 6.348600000000149e-05, 6.329100000000004e-05, 6.286100000000086e-05, 6.316599999999992e-05, 6.281900000000215e-05, 6.318099999999896e-05, 6.283299999999825e-05, 6.268100000000193e-05, 6.266699999999889e-05, 6.334800000000126e-05, 6.355499999999986e-05, 6.300000000000056e-05, 6.333399999999823e-05, 6.266699999999889e-05]</msg>
<status status="PASS" starttime="20201115 23:00:37.043" endtime="20201115 23:00:37.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.039" endtime="20201115 23:00:37.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.048" endtime="20201115 23:00:37.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.051" endtime="20201115 23:00:37.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.050" endtime="20201115 23:00:37.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.046" endtime="20201115 23:00:37.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.680" endtime="20201115 23:00:37.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.678" endtime="20201115 23:00:37.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.677" endtime="20201115 23:00:37.072"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.075" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.083" endtime="20201115 23:00:37.101"></status>
</kw>
<msg timestamp="20201115 23:00:37.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.082" endtime="20201115 23:00:37.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.103" endtime="20201115 23:00:37.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.105" endtime="20201115 23:00:37.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.079" endtime="20201115 23:00:37.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.077" endtime="20201115 23:00:37.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.114" endtime="20201115 23:00:37.402"></status>
</kw>
<msg timestamp="20201115 23:00:37.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025105764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.113" endtime="20201115 23:00:37.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025105764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.406" endtime="20201115 23:00:37.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.415" endtime="20201115 23:00:37.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.110" endtime="20201115 23:00:37.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.109" endtime="20201115 23:00:37.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.421" level="INFO">${RESULT} = [{'time': 0.025105764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.4583e-05, 'source_diff': 6.4583e-05}, {'time': 0.025173722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.365300000000032e-...</msg>
<status status="PASS" starttime="20201115 23:00:37.418" endtime="20201115 23:00:37.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.435" level="INFO">${ACCURACY} = {'diff': [6.4583e-05, 6.365300000000032e-05, 6.384699999999882e-05, 6.413900000000125e-05, 6.362500000000118e-05, 6.401399999999766e-05, 6.384699999999882e-05, 6.418099999999996e-05, 6.434800000000226...</msg>
<status status="PASS" starttime="20201115 23:00:37.422" endtime="20201115 23:00:37.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.439" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.438" endtime="20201115 23:00:37.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.442" level="INFO">VALUE: [6.4583e-05, 6.365300000000032e-05, 6.384699999999882e-05, 6.413900000000125e-05, 6.362500000000118e-05, 6.401399999999766e-05, 6.384699999999882e-05, 6.418099999999996e-05, 6.434800000000226e-05, 6.366699999999989e-05, 6.368099999999946e-05, 6.400000000000156e-05, 6.45699999999999e-05, 6.367999999999999e-05, 6.445799999999988e-05, 6.393099999999971e-05, 6.447199999999945e-05, 6.372300000000164e-05, 6.44440000000003e-05, 6.401399999999766e-05, 6.422300000000214e-05, 6.433299999999975e-05, 6.418099999999996e-05, 6.368099999999946e-05, 6.390300000000057e-05, 6.416700000000039e-05, 6.416700000000039e-05, 6.363800000000128e-05, 6.437499999999846e-05, 6.383300000000272e-05, 6.369399999999956e-05, 6.400000000000156e-05, 6.434699999999932e-05, 6.45280000000012e-05, 6.416700000000039e-05, 6.416699999999692e-05, 6.38340000000022e-05, 6.384800000000176e-05, 6.400000000000156e-05, 6.433399999999923e-05, 6.366699999999989e-05, 6.433300000000322e-05, 6.431900000000018e-05, 6.386100000000186e-05, 6.413900000000125e-05, 6.451399999999816e-05, 6.369399999999956e-05, 6.401400000000113e-05, 6.45699999999999e-05, 6.365300000000032e-05]</msg>
<status status="PASS" starttime="20201115 23:00:37.440" endtime="20201115 23:00:37.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.436" endtime="20201115 23:00:37.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.445" endtime="20201115 23:00:37.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.448" endtime="20201115 23:00:37.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.447" endtime="20201115 23:00:37.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.443" endtime="20201115 23:00:37.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.075" endtime="20201115 23:00:37.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.074" endtime="20201115 23:00:37.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.073" endtime="20201115 23:00:37.470"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.472" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.480" endtime="20201115 23:00:37.497"></status>
</kw>
<msg timestamp="20201115 23:00:37.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.479" endtime="20201115 23:00:37.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.499" endtime="20201115 23:00:37.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.501" endtime="20201115 23:00:37.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.476" endtime="20201115 23:00:37.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.474" endtime="20201115 23:00:37.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.510" endtime="20201115 23:00:37.796"></status>
</kw>
<msg timestamp="20201115 23:00:37.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024807611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024872333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.509" endtime="20201115 23:00:37.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024807611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024872333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.801" endtime="20201115 23:00:37.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.809" endtime="20201115 23:00:37.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.506" endtime="20201115 23:00:37.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.504" endtime="20201115 23:00:37.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.816" level="INFO">${RESULT} = [{'time': 0.024872333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.47219999999997e-05, 'source_diff': 6.47219999999997e-05}, {'time': 0.024944347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:37.812" endtime="20201115 23:00:37.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.829" level="INFO">${ACCURACY} = {'diff': [6.47219999999997e-05, 6.534700000000032e-05, 6.487500000000243e-05, 6.516699999999792e-05, 6.483300000000025e-05, 6.533300000000075e-05, 6.542999999999827e-05, 6.556899999999796e-05, 6.55549...</msg>
<status status="PASS" starttime="20201115 23:00:37.817" endtime="20201115 23:00:37.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.833" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.832" endtime="20201115 23:00:37.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.836" level="INFO">VALUE: [6.47219999999997e-05, 6.534700000000032e-05, 6.487500000000243e-05, 6.516699999999792e-05, 6.483300000000025e-05, 6.533300000000075e-05, 6.542999999999827e-05, 6.556899999999796e-05, 6.555499999999839e-05, 6.499999999999909e-05, 6.498699999999899e-05, 6.552699999999925e-05, 6.551299999999968e-05, 6.486099999999939e-05, 6.484699999999982e-05, 6.483300000000025e-05, 6.484699999999982e-05, 6.484699999999982e-05, 6.484699999999982e-05, 6.554200000000177e-05, 6.483300000000025e-05, 6.479200000000102e-05, 6.516700000000139e-05, 6.484699999999982e-05, 6.501399999999866e-05, 6.465300000000132e-05, 6.552699999999925e-05, 6.533300000000075e-05, 6.483300000000025e-05, 6.534700000000032e-05, 6.549999999999959e-05, 6.465300000000132e-05, 6.536099999999989e-05, 6.516700000000139e-05, 6.552799999999873e-05, 6.551399999999916e-05, 6.501400000000213e-05, 6.515299999999835e-05, 6.499999999999909e-05, 6.483399999999973e-05, 6.518099999999749e-05, 6.533300000000075e-05, 6.502699999999875e-05, 6.5276999999999e-05, 6.486099999999939e-05, 6.484699999999982e-05, 6.501399999999866e-05, 6.515299999999835e-05, 6.501400000000213e-05, 6.549999999999959e-05]</msg>
<status status="PASS" starttime="20201115 23:00:37.835" endtime="20201115 23:00:37.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.830" endtime="20201115 23:00:37.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.840" endtime="20201115 23:00:37.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.843" endtime="20201115 23:00:37.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.842" endtime="20201115 23:00:37.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.838" endtime="20201115 23:00:37.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.473" endtime="20201115 23:00:37.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.471" endtime="20201115 23:00:37.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.470" endtime="20201115 23:00:37.864"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.866" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.875" endtime="20201115 23:00:37.893"></status>
</kw>
<msg timestamp="20201115 23:00:37.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.873" endtime="20201115 23:00:37.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.894" endtime="20201115 23:00:37.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.897" endtime="20201115 23:00:37.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.871" endtime="20201115 23:00:37.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.868" endtime="20201115 23:00:37.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.906" endtime="20201115 23:00:38.191"></status>
</kw>
<msg timestamp="20201115 23:00:38.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024534417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024600153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.904" endtime="20201115 23:00:38.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024534417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024600153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.195" endtime="20201115 23:00:38.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.203" endtime="20201115 23:00:38.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.902" endtime="20201115 23:00:38.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.900" endtime="20201115 23:00:38.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.210" level="INFO">${RESULT} = [{'time': 0.024600153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.573600000000027e-05, 'source_diff': 6.573600000000027e-05}, {'time': 0.024672153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:38.207" endtime="20201115 23:00:38.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.225" level="INFO">${ACCURACY} = {'diff': [6.573600000000027e-05, 6.616699999999892e-05, 6.650000000000059e-05, 6.619400000000206e-05, 6.565299999999885e-05, 6.632000000000166e-05, 6.617999999999902e-05, 6.620800000000163e-05, 6.6013...</msg>
<status status="PASS" starttime="20201115 23:00:38.211" endtime="20201115 23:00:38.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.230" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.228" endtime="20201115 23:00:38.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.232" level="INFO">VALUE: [6.573600000000027e-05, 6.616699999999892e-05, 6.650000000000059e-05, 6.619400000000206e-05, 6.565299999999885e-05, 6.632000000000166e-05, 6.617999999999902e-05, 6.620800000000163e-05, 6.601399999999966e-05, 6.600000000000009e-05, 6.633300000000175e-05, 6.566699999999842e-05, 6.568099999999799e-05, 6.583300000000125e-05, 6.634700000000132e-05, 6.579199999999855e-05, 6.600000000000009e-05, 6.636200000000037e-05, 6.582000000000116e-05, 6.63480000000008e-05, 6.619399999999859e-05, 6.649999999999712e-05, 6.613899999999978e-05, 6.601400000000313e-05, 6.650000000000059e-05, 6.581899999999821e-05, 6.565300000000232e-05, 6.584700000000082e-05, 6.601399999999966e-05, 6.649999999999712e-05, 6.63480000000008e-05, 6.615299999999935e-05, 6.602699999999975e-05, 6.587499999999996e-05, 6.634700000000132e-05, 6.636100000000089e-05, 6.586100000000039e-05, 6.568000000000199e-05, 6.566599999999895e-05, 6.616699999999892e-05, 6.583300000000125e-05, 6.636100000000089e-05, 6.633299999999828e-05, 6.586100000000039e-05, 6.633400000000123e-05, 6.633400000000123e-05, 6.566699999999842e-05, 6.586100000000039e-05, 6.616699999999892e-05, 6.601300000000018e-05]</msg>
<status status="PASS" starttime="20201115 23:00:38.231" endtime="20201115 23:00:38.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.226" endtime="20201115 23:00:38.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.236" endtime="20201115 23:00:38.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.239" endtime="20201115 23:00:38.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.238" endtime="20201115 23:00:38.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.234" endtime="20201115 23:00:38.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.867" endtime="20201115 23:00:38.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.865" endtime="20201115 23:00:38.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.864" endtime="20201115 23:00:38.260"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.263" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.271" endtime="20201115 23:00:38.289"></status>
</kw>
<msg timestamp="20201115 23:00:38.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.269" endtime="20201115 23:00:38.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.290" endtime="20201115 23:00:38.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.293" endtime="20201115 23:00:38.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.267" endtime="20201115 23:00:38.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.264" endtime="20201115 23:00:38.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.302" endtime="20201115 23:00:38.587"></status>
</kw>
<msg timestamp="20201115 23:00:38.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024454792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024521847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.300" endtime="20201115 23:00:38.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024454792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024521847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.591" endtime="20201115 23:00:38.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.600" endtime="20201115 23:00:38.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.297" endtime="20201115 23:00:38.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.296" endtime="20201115 23:00:38.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.607" level="INFO">${RESULT} = [{'time': 0.024521847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.705499999999989e-05, 'source_diff': 6.705499999999989e-05}, {'time': 0.024602861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:38.604" endtime="20201115 23:00:38.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.622" level="INFO">${ACCURACY} = {'diff': [6.705499999999989e-05, 6.733299999999928e-05, 6.694399999999934e-05, 6.665299999999985e-05, 6.716699999999992e-05, 6.736100000000189e-05, 6.751400000000116e-05, 6.679199999999955e-05, 6.7348...</msg>
<status status="PASS" starttime="20201115 23:00:38.609" endtime="20201115 23:00:38.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.626" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.625" endtime="20201115 23:00:38.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.629" level="INFO">VALUE: [6.705499999999989e-05, 6.733299999999928e-05, 6.694399999999934e-05, 6.665299999999985e-05, 6.716699999999992e-05, 6.736100000000189e-05, 6.751400000000116e-05, 6.679199999999955e-05, 6.73480000000018e-05, 6.718000000000002e-05, 6.666599999999995e-05, 6.683299999999878e-05, 6.718000000000002e-05, 6.736099999999842e-05, 6.733300000000275e-05, 6.750000000000159e-05, 6.684700000000182e-05, 6.749999999999812e-05, 6.665299999999985e-05, 6.758299999999953e-05, 6.702800000000023e-05, 6.734799999999833e-05, 6.715299999999688e-05, 6.686100000000139e-05, 6.684699999999835e-05, 6.733299999999928e-05, 6.748599999999855e-05, 6.701399999999719e-05, 6.701400000000066e-05, 6.668100000000246e-05, 6.666699999999942e-05, 6.750000000000159e-05, 6.695799999999891e-05, 6.701400000000066e-05, 6.683399999999826e-05, 6.720799999999916e-05, 6.672199999999823e-05, 6.683299999999878e-05, 6.669399999999909e-05, 6.665200000000038e-05, 6.733299999999928e-05, 6.700000000000109e-05, 6.698599999999805e-05, 6.734699999999885e-05, 6.751399999999769e-05, 6.734700000000232e-05, 6.716699999999992e-05, 6.751400000000116e-05, 6.701400000000066e-05, 6.701399999999719e-05]</msg>
<status status="PASS" starttime="20201115 23:00:38.627" endtime="20201115 23:00:38.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.623" endtime="20201115 23:00:38.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.632" endtime="20201115 23:00:38.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.635" endtime="20201115 23:00:38.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.634" endtime="20201115 23:00:38.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.630" endtime="20201115 23:00:38.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.263" endtime="20201115 23:00:38.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.261" endtime="20201115 23:00:38.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.261" endtime="20201115 23:00:38.656"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.659" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.667" endtime="20201115 23:00:38.684"></status>
</kw>
<msg timestamp="20201115 23:00:38.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.665" endtime="20201115 23:00:38.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.686" endtime="20201115 23:00:38.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.688" endtime="20201115 23:00:38.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.663" endtime="20201115 23:00:38.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.661" endtime="20201115 23:00:38.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.697" endtime="20201115 23:00:38.984"></status>
</kw>
<msg timestamp="20201115 23:00:38.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024486514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024554583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.696" endtime="20201115 23:00:38.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024486514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024554583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.988" endtime="20201115 23:00:38.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.997" endtime="20201115 23:00:38.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.693" endtime="20201115 23:00:38.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.691" endtime="20201115 23:00:38.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.003" level="INFO">${RESULT} = [{'time': 0.024554583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.806900000000046e-05, 'source_diff': 6.806900000000046e-05}, {'time': 0.024629569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:39.000" endtime="20201115 23:00:39.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.017" level="INFO">${ACCURACY} = {'diff': [6.806900000000046e-05, 6.800000000000209e-05, 6.815199999999841e-05, 6.852800000000173e-05, 6.834699999999985e-05, 6.783299999999978e-05, 6.833300000000028e-05, 6.800000000000209e-05, 6.8181...</msg>
<status status="PASS" starttime="20201115 23:00:39.004" endtime="20201115 23:00:39.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.021" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.020" endtime="20201115 23:00:39.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.024" level="INFO">VALUE: [6.806900000000046e-05, 6.800000000000209e-05, 6.815199999999841e-05, 6.852800000000173e-05, 6.834699999999985e-05, 6.783299999999978e-05, 6.833300000000028e-05, 6.800000000000209e-05, 6.818100000000049e-05, 6.763900000000128e-05, 6.801399999999819e-05, 6.818100000000049e-05, 6.848599999999955e-05, 6.779200000000055e-05, 6.783299999999978e-05, 6.762499999999824e-05, 6.850000000000259e-05, 6.815299999999788e-05, 6.779100000000107e-05, 6.787500000000196e-05, 6.818100000000049e-05, 6.815300000000135e-05, 6.784699999999935e-05, 6.833300000000028e-05, 6.816699999999745e-05, 6.848600000000302e-05, 6.833399999999976e-05, 6.815299999999788e-05, 6.820800000000016e-05, 6.816600000000145e-05, 6.808400000000298e-05, 6.801400000000166e-05, 6.765299999999738e-05, 6.854199999999783e-05, 6.836099999999942e-05, 6.847199999999998e-05, 6.784700000000282e-05, 6.797199999999948e-05, 6.816700000000092e-05, 6.768099999999999e-05, 6.849999999999912e-05, 6.819400000000059e-05, 6.851299999999921e-05, 6.765200000000138e-05, 6.765300000000085e-05, 6.852799999999826e-05, 6.833300000000028e-05, 6.851399999999869e-05, 6.769499999999956e-05, 6.787500000000196e-05]</msg>
<status status="PASS" starttime="20201115 23:00:39.023" endtime="20201115 23:00:39.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.018" endtime="20201115 23:00:39.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.027" endtime="20201115 23:00:39.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.031" endtime="20201115 23:00:39.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.029" endtime="20201115 23:00:39.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.025" endtime="20201115 23:00:39.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.659" endtime="20201115 23:00:39.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.657" endtime="20201115 23:00:39.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.657" endtime="20201115 23:00:39.052"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.054" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.062" endtime="20201115 23:00:39.080"></status>
</kw>
<msg timestamp="20201115 23:00:39.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.061" endtime="20201115 23:00:39.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.082" endtime="20201115 23:00:39.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.084" endtime="20201115 23:00:39.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.058" endtime="20201115 23:00:39.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.056" endtime="20201115 23:00:39.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.094" endtime="20201115 23:00:39.380"></status>
</kw>
<msg timestamp="20201115 23:00:39.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02449675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024565681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:39.092" endtime="20201115 23:00:39.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02449675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024565681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:39.384" endtime="20201115 23:00:39.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.393" endtime="20201115 23:00:39.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.089" endtime="20201115 23:00:39.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.087" endtime="20201115 23:00:39.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.399" level="INFO">${RESULT} = [{'time': 0.024565681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.893099999999777e-05, 'source_diff': 6.893099999999777e-05}, {'time': 0.024638667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:39.396" endtime="20201115 23:00:39.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.413" level="INFO">${ACCURACY} = {'diff': [6.893099999999777e-05, 6.866699999999795e-05, 6.918099999999802e-05, 6.881900000000121e-05, 6.868000000000152e-05, 6.868000000000152e-05, 6.917999999999855e-05, 6.869400000000109e-05, 6.8860...</msg>
<status status="PASS" starttime="20201115 23:00:39.400" endtime="20201115 23:00:39.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.417" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.416" endtime="20201115 23:00:39.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.419" level="INFO">VALUE: [6.893099999999777e-05, 6.866699999999795e-05, 6.918099999999802e-05, 6.881900000000121e-05, 6.868000000000152e-05, 6.868000000000152e-05, 6.917999999999855e-05, 6.869400000000109e-05, 6.886099999999992e-05, 6.918100000000149e-05, 6.897200000000048e-05, 6.948599999999708e-05, 6.866700000000142e-05, 6.948600000000055e-05, 6.943100000000174e-05, 6.950000000000012e-05, 6.940299999999913e-05, 6.883400000000026e-05, 6.874999999999937e-05, 6.917999999999855e-05, 6.883300000000078e-05, 6.884700000000035e-05, 6.901399999999919e-05, 6.869500000000056e-05, 6.934699999999738e-05, 6.950000000000012e-05, 6.912499999999974e-05, 6.868100000000099e-05, 6.863899999999881e-05, 6.933399999999729e-05, 6.934800000000033e-05, 6.88619999999994e-05, 6.862499999999924e-05, 6.866599999999848e-05, 6.916599999999898e-05, 6.933299999999781e-05, 6.902800000000223e-05, 6.900000000000309e-05, 6.916699999999845e-05, 6.933300000000128e-05, 6.866700000000142e-05, 6.934700000000085e-05, 6.886200000000287e-05, 6.900000000000309e-05, 6.883399999999679e-05, 6.899999999999962e-05, 6.92909999999991e-05, 6.869400000000109e-05, 6.883300000000078e-05, 6.919400000000159e-05]</msg>
<status status="PASS" starttime="20201115 23:00:39.418" endtime="20201115 23:00:39.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.413" endtime="20201115 23:00:39.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.423" endtime="20201115 23:00:39.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.426" endtime="20201115 23:00:39.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.425" endtime="20201115 23:00:39.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.421" endtime="20201115 23:00:39.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.055" endtime="20201115 23:00:39.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.053" endtime="20201115 23:00:39.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.052" endtime="20201115 23:00:39.447"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.450" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.458" endtime="20201115 23:00:39.475"></status>
</kw>
<msg timestamp="20201115 23:00:39.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.456" endtime="20201115 23:00:39.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.477" endtime="20201115 23:00:39.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.479" endtime="20201115 23:00:39.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.454" endtime="20201115 23:00:39.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.452" endtime="20201115 23:00:39.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.489" endtime="20201115 23:00:39.776"></status>
</kw>
<msg timestamp="20201115 23:00:39.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024309194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024378931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.487" endtime="20201115 23:00:39.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024309194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024378931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.780" endtime="20201115 23:00:39.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.788" endtime="20201115 23:00:39.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.484" endtime="20201115 23:00:39.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.483" endtime="20201115 23:00:39.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.795" level="INFO">${RESULT} = [{'time': 0.024378931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.973700000000027e-05, 'source_diff': 6.973700000000027e-05}, {'time': 0.024461931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:39.791" endtime="20201115 23:00:39.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.810" level="INFO">${ACCURACY} = {'diff': [6.973700000000027e-05, 6.965299999999938e-05, 7.000000000000062e-05, 6.986099999999745e-05, 7.017999999999955e-05, 7.052800000000026e-05, 7.054199999999983e-05, 6.965299999999938e-05, 6.9680...</msg>
<status status="PASS" starttime="20201115 23:00:39.796" endtime="20201115 23:00:39.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.814" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.813" endtime="20201115 23:00:39.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.816" level="INFO">VALUE: [6.973700000000027e-05, 6.965299999999938e-05, 7.000000000000062e-05, 6.986099999999745e-05, 7.017999999999955e-05, 7.052800000000026e-05, 7.054199999999983e-05, 6.965299999999938e-05, 6.968099999999852e-05, 7.006899999999899e-05, 7.016699999999945e-05, 6.968099999999852e-05, 7.019399999999912e-05, 6.998600000000105e-05, 7.019400000000259e-05, 6.984699999999788e-05, 7.045799999999894e-05, 7.017999999999955e-05, 6.998600000000105e-05, 6.983299999999831e-05, 7.020900000000163e-05, 6.980499999999917e-05, 7.018099999999902e-05, 6.968099999999852e-05, 6.965299999999938e-05, 7.040200000000066e-05, 7.034800000000133e-05, 7.016699999999945e-05, 6.963899999999981e-05, 7.017999999999955e-05, 6.986100000000092e-05, 6.983300000000178e-05, 7.017999999999955e-05, 6.984699999999788e-05, 7.030599999999915e-05, 6.969500000000156e-05, 7.050000000000112e-05, 6.984700000000135e-05, 7.034699999999838e-05, 7.016699999999945e-05, 6.968099999999852e-05, 7.022200000000173e-05, 7.033299999999881e-05, 7.018000000000302e-05, 7.036100000000142e-05, 6.97360000000008e-05, 7.034700000000185e-05, 6.984700000000135e-05, 7.013900000000031e-05, 6.983299999999831e-05]</msg>
<status status="PASS" starttime="20201115 23:00:39.815" endtime="20201115 23:00:39.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.810" endtime="20201115 23:00:39.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.820" endtime="20201115 23:00:39.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.823" endtime="20201115 23:00:39.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.821" endtime="20201115 23:00:39.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.818" endtime="20201115 23:00:39.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.450" endtime="20201115 23:00:39.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.448" endtime="20201115 23:00:39.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.448" endtime="20201115 23:00:39.844"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.846" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.855" endtime="20201115 23:00:39.873"></status>
</kw>
<msg timestamp="20201115 23:00:39.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.854" endtime="20201115 23:00:39.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.874" endtime="20201115 23:00:39.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.877" endtime="20201115 23:00:39.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.851" endtime="20201115 23:00:39.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.848" endtime="20201115 23:00:39.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.886" endtime="20201115 23:00:40.172"></status>
</kw>
<msg timestamp="20201115 23:00:40.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024863639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024935194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.884" endtime="20201115 23:00:40.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024863639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024935194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.176" endtime="20201115 23:00:40.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.184" endtime="20201115 23:00:40.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.882" endtime="20201115 23:00:40.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.880" endtime="20201115 23:00:40.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.191" level="INFO">${RESULT} = [{'time': 0.024935194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.155500000000092e-05, 'source_diff': 7.155500000000092e-05}, {'time': 0.025020208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:40.187" endtime="20201115 23:00:40.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.204" level="INFO">${ACCURACY} = {'diff': [7.155500000000092e-05, 7.117999999999708e-05, 7.134699999999938e-05, 7.152800000000126e-05, 7.148599999999908e-05, 7.133299999999981e-05, 7.123700000000177e-05, 7.115299999999741e-05, 7.0666...</msg>
<status status="PASS" starttime="20201115 23:00:40.192" endtime="20201115 23:00:40.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.209" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.208" endtime="20201115 23:00:40.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.211" level="INFO">VALUE: [7.155500000000092e-05, 7.117999999999708e-05, 7.134699999999938e-05, 7.152800000000126e-05, 7.148599999999908e-05, 7.133299999999981e-05, 7.123700000000177e-05, 7.115299999999741e-05, 7.066699999999995e-05, 7.151399999999822e-05, 7.080599999999965e-05, 7.116700000000045e-05, 7.098700000000152e-05, 7.083399999999879e-05, 7.069399999999962e-05, 7.131900000000024e-05, 7.084699999999888e-05, 7.149999999999865e-05, 7.084699999999888e-05, 7.134699999999938e-05, 7.084700000000235e-05, 7.133299999999981e-05, 7.102800000000076e-05, 7.134700000000285e-05, 7.133400000000276e-05, 7.066699999999995e-05, 7.118100000000002e-05, 7.116700000000045e-05, 7.133299999999981e-05, 7.122200000000273e-05, 7.066600000000048e-05, 7.133299999999981e-05, 7.101400000000119e-05, 7.116700000000045e-05, 7.118100000000002e-05, 7.100000000000162e-05, 7.083299999999931e-05, 7.083400000000226e-05, 7.083399999999879e-05, 7.133399999999929e-05, 7.133399999999929e-05, 7.068000000000005e-05, 7.115200000000141e-05, 7.116599999999751e-05, 7.134700000000285e-05, 7.120900000000263e-05, 7.134699999999938e-05, 7.088799999999812e-05, 7.065300000000038e-05, 7.099999999999815e-05]</msg>
<status status="PASS" starttime="20201115 23:00:40.210" endtime="20201115 23:00:40.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.205" endtime="20201115 23:00:40.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.214" endtime="20201115 23:00:40.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.218" endtime="20201115 23:00:40.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.216" endtime="20201115 23:00:40.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.213" endtime="20201115 23:00:40.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.847" endtime="20201115 23:00:40.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.845" endtime="20201115 23:00:40.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.844" endtime="20201115 23:00:40.239"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.242" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.250" endtime="20201115 23:00:40.267"></status>
</kw>
<msg timestamp="20201115 23:00:40.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.248" endtime="20201115 23:00:40.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.269" endtime="20201115 23:00:40.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.271" endtime="20201115 23:00:40.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.246" endtime="20201115 23:00:40.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.244" endtime="20201115 23:00:40.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.280" endtime="20201115 23:00:40.567"></status>
</kw>
<msg timestamp="20201115 23:00:40.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024896681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02496925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:40.279" endtime="20201115 23:00:40.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024896681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02496925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:40.571" endtime="20201115 23:00:40.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.580" endtime="20201115 23:00:40.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.276" endtime="20201115 23:00:40.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.274" endtime="20201115 23:00:40.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.586" level="INFO">${RESULT} = [{'time': 0.02496925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.256899999999802e-05, 'source_diff': 7.256899999999802e-05}, {'time': 0.02505525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:40.583" endtime="20201115 23:00:40.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.600" level="INFO">${ACCURACY} = {'diff': [7.256899999999802e-05, 7.231900000000124e-05, 7.216700000000145e-05, 7.183399999999979e-05, 7.199999999999915e-05, 7.216699999999798e-05, 7.251399999999922e-05, 7.183399999999979e-05, 7.1694...</msg>
<status status="PASS" starttime="20201115 23:00:40.587" endtime="20201115 23:00:40.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.604" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.603" endtime="20201115 23:00:40.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.607" level="INFO">VALUE: [7.256899999999802e-05, 7.231900000000124e-05, 7.216700000000145e-05, 7.183399999999979e-05, 7.199999999999915e-05, 7.216699999999798e-05, 7.251399999999922e-05, 7.183399999999979e-05, 7.169400000000062e-05, 7.181900000000074e-05, 7.166600000000148e-05, 7.233299999999734e-05, 7.249999999999965e-05, 7.166699999999748e-05, 7.202800000000176e-05, 7.186100000000292e-05, 7.218100000000102e-05, 7.251399999999922e-05, 7.234799999999986e-05, 7.198599999999958e-05, 7.199999999999915e-05, 7.162499999999877e-05, 7.168000000000105e-05, 7.193100000000077e-05, 7.186099999999945e-05, 7.218000000000155e-05, 7.217999999999808e-05, 7.219500000000059e-05, 7.191600000000173e-05, 7.201400000000219e-05, 7.201399999999872e-05, 7.233400000000029e-05, 7.166699999999748e-05, 7.183399999999979e-05, 7.165299999999791e-05, 7.166600000000148e-05, 7.170800000000019e-05, 7.201399999999872e-05, 7.165300000000138e-05, 7.167999999999758e-05, 7.204200000000133e-05, 7.233300000000081e-05, 7.168100000000052e-05, 7.251399999999922e-05, 7.182000000000022e-05, 7.236199999999943e-05, 7.186199999999893e-05, 7.233400000000029e-05, 7.168000000000105e-05, 7.251399999999922e-05]</msg>
<status status="PASS" starttime="20201115 23:00:40.605" endtime="20201115 23:00:40.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.601" endtime="20201115 23:00:40.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.610" endtime="20201115 23:00:40.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.614" endtime="20201115 23:00:40.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.612" endtime="20201115 23:00:40.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.608" endtime="20201115 23:00:40.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.242" endtime="20201115 23:00:40.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.240" endtime="20201115 23:00:40.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.239" endtime="20201115 23:00:40.635"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.638" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.647" endtime="20201115 23:00:40.665"></status>
</kw>
<msg timestamp="20201115 23:00:40.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.645" endtime="20201115 23:00:40.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.666" endtime="20201115 23:00:40.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.668" endtime="20201115 23:00:40.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.642" endtime="20201115 23:00:40.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.640" endtime="20201115 23:00:40.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.677" endtime="20201115 23:00:40.964"></status>
</kw>
<msg timestamp="20201115 23:00:40.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025951819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026024556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.676" endtime="20201115 23:00:40.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025951819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026024556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.968" endtime="20201115 23:00:40.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.977" endtime="20201115 23:00:40.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.673" endtime="20201115 23:00:40.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.672" endtime="20201115 23:00:40.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.984" level="INFO">${RESULT} = [{'time': 0.026024556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.27369999999998e-05, 'source_diff': 7.27369999999998e-05}, {'time': 0.026104569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:40.980" endtime="20201115 23:00:40.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.997" level="INFO">${ACCURACY} = {'diff': [7.27369999999998e-05, 7.300000000000015e-05, 7.352799999999979e-05, 7.336100000000095e-05, 7.350000000000065e-05, 7.319400000000212e-05, 7.300000000000015e-05, 7.266699999999848e-05, 7.30139...</msg>
<status status="PASS" starttime="20201115 23:00:40.985" endtime="20201115 23:00:40.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.002" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.001" endtime="20201115 23:00:41.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.004" level="INFO">VALUE: [7.27369999999998e-05, 7.300000000000015e-05, 7.352799999999979e-05, 7.336100000000095e-05, 7.350000000000065e-05, 7.319400000000212e-05, 7.300000000000015e-05, 7.266699999999848e-05, 7.301399999999972e-05, 7.284700000000088e-05, 7.315300000000288e-05, 7.280600000000165e-05, 7.268100000000152e-05, 7.300000000000015e-05, 7.351299999999727e-05, 7.351400000000022e-05, 7.266600000000248e-05, 7.345800000000194e-05, 7.351400000000022e-05, 7.345799999999847e-05, 7.29309999999983e-05, 7.352799999999979e-05, 7.298600000000058e-05, 7.333400000000129e-05, 7.269500000000109e-05, 7.316699999999898e-05, 7.333300000000181e-05, 7.352700000000031e-05, 7.266600000000248e-05, 7.317999999999908e-05, 7.300000000000015e-05, 7.300000000000015e-05, 7.315299999999941e-05, 7.334699999999791e-05, 7.334700000000138e-05, 7.299999999999668e-05, 7.283399999999732e-05, 7.283400000000079e-05, 7.334799999999739e-05, 7.351400000000022e-05, 7.350000000000065e-05, 7.265200000000291e-05, 7.334700000000138e-05, 7.268000000000205e-05, 7.266600000000248e-05, 7.300000000000015e-05, 7.351400000000022e-05, 7.315299999999941e-05, 7.334700000000138e-05, 7.281999999999775e-05]</msg>
<status status="PASS" starttime="20201115 23:00:41.003" endtime="20201115 23:00:41.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.998" endtime="20201115 23:00:41.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.008" endtime="20201115 23:00:41.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.011" endtime="20201115 23:00:41.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.010" endtime="20201115 23:00:41.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.006" endtime="20201115 23:00:41.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.638" endtime="20201115 23:00:41.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.636" endtime="20201115 23:00:41.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.635" endtime="20201115 23:00:41.032"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.035" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.043" endtime="20201115 23:00:41.061"></status>
</kw>
<msg timestamp="20201115 23:00:41.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.041" endtime="20201115 23:00:41.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.062" endtime="20201115 23:00:41.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.065" endtime="20201115 23:00:41.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.039" endtime="20201115 23:00:41.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.036" endtime="20201115 23:00:41.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.074" endtime="20201115 23:00:41.360"></status>
</kw>
<msg timestamp="20201115 23:00:41.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024355167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.072" endtime="20201115 23:00:41.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024355167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.364" endtime="20201115 23:00:41.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.373" endtime="20201115 23:00:41.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.070" endtime="20201115 23:00:41.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.068" endtime="20201115 23:00:41.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.379" level="INFO">${RESULT} = [{'time': 0.024355167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.405599999999943e-05, 'source_diff': 7.405599999999943e-05}, {'time': 0.024433181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:41.376" endtime="20201115 23:00:41.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.395" level="INFO">${ACCURACY} = {'diff': [7.405599999999943e-05, 7.368100000000252e-05, 7.434699999999891e-05, 7.437499999999805e-05, 7.384699999999841e-05, 7.37500000000009e-05, 7.416600000000051e-05, 7.367999999999958e-05, 7.40139...</msg>
<status status="PASS" starttime="20201115 23:00:41.381" endtime="20201115 23:00:41.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.399" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.398" endtime="20201115 23:00:41.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.402" level="INFO">VALUE: [7.405599999999943e-05, 7.368100000000252e-05, 7.434699999999891e-05, 7.437499999999805e-05, 7.384699999999841e-05, 7.37500000000009e-05, 7.416600000000051e-05, 7.367999999999958e-05, 7.401399999999725e-05, 7.451400000000122e-05, 7.420900000000216e-05, 7.450000000000165e-05, 7.416699999999998e-05, 7.452800000000079e-05, 7.366699999999948e-05, 7.365299999999991e-05, 7.386100000000145e-05, 7.401399999999725e-05, 7.366600000000001e-05, 7.401400000000072e-05, 7.434700000000238e-05, 7.384700000000188e-05, 7.431899999999977e-05, 7.386100000000145e-05, 7.366699999999948e-05, 7.456900000000002e-05, 7.369499999999862e-05, 7.387500000000102e-05, 7.366699999999948e-05, 7.394400000000287e-05, 7.440300000000066e-05, 7.454200000000036e-05, 7.451400000000122e-05, 7.454199999999689e-05, 7.433299999999934e-05, 7.451400000000122e-05, 7.437500000000152e-05, 7.434699999999891e-05, 7.398600000000158e-05, 7.434800000000186e-05, 7.368099999999905e-05, 7.416699999999998e-05, 7.366600000000001e-05, 7.451400000000122e-05, 7.448599999999861e-05, 7.434699999999891e-05, 7.434699999999891e-05, 7.381900000000274e-05, 7.386099999999798e-05, 7.368099999999905e-05]</msg>
<status status="PASS" starttime="20201115 23:00:41.400" endtime="20201115 23:00:41.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.396" endtime="20201115 23:00:41.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.405" endtime="20201115 23:00:41.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.408" endtime="20201115 23:00:41.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.407" endtime="20201115 23:00:41.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.403" endtime="20201115 23:00:41.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.035" endtime="20201115 23:00:41.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.033" endtime="20201115 23:00:41.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.033" endtime="20201115 23:00:41.429"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.432" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.440" endtime="20201115 23:00:41.458"></status>
</kw>
<msg timestamp="20201115 23:00:41.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.438" endtime="20201115 23:00:41.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.459" endtime="20201115 23:00:41.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.462" endtime="20201115 23:00:41.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.436" endtime="20201115 23:00:41.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.434" endtime="20201115 23:00:41.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.471" endtime="20201115 23:00:41.756"></status>
</kw>
<msg timestamp="20201115 23:00:41.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024400972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024476222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.469" endtime="20201115 23:00:41.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024400972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024476222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.760" endtime="20201115 23:00:41.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.768" endtime="20201115 23:00:41.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.467" endtime="20201115 23:00:41.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.465" endtime="20201115 23:00:41.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.775" level="INFO">${RESULT} = [{'time': 0.024476222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.524999999999893e-05, 'source_diff': 7.524999999999893e-05}, {'time': 0.024559236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:41.772" endtime="20201115 23:00:41.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.789" level="INFO">${ACCURACY} = {'diff': [7.524999999999893e-05, 7.551400000000222e-05, 7.466600000000101e-05, 7.507e-05, 7.551399999999875e-05, 7.518100000000055e-05, 7.549999999999918e-05, 7.484699999999941e-05, 7.554099999999841e...</msg>
<status status="PASS" starttime="20201115 23:00:41.776" endtime="20201115 23:00:41.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.793" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.792" endtime="20201115 23:00:41.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.796" level="INFO">VALUE: [7.524999999999893e-05, 7.551400000000222e-05, 7.466600000000101e-05, 7.507e-05, 7.551399999999875e-05, 7.518100000000055e-05, 7.549999999999918e-05, 7.484699999999941e-05, 7.554099999999841e-05, 7.500000000000215e-05, 7.516699999999751e-05, 7.483299999999984e-05, 7.533300000000034e-05, 7.487500000000202e-05, 7.518000000000108e-05, 7.5457999999997e-05, 7.459700000000263e-05, 7.531900000000077e-05, 7.551399999999875e-05, 7.551400000000222e-05, 7.500000000000215e-05, 7.516700000000098e-05, 7.508399999999957e-05, 7.465300000000091e-05, 7.463800000000187e-05, 7.502800000000129e-05, 7.536099999999948e-05, 7.527800000000154e-05, 7.536099999999948e-05, 7.483299999999984e-05, 7.533300000000034e-05, 7.518100000000055e-05, 7.483399999999932e-05, 7.484799999999889e-05, 7.500000000000215e-05, 7.502699999999835e-05, 7.498700000000205e-05, 7.541599999999829e-05, 7.518000000000108e-05, 7.518000000000108e-05, 7.533300000000034e-05, 7.551400000000222e-05, 7.551400000000222e-05, 7.48189999999968e-05, 7.547199999999657e-05, 7.469500000000309e-05, 7.554099999999841e-05, 7.533399999999982e-05, 7.551400000000222e-05, 7.499999999999868e-05]</msg>
<status status="PASS" starttime="20201115 23:00:41.794" endtime="20201115 23:00:41.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.790" endtime="20201115 23:00:41.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.799" endtime="20201115 23:00:41.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.802" endtime="20201115 23:00:41.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.801" endtime="20201115 23:00:41.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.797" endtime="20201115 23:00:41.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.432" endtime="20201115 23:00:41.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.430" endtime="20201115 23:00:41.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.430" endtime="20201115 23:00:41.823"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.826" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.834" endtime="20201115 23:00:41.853"></status>
</kw>
<msg timestamp="20201115 23:00:41.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.832" endtime="20201115 23:00:41.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.854" endtime="20201115 23:00:41.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.857" endtime="20201115 23:00:41.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.830" endtime="20201115 23:00:41.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.828" endtime="20201115 23:00:41.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.866" endtime="20201115 23:00:42.152"></status>
</kw>
<msg timestamp="20201115 23:00:42.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024320917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024397014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.864" endtime="20201115 23:00:42.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024320917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024397014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.156" endtime="20201115 23:00:42.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.164" endtime="20201115 23:00:42.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.861" endtime="20201115 23:00:42.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.860" endtime="20201115 23:00:42.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.171" level="INFO">${RESULT} = [{'time': 0.024397014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.609700000000066e-05, 'source_diff': 7.609700000000066e-05}, {'time': 0.024486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:42.168" endtime="20201115 23:00:42.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.184" level="INFO">${ACCURACY} = {'diff': [7.609700000000066e-05, 7.634700000000091e-05, 7.636100000000048e-05, 7.633300000000134e-05, 7.582000000000075e-05, 7.651399999999975e-05, 7.654100000000288e-05, 7.651399999999975e-05, 7.5820...</msg>
<status status="PASS" starttime="20201115 23:00:42.172" endtime="20201115 23:00:42.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.189" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.188" endtime="20201115 23:00:42.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.191" level="INFO">VALUE: [7.609700000000066e-05, 7.634700000000091e-05, 7.636100000000048e-05, 7.633300000000134e-05, 7.582000000000075e-05, 7.651399999999975e-05, 7.654100000000288e-05, 7.651399999999975e-05, 7.582000000000075e-05, 7.618000000000208e-05, 7.631900000000177e-05, 7.568000000000158e-05, 7.584700000000041e-05, 7.636100000000048e-05, 7.583300000000084e-05, 7.650000000000018e-05, 7.651399999999975e-05, 7.602799999999882e-05, 7.616700000000198e-05, 7.590300000000216e-05, 7.634800000000039e-05, 7.588899999999912e-05, 7.567999999999811e-05, 7.651399999999975e-05, 7.574999999999943e-05, 7.650000000000018e-05, 7.604200000000186e-05, 7.651399999999975e-05, 7.601399999999925e-05, 7.650000000000018e-05, 7.568099999999758e-05, 7.641700000000223e-05, 7.648600000000061e-05, 7.59449999999974e-05, 7.569400000000115e-05, 7.631900000000177e-05, 7.583300000000084e-05, 7.633300000000134e-05, 7.565299999999844e-05, 7.586099999999998e-05, 7.601399999999925e-05, 7.650000000000018e-05, 7.602799999999882e-05, 7.651400000000322e-05, 7.561199999999921e-05, 7.563899999999887e-05, 7.584799999999989e-05, 7.567999999999811e-05, 7.566600000000201e-05, 7.651399999999975e-05]</msg>
<status status="PASS" starttime="20201115 23:00:42.190" endtime="20201115 23:00:42.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.185" endtime="20201115 23:00:42.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.194" endtime="20201115 23:00:42.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.198" endtime="20201115 23:00:42.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.196" endtime="20201115 23:00:42.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.193" endtime="20201115 23:00:42.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.826" endtime="20201115 23:00:42.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.825" endtime="20201115 23:00:42.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.824" endtime="20201115 23:00:42.219"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.221" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.230" endtime="20201115 23:00:42.248"></status>
</kw>
<msg timestamp="20201115 23:00:42.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.228" endtime="20201115 23:00:42.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.250" endtime="20201115 23:00:42.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.253" endtime="20201115 23:00:42.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.225" endtime="20201115 23:00:42.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.223" endtime="20201115 23:00:42.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.262" endtime="20201115 23:00:42.549"></status>
</kw>
<msg timestamp="20201115 23:00:42.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024846361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024923917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.260" endtime="20201115 23:00:42.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024846361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024923917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.553" endtime="20201115 23:00:42.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.561" endtime="20201115 23:00:42.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.258" endtime="20201115 23:00:42.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.256" endtime="20201115 23:00:42.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.568" level="INFO">${RESULT} = [{'time': 0.024923917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.755599999999946e-05, 'source_diff': 7.755599999999946e-05}, {'time': 0.025011917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:42.565" endtime="20201115 23:00:42.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.581" level="INFO">${ACCURACY} = {'diff': [7.755599999999946e-05, 7.683400000000132e-05, 7.734799999999792e-05, 7.74030000000002e-05, 7.666599999999954e-05, 7.733299999999887e-05, 7.666599999999954e-05, 7.667999999999911e-05, 7.72360...</msg>
<status status="PASS" starttime="20201115 23:00:42.569" endtime="20201115 23:00:42.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.586" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.585" endtime="20201115 23:00:42.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.588" level="INFO">VALUE: [7.755599999999946e-05, 7.683400000000132e-05, 7.734799999999792e-05, 7.74030000000002e-05, 7.666599999999954e-05, 7.733299999999887e-05, 7.666599999999954e-05, 7.667999999999911e-05, 7.723600000000136e-05, 7.683300000000184e-05, 7.701400000000025e-05, 7.684700000000141e-05, 7.733299999999887e-05, 7.713900000000037e-05, 7.736199999999749e-05, 7.695900000000144e-05, 7.666599999999954e-05, 7.733300000000234e-05, 7.737500000000105e-05, 7.750000000000118e-05, 7.666599999999954e-05, 7.717999999999961e-05, 7.751400000000075e-05, 7.683299999999837e-05, 7.665299999999944e-05, 7.718099999999908e-05, 7.702799999999982e-05, 7.701399999999678e-05, 7.748699999999761e-05, 7.700000000000068e-05, 7.751400000000075e-05, 7.734699999999844e-05, 7.751400000000075e-05, 7.684700000000141e-05, 7.751400000000075e-05, 7.66250000000003e-05, 7.668099999999858e-05, 7.684700000000141e-05, 7.700000000000068e-05, 7.734800000000139e-05, 7.717999999999961e-05, 7.683399999999785e-05, 7.683300000000184e-05, 7.687500000000055e-05, 7.751400000000075e-05, 7.700000000000068e-05, 7.668000000000258e-05, 7.673699999999686e-05, 7.666700000000248e-05, 7.701400000000025e-05]</msg>
<status status="PASS" starttime="20201115 23:00:42.587" endtime="20201115 23:00:42.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.582" endtime="20201115 23:00:42.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.591" endtime="20201115 23:00:42.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.595" endtime="20201115 23:00:42.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.593" endtime="20201115 23:00:42.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.590" endtime="20201115 23:00:42.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.222" endtime="20201115 23:00:42.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.220" endtime="20201115 23:00:42.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.219" endtime="20201115 23:00:42.616"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.618" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.627" endtime="20201115 23:00:42.646"></status>
</kw>
<msg timestamp="20201115 23:00:42.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.626" endtime="20201115 23:00:42.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.648" endtime="20201115 23:00:42.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.650" endtime="20201115 23:00:42.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.622" endtime="20201115 23:00:42.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.620" endtime="20201115 23:00:42.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.659" endtime="20201115 23:00:42.947"></status>
</kw>
<msg timestamp="20201115 23:00:42.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025006556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025084458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.658" endtime="20201115 23:00:42.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025006556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025084458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.951" endtime="20201115 23:00:42.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.959" endtime="20201115 23:00:42.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.655" endtime="20201115 23:00:42.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.653" endtime="20201115 23:00:42.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.966" level="INFO">${RESULT} = [{'time': 0.025084458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.790200000000122e-05, 'source_diff': 7.790200000000122e-05}, {'time': 0.025177472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:42.963" endtime="20201115 23:00:42.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.981" level="INFO">${ACCURACY} = {'diff': [7.790200000000122e-05, 7.851399999999828e-05, 7.783299999999937e-05, 7.802800000000082e-05, 7.82229999999988e-05, 7.784700000000241e-05, 7.802800000000082e-05, 7.819499999999965e-05, 7.76670...</msg>
<status status="PASS" starttime="20201115 23:00:42.967" endtime="20201115 23:00:42.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.985" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.984" endtime="20201115 23:00:42.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.988" level="INFO">VALUE: [7.790200000000122e-05, 7.851399999999828e-05, 7.783299999999937e-05, 7.802800000000082e-05, 7.82229999999988e-05, 7.784700000000241e-05, 7.802800000000082e-05, 7.819499999999965e-05, 7.766700000000001e-05, 7.849999999999871e-05, 7.780599999999971e-05, 7.831999999999978e-05, 7.850000000000218e-05, 7.818000000000061e-05, 7.788899999999765e-05, 7.766599999999707e-05, 7.836100000000248e-05, 7.834699999999944e-05, 7.849999999999871e-05, 7.801400000000125e-05, 7.833399999999935e-05, 7.815300000000094e-05, 7.79030000000007e-05, 7.834699999999944e-05, 7.766600000000054e-05, 7.834699999999944e-05, 7.768000000000011e-05, 7.820799999999975e-05, 7.786099999999851e-05, 7.818100000000008e-05, 7.837499999999858e-05, 7.834699999999944e-05, 7.783300000000284e-05, 7.841599999999782e-05, 7.763900000000087e-05, 7.787499999999808e-05, 7.800000000000168e-05, 7.768000000000011e-05, 7.834699999999944e-05, 7.783300000000284e-05, 7.784699999999894e-05, 7.783299999999937e-05, 7.816700000000051e-05, 7.786100000000198e-05, 7.855500000000099e-05, 7.763900000000087e-05, 7.783399999999885e-05, 7.843100000000033e-05, 7.784700000000241e-05, 7.816599999999757e-05]</msg>
<status status="PASS" starttime="20201115 23:00:42.986" endtime="20201115 23:00:42.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.982" endtime="20201115 23:00:42.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.991" endtime="20201115 23:00:42.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.994" endtime="20201115 23:00:43.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.993" endtime="20201115 23:00:43.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.989" endtime="20201115 23:00:43.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.619" endtime="20201115 23:00:43.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.617" endtime="20201115 23:00:43.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.616" endtime="20201115 23:00:43.016"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.018" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.026" endtime="20201115 23:00:43.044"></status>
</kw>
<msg timestamp="20201115 23:00:43.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.025" endtime="20201115 23:00:43.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.046" endtime="20201115 23:00:43.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.048" endtime="20201115 23:00:43.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.022" endtime="20201115 23:00:43.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.020" endtime="20201115 23:00:43.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.057" endtime="20201115 23:00:43.344"></status>
</kw>
<msg timestamp="20201115 23:00:43.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024871958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024951361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.056" endtime="20201115 23:00:43.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024871958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024951361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.348" endtime="20201115 23:00:43.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.357" endtime="20201115 23:00:43.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.053" endtime="20201115 23:00:43.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.051" endtime="20201115 23:00:43.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.363" level="INFO">${RESULT} = [{'time': 0.024951361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.940299999999872e-05, 'source_diff': 7.940299999999872e-05}, {'time': 0.025044347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:43.360" endtime="20201115 23:00:43.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.377" level="INFO">${ACCURACY} = {'diff': [7.940299999999872e-05, 7.866600000000154e-05, 7.865300000000144e-05, 7.952800000000232e-05, 7.949999999999971e-05, 7.898599999999964e-05, 7.933400000000035e-05, 7.936199999999949e-05, 7.9026...</msg>
<status status="PASS" starttime="20201115 23:00:43.364" endtime="20201115 23:00:43.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.381" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.380" endtime="20201115 23:00:43.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.384" level="INFO">VALUE: [7.940299999999872e-05, 7.866600000000154e-05, 7.865300000000144e-05, 7.952800000000232e-05, 7.949999999999971e-05, 7.898599999999964e-05, 7.933400000000035e-05, 7.936199999999949e-05, 7.902699999999888e-05, 7.866700000000101e-05, 7.866600000000154e-05, 7.951399999999928e-05, 7.907000000000053e-05, 7.933300000000088e-05, 7.900000000000268e-05, 7.901399999999878e-05, 7.951399999999928e-05, 7.938799999999968e-05, 7.902800000000182e-05, 7.868100000000058e-05, 7.915299999999847e-05, 7.8764000000002e-05, 7.886099999999951e-05, 7.951400000000275e-05, 7.923600000000336e-05, 7.868000000000111e-05, 7.901399999999878e-05, 7.869500000000015e-05, 7.899999999999921e-05, 7.948600000000014e-05, 7.884699999999994e-05, 7.884799999999942e-05, 7.934799999999992e-05, 7.949999999999971e-05, 7.936100000000001e-05, 7.884699999999994e-05, 7.898599999999964e-05, 7.901399999999878e-05, 7.886100000000298e-05, 7.905600000000096e-05, 7.923599999999989e-05, 7.918100000000108e-05, 7.952800000000232e-05, 7.899999999999921e-05, 7.918099999999761e-05, 7.936100000000001e-05, 7.91250000000028e-05, 7.911099999999976e-05, 7.917999999999814e-05, 7.868000000000111e-05]</msg>
<status status="PASS" starttime="20201115 23:00:43.382" endtime="20201115 23:00:43.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.377" endtime="20201115 23:00:43.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.387" endtime="20201115 23:00:43.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.391" endtime="20201115 23:00:43.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.389" endtime="20201115 23:00:43.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.386" endtime="20201115 23:00:43.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.019" endtime="20201115 23:00:43.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.017" endtime="20201115 23:00:43.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.016" endtime="20201115 23:00:43.412"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.414" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.422" endtime="20201115 23:00:43.441"></status>
</kw>
<msg timestamp="20201115 23:00:43.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.421" endtime="20201115 23:00:43.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.443" endtime="20201115 23:00:43.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.445" endtime="20201115 23:00:43.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.418" endtime="20201115 23:00:43.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.416" endtime="20201115 23:00:43.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.454" endtime="20201115 23:00:43.741"></status>
</kw>
<msg timestamp="20201115 23:00:43.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024378181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024458083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.453" endtime="20201115 23:00:43.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024378181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024458083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.745" endtime="20201115 23:00:43.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.753" endtime="20201115 23:00:43.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.450" endtime="20201115 23:00:43.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.448" endtime="20201115 23:00:43.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.760" level="INFO">${RESULT} = [{'time': 0.024458083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.990199999999975e-05, 'source_diff': 7.990199999999975e-05}, {'time': 0.024549111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:43.756" endtime="20201115 23:00:43.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.773" level="INFO">${ACCURACY} = {'diff': [7.990199999999975e-05, 7.969399999999821e-05, 8.000000000000021e-05, 8.004199999999892e-05, 8.034700000000145e-05, 7.998600000000064e-05, 7.98329999999979e-05, 8.051400000000028e-05, 7.96249...</msg>
<status status="PASS" starttime="20201115 23:00:43.761" endtime="20201115 23:00:43.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.778" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.777" endtime="20201115 23:00:43.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.785" level="INFO">VALUE: [7.990199999999975e-05, 7.969399999999821e-05, 8.000000000000021e-05, 8.004199999999892e-05, 8.034700000000145e-05, 7.998600000000064e-05, 7.98329999999979e-05, 8.051400000000028e-05, 7.962499999999983e-05, 8.001399999999978e-05, 7.965299999999897e-05, 8.034700000000145e-05, 7.97909999999992e-05, 8.001399999999978e-05, 7.990299999999922e-05, 7.986100000000051e-05, 7.986100000000051e-05, 8.037500000000058e-05, 8.034700000000145e-05, 8.036100000000101e-05, 8.034799999999745e-05, 8.015299999999947e-05, 8.050000000000071e-05, 8.002699999999988e-05, 7.95970000000007e-05, 7.967999999999864e-05, 8.034699999999798e-05, 8.009699999999773e-05, 7.968100000000158e-05, 8.02779999999996e-05, 7.984699999999748e-05, 7.984699999999748e-05, 8.015299999999947e-05, 7.962499999999983e-05, 7.984800000000042e-05, 7.967999999999864e-05, 8.004199999999892e-05, 8.025000000000046e-05, 7.968000000000211e-05, 8.050000000000071e-05, 7.969500000000115e-05, 7.96389999999994e-05, 8.015299999999947e-05, 7.965299999999897e-05, 8.016699999999904e-05, 8.020799999999828e-05, 8.052700000000038e-05, 7.966699999999854e-05, 8.050000000000071e-05, 8.004199999999892e-05]</msg>
<status status="PASS" starttime="20201115 23:00:43.779" endtime="20201115 23:00:43.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.774" endtime="20201115 23:00:43.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.788" endtime="20201115 23:00:43.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.791" endtime="20201115 23:00:43.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.790" endtime="20201115 23:00:43.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.786" endtime="20201115 23:00:43.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.415" endtime="20201115 23:00:43.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.413" endtime="20201115 23:00:43.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.412" endtime="20201115 23:00:43.813"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.815" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.823" endtime="20201115 23:00:43.842"></status>
</kw>
<msg timestamp="20201115 23:00:43.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.821" endtime="20201115 23:00:43.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.843" endtime="20201115 23:00:43.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.846" endtime="20201115 23:00:43.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.819" endtime="20201115 23:00:43.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.817" endtime="20201115 23:00:43.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.855" endtime="20201115 23:00:44.140"></status>
</kw>
<msg timestamp="20201115 23:00:44.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024710667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024792056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.853" endtime="20201115 23:00:44.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024710667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024792056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.145" endtime="20201115 23:00:44.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.153" endtime="20201115 23:00:44.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.851" endtime="20201115 23:00:44.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.849" endtime="20201115 23:00:44.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.159" level="INFO">${RESULT} = [{'time': 0.024792056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138900000000115e-05, 'source_diff': 8.138900000000115e-05}, {'time': 0.024885069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:44.156" endtime="20201115 23:00:44.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.173" level="INFO">${ACCURACY} = {'diff': [8.138900000000115e-05, 8.067999999999964e-05, 8.067999999999964e-05, 8.101400000000078e-05, 8.099999999999774e-05, 8.12910000000007e-05, 8.09169999999998e-05, 8.084700000000195e-05, 8.152800...</msg>
<status status="PASS" starttime="20201115 23:00:44.161" endtime="20201115 23:00:44.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.178" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.177" endtime="20201115 23:00:44.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.180" level="INFO">VALUE: [8.138900000000115e-05, 8.067999999999964e-05, 8.067999999999964e-05, 8.101400000000078e-05, 8.099999999999774e-05, 8.12910000000007e-05, 8.09169999999998e-05, 8.084700000000195e-05, 8.152800000000085e-05, 8.116700000000004e-05, 8.152800000000085e-05, 8.152800000000085e-05, 8.101400000000078e-05, 8.098700000000111e-05, 8.130500000000027e-05, 8.152799999999738e-05, 8.138900000000115e-05, 8.092999999999989e-05, 8.116700000000004e-05, 8.102800000000035e-05, 8.066699999999954e-05, 8.066699999999954e-05, 8.151400000000128e-05, 8.069499999999868e-05, 8.118099999999961e-05, 8.080600000000271e-05, 8.10130000000013e-05, 8.150000000000171e-05, 8.08329999999989e-05, 8.08329999999989e-05, 8.125000000000146e-05, 8.081999999999881e-05, 8.068099999999911e-05, 8.08329999999989e-05, 8.09169999999998e-05, 8.134799999999845e-05, 8.086200000000099e-05, 8.072200000000182e-05, 8.131899999999984e-05, 8.118000000000014e-05, 8.084699999999848e-05, 8.066600000000007e-05, 8.116700000000004e-05, 8.102800000000035e-05, 8.118100000000308e-05, 8.098600000000164e-05, 8.083399999999838e-05, 8.086200000000099e-05, 8.075000000000096e-05, 8.13329999999994e-05]</msg>
<status status="PASS" starttime="20201115 23:00:44.179" endtime="20201115 23:00:44.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.174" endtime="20201115 23:00:44.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.183" endtime="20201115 23:00:44.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.187" endtime="20201115 23:00:44.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.185" endtime="20201115 23:00:44.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.182" endtime="20201115 23:00:44.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.815" endtime="20201115 23:00:44.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.814" endtime="20201115 23:00:44.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.813" endtime="20201115 23:00:44.208"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.210" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.218" endtime="20201115 23:00:44.237"></status>
</kw>
<msg timestamp="20201115 23:00:44.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.217" endtime="20201115 23:00:44.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.239" endtime="20201115 23:00:44.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.241" endtime="20201115 23:00:44.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.214" endtime="20201115 23:00:44.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.212" endtime="20201115 23:00:44.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.251" endtime="20201115 23:00:44.538"></status>
</kw>
<msg timestamp="20201115 23:00:44.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024288125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024370139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.249" endtime="20201115 23:00:44.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024288125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024370139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.542" endtime="20201115 23:00:44.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.551" endtime="20201115 23:00:44.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.246" endtime="20201115 23:00:44.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.245" endtime="20201115 23:00:44.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.557" level="INFO">${RESULT} = [{'time': 0.024370139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.201399999999831e-05, 'source_diff': 8.201399999999831e-05}, {'time': 0.024461153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:44.554" endtime="20201115 23:00:44.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.572" level="INFO">${ACCURACY} = {'diff': [8.201399999999831e-05, 8.218100000000061e-05, 8.198599999999917e-05, 8.168000000000064e-05, 8.222199999999985e-05, 8.216600000000157e-05, 8.199999999999874e-05, 8.201400000000178e-05, 8.1694...</msg>
<status status="PASS" starttime="20201115 23:00:44.558" endtime="20201115 23:00:44.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.577" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.576" endtime="20201115 23:00:44.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.579" level="INFO">VALUE: [8.201399999999831e-05, 8.218100000000061e-05, 8.198599999999917e-05, 8.168000000000064e-05, 8.222199999999985e-05, 8.216600000000157e-05, 8.199999999999874e-05, 8.201400000000178e-05, 8.169400000000021e-05, 8.18329999999999e-05, 8.250000000000271e-05, 8.17919999999972e-05, 8.234699999999998e-05, 8.168100000000011e-05, 8.184799999999895e-05, 8.166700000000054e-05, 8.165300000000097e-05, 8.168000000000064e-05, 8.251399999999881e-05, 8.216600000000157e-05, 8.234699999999998e-05, 8.234699999999998e-05, 8.251399999999881e-05, 8.18329999999999e-05, 8.198599999999917e-05, 8.168100000000011e-05, 8.215300000000147e-05, 8.249999999999924e-05, 8.249999999999924e-05, 8.199999999999874e-05, 8.234699999999998e-05, 8.231899999999737e-05, 8.224999999999899e-05, 8.202800000000135e-05, 8.201400000000178e-05, 8.169499999999968e-05, 8.23330000000004e-05, 8.184699999999948e-05, 8.201399999999831e-05, 8.254100000000195e-05, 8.232000000000031e-05, 8.236099999999955e-05, 8.251399999999881e-05, 8.199999999999874e-05, 8.217999999999767e-05, 8.255600000000099e-05, 8.218100000000061e-05, 8.251399999999881e-05, 8.250000000000271e-05, 8.234800000000292e-05]</msg>
<status status="PASS" starttime="20201115 23:00:44.578" endtime="20201115 23:00:44.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.573" endtime="20201115 23:00:44.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.582" endtime="20201115 23:00:44.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.586" endtime="20201115 23:00:44.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.584" endtime="20201115 23:00:44.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.581" endtime="20201115 23:00:44.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.211" endtime="20201115 23:00:44.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.209" endtime="20201115 23:00:44.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.208" endtime="20201115 23:00:44.607"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.609" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.617" endtime="20201115 23:00:44.637"></status>
</kw>
<msg timestamp="20201115 23:00:44.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.616" endtime="20201115 23:00:44.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.638" endtime="20201115 23:00:44.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.641" endtime="20201115 23:00:44.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.613" endtime="20201115 23:00:44.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.611" endtime="20201115 23:00:44.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.650" endtime="20201115 23:00:44.935"></status>
</kw>
<msg timestamp="20201115 23:00:44.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024687097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024770528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.648" endtime="20201115 23:00:44.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024687097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024770528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.940" endtime="20201115 23:00:44.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.948" endtime="20201115 23:00:44.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.645" endtime="20201115 23:00:44.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.644" endtime="20201115 23:00:44.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.955" level="INFO">${RESULT} = [{'time': 0.024770528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.34309999999984e-05, 'source_diff': 8.34309999999984e-05}, {'time': 0.024864528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:44.951" endtime="20201115 23:00:44.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.968" level="INFO">${ACCURACY} = {'diff': [8.34309999999984e-05, 8.336100000000055e-05, 8.316699999999858e-05, 8.319499999999772e-05, 8.351399999999981e-05, 8.336100000000055e-05, 8.26390000000024e-05, 8.262499999999937e-05, 8.268000...</msg>
<status status="PASS" starttime="20201115 23:00:44.956" endtime="20201115 23:00:44.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.972" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.971" endtime="20201115 23:00:44.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.975" level="INFO">VALUE: [8.34309999999984e-05, 8.336100000000055e-05, 8.316699999999858e-05, 8.319499999999772e-05, 8.351399999999981e-05, 8.336100000000055e-05, 8.26390000000024e-05, 8.262499999999937e-05, 8.268000000000164e-05, 8.351399999999981e-05, 8.326399999999956e-05, 8.348600000000067e-05, 8.270900000000025e-05, 8.344499999999797e-05, 8.316699999999858e-05, 8.301399999999931e-05, 8.334800000000045e-05, 8.352699999999991e-05, 8.288899999999919e-05, 8.334700000000098e-05, 8.281900000000134e-05, 8.351400000000328e-05, 8.319400000000171e-05, 8.29720000000006e-05, 8.350000000000024e-05, 8.299999999999974e-05, 8.283400000000038e-05, 8.283400000000038e-05, 8.333399999999741e-05, 8.355499999999905e-05, 8.336100000000055e-05, 8.318100000000161e-05, 8.286100000000005e-05, 8.357000000000156e-05, 8.333299999999794e-05, 8.316700000000204e-05, 8.284700000000048e-05, 8.28330000000009e-05, 8.351399999999981e-05, 8.266699999999808e-05, 8.351399999999981e-05, 8.282000000000081e-05, 8.31659999999991e-05, 8.33330000000014e-05, 8.318000000000214e-05, 8.350000000000024e-05, 8.348600000000067e-05, 8.318099999999815e-05, 8.284700000000048e-05, 8.348600000000067e-05]</msg>
<status status="PASS" starttime="20201115 23:00:44.974" endtime="20201115 23:00:44.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.969" endtime="20201115 23:00:44.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.978" endtime="20201115 23:00:44.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.981" endtime="20201115 23:00:45.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.980" endtime="20201115 23:00:45.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.976" endtime="20201115 23:00:45.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.610" endtime="20201115 23:00:45.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.608" endtime="20201115 23:00:45.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.607" endtime="20201115 23:00:45.003"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.005" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.013" endtime="20201115 23:00:45.032"></status>
</kw>
<msg timestamp="20201115 23:00:45.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.012" endtime="20201115 23:00:45.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.033" endtime="20201115 23:00:45.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.036" endtime="20201115 23:00:45.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.009" endtime="20201115 23:00:45.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.007" endtime="20201115 23:00:45.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.045" endtime="20201115 23:00:45.331"></status>
</kw>
<msg timestamp="20201115 23:00:45.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024555972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024639889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.044" endtime="20201115 23:00:45.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024555972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024639889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.336" endtime="20201115 23:00:45.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.344" endtime="20201115 23:00:45.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.041" endtime="20201115 23:00:45.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.040" endtime="20201115 23:00:45.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.351" level="INFO">${RESULT} = [{'time': 0.024639889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.39170000000028e-05, 'source_diff': 8.39170000000028e-05}, {'time': 0.024731875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:45.347" endtime="20201115 23:00:45.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.364" level="INFO">${ACCURACY} = {'diff': [8.39170000000028e-05, 8.448600000000167e-05, 8.366699999999908e-05, 8.436099999999808e-05, 8.366699999999908e-05, 8.366700000000254e-05, 8.402700000000041e-05, 8.415200000000053e-05, 8.36800...</msg>
<status status="PASS" starttime="20201115 23:00:45.352" endtime="20201115 23:00:45.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.368" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.367" endtime="20201115 23:00:45.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.371" level="INFO">VALUE: [8.39170000000028e-05, 8.448600000000167e-05, 8.366699999999908e-05, 8.436099999999808e-05, 8.366699999999908e-05, 8.366700000000254e-05, 8.402700000000041e-05, 8.415200000000053e-05, 8.368000000000264e-05, 8.433299999999894e-05, 8.384700000000148e-05, 8.367999999999917e-05, 8.419500000000218e-05, 8.368099999999865e-05, 8.431999999999884e-05, 8.384800000000095e-05, 8.434799999999798e-05, 8.451400000000081e-05, 8.3846999999998e-05, 8.400000000000074e-05, 8.386099999999758e-05, 8.369399999999874e-05, 8.434700000000198e-05, 8.366700000000254e-05, 8.368100000000211e-05, 8.386100000000105e-05, 8.382000000000181e-05, 8.448600000000167e-05, 8.436199999999755e-05, 8.451400000000081e-05, 8.401300000000084e-05, 8.417999999999967e-05, 8.367999999999917e-05, 8.44720000000021e-05, 8.43469999999985e-05, 8.363899999999994e-05, 8.399999999999727e-05, 8.43330000000024e-05, 8.376400000000006e-05, 8.401400000000031e-05, 8.413900000000044e-05, 8.436099999999808e-05, 8.450000000000124e-05, 8.398600000000117e-05, 8.433299999999894e-05, 8.43330000000024e-05, 8.451400000000081e-05, 8.452799999999691e-05, 8.400000000000074e-05, 8.436100000000155e-05]</msg>
<status status="PASS" starttime="20201115 23:00:45.370" endtime="20201115 23:00:45.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.365" endtime="20201115 23:00:45.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.374" endtime="20201115 23:00:45.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.378" endtime="20201115 23:00:45.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.376" endtime="20201115 23:00:45.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.373" endtime="20201115 23:00:45.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.006" endtime="20201115 23:00:45.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.004" endtime="20201115 23:00:45.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.003" endtime="20201115 23:00:45.399"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.401" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.410" endtime="20201115 23:00:45.429"></status>
</kw>
<msg timestamp="20201115 23:00:45.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.408" endtime="20201115 23:00:45.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.430" endtime="20201115 23:00:45.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.433" endtime="20201115 23:00:45.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.405" endtime="20201115 23:00:45.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.403" endtime="20201115 23:00:45.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.442" endtime="20201115 23:00:45.729"></status>
</kw>
<msg timestamp="20201115 23:00:45.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025092389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025177458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.440" endtime="20201115 23:00:45.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025092389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025177458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.733" endtime="20201115 23:00:45.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.742" endtime="20201115 23:00:45.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.438" endtime="20201115 23:00:45.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.436" endtime="20201115 23:00:45.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.748" level="INFO">${RESULT} = [{'time': 0.025177458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.506900000000012e-05, 'source_diff': 8.506900000000012e-05}, {'time': 0.025274458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:45.745" endtime="20201115 23:00:45.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.762" level="INFO">${ACCURACY} = {'diff': [8.506900000000012e-05, 8.53469999999995e-05, 8.54859999999992e-05, 8.4846999999999e-05, 8.551399999999834e-05, 8.518100000000015e-05, 8.518100000000015e-05, 8.470899999999879e-05, 8.51670000...</msg>
<status status="PASS" starttime="20201115 23:00:45.749" endtime="20201115 23:00:45.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.767" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.765" endtime="20201115 23:00:45.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.769" level="INFO">VALUE: [8.506900000000012e-05, 8.53469999999995e-05, 8.54859999999992e-05, 8.4846999999999e-05, 8.551399999999834e-05, 8.518100000000015e-05, 8.518100000000015e-05, 8.470899999999879e-05, 8.516700000000058e-05, 8.518100000000015e-05, 8.550000000000224e-05, 8.536099999999908e-05, 8.53469999999995e-05, 8.551399999999834e-05, 8.499999999999827e-05, 8.486099999999858e-05, 8.511099999999883e-05, 8.533299999999994e-05, 8.468099999999965e-05, 8.468099999999965e-05, 8.529199999999723e-05, 8.530600000000027e-05, 8.486100000000205e-05, 8.502800000000088e-05, 8.501400000000131e-05, 8.465200000000103e-05, 8.494399999999999e-05, 8.520800000000328e-05, 8.549999999999877e-05, 8.4846999999999e-05, 8.486099999999858e-05, 8.484799999999848e-05, 8.536199999999855e-05, 8.487500000000162e-05, 8.529099999999776e-05, 8.468000000000017e-05, 8.483299999999944e-05, 8.51110000000023e-05, 8.549999999999877e-05, 8.516700000000058e-05, 8.486099999999858e-05, 8.533299999999994e-05, 8.519499999999972e-05, 8.46530000000005e-05, 8.552800000000138e-05, 8.484700000000248e-05, 8.551300000000234e-05, 8.549999999999877e-05, 8.533299999999994e-05, 8.53469999999995e-05]</msg>
<status status="PASS" starttime="20201115 23:00:45.768" endtime="20201115 23:00:45.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.763" endtime="20201115 23:00:45.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.772" endtime="20201115 23:00:45.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.776" endtime="20201115 23:00:45.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.774" endtime="20201115 23:00:45.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.771" endtime="20201115 23:00:45.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.402" endtime="20201115 23:00:45.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.400" endtime="20201115 23:00:45.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.399" endtime="20201115 23:00:45.797"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.800" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.808" endtime="20201115 23:00:45.827"></status>
</kw>
<msg timestamp="20201115 23:00:45.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.806" endtime="20201115 23:00:45.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.828" endtime="20201115 23:00:45.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.831" endtime="20201115 23:00:45.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.804" endtime="20201115 23:00:45.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.802" endtime="20201115 23:00:45.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.840" endtime="20201115 23:00:46.127"></status>
</kw>
<msg timestamp="20201115 23:00:46.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025152111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025238333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.838" endtime="20201115 23:00:46.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025152111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025238333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.131" endtime="20201115 23:00:46.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.139" endtime="20201115 23:00:46.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.836" endtime="20201115 23:00:46.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.834" endtime="20201115 23:00:46.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.146" level="INFO">${RESULT} = [{'time': 0.025238333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.622200000000038e-05, 'source_diff': 8.622200000000038e-05}, {'time': 0.025338333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:46.142" endtime="20201115 23:00:46.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.203" level="INFO">${ACCURACY} = {'diff': [8.622200000000038e-05, 8.597200000000013e-05, 8.636100000000008e-05, 8.583300000000044e-05, 8.61249999999994e-05, 8.586099999999958e-05, 8.602799999999841e-05, 8.588799999999924e-05, 8.65139...</msg>
<status status="PASS" starttime="20201115 23:00:46.147" endtime="20201115 23:00:46.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.207" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.206" endtime="20201115 23:00:46.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.210" level="INFO">VALUE: [8.622200000000038e-05, 8.597200000000013e-05, 8.636100000000008e-05, 8.583300000000044e-05, 8.61249999999994e-05, 8.586099999999958e-05, 8.602799999999841e-05, 8.588799999999924e-05, 8.651399999999934e-05, 8.636100000000008e-05, 8.63189999999979e-05, 8.56660000000016e-05, 8.568000000000117e-05, 8.643000000000192e-05, 8.56799999999977e-05, 8.581900000000087e-05, 8.652799999999891e-05, 8.56669999999976e-05, 8.618100000000115e-05, 8.620800000000081e-05, 8.649999999999977e-05, 8.56669999999976e-05, 8.619400000000124e-05, 8.586099999999958e-05, 8.652800000000238e-05, 8.64860000000002e-05, 8.61669999999981e-05, 8.568100000000065e-05, 8.566700000000108e-05, 8.587499999999915e-05, 8.633399999999694e-05, 8.601399999999884e-05, 8.569399999999727e-05, 8.649999999999977e-05, 8.633300000000094e-05, 8.633300000000094e-05, 8.61799999999982e-05, 8.651399999999934e-05, 8.601399999999884e-05, 8.63470000000005e-05, 8.63470000000005e-05, 8.652799999999891e-05, 8.568099999999718e-05, 8.648699999999968e-05, 8.649999999999977e-05, 8.647200000000063e-05, 8.64860000000002e-05, 8.568000000000117e-05, 8.633300000000094e-05, 8.652799999999891e-05]</msg>
<status status="PASS" starttime="20201115 23:00:46.209" endtime="20201115 23:00:46.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.204" endtime="20201115 23:00:46.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.214" endtime="20201115 23:00:46.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.217" endtime="20201115 23:00:46.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.216" endtime="20201115 23:00:46.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.212" endtime="20201115 23:00:46.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.800" endtime="20201115 23:00:46.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.798" endtime="20201115 23:00:46.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.798" endtime="20201115 23:00:46.238"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.240" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.249" endtime="20201115 23:00:46.268"></status>
</kw>
<msg timestamp="20201115 23:00:46.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.247" endtime="20201115 23:00:46.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.270" endtime="20201115 23:00:46.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.272" endtime="20201115 23:00:46.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.245" endtime="20201115 23:00:46.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.243" endtime="20201115 23:00:46.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.282" endtime="20201115 23:00:46.567"></status>
</kw>
<msg timestamp="20201115 23:00:46.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024953194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025040778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.280" endtime="20201115 23:00:46.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024953194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025040778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.571" endtime="20201115 23:00:46.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.579" endtime="20201115 23:00:46.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.277" endtime="20201115 23:00:46.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.276" endtime="20201115 23:00:46.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.586" level="INFO">${RESULT} = [{'time': 0.025040778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.758399999999819e-05, 'source_diff': 8.758399999999819e-05}, {'time': 0.025142778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:46.583" endtime="20201115 23:00:46.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.599" level="INFO">${ACCURACY} = {'diff': [8.758399999999819e-05, 8.736100000000108e-05, 8.683300000000144e-05, 8.702799999999941e-05, 8.734799999999751e-05, 8.686100000000058e-05, 8.726300000000062e-05, 8.66660000000026e-05, 8.68470...</msg>
<status status="PASS" starttime="20201115 23:00:46.587" endtime="20201115 23:00:46.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.604" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.603" endtime="20201115 23:00:46.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.607" level="INFO">VALUE: [8.758399999999819e-05, 8.736100000000108e-05, 8.683300000000144e-05, 8.702799999999941e-05, 8.734799999999751e-05, 8.686100000000058e-05, 8.726300000000062e-05, 8.66660000000026e-05, 8.6847000000001e-05, 8.722199999999791e-05, 8.668000000000217e-05, 8.6847000000001e-05, 8.750000000000077e-05, 8.73470000000015e-05, 8.683400000000091e-05, 8.734799999999751e-05, 8.752700000000044e-05, 8.704099999999951e-05, 8.702699999999994e-05, 8.6847000000001e-05, 8.751399999999687e-05, 8.700000000000027e-05, 8.665299999999904e-05, 8.734699999999804e-05, 8.668099999999818e-05, 8.698599999999723e-05, 8.666700000000208e-05, 8.700000000000027e-05, 8.751399999999687e-05, 8.75129999999974e-05, 8.683300000000144e-05, 8.666599999999913e-05, 8.701399999999984e-05, 8.670800000000131e-05, 8.718100000000215e-05, 8.700000000000027e-05, 8.668100000000165e-05, 8.751400000000034e-05, 8.66669999999986e-05, 8.686099999999711e-05, 8.71669999999991e-05, 8.734699999999804e-05, 8.733300000000194e-05, 8.705600000000202e-05, 8.66669999999986e-05, 8.66669999999986e-05, 8.702799999999941e-05, 8.751399999999687e-05, 8.683400000000091e-05, 8.71669999999991e-05]</msg>
<status status="PASS" starttime="20201115 23:00:46.605" endtime="20201115 23:00:46.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.600" endtime="20201115 23:00:46.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.610" endtime="20201115 23:00:46.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.613" endtime="20201115 23:00:46.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.612" endtime="20201115 23:00:46.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.608" endtime="20201115 23:00:46.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.241" endtime="20201115 23:00:46.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.239" endtime="20201115 23:00:46.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.238" endtime="20201115 23:00:46.635"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.637" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.646" endtime="20201115 23:00:46.665"></status>
</kw>
<msg timestamp="20201115 23:00:46.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.645" endtime="20201115 23:00:46.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.666" endtime="20201115 23:00:46.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.669" endtime="20201115 23:00:46.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.642" endtime="20201115 23:00:46.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.639" endtime="20201115 23:00:46.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.678" endtime="20201115 23:00:46.963"></status>
</kw>
<msg timestamp="20201115 23:00:46.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025778806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025866708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.676" endtime="20201115 23:00:46.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025778806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025866708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.967" endtime="20201115 23:00:46.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.976" endtime="20201115 23:00:46.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.674" endtime="20201115 23:00:46.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.672" endtime="20201115 23:00:46.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.982" level="INFO">${RESULT} = [{'time': 0.025866708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.790199999999734e-05, 'source_diff': 8.790199999999734e-05}, {'time': 0.025966736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:46.979" endtime="20201115 23:00:46.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.996" level="INFO">${ACCURACY} = {'diff': [8.790199999999734e-05, 8.836100000000208e-05, 8.84999999999983e-05, 8.851399999999787e-05, 8.847200000000263e-05, 8.801399999999737e-05, 8.818099999999968e-05, 8.784799999999801e-05, 8.81809...</msg>
<status status="PASS" starttime="20201115 23:00:46.984" endtime="20201115 23:00:46.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.001" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.000" endtime="20201115 23:00:47.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.003" level="INFO">VALUE: [8.790199999999734e-05, 8.836100000000208e-05, 8.84999999999983e-05, 8.851399999999787e-05, 8.847200000000263e-05, 8.801399999999737e-05, 8.818099999999968e-05, 8.784799999999801e-05, 8.818099999999968e-05, 8.822200000000238e-05, 8.766600000000013e-05, 8.801399999999737e-05, 8.834699999999904e-05, 8.84860000000022e-05, 8.811100000000183e-05, 8.802800000000041e-05, 8.808299999999922e-05, 8.820899999999882e-05, 8.843099999999993e-05, 8.762499999999743e-05, 8.768100000000265e-05, 8.76799999999997e-05, 8.784700000000201e-05, 8.765200000000056e-05, 8.852800000000091e-05, 8.813900000000097e-05, 8.856999999999962e-05, 8.76669999999996e-05, 8.783300000000244e-05, 8.834799999999851e-05, 8.769499999999875e-05, 8.818099999999968e-05, 8.766600000000013e-05, 8.819499999999925e-05, 8.763900000000047e-05, 8.815300000000054e-05, 8.783300000000244e-05, 8.834699999999904e-05, 8.822199999999891e-05, 8.81670000000001e-05, 8.784700000000201e-05, 8.805500000000008e-05, 8.76669999999996e-05, 8.834700000000251e-05, 8.784699999999854e-05, 8.836099999999861e-05, 8.787500000000115e-05, 8.834699999999904e-05, 8.823700000000143e-05, 8.819499999999925e-05]</msg>
<status status="PASS" starttime="20201115 23:00:47.002" endtime="20201115 23:00:47.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.997" endtime="20201115 23:00:47.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.006" endtime="20201115 23:00:47.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.010" endtime="20201115 23:00:47.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.008" endtime="20201115 23:00:47.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.005" endtime="20201115 23:00:47.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.638" endtime="20201115 23:00:47.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.636" endtime="20201115 23:00:47.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.635" endtime="20201115 23:00:47.031"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.033" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.042" endtime="20201115 23:00:47.062"></status>
</kw>
<msg timestamp="20201115 23:00:47.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.041" endtime="20201115 23:00:47.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.063" endtime="20201115 23:00:47.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.066" endtime="20201115 23:00:47.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.037" endtime="20201115 23:00:47.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.035" endtime="20201115 23:00:47.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.075" endtime="20201115 23:00:47.360"></status>
</kw>
<msg timestamp="20201115 23:00:47.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025416736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025505653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.073" endtime="20201115 23:00:47.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025416736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025505653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.364" endtime="20201115 23:00:47.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.373" endtime="20201115 23:00:47.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.071" endtime="20201115 23:00:47.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.069" endtime="20201115 23:00:47.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.380" level="INFO">${RESULT} = [{'time': 0.025505653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.891700000000086e-05, 'source_diff': 8.891700000000086e-05}, {'time': 0.025599653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:47.376" endtime="20201115 23:00:47.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.393" level="INFO">${ACCURACY} = {'diff': [8.891700000000086e-05, 8.91670000000011e-05, 8.900000000000227e-05, 8.881999999999987e-05, 8.886099999999911e-05, 8.9332999999997e-05, 8.884699999999954e-05, 8.901400000000184e-05, 8.9167000...</msg>
<status status="PASS" starttime="20201115 23:00:47.381" endtime="20201115 23:00:47.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.398" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.397" endtime="20201115 23:00:47.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.400" level="INFO">VALUE: [8.891700000000086e-05, 8.91670000000011e-05, 8.900000000000227e-05, 8.881999999999987e-05, 8.886099999999911e-05, 8.9332999999997e-05, 8.884699999999954e-05, 8.901400000000184e-05, 8.91670000000011e-05, 8.869499999999975e-05, 8.933300000000047e-05, 8.948599999999973e-05, 8.951399999999887e-05, 8.901399999999837e-05, 8.940299999999832e-05, 8.890299999999782e-05, 8.934700000000004e-05, 8.916599999999816e-05, 8.891700000000086e-05, 8.884699999999954e-05, 8.934700000000004e-05, 8.88190000000004e-05, 8.883299999999997e-05, 8.948700000000268e-05, 8.916699999999764e-05, 8.872199999999941e-05, 8.94999999999993e-05, 8.86800000000007e-05, 8.94999999999993e-05, 8.886099999999911e-05, 8.86670000000006e-05, 8.936099999999961e-05, 8.918099999999721e-05, 8.887500000000215e-05, 8.870899999999932e-05, 8.938899999999875e-05, 8.934799999999951e-05, 8.95129999999994e-05, 8.951399999999887e-05, 8.934700000000004e-05, 8.900000000000227e-05, 8.952800000000191e-05, 8.948599999999973e-05, 8.883299999999997e-05, 8.918100000000068e-05, 8.934799999999951e-05, 8.916699999999764e-05, 8.898599999999923e-05, 8.913900000000197e-05, 8.945800000000059e-05]</msg>
<status status="PASS" starttime="20201115 23:00:47.399" endtime="20201115 23:00:47.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.394" endtime="20201115 23:00:47.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.403" endtime="20201115 23:00:47.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.407" endtime="20201115 23:00:47.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.405" endtime="20201115 23:00:47.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.402" endtime="20201115 23:00:47.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.034" endtime="20201115 23:00:47.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.032" endtime="20201115 23:00:47.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.031" endtime="20201115 23:00:47.428"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.430" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.438" endtime="20201115 23:00:47.460"></status>
</kw>
<msg timestamp="20201115 23:00:47.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.437" endtime="20201115 23:00:47.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.462" endtime="20201115 23:00:47.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.464" endtime="20201115 23:00:47.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.434" endtime="20201115 23:00:47.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.432" endtime="20201115 23:00:47.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.474" endtime="20201115 23:00:47.760"></status>
</kw>
<msg timestamp="20201115 23:00:47.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025529056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025618792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.472" endtime="20201115 23:00:47.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025529056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025618792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.764" endtime="20201115 23:00:47.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.773" endtime="20201115 23:00:47.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.469" endtime="20201115 23:00:47.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.467" endtime="20201115 23:00:47.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.779" level="INFO">${RESULT} = [{'time': 0.025618792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.973599999999998e-05, 'source_diff': 8.973599999999998e-05}, {'time': 0.025715806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:47.776" endtime="20201115 23:00:47.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.794" level="INFO">${ACCURACY} = {'diff': [8.973599999999998e-05, 8.983400000000044e-05, 9.0332999999998e-05, 9.040299999999932e-05, 8.98190000000014e-05, 8.998600000000023e-05, 9.051399999999987e-05, 8.984700000000054e-05, 8.9681000...</msg>
<status status="PASS" starttime="20201115 23:00:47.780" endtime="20201115 23:00:47.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.798" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.797" endtime="20201115 23:00:47.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.801" level="INFO">VALUE: [8.973599999999998e-05, 8.983400000000044e-05, 9.0332999999998e-05, 9.040299999999932e-05, 8.98190000000014e-05, 8.998600000000023e-05, 9.051399999999987e-05, 8.984700000000054e-05, 8.968100000000118e-05, 9.048600000000073e-05, 9.051399999999987e-05, 9.016699999999864e-05, 8.983400000000044e-05, 9.01519999999996e-05, 9.019400000000177e-05, 9.037500000000018e-05, 9.033300000000147e-05, 9.05000000000003e-05, 9.012499999999993e-05, 8.969500000000075e-05, 9.001399999999937e-05, 9.018100000000168e-05, 8.96670000000016e-05, 8.966699999999814e-05, 8.967999999999823e-05, 8.986100000000011e-05, 9.01800000000022e-05, 9.017999999999873e-05, 8.965300000000204e-05, 8.998600000000023e-05, 9.019499999999778e-05, 9.015300000000254e-05, 9.034800000000051e-05, 9.019400000000177e-05, 8.983400000000044e-05, 8.98329999999975e-05, 8.967999999999823e-05, 8.96800000000017e-05, 9.051399999999987e-05, 8.966699999999814e-05, 9.022300000000039e-05, 9.002800000000241e-05, 9.05000000000003e-05, 9.016699999999864e-05, 9.051399999999987e-05, 8.986199999999958e-05, 9.033300000000147e-05, 8.966599999999866e-05, 9.052799999999944e-05, 9.001399999999937e-05]</msg>
<status status="PASS" starttime="20201115 23:00:47.799" endtime="20201115 23:00:47.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.795" endtime="20201115 23:00:47.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.804" endtime="20201115 23:00:47.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.807" endtime="20201115 23:00:47.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.806" endtime="20201115 23:00:47.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.802" endtime="20201115 23:00:47.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.431" endtime="20201115 23:00:47.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.429" endtime="20201115 23:00:47.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.428" endtime="20201115 23:00:47.828"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.831" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.839" endtime="20201115 23:00:47.859"></status>
</kw>
<msg timestamp="20201115 23:00:47.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.837" endtime="20201115 23:00:47.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.860" endtime="20201115 23:00:47.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.863" endtime="20201115 23:00:47.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.835" endtime="20201115 23:00:47.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.833" endtime="20201115 23:00:47.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.872" endtime="20201115 23:00:48.157"></status>
</kw>
<msg timestamp="20201115 23:00:48.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025614889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025705778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.871" endtime="20201115 23:00:48.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025614889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025705778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.161" endtime="20201115 23:00:48.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.170" endtime="20201115 23:00:48.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.868" endtime="20201115 23:00:48.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.867" endtime="20201115 23:00:48.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.176" level="INFO">${RESULT} = [{'time': 0.025705778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.088900000000025e-05, 'source_diff': 9.088900000000025e-05}, {'time': 0.025808792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:48.173" endtime="20201115 23:00:48.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.190" level="INFO">${ACCURACY} = {'diff': [9.088900000000025e-05, 9.133400000000194e-05, 9.152700000000097e-05, 9.067999999999923e-05, 9.15000000000013e-05, 9.134699999999857e-05, 9.147200000000216e-05, 9.066699999999914e-05, 9.08189...</msg>
<status status="PASS" starttime="20201115 23:00:48.177" endtime="20201115 23:00:48.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.194" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.193" endtime="20201115 23:00:48.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.197" level="INFO">VALUE: [9.088900000000025e-05, 9.133400000000194e-05, 9.152700000000097e-05, 9.067999999999923e-05, 9.15000000000013e-05, 9.134699999999857e-05, 9.147200000000216e-05, 9.066699999999914e-05, 9.081899999999893e-05, 9.116699999999964e-05, 9.101400000000037e-05, 9.084699999999807e-05, 9.11939999999993e-05, 9.102700000000047e-05, 9.065299999999957e-05, 9.117999999999973e-05, 9.06520000000001e-05, 9.140300000000032e-05, 9.13060000000028e-05, 9.084699999999807e-05, 9.066699999999914e-05, 9.065300000000304e-05, 9.152800000000044e-05, 9.134799999999804e-05, 9.151400000000087e-05, 9.10000000000008e-05, 9.1332999999999e-05, 9.10000000000008e-05, 9.073599999999751e-05, 9.1332999999999e-05, 9.134699999999857e-05, 9.102799999999994e-05, 9.065299999999957e-05, 9.116699999999964e-05, 9.134799999999804e-05, 9.15000000000013e-05, 9.102700000000047e-05, 9.067999999999923e-05, 9.101400000000037e-05, 9.081899999999893e-05, 9.086099999999764e-05, 9.118099999999921e-05, 9.151400000000087e-05, 9.119499999999878e-05, 9.084800000000101e-05, 9.068099999999871e-05, 9.086100000000111e-05, 9.134699999999857e-05, 9.066599999999966e-05, 9.098600000000123e-05]</msg>
<status status="PASS" starttime="20201115 23:00:48.195" endtime="20201115 23:00:48.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.191" endtime="20201115 23:00:48.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.200" endtime="20201115 23:00:48.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.203" endtime="20201115 23:00:48.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.202" endtime="20201115 23:00:48.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.198" endtime="20201115 23:00:48.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.831" endtime="20201115 23:00:48.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.829" endtime="20201115 23:00:48.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.829" endtime="20201115 23:00:48.224"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.227" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.235" endtime="20201115 23:00:48.255"></status>
</kw>
<msg timestamp="20201115 23:00:48.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.234" endtime="20201115 23:00:48.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.256" endtime="20201115 23:00:48.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.259" endtime="20201115 23:00:48.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.231" endtime="20201115 23:00:48.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.229" endtime="20201115 23:00:48.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.268" endtime="20201115 23:00:48.555"></status>
</kw>
<msg timestamp="20201115 23:00:48.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025153875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025246278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.266" endtime="20201115 23:00:48.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025153875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025246278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.559" endtime="20201115 23:00:48.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.567" endtime="20201115 23:00:48.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.264" endtime="20201115 23:00:48.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.262" endtime="20201115 23:00:48.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.574" level="INFO">${RESULT} = [{'time': 0.025246278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.240300000000132e-05, 'source_diff': 9.240300000000132e-05}, {'time': 0.025345319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:48.570" endtime="20201115 23:00:48.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.587" level="INFO">${ACCURACY} = {'diff': [9.240300000000132e-05, 9.25130000000024e-05, 9.218100000000021e-05, 9.20130000000019e-05, 9.168000000000023e-05, 9.2333e-05, 9.166600000000066e-05, 9.21529999999976e-05, 9.234699999999957e-0...</msg>
<status status="PASS" starttime="20201115 23:00:48.575" endtime="20201115 23:00:48.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.592" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.591" endtime="20201115 23:00:48.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.594" level="INFO">VALUE: [9.240300000000132e-05, 9.25130000000024e-05, 9.218100000000021e-05, 9.20130000000019e-05, 9.168000000000023e-05, 9.2333e-05, 9.166600000000066e-05, 9.21529999999976e-05, 9.234699999999957e-05, 9.234699999999957e-05, 9.166700000000014e-05, 9.186200000000158e-05, 9.233399999999947e-05, 9.21529999999976e-05, 9.168000000000023e-05, 9.216700000000064e-05, 9.218000000000073e-05, 9.217999999999726e-05, 9.25139999999984e-05, 9.205500000000061e-05, 9.2333e-05, 9.234699999999957e-05, 9.201400000000137e-05, 9.168099999999971e-05, 9.23199999999999e-05, 9.16520000000011e-05, 9.18329999999995e-05, 9.20139999999979e-05, 9.241700000000089e-05, 9.25139999999984e-05, 9.223599999999901e-05, 9.218100000000021e-05, 9.172200000000241e-05, 9.201400000000137e-05, 9.206900000000018e-05, 9.213799999999855e-05, 9.243000000000098e-05, 9.16659999999972e-05, 9.218000000000073e-05, 9.16939999999998e-05, 9.219499999999978e-05, 9.236100000000261e-05, 9.219499999999978e-05, 9.186100000000211e-05, 9.168099999999971e-05, 9.180500000000036e-05, 9.251299999999893e-05, 9.172199999999894e-05, 9.184699999999907e-05, 9.249999999999883e-05]</msg>
<status status="PASS" starttime="20201115 23:00:48.593" endtime="20201115 23:00:48.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.588" endtime="20201115 23:00:48.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.597" endtime="20201115 23:00:48.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.601" endtime="20201115 23:00:48.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.599" endtime="20201115 23:00:48.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.595" endtime="20201115 23:00:48.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.227" endtime="20201115 23:00:48.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.226" endtime="20201115 23:00:48.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.225" endtime="20201115 23:00:48.622"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.625" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.633" endtime="20201115 23:00:48.653"></status>
</kw>
<msg timestamp="20201115 23:00:48.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.631" endtime="20201115 23:00:48.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.655" endtime="20201115 23:00:48.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.657" endtime="20201115 23:00:48.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.629" endtime="20201115 23:00:48.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.627" endtime="20201115 23:00:48.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.666" endtime="20201115 23:00:48.951"></status>
</kw>
<msg timestamp="20201115 23:00:48.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025779375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025872097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.665" endtime="20201115 23:00:48.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025779375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025872097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.955" endtime="20201115 23:00:48.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.963" endtime="20201115 23:00:48.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.662" endtime="20201115 23:00:48.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.661" endtime="20201115 23:00:48.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.970" level="INFO">${RESULT} = [{'time': 0.025872097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.272199999999994e-05, 'source_diff': 9.272199999999994e-05}, {'time': 0.025970111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:48.966" endtime="20201115 23:00:48.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.983" level="INFO">${ACCURACY} = {'diff': [9.272199999999994e-05, 9.3333000000001e-05, 9.284700000000007e-05, 9.35139999999994e-05, 9.284700000000007e-05, 9.266700000000114e-05, 9.320800000000087e-05, 9.26940000000008e-05, 9.31800000...</msg>
<status status="PASS" starttime="20201115 23:00:48.971" endtime="20201115 23:00:48.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.988" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.987" endtime="20201115 23:00:48.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.990" level="INFO">VALUE: [9.272199999999994e-05, 9.3333000000001e-05, 9.284700000000007e-05, 9.35139999999994e-05, 9.284700000000007e-05, 9.266700000000114e-05, 9.320800000000087e-05, 9.26940000000008e-05, 9.318000000000173e-05, 9.286099999999964e-05, 9.284700000000007e-05, 9.28330000000005e-05, 9.333299999999753e-05, 9.298599999999976e-05, 9.262499999999896e-05, 9.316700000000164e-05, 9.318099999999774e-05, 9.272199999999994e-05, 9.301299999999943e-05, 9.263799999999905e-05, 9.26659999999982e-05, 9.351400000000287e-05, 9.268000000000123e-05, 9.358300000000125e-05, 9.287499999999921e-05, 9.33200000000009e-05, 9.316699999999817e-05, 9.316700000000164e-05, 9.344500000000103e-05, 9.283399999999997e-05, 9.30139999999989e-05, 9.319500000000078e-05, 9.30000000000028e-05, 9.269500000000028e-05, 9.269500000000028e-05, 9.349999999999983e-05, 9.33200000000009e-05, 9.334700000000057e-05, 9.334800000000004e-05, 9.305500000000161e-05, 9.30000000000028e-05, 9.30000000000028e-05, 9.27079999999969e-05, 9.336100000000014e-05, 9.284700000000007e-05, 9.284700000000007e-05, 9.30139999999989e-05, 9.28330000000005e-05, 9.299999999999933e-05, 9.268100000000071e-05]</msg>
<status status="PASS" starttime="20201115 23:00:48.989" endtime="20201115 23:00:48.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.984" endtime="20201115 23:00:48.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.998" endtime="20201115 23:00:48.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.002" endtime="20201115 23:00:49.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.000" endtime="20201115 23:00:49.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.996" endtime="20201115 23:00:49.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.625" endtime="20201115 23:00:49.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.623" endtime="20201115 23:00:49.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.623" endtime="20201115 23:00:49.023"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.025" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.033" endtime="20201115 23:00:49.053"></status>
</kw>
<msg timestamp="20201115 23:00:49.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.032" endtime="20201115 23:00:49.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.055" endtime="20201115 23:00:49.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.057" endtime="20201115 23:00:49.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.029" endtime="20201115 23:00:49.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.027" endtime="20201115 23:00:49.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.066" endtime="20201115 23:00:49.351"></status>
</kw>
<msg timestamp="20201115 23:00:49.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025128194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025222833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.065" endtime="20201115 23:00:49.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025128194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025222833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.356" endtime="20201115 23:00:49.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.364" endtime="20201115 23:00:49.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.062" endtime="20201115 23:00:49.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.061" endtime="20201115 23:00:49.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.370" level="INFO">${RESULT} = [{'time': 0.025222833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.463900000000053e-05, 'source_diff': 9.463900000000053e-05}, {'time': 0.025322778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:49.367" endtime="20201115 23:00:49.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.385" level="INFO">${ACCURACY} = {'diff': [9.463900000000053e-05, 9.413900000000003e-05, 9.418099999999874e-05, 9.418099999999874e-05, 9.417999999999926e-05, 9.38469999999976e-05, 9.379099999999932e-05, 9.417999999999926e-05, 9.43470...</msg>
<status status="PASS" starttime="20201115 23:00:49.371" endtime="20201115 23:00:49.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.389" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.388" endtime="20201115 23:00:49.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.392" level="INFO">VALUE: [9.463900000000053e-05, 9.413900000000003e-05, 9.418099999999874e-05, 9.418099999999874e-05, 9.417999999999926e-05, 9.38469999999976e-05, 9.379099999999932e-05, 9.417999999999926e-05, 9.434700000000157e-05, 9.45140000000004e-05, 9.419499999999831e-05, 9.363899999999953e-05, 9.399999999999686e-05, 9.413900000000003e-05, 9.368100000000171e-05, 9.454199999999954e-05, 9.417999999999926e-05, 9.417999999999926e-05, 9.368000000000223e-05, 9.402800000000294e-05, 9.384700000000107e-05, 9.381999999999793e-05, 9.40139999999999e-05, 9.366700000000214e-05, 9.450000000000083e-05, 9.404099999999957e-05, 9.433299999999853e-05, 9.41659999999997e-05, 9.434700000000157e-05, 9.369399999999833e-05, 9.40139999999999e-05, 9.433299999999853e-05, 9.383400000000097e-05, 9.384800000000054e-05, 9.436100000000114e-05, 9.406900000000218e-05, 9.368000000000223e-05, 9.417999999999926e-05, 9.430499999999939e-05, 9.38330000000015e-05, 9.38330000000015e-05, 9.365300000000257e-05, 9.45140000000004e-05, 9.413900000000003e-05, 9.418099999999874e-05, 9.445899999999813e-05, 9.418000000000273e-05, 9.400000000000033e-05, 9.4333000000002e-05, 9.434700000000157e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.391" endtime="20201115 23:00:49.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.386" endtime="20201115 23:00:49.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.396" endtime="20201115 23:00:49.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.399" endtime="20201115 23:00:49.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.397" endtime="20201115 23:00:49.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.394" endtime="20201115 23:00:49.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.026" endtime="20201115 23:00:49.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.024" endtime="20201115 23:00:49.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.023" endtime="20201115 23:00:49.420"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.423" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.431" endtime="20201115 23:00:49.450"></status>
</kw>
<msg timestamp="20201115 23:00:49.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.429" endtime="20201115 23:00:49.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.452" endtime="20201115 23:00:49.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.454" endtime="20201115 23:00:49.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.426" endtime="20201115 23:00:49.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.424" endtime="20201115 23:00:49.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.463" endtime="20201115 23:00:49.748"></status>
</kw>
<msg timestamp="20201115 23:00:49.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024530458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.462" endtime="20201115 23:00:49.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024530458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.752" endtime="20201115 23:00:49.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.760" endtime="20201115 23:00:49.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.459" endtime="20201115 23:00:49.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.457" endtime="20201115 23:00:49.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.767" level="INFO">${RESULT} = [{'time': 0.024530458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.523600000000201e-05, 'source_diff': 9.523600000000201e-05}, {'time': 0.024633472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:49.764" endtime="20201115 23:00:49.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.781" level="INFO">${ACCURACY} = {'diff': [9.523600000000201e-05, 9.48469999999986e-05, 9.54859999999988e-05, 9.549999999999836e-05, 9.533299999999953e-05, 9.50140000000009e-05, 9.469499999999881e-05, 9.55140000000014e-05, 9.55270000...</msg>
<status status="PASS" starttime="20201115 23:00:49.769" endtime="20201115 23:00:49.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.786" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.785" endtime="20201115 23:00:49.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.789" level="INFO">VALUE: [9.523600000000201e-05, 9.48469999999986e-05, 9.54859999999988e-05, 9.549999999999836e-05, 9.533299999999953e-05, 9.50140000000009e-05, 9.469499999999881e-05, 9.55140000000014e-05, 9.55270000000015e-05, 9.483299999999903e-05, 9.550000000000183e-05, 9.533299999999953e-05, 9.536100000000214e-05, 9.480499999999989e-05, 9.536099999999867e-05, 9.48469999999986e-05, 9.477800000000022e-05, 9.463900000000053e-05, 9.515299999999713e-05, 9.516700000000017e-05, 9.500000000000133e-05, 9.516599999999723e-05, 9.552800000000097e-05, 9.48469999999986e-05, 9.549999999999836e-05, 9.481899999999946e-05, 9.468099999999924e-05, 9.50140000000009e-05, 9.55140000000014e-05, 9.531999999999943e-05, 9.515200000000112e-05, 9.550000000000183e-05, 9.46660000000002e-05, 9.502800000000047e-05, 9.53469999999991e-05, 9.55140000000014e-05, 9.549999999999836e-05, 9.551399999999793e-05, 9.461100000000139e-05, 9.51530000000006e-05, 9.518099999999974e-05, 9.493000000000001e-05, 9.519399999999983e-05, 9.537499999999824e-05, 9.48469999999986e-05, 9.536099999999867e-05, 9.5333000000003e-05, 9.51530000000006e-05, 9.53469999999991e-05, 9.50140000000009e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.787" endtime="20201115 23:00:49.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.782" endtime="20201115 23:00:49.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.792" endtime="20201115 23:00:49.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.795" endtime="20201115 23:00:49.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.794" endtime="20201115 23:00:49.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.790" endtime="20201115 23:00:49.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.423" endtime="20201115 23:00:49.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.421" endtime="20201115 23:00:49.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.421" endtime="20201115 23:00:49.816"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.819" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.827" endtime="20201115 23:00:49.846"></status>
</kw>
<msg timestamp="20201115 23:00:49.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.825" endtime="20201115 23:00:49.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.848" endtime="20201115 23:00:49.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.850" endtime="20201115 23:00:49.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.823" endtime="20201115 23:00:49.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.821" endtime="20201115 23:00:49.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.859" endtime="20201115 23:00:50.145"></status>
</kw>
<msg timestamp="20201115 23:00:50.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02442075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024517, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 23:00:49.858" endtime="20201115 23:00:50.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02442075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024517, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 23:00:50.149" endtime="20201115 23:00:50.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.157" endtime="20201115 23:00:50.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.855" endtime="20201115 23:00:50.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.854" endtime="20201115 23:00:50.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.164" level="INFO">${RESULT} = [{'time': 0.024517, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999911e-05, 'source_diff': 9.624999999999911e-05}, {'time': 0.024622, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.6...</msg>
<status status="PASS" starttime="20201115 23:00:50.161" endtime="20201115 23:00:50.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.177" level="INFO">${ACCURACY} = {'diff': [9.624999999999911e-05, 9.618100000000074e-05, 9.566700000000067e-05, 9.598600000000276e-05, 9.626399999999868e-05, 9.568000000000076e-05, 9.618100000000074e-05, 9.56660000000012e-05, 9.65560...</msg>
<status status="PASS" starttime="20201115 23:00:50.165" endtime="20201115 23:00:50.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.182" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.181" endtime="20201115 23:00:50.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.184" level="INFO">VALUE: [9.624999999999911e-05, 9.618100000000074e-05, 9.566700000000067e-05, 9.598600000000276e-05, 9.626399999999868e-05, 9.568000000000076e-05, 9.618100000000074e-05, 9.56660000000012e-05, 9.655600000000111e-05, 9.633300000000053e-05, 9.64859999999998e-05, 9.618099999999727e-05, 9.633300000000053e-05, 9.581999999999993e-05, 9.618100000000074e-05, 9.640299999999838e-05, 9.634799999999957e-05, 9.56660000000012e-05, 9.568100000000024e-05, 9.58469999999996e-05, 9.56530000000011e-05, 9.631900000000096e-05, 9.60140000000019e-05, 9.602800000000147e-05, 9.586100000000264e-05, 9.584799999999907e-05, 9.634799999999957e-05, 9.616700000000117e-05, 9.583300000000003e-05, 9.631900000000096e-05, 9.637499999999924e-05, 9.565299999999763e-05, 9.568100000000024e-05, 9.649999999999936e-05, 9.618099999999727e-05, 9.649999999999936e-05, 9.634799999999957e-05, 9.598699999999877e-05, 9.606900000000071e-05, 9.649999999999936e-05, 9.61530000000016e-05, 9.618100000000074e-05, 9.618100000000074e-05, 9.61669999999977e-05, 9.569499999999981e-05, 9.616700000000117e-05, 9.634799999999957e-05, 9.568100000000024e-05, 9.619400000000083e-05, 9.65279999999985e-05]</msg>
<status status="PASS" starttime="20201115 23:00:50.183" endtime="20201115 23:00:50.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.178" endtime="20201115 23:00:50.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.188" endtime="20201115 23:00:50.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.191" endtime="20201115 23:00:50.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.189" endtime="20201115 23:00:50.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.186" endtime="20201115 23:00:50.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.819" endtime="20201115 23:00:50.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.817" endtime="20201115 23:00:50.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.817" endtime="20201115 23:00:50.212"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.214" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.223" endtime="20201115 23:00:50.242"></status>
</kw>
<msg timestamp="20201115 23:00:50.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.221" endtime="20201115 23:00:50.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.243" endtime="20201115 23:00:50.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.246" endtime="20201115 23:00:50.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.218" endtime="20201115 23:00:50.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.216" endtime="20201115 23:00:50.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.255" endtime="20201115 23:00:50.542"></status>
</kw>
<msg timestamp="20201115 23:00:50.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024357236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024454153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.253" endtime="20201115 23:00:50.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024357236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024454153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.546" endtime="20201115 23:00:50.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.554" endtime="20201115 23:00:50.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.251" endtime="20201115 23:00:50.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.249" endtime="20201115 23:00:50.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.561" level="INFO">${RESULT} = [{'time': 0.024454153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.691699999999845e-05, 'source_diff': 9.691699999999845e-05}, {'time': 0.024565167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:50.558" endtime="20201115 23:00:50.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.574" level="INFO">${ACCURACY} = {'diff': [9.691699999999845e-05, 9.686100000000017e-05, 9.719499999999784e-05, 9.702699999999953e-05, 9.732000000000143e-05, 9.733300000000153e-05, 9.669399999999786e-05, 9.750000000000036e-05, 9.7500...</msg>
<status status="PASS" starttime="20201115 23:00:50.562" endtime="20201115 23:00:50.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.579" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.578" endtime="20201115 23:00:50.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.581" level="INFO">VALUE: [9.691699999999845e-05, 9.686100000000017e-05, 9.719499999999784e-05, 9.702699999999953e-05, 9.732000000000143e-05, 9.733300000000153e-05, 9.669399999999786e-05, 9.750000000000036e-05, 9.750000000000036e-05, 9.74860000000008e-05, 9.734699999999763e-05, 9.716700000000217e-05, 9.756900000000221e-05, 9.7334000000001e-05, 9.699999999999986e-05, 9.75409999999996e-05, 9.70140000000029e-05, 9.71799999999988e-05, 9.659700000000035e-05, 9.666700000000167e-05, 9.718100000000174e-05, 9.731999999999796e-05, 9.682000000000093e-05, 9.734800000000057e-05, 9.668000000000176e-05, 9.669400000000133e-05, 9.751399999999993e-05, 9.73470000000011e-05, 9.663900000000253e-05, 9.718099999999827e-05, 9.748599999999732e-05, 9.666700000000167e-05, 9.668099999999777e-05, 9.676400000000265e-05, 9.688899999999931e-05, 9.68470000000006e-05, 9.687499999999974e-05, 9.666599999999873e-05, 9.73470000000011e-05, 9.68470000000006e-05, 9.66669999999982e-05, 9.750000000000036e-05, 9.68470000000006e-05, 9.734800000000057e-05, 9.684800000000007e-05, 9.68470000000006e-05, 9.7027999999999e-05, 9.68470000000006e-05, 9.666700000000167e-05, 9.668100000000124e-05]</msg>
<status status="PASS" starttime="20201115 23:00:50.580" endtime="20201115 23:00:50.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.575" endtime="20201115 23:00:50.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.584" endtime="20201115 23:00:50.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.588" endtime="20201115 23:00:50.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.586" endtime="20201115 23:00:50.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.583" endtime="20201115 23:00:50.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.215" endtime="20201115 23:00:50.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.213" endtime="20201115 23:00:50.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.212" endtime="20201115 23:00:50.609"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.611" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.619" endtime="20201115 23:00:50.640"></status>
</kw>
<msg timestamp="20201115 23:00:50.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.618" endtime="20201115 23:00:50.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.641" endtime="20201115 23:00:50.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.644" endtime="20201115 23:00:50.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.615" endtime="20201115 23:00:50.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.613" endtime="20201115 23:00:50.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.653" endtime="20201115 23:00:50.939"></status>
</kw>
<msg timestamp="20201115 23:00:50.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025161986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025260389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.652" endtime="20201115 23:00:50.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025161986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025260389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.943" endtime="20201115 23:00:50.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.951" endtime="20201115 23:00:50.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.649" endtime="20201115 23:00:50.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.647" endtime="20201115 23:00:50.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.958" level="INFO">${RESULT} = [{'time': 0.025260389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.840300000000038e-05, 'source_diff': 9.840300000000038e-05}, {'time': 0.025369417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:50.955" endtime="20201115 23:00:50.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.973" level="INFO">${ACCURACY} = {'diff': [9.840300000000038e-05, 9.787499999999727e-05, 9.852700000000103e-05, 9.787500000000074e-05, 9.83479999999981e-05, 9.76799999999993e-05, 9.801400000000043e-05, 9.84860000000018e-05, 9.7986000...</msg>
<status status="PASS" starttime="20201115 23:00:50.959" endtime="20201115 23:00:50.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.977" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.976" endtime="20201115 23:00:50.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.980" level="INFO">VALUE: [9.840300000000038e-05, 9.787499999999727e-05, 9.852700000000103e-05, 9.787500000000074e-05, 9.83479999999981e-05, 9.76799999999993e-05, 9.801400000000043e-05, 9.84860000000018e-05, 9.79860000000013e-05, 9.833299999999906e-05, 9.83609999999982e-05, 9.81669999999997e-05, 9.851400000000093e-05, 9.784800000000107e-05, 9.819400000000283e-05, 9.840300000000038e-05, 9.816600000000023e-05, 9.765200000000016e-05, 9.792999999999955e-05, 9.83470000000021e-05, 9.831999999999896e-05, 9.851399999999746e-05, 9.83609999999982e-05, 9.851399999999746e-05, 9.76799999999993e-05, 9.802700000000053e-05, 9.776300000000071e-05, 9.76660000000032e-05, 9.783299999999856e-05, 9.805599999999914e-05, 9.81669999999997e-05, 9.788900000000031e-05, 9.79999999999974e-05, 9.851399999999746e-05, 9.851399999999746e-05, 9.850000000000136e-05, 9.84860000000018e-05, 9.766599999999973e-05, 9.848599999999832e-05, 9.836100000000167e-05, 9.845799999999919e-05, 9.819499999999884e-05, 9.819500000000231e-05, 9.834800000000157e-05, 9.827800000000025e-05, 9.81669999999997e-05, 9.765200000000016e-05, 9.797199999999825e-05, 9.825000000000111e-05, 9.76669999999992e-05]</msg>
<status status="PASS" starttime="20201115 23:00:50.978" endtime="20201115 23:00:50.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.974" endtime="20201115 23:00:50.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.983" endtime="20201115 23:00:50.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.986" endtime="20201115 23:00:51.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.985" endtime="20201115 23:00:51.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.981" endtime="20201115 23:00:51.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.612" endtime="20201115 23:00:51.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.610" endtime="20201115 23:00:51.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.609" endtime="20201115 23:00:51.007"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.010" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.018" endtime="20201115 23:00:51.038"></status>
</kw>
<msg timestamp="20201115 23:00:51.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.017" endtime="20201115 23:00:51.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.040" endtime="20201115 23:00:51.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.042" endtime="20201115 23:00:51.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.014" endtime="20201115 23:00:51.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.012" endtime="20201115 23:00:51.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.052" endtime="20201115 23:00:51.337"></status>
</kw>
<msg timestamp="20201115 23:00:51.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024813667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024912583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.050" endtime="20201115 23:00:51.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024813667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024912583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.341" endtime="20201115 23:00:51.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.349" endtime="20201115 23:00:51.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.047" endtime="20201115 23:00:51.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.046" endtime="20201115 23:00:51.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.356" level="INFO">${RESULT} = [{'time': 0.024912583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.89159999999975e-05, 'source_diff': 9.89159999999975e-05}, {'time': 0.025023583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:51.353" endtime="20201115 23:00:51.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.369" level="INFO">${ACCURACY} = {'diff': [9.89159999999975e-05, 9.89999999999984e-05, 9.916599999999776e-05, 9.947199999999976e-05, 9.91670000000007e-05, 9.927800000000125e-05, 9.901399999999796e-05, 9.950000000000236e-05, 9.9152999...</msg>
<status status="PASS" starttime="20201115 23:00:51.357" endtime="20201115 23:00:51.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.374" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.373" endtime="20201115 23:00:51.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.376" level="INFO">VALUE: [9.89159999999975e-05, 9.89999999999984e-05, 9.916599999999776e-05, 9.947199999999976e-05, 9.91670000000007e-05, 9.927800000000125e-05, 9.901399999999796e-05, 9.950000000000236e-05, 9.915299999999766e-05, 9.936100000000267e-05, 9.915199999999819e-05, 9.911099999999895e-05, 9.948599999999932e-05, 9.865299999999716e-05, 9.916699999999723e-05, 9.947199999999976e-05, 9.951400000000193e-05, 9.886200000000164e-05, 9.918100000000027e-05, 9.926399999999821e-05, 9.883299999999956e-05, 9.934699999999963e-05, 9.900000000000186e-05, 9.880499999999695e-05, 9.868099999999977e-05, 9.873599999999857e-05, 9.863900000000106e-05, 9.93479999999991e-05, 9.901299999999849e-05, 9.901299999999849e-05, 9.898599999999882e-05, 9.951400000000193e-05, 9.901399999999796e-05, 9.93609999999992e-05, 9.918100000000027e-05, 9.934699999999963e-05, 9.95280000000015e-05, 9.868099999999977e-05, 9.902700000000153e-05, 9.86670000000002e-05, 9.916599999999776e-05, 9.916600000000123e-05, 9.88609999999987e-05, 9.917999999999733e-05, 9.88609999999987e-05, 9.93609999999992e-05, 9.870899999999891e-05, 9.922200000000297e-05, 9.86670000000002e-05, 9.950000000000236e-05]</msg>
<status status="PASS" starttime="20201115 23:00:51.375" endtime="20201115 23:00:51.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.370" endtime="20201115 23:00:51.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.380" endtime="20201115 23:00:51.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.383" endtime="20201115 23:00:51.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.382" endtime="20201115 23:00:51.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.378" endtime="20201115 23:00:51.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.010" endtime="20201115 23:00:51.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.008" endtime="20201115 23:00:51.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.008" endtime="20201115 23:00:51.405"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.407" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.415" endtime="20201115 23:00:51.435"></status>
</kw>
<msg timestamp="20201115 23:00:51.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.414" endtime="20201115 23:00:51.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.436" endtime="20201115 23:00:51.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.439" endtime="20201115 23:00:51.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.411" endtime="20201115 23:00:51.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.409" endtime="20201115 23:00:51.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.448" endtime="20201115 23:00:51.733"></status>
</kw>
<msg timestamp="20201115 23:00:51.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024805042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024905444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.446" endtime="20201115 23:00:51.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024805042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024905444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.737" endtime="20201115 23:00:51.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.745" endtime="20201115 23:00:51.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.444" endtime="20201115 23:00:51.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.442" endtime="20201115 23:00:51.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.752" level="INFO">${RESULT} = [{'time': 0.024905444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010040199999999944, 'source_diff': 0.00010040199999999944}, {'time': 0.025019528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:51.749" endtime="20201115 23:00:51.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.765" level="INFO">${ACCURACY} = {'diff': [0.00010040199999999944, 0.00010041699999999848, 9.984700000000013e-05, 0.00010001399999999896, 9.984700000000013e-05, 0.00010016699999999823, 0.00010009700000000038, 0.00010054200000000207, ...</msg>
<status status="PASS" starttime="20201115 23:00:51.753" endtime="20201115 23:00:51.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.770" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.769" endtime="20201115 23:00:51.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.772" level="INFO">VALUE: [0.00010040199999999944, 0.00010041699999999848, 9.984700000000013e-05, 0.00010001399999999896, 9.984700000000013e-05, 0.00010016699999999823, 0.00010009700000000038, 0.00010054200000000207, 0.0001004999999999999, 0.0001001670000000017, 0.00010018100000000127, 0.0001001800000000018, 0.0001001800000000018, 9.983300000000056e-05, 9.995800000000069e-05, 9.96670000000012e-05, 9.984700000000013e-05, 0.0001001670000000017, 9.99999999999994e-05, 0.00010048600000000033, 0.00010051399999999946, 0.00010033299999999759, 9.96939999999974e-05, 0.00010052799999999903, 9.969400000000087e-05, 9.99999999999994e-05, 9.99999999999994e-05, 0.00010013900000000256, 9.968100000000077e-05, 0.00010001400000000243, 0.00010018100000000127, 0.0001001800000000018, 9.984700000000013e-05, 0.00010051399999999946, 9.966599999999826e-05, 0.00010031900000000149, 0.00010031899999999802, 0.00010018100000000127, 0.00010002799999999853, 9.99999999999994e-05, 0.0001004869999999998, 9.973599999999957e-05, 0.00010048600000000033, 9.966599999999826e-05, 9.969400000000087e-05, 0.00010034700000000063, 0.00010001399999999896, 9.96809999999973e-05, 9.982000000000046e-05, 0.0001004999999999999]</msg>
<status status="PASS" starttime="20201115 23:00:51.771" endtime="20201115 23:00:51.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.766" endtime="20201115 23:00:51.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.776" endtime="20201115 23:00:51.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.779" endtime="20201115 23:00:51.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.778" endtime="20201115 23:00:51.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.774" endtime="20201115 23:00:51.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.408" endtime="20201115 23:00:51.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.406" endtime="20201115 23:00:51.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.405" endtime="20201115 23:00:51.801"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.803" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.813" endtime="20201115 23:00:51.834"></status>
</kw>
<msg timestamp="20201115 23:00:51.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.811" endtime="20201115 23:00:51.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.835" endtime="20201115 23:00:51.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.838" endtime="20201115 23:00:51.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.808" endtime="20201115 23:00:51.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.806" endtime="20201115 23:00:51.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.847" endtime="20201115 23:00:52.132"></status>
</kw>
<msg timestamp="20201115 23:00:52.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026272986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026374389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.845" endtime="20201115 23:00:52.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026272986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026374389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.136" endtime="20201115 23:00:52.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.145" endtime="20201115 23:00:52.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.843" endtime="20201115 23:00:52.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.841" endtime="20201115 23:00:52.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.151" level="INFO">${RESULT} = [{'time': 0.026374389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010140299999999991, 'source_diff': 0.00010140299999999991}, {'time': 0.026490403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:52.148" endtime="20201115 23:00:52.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.164" level="INFO">${ACCURACY} = {'diff': [0.00010140299999999991, 0.00010134699999999816, 0.00010141699999999948, 0.00010118100000000227, 0.00010143100000000252, 0.00010134700000000163, 0.00010083299999999809, 0.00010137500000000077...</msg>
<status status="PASS" starttime="20201115 23:00:52.152" endtime="20201115 23:00:52.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.169" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.168" endtime="20201115 23:00:52.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.172" level="INFO">VALUE: [0.00010140299999999991, 0.00010134699999999816, 0.00010141699999999948, 0.00010118100000000227, 0.00010143100000000252, 0.00010134700000000163, 0.00010083299999999809, 0.00010137500000000077, 0.00010069499999999787, 0.0001010000000000004, 0.00010084700000000113, 0.00010098600000000083, 0.00010143100000000252, 0.0001008610000000007, 0.00010116599999999976, 0.00010148600000000133, 0.00010083300000000156, 0.00010152800000000003, 0.00010119500000000184, 0.0001013610000000012, 0.0001011670000000027, 0.00010101399999999996, 0.0001006939999999984, 0.00010133300000000206, 0.00010117999999999933, 0.00010081900000000199, 0.00010102799999999953, 0.0001015419999999996, 0.00010068100000000177, 0.00010134700000000163, 0.00010151400000000046, 0.0001011809999999988, 0.00010117999999999933, 0.00010115299999999966, 0.00010069400000000187, 0.00010124999999999718, 0.00010136099999999773, 0.00010134700000000163, 0.00010133299999999859, 0.00010101399999999996, 0.00010066699999999873, 0.00010102700000000006, 0.00010152700000000056, 0.0001015000000000009, 0.0001008470000000046, 0.00010156999999999528, 0.00010066699999999873, 0.0001011809999999988, 0.000101513999999997, 0.00010099999999999693]</msg>
<status status="PASS" starttime="20201115 23:00:52.170" endtime="20201115 23:00:52.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.165" endtime="20201115 23:00:52.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.175" endtime="20201115 23:00:52.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.178" endtime="20201115 23:00:52.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.177" endtime="20201115 23:00:52.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.173" endtime="20201115 23:00:52.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.804" endtime="20201115 23:00:52.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.802" endtime="20201115 23:00:52.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.801" endtime="20201115 23:00:52.199"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.202" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.210" endtime="20201115 23:00:52.231"></status>
</kw>
<msg timestamp="20201115 23:00:52.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.208" endtime="20201115 23:00:52.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.232" endtime="20201115 23:00:52.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.235" endtime="20201115 23:00:52.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.206" endtime="20201115 23:00:52.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.204" endtime="20201115 23:00:52.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.244" endtime="20201115 23:00:52.529"></status>
</kw>
<msg timestamp="20201115 23:00:52.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025348319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02545025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:52.243" endtime="20201115 23:00:52.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025348319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02545025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:52.533" endtime="20201115 23:00:52.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.541" endtime="20201115 23:00:52.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.240" endtime="20201115 23:00:52.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.238" endtime="20201115 23:00:52.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.548" level="INFO">${RESULT} = [{'time': 0.02545025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010193099999999955, 'source_diff': 0.00010193099999999955}, {'time': 0.025560292, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:52.544" endtime="20201115 23:00:52.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.562" level="INFO">${ACCURACY} = {'diff': [0.00010193099999999955, 0.00010188899999999737, 0.00010162500000000102, 0.00010201400000000097, 0.00010251400000000147, 0.00010229200000000035, 0.00010166699999999973, 0.00010204100000000063...</msg>
<status status="PASS" starttime="20201115 23:00:52.549" endtime="20201115 23:00:52.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.567" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.566" endtime="20201115 23:00:52.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.569" level="INFO">VALUE: [0.00010193099999999955, 0.00010188899999999737, 0.00010162500000000102, 0.00010201400000000097, 0.00010251400000000147, 0.00010229200000000035, 0.00010166699999999973, 0.00010204100000000063, 0.00010183299999999909, 0.00010234699999999916, 0.00010181899999999952, 0.0001023199999999995, 0.00010184699999999866, 0.0001025420000000006, 0.00010216599999999729, 0.00010166600000000026, 0.00010231900000000002, 0.00010222199999999904, 0.00010201400000000097, 0.00010249999999999843, 0.00010199999999999793, 0.0001016809999999993, 0.00010211099999999848, 0.00010219499999999937, 0.00010251400000000147, 0.00010186099999999823, 0.00010212499999999805, 0.00010202800000000053, 0.00010218000000000033, 0.00010209699999999891, 0.0001020000000000014, 0.00010251400000000147, 0.00010248599999999886, 0.00010233399999999906, 0.0001016809999999993, 0.0001016939999999994, 0.00010202700000000106, 0.00010251400000000147, 0.00010252799999999757, 0.00010175000000000115, 0.00010184699999999866, 0.00010199999999999793, 0.0001016809999999993, 0.0001025000000000019, 0.0001025000000000019, 0.00010233299999999959, 0.00010234700000000263, 0.000102513999999998, 0.00010167999999999983, 0.00010248599999999886]</msg>
<status status="PASS" starttime="20201115 23:00:52.568" endtime="20201115 23:00:52.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.563" endtime="20201115 23:00:52.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.572" endtime="20201115 23:00:52.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.576" endtime="20201115 23:00:52.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.574" endtime="20201115 23:00:52.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.571" endtime="20201115 23:00:52.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.202" endtime="20201115 23:00:52.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.201" endtime="20201115 23:00:52.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.200" endtime="20201115 23:00:52.597"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.599" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.607" endtime="20201115 23:00:52.627"></status>
</kw>
<msg timestamp="20201115 23:00:52.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.606" endtime="20201115 23:00:52.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.628" endtime="20201115 23:00:52.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.631" endtime="20201115 23:00:52.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.603" endtime="20201115 23:00:52.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.601" endtime="20201115 23:00:52.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.640" endtime="20201115 23:00:52.926"></status>
</kw>
<msg timestamp="20201115 23:00:52.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024298, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024401083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:52.638" endtime="20201115 23:00:52.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024298, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024401083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:52.930" endtime="20201115 23:00:52.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.939" endtime="20201115 23:00:52.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.636" endtime="20201115 23:00:52.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.634" endtime="20201115 23:00:52.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.945" level="INFO">${RESULT} = [{'time': 0.024401083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010308300000000034, 'source_diff': 0.00010308300000000034}, {'time': 0.024519083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:52.942" endtime="20201115 23:00:52.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.958" level="INFO">${ACCURACY} = {'diff': [0.00010308300000000034, 0.00010333300000000059, 0.00010283300000000009, 0.00010288899999999837, 0.00010348599999999986, 0.00010334699999999669, 0.00010334700000000016, 0.00010302799999999807...</msg>
<status status="PASS" starttime="20201115 23:00:52.946" endtime="20201115 23:00:52.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.963" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.962" endtime="20201115 23:00:52.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.965" level="INFO">VALUE: [0.00010308300000000034, 0.00010333300000000059, 0.00010283300000000009, 0.00010288899999999837, 0.00010348599999999986, 0.00010334699999999669, 0.00010334700000000016, 0.00010302799999999807, 0.00010316700000000123, 0.00010333300000000059, 0.00010284699999999966, 0.00010284699999999966, 0.00010286099999999923, 0.00010331899999999755, 0.00010290199999999847, 0.00010349999999999943, 0.0001026810000000003, 0.0001026810000000003, 0.00010333300000000059, 0.00010351400000000247, 0.00010301400000000197, 0.00010333300000000059, 0.0001035420000000016, 0.00010352799999999857, 0.00010349999999999943, 0.00010319500000000037, 0.0001026810000000003, 0.00010349999999999943, 0.00010333300000000059, 0.00010299999999999893, 0.000103513999999999, 0.0001026810000000003, 0.00010334700000000016, 0.00010333300000000059, 0.0001026810000000003, 0.00010268099999999683, 0.00010282, 0.00010333400000000006, 0.00010295800000000022, 0.00010265199999999822, 0.00010316600000000176, 0.0001026940000000004, 0.00010284699999999966, 0.0001030000000000024, 0.00010301400000000197, 0.00010284799999999913, 0.00010301400000000197, 0.00010315200000000219, 0.00010317999999999786, 0.00010334700000000016]</msg>
<status status="PASS" starttime="20201115 23:00:52.964" endtime="20201115 23:00:52.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.959" endtime="20201115 23:00:52.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.968" endtime="20201115 23:00:52.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.972" endtime="20201115 23:00:52.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.970" endtime="20201115 23:00:52.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.967" endtime="20201115 23:00:52.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.600" endtime="20201115 23:00:52.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.598" endtime="20201115 23:00:52.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.597" endtime="20201115 23:00:52.993"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.995" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.003" endtime="20201115 23:00:53.023"></status>
</kw>
<msg timestamp="20201115 23:00:53.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.002" endtime="20201115 23:00:53.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.024" endtime="20201115 23:00:53.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.027" endtime="20201115 23:00:53.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.999" endtime="20201115 23:00:53.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.997" endtime="20201115 23:00:53.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.036" endtime="20201115 23:00:53.323"></status>
</kw>
<msg timestamp="20201115 23:00:53.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024301028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024405597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.034" endtime="20201115 23:00:53.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024301028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024405597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.327" endtime="20201115 23:00:53.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.335" endtime="20201115 23:00:53.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.032" endtime="20201115 23:00:53.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.030" endtime="20201115 23:00:53.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.341" level="INFO">${RESULT} = [{'time': 0.024405597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010456900000000227, 'source_diff': 0.00010456900000000227}, {'time': 0.024519611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:53.338" endtime="20201115 23:00:53.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.354" level="INFO">${ACCURACY} = {'diff': [0.00010456900000000227, 0.00010433300000000159, 0.00010416700000000223, 0.00010452799999999957, 0.0001036810000000013, 0.0001040139999999995, 0.00010406900000000177, 0.00010401300000000002, ...</msg>
<status status="PASS" starttime="20201115 23:00:53.342" endtime="20201115 23:00:53.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.359" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.358" endtime="20201115 23:00:53.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.361" level="INFO">VALUE: [0.00010456900000000227, 0.00010433300000000159, 0.00010416700000000223, 0.00010452799999999957, 0.0001036810000000013, 0.0001040139999999995, 0.00010406900000000177, 0.00010401300000000002, 0.00010452799999999957, 0.00010370800000000097, 0.00010433300000000159, 0.00010384700000000066, 0.00010434700000000116, 0.00010450000000000043, 0.00010402800000000254, 0.00010416699999999876, 0.00010386100000000023, 0.00010391699999999851, 0.00010433299999999812, 0.00010384699999999719, 0.00010402799999999907, 0.00010399999999999993, 0.000104514, 0.0001036810000000013, 0.000104514, 0.00010401400000000297, 0.00010416599999999929, 0.00010383300000000109, 0.00010436100000000073, 0.00010398600000000036, 0.0001036810000000013, 0.00010450000000000043, 0.00010450000000000043, 0.00010368099999999783, 0.00010384800000000013, 0.00010448599999999739, 0.00010448600000000086, 0.00010434700000000116, 0.00010363900000000259, 0.00010367999999999836, 0.000104514, 0.000104514, 0.00010418099999999833, 0.00010443100000000205, 0.0001043339999999976, 0.00010361199999999945, 0.00010381899999999805, 0.00010430600000000192, 0.00010366600000000226, 0.00010384700000000066]</msg>
<status status="PASS" starttime="20201115 23:00:53.360" endtime="20201115 23:00:53.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.355" endtime="20201115 23:00:53.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.365" endtime="20201115 23:00:53.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.368" endtime="20201115 23:00:53.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.366" endtime="20201115 23:00:53.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.363" endtime="20201115 23:00:53.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.996" endtime="20201115 23:00:53.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.994" endtime="20201115 23:00:53.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.993" endtime="20201115 23:00:53.389"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.391" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.399" endtime="20201115 23:00:53.420"></status>
</kw>
<msg timestamp="20201115 23:00:53.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.398" endtime="20201115 23:00:53.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.421" endtime="20201115 23:00:53.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.424" endtime="20201115 23:00:53.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.395" endtime="20201115 23:00:53.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.393" endtime="20201115 23:00:53.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.433" endtime="20201115 23:00:53.719"></status>
</kw>
<msg timestamp="20201115 23:00:53.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024428222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024532972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.432" endtime="20201115 23:00:53.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024428222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024532972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.723" endtime="20201115 23:00:53.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.731" endtime="20201115 23:00:53.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.429" endtime="20201115 23:00:53.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.427" endtime="20201115 23:00:53.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.738" level="INFO">${RESULT} = [{'time': 0.024532972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010475000000000068, 'source_diff': 0.00010475000000000068}, {'time': 0.024648042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:53.735" endtime="20201115 23:00:53.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.751" level="INFO">${ACCURACY} = {'diff': [0.00010475000000000068, 0.00010549999999999796, 0.00010470800000000197, 0.0001046810000000023, 0.00010486099999999776, 0.00010468099999999883, 0.00010486199999999724, 0.00010516699999999976,...</msg>
<status status="PASS" starttime="20201115 23:00:53.739" endtime="20201115 23:00:53.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.756" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.754" endtime="20201115 23:00:53.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.758" level="INFO">VALUE: [0.00010475000000000068, 0.00010549999999999796, 0.00010470800000000197, 0.0001046810000000023, 0.00010486099999999776, 0.00010468099999999883, 0.00010486199999999724, 0.00010516699999999976, 0.00010483400000000156, 0.00010536100000000173, 0.00010544400000000315, 0.00010517999999999986, 0.000105514000000001, 0.00010536100000000173, 0.00010518099999999933, 0.0001050140000000005, 0.00010484800000000113, 0.00010466699999999926, 0.00010552700000000109, 0.0001051940000000029, 0.00010534699999999869, 0.0001050140000000005, 0.000105514000000001, 0.0001050140000000005, 0.00010465299999999969, 0.00010483400000000156, 0.00010534799999999817, 0.00010515300000000019, 0.00010536100000000173, 0.0001050140000000005, 0.00010483300000000209, 0.00010468099999999883, 0.00010500000000000093, 0.00010495799999999875, 0.00010479200000000286, 0.000105514000000001, 0.00010534800000000163, 0.00010467999999999936, 0.000105514000000001, 0.00010483299999999862, 0.00010533299999999912, 0.00010483299999999862, 0.00010516699999999976, 0.00010554099999999719, 0.0001051810000000028, 0.00010518099999999933, 0.00010466599999999979, 0.00010533299999999912, 0.00010550000000000143, 0.0001051940000000029]</msg>
<status status="PASS" starttime="20201115 23:00:53.757" endtime="20201115 23:00:53.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.752" endtime="20201115 23:00:53.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.761" endtime="20201115 23:00:53.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.765" endtime="20201115 23:00:53.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.763" endtime="20201115 23:00:53.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.759" endtime="20201115 23:00:53.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.392" endtime="20201115 23:00:53.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.390" endtime="20201115 23:00:53.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.389" endtime="20201115 23:00:53.786"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.788" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.797" endtime="20201115 23:00:53.817"></status>
</kw>
<msg timestamp="20201115 23:00:53.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.795" endtime="20201115 23:00:53.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.818" endtime="20201115 23:00:53.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.821" endtime="20201115 23:00:53.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.793" endtime="20201115 23:00:53.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.790" endtime="20201115 23:00:53.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.830" endtime="20201115 23:00:54.115"></status>
</kw>
<msg timestamp="20201115 23:00:54.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025700986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025807111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.828" endtime="20201115 23:00:54.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025700986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025807111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.119" endtime="20201115 23:00:54.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.127" endtime="20201115 23:00:54.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.826" endtime="20201115 23:00:54.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.824" endtime="20201115 23:00:54.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.134" level="INFO">${RESULT} = [{'time': 0.025807111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010612500000000205, 'source_diff': 0.00010612500000000205}, {'time': 0.025919069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:54.131" endtime="20201115 23:00:54.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.148" level="INFO">${ACCURACY} = {'diff': [0.00010612500000000205, 0.00010634699999999969, 0.00010634699999999969, 0.00010569399999999993, 0.00010568099999999983, 0.00010634699999999969, 0.0001060140000000015, 0.00010568099999999983,...</msg>
<status status="PASS" starttime="20201115 23:00:54.135" endtime="20201115 23:00:54.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.153" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.152" endtime="20201115 23:00:54.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.155" level="INFO">VALUE: [0.00010612500000000205, 0.00010634699999999969, 0.00010634699999999969, 0.00010569399999999993, 0.00010568099999999983, 0.00010634699999999969, 0.0001060140000000015, 0.00010568099999999983, 0.00010651399999999853, 0.00010584800000000213, 0.00010583299999999962, 0.00010591700000000051, 0.00010583299999999962, 0.0001060140000000015, 0.00010586100000000223, 0.00010584699999999919, 0.00010583299999999962, 0.0001063339999999996, 0.0001063339999999996, 0.00010566700000000026, 0.00010602800000000107, 0.00010601399999999803, 0.00010565300000000069, 0.00010650000000000243, 0.00010606999999999978, 0.00010600000000000193, 0.00010618100000000033, 0.00010637499999999883, 0.00010587499999999833, 0.00010651300000000252, 0.00010627699999999837, 0.0001062360000000026, 0.00010651399999999853, 0.00010566699999999679, 0.0001060140000000015, 0.000106514000000002, 0.00010583400000000256, 0.0001060140000000015, 0.00010636099999999926, 0.00010566600000000079, 0.00010615199999999825, 0.00010633300000000012, 0.00010599999999999846, 0.00010584700000000266, 0.00010584699999999919, 0.00010655500000000123, 0.00010598700000000183, 0.00010651399999999853, 0.00010634699999999969, 0.00010634699999999969]</msg>
<status status="PASS" starttime="20201115 23:00:54.154" endtime="20201115 23:00:54.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.149" endtime="20201115 23:00:54.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.158" endtime="20201115 23:00:54.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.162" endtime="20201115 23:00:54.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.160" endtime="20201115 23:00:54.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.157" endtime="20201115 23:00:54.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.789" endtime="20201115 23:00:54.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.787" endtime="20201115 23:00:54.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.786" endtime="20201115 23:00:54.187"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.189" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.197" endtime="20201115 23:00:54.218"></status>
</kw>
<msg timestamp="20201115 23:00:54.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.196" endtime="20201115 23:00:54.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.220" endtime="20201115 23:00:54.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.222" endtime="20201115 23:00:54.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.193" endtime="20201115 23:00:54.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.191" endtime="20201115 23:00:54.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.231" endtime="20201115 23:00:54.517"></status>
</kw>
<msg timestamp="20201115 23:00:54.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024361181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024468069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.230" endtime="20201115 23:00:54.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024361181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024468069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.521" endtime="20201115 23:00:54.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.529" endtime="20201115 23:00:54.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.227" endtime="20201115 23:00:54.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.225" endtime="20201115 23:00:54.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.535" level="INFO">${RESULT} = [{'time': 0.024468069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010688799999999943, 'source_diff': 0.00010688799999999943}, {'time': 0.024582056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:54.532" endtime="20201115 23:00:54.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.548" level="INFO">${ACCURACY} = {'diff': [0.00010688799999999943, 0.00010716700000000176, 0.00010698599999999989, 0.00010716600000000229, 0.00010733300000000112, 0.00010751399999999953, 0.00010702800000000207, 0.00010751399999999953...</msg>
<status status="PASS" starttime="20201115 23:00:54.536" endtime="20201115 23:00:54.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.553" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.552" endtime="20201115 23:00:54.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.555" level="INFO">VALUE: [0.00010688799999999943, 0.00010716700000000176, 0.00010698599999999989, 0.00010716600000000229, 0.00010733300000000112, 0.00010751399999999953, 0.00010702800000000207, 0.00010751399999999953, 0.00010718099999999786, 0.00010752800000000257, 0.00010718100000000133, 0.00010733300000000112, 0.00010734700000000069, 0.0001073889999999994, 0.00010717999999999839, 0.00010751399999999953, 0.00010666700000000126, 0.00010663900000000212, 0.00010718100000000133, 0.00010704100000000216, 0.00010684700000000019, 0.00010669399999999746, 0.00010716599999999882, 0.00010701399999999903, 0.00010697200000000032, 0.00010684700000000019, 0.00010697199999999685, 0.0001073340000000006, 0.00010704099999999869, 0.00010727699999999937, 0.00010667999999999789, 0.00010666599999999832, 0.00010665299999999822, 0.00010686099999999976, 0.00010718100000000133, 0.00010669499999999693, 0.00010666699999999779, 0.00010755500000000223, 0.00010666600000000179, 0.00010733300000000112, 0.00010749999999999996, 0.00010729199999999842, 0.00010749999999999996, 0.00010684700000000019, 0.0001073340000000006, 0.0001071950000000009, 0.00010752800000000257, 0.0001070140000000025, 0.00010740300000000244, 0.00010667999999999789]</msg>
<status status="PASS" starttime="20201115 23:00:54.554" endtime="20201115 23:00:54.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.549" endtime="20201115 23:00:54.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.559" endtime="20201115 23:00:54.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.562" endtime="20201115 23:00:54.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.561" endtime="20201115 23:00:54.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.557" endtime="20201115 23:00:54.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.190" endtime="20201115 23:00:54.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.188" endtime="20201115 23:00:54.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.187" endtime="20201115 23:00:54.583"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.586" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.594" endtime="20201115 23:00:54.614"></status>
</kw>
<msg timestamp="20201115 23:00:54.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.593" endtime="20201115 23:00:54.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.615" endtime="20201115 23:00:54.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.618" endtime="20201115 23:00:54.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.590" endtime="20201115 23:00:54.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.588" endtime="20201115 23:00:54.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.627" endtime="20201115 23:00:54.913"></status>
</kw>
<msg timestamp="20201115 23:00:54.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024423153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.626" endtime="20201115 23:00:54.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024423153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.917" endtime="20201115 23:00:54.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.925" endtime="20201115 23:00:54.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.623" endtime="20201115 23:00:54.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.621" endtime="20201115 23:00:54.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.932" level="INFO">${RESULT} = [{'time': 0.024423153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010808399999999788, 'source_diff': 0.00010808399999999788}, {'time': 0.024541181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:54.929" endtime="20201115 23:00:54.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.945" level="INFO">${ACCURACY} = {'diff': [0.00010808399999999788, 0.00010818099999999886, 0.00010815299999999972, 0.00010851300000000105, 0.00010798600000000089, 0.00010801400000000003, 0.00010827799999999985, 0.00010766699999999879...</msg>
<status status="PASS" starttime="20201115 23:00:54.933" endtime="20201115 23:00:54.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.950" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.949" endtime="20201115 23:00:54.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.953" level="INFO">VALUE: [0.00010808399999999788, 0.00010818099999999886, 0.00010815299999999972, 0.00010851300000000105, 0.00010798600000000089, 0.00010801400000000003, 0.00010827799999999985, 0.00010766699999999879, 0.00010851400000000053, 0.00010800000000000046, 0.00010819499999999843, 0.00010851400000000053, 0.00010851400000000053, 0.00010800000000000046, 0.00010850000000000096, 0.00010816599999999982, 0.00010787499999999686, 0.00010766699999999879, 0.00010850000000000096, 0.00010834800000000117, 0.00010851400000000053, 0.00010801400000000003, 0.00010845799999999878, 0.0001085280000000001, 0.00010852799999999663, 0.00010780500000000248, 0.00010834700000000169, 0.00010834700000000169, 0.0001085280000000001, 0.00010792999999999914, 0.00010818099999999886, 0.00010851299999999758, 0.00010818000000000286, 0.00010767999999999889, 0.00010840299999999997, 0.00010786099999999729, 0.00010800000000000046, 0.00010816699999999929, 0.00010801399999999656, 0.00010799999999999699, 0.00010850000000000096, 0.0001077500000000002, 0.00010800000000000046, 0.00010850000000000096, 0.00010765299999999922, 0.00010800000000000046, 0.00010808300000000187, 0.00010851400000000053, 0.00010765299999999922, 0.00010819399999999896]</msg>
<status status="PASS" starttime="20201115 23:00:54.951" endtime="20201115 23:00:54.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.946" endtime="20201115 23:00:54.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.956" endtime="20201115 23:00:54.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.959" endtime="20201115 23:00:54.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.958" endtime="20201115 23:00:54.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.954" endtime="20201115 23:00:54.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.586" endtime="20201115 23:00:54.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.585" endtime="20201115 23:00:54.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.584" endtime="20201115 23:00:54.980"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.983" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.991" endtime="20201115 23:00:55.010"></status>
</kw>
<msg timestamp="20201115 23:00:55.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.989" endtime="20201115 23:00:55.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.012" endtime="20201115 23:00:55.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.014" endtime="20201115 23:00:55.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.987" endtime="20201115 23:00:55.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.985" endtime="20201115 23:00:55.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.023" endtime="20201115 23:00:55.309"></status>
</kw>
<msg timestamp="20201115 23:00:55.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024409861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024518944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.022" endtime="20201115 23:00:55.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024409861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024518944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.313" endtime="20201115 23:00:55.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.321" endtime="20201115 23:00:55.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.019" endtime="20201115 23:00:55.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.018" endtime="20201115 23:00:55.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.327" level="INFO">${RESULT} = [{'time': 0.024518944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001090829999999994, 'source_diff': 0.0001090829999999994}, {'time': 0.024633944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:55.324" endtime="20201115 23:00:55.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.341" level="INFO">${ACCURACY} = {'diff': [0.0001090829999999994, 0.00010867999999999989, 0.00010934699999999922, 0.00010901400000000103, 0.00010913900000000115, 0.00010902700000000112, 0.00010868099999999936, 0.00010919499999999943,...</msg>
<status status="PASS" starttime="20201115 23:00:55.329" endtime="20201115 23:00:55.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.346" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.345" endtime="20201115 23:00:55.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.348" level="INFO">VALUE: [0.0001090829999999994, 0.00010867999999999989, 0.00010934699999999922, 0.00010901400000000103, 0.00010913900000000115, 0.00010902700000000112, 0.00010868099999999936, 0.00010919499999999943, 0.00010919499999999943, 0.00010902700000000112, 0.00010951300000000205, 0.00010918000000000039, 0.00010916599999999735, 0.00010883299999999915, 0.00010880599999999949, 0.00010934699999999922, 0.00010901399999999756, 0.00010863900000000065, 0.00010869399999999946, 0.00010952699999999815, 0.00010944399999999674, 0.00010901399999999756, 0.00010916700000000029, 0.00010949999999999849, 0.00010918099999999986, 0.00010937500000000183, 0.00010901400000000103, 0.00010956899999999686, 0.00010952700000000162, 0.00010918000000000039, 0.00010954200000000067, 0.00010884699999999872, 0.0001090829999999994, 0.00010934699999999922, 0.00010872200000000207, 0.0001095280000000011, 0.00010918099999999986, 0.00010912500000000158, 0.00010900000000000146, 0.0001095280000000011, 0.00010919399999999996, 0.00010952799999999763, 0.00010884699999999872, 0.00010949999999999849, 0.00010955500000000076, 0.00010948599999999892, 0.00010925000000000171, 0.00010918000000000039, 0.00010936099999999879, 0.00010918000000000039]</msg>
<status status="PASS" starttime="20201115 23:00:55.347" endtime="20201115 23:00:55.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.342" endtime="20201115 23:00:55.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.351" endtime="20201115 23:00:55.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.355" endtime="20201115 23:00:55.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.353" endtime="20201115 23:00:55.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.349" endtime="20201115 23:00:55.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.983" endtime="20201115 23:00:55.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.982" endtime="20201115 23:00:55.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.981" endtime="20201115 23:00:55.376"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.378" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.386" endtime="20201115 23:00:55.407"></status>
</kw>
<msg timestamp="20201115 23:00:55.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.385" endtime="20201115 23:00:55.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.408" endtime="20201115 23:00:55.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.411" endtime="20201115 23:00:55.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.382" endtime="20201115 23:00:55.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.380" endtime="20201115 23:00:55.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.420" endtime="20201115 23:00:55.706"></status>
</kw>
<msg timestamp="20201115 23:00:55.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025171208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025281514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.419" endtime="20201115 23:00:55.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025171208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025281514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.710" endtime="20201115 23:00:55.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.718" endtime="20201115 23:00:55.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.416" endtime="20201115 23:00:55.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.414" endtime="20201115 23:00:55.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.725" level="INFO">${RESULT} = [{'time': 0.025281514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011030600000000099, 'source_diff': 0.00011030600000000099}, {'time': 0.025405486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:55.722" endtime="20201115 23:00:55.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.739" level="INFO">${ACCURACY} = {'diff': [0.00011030600000000099, 0.00010969400000000046, 0.00010984699999999972, 0.00011024999999999924, 0.00011001399999999856, 0.00010986099999999929, 0.00010983399999999963, 0.00010980500000000101...</msg>
<status status="PASS" starttime="20201115 23:00:55.726" endtime="20201115 23:00:55.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.744" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.743" endtime="20201115 23:00:55.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.746" level="INFO">VALUE: [0.00011030600000000099, 0.00010969400000000046, 0.00010984699999999972, 0.00011024999999999924, 0.00011001399999999856, 0.00010986099999999929, 0.00010983399999999963, 0.00010980500000000101, 0.00011001299999999908, 0.00011018000000000139, 0.00010984700000000319, 0.00011016700000000129, 0.00010984699999999972, 0.00010984699999999972, 0.00011051399999999906, 0.00011015299999999825, 0.00011002700000000212, 0.00011005500000000126, 0.00011001400000000203, 0.00011019400000000096, 0.00011001399999999856, 0.00010968100000000036, 0.00010966700000000079, 0.00010966700000000079, 0.00011036199999999927, 0.00010986099999999929, 0.00011033299999999718, 0.00011051399999999906, 0.00010999999999999899, 0.00011019500000000043, 0.00011051400000000253, 0.00011001400000000203, 0.00011001400000000203, 0.00010965300000000122, 0.00011000000000000246, 0.00010984699999999972, 0.00011033300000000065, 0.00010990300000000147, 0.00010984699999999972, 0.00011052799999999863, 0.00011034700000000022, 0.00010968100000000036, 0.00010986199999999877, 0.0001103479999999997, 0.00011034700000000022, 0.00010984699999999972, 0.00011034699999999675, 0.00011036099999999979, 0.00010987499999999886, 0.00011051400000000253]</msg>
<status status="PASS" starttime="20201115 23:00:55.745" endtime="20201115 23:00:55.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.740" endtime="20201115 23:00:55.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.750" endtime="20201115 23:00:55.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.753" endtime="20201115 23:00:55.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.751" endtime="20201115 23:00:55.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.748" endtime="20201115 23:00:55.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.379" endtime="20201115 23:00:55.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.377" endtime="20201115 23:00:55.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.376" endtime="20201115 23:00:55.774"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.776" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.785" endtime="20201115 23:00:55.805"></status>
</kw>
<msg timestamp="20201115 23:00:55.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.783" endtime="20201115 23:00:55.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.807" endtime="20201115 23:00:55.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.809" endtime="20201115 23:00:55.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.781" endtime="20201115 23:00:55.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.778" endtime="20201115 23:00:55.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.819" endtime="20201115 23:00:56.103"></status>
</kw>
<msg timestamp="20201115 23:00:56.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024450778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024561833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.817" endtime="20201115 23:00:56.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024450778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024561833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.107" endtime="20201115 23:00:56.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.116" endtime="20201115 23:00:56.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.814" endtime="20201115 23:00:56.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.812" endtime="20201115 23:00:56.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.122" level="INFO">${RESULT} = [{'time': 0.024561833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011105500000000226, 'source_diff': 0.00011105500000000226}, {'time': 0.024687875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:56.119" endtime="20201115 23:00:56.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.135" level="INFO">${ACCURACY} = {'diff': [0.00011105500000000226, 0.00011154200000000267, 0.00011095799999999781, 0.00011129199999999895, 0.00011082000000000106, 0.00011083400000000063, 0.0001113480000000007, 0.00011102699999999965,...</msg>
<status status="PASS" starttime="20201115 23:00:56.123" endtime="20201115 23:00:56.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.140" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.139" endtime="20201115 23:00:56.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.142" level="INFO">VALUE: [0.00011105500000000226, 0.00011154200000000267, 0.00011095799999999781, 0.00011129199999999895, 0.00011082000000000106, 0.00011083400000000063, 0.0001113480000000007, 0.00011102699999999965, 0.00011069399999999799, 0.00011086100000000029, 0.00011133300000000165, 0.00011152799999999963, 0.00011088899999999943, 0.00011087499999999986, 0.0001110280000000026, 0.0001108480000000002, 0.00011069400000000146, 0.00011147199999999788, 0.00011066599999999885, 0.00011151400000000006, 0.00011101400000000303, 0.00011122300000000057, 0.00011097300000000032, 0.00011101399999999956, 0.0001113480000000007, 0.00011152700000000015, 0.0001115549999999993, 0.00011084700000000072, 0.00011066599999999885, 0.00011086100000000029, 0.00011068099999999789, 0.00011152799999999963, 0.00011102799999999913, 0.00011118100000000186, 0.0001108480000000002, 0.00011151299999999711, 0.00011120800000000153, 0.00011112500000000011, 0.00011115300000000272, 0.00011068100000000136, 0.00011069500000000093, 0.00011066699999999832, 0.00011151400000000006, 0.0001108480000000002, 0.00011151300000000058, 0.00011152799999999963, 0.00011086100000000029, 0.0001114029999999995, 0.00011069499999999746, 0.00011133300000000165]</msg>
<status status="PASS" starttime="20201115 23:00:56.141" endtime="20201115 23:00:56.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.136" endtime="20201115 23:00:56.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.146" endtime="20201115 23:00:56.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.149" endtime="20201115 23:00:56.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.148" endtime="20201115 23:00:56.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.144" endtime="20201115 23:00:56.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.777" endtime="20201115 23:00:56.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.775" endtime="20201115 23:00:56.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.774" endtime="20201115 23:00:56.170"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.173" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.181" endtime="20201115 23:00:56.201"></status>
</kw>
<msg timestamp="20201115 23:00:56.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.179" endtime="20201115 23:00:56.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.202" endtime="20201115 23:00:56.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.205" endtime="20201115 23:00:56.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.177" endtime="20201115 23:00:56.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.174" endtime="20201115 23:00:56.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.215" endtime="20201115 23:00:56.500"></status>
</kw>
<msg timestamp="20201115 23:00:56.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024429194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024541764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.213" endtime="20201115 23:00:56.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024429194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024541764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.504" endtime="20201115 23:00:56.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.512" endtime="20201115 23:00:56.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.210" endtime="20201115 23:00:56.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.208" endtime="20201115 23:00:56.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.519" level="INFO">${RESULT} = [{'time': 0.024541764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011256999999999934, 'source_diff': 0.00011256999999999934}, {'time': 0.024662778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:56.515" endtime="20201115 23:00:56.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.532" level="INFO">${ACCURACY} = {'diff': [0.00011256999999999934, 0.00011248599999999845, 0.00011186100000000129, 0.00011218099999999939, 0.00011238900000000093, 0.00011166599999999985, 0.00011233300000000265, 0.00011166599999999985...</msg>
<status status="PASS" starttime="20201115 23:00:56.520" endtime="20201115 23:00:56.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.536" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.535" endtime="20201115 23:00:56.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.539" level="INFO">VALUE: [0.00011256999999999934, 0.00011248599999999845, 0.00011186100000000129, 0.00011218099999999939, 0.00011238900000000093, 0.00011166599999999985, 0.00011233300000000265, 0.00011166599999999985, 0.00011216699999999982, 0.00011165299999999975, 0.00011184699999999825, 0.00011188900000000043, 0.00011229100000000047, 0.00011217999999999992, 0.00011167999999999942, 0.00011201400000000056, 0.00011184700000000172, 0.00011168099999999889, 0.00011186099999999782, 0.00011201399999999709, 0.00011202800000000013, 0.00011234700000000222, 0.00011251299999999811, 0.0001117770000000004, 0.00011251400000000106, 0.00011184699999999825, 0.00011184700000000172, 0.00011218100000000286, 0.0001123480000000017, 0.00011252800000000063, 0.0001118480000000012, 0.00011170800000000203, 0.00011215300000000025, 0.00011167999999999942, 0.00011217999999999992, 0.0001124030000000005, 0.00011251400000000106, 0.00011201400000000056, 0.00011201400000000056, 0.00011186099999999782, 0.00011183300000000215, 0.00011201399999999709, 0.00011198600000000142, 0.00011238899999999746, 0.00011215300000000025, 0.00011169500000000193, 0.00011252799999999716, 0.00011200000000000099, 0.00011231999999999909, 0.00011165200000000028]</msg>
<status status="PASS" starttime="20201115 23:00:56.537" endtime="20201115 23:00:56.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.533" endtime="20201115 23:00:56.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.542" endtime="20201115 23:00:56.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.545" endtime="20201115 23:00:56.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.544" endtime="20201115 23:00:56.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.540" endtime="20201115 23:00:56.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.173" endtime="20201115 23:00:56.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.171" endtime="20201115 23:00:56.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.171" endtime="20201115 23:00:56.567"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.569" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.578" endtime="20201115 23:00:56.598"></status>
</kw>
<msg timestamp="20201115 23:00:56.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.576" endtime="20201115 23:00:56.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.599" endtime="20201115 23:00:56.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.602" endtime="20201115 23:00:56.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.574" endtime="20201115 23:00:56.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.571" endtime="20201115 23:00:56.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.611" endtime="20201115 23:00:56.898"></status>
</kw>
<msg timestamp="20201115 23:00:56.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024878833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024991958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.609" endtime="20201115 23:00:56.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024878833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024991958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.903" endtime="20201115 23:00:56.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.911" endtime="20201115 23:00:56.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.607" endtime="20201115 23:00:56.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.605" endtime="20201115 23:00:56.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.917" level="INFO">${RESULT} = [{'time': 0.024991958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011312500000000211, 'source_diff': 0.00011312500000000211}, {'time': 0.025115931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:56.914" endtime="20201115 23:00:56.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.930" level="INFO">${ACCURACY} = {'diff': [0.00011312500000000211, 0.00011336200000000227, 0.00011316700000000082, 0.00011288900000000143, 0.00011351399999999859, 0.00011301399999999809, 0.00011351399999999859, 0.00011269499999999946...</msg>
<status status="PASS" starttime="20201115 23:00:56.918" endtime="20201115 23:00:56.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.935" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.934" endtime="20201115 23:00:56.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.937" level="INFO">VALUE: [0.00011312500000000211, 0.00011336200000000227, 0.00011316700000000082, 0.00011288900000000143, 0.00011351399999999859, 0.00011301399999999809, 0.00011351399999999859, 0.00011269499999999946, 0.00011283299999999968, 0.00011336099999999932, 0.00011268099999999989, 0.00011301400000000156, 0.00011348600000000292, 0.00011316600000000135, 0.0001132220000000031, 0.00011316700000000082, 0.00011316700000000082, 0.00011333300000000018, 0.00011300000000000199, 0.00011349999999999902, 0.00011348699999999892, 0.00011284699999999925, 0.00011333300000000018, 0.00011316600000000135, 0.00011301400000000156, 0.00011283300000000315, 0.00011351399999999859, 0.00011356900000000086, 0.00011286100000000229, 0.0001130969999999995, 0.00011301400000000156, 0.00011319400000000049, 0.00011352799999999816, 0.00011318100000000039, 0.00011318100000000039, 0.00011268099999999989, 0.00011295899999999928, 0.00011280499999999707, 0.00011269399999999999, 0.00011318000000000092, 0.00011301399999999809, 0.00011286099999999882, 0.00011351400000000206, 0.00011302800000000113, 0.00011284699999999925, 0.00011286200000000177, 0.00011351400000000206, 0.00011284699999999925, 0.00011315200000000178, 0.00011266599999999738]</msg>
<status status="PASS" starttime="20201115 23:00:56.936" endtime="20201115 23:00:56.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.931" endtime="20201115 23:00:56.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.941" endtime="20201115 23:00:56.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.944" endtime="20201115 23:00:56.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.943" endtime="20201115 23:00:56.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.939" endtime="20201115 23:00:56.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.570" endtime="20201115 23:00:56.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.568" endtime="20201115 23:00:56.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.567" endtime="20201115 23:00:56.966"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.968" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.976" endtime="20201115 23:00:56.997"></status>
</kw>
<msg timestamp="20201115 23:00:56.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.975" endtime="20201115 23:00:56.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.998" endtime="20201115 23:00:57.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.001" endtime="20201115 23:00:57.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.972" endtime="20201115 23:00:57.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.970" endtime="20201115 23:00:57.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.010" endtime="20201115 23:00:57.295"></status>
</kw>
<msg timestamp="20201115 23:00:57.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025636194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02575075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:57.009" endtime="20201115 23:00:57.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025636194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02575075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:57.299" endtime="20201115 23:00:57.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.307" endtime="20201115 23:00:57.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.006" endtime="20201115 23:00:57.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.004" endtime="20201115 23:00:57.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.314" level="INFO">${RESULT} = [{'time': 0.02575075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001145559999999983, 'source_diff': 0.0001145559999999983}, {'time': 0.025871764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:57.311" endtime="20201115 23:00:57.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.329" level="INFO">${ACCURACY} = {'diff': [0.0001145559999999983, 0.00011433299999999771, 0.00011402799999999866, 0.00011452699999999968, 0.00011369400000000099, 0.0001137359999999997, 0.00011420800000000106, 0.00011401400000000256, ...</msg>
<status status="PASS" starttime="20201115 23:00:57.315" endtime="20201115 23:00:57.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.333" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.332" endtime="20201115 23:00:57.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.335" level="INFO">VALUE: [0.0001145559999999983, 0.00011433299999999771, 0.00011402799999999866, 0.00011452699999999968, 0.00011369400000000099, 0.0001137359999999997, 0.00011420800000000106, 0.00011401400000000256, 0.00011383300000000068, 0.00011380600000000102, 0.00011368099999999742, 0.00011416700000000182, 0.00011452699999999968, 0.00011418000000000192, 0.00011388900000000243, 0.00011443000000000217, 0.00011451399999999959, 0.00011434700000000075, 0.00011384700000000025, 0.00011402800000000213, 0.00011418099999999792, 0.00011416599999999888, 0.00011418000000000192, 0.00011365200000000228, 0.00011397200000000038, 0.00011368000000000142, 0.00011384700000000025, 0.00011384700000000025, 0.00011448600000000045, 0.00011368099999999742, 0.00011372200000000013, 0.00011399999999999952, 0.00011384700000000025, 0.00011433300000000118, 0.00011401399999999909, 0.00011383300000000068, 0.00011401399999999909, 0.00011426399999999934, 0.00011451399999999959, 0.00011451399999999959, 0.00011367999999999795, 0.00011381900000000111, 0.00011413899999999921, 0.00011366700000000132, 0.00011419500000000096, 0.00011399999999999605, 0.00011384799999999973, 0.00011386099999999982, 0.00011382000000000059, 0.00011433300000000118]</msg>
<status status="PASS" starttime="20201115 23:00:57.334" endtime="20201115 23:00:57.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.330" endtime="20201115 23:00:57.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.339" endtime="20201115 23:00:57.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.343" endtime="20201115 23:00:57.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.341" endtime="20201115 23:00:57.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.337" endtime="20201115 23:00:57.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.968" endtime="20201115 23:00:57.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.967" endtime="20201115 23:00:57.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.966" endtime="20201115 23:00:57.364"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.366" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.374" endtime="20201115 23:00:57.394"></status>
</kw>
<msg timestamp="20201115 23:00:57.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.373" endtime="20201115 23:00:57.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.396" endtime="20201115 23:00:57.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.398" endtime="20201115 23:00:57.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.370" endtime="20201115 23:00:57.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.368" endtime="20201115 23:00:57.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.407" endtime="20201115 23:00:57.693"></status>
</kw>
<msg timestamp="20201115 23:00:57.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024396264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.406" endtime="20201115 23:00:57.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024396264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.697" endtime="20201115 23:00:57.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.705" endtime="20201115 23:00:57.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.403" endtime="20201115 23:00:57.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.401" endtime="20201115 23:00:57.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.711" level="INFO">${RESULT} = [{'time': 0.024396264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011507000000000184, 'source_diff': 0.00011507000000000184}, {'time': 0.024520278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:57.708" endtime="20201115 23:00:57.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.725" level="INFO">${ACCURACY} = {'diff': [0.00011507000000000184, 0.00011484699999999778, 0.00011533400000000166, 0.00011552700000000068, 0.00011551300000000111, 0.00011469400000000199, 0.00011534700000000175, 0.00011550000000000102...</msg>
<status status="PASS" starttime="20201115 23:00:57.712" endtime="20201115 23:00:57.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.729" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.728" endtime="20201115 23:00:57.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.732" level="INFO">VALUE: [0.00011507000000000184, 0.00011484699999999778, 0.00011533400000000166, 0.00011552700000000068, 0.00011551300000000111, 0.00011469400000000199, 0.00011534700000000175, 0.00011550000000000102, 0.00011533299999999871, 0.00011516699999999935, 0.00011551400000000059, 0.00011519399999999902, 0.00011486099999999735, 0.00011550000000000102, 0.00011533299999999871, 0.00011467999999999895, 0.00011469499999999799, 0.00011501400000000009, 0.00011501399999999662, 0.00011468099999999842, 0.00011551400000000059, 0.00011520799999999859, 0.00011551400000000059, 0.00011533300000000218, 0.00011468000000000242, 0.00011468100000000189, 0.00011484800000000073, 0.00011486100000000082, 0.00011488899999999996, 0.00011500000000000052, 0.00011498599999999748, 0.00011550000000000102, 0.00011534699999999828, 0.00011468099999999842, 0.00011484700000000125, 0.00011540200000000056, 0.00011466700000000232, 0.00011487499999999692, 0.00011501300000000061, 0.00011551399999999712, 0.00011536100000000132, 0.00011501400000000009, 0.00011501400000000009, 0.00011550000000000102, 0.00011477799999999941, 0.00011534800000000123, 0.00011551300000000111, 0.00011517999999999945, 0.00011554199999999973, 0.0001148750000000004]</msg>
<status status="PASS" starttime="20201115 23:00:57.730" endtime="20201115 23:00:57.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.725" endtime="20201115 23:00:57.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.735" endtime="20201115 23:00:57.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.739" endtime="20201115 23:00:57.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.737" endtime="20201115 23:00:57.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.734" endtime="20201115 23:00:57.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.367" endtime="20201115 23:00:57.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.365" endtime="20201115 23:00:57.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.364" endtime="20201115 23:00:57.760"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.762" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.770" endtime="20201115 23:00:57.791"></status>
</kw>
<msg timestamp="20201115 23:00:57.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.769" endtime="20201115 23:00:57.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.792" endtime="20201115 23:00:57.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.795" endtime="20201115 23:00:57.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.766" endtime="20201115 23:00:57.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.764" endtime="20201115 23:00:57.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.804" endtime="20201115 23:00:58.089"></status>
</kw>
<msg timestamp="20201115 23:00:58.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024812875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024929208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.802" endtime="20201115 23:00:58.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024812875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024929208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.094" endtime="20201115 23:00:58.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.102" endtime="20201115 23:00:58.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.800" endtime="20201115 23:00:58.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.798" endtime="20201115 23:00:58.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.108" level="INFO">${RESULT} = [{'time': 0.024929208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011633299999999971, 'source_diff': 0.00011633299999999971}, {'time': 0.025053222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:58.105" endtime="20201115 23:00:58.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.122" level="INFO">${ACCURACY} = {'diff': [0.00011633299999999971, 0.00011567999999999995, 0.00011584699999999878, 0.00011601399999999762, 0.00011584700000000225, 0.00011651399999999812, 0.00011586199999999783, 0.00011634799999999876...</msg>
<status status="PASS" starttime="20201115 23:00:58.110" endtime="20201115 23:00:58.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.127" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.126" endtime="20201115 23:00:58.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.129" level="INFO">VALUE: [0.00011633299999999971, 0.00011567999999999995, 0.00011584699999999878, 0.00011601399999999762, 0.00011584700000000225, 0.00011651399999999812, 0.00011586199999999783, 0.00011634799999999876, 0.00011616600000000088, 0.00011616600000000088, 0.00011618000000000045, 0.00011634700000000275, 0.00011601400000000109, 0.00011583299999999921, 0.00011597300000000185, 0.00011569399999999952, 0.00011649999999999855, 0.00011567999999999995, 0.00011651399999999812, 0.00011567999999999995, 0.00011634699999999928, 0.00011636099999999885, 0.00011569500000000246, 0.00011633299999999971, 0.00011584800000000173, 0.00011601299999999815, 0.00011616600000000088, 0.00011651399999999812, 0.00011617999999999698, 0.00011584700000000225, 0.00011568100000000289, 0.00011581999999999912, 0.00011655500000000082, 0.00011565300000000028, 0.00011651400000000159, 0.00011649999999999855, 0.00011633299999999971, 0.00011584699999999878, 0.00011651400000000159, 0.00011608299999999946, 0.00011618099999999992, 0.00011640300000000103, 0.00011597200000000238, 0.00011648599999999898, 0.00011618000000000045, 0.00011616699999999688, 0.00011584700000000225, 0.00011566699999999985, 0.00011601400000000109, 0.00011601400000000109]</msg>
<status status="PASS" starttime="20201115 23:00:58.128" endtime="20201115 23:00:58.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.123" endtime="20201115 23:00:58.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.132" endtime="20201115 23:00:58.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.136" endtime="20201115 23:00:58.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.134" endtime="20201115 23:00:58.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.130" endtime="20201115 23:00:58.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.763" endtime="20201115 23:00:58.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.761" endtime="20201115 23:00:58.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.760" endtime="20201115 23:00:58.157"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.159" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.167" endtime="20201115 23:00:58.188"></status>
</kw>
<msg timestamp="20201115 23:00:58.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.166" endtime="20201115 23:00:58.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.189" endtime="20201115 23:00:58.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.192" endtime="20201115 23:00:58.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.163" endtime="20201115 23:00:58.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.161" endtime="20201115 23:00:58.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.201" endtime="20201115 23:00:58.487"></status>
</kw>
<msg timestamp="20201115 23:00:58.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024807333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024924583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.199" endtime="20201115 23:00:58.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024807333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024924583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.492" endtime="20201115 23:00:58.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.500" endtime="20201115 23:00:58.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.197" endtime="20201115 23:00:58.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.195" endtime="20201115 23:00:58.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.507" level="INFO">${RESULT} = [{'time': 0.024924583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001172499999999993, 'source_diff': 0.0001172499999999993}, {'time': 0.025054611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:58.504" endtime="20201115 23:00:58.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.520" level="INFO">${ACCURACY} = {'diff': [0.0001172499999999993, 0.00011734700000000028, 0.00011666700000000085, 0.00011752800000000216, 0.00011666700000000085, 0.00011684699999999978, 0.00011684799999999926, 0.00011679200000000098,...</msg>
<status status="PASS" starttime="20201115 23:00:58.508" endtime="20201115 23:00:58.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.525" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.524" endtime="20201115 23:00:58.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.527" level="INFO">VALUE: [0.0001172499999999993, 0.00011734700000000028, 0.00011666700000000085, 0.00011752800000000216, 0.00011666700000000085, 0.00011684699999999978, 0.00011684799999999926, 0.00011679200000000098, 0.00011697199999999991, 0.00011702800000000166, 0.00011697199999999991, 0.00011701399999999862, 0.00011684699999999978, 0.00011699999999999905, 0.00011682000000000012, 0.00011734799999999976, 0.00011751399999999912, 0.00011701399999999862, 0.00011668000000000095, 0.00011684699999999978, 0.00011702800000000166, 0.00011738900000000246, 0.00011719500000000049, 0.00011751400000000259, 0.00011666700000000085, 0.00011669400000000052, 0.00011701399999999862, 0.00011752800000000216, 0.00011684699999999978, 0.00011733300000000071, 0.00011699999999999905, 0.00011668100000000042, 0.00011748699999999945, 0.00011734700000000028, 0.00011734700000000028, 0.00011752799999999869, 0.0001170560000000008, 0.00011683300000000021, 0.00011699999999999905, 0.00011751399999999912, 0.00011719500000000049, 0.00011754099999999879, 0.00011716599999999841, 0.00011680500000000107, 0.00011702800000000166, 0.00011742999999999823, 0.00011729199999999801, 0.00011684700000000325, 0.00011752799999999869, 0.00011734700000000028]</msg>
<status status="PASS" starttime="20201115 23:00:58.526" endtime="20201115 23:00:58.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.521" endtime="20201115 23:00:58.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.530" endtime="20201115 23:00:58.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.533" endtime="20201115 23:00:58.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.532" endtime="20201115 23:00:58.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.528" endtime="20201115 23:00:58.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.160" endtime="20201115 23:00:58.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.158" endtime="20201115 23:00:58.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.157" endtime="20201115 23:00:58.555"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.557" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.565" endtime="20201115 23:00:58.586"></status>
</kw>
<msg timestamp="20201115 23:00:58.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.564" endtime="20201115 23:00:58.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.587" endtime="20201115 23:00:58.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.590" endtime="20201115 23:00:58.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.561" endtime="20201115 23:00:58.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.559" endtime="20201115 23:00:58.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.599" endtime="20201115 23:00:58.885"></status>
</kw>
<msg timestamp="20201115 23:00:58.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025358028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025475931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.597" endtime="20201115 23:00:58.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025358028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025475931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.889" endtime="20201115 23:00:58.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.897" endtime="20201115 23:00:58.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.595" endtime="20201115 23:00:58.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.593" endtime="20201115 23:00:58.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.904" level="INFO">${RESULT} = [{'time': 0.025475931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011790299999999906, 'source_diff': 0.00011790299999999906}, {'time': 0.025603014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:58.901" endtime="20201115 23:00:58.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.919" level="INFO">${ACCURACY} = {'diff': [0.00011790299999999906, 0.00011823600000000073, 0.00011766599999999891, 0.00011766599999999891, 0.00011836099999999738, 0.0001181950000000015, 0.00011818099999999845, 0.00011801399999999962,...</msg>
<status status="PASS" starttime="20201115 23:00:58.905" endtime="20201115 23:00:58.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.924" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.923" endtime="20201115 23:00:58.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.926" level="INFO">VALUE: [0.00011790299999999906, 0.00011823600000000073, 0.00011766599999999891, 0.00011766599999999891, 0.00011836099999999738, 0.0001181950000000015, 0.00011818099999999845, 0.00011801399999999962, 0.00011801399999999962, 0.00011786099999999688, 0.00011766599999999891, 0.00011766599999999891, 0.00011800000000000005, 0.00011768100000000142, 0.00011818100000000192, 0.00011851300000000065, 0.00011850000000000055, 0.0001185690000000024, 0.00011819399999999855, 0.00011834700000000128, 0.00011768000000000195, 0.00011837500000000042, 0.00011786099999999688, 0.00011836100000000085, 0.00011766699999999838, 0.00011768099999999795, 0.00011834800000000076, 0.00011801300000000015, 0.00011800000000000005, 0.00011798600000000048, 0.00011836100000000085, 0.00011831999999999815, 0.00011783400000000069, 0.00011833400000000119, 0.00011836100000000085, 0.00011834699999999782, 0.00011834700000000128, 0.00011818000000000245, 0.00011784700000000078, 0.00011818099999999845, 0.00011852799999999969, 0.00011783400000000069, 0.00011765199999999934, 0.00011819400000000202, 0.00011851300000000065, 0.00011834700000000128, 0.00011816599999999941, 0.00011802799999999919, 0.00011768099999999448, 0.00011818099999999498]</msg>
<status status="PASS" starttime="20201115 23:00:58.925" endtime="20201115 23:00:58.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.920" endtime="20201115 23:00:58.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.930" endtime="20201115 23:00:58.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.933" endtime="20201115 23:00:58.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.932" endtime="20201115 23:00:58.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.928" endtime="20201115 23:00:58.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.558" endtime="20201115 23:00:58.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.556" endtime="20201115 23:00:58.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.555" endtime="20201115 23:00:58.954"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.957" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.965" endtime="20201115 23:00:58.985"></status>
</kw>
<msg timestamp="20201115 23:00:58.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.963" endtime="20201115 23:00:58.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.986" endtime="20201115 23:00:58.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.989" endtime="20201115 23:00:58.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.961" endtime="20201115 23:00:58.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.958" endtime="20201115 23:00:58.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.998" endtime="20201115 23:00:59.285"></status>
</kw>
<msg timestamp="20201115 23:00:59.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024447264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024566153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.997" endtime="20201115 23:00:59.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024447264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024566153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.289" endtime="20201115 23:00:59.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.297" endtime="20201115 23:00:59.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.994" endtime="20201115 23:00:59.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.993" endtime="20201115 23:00:59.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.304" level="INFO">${RESULT} = [{'time': 0.024566153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001188890000000005, 'source_diff': 0.0001188890000000005}, {'time': 0.024690181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:59.301" endtime="20201115 23:00:59.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.317" level="INFO">${ACCURACY} = {'diff': [0.0001188890000000005, 0.00011868099999999895, 0.00011879100000000004, 0.00011884699999999832, 0.00011934699999999882, 0.00011934700000000228, 0.0001188890000000005, 0.00011949999999999808, ...</msg>
<status status="PASS" starttime="20201115 23:00:59.305" endtime="20201115 23:00:59.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.322" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.320" endtime="20201115 23:00:59.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.324" level="INFO">VALUE: [0.0001188890000000005, 0.00011868099999999895, 0.00011879100000000004, 0.00011884699999999832, 0.00011934699999999882, 0.00011934700000000228, 0.0001188890000000005, 0.00011949999999999808, 0.00011952800000000069, 0.00011868099999999895, 0.00011951399999999765, 0.00011904199999999976, 0.00011867999999999948, 0.00011934699999999882, 0.00011883299999999875, 0.00011901400000000062, 0.00011951399999999765, 0.00011897299999999791, 0.00011950000000000155, 0.00011934700000000228, 0.00011883300000000221, 0.00011867999999999948, 0.00011886100000000135, 0.0001187370000000007, 0.00011949999999999808, 0.00011933399999999872, 0.00011901400000000062, 0.00011866699999999938, 0.00011951299999999818, 0.0001191110000000016, 0.00011899999999999758, 0.00011918099999999945, 0.00011898599999999801, 0.00011866699999999938, 0.00011934799999999829, 0.00011861099999999763, 0.00011867999999999948, 0.00011867999999999948, 0.00011897200000000191, 0.00011952800000000069, 0.00011881899999999918, 0.00011918099999999945, 0.0001191950000000025, 0.00011948699999999798, 0.00011866599999999991, 0.00011916599999999694, 0.00011952800000000069, 0.00011901400000000062, 0.00011918099999999945, 0.00011898599999999801]</msg>
<status status="PASS" starttime="20201115 23:00:59.323" endtime="20201115 23:00:59.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.318" endtime="20201115 23:00:59.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.327" endtime="20201115 23:00:59.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.330" endtime="20201115 23:00:59.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.329" endtime="20201115 23:00:59.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.325" endtime="20201115 23:00:59.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.957" endtime="20201115 23:00:59.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.955" endtime="20201115 23:00:59.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.955" endtime="20201115 23:00:59.352"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.354" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.388" endtime="20201115 23:00:59.408"></status>
</kw>
<msg timestamp="20201115 23:00:59.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.386" endtime="20201115 23:00:59.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.409" endtime="20201115 23:00:59.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.412" endtime="20201115 23:00:59.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.383" endtime="20201115 23:00:59.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.356" endtime="20201115 23:00:59.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.421" endtime="20201115 23:00:59.707"></status>
</kw>
<msg timestamp="20201115 23:00:59.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049743958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049863708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.419" endtime="20201115 23:00:59.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049743958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049863708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.711" endtime="20201115 23:00:59.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.720" endtime="20201115 23:00:59.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.417" endtime="20201115 23:00:59.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.415" endtime="20201115 23:00:59.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.728" level="INFO">${RESULT} = [{'time': 0.049863708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001197500000000018, 'source_diff': 0.0001197500000000018}, {'time': 0.049993736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:59.724" endtime="20201115 23:00:59.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.742" level="INFO">${ACCURACY} = {'diff': [0.0001197500000000018, 0.00012002799999999425, 0.00012001399999999468, 0.00012016699999999741, 0.00012000000000000205, 0.00012001399999999468, 0.00012051400000000212, 0.00012019400000000402,...</msg>
<status status="PASS" starttime="20201115 23:00:59.729" endtime="20201115 23:00:59.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.746" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.745" endtime="20201115 23:00:59.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.749" level="INFO">VALUE: [0.0001197500000000018, 0.00012002799999999425, 0.00012001399999999468, 0.00012016699999999741, 0.00012000000000000205, 0.00012001399999999468, 0.00012051400000000212, 0.00012019400000000402, 0.00012000000000000205, 0.00012058399999999997, 0.00012017999999999751, 0.00012049999999999561, 0.00012050000000000255, 0.000119777999999994, 0.00012016700000000435, 0.00012000000000000205, 0.00012036099999999939, 0.00011984699999999932, 0.00011968000000000395, 0.0001197370000000017, 0.00012033300000000025, 0.00011973599999999529, 0.0001201950000000035, 0.00012055500000000136, 0.00011972200000000266, 0.00012051399999999518, 0.00012034699999999982, 0.00011984699999999932, 0.00011983299999999975, 0.00011969499999999605, 0.00012001400000000162, 0.000119695000000003, 0.00011969399999999658, 0.00011984699999999932, 0.00012016599999999794, 0.00012034699999999982, 0.00011983299999999975, 0.00012018099999999698, 0.00012045899999999637, 0.00012018099999999698, 0.00011967999999999701, 0.00012034699999999982, 0.00012034699999999982, 0.0001198050000000006, 0.00011967999999999701, 0.00012016699999999741, 0.00012018099999999698, 0.00011984699999999932, 0.00012013899999999827, 0.00011968100000000342]</msg>
<status status="PASS" starttime="20201115 23:00:59.747" endtime="20201115 23:00:59.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.743" endtime="20201115 23:00:59.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.752" endtime="20201115 23:00:59.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.756" endtime="20201115 23:00:59.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.754" endtime="20201115 23:00:59.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.750" endtime="20201115 23:00:59.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.355" endtime="20201115 23:00:59.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.353" endtime="20201115 23:00:59.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.352" endtime="20201115 23:00:59.777"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.780" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.789" endtime="20201115 23:00:59.810"></status>
</kw>
<msg timestamp="20201115 23:00:59.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.787" endtime="20201115 23:00:59.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.811" endtime="20201115 23:00:59.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.814" endtime="20201115 23:00:59.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.784" endtime="20201115 23:00:59.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.782" endtime="20201115 23:00:59.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.824" endtime="20201115 23:01:00.136"></status>
</kw>
<msg timestamp="20201115 23:01:00.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025139819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025260708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.822" endtime="20201115 23:01:00.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025139819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025260708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.140" endtime="20201115 23:01:00.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.148" endtime="20201115 23:01:00.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.819" endtime="20201115 23:01:00.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.817" endtime="20201115 23:01:00.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.155" level="INFO">${RESULT} = [{'time': 0.025260708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012088899999999903, 'source_diff': 0.00012088899999999903}, {'time': 0.025389736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:00.151" endtime="20201115 23:01:00.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.168" level="INFO">${ACCURACY} = {'diff': [0.00012088899999999903, 0.00012117999999999851, 0.00012151399999999965, 0.00012061099999999964, 0.00012101400000000262, 0.00012145899999999737, 0.00012116699999999841, 0.00012067999999999801...</msg>
<status status="PASS" starttime="20201115 23:01:00.156" endtime="20201115 23:01:00.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.173" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.172" endtime="20201115 23:01:00.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.175" level="INFO">VALUE: [0.00012088899999999903, 0.00012117999999999851, 0.00012151399999999965, 0.00012061099999999964, 0.00012101400000000262, 0.00012145899999999737, 0.00012116699999999841, 0.00012067999999999801, 0.00012099999999999958, 0.00012090300000000206, 0.00012133299999999778, 0.00012118099999999798, 0.00012086099999999989, 0.00012136100000000039, 0.00012136199999999986, 0.00012150000000000008, 0.00012101399999999915, 0.00012087499999999946, 0.00012115299999999884, 0.0001213189999999982, 0.00012151399999999965, 0.00012151399999999965, 0.00012151399999999965, 0.00012118100000000145, 0.00012067999999999801, 0.00012088899999999903, 0.00012083300000000075, 0.0001214029999999991, 0.00012134699999999735, 0.00012134700000000082, 0.00012156899999999846, 0.00012083400000000022, 0.00012101299999999968, 0.00012072200000000019, 0.00012151399999999965, 0.00012068000000000148, 0.00012119500000000102, 0.00012133300000000125, 0.00012082000000000065, 0.00012084799999999979, 0.00012087499999999946, 0.00012133300000000125, 0.00012131900000000168, 0.00012069500000000052, 0.0001207090000000001, 0.00012152799999999922, 0.00012101400000000262, 0.00012118099999999798, 0.00012154100000000279, 0.00012149999999999661]</msg>
<status status="PASS" starttime="20201115 23:01:00.174" endtime="20201115 23:01:00.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.169" endtime="20201115 23:01:00.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.179" endtime="20201115 23:01:00.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.182" endtime="20201115 23:01:00.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.181" endtime="20201115 23:01:00.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.177" endtime="20201115 23:01:00.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.781" endtime="20201115 23:01:00.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.779" endtime="20201115 23:01:00.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.778" endtime="20201115 23:01:00.203"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.206" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.214" endtime="20201115 23:01:00.236"></status>
</kw>
<msg timestamp="20201115 23:01:00.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.212" endtime="20201115 23:01:00.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.237" endtime="20201115 23:01:00.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.240" endtime="20201115 23:01:00.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.210" endtime="20201115 23:01:00.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.208" endtime="20201115 23:01:00.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.249" endtime="20201115 23:01:00.534"></status>
</kw>
<msg timestamp="20201115 23:01:00.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025425444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025547681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.247" endtime="20201115 23:01:00.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025425444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025547681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.538" endtime="20201115 23:01:00.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.547" endtime="20201115 23:01:00.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.245" endtime="20201115 23:01:00.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.243" endtime="20201115 23:01:00.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.553" level="INFO">${RESULT} = [{'time': 0.025547681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012223700000000073, 'source_diff': 0.00012223700000000073}, {'time': 0.025674694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:00.550" endtime="20201115 23:01:00.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.568" level="INFO">${ACCURACY} = {'diff': [0.00012223700000000073, 0.00012168000000000248, 0.0001221799999999995, 0.00012216699999999941, 0.00012166699999999891, 0.0001223189999999992, 0.00012201400000000015, 0.00012234700000000182, ...</msg>
<status status="PASS" starttime="20201115 23:01:00.554" endtime="20201115 23:01:00.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.573" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.572" endtime="20201115 23:01:00.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.575" level="INFO">VALUE: [0.00012223700000000073, 0.00012168000000000248, 0.0001221799999999995, 0.00012216699999999941, 0.00012166699999999891, 0.0001223189999999992, 0.00012201400000000015, 0.00012234700000000182, 0.0001223480000000013, 0.00012184700000000132, 0.00012195800000000187, 0.00012219399999999908, 0.00012201400000000015, 0.00012163899999999978, 0.00012198599999999754, 0.00012251400000000065, 0.00012202700000000025, 0.00012168099999999848, 0.00012201299999999721, 0.00012201400000000015, 0.0001219579999999984, 0.00012168099999999848, 0.00012168099999999848, 0.00012194500000000177, 0.00012201400000000015, 0.00012251400000000065, 0.00012200000000000058, 0.00012258400000000197, 0.00012169399999999858, 0.00012234700000000182, 0.00012186100000000089, 0.00012182000000000165, 0.00012218099999999898, 0.00012183400000000122, 0.00012201300000000068, 0.00012238900000000053, 0.00012250000000000108, 0.00012167999999999901, 0.00012165300000000281, 0.00012234699999999835, 0.00012251400000000065, 0.00012177799999999947, 0.00012198599999999754, 0.00012202799999999972, 0.00012184700000000132, 0.00012186100000000089, 0.0001225280000000037, 0.00012234699999999488, 0.00012216699999999941, 0.00012241699999999966]</msg>
<status status="PASS" starttime="20201115 23:01:00.574" endtime="20201115 23:01:00.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.569" endtime="20201115 23:01:00.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.579" endtime="20201115 23:01:00.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.582" endtime="20201115 23:01:00.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.581" endtime="20201115 23:01:00.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.577" endtime="20201115 23:01:00.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.206" endtime="20201115 23:01:00.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.204" endtime="20201115 23:01:00.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.204" endtime="20201115 23:01:00.603"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.606" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.614" endtime="20201115 23:01:00.634"></status>
</kw>
<msg timestamp="20201115 23:01:00.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.612" endtime="20201115 23:01:00.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.636" endtime="20201115 23:01:00.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.638" endtime="20201115 23:01:00.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.610" endtime="20201115 23:01:00.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.608" endtime="20201115 23:01:00.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.648" endtime="20201115 23:01:00.933"></status>
</kw>
<msg timestamp="20201115 23:01:00.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024522708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024645611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.646" endtime="20201115 23:01:00.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024522708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024645611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.938" endtime="20201115 23:01:00.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.946" endtime="20201115 23:01:00.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.644" endtime="20201115 23:01:00.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.642" endtime="20201115 23:01:00.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.953" level="INFO">${RESULT} = [{'time': 0.024645611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001229030000000006, 'source_diff': 0.0001229030000000006}, {'time': 0.024775611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:00.949" endtime="20201115 23:01:00.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.967" level="INFO">${ACCURACY} = {'diff': [0.0001229030000000006, 0.00012266699999999991, 0.00012301400000000115, 0.0001229579999999994, 0.00012284700000000232, 0.00012333399999999925, 0.00012266699999999991, 0.00012334700000000282, ...</msg>
<status status="PASS" starttime="20201115 23:01:00.954" endtime="20201115 23:01:00.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.972" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.971" endtime="20201115 23:01:00.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.974" level="INFO">VALUE: [0.0001229030000000006, 0.00012266699999999991, 0.00012301400000000115, 0.0001229579999999994, 0.00012284700000000232, 0.00012333399999999925, 0.00012266699999999991, 0.00012334700000000282, 0.0001232909999999976, 0.00012301400000000115, 0.00012269499999999905, 0.00012333299999999978, 0.00012350000000000208, 0.00012301399999999768, 0.00012352700000000175, 0.00012304100000000082, 0.00012352800000000122, 0.00012265299999999688, 0.00012263900000000078, 0.0001227090000000021, 0.00012333399999999925, 0.00012268100000000295, 0.0001234999999999986, 0.00012334699999999935, 0.00012266600000000044, 0.00012334699999999935, 0.00012319400000000008, 0.0001227229999999982, 0.00012279200000000004, 0.00012316699999999695, 0.00012336099999999892, 0.00012301300000000168, 0.00012301400000000115, 0.0001234999999999986, 0.00012352799999999775, 0.0001228059999999996, 0.00012356900000000046, 0.00012268099999999948, 0.00012302800000000072, 0.00012347299999999894, 0.00012347199999999947, 0.0001234999999999986, 0.00012301399999999768, 0.00012268099999999948, 0.00012284799999999832, 0.00012336100000000239, 0.00012302800000000072, 0.00012336099999999892, 0.00012334699999999935, 0.00012279100000000057]</msg>
<status status="PASS" starttime="20201115 23:01:00.973" endtime="20201115 23:01:00.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.968" endtime="20201115 23:01:00.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.977" endtime="20201115 23:01:00.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.981" endtime="20201115 23:01:01.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.979" endtime="20201115 23:01:01.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.976" endtime="20201115 23:01:01.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.606" endtime="20201115 23:01:01.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.604" endtime="20201115 23:01:01.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.604" endtime="20201115 23:01:01.002"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.004" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.013" endtime="20201115 23:01:01.033"></status>
</kw>
<msg timestamp="20201115 23:01:01.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.011" endtime="20201115 23:01:01.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.035" endtime="20201115 23:01:01.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.037" endtime="20201115 23:01:01.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.009" endtime="20201115 23:01:01.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.006" endtime="20201115 23:01:01.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.047" endtime="20201115 23:01:01.334"></status>
</kw>
<msg timestamp="20201115 23:01:01.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024570139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.045" endtime="20201115 23:01:01.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024570139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.338" endtime="20201115 23:01:01.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.347" endtime="20201115 23:01:01.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.042" endtime="20201115 23:01:01.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.041" endtime="20201115 23:01:01.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.354" level="INFO">${RESULT} = [{'time': 0.024693847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012370800000000015, 'source_diff': 0.00012370800000000015}, {'time': 0.024826861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:01.351" endtime="20201115 23:01:01.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.378" level="INFO">${ACCURACY} = {'diff': [0.00012370800000000015, 0.00012384699999999985, 0.00012420900000000012, 0.00012400000000000258, 0.00012434799999999982, 0.00012418100000000099, 0.0001245129999999997, 0.00012451399999999918,...</msg>
<status status="PASS" starttime="20201115 23:01:01.355" endtime="20201115 23:01:01.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.388" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.386" endtime="20201115 23:01:01.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.394" level="INFO">VALUE: [0.00012370800000000015, 0.00012384699999999985, 0.00012420900000000012, 0.00012400000000000258, 0.00012434799999999982, 0.00012418100000000099, 0.0001245129999999997, 0.00012451399999999918, 0.0001236939999999971, 0.00012384700000000332, 0.00012452800000000222, 0.00012433300000000078, 0.00012424999999999936, 0.00012418100000000099, 0.00012420800000000065, 0.00012419400000000108, 0.00012451399999999918, 0.000123680000000001, 0.00012384699999999985, 0.00012369500000000005, 0.00012424999999999936, 0.00012368100000000048, 0.00012365300000000135, 0.000123680000000001, 0.00012451400000000265, 0.00012419400000000108, 0.00012384699999999985, 0.00012434700000000035, 0.00012419500000000055, 0.00012369500000000005, 0.00012368100000000048, 0.0001238190000000007, 0.00012416599999999847, 0.00012402800000000172, 0.00012384699999999985, 0.00012451400000000265, 0.00012402800000000172, 0.00012401399999999868, 0.0001239999999999991, 0.00012454099999999885, 0.00012384699999999985, 0.00012417999999999804, 0.00012451399999999918, 0.00012418100000000099, 0.00012368099999999702, 0.00012413900000000228, 0.0001244999999999996, 0.00012369400000000058, 0.000123680000000001, 0.0001245559999999979]</msg>
<status status="PASS" starttime="20201115 23:01:01.391" endtime="20201115 23:01:01.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.381" endtime="20201115 23:01:01.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.401" endtime="20201115 23:01:01.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.409" endtime="20201115 23:01:01.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.405" endtime="20201115 23:01:01.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.397" endtime="20201115 23:01:01.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.005" endtime="20201115 23:01:01.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.003" endtime="20201115 23:01:01.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.002" endtime="20201115 23:01:01.435"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.440" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.459" endtime="20201115 23:01:01.481"></status>
</kw>
<msg timestamp="20201115 23:01:01.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.455" endtime="20201115 23:01:01.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.483" endtime="20201115 23:01:01.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.486" endtime="20201115 23:01:01.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.449" endtime="20201115 23:01:01.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.445" endtime="20201115 23:01:01.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.496" endtime="20201115 23:01:01.781"></status>
</kw>
<msg timestamp="20201115 23:01:01.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043784514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043909306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.493" endtime="20201115 23:01:01.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043784514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043909306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.786" endtime="20201115 23:01:01.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.794" endtime="20201115 23:01:01.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.491" endtime="20201115 23:01:01.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.489" endtime="20201115 23:01:01.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.801" level="INFO">${RESULT} = [{'time': 0.043909306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001247920000000055, 'source_diff': 0.0001247920000000055}, {'time': 0.044044278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:01.797" endtime="20201115 23:01:01.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.815" level="INFO">${ACCURACY} = {'diff': [0.0001247920000000055, 0.00012516700000000242, 0.00012468099999999455, 0.00012534799999999735, 0.0001248329999999978, 0.00012484699999999738, 0.00012548600000000104, 0.00012519400000000208, ...</msg>
<status status="PASS" starttime="20201115 23:01:01.802" endtime="20201115 23:01:01.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.819" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.818" endtime="20201115 23:01:01.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.822" level="INFO">VALUE: [0.0001247920000000055, 0.00012516700000000242, 0.00012468099999999455, 0.00012534799999999735, 0.0001248329999999978, 0.00012484699999999738, 0.00012548600000000104, 0.00012519400000000208, 0.00012552799999999975, 0.00012483400000000422, 0.00012518100000000199, 0.00012536100000000439, 0.0001250130000000002, 0.00012536100000000439, 0.00012501399999999968, 0.00012484699999999738, 0.00012501399999999968, 0.00012534700000000482, 0.00012530599999999864, 0.00012537499999999702, 0.00012480499999999867, 0.00012552799999999975, 0.00012534699999999788, 0.00012534699999999788, 0.00012501399999999968, 0.00012516699999999548, 0.00012501399999999968, 0.00012547199999999453, 0.0001248329999999978, 0.00012552799999999975, 0.00012467999999999507, 0.00012484699999999738, 0.0001248329999999978, 0.00012472200000000072, 0.00012486200000000336, 0.00012466700000000192, 0.00012493000000000226, 0.00012497200000000097, 0.00012466600000000244, 0.00012519400000000208, 0.00012516699999999548, 0.00012484699999999738, 0.00012551400000000018, 0.0001250000000000001, 0.00012519400000000208, 0.0001251800000000025, 0.0001253329999999983, 0.00012536100000000439, 0.00012466699999999498, 0.00012490200000000312]</msg>
<status status="PASS" starttime="20201115 23:01:01.820" endtime="20201115 23:01:01.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.815" endtime="20201115 23:01:01.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.825" endtime="20201115 23:01:01.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.829" endtime="20201115 23:01:01.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.827" endtime="20201115 23:01:01.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.823" endtime="20201115 23:01:01.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.442" endtime="20201115 23:01:01.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.437" endtime="20201115 23:01:01.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.436" endtime="20201115 23:01:01.850"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.853" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.861" endtime="20201115 23:01:01.883"></status>
</kw>
<msg timestamp="20201115 23:01:01.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.859" endtime="20201115 23:01:01.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.885" endtime="20201115 23:01:01.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.888" endtime="20201115 23:01:01.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.857" endtime="20201115 23:01:01.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.855" endtime="20201115 23:01:01.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.897" endtime="20201115 23:01:02.189"></status>
</kw>
<msg timestamp="20201115 23:01:02.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025971708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026097583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.896" endtime="20201115 23:01:02.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025971708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026097583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.198" endtime="20201115 23:01:02.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.216" endtime="20201115 23:01:02.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.893" endtime="20201115 23:01:02.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.891" endtime="20201115 23:01:02.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.230" level="INFO">${RESULT} = [{'time': 0.026097583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012587500000000099, 'source_diff': 0.00012587500000000099}, {'time': 0.026230597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:02.223" endtime="20201115 23:01:02.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.262" level="INFO">${ACCURACY} = {'diff': [0.00012587500000000099, 0.00012651400000000118, 0.00012652800000000075, 0.00012568100000000249, 0.00012618099999999952, 0.00012584700000000185, 0.00012569499999999859, 0.0001256939999999991,...</msg>
<status status="PASS" starttime="20201115 23:01:02.232" endtime="20201115 23:01:02.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.272" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.269" endtime="20201115 23:01:02.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.274" level="INFO">VALUE: [0.00012587500000000099, 0.00012651400000000118, 0.00012652800000000075, 0.00012568100000000249, 0.00012618099999999952, 0.00012584700000000185, 0.00012569499999999859, 0.0001256939999999991, 0.00012566599999999997, 0.00012567999999999954, 0.00012570800000000215, 0.00012601400000000068, 0.00012634699999999888, 0.00012568099999999902, 0.00012613899999999734, 0.00012586099999999795, 0.00012583300000000228, 0.00012618000000000004, 0.000125680000000003, 0.00012586099999999795, 0.00012652800000000075, 0.0001261529999999969, 0.00012634800000000182, 0.00012633300000000278, 0.00012584699999999838, 0.0001258329999999988, 0.00012634700000000235, 0.0001261529999999969, 0.00012649999999999814, 0.0001265000000000016, 0.00012602700000000078, 0.00012605499999999992, 0.00012637500000000149, 0.0001265139999999977, 0.0001256939999999991, 0.00012634700000000235, 0.00012584700000000185, 0.00012651400000000118, 0.00012604099999999688, 0.0001265000000000016, 0.00012601400000000068, 0.00012651400000000118, 0.000125680000000003, 0.0001258329999999988, 0.00012562499999999727, 0.00012580599999999914, 0.00012572199999999478, 0.00012619400000000308, 0.00012569399999999564, 0.00012602800000000025]</msg>
<status status="PASS" starttime="20201115 23:01:02.273" endtime="20201115 23:01:02.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.264" endtime="20201115 23:01:02.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.277" endtime="20201115 23:01:02.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.281" endtime="20201115 23:01:02.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.279" endtime="20201115 23:01:02.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.276" endtime="20201115 23:01:02.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.853" endtime="20201115 23:01:02.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.851" endtime="20201115 23:01:02.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.850" endtime="20201115 23:01:02.302"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.304" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.313" endtime="20201115 23:01:02.334"></status>
</kw>
<msg timestamp="20201115 23:01:02.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.311" endtime="20201115 23:01:02.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.336" endtime="20201115 23:01:02.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.338" endtime="20201115 23:01:02.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.309" endtime="20201115 23:01:02.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.306" endtime="20201115 23:01:02.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.347" endtime="20201115 23:01:02.632"></status>
</kw>
<msg timestamp="20201115 23:01:02.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024905069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025032306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.346" endtime="20201115 23:01:02.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024905069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025032306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.637" endtime="20201115 23:01:02.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.645" endtime="20201115 23:01:02.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.343" endtime="20201115 23:01:02.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.342" endtime="20201115 23:01:02.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.651" level="INFO">${RESULT} = [{'time': 0.025032306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012723700000000226, 'source_diff': 0.00012723700000000226}, {'time': 0.025164347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:02.648" endtime="20201115 23:01:02.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.664" level="INFO">${ACCURACY} = {'diff': [0.00012723700000000226, 0.00012716600000000147, 0.0001275139999999987, 0.00012702799999999778, 0.00012701400000000168, 0.00012718100000000052, 0.00012734799999999935, 0.00012668100000000002,...</msg>
<status status="PASS" starttime="20201115 23:01:02.652" endtime="20201115 23:01:02.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.669" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.668" endtime="20201115 23:01:02.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.671" level="INFO">VALUE: [0.00012723700000000226, 0.00012716600000000147, 0.0001275139999999987, 0.00012702799999999778, 0.00012701400000000168, 0.00012718100000000052, 0.00012734799999999935, 0.00012668100000000002, 0.0001275130000000027, 0.0001270139999999982, 0.00012662499999999827, 0.00012751400000000218, 0.00012701400000000168, 0.00012736099999999945, 0.00012716700000000095, 0.00012663899999999784, 0.00012666600000000097, 0.00012734699999999988, 0.00012718000000000104, 0.00012672199999999925, 0.00012668100000000002, 0.00012718100000000052, 0.00012749999999999914, 0.0001273200000000002, 0.0001267910000000011, 0.00012702799999999778, 0.00012702799999999778, 0.00012668000000000054, 0.00012681900000000024, 0.0001273330000000003, 0.00012718100000000052, 0.00012684800000000232, 0.00012686099999999895, 0.00012699999999999864, 0.00012688900000000156, 0.00012690299999999766, 0.00012666700000000045, 0.0001268329999999998, 0.00012733399999999978, 0.0001275269999999988, 0.00012734700000000335, 0.00012666600000000097, 0.00012668000000000054, 0.00012734699999999988, 0.00012666700000000045, 0.00012668100000000002, 0.0001270000000000021, 0.0001271800000000045, 0.00012684699999999938, 0.00012684699999999938]</msg>
<status status="PASS" starttime="20201115 23:01:02.670" endtime="20201115 23:01:02.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.665" endtime="20201115 23:01:02.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.675" endtime="20201115 23:01:02.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.679" endtime="20201115 23:01:02.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.677" endtime="20201115 23:01:02.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.673" endtime="20201115 23:01:02.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.305" endtime="20201115 23:01:02.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.303" endtime="20201115 23:01:02.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.302" endtime="20201115 23:01:02.700"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.702" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.710" endtime="20201115 23:01:02.731"></status>
</kw>
<msg timestamp="20201115 23:01:02.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.709" endtime="20201115 23:01:02.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.732" endtime="20201115 23:01:02.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.735" endtime="20201115 23:01:02.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.706" endtime="20201115 23:01:02.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.704" endtime="20201115 23:01:02.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.744" endtime="20201115 23:01:03.030"></status>
</kw>
<msg timestamp="20201115 23:01:03.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024365903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024494153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.742" endtime="20201115 23:01:03.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024365903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024494153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.034" endtime="20201115 23:01:03.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.042" endtime="20201115 23:01:03.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.740" endtime="20201115 23:01:03.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.738" endtime="20201115 23:01:03.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.049" level="INFO">${RESULT} = [{'time': 0.024494153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001282499999999999, 'source_diff': 0.0001282499999999999}, {'time': 0.024628181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:03.045" endtime="20201115 23:01:03.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.062" level="INFO">${ACCURACY} = {'diff': [0.0001282499999999999, 0.00012769500000000059, 0.00012818100000000152, 0.00012767999999999807, 0.00012852799999999928, 0.00012767999999999807, 0.0001276529999999984, 0.00012783299999999734, ...</msg>
<status status="PASS" starttime="20201115 23:01:03.050" endtime="20201115 23:01:03.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.066" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.065" endtime="20201115 23:01:03.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.069" level="INFO">VALUE: [0.0001282499999999999, 0.00012769500000000059, 0.00012818100000000152, 0.00012767999999999807, 0.00012852799999999928, 0.00012767999999999807, 0.0001276529999999984, 0.00012783299999999734, 0.00012834700000000088, 0.00012797299999999998, 0.00012786099999999995, 0.00012784700000000038, 0.0001281940000000016, 0.00012834700000000088, 0.00012802799999999878, 0.00012786099999999995, 0.00012818100000000152, 0.00012852800000000275, 0.0001280139999999992, 0.00012780500000000167, 0.00012852799999999928, 0.00012850000000000014, 0.00012769500000000059, 0.00012818100000000152, 0.00012820900000000066, 0.00012802800000000225, 0.00012766699999999798, 0.00012801299999999974, 0.0001285139999999997, 0.00012786099999999995, 0.00012768100000000102, 0.0001285269999999998, 0.00012769500000000059, 0.00012819500000000109, 0.00012768100000000102, 0.00012836100000000045, 0.0001278330000000008, 0.0001280139999999992, 0.00012836100000000045, 0.00012770900000000016, 0.00012769500000000059, 0.00012820800000000118, 0.00012851300000000024, 0.0001285139999999997, 0.00012787499999999952, 0.00012836099999999698, 0.00012818100000000152, 0.00012786099999999995, 0.0001285139999999997, 0.00012766700000000145]</msg>
<status status="PASS" starttime="20201115 23:01:03.067" endtime="20201115 23:01:03.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.063" endtime="20201115 23:01:03.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.072" endtime="20201115 23:01:03.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.076" endtime="20201115 23:01:03.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.074" endtime="20201115 23:01:03.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.071" endtime="20201115 23:01:03.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.703" endtime="20201115 23:01:03.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.701" endtime="20201115 23:01:03.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.700" endtime="20201115 23:01:03.097"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.099" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.108" endtime="20201115 23:01:03.128"></status>
</kw>
<msg timestamp="20201115 23:01:03.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.106" endtime="20201115 23:01:03.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.130" endtime="20201115 23:01:03.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.133" endtime="20201115 23:01:03.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.104" endtime="20201115 23:01:03.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.101" endtime="20201115 23:01:03.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.142" endtime="20201115 23:01:03.427"></status>
</kw>
<msg timestamp="20201115 23:01:03.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024312708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024442, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:03.140" endtime="20201115 23:01:03.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024312708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024442, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:03.431" endtime="20201115 23:01:03.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.439" endtime="20201115 23:01:03.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.137" endtime="20201115 23:01:03.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.136" endtime="20201115 23:01:03.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.446" level="INFO">${RESULT} = [{'time': 0.024442, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001292919999999996, 'source_diff': 0.0001292919999999996}, {'time': 0.024577972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:03.442" endtime="20201115 23:01:03.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.459" level="INFO">${ACCURACY} = {'diff': [0.0001292919999999996, 0.00012884700000000138, 0.00012936100000000145, 0.0001294859999999981, 0.00012902799999999978, 0.00012952800000000028, 0.0001295140000000007, 0.00012895800000000193, 0...</msg>
<status status="PASS" starttime="20201115 23:01:03.447" endtime="20201115 23:01:03.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.463" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.462" endtime="20201115 23:01:03.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.466" level="INFO">VALUE: [0.0001292919999999996, 0.00012884700000000138, 0.00012936100000000145, 0.0001294859999999981, 0.00012902799999999978, 0.00012952800000000028, 0.0001295140000000007, 0.00012895800000000193, 0.0001288469999999979, 0.00012912500000000077, 0.00012884700000000138, 0.00012909700000000163, 0.0001288469999999979, 0.00012934800000000135, 0.00012869399999999864, 0.00012951299999999777, 0.0001291940000000026, 0.00012933299999999884, 0.00012900000000000064, 0.0001289720000000015, 0.00012918099999999905, 0.00012918099999999905, 0.0001288200000000017, 0.00012915200000000043, 0.00012902799999999978, 0.0001295560000000029, 0.0001293469999999984, 0.00012869500000000159, 0.00012866699999999898, 0.00012900000000000064, 0.0001293339999999983, 0.00012917999999999957, 0.0001288890000000001, 0.00012917999999999957, 0.00012949999999999767, 0.00012902799999999978, 0.00012918100000000252, 0.00012918099999999905, 0.00012949999999999767, 0.00012868000000000254, 0.0001290140000000002, 0.00012933299999999884, 0.00012919500000000209, 0.0001288330000000018, 0.00012936100000000145, 0.0001295140000000007, 0.00012873600000000082, 0.0001286110000000007, 0.0001286659999999995, 0.0001293469999999984]</msg>
<status status="PASS" starttime="20201115 23:01:03.465" endtime="20201115 23:01:03.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.460" endtime="20201115 23:01:03.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.470" endtime="20201115 23:01:03.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.473" endtime="20201115 23:01:03.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.472" endtime="20201115 23:01:03.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.468" endtime="20201115 23:01:03.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.100" endtime="20201115 23:01:03.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.098" endtime="20201115 23:01:03.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.097" endtime="20201115 23:01:03.494"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.497" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.505" endtime="20201115 23:01:03.527"></status>
</kw>
<msg timestamp="20201115 23:01:03.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.503" endtime="20201115 23:01:03.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.529" endtime="20201115 23:01:03.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.531" endtime="20201115 23:01:03.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.501" endtime="20201115 23:01:03.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.499" endtime="20201115 23:01:03.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.540" endtime="20201115 23:01:03.826"></status>
</kw>
<msg timestamp="20201115 23:01:03.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025235708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025366292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.539" endtime="20201115 23:01:03.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025235708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025366292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.830" endtime="20201115 23:01:03.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.838" endtime="20201115 23:01:03.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.536" endtime="20201115 23:01:03.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.534" endtime="20201115 23:01:03.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.845" level="INFO">${RESULT} = [{'time': 0.025366292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013058399999999956, 'source_diff': 0.00013058399999999956}, {'time': 0.025511306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:03.841" endtime="20201115 23:01:03.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.859" level="INFO">${ACCURACY} = {'diff': [0.00013058399999999956, 0.00013034800000000235, 0.0001303469999999994, 0.00013001399999999774, 0.0001298469999999989, 0.0001305140000000017, 0.00012997199999999903, 0.00013019499999999962, 0...</msg>
<status status="PASS" starttime="20201115 23:01:03.846" endtime="20201115 23:01:03.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.864" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.863" endtime="20201115 23:01:03.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.866" level="INFO">VALUE: [0.00013058399999999956, 0.00013034800000000235, 0.0001303469999999994, 0.00013001399999999774, 0.0001298469999999989, 0.0001305140000000017, 0.00012997199999999903, 0.00013019499999999962, 0.00012969499999999912, 0.00012966699999999998, 0.00013019400000000014, 0.00013023599999999885, 0.00012969399999999964, 0.00012969499999999912, 0.0001302089999999992, 0.0001303469999999994, 0.00012969499999999912, 0.00013034800000000235, 0.0001305270000000018, 0.00012968000000000007, 0.00013019399999999667, 0.0001305140000000017, 0.00013034700000000288, 0.00013018100000000005, 0.0001300140000000012, 0.00012986100000000195, 0.00012983299999999934, 0.00013036100000000245, 0.00012987500000000152, 0.0001301530000000009, 0.00013045799999999996, 0.00013033400000000278, 0.0001305140000000017, 0.00013001300000000174, 0.00012968000000000007, 0.00013001399999999774, 0.0001300140000000012, 0.0001298469999999989, 0.00013016700000000048, 0.00013052800000000128, 0.0001299859999999986, 0.00012981899999999977, 0.000130166000000001, 0.00013016699999999354, 0.00013023699999999833, 0.00012986100000000195, 0.00013018100000000005, 0.00013012499999999483, 0.00012991700000000023, 0.0001305279999999978]</msg>
<status status="PASS" starttime="20201115 23:01:03.865" endtime="20201115 23:01:03.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.860" endtime="20201115 23:01:03.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.870" endtime="20201115 23:01:03.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.873" endtime="20201115 23:01:03.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.871" endtime="20201115 23:01:03.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.868" endtime="20201115 23:01:03.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.497" endtime="20201115 23:01:03.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.495" endtime="20201115 23:01:03.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.495" endtime="20201115 23:01:03.894"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.896" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.905" endtime="20201115 23:01:03.927"></status>
</kw>
<msg timestamp="20201115 23:01:03.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.903" endtime="20201115 23:01:03.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.928" endtime="20201115 23:01:03.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.931" endtime="20201115 23:01:03.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.901" endtime="20201115 23:01:03.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.898" endtime="20201115 23:01:03.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.940" endtime="20201115 23:01:04.225"></status>
</kw>
<msg timestamp="20201115 23:01:04.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024544458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024675889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.938" endtime="20201115 23:01:04.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024544458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024675889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.229" endtime="20201115 23:01:04.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.238" endtime="20201115 23:01:04.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.936" endtime="20201115 23:01:04.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.934" endtime="20201115 23:01:04.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.244" level="INFO">${RESULT} = [{'time': 0.024675889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013143099999999783, 'source_diff': 0.00013143099999999783}, {'time': 0.024817944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:04.241" endtime="20201115 23:01:04.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.257" level="INFO">${ACCURACY} = {'diff': [0.00013143099999999783, 0.00013137500000000302, 0.00013118099999999758, 0.00013134799999999988, 0.0001310270000000023, 0.00013101399999999874, 0.00013100000000000264, 0.0001306249999999988, ...</msg>
<status status="PASS" starttime="20201115 23:01:04.245" endtime="20201115 23:01:04.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.262" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.261" endtime="20201115 23:01:04.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.264" level="INFO">VALUE: [0.00013143099999999783, 0.00013137500000000302, 0.00013118099999999758, 0.00013134799999999988, 0.0001310270000000023, 0.00013101399999999874, 0.00013100000000000264, 0.0001306249999999988, 0.00013122200000000028, 0.00013151399999999924, 0.00013151399999999924, 0.00013149999999999967, 0.0001306660000000015, 0.0001313470000000004, 0.00013102800000000178, 0.00013116700000000148, 0.0001311530000000019, 0.00013151399999999924, 0.00013088899999999862, 0.0001308469999999999, 0.00013066599999999803, 0.0001315279999999988, 0.0001306799999999976, 0.0001313470000000004, 0.00013086099999999948, 0.00013104100000000188, 0.00013134799999999988, 0.00013133300000000084, 0.00013068000000000107, 0.00013116700000000148, 0.00013082000000000024, 0.00013068100000000055, 0.00013099999999999917, 0.00013116700000000148, 0.00013088899999999862, 0.0001308469999999999, 0.0001307080000000002, 0.00013137499999999955, 0.00013101399999999874, 0.00013077800000000153, 0.0001311249999999993, 0.00013066700000000098, 0.00013143099999999783, 0.00013133299999999737, 0.0001315279999999988, 0.00013105599999999745, 0.00013083300000000034, 0.00013097199999999656, 0.0001313479999999964, 0.00013119400000000114]</msg>
<status status="PASS" starttime="20201115 23:01:04.263" endtime="20201115 23:01:04.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.258" endtime="20201115 23:01:04.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.268" endtime="20201115 23:01:04.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.271" endtime="20201115 23:01:04.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.269" endtime="20201115 23:01:04.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.266" endtime="20201115 23:01:04.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.897" endtime="20201115 23:01:04.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.895" endtime="20201115 23:01:04.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.894" endtime="20201115 23:01:04.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.400" endtime="20201115 23:01:04.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.297" endtime="20201115 23:01:04.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.295" endtime="20201115 23:01:04.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.294" endtime="20201115 23:01:04.317"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:00:24.328" endtime="20201115 23:01:04.318" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:42.803" endtime="20201115 23:01:04.323"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:59:40.784" endtime="20201115 23:01:04.335"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
