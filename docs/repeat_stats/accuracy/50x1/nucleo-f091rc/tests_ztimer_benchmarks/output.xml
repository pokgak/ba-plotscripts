<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201117 14:46:49.816" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:50.388" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:50.396" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:51.560" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:50.386" endtime="20201117 14:46:51.561"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.563" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:51.562" endtime="20201117 14:46:51.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:50.385" endtime="20201117 14:46:51.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:51.567" endtime="20201117 14:46:51.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.565" endtime="20201117 14:46:51.751"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.763" endtime="20201117 14:46:51.778"></status>
</kw>
<msg timestamp="20201117 14:46:51.778" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201117 14:46:51.762" endtime="20201117 14:46:51.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.781" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201117 14:46:51.779" endtime="20201117 14:46:51.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.784" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:51.782" endtime="20201117 14:46:51.785"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:51.760" endtime="20201117 14:46:51.785"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:51.757" endtime="20201117 14:46:51.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.756" endtime="20201117 14:46:51.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:51.790" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:51.789" endtime="20201117 14:46:51.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.787" endtime="20201117 14:46:51.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.755" endtime="20201117 14:46:51.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.754" endtime="20201117 14:46:51.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.792" endtime="20201117 14:46:51.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.753" endtime="20201117 14:46:51.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.795" endtime="20201117 14:46:51.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.751" endtime="20201117 14:46:51.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:50.383" endtime="20201117 14:46:51.798"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:51.804" endtime="20201117 14:46:51.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.803" endtime="20201117 14:46:51.826"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.858" endtime="20201117 14:46:51.877"></status>
</kw>
<msg timestamp="20201117 14:46:51.878" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:51.852" endtime="20201117 14:46:51.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.884" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:51.880" endtime="20201117 14:46:51.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.890" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:51.886" endtime="20201117 14:46:51.891"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:51.847" endtime="20201117 14:46:51.892"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:51.841" endtime="20201117 14:46:51.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.837" endtime="20201117 14:46:51.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:51.903" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:51.901" endtime="20201117 14:46:51.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.896" endtime="20201117 14:46:51.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.835" endtime="20201117 14:46:51.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.834" endtime="20201117 14:46:51.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.906" endtime="20201117 14:46:51.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.831" endtime="20201117 14:46:51.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.827" endtime="20201117 14:46:51.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.801" endtime="20201117 14:46:51.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.928" endtime="20201117 14:46:51.940"></status>
</kw>
<msg timestamp="20201117 14:46:51.940" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:51.925" endtime="20201117 14:46:51.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.943" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:51.942" endtime="20201117 14:46:51.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.944" endtime="20201117 14:46:51.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.919" endtime="20201117 14:46:51.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.915" endtime="20201117 14:46:51.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.951" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201117 14:46:51.950" endtime="20201117 14:46:51.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.953" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201117 14:46:51.952" endtime="20201117 14:46:51.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.948" endtime="20201117 14:46:51.954"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:51.798" endtime="20201117 14:46:51.955" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:49.930" endtime="20201117 14:46:51.958"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.011" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:52.019" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:53.179" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:52.010" endtime="20201117 14:46:53.179"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.182" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:53.180" endtime="20201117 14:46:53.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.009" endtime="20201117 14:46:53.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:53.185" endtime="20201117 14:46:53.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.183" endtime="20201117 14:46:53.408"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.420" endtime="20201117 14:46:53.434"></status>
</kw>
<msg timestamp="20201117 14:46:53.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201117 14:46:53.419" endtime="20201117 14:46:53.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.437" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201117 14:46:53.436" endtime="20201117 14:46:53.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.441" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:53.439" endtime="20201117 14:46:53.441"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:53.416" endtime="20201117 14:46:53.442"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:53.414" endtime="20201117 14:46:53.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.413" endtime="20201117 14:46:53.442"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:53.446" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:53.445" endtime="20201117 14:46:53.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.443" endtime="20201117 14:46:53.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.412" endtime="20201117 14:46:53.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.411" endtime="20201117 14:46:53.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.448" endtime="20201117 14:46:53.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.410" endtime="20201117 14:46:53.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.453" endtime="20201117 14:46:53.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.409" endtime="20201117 14:46:53.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.007" endtime="20201117 14:46:53.458"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:53.473" endtime="20201117 14:46:53.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.468" endtime="20201117 14:46:53.496"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.524" endtime="20201117 14:46:53.543"></status>
</kw>
<msg timestamp="20201117 14:46:53.544" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.521" endtime="20201117 14:46:53.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.550" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.546" endtime="20201117 14:46:53.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.553" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:53.551" endtime="20201117 14:46:53.553"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:53.514" endtime="20201117 14:46:53.554"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:53.509" endtime="20201117 14:46:53.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.506" endtime="20201117 14:46:53.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:53.559" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:53.558" endtime="20201117 14:46:53.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.556" endtime="20201117 14:46:53.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.505" endtime="20201117 14:46:53.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.503" endtime="20201117 14:46:53.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.560" endtime="20201117 14:46:53.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.501" endtime="20201117 14:46:53.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.497" endtime="20201117 14:46:53.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.465" endtime="20201117 14:46:53.563"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.567" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.576" endtime="20201117 14:46:53.592"></status>
</kw>
<msg timestamp="20201117 14:46:53.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.573" endtime="20201117 14:46:53.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.594" endtime="20201117 14:46:53.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.596" endtime="20201117 14:46:53.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.571" endtime="20201117 14:46:53.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.569" endtime="20201117 14:46:53.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.605" endtime="20201117 14:46:53.904"></status>
</kw>
<msg timestamp="20201117 14:46:53.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.095206958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.095229667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:53.604" endtime="20201117 14:46:53.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.095206958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.095229667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:53.909" endtime="20201117 14:46:53.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.917" endtime="20201117 14:46:53.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.601" endtime="20201117 14:46:53.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.599" endtime="20201117 14:46:53.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:53.924" level="INFO">${RESULT} = [{'time': 0.095229667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2709000000009638e-05, 'source_diff': 2.2709000000009638e-05}, {'time': 0.095274708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:53.921" endtime="20201117 14:46:53.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:53.938" level="INFO">${ACCURACY} = {'time': [0.095229667, 0.095274708, 0.095315736, 0.095356694, 0.095396694, 0.095435681, 0.095481694, 0.095525708, 0.095562694, 0.095609708, 0.095652722, 0.095696722, 0.095742722, 0.095781722, 0.095822...</msg>
<status status="PASS" starttime="20201117 14:46:53.925" endtime="20201117 14:46:53.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.942" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:46:53.941" endtime="20201117 14:46:53.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.944" level="INFO">VALUE: [2.2709000000009638e-05, 2.311100000000621e-05, 2.2986000000002615e-05, 2.2680000000011025e-05, 2.3000000000009124e-05, 2.3083999999992666e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.308300000000707e-05, 2.288899999999816e-05, 2.2846999999992512e-05, 2.3082999999993192e-05, 2.2750000000001935e-05, 2.3082999999993192e-05, 2.3278000000001575e-05, 2.336099999999952e-05, 2.3346999999993012e-05, 2.256900000000006e-05, 2.2763999999994566e-05, 2.2569999999999535e-05, 2.3402999999991292e-05, 2.26810000000105e-05, 2.308300000000707e-05, 2.3097999999999175e-05, 2.290300000000467e-05, 2.2999999999995246e-05, 2.3083999999992666e-05, 2.270899999999576e-05, 2.3250000000002435e-05, 2.27369999999949e-05, 2.2582999999992692e-05, 2.2944000000010845e-05, 2.283299999999988e-05, 2.287500000000553e-05, 2.286099999999902e-05, 2.3250000000002435e-05, 2.3415999999998327e-05, 2.3000000000009124e-05, 2.30969999999997e-05, 2.3443999999997467e-05, 2.318099999999712e-05, 2.3014000000001755e-05, 2.3179999999997647e-05, 2.34169999999978e-05, 2.3181000000011e-05, 2.318099999999712e-05, 2.2902000000005196e-05, 2.3250000000002435e-05, 2.2750000000001935e-05, 2.3084000000006544e-05]</msg>
<status status="PASS" starttime="20201117 14:46:53.943" endtime="20201117 14:46:53.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.938" endtime="20201117 14:46:53.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.948" endtime="20201117 14:46:53.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:53.951" endtime="20201117 14:46:53.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.949" endtime="20201117 14:46:53.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.946" endtime="20201117 14:46:53.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.567" endtime="20201117 14:46:53.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.565" endtime="20201117 14:46:53.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.564" endtime="20201117 14:46:53.972"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.974" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.982" endtime="20201117 14:46:54.000"></status>
</kw>
<msg timestamp="20201117 14:46:54.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.981" endtime="20201117 14:46:54.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.001" endtime="20201117 14:46:54.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.004" endtime="20201117 14:46:54.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.978" endtime="20201117 14:46:54.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.976" endtime="20201117 14:46:54.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.012" endtime="20201117 14:46:54.307"></status>
</kw>
<msg timestamp="20201117 14:46:54.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024662722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.011" endtime="20201117 14:46:54.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024662722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.317" endtime="20201117 14:46:54.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.336" endtime="20201117 14:46:54.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.008" endtime="20201117 14:46:54.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.007" endtime="20201117 14:46:54.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:54.350" level="INFO">${RESULT} = [{'time': 0.024685764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3041999999997426e-05, 'source_diff': 2.3041999999997426e-05}, {'time': 0.024729806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:54.342" endtime="20201117 14:46:54.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:54.374" level="INFO">${ACCURACY} = {'time': [0.024685764, 0.024729806, 0.024775778, 0.024812778, 0.024857792, 0.024896792, 0.024933806, 0.024974819, 0.025012806, 0.025052806, 0.025099819, 0.025138833, 0.025181819, 0.025226847, 0.025272...</msg>
<status status="PASS" starttime="20201117 14:46:54.352" endtime="20201117 14:46:54.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.378" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:46:54.377" endtime="20201117 14:46:54.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.381" level="INFO">VALUE: [2.3041999999997426e-05, 2.2542000000000395e-05, 2.3083999999999605e-05, 2.287500000000206e-05, 2.2847999999998925e-05, 2.3070000000000035e-05, 2.3083999999999605e-05, 2.2776999999998132e-05, 2.34169999999978e-05, 2.266700000000052e-05, 2.2999999999998716e-05, 2.3415999999998327e-05, 2.3166000000001546e-05, 2.336099999999952e-05, 2.2916000000001296e-05, 2.284699999999945e-05, 2.3235999999999396e-05, 2.262499999999834e-05, 2.258299999999963e-05, 2.291700000000077e-05, 2.318100000000059e-05, 2.3014000000001755e-05, 2.345899999999998e-05, 2.316700000000102e-05, 2.281900000000031e-05, 2.2750000000001935e-05, 2.341700000000127e-05, 2.2833999999999355e-05, 2.3263999999998536e-05, 2.287500000000206e-05, 2.2500000000001685e-05, 2.3042000000000895e-05, 2.34169999999978e-05, 2.3347999999999425e-05, 2.3277999999998106e-05, 2.29169999999973e-05, 2.284699999999945e-05, 2.2916000000001296e-05, 2.283299999999988e-05, 2.3430000000001366e-05, 2.331900000000081e-05, 2.308300000000013e-05, 2.341700000000127e-05, 2.3000000000002185e-05, 2.256900000000006e-05, 2.34169999999978e-05, 2.318100000000059e-05, 2.337499999999909e-05, 2.306900000000056e-05, 2.256900000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:46:54.380" endtime="20201117 14:46:54.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.375" endtime="20201117 14:46:54.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.384" endtime="20201117 14:46:54.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.387" endtime="20201117 14:46:54.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.386" endtime="20201117 14:46:54.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.382" endtime="20201117 14:46:54.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.975" endtime="20201117 14:46:54.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.973" endtime="20201117 14:46:54.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.972" endtime="20201117 14:46:54.409"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.411" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.419" endtime="20201117 14:46:54.435"></status>
</kw>
<msg timestamp="20201117 14:46:54.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.418" endtime="20201117 14:46:54.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.437" endtime="20201117 14:46:54.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.439" endtime="20201117 14:46:54.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.415" endtime="20201117 14:46:54.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.413" endtime="20201117 14:46:54.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.449" endtime="20201117 14:46:54.736"></status>
</kw>
<msg timestamp="20201117 14:46:54.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024908708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024931903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.448" endtime="20201117 14:46:54.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024908708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024931903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.740" endtime="20201117 14:46:54.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.749" endtime="20201117 14:46:54.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.445" endtime="20201117 14:46:54.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.443" endtime="20201117 14:46:54.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:54.755" level="INFO">${RESULT} = [{'time': 0.024931903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319499999999669e-05, 'source_diff': 2.319499999999669e-05}, {'time': 0.024975931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:54.752" endtime="20201117 14:46:54.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:54.769" level="INFO">${ACCURACY} = {'time': [0.024931903, 0.024975931, 0.025016917, 0.025058931, 0.025101931, 0.025146931, 0.025186931, 0.025231986, 0.025268944, 0.025315958, 0.025354958, 0.025395972, 0.025442028, 0.025483986, 0.025523...</msg>
<status status="PASS" starttime="20201117 14:46:54.756" endtime="20201117 14:46:54.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.774" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:46:54.773" endtime="20201117 14:46:54.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.777" level="INFO">VALUE: [2.319499999999669e-05, 2.3097999999999175e-05, 2.2749999999998466e-05, 2.3097999999999175e-05, 2.29030000000012e-05, 2.2819999999999785e-05, 2.3249999999998966e-05, 2.312500000000231e-05, 2.32770000000021e-05, 2.2930000000000866e-05, 2.3166000000001546e-05, 2.2665999999997577e-05, 2.3070000000000035e-05, 2.341700000000127e-05, 2.287499999999859e-05, 2.308300000000013e-05, 2.3042000000000895e-05, 2.30969999999997e-05, 2.306900000000056e-05, 2.284699999999945e-05, 2.256900000000006e-05, 2.340299999999823e-05, 2.2819999999999785e-05, 2.258299999999963e-05, 2.34169999999978e-05, 2.3320000000000285e-05, 2.2598000000002144e-05, 2.2569999999999535e-05, 2.3499999999999216e-05, 2.287499999999859e-05, 2.2584000000002574e-05, 2.268100000000009e-05, 2.3263999999998536e-05, 2.2749999999998466e-05, 2.308300000000013e-05, 2.3249999999998966e-05, 2.308300000000013e-05, 2.2929999999997397e-05, 2.3166000000001546e-05, 2.2514000000001255e-05, 2.313900000000188e-05, 2.2749999999998466e-05, 2.34030000000017e-05, 2.281900000000031e-05, 2.306900000000056e-05, 2.309700000000317e-05, 2.3249999999998966e-05, 2.34169999999978e-05, 2.2972000000003046e-05, 2.2750000000001935e-05]</msg>
<status status="PASS" starttime="20201117 14:46:54.775" endtime="20201117 14:46:54.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.770" endtime="20201117 14:46:54.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.780" endtime="20201117 14:46:54.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.784" endtime="20201117 14:46:54.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.783" endtime="20201117 14:46:54.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.779" endtime="20201117 14:46:54.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.412" endtime="20201117 14:46:54.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.410" endtime="20201117 14:46:54.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.409" endtime="20201117 14:46:54.805"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.808" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.816" endtime="20201117 14:46:54.831"></status>
</kw>
<msg timestamp="20201117 14:46:54.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.814" endtime="20201117 14:46:54.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.833" endtime="20201117 14:46:54.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.835" endtime="20201117 14:46:54.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.812" endtime="20201117 14:46:54.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.810" endtime="20201117 14:46:54.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.844" endtime="20201117 14:46:55.143"></status>
</kw>
<msg timestamp="20201117 14:46:55.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024063125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024086486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.843" endtime="20201117 14:46:55.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024063125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024086486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.152" endtime="20201117 14:46:55.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.168" endtime="20201117 14:46:55.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.840" endtime="20201117 14:46:55.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.838" endtime="20201117 14:46:55.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:55.175" level="INFO">${RESULT} = [{'time': 0.024086486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.336099999999952e-05, 'source_diff': 2.336099999999952e-05}, {'time': 0.024128486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:55.172" endtime="20201117 14:46:55.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:55.188" level="INFO">${ACCURACY} = {'time': [0.024086486, 0.024128486, 0.024167514, 0.0242145, 0.024254514, 0.024299514, 0.024345514, 0.024387514, 0.024434528, 0.024473542, 0.024515528, 0.024553569, 0.024600542, 0.024643569, 0.02468155...</msg>
<status status="PASS" starttime="20201117 14:46:55.176" endtime="20201117 14:46:55.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.193" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:46:55.192" endtime="20201117 14:46:55.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.195" level="INFO">VALUE: [2.336099999999952e-05, 2.288900000000163e-05, 2.284699999999945e-05, 2.308300000000013e-05, 2.3264000000002005e-05, 2.2750000000001935e-05, 2.258299999999963e-05, 2.308300000000013e-05, 2.29030000000012e-05, 2.2848000000002394e-05, 2.2736000000002365e-05, 2.30969999999997e-05, 2.2749999999998466e-05, 2.287500000000206e-05, 2.2833999999999355e-05, 2.3068999999997092e-05, 2.2749999999998466e-05, 2.3292000000001145e-05, 2.288900000000163e-05, 2.2514000000001255e-05, 2.3415999999998327e-05, 2.2471999999999076e-05, 2.3249999999998966e-05, 2.2763999999998036e-05, 2.3249999999998966e-05, 2.340299999999823e-05, 2.316699999999755e-05, 2.283299999999988e-05, 2.288900000000163e-05, 2.266700000000052e-05, 2.3014000000001755e-05, 2.331900000000081e-05, 2.341700000000127e-05, 2.3013999999998286e-05, 2.344500000000041e-05, 2.318100000000059e-05, 2.3348000000002894e-05, 2.2749999999998466e-05, 2.3070000000000035e-05, 2.2944000000000436e-05, 2.283299999999988e-05, 2.308300000000013e-05, 2.2749999999998466e-05, 2.256900000000006e-05, 2.258299999999963e-05, 2.25969999999992e-05, 2.2750000000001935e-05, 2.2958000000000006e-05, 2.313899999999841e-05, 2.2666000000001046e-05]</msg>
<status status="PASS" starttime="20201117 14:46:55.194" endtime="20201117 14:46:55.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.189" endtime="20201117 14:46:55.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.198" endtime="20201117 14:46:55.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:55.202" endtime="20201117 14:46:55.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.200" endtime="20201117 14:46:55.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.197" endtime="20201117 14:46:55.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.808" endtime="20201117 14:46:55.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.807" endtime="20201117 14:46:55.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.806" endtime="20201117 14:46:55.223"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.225" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.233" endtime="20201117 14:46:55.250"></status>
</kw>
<msg timestamp="20201117 14:46:55.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.232" endtime="20201117 14:46:55.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.251" endtime="20201117 14:46:55.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.254" endtime="20201117 14:46:55.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.229" endtime="20201117 14:46:55.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.227" endtime="20201117 14:46:55.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.263" endtime="20201117 14:46:55.549"></status>
</kw>
<msg timestamp="20201117 14:46:55.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024610667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02463325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:46:55.262" endtime="20201117 14:46:55.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024610667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02463325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:46:55.553" endtime="20201117 14:46:55.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.561" endtime="20201117 14:46:55.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.259" endtime="20201117 14:46:55.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.258" endtime="20201117 14:46:55.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:55.568" level="INFO">${RESULT} = [{'time': 0.02463325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.258299999999963e-05, 'source_diff': 2.258299999999963e-05}, {'time': 0.024672208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:46:55.564" endtime="20201117 14:46:55.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:55.581" level="INFO">${ACCURACY} = {'time': [0.02463325, 0.024672208, 0.024713222, 0.024757222, 0.024798222, 0.024844236, 0.024887236, 0.024926236, 0.024963236, 0.025008264, 0.02504625, 0.02509125, 0.025135264, 0.025180264, 0.025221264...</msg>
<status status="PASS" starttime="20201117 14:46:55.569" endtime="20201117 14:46:55.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.585" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:46:55.584" endtime="20201117 14:46:55.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.588" level="INFO">VALUE: [2.258299999999963e-05, 2.2500000000001685e-05, 2.2764000000001505e-05, 2.3249999999998966e-05, 2.256900000000006e-05, 2.25969999999992e-05, 2.258299999999963e-05, 2.34030000000017e-05, 2.2999999999998716e-05, 2.29169999999973e-05, 2.315299999999798e-05, 2.2985999999999146e-05, 2.308300000000013e-05, 2.3250000000002435e-05, 2.341700000000127e-05, 2.2500000000001685e-05, 2.3028000000001325e-05, 2.294499999999991e-05, 2.2486000000002115e-05, 2.34169999999978e-05, 2.3333999999999855e-05, 2.2930000000000866e-05, 2.2819999999999785e-05, 2.256900000000006e-05, 2.3415999999998327e-05, 2.3304999999997772e-05, 2.2929999999997397e-05, 2.3070000000000035e-05, 2.3415999999998327e-05, 2.281900000000031e-05, 2.2915999999997827e-05, 2.3166000000001546e-05, 2.266700000000052e-05, 2.2486000000002115e-05, 2.2763999999998036e-05, 2.3249999999998966e-05, 2.291700000000077e-05, 2.2985999999999146e-05, 2.2750000000001935e-05, 2.341700000000127e-05, 2.2514000000001255e-05, 2.318100000000059e-05, 2.2764000000001505e-05, 2.3250000000002435e-05, 2.2763999999998036e-05, 2.3042000000000895e-05, 2.3401999999998757e-05, 2.334699999999995e-05, 2.2749999999998466e-05, 2.308300000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:46:55.586" endtime="20201117 14:46:55.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.582" endtime="20201117 14:46:55.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.591" endtime="20201117 14:46:55.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:55.595" endtime="20201117 14:46:55.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.593" endtime="20201117 14:46:55.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.589" endtime="20201117 14:46:55.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.226" endtime="20201117 14:46:55.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.224" endtime="20201117 14:46:55.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.223" endtime="20201117 14:46:55.616"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.618" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.626" endtime="20201117 14:46:55.642"></status>
</kw>
<msg timestamp="20201117 14:46:55.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.625" endtime="20201117 14:46:55.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.644" endtime="20201117 14:46:55.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.646" endtime="20201117 14:46:55.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.622" endtime="20201117 14:46:55.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.620" endtime="20201117 14:46:55.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.655" endtime="20201117 14:46:55.957"></status>
</kw>
<msg timestamp="20201117 14:46:55.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023790292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023812889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.654" endtime="20201117 14:46:55.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023790292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023812889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.966" endtime="20201117 14:46:55.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.982" endtime="20201117 14:46:55.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.651" endtime="20201117 14:46:55.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.649" endtime="20201117 14:46:55.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:55.989" level="INFO">${RESULT} = [{'time': 0.023812889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.25969999999992e-05, 'source_diff': 2.25969999999992e-05}, {'time': 0.023850833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:46:55.986" endtime="20201117 14:46:55.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:56.002" level="INFO">${ACCURACY} = {'time': [0.023812889, 0.023850833, 0.023890833, 0.023933847, 0.023971847, 0.024014861, 0.024052861, 0.024089903, 0.024127861, 0.024169903, 0.024213889, 0.024250875, 0.024292944, 0.024336903, 0.024380...</msg>
<status status="PASS" starttime="20201117 14:46:55.990" endtime="20201117 14:46:56.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.007" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:46:56.006" endtime="20201117 14:46:56.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.010" level="INFO">VALUE: [2.25969999999992e-05, 2.2818999999996842e-05, 2.3249999999998966e-05, 2.306900000000056e-05, 2.308300000000013e-05, 2.2763999999998036e-05, 2.2541999999996926e-05, 2.2792000000000645e-05, 2.2750000000001935e-05, 2.30969999999997e-05, 2.343099999999737e-05, 2.2500000000001685e-05, 2.3485999999999646e-05, 2.284699999999945e-05, 2.291700000000077e-05, 2.2999999999998716e-05, 2.29030000000012e-05, 2.3013999999998286e-05, 2.291700000000077e-05, 2.318100000000059e-05, 2.3235999999999396e-05, 2.315300000000145e-05, 2.2500000000001685e-05, 2.2540999999997452e-05, 2.2916000000001296e-05, 2.2666000000001046e-05, 2.284699999999945e-05, 2.3263999999998536e-05, 2.3263999999998536e-05, 2.2930000000000866e-05, 2.333300000000038e-05, 2.258299999999963e-05, 2.343100000000084e-05, 2.315299999999798e-05, 2.2514000000001255e-05, 2.291700000000077e-05, 2.2985999999999146e-05, 2.258299999999963e-05, 2.341700000000127e-05, 2.316700000000102e-05, 2.2833999999999355e-05, 2.291700000000077e-05, 2.2834000000002824e-05, 2.3098000000002644e-05, 2.2735999999998896e-05, 2.312499999999884e-05, 2.266700000000052e-05, 2.287500000000206e-05, 2.315300000000145e-05, 2.2665999999997577e-05]</msg>
<status status="PASS" starttime="20201117 14:46:56.008" endtime="20201117 14:46:56.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.003" endtime="20201117 14:46:56.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.013" endtime="20201117 14:46:56.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.017" endtime="20201117 14:46:56.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.015" endtime="20201117 14:46:56.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.012" endtime="20201117 14:46:56.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.619" endtime="20201117 14:46:56.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.617" endtime="20201117 14:46:56.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.616" endtime="20201117 14:46:56.038"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.040" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.048" endtime="20201117 14:46:56.065"></status>
</kw>
<msg timestamp="20201117 14:46:56.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.047" endtime="20201117 14:46:56.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.067" endtime="20201117 14:46:56.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.069" endtime="20201117 14:46:56.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.044" endtime="20201117 14:46:56.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.042" endtime="20201117 14:46:56.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.078" endtime="20201117 14:46:56.364"></status>
</kw>
<msg timestamp="20201117 14:46:56.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025237528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025260583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.077" endtime="20201117 14:46:56.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025237528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025260583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.368" endtime="20201117 14:46:56.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.376" endtime="20201117 14:46:56.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.074" endtime="20201117 14:46:56.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.072" endtime="20201117 14:46:56.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:56.383" level="INFO">${RESULT} = [{'time': 0.025260583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305500000000099e-05, 'source_diff': 2.305500000000099e-05}, {'time': 0.025307569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:56.379" endtime="20201117 14:46:56.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:56.397" level="INFO">${ACCURACY} = {'time': [0.025260583, 0.025307569, 0.025348569, 0.025388583, 0.025432583, 0.025469597, 0.025513597, 0.025556597, 0.025600611, 0.025643611, 0.025683611, 0.025720611, 0.025759625, 0.025800625, 0.025842...</msg>
<status status="PASS" starttime="20201117 14:46:56.384" endtime="20201117 14:46:56.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.402" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:46:56.401" endtime="20201117 14:46:56.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.405" level="INFO">VALUE: [2.305500000000099e-05, 2.2651999999998007e-05, 2.2652000000001477e-05, 2.2999999999998716e-05, 2.2750000000001935e-05, 2.2930000000000866e-05, 2.2485999999998646e-05, 2.34030000000017e-05, 2.283299999999988e-05, 2.3235999999999396e-05, 2.3068999999997092e-05, 2.291700000000077e-05, 2.3000000000002185e-05, 2.341700000000127e-05, 2.3000000000002185e-05, 2.3249999999998966e-05, 2.3249999999998966e-05, 2.341700000000127e-05, 2.318100000000059e-05, 2.263900000000138e-05, 2.2847999999998925e-05, 2.2736000000002365e-05, 2.29169999999973e-05, 2.3333999999999855e-05, 2.3250000000002435e-05, 2.337499999999909e-05, 2.2528000000000825e-05, 2.3208000000000256e-05, 2.3401999999998757e-05, 2.2680000000000616e-05, 2.3180000000001116e-05, 2.2665999999997577e-05, 2.3165999999998077e-05, 2.284699999999945e-05, 2.3277999999998106e-05, 2.347299999999955e-05, 2.330500000000124e-05, 2.30969999999997e-05, 2.291700000000077e-05, 2.269499999999966e-05, 2.306900000000056e-05, 2.293100000000034e-05, 2.3013999999998286e-05, 2.2944000000000436e-05, 2.316700000000102e-05, 2.2847999999998925e-05, 2.291700000000077e-05, 2.3208000000000256e-05, 2.2485999999998646e-05, 2.308300000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:46:56.403" endtime="20201117 14:46:56.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.398" endtime="20201117 14:46:56.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.409" endtime="20201117 14:46:56.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.412" endtime="20201117 14:46:56.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.411" endtime="20201117 14:46:56.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.407" endtime="20201117 14:46:56.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.041" endtime="20201117 14:46:56.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.039" endtime="20201117 14:46:56.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.038" endtime="20201117 14:46:56.433"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.435" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.443" endtime="20201117 14:46:56.460"></status>
</kw>
<msg timestamp="20201117 14:46:56.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.442" endtime="20201117 14:46:56.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.462" endtime="20201117 14:46:56.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.464" endtime="20201117 14:46:56.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.439" endtime="20201117 14:46:56.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.437" endtime="20201117 14:46:56.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.473" endtime="20201117 14:46:56.758"></status>
</kw>
<msg timestamp="20201117 14:46:56.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024620097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024643486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.472" endtime="20201117 14:46:56.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024620097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024643486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.762" endtime="20201117 14:46:56.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.770" endtime="20201117 14:46:56.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.469" endtime="20201117 14:46:56.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.467" endtime="20201117 14:46:56.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:56.777" level="INFO">${RESULT} = [{'time': 0.024643486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.338899999999866e-05, 'source_diff': 2.338899999999866e-05}, {'time': 0.024684472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:56.774" endtime="20201117 14:46:56.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:56.791" level="INFO">${ACCURACY} = {'time': [0.024643486, 0.024684472, 0.024726472, 0.0247735, 0.0248145, 0.0248555, 0.0248925, 0.0249355, 0.024982514, 0.025026514, 0.025068514, 0.025112528, 0.025152528, 0.025199556, 0.025238542, 0.025...</msg>
<status status="PASS" starttime="20201117 14:46:56.778" endtime="20201117 14:46:56.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.795" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:46:56.794" endtime="20201117 14:46:56.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.797" level="INFO">VALUE: [2.338899999999866e-05, 2.3249999999998966e-05, 2.3208000000000256e-05, 2.2764000000001505e-05, 2.341700000000127e-05, 2.318100000000059e-05, 2.263900000000138e-05, 2.265300000000095e-05, 2.3000000000002185e-05, 2.291700000000077e-05, 2.316700000000102e-05, 2.2499999999998216e-05, 2.291700000000077e-05, 2.2848000000002394e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.2929999999997397e-05, 2.3333999999999855e-05, 2.2749999999998466e-05, 2.3083999999999605e-05, 2.276300000000203e-05, 2.258299999999963e-05, 2.2694000000000186e-05, 2.2916000000001296e-05, 2.283299999999988e-05, 2.2915999999997827e-05, 2.313899999999841e-05, 2.280500000000074e-05, 2.2749999999998466e-05, 2.3306000000000715e-05, 2.255500000000049e-05, 2.30969999999997e-05, 2.34169999999978e-05, 2.2500000000001685e-05, 2.2764000000001505e-05, 2.308300000000013e-05, 2.291700000000077e-05, 2.284699999999945e-05, 2.3083999999999605e-05, 2.2583999999999105e-05, 2.2583999999999105e-05, 2.3056000000000465e-05, 2.27229999999988e-05, 2.291700000000077e-05, 2.283299999999988e-05, 2.323699999999887e-05, 2.308300000000013e-05, 2.3416000000001796e-05, 2.2485999999998646e-05, 2.3444000000000936e-05]</msg>
<status status="PASS" starttime="20201117 14:46:56.796" endtime="20201117 14:46:56.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.792" endtime="20201117 14:46:56.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.801" endtime="20201117 14:46:56.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.804" endtime="20201117 14:46:56.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.803" endtime="20201117 14:46:56.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.799" endtime="20201117 14:46:56.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.436" endtime="20201117 14:46:56.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.434" endtime="20201117 14:46:56.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.433" endtime="20201117 14:46:56.825"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.827" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.835" endtime="20201117 14:46:56.852"></status>
</kw>
<msg timestamp="20201117 14:46:56.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.834" endtime="20201117 14:46:56.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.853" endtime="20201117 14:46:56.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.856" endtime="20201117 14:46:56.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.831" endtime="20201117 14:46:56.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.829" endtime="20201117 14:46:56.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.864" endtime="20201117 14:46:57.151"></status>
</kw>
<msg timestamp="20201117 14:46:57.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023810417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023833125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.863" endtime="20201117 14:46:57.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023810417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023833125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.155" endtime="20201117 14:46:57.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.163" endtime="20201117 14:46:57.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.860" endtime="20201117 14:46:57.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.859" endtime="20201117 14:46:57.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:57.170" level="INFO">${RESULT} = [{'time': 0.023833125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2707999999999756e-05, 'source_diff': 2.2707999999999756e-05}, {'time': 0.023870125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:57.167" endtime="20201117 14:46:57.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:57.183" level="INFO">${ACCURACY} = {'time': [0.023833125, 0.023870125, 0.023917125, 0.023956139, 0.024000139, 0.024043139, 0.024084167, 0.024130153, 0.024177167, 0.024223181, 0.024261181, 0.024300181, 0.024342208, 0.024380181, 0.024425...</msg>
<status status="PASS" starttime="20201117 14:46:57.171" endtime="20201117 14:46:57.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.187" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:46:57.187" endtime="20201117 14:46:57.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.190" level="INFO">VALUE: [2.2707999999999756e-05, 2.3263999999998536e-05, 2.2750000000001935e-05, 2.2570000000003004e-05, 2.258299999999963e-05, 2.34030000000017e-05, 2.266700000000052e-05, 2.313900000000188e-05, 2.3333999999999855e-05, 2.3249999999998966e-05, 2.293100000000034e-05, 2.315300000000145e-05, 2.284699999999945e-05, 2.2583999999999105e-05, 2.3402000000002227e-05, 2.2999999999998716e-05, 2.3249999999998966e-05, 2.3249999999998966e-05, 2.306900000000056e-05, 2.3401999999998757e-05, 2.283299999999988e-05, 2.2750000000001935e-05, 2.29030000000012e-05, 2.266700000000052e-05, 2.336099999999952e-05, 2.308300000000013e-05, 2.258299999999963e-05, 2.3291999999997676e-05, 2.2764000000001505e-05, 2.3250000000002435e-05, 2.258299999999963e-05, 2.258299999999963e-05, 2.2750000000001935e-05, 2.341700000000127e-05, 2.315299999999798e-05, 2.2833999999999355e-05, 2.3249999999998966e-05, 2.308300000000013e-05, 2.3249999999998966e-05, 2.3415999999998327e-05, 2.3012999999998812e-05, 2.308300000000013e-05, 2.304100000000142e-05, 2.3263999999998536e-05, 2.2930000000000866e-05, 2.3180000000001116e-05, 2.3027999999997856e-05, 2.341700000000127e-05, 2.2721999999999326e-05, 2.294499999999991e-05]</msg>
<status status="PASS" starttime="20201117 14:46:57.189" endtime="20201117 14:46:57.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.184" endtime="20201117 14:46:57.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.193" endtime="20201117 14:46:57.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.196" endtime="20201117 14:46:57.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.195" endtime="20201117 14:46:57.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.192" endtime="20201117 14:46:57.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.828" endtime="20201117 14:46:57.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.826" endtime="20201117 14:46:57.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.825" endtime="20201117 14:46:57.217"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.220" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.228" endtime="20201117 14:46:57.243"></status>
</kw>
<msg timestamp="20201117 14:46:57.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.226" endtime="20201117 14:46:57.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.245" endtime="20201117 14:46:57.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.247" endtime="20201117 14:46:57.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.224" endtime="20201117 14:46:57.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.222" endtime="20201117 14:46:57.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.257" endtime="20201117 14:46:57.541"></status>
</kw>
<msg timestamp="20201117 14:46:57.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023901639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023924181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.255" endtime="20201117 14:46:57.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023901639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023924181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.545" endtime="20201117 14:46:57.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.554" endtime="20201117 14:46:57.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.252" endtime="20201117 14:46:57.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.251" endtime="20201117 14:46:57.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:57.560" level="INFO">${RESULT} = [{'time': 0.023924181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.023962194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:57.557" endtime="20201117 14:46:57.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:57.574" level="INFO">${ACCURACY} = {'time': [0.023924181, 0.023962194, 0.024003194, 0.024043264, 0.024084208, 0.024122208, 0.024166208, 0.024206292, 0.024248222, 0.024291236, 0.024338236, 0.024376236, 0.02441925, 0.024457278, 0.0244992...</msg>
<status status="PASS" starttime="20201117 14:46:57.561" endtime="20201117 14:46:57.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.578" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:46:57.577" endtime="20201117 14:46:57.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.581" level="INFO">VALUE: [2.2542000000000395e-05, 2.261099999999877e-05, 2.283299999999988e-05, 2.263900000000138e-05, 2.258299999999963e-05, 2.306900000000056e-05, 2.2916000000001296e-05, 2.3070000000000035e-05, 2.2735999999998896e-05, 2.338900000000213e-05, 2.266700000000052e-05, 2.315299999999798e-05, 2.316700000000102e-05, 2.3027999999997856e-05, 2.2735999999998896e-05, 2.3277999999998106e-05, 2.3097999999999175e-05, 2.291700000000077e-05, 2.295899999999948e-05, 2.3083999999999605e-05, 2.341700000000127e-05, 2.2833999999999355e-05, 2.2528000000000825e-05, 2.2583999999999105e-05, 2.276300000000203e-05, 2.2930000000000866e-05, 2.265300000000095e-05, 2.2749999999998466e-05, 2.3180000000001116e-05, 2.2652000000001477e-05, 2.281900000000031e-05, 2.3332999999996912e-05, 2.338900000000213e-05, 2.3028000000001325e-05, 2.291700000000077e-05, 2.3013999999998286e-05, 2.3250000000002435e-05, 2.2528000000000825e-05, 2.306900000000056e-05, 2.308300000000013e-05, 2.256900000000006e-05, 2.3250000000002435e-05, 2.3263999999998536e-05, 2.3249999999998966e-05, 2.308300000000013e-05, 2.3042000000000895e-05, 2.336099999999952e-05, 2.2513999999997786e-05, 2.3083999999999605e-05, 2.336099999999952e-05]</msg>
<status status="PASS" starttime="20201117 14:46:57.579" endtime="20201117 14:46:57.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.574" endtime="20201117 14:46:57.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.584" endtime="20201117 14:46:57.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.587" endtime="20201117 14:46:57.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.585" endtime="20201117 14:46:57.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.582" endtime="20201117 14:46:57.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.221" endtime="20201117 14:46:57.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.219" endtime="20201117 14:46:57.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.218" endtime="20201117 14:46:57.608"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.610" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.618" endtime="20201117 14:46:57.636"></status>
</kw>
<msg timestamp="20201117 14:46:57.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.617" endtime="20201117 14:46:57.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.637" endtime="20201117 14:46:57.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.640" endtime="20201117 14:46:57.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.614" endtime="20201117 14:46:57.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.612" endtime="20201117 14:46:57.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.649" endtime="20201117 14:46:57.935"></status>
</kw>
<msg timestamp="20201117 14:46:57.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024645542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02466925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:46:57.647" endtime="20201117 14:46:57.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024645542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02466925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:46:57.939" endtime="20201117 14:46:57.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.947" endtime="20201117 14:46:57.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.645" endtime="20201117 14:46:57.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.643" endtime="20201117 14:46:57.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:57.954" level="INFO">${RESULT} = [{'time': 0.02466925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3708000000000756e-05, 'source_diff': 2.3708000000000756e-05}, {'time': 0.024716264, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:46:57.951" endtime="20201117 14:46:57.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:57.968" level="INFO">${ACCURACY} = {'time': [0.02466925, 0.024716264, 0.024760264, 0.024800264, 0.024839264, 0.024880319, 0.024921278, 0.024968333, 0.025015292, 0.025054292, 0.025095292, 0.025139306, 0.025181319, 0.025222306, 0.0252603...</msg>
<status status="PASS" starttime="20201117 14:46:57.955" endtime="20201117 14:46:57.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.973" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:46:57.972" endtime="20201117 14:46:57.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.975" level="INFO">VALUE: [2.3708000000000756e-05, 2.4264000000003005e-05, 2.3570000000000535e-05, 2.4249999999999966e-05, 2.358300000000063e-05, 2.3430000000001366e-05, 2.365300000000195e-05, 2.4054999999998522e-05, 2.391700000000177e-05, 2.3834000000000355e-05, 2.391700000000177e-05, 2.4306000000001715e-05, 2.35970000000002e-05, 2.390299999999873e-05, 2.3651999999999007e-05, 2.381900000000131e-05, 2.40970000000007e-05, 2.3415999999998327e-05, 2.3680000000001616e-05, 2.366700000000152e-05, 2.415299999999898e-05, 2.3986000000000146e-05, 2.338899999999866e-05, 2.384700000000045e-05, 2.3749999999999466e-05, 2.4249999999999966e-05, 2.4082999999997662e-05, 2.40970000000007e-05, 2.3735999999999896e-05, 2.4042000000001895e-05, 2.341700000000127e-05, 2.416699999999855e-05, 2.3834000000000355e-05, 2.4098000000000175e-05, 2.39169999999983e-05, 2.415299999999898e-05, 2.419500000000116e-05, 2.3944000000001436e-05, 2.3834000000000355e-05, 2.3916000000002297e-05, 2.4165999999999077e-05, 2.3500000000002685e-05, 2.356900000000106e-05, 2.3764000000002505e-05, 2.361099999999977e-05, 2.4236000000000396e-05, 2.4249999999999966e-05, 2.3527999999998356e-05, 2.34169999999978e-05, 2.433300000000138e-05]</msg>
<status status="PASS" starttime="20201117 14:46:57.974" endtime="20201117 14:46:57.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.969" endtime="20201117 14:46:57.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.978" endtime="20201117 14:46:57.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.982" endtime="20201117 14:46:58.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.980" endtime="20201117 14:46:58.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.977" endtime="20201117 14:46:58.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.611" endtime="20201117 14:46:58.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.609" endtime="20201117 14:46:58.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.608" endtime="20201117 14:46:58.003"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.005" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.013" endtime="20201117 14:46:58.030"></status>
</kw>
<msg timestamp="20201117 14:46:58.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.012" endtime="20201117 14:46:58.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.031" endtime="20201117 14:46:58.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.034" endtime="20201117 14:46:58.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.009" endtime="20201117 14:46:58.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.007" endtime="20201117 14:46:58.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.043" endtime="20201117 14:46:58.328"></status>
</kw>
<msg timestamp="20201117 14:46:58.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025142889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025167583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.041" endtime="20201117 14:46:58.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025142889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025167583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.332" endtime="20201117 14:46:58.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.340" endtime="20201117 14:46:58.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.038" endtime="20201117 14:46:58.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.037" endtime="20201117 14:46:58.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.347" level="INFO">${RESULT} = [{'time': 0.025167583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4693999999998717e-05, 'source_diff': 2.4693999999998717e-05}, {'time': 0.025213597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:58.344" endtime="20201117 14:46:58.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.360" level="INFO">${ACCURACY} = {'time': [0.025167583, 0.025213597, 0.025259597, 0.025305611, 0.025351625, 0.025393611, 0.025442667, 0.025486667, 0.025528639, 0.025575639, 0.025619653, 0.025663653, 0.025705667, 0.025754653, 0.025802...</msg>
<status status="PASS" starttime="20201117 14:46:58.348" endtime="20201117 14:46:58.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.365" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.364" endtime="20201117 14:46:58.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.367" level="INFO">VALUE: [2.4693999999998717e-05, 2.5236000000001396e-05, 2.508300000000213e-05, 2.4429999999998897e-05, 2.468099999999862e-05, 2.4986000000001146e-05, 2.4791999999999176e-05, 2.5291999999999676e-05, 2.5264000000000536e-05, 2.5236000000001396e-05, 2.5096999999998232e-05, 2.443100000000184e-05, 2.5334000000001855e-05, 2.5083999999998136e-05, 2.444500000000141e-05, 2.4513999999999786e-05, 2.5014000000000286e-05, 2.45970000000012e-05, 2.5250000000000966e-05, 2.511100000000127e-05, 2.5082999999998662e-05, 2.4429999999998897e-05, 2.4541999999998926e-05, 2.434700000000095e-05, 2.5000000000000716e-05, 2.4415999999999327e-05, 2.4985999999997677e-05, 2.4443999999998467e-05, 2.486100000000102e-05, 2.440299999999923e-05, 2.515299999999998e-05, 2.518099999999912e-05, 2.5332999999998912e-05, 2.491700000000277e-05, 2.50970000000017e-05, 2.4832999999998412e-05, 2.5069999999998566e-05, 2.4598000000000675e-05, 2.461100000000077e-05, 2.4764000000000036e-05, 2.5250000000000966e-05, 2.520900000000173e-05, 2.5041999999999426e-05, 2.44169999999988e-05, 2.484700000000145e-05, 2.5096999999998232e-05, 2.4679999999999147e-05, 2.506900000000256e-05, 2.5082999999998662e-05, 2.4750000000000466e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.366" endtime="20201117 14:46:58.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.361" endtime="20201117 14:46:58.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.370" endtime="20201117 14:46:58.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.374" endtime="20201117 14:46:58.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.372" endtime="20201117 14:46:58.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.369" endtime="20201117 14:46:58.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.006" endtime="20201117 14:46:58.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.004" endtime="20201117 14:46:58.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.003" endtime="20201117 14:46:58.395"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.398" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.406" endtime="20201117 14:46:58.421"></status>
</kw>
<msg timestamp="20201117 14:46:58.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.404" endtime="20201117 14:46:58.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.423" endtime="20201117 14:46:58.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.426" endtime="20201117 14:46:58.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.402" endtime="20201117 14:46:58.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.400" endtime="20201117 14:46:58.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.435" endtime="20201117 14:46:58.720"></status>
</kw>
<msg timestamp="20201117 14:46:58.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023888444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023914375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.434" endtime="20201117 14:46:58.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023888444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023914375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.725" endtime="20201117 14:46:58.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.733" endtime="20201117 14:46:58.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.431" endtime="20201117 14:46:58.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.429" endtime="20201117 14:46:58.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.740" level="INFO">${RESULT} = [{'time': 0.023914375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.593099999999987e-05, 'source_diff': 2.593099999999987e-05}, {'time': 0.023955306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:58.736" endtime="20201117 14:46:58.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.753" level="INFO">${ACCURACY} = {'time': [0.023914375, 0.023955306, 0.024000319, 0.024041319, 0.024086347, 0.024135333, 0.024178333, 0.024219347, 0.024260347, 0.024304347, 0.024350361, 0.024400361, 0.024445361, 0.024486375, 0.024533...</msg>
<status status="PASS" starttime="20201117 14:46:58.740" endtime="20201117 14:46:58.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.757" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.756" endtime="20201117 14:46:58.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.760" level="INFO">VALUE: [2.593099999999987e-05, 2.6083999999999136e-05, 2.5735999999998427e-05, 2.5749999999997997e-05, 2.5764000000001036e-05, 2.5401999999997288e-05, 2.5485999999998177e-05, 2.6249999999998497e-05, 2.5722000000002326e-05, 2.6082999999999662e-05, 2.6250000000001966e-05, 2.590299999999726e-05, 2.5485999999998177e-05, 2.6250000000001966e-05, 2.6249999999998497e-05, 2.6278000000001106e-05, 2.6249999999998497e-05, 2.5582999999999162e-05, 2.59170000000003e-05, 2.5834000000002355e-05, 2.6263999999998067e-05, 2.6069999999999566e-05, 2.5764000000001036e-05, 2.6263000000002062e-05, 2.54169999999998e-05, 2.5834000000002355e-05, 2.6235999999998927e-05, 2.558300000000263e-05, 2.5416000000000327e-05, 2.5570000000002535e-05, 2.5416000000000327e-05, 2.5500000000001216e-05, 2.558300000000263e-05, 2.5582999999999162e-05, 2.543100000000284e-05, 2.583300000000288e-05, 2.54169999999998e-05, 2.570899999999876e-05, 2.6332999999999912e-05, 2.543099999999937e-05, 2.544499999999894e-05, 2.540300000000023e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.5777999999997137e-05, 2.6084000000002605e-05, 2.5999999999998247e-05, 2.568099999999962e-05, 2.566700000000005e-05, 2.615300000000098e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.758" endtime="20201117 14:46:58.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.754" endtime="20201117 14:46:58.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.763" endtime="20201117 14:46:58.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.766" endtime="20201117 14:46:58.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.765" endtime="20201117 14:46:58.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.761" endtime="20201117 14:46:58.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.398" endtime="20201117 14:46:58.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.396" endtime="20201117 14:46:58.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.396" endtime="20201117 14:46:58.787"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.790" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.798" endtime="20201117 14:46:58.814"></status>
</kw>
<msg timestamp="20201117 14:46:58.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.796" endtime="20201117 14:46:58.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.815" endtime="20201117 14:46:58.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.818" endtime="20201117 14:46:58.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.794" endtime="20201117 14:46:58.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.792" endtime="20201117 14:46:58.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.827" endtime="20201117 14:46:59.113"></status>
</kw>
<msg timestamp="20201117 14:46:59.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023949792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.825" endtime="20201117 14:46:59.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023949792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.117" endtime="20201117 14:46:59.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.125" endtime="20201117 14:46:59.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.823" endtime="20201117 14:46:59.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.821" endtime="20201117 14:46:59.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.132" level="INFO">${RESULT} = [{'time': 0.023977014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7222000000000357e-05, 'source_diff': 2.7222000000000357e-05}, {'time': 0.024026028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:59.129" endtime="20201117 14:46:59.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.145" level="INFO">${ACCURACY} = {'time': [0.023977014, 0.024026028, 0.024071014, 0.024118014, 0.024161028, 0.024212056, 0.024260042, 0.024308028, 0.024350056, 0.024393056, 0.024442056, 0.024485069, 0.024526056, 0.024576069, 0.024619...</msg>
<status status="PASS" starttime="20201117 14:46:59.133" endtime="20201117 14:46:59.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.150" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.149" endtime="20201117 14:46:59.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.158" level="INFO">VALUE: [2.7222000000000357e-05, 2.7278000000002106e-05, 2.7083000000000662e-05, 2.7083000000000662e-05, 2.6514000000001786e-05, 2.7097999999999706e-05, 2.7263999999999067e-05, 2.6583999999999636e-05, 2.6597999999999206e-05, 2.64170000000008e-05, 2.7013999999998817e-05, 2.637500000000209e-05, 2.6820000000000316e-05, 2.6415999999997858e-05, 2.6846999999999982e-05, 2.6735999999999427e-05, 2.6750000000002466e-05, 2.6930000000001397e-05, 2.6458000000000037e-05, 2.690299999999826e-05, 2.7013999999998817e-05, 2.647299999999908e-05, 2.6499999999998747e-05, 2.64170000000008e-05, 2.7194000000001217e-05, 2.7249999999999497e-05, 2.7097000000000232e-05, 2.6624999999998872e-05, 2.7097000000000232e-05, 2.7264000000002536e-05, 2.6735999999999427e-05, 2.693100000000087e-05, 2.7069000000001092e-05, 2.6874999999999122e-05, 2.6832999999996943e-05, 2.6583999999999636e-05, 2.6610999999999302e-05, 2.6915999999998358e-05, 2.686100000000302e-05, 2.6915999999998358e-05, 2.6499999999998747e-05, 2.6583000000000162e-05, 2.6915999999998358e-05, 2.6985999999999677e-05, 2.7222000000000357e-05, 2.69170000000013e-05, 2.666700000000105e-05, 2.6513999999998317e-05, 2.6374999999998622e-05, 2.6999999999999247e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.151" endtime="20201117 14:46:59.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.146" endtime="20201117 14:46:59.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.161" endtime="20201117 14:46:59.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.165" endtime="20201117 14:46:59.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.163" endtime="20201117 14:46:59.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.160" endtime="20201117 14:46:59.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.790" endtime="20201117 14:46:59.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.789" endtime="20201117 14:46:59.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.788" endtime="20201117 14:46:59.186"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.188" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.196" endtime="20201117 14:46:59.213"></status>
</kw>
<msg timestamp="20201117 14:46:59.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.195" endtime="20201117 14:46:59.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.215" endtime="20201117 14:46:59.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.217" endtime="20201117 14:46:59.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.192" endtime="20201117 14:46:59.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.190" endtime="20201117 14:46:59.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.226" endtime="20201117 14:46:59.511"></status>
</kw>
<msg timestamp="20201117 14:46:59.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024854875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024883264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.225" endtime="20201117 14:46:59.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024854875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024883264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.516" endtime="20201117 14:46:59.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.524" endtime="20201117 14:46:59.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.222" endtime="20201117 14:46:59.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.220" endtime="20201117 14:46:59.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.531" level="INFO">${RESULT} = [{'time': 0.024883264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8389000000000192e-05, 'source_diff': 2.8389000000000192e-05}, {'time': 0.024927278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:59.527" endtime="20201117 14:46:59.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.545" level="INFO">${ACCURACY} = {'time': [0.024883264, 0.024927278, 0.024975264, 0.025021264, 0.025064278, 0.025107278, 0.025152278, 0.025199292, 0.025251319, 0.025295306, 0.025347319, 0.025395306, 0.025443389, 0.025490319, 0.025538...</msg>
<status status="PASS" starttime="20201117 14:46:59.532" endtime="20201117 14:46:59.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.550" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.549" endtime="20201117 14:46:59.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.552" level="INFO">VALUE: [2.8389000000000192e-05, 2.7361000000000052e-05, 2.766700000000205e-05, 2.7986000000000677e-05, 2.8083999999997666e-05, 2.7584000000000636e-05, 2.7570000000001066e-05, 2.7736000000000427e-05, 2.7944000000001967e-05, 2.818099999999865e-05, 2.8013000000000343e-05, 2.791699999999883e-05, 2.8056000000001996e-05, 2.7583000000001162e-05, 2.7915999999999358e-05, 2.7665999999999108e-05, 2.7665999999999108e-05, 2.8000000000000247e-05, 2.7722000000000857e-05, 2.7985999999997208e-05, 2.7499999999999747e-05, 2.794499999999797e-05, 2.819500000000169e-05, 2.768100000000162e-05, 2.816699999999908e-05, 2.8013999999999817e-05, 2.8082999999998193e-05, 2.8250000000000497e-05, 2.8083999999997666e-05, 2.7598000000000206e-05, 2.7790999999999233e-05, 2.8096999999997763e-05, 2.7943999999998498e-05, 2.8152999999999512e-05, 2.7834000000000886e-05, 2.8097000000001232e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.7415999999998858e-05, 2.8179999999999178e-05, 2.7652999999999012e-05, 2.7665999999999108e-05, 2.8152999999999512e-05, 2.768100000000162e-05, 2.7847000000000982e-05, 2.7902999999999262e-05, 2.7499999999999747e-05, 2.79309999999984e-05, 2.7820000000001316e-05, 2.8249999999997027e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.551" endtime="20201117 14:46:59.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.546" endtime="20201117 14:46:59.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.555" endtime="20201117 14:46:59.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.559" endtime="20201117 14:46:59.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.557" endtime="20201117 14:46:59.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.554" endtime="20201117 14:46:59.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.189" endtime="20201117 14:46:59.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.187" endtime="20201117 14:46:59.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.186" endtime="20201117 14:46:59.580"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.582" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.590" endtime="20201117 14:46:59.607"></status>
</kw>
<msg timestamp="20201117 14:46:59.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.589" endtime="20201117 14:46:59.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.608" endtime="20201117 14:46:59.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.611" endtime="20201117 14:46:59.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.586" endtime="20201117 14:46:59.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.584" endtime="20201117 14:46:59.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.620" endtime="20201117 14:46:59.906"></status>
</kw>
<msg timestamp="20201117 14:46:59.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024060014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024089236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.618" endtime="20201117 14:46:59.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024060014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024089236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.910" endtime="20201117 14:46:59.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.919" endtime="20201117 14:46:59.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.616" endtime="20201117 14:46:59.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.614" endtime="20201117 14:46:59.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.925" level="INFO">${RESULT} = [{'time': 0.024089236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9221999999998888e-05, 'source_diff': 2.9221999999998888e-05}, {'time': 0.024132278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:59.922" endtime="20201117 14:46:59.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.939" level="INFO">${ACCURACY} = {'time': [0.024089236, 0.024132278, 0.024180222, 0.024231222, 0.024282222, 0.024329292, 0.024379236, 0.02442725, 0.02447625, 0.024529264, 0.024574264, 0.024622264, 0.024666292, 0.024711278, 0.02475930...</msg>
<status status="PASS" starttime="20201117 14:46:59.926" endtime="20201117 14:46:59.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.943" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.942" endtime="20201117 14:46:59.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.945" level="INFO">VALUE: [2.9221999999998888e-05, 2.8653000000000012e-05, 2.8708000000002287e-05, 2.8568999999999123e-05, 2.9082999999999193e-05, 2.8791999999999707e-05, 2.9249999999998028e-05, 2.8764000000000567e-05, 2.8583000000002162e-05, 2.919499999999922e-05, 2.8582999999998693e-05, 2.8583000000002162e-05, 2.894499999999897e-05, 2.8486000000001177e-05, 2.9277999999997167e-05, 2.8750000000000997e-05, 2.9083999999998666e-05, 2.8596999999998263e-05, 2.8916999999999832e-05, 2.8513000000000843e-05, 2.9193999999999748e-05, 2.8554999999999553e-05, 2.8415999999999858e-05, 2.8819000000002842e-05, 2.9263999999997597e-05, 2.9360999999998583e-05, 2.8596999999998263e-05, 2.8568999999999123e-05, 2.9097000000002232e-05, 2.8750000000000997e-05, 2.9096999999998763e-05, 2.9249999999998028e-05, 2.8568999999999123e-05, 2.9221999999998888e-05, 2.8597999999997736e-05, 2.844499999999847e-05, 2.8999999999997778e-05, 2.89309999999994e-05, 2.8653000000000012e-05, 2.8999999999997778e-05, 2.841699999999933e-05, 2.848700000000065e-05, 2.8762999999997624e-05, 2.9235999999998458e-05, 2.8402000000000288e-05, 2.9193999999999748e-05, 2.8971999999998638e-05, 2.891599999999689e-05, 2.8666000000000108e-05, 2.8875000000001122e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.944" endtime="20201117 14:46:59.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.940" endtime="20201117 14:46:59.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.949" endtime="20201117 14:46:59.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.952" endtime="20201117 14:46:59.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.950" endtime="20201117 14:46:59.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.947" endtime="20201117 14:46:59.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.583" endtime="20201117 14:46:59.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.581" endtime="20201117 14:46:59.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.580" endtime="20201117 14:46:59.973"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.975" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.983" endtime="20201117 14:47:00.000"></status>
</kw>
<msg timestamp="20201117 14:47:00.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.982" endtime="20201117 14:47:00.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.002" endtime="20201117 14:47:00.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.004" endtime="20201117 14:47:00.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.979" endtime="20201117 14:47:00.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.977" endtime="20201117 14:47:00.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.013" endtime="20201117 14:47:00.298"></status>
</kw>
<msg timestamp="20201117 14:47:00.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024298806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024328847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.012" endtime="20201117 14:47:00.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024298806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024328847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.302" endtime="20201117 14:47:00.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.311" endtime="20201117 14:47:00.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.009" endtime="20201117 14:47:00.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.007" endtime="20201117 14:47:00.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.317" level="INFO">${RESULT} = [{'time': 0.024328847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0041000000001483e-05, 'source_diff': 3.0041000000001483e-05}, {'time': 0.024376847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:00.314" endtime="20201117 14:47:00.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.331" level="INFO">${ACCURACY} = {'time': [0.024328847, 0.024376847, 0.024430847, 0.024479861, 0.024527861, 0.024579889, 0.024625889, 0.024676875, 0.024723889, 0.024768889, 0.024816972, 0.024869944, 0.024919903, 0.024967917, 0.025015...</msg>
<status status="PASS" starttime="20201117 14:47:00.318" endtime="20201117 14:47:00.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.335" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.334" endtime="20201117 14:47:00.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.338" level="INFO">VALUE: [3.0041000000001483e-05, 2.9500000000001747e-05, 3.0083000000000193e-05, 3.0068999999997154e-05, 2.9403000000000762e-05, 3.0181000000000652e-05, 3.0333000000000443e-05, 3.0083000000000193e-05, 2.9556000000000027e-05, 3.0249999999999028e-05, 2.9999999999998778e-05, 3.0375000000002622e-05, 2.9583999999999167e-05, 2.9917000000000832e-05, 3.0166999999997612e-05, 3.0014000000001817e-05, 2.9583999999999167e-05, 2.9541000000000983e-05, 3.0083000000000193e-05, 2.9430000000000428e-05, 3.0167000000001082e-05, 2.9999999999998778e-05, 2.9721999999999388e-05, 2.9764000000001567e-05, 2.9735999999998958e-05, 2.9486000000002177e-05, 2.9832999999999943e-05, 2.944499999999947e-05, 3.0333000000000443e-05, 3.0083000000000193e-05, 2.995899999999954e-05, 2.9832999999999943e-05, 2.9624999999998403e-05, 3.0125000000002372e-05, 2.9750000000001997e-05, 3.0249999999999028e-05, 2.9584000000002636e-05, 3.022299999999936e-05, 3.0250000000002497e-05, 3.0083000000000193e-05, 2.9430000000000428e-05, 2.9680000000000678e-05, 2.9999999999998778e-05, 3.0083000000000193e-05, 2.9582999999999693e-05, 2.9903000000001262e-05, 2.9624999999998403e-05, 3.0180000000001178e-05, 2.9667000000000582e-05, 2.9500000000001747e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.337" endtime="20201117 14:47:00.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.332" endtime="20201117 14:47:00.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.341" endtime="20201117 14:47:00.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.344" endtime="20201117 14:47:00.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.343" endtime="20201117 14:47:00.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.339" endtime="20201117 14:47:00.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.976" endtime="20201117 14:47:00.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.974" endtime="20201117 14:47:00.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.973" endtime="20201117 14:47:00.365"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.368" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.376" endtime="20201117 14:47:00.392"></status>
</kw>
<msg timestamp="20201117 14:47:00.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.374" endtime="20201117 14:47:00.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.394" endtime="20201117 14:47:00.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.397" endtime="20201117 14:47:00.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.372" endtime="20201117 14:47:00.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.370" endtime="20201117 14:47:00.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.406" endtime="20201117 14:47:00.692"></status>
</kw>
<msg timestamp="20201117 14:47:00.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023847403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023878819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.404" endtime="20201117 14:47:00.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023847403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023878819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.696" endtime="20201117 14:47:00.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.705" endtime="20201117 14:47:00.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.402" endtime="20201117 14:47:00.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.400" endtime="20201117 14:47:00.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.711" level="INFO">${RESULT} = [{'time': 0.023878819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.141599999999939e-05, 'source_diff': 3.141599999999939e-05}, {'time': 0.023926792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:00.708" endtime="20201117 14:47:00.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.726" level="INFO">${ACCURACY} = {'time': [0.023878819, 0.023926792, 0.023976819, 0.024029806, 0.024078806, 0.024132819, 0.024182806, 0.024232819, 0.024279819, 0.024328819, 0.024379889, 0.024426847, 0.024476889, 0.024526861, 0.024573...</msg>
<status status="PASS" starttime="20201117 14:47:00.712" endtime="20201117 14:47:00.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.730" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.729" endtime="20201117 14:47:00.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.733" level="INFO">VALUE: [3.141599999999939e-05, 3.0430999999997432e-05, 3.0540999999998514e-05, 3.0417000000001332e-05, 3.0500000000002747e-05, 3.059700000000026e-05, 3.099999999999978e-05, 3.091599999999889e-05, 3.133300000000144e-05, 3.058300000000069e-05, 3.0596999999996793e-05, 3.091600000000236e-05, 3.098600000000021e-05, 3.073599999999996e-05, 3.074999999999953e-05, 3.09310000000014e-05, 3.0485999999999708e-05, 3.131900000000187e-05, 3.052799999999842e-05, 3.10700000000011e-05, 3.093099999999793e-05, 3.100000000000325e-05, 3.125000000000003e-05, 3.123600000000046e-05, 3.0597999999999737e-05, 3.062500000000287e-05, 3.094399999999803e-05, 3.068000000000168e-05, 3.118000000000218e-05, 3.1332999999997974e-05, 3.1068999999998154e-05, 3.061099999999983e-05, 3.090299999999879e-05, 3.0499999999999278e-05, 3.055600000000103e-05, 3.1040999999999014e-05, 3.076400000000257e-05, 3.091700000000183e-05, 3.068100000000115e-05, 3.055600000000103e-05, 3.07639999999991e-05, 3.129200000000221e-05, 3.090299999999879e-05, 3.074999999999953e-05, 3.0417000000001332e-05, 3.1040999999999014e-05, 3.07639999999991e-05, 3.06249999999994e-05, 3.0762999999999624e-05, 3.10839999999972e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.731" endtime="20201117 14:47:00.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.727" endtime="20201117 14:47:00.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.736" endtime="20201117 14:47:00.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.739" endtime="20201117 14:47:00.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.738" endtime="20201117 14:47:00.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.734" endtime="20201117 14:47:00.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.368" endtime="20201117 14:47:00.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.366" endtime="20201117 14:47:00.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.366" endtime="20201117 14:47:00.761"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.763" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.772" endtime="20201117 14:47:00.789"></status>
</kw>
<msg timestamp="20201117 14:47:00.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.770" endtime="20201117 14:47:00.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.790" endtime="20201117 14:47:00.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.793" endtime="20201117 14:47:00.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.767" endtime="20201117 14:47:00.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.765" endtime="20201117 14:47:00.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.802" endtime="20201117 14:47:01.110"></status>
</kw>
<msg timestamp="20201117 14:47:01.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025328569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025360278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.800" endtime="20201117 14:47:01.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025328569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025360278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.114" endtime="20201117 14:47:01.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.123" endtime="20201117 14:47:01.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.798" endtime="20201117 14:47:01.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.796" endtime="20201117 14:47:01.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.130" level="INFO">${RESULT} = [{'time': 0.025360278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.170900000000129e-05, 'source_diff': 3.170900000000129e-05}, {'time': 0.025416278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:01.126" endtime="20201117 14:47:01.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.145" level="INFO">${ACCURACY} = {'time': [0.025360278, 0.025416278, 0.025469306, 0.025525306, 0.025576319, 0.025627306, 0.025683347, 0.025735319, 0.025783319, 0.025829333, 0.025880333, 0.025931361, 0.025978361, 0.026031347, 0.026085...</msg>
<status status="PASS" starttime="20201117 14:47:01.131" endtime="20201117 14:47:01.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.150" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.148" endtime="20201117 14:47:01.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.152" level="INFO">VALUE: [3.170900000000129e-05, 3.20700000000021e-05, 3.193099999999893e-05, 3.168100000000215e-05, 3.1513000000000374e-05, 3.224999999999756e-05, 3.194399999999903e-05, 3.2304999999999834e-05, 3.175000000000053e-05, 3.191599999999989e-05, 3.216600000000014e-05, 3.186100000000108e-05, 3.141699999999886e-05, 3.2332999999998974e-05, 3.156900000000212e-05, 3.225000000000103e-05, 3.140299999999929e-05, 3.198600000000121e-05, 3.193099999999893e-05, 3.184700000000151e-05, 3.17640000000001e-05, 3.193099999999893e-05, 3.151399999999985e-05, 3.158400000000117e-05, 3.161100000000083e-05, 3.223700000000093e-05, 3.206999999999863e-05, 3.187500000000065e-05, 3.215200000000057e-05, 3.169400000000225e-05, 3.150000000000028e-05, 3.2096999999998294e-05, 3.2068999999999154e-05, 3.2082999999998724e-05, 3.17640000000001e-05, 3.227800000000017e-05, 3.1818999999998904e-05, 3.1582999999998224e-05, 3.144500000000147e-05, 3.151399999999985e-05, 3.158300000000169e-05, 3.209800000000124e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.209800000000124e-05, 3.227800000000017e-05, 3.165299999999954e-05, 3.232000000000235e-05, 3.206999999999863e-05, 3.22640000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.151" endtime="20201117 14:47:01.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.146" endtime="20201117 14:47:01.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.155" endtime="20201117 14:47:01.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.159" endtime="20201117 14:47:01.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.157" endtime="20201117 14:47:01.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.154" endtime="20201117 14:47:01.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.764" endtime="20201117 14:47:01.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.762" endtime="20201117 14:47:01.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.761" endtime="20201117 14:47:01.181"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.183" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.191" endtime="20201117 14:47:01.209"></status>
</kw>
<msg timestamp="20201117 14:47:01.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.190" endtime="20201117 14:47:01.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.210" endtime="20201117 14:47:01.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.213" endtime="20201117 14:47:01.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.187" endtime="20201117 14:47:01.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.185" endtime="20201117 14:47:01.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.222" endtime="20201117 14:47:01.508"></status>
</kw>
<msg timestamp="20201117 14:47:01.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024600403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024632944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.221" endtime="20201117 14:47:01.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024600403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024632944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.513" endtime="20201117 14:47:01.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.521" endtime="20201117 14:47:01.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.218" endtime="20201117 14:47:01.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.216" endtime="20201117 14:47:01.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.528" level="INFO">${RESULT} = [{'time': 0.024632944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2541000000000514e-05, 'source_diff': 3.2541000000000514e-05}, {'time': 0.024685944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:01.525" endtime="20201117 14:47:01.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.542" level="INFO">${ACCURACY} = {'time': [0.024632944, 0.024685944, 0.024741972, 0.024795958, 0.024848042, 0.024896972, 0.024952986, 0.025009986, 0.025059, 0.025106, 0.025155, 0.025211014, 0.025261014, 0.025316042, 0.025367042, 0.02...</msg>
<status status="PASS" starttime="20201117 14:47:01.529" endtime="20201117 14:47:01.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.547" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.545" endtime="20201117 14:47:01.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.549" level="INFO">VALUE: [3.2541000000000514e-05, 3.250000000000128e-05, 3.291600000000089e-05, 3.2791000000000764e-05, 3.315300000000104e-05, 3.2555000000000084e-05, 3.2582999999999224e-05, 3.3082999999999724e-05, 3.309700000000276e-05, 3.291700000000036e-05, 3.3332999999999974e-05, 3.256999999999913e-05, 3.324999999999856e-05, 3.275000000000153e-05, 3.274999999999806e-05, 3.27640000000011e-05, 3.2444000000003e-05, 3.295900000000254e-05, 3.3055000000000584e-05, 3.3304999999997364e-05, 3.291600000000089e-05, 3.2846999999999044e-05, 3.3277000000001694e-05, 3.251400000000085e-05, 3.3082999999999724e-05, 3.290300000000079e-05, 3.3332999999999974e-05, 3.261100000000183e-05, 3.291700000000036e-05, 3.2610999999998364e-05, 3.255599999999956e-05, 3.241699999999986e-05, 3.31250000000019e-05, 3.333399999999945e-05, 3.240299999999682e-05, 3.333399999999945e-05, 3.25839999999987e-05, 3.259800000000174e-05, 3.291700000000036e-05, 3.268099999999968e-05, 3.3346999999999544e-05, 3.258400000000217e-05, 3.240200000000082e-05, 3.266600000000064e-05, 3.251399999999738e-05, 3.241600000000039e-05, 3.3124999999998433e-05, 3.301399999999788e-05, 3.32640000000016e-05, 3.241700000000333e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.548" endtime="20201117 14:47:01.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.543" endtime="20201117 14:47:01.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.553" endtime="20201117 14:47:01.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.556" endtime="20201117 14:47:01.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.555" endtime="20201117 14:47:01.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.551" endtime="20201117 14:47:01.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.184" endtime="20201117 14:47:01.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.182" endtime="20201117 14:47:01.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.181" endtime="20201117 14:47:01.578"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.580" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.589" endtime="20201117 14:47:01.605"></status>
</kw>
<msg timestamp="20201117 14:47:01.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.587" endtime="20201117 14:47:01.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.607" endtime="20201117 14:47:01.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.610" endtime="20201117 14:47:01.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.584" endtime="20201117 14:47:01.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.582" endtime="20201117 14:47:01.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.619" endtime="20201117 14:47:01.905"></status>
</kw>
<msg timestamp="20201117 14:47:01.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024926278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024960417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.617" endtime="20201117 14:47:01.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024926278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024960417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.910" endtime="20201117 14:47:01.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.918" endtime="20201117 14:47:01.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.615" endtime="20201117 14:47:01.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.613" endtime="20201117 14:47:01.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.925" level="INFO">${RESULT} = [{'time': 0.024960417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4138999999999003e-05, 'source_diff': 3.4138999999999003e-05}, {'time': 0.025008417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:01.922" endtime="20201117 14:47:01.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.939" level="INFO">${ACCURACY} = {'time': [0.024960417, 0.025008417, 0.025057431, 0.025109431, 0.0251585, 0.025211444, 0.025259472, 0.025316458, 0.025371472, 0.0254295, 0.0254835, 0.025535528, 0.025591486, 0.025642514, 0.0256935, 0.0...</msg>
<status status="PASS" starttime="20201117 14:47:01.926" endtime="20201117 14:47:01.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.943" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.942" endtime="20201117 14:47:01.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.946" level="INFO">VALUE: [3.4138999999999003e-05, 3.352800000000142e-05, 3.375000000000253e-05, 3.40840000000002e-05, 3.397200000000017e-05, 3.348599999999924e-05, 3.361100000000283e-05, 3.373599999999949e-05, 3.392999999999799e-05, 3.402800000000192e-05, 3.391699999999789e-05, 3.4360999999996644e-05, 3.3583000000000224e-05, 3.42640000000026e-05, 3.424999999999956e-05, 3.4083000000000724e-05, 3.4097000000000294e-05, 3.341700000000086e-05, 3.398599999999974e-05, 3.373599999999949e-05, 3.377800000000167e-05, 3.363900000000197e-05, 3.4124999999999434e-05, 3.3762999999999155e-05, 3.4083000000000724e-05, 3.373599999999949e-05, 3.341600000000139e-05, 3.41519999999991e-05, 3.419400000000128e-05, 3.4374999999999684e-05, 3.373599999999949e-05, 3.37779999999982e-05, 3.341699999999739e-05, 3.4332999999997504e-05, 3.391699999999789e-05, 3.397200000000017e-05, 3.3596999999999794e-05, 3.4083000000000724e-05, 3.424999999999956e-05, 3.357000000000013e-05, 3.376399999999863e-05, 3.3777000000002194e-05, 3.374999999999906e-05, 3.3583000000000224e-05, 3.4083000000000724e-05, 3.340199999999835e-05, 3.4374999999999684e-05, 3.341599999999792e-05, 3.368000000000121e-05, 3.401400000000235e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.945" endtime="20201117 14:47:01.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.940" endtime="20201117 14:47:01.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.950" endtime="20201117 14:47:01.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.953" endtime="20201117 14:47:01.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.952" endtime="20201117 14:47:01.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.948" endtime="20201117 14:47:01.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.581" endtime="20201117 14:47:01.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.579" endtime="20201117 14:47:01.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.578" endtime="20201117 14:47:01.974"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.977" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.985" endtime="20201117 14:47:02.003"></status>
</kw>
<msg timestamp="20201117 14:47:02.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.984" endtime="20201117 14:47:02.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.004" endtime="20201117 14:47:02.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.008" endtime="20201117 14:47:02.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.981" endtime="20201117 14:47:02.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.979" endtime="20201117 14:47:02.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.020" endtime="20201117 14:47:02.308"></status>
</kw>
<msg timestamp="20201117 14:47:02.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024800639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024835333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.018" endtime="20201117 14:47:02.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024800639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024835333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.312" endtime="20201117 14:47:02.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.321" endtime="20201117 14:47:02.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.014" endtime="20201117 14:47:02.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.012" endtime="20201117 14:47:02.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.328" level="INFO">${RESULT} = [{'time': 0.024835333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.469400000000178e-05, 'source_diff': 3.469400000000178e-05}, {'time': 0.024892361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:02.324" endtime="20201117 14:47:02.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.342" level="INFO">${ACCURACY} = {'time': [0.024835333, 0.024892361, 0.024942347, 0.024991347, 0.025047361, 0.025103361, 0.025160375, 0.025216375, 0.025265431, 0.025314389, 0.025373403, 0.025426417, 0.025481417, 0.0255365, 0.02558844...</msg>
<status status="PASS" starttime="20201117 14:47:02.329" endtime="20201117 14:47:02.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.347" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.346" endtime="20201117 14:47:02.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.349" level="INFO">VALUE: [3.469400000000178e-05, 3.52779999999997e-05, 3.525000000000056e-05, 3.5069000000002154e-05, 3.440300000000229e-05, 3.500000000000031e-05, 3.524999999999709e-05, 3.4582999999997754e-05, 3.495900000000107e-05, 3.498600000000074e-05, 3.493099999999846e-05, 3.447300000000014e-05, 3.475000000000006e-05, 3.4833000000001474e-05, 3.4610999999996894e-05, 3.491699999999889e-05, 3.4652999999999073e-05, 3.4541000000002514e-05, 3.4875000000000184e-05, 3.455599999999809e-05, 3.4582999999997754e-05, 3.5083000000001724e-05, 3.491600000000289e-05, 3.5333000000001974e-05, 3.475000000000006e-05, 3.4388999999999253e-05, 3.519500000000175e-05, 3.501399999999988e-05, 3.524999999999709e-05, 3.448600000000024e-05, 3.4582999999997754e-05, 3.491699999999889e-05, 3.452800000000242e-05, 3.525000000000056e-05, 3.493100000000193e-05, 3.451399999999938e-05, 3.443000000000196e-05, 3.5389000000000254e-05, 3.492999999999899e-05, 3.448600000000024e-05, 3.475000000000006e-05, 3.5125000000000434e-05, 3.476399999999963e-05, 3.4568999999998185e-05, 3.4597000000000794e-05, 3.5097000000001294e-05, 3.5083000000001724e-05, 3.523599999999752e-05, 3.526400000000013e-05, 3.4445000000001e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.348" endtime="20201117 14:47:02.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.343" endtime="20201117 14:47:02.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.352" endtime="20201117 14:47:02.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.356" endtime="20201117 14:47:02.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.354" endtime="20201117 14:47:02.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.351" endtime="20201117 14:47:02.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.977" endtime="20201117 14:47:02.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.976" endtime="20201117 14:47:02.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.975" endtime="20201117 14:47:02.377"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.380" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.388" endtime="20201117 14:47:02.406"></status>
</kw>
<msg timestamp="20201117 14:47:02.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.387" endtime="20201117 14:47:02.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.407" endtime="20201117 14:47:02.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.410" endtime="20201117 14:47:02.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.384" endtime="20201117 14:47:02.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.382" endtime="20201117 14:47:02.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.420" endtime="20201117 14:47:02.707"></status>
</kw>
<msg timestamp="20201117 14:47:02.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025684514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025720222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.418" endtime="20201117 14:47:02.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025684514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025720222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.711" endtime="20201117 14:47:02.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.720" endtime="20201117 14:47:02.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.415" endtime="20201117 14:47:02.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.414" endtime="20201117 14:47:02.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.727" level="INFO">${RESULT} = [{'time': 0.025720222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.570800000000235e-05, 'source_diff': 3.570800000000235e-05}, {'time': 0.025780236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:02.723" endtime="20201117 14:47:02.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.742" level="INFO">${ACCURACY} = {'time': [0.025720222, 0.025780236, 0.025840236, 0.025894306, 0.02594425, 0.025995264, 0.026052264, 0.026111319, 0.026168278, 0.026218347, 0.026273292, 0.026324292, 0.026377319, 0.026433347, 0.0264883...</msg>
<status status="PASS" starttime="20201117 14:47:02.728" endtime="20201117 14:47:02.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.747" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.746" endtime="20201117 14:47:02.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.749" level="INFO">VALUE: [3.570800000000235e-05, 3.6083000000002724e-05, 3.619399999999981e-05, 3.579199999999977e-05, 3.5389000000000254e-05, 3.550000000000081e-05, 3.5582999999998755e-05, 3.613800000000153e-05, 3.558399999999823e-05, 3.5791000000000295e-05, 3.575000000000106e-05, 3.534799999999755e-05, 3.5513000000000905e-05, 3.544399999999906e-05, 3.61520000000011e-05, 3.565199999999713e-05, 3.573599999999802e-05, 3.5875000000001184e-05, 3.622199999999895e-05, 3.5610999999997894e-05, 3.626400000000113e-05, 3.552799999999995e-05, 3.5916999999999893e-05, 3.569500000000225e-05, 3.6055000000000115e-05, 3.627799999999723e-05, 3.575000000000106e-05, 3.576400000000063e-05, 3.55840000000017e-05, 3.5402999999999823e-05, 3.6166999999996674e-05, 3.5568999999999185e-05, 3.534800000000102e-05, 3.550000000000081e-05, 3.5777000000000725e-05, 3.6068999999999685e-05, 3.590200000000085e-05, 3.597200000000217e-05, 3.5569000000002654e-05, 3.541599999999992e-05, 3.550000000000081e-05, 3.6068999999999685e-05, 3.6082999999999255e-05, 3.6096999999998824e-05, 3.59719999999987e-05, 3.597200000000217e-05, 3.624999999999809e-05, 3.6097000000002294e-05, 3.5819000000002904e-05, 3.608399999999873e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.748" endtime="20201117 14:47:02.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.743" endtime="20201117 14:47:02.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.752" endtime="20201117 14:47:02.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.756" endtime="20201117 14:47:02.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.754" endtime="20201117 14:47:02.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.751" endtime="20201117 14:47:02.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.380" endtime="20201117 14:47:02.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.378" endtime="20201117 14:47:02.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.378" endtime="20201117 14:47:02.777"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.780" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.788" endtime="20201117 14:47:02.806"></status>
</kw>
<msg timestamp="20201117 14:47:02.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.787" endtime="20201117 14:47:02.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.807" endtime="20201117 14:47:02.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.810" endtime="20201117 14:47:02.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.784" endtime="20201117 14:47:02.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.782" endtime="20201117 14:47:02.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.820" endtime="20201117 14:47:03.106"></status>
</kw>
<msg timestamp="20201117 14:47:03.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024789875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024826417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.818" endtime="20201117 14:47:03.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024789875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024826417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.110" endtime="20201117 14:47:03.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.119" endtime="20201117 14:47:03.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.815" endtime="20201117 14:47:03.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.813" endtime="20201117 14:47:03.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.126" level="INFO">${RESULT} = [{'time': 0.024826417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.654200000000052e-05, 'source_diff': 3.654200000000052e-05}, {'time': 0.024877458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:03.122" endtime="20201117 14:47:03.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.139" level="INFO">${ACCURACY} = {'time': [0.024826417, 0.024877458, 0.024928444, 0.024985444, 0.025040444, 0.025098458, 0.025150472, 0.025210458, 0.025266472, 0.025325472, 0.025384486, 0.0254405, 0.0254975, 0.025549514, 0.025610514,...</msg>
<status status="PASS" starttime="20201117 14:47:03.127" endtime="20201117 14:47:03.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.144" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.143" endtime="20201117 14:47:03.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.147" level="INFO">VALUE: [3.654200000000052e-05, 3.698600000000274e-05, 3.7096999999999825e-05, 3.643000000000049e-05, 3.649999999999834e-05, 3.726400000000213e-05, 3.6874999999998714e-05, 3.7333000000000505e-05, 3.725000000000256e-05, 3.6583000000003224e-05, 3.723599999999952e-05, 3.7096999999999825e-05, 3.673599999999902e-05, 3.726399999999866e-05, 3.726400000000213e-05, 3.72780000000017e-05, 3.6917000000000894e-05, 3.684799999999905e-05, 3.720899999999985e-05, 3.675000000000206e-05, 3.7152999999998104e-05, 3.644400000000006e-05, 3.720800000000038e-05, 3.7319000000000935e-05, 3.7069000000000685e-05, 3.7068999999997215e-05, 3.6568999999996715e-05, 3.702800000000145e-05, 3.691599999999795e-05, 3.6666999999997174e-05, 3.7333000000000505e-05, 3.7096999999999825e-05, 3.6582999999999755e-05, 3.676400000000163e-05, 3.6917000000000894e-05, 3.6846999999999575e-05, 3.694500000000003e-05, 3.701400000000188e-05, 3.6417000000000394e-05, 3.7181000000000713e-05, 3.683399999999948e-05, 3.726400000000213e-05, 3.723599999999952e-05, 3.673599999999902e-05, 3.6360999999998644e-05, 3.702799999999798e-05, 3.6582999999999755e-05, 3.7083000000000255e-05, 3.7083000000000255e-05, 3.7097000000003294e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.145" endtime="20201117 14:47:03.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.140" endtime="20201117 14:47:03.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.150" endtime="20201117 14:47:03.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.153" endtime="20201117 14:47:03.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.152" endtime="20201117 14:47:03.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.148" endtime="20201117 14:47:03.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.780" endtime="20201117 14:47:03.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.778" endtime="20201117 14:47:03.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.777" endtime="20201117 14:47:03.174"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.177" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.186" endtime="20201117 14:47:03.202"></status>
</kw>
<msg timestamp="20201117 14:47:03.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.184" endtime="20201117 14:47:03.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.204" endtime="20201117 14:47:03.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.207" endtime="20201117 14:47:03.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.181" endtime="20201117 14:47:03.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.179" endtime="20201117 14:47:03.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.216" endtime="20201117 14:47:03.502"></status>
</kw>
<msg timestamp="20201117 14:47:03.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024727278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0247655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:03.215" endtime="20201117 14:47:03.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024727278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0247655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:03.507" endtime="20201117 14:47:03.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.516" endtime="20201117 14:47:03.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.212" endtime="20201117 14:47:03.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.210" endtime="20201117 14:47:03.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.523" level="INFO">${RESULT} = [{'time': 0.0247655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.822200000000095e-05, 'source_diff': 3.822200000000095e-05}, {'time': 0.0248205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201117 14:47:03.519" endtime="20201117 14:47:03.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.537" level="INFO">${ACCURACY} = {'time': [0.0247655, 0.0248205, 0.0248825, 0.024942514, 0.025004528, 0.025066528, 0.025121528, 0.025173556, 0.025233542, 0.025294569, 0.025353569, 0.025415569, 0.025474569, 0.025530597, 0.025584583, 0...</msg>
<status status="PASS" starttime="20201117 14:47:03.524" endtime="20201117 14:47:03.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.542" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.540" endtime="20201117 14:47:03.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.544" level="INFO">VALUE: [3.822200000000095e-05, 3.754199999999805e-05, 3.825000000000009e-05, 3.823600000000052e-05, 3.7917000000001894e-05, 3.833400000000098e-05, 3.7695000000000783e-05, 3.80980000000003e-05, 3.7417000000001394e-05, 3.8347000000001075e-05, 3.8263000000000186e-05, 3.774999999999959e-05, 3.823600000000052e-05, 3.742999999999802e-05, 3.799999999999984e-05, 3.7597000000000325e-05, 3.7403000000001824e-05, 3.7833000000001005e-05, 3.7582999999997285e-05, 3.7930999999997994e-05, 3.7832999999997535e-05, 3.7416999999997924e-05, 3.798600000000027e-05, 3.7916999999998424e-05, 3.799999999999984e-05, 3.811199999999987e-05, 3.8069000000001685e-05, 3.825000000000009e-05, 3.758400000000023e-05, 3.791600000000242e-05, 3.76520000000026e-05, 3.8096999999997355e-05, 3.7833000000001005e-05, 3.791600000000242e-05, 3.748599999999977e-05, 3.7583000000000755e-05, 3.74590000000001e-05, 3.7667000000001644e-05, 3.7861000000000145e-05, 3.7903000000002324e-05, 3.801399999999941e-05, 3.774999999999959e-05, 3.8111000000000395e-05, 3.7431000000000964e-05, 3.7681000000001214e-05, 3.8332999999998035e-05, 3.823600000000052e-05, 3.7416999999997924e-05, 3.755599999999762e-05, 3.7583000000000755e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.543" endtime="20201117 14:47:03.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.538" endtime="20201117 14:47:03.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.547" endtime="20201117 14:47:03.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.551" endtime="20201117 14:47:03.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.549" endtime="20201117 14:47:03.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.546" endtime="20201117 14:47:03.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.178" endtime="20201117 14:47:03.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.176" endtime="20201117 14:47:03.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.175" endtime="20201117 14:47:03.572"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.574" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.583" endtime="20201117 14:47:03.601"></status>
</kw>
<msg timestamp="20201117 14:47:03.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.582" endtime="20201117 14:47:03.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.602" endtime="20201117 14:47:03.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.605" endtime="20201117 14:47:03.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.579" endtime="20201117 14:47:03.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.576" endtime="20201117 14:47:03.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.614" endtime="20201117 14:47:03.900"></status>
</kw>
<msg timestamp="20201117 14:47:03.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025260819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025300264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.612" endtime="20201117 14:47:03.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025260819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025300264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.904" endtime="20201117 14:47:03.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.913" endtime="20201117 14:47:03.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.610" endtime="20201117 14:47:03.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.608" endtime="20201117 14:47:03.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.920" level="INFO">${RESULT} = [{'time': 0.025300264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9444999999999064e-05, 'source_diff': 3.9444999999999064e-05}, {'time': 0.025361194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:03.916" endtime="20201117 14:47:03.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.934" level="INFO">${ACCURACY} = {'time': [0.025300264, 0.025361194, 0.025423208, 0.025481208, 0.025536222, 0.025594222, 0.025654264, 0.025717306, 0.025775236, 0.025836264, 0.02589525, 0.025955264, 0.026017264, 0.026074292, 0.0261273...</msg>
<status status="PASS" starttime="20201117 14:47:03.921" endtime="20201117 14:47:03.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.938" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.937" endtime="20201117 14:47:03.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.941" level="INFO">VALUE: [3.9444999999999064e-05, 3.873600000000102e-05, 3.9054999999999646e-05, 3.873600000000102e-05, 3.926400000000066e-05, 3.875000000000059e-05, 3.9110999999997925e-05, 3.9153000000000104e-05, 3.8554999999999146e-05, 3.9083000000002255e-05, 3.925000000000109e-05, 3.8902999999999854e-05, 3.899999999999737e-05, 3.8722999999997454e-05, 3.906999999999869e-05, 3.8916999999999424e-05, 3.8652999999999604e-05, 3.881999999999844e-05, 3.8597000000001325e-05, 3.874999999999712e-05, 3.840199999999988e-05, 3.9332999999999035e-05, 3.843000000000249e-05, 3.901400000000041e-05, 3.875000000000059e-05, 3.844400000000206e-05, 3.8833000000002005e-05, 3.92919999999998e-05, 3.848600000000077e-05, 3.926400000000066e-05, 3.8582999999998285e-05, 3.9096999999998355e-05, 3.926400000000066e-05, 3.8417000000002394e-05, 3.9152999999996635e-05, 3.9346999999998605e-05, 3.856999999999819e-05, 3.8403000000002824e-05, 3.868000000000274e-05, 3.9347000000002075e-05, 3.8597000000001325e-05, 3.875000000000059e-05, 3.9082999999998785e-05, 3.9083000000002255e-05, 3.923600000000152e-05, 3.8403000000002824e-05, 3.9318999999999465e-05, 3.925000000000109e-05, 3.857000000000166e-05, 3.8583000000001755e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.940" endtime="20201117 14:47:03.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.935" endtime="20201117 14:47:03.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.944" endtime="20201117 14:47:03.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.948" endtime="20201117 14:47:03.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.946" endtime="20201117 14:47:03.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.943" endtime="20201117 14:47:03.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.575" endtime="20201117 14:47:03.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.573" endtime="20201117 14:47:03.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.572" endtime="20201117 14:47:03.969"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.972" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.980" endtime="20201117 14:47:03.999"></status>
</kw>
<msg timestamp="20201117 14:47:03.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.979" endtime="20201117 14:47:03.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.000" endtime="20201117 14:47:04.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.003" endtime="20201117 14:47:04.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.976" endtime="20201117 14:47:04.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.974" endtime="20201117 14:47:04.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.012" endtime="20201117 14:47:04.298"></status>
</kw>
<msg timestamp="20201117 14:47:04.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026075736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026115597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.011" endtime="20201117 14:47:04.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026075736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026115597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.302" endtime="20201117 14:47:04.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.311" endtime="20201117 14:47:04.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.008" endtime="20201117 14:47:04.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.006" endtime="20201117 14:47:04.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:04.318" level="INFO">${RESULT} = [{'time': 0.026115597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9861000000002145e-05, 'source_diff': 3.9861000000002145e-05}, {'time': 0.026169611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:04.314" endtime="20201117 14:47:04.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:04.333" level="INFO">${ACCURACY} = {'time': [0.026115597, 0.026169611, 0.026233611, 0.026293625, 0.026348625, 0.026405639, 0.026468639, 0.026524667, 0.026579653, 0.026642667, 0.026706681, 0.026766694, 0.026826694, 0.026880694, 0.026934...</msg>
<status status="PASS" starttime="20201117 14:47:04.319" endtime="20201117 14:47:04.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.338" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:47:04.337" endtime="20201117 14:47:04.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.340" level="INFO">VALUE: [3.9861000000002145e-05, 3.9917000000000424e-05, 3.9818999999999966e-05, 3.975000000000159e-05, 4.023599999999905e-05, 3.973600000000202e-05, 4.024999999999862e-05, 4.009799999999883e-05, 4.008400000000273e-05, 3.958399999999876e-05, 4.009799999999883e-05, 4.025000000000209e-05, 4.025000000000209e-05, 3.9582999999999285e-05, 4.0069000000000216e-05, 4.0082999999999785e-05, 3.991600000000095e-05, 4.0305000000000896e-05, 4.024999999999862e-05, 4.0082999999999785e-05, 4.025000000000209e-05, 3.9568999999999716e-05, 3.9416999999999924e-05, 3.9653000000000604e-05, 4.0346999999999605e-05, 4.02920000000008e-05, 4.009799999999883e-05, 3.9430999999999494e-05, 3.981999999999944e-05, 3.9930999999999994e-05, 3.999999999999837e-05, 3.977800000000073e-05, 3.943000000000002e-05, 3.9832999999999535e-05, 3.974999999999812e-05, 4.020799999999991e-05, 4.027800000000123e-05, 3.9874999999998245e-05, 4.0167000000000674e-05, 4.0194999999999814e-05, 3.999999999999837e-05, 3.9445000000002534e-05, 3.980599999999987e-05, 4.0305000000000896e-05, 3.9680999999999744e-05, 3.945799999999916e-05, 3.951400000000091e-05, 3.976400000000116e-05, 3.975000000000159e-05, 4.0262999999998716e-05]</msg>
<status status="PASS" starttime="20201117 14:47:04.339" endtime="20201117 14:47:04.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.334" endtime="20201117 14:47:04.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.350" endtime="20201117 14:47:04.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:04.354" endtime="20201117 14:47:04.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.352" endtime="20201117 14:47:04.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.349" endtime="20201117 14:47:04.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.973" endtime="20201117 14:47:04.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.971" endtime="20201117 14:47:04.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.970" endtime="20201117 14:47:04.375"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.377" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.386" endtime="20201117 14:47:04.404"></status>
</kw>
<msg timestamp="20201117 14:47:04.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.385" endtime="20201117 14:47:04.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.405" endtime="20201117 14:47:04.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.408" endtime="20201117 14:47:04.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.382" endtime="20201117 14:47:04.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.380" endtime="20201117 14:47:04.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.417" endtime="20201117 14:47:04.704"></status>
</kw>
<msg timestamp="20201117 14:47:04.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024849264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024889778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.416" endtime="20201117 14:47:04.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024849264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024889778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.708" endtime="20201117 14:47:04.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.717" endtime="20201117 14:47:04.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.413" endtime="20201117 14:47:04.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.411" endtime="20201117 14:47:04.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:04.724" level="INFO">${RESULT} = [{'time': 0.024889778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.051400000000191e-05, 'source_diff': 4.051400000000191e-05}, {'time': 0.024945806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:04.720" endtime="20201117 14:47:04.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:04.737" level="INFO">${ACCURACY} = {'time': [0.024889778, 0.024945806, 0.025005819, 0.025067806, 0.025132806, 0.025193819, 0.025253819, 0.025310833, 0.025370833, 0.025427875, 0.025484847, 0.025542861, 0.025598861, 0.025661875, 0.025716...</msg>
<status status="PASS" starttime="20201117 14:47:04.725" endtime="20201117 14:47:04.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.742" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:47:04.741" endtime="20201117 14:47:04.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.745" level="INFO">VALUE: [4.051400000000191e-05, 4.136199999999965e-05, 4.0776999999998786e-05, 4.05980000000028e-05, 4.0917000000001424e-05, 4.1012999999999467e-05, 4.0569000000000716e-05, 4.1083000000000786e-05, 4.124999999999962e-05, 4.122200000000048e-05, 4.041600000000145e-05, 4.1167000000001674e-05, 4.0819000000000966e-05, 4.0931000000000994e-05, 4.0653000000001605e-05, 4.050000000000234e-05, 4.124999999999962e-05, 4.109799999999983e-05, 4.125000000000309e-05, 4.059799999999933e-05, 4.1110999999999925e-05, 4.09859999999998e-05, 4.083400000000001e-05, 4.107000000000069e-05, 4.073599999999955e-05, 4.1082999999997316e-05, 4.1097000000000355e-05, 4.126399999999919e-05, 4.126400000000266e-05, 4.1097000000000355e-05, 4.075000000000259e-05, 4.1069000000001216e-05, 4.0903000000001855e-05, 4.054200000000105e-05, 4.077800000000173e-05, 4.097199999999676e-05, 4.09859999999998e-05, 4.124999999999962e-05, 4.1167000000001674e-05, 4.126399999999919e-05, 4.1110999999999925e-05, 4.093000000000152e-05, 4.052800000000148e-05, 4.043000000000102e-05, 4.1333000000001036e-05, 4.0582999999996816e-05, 4.076399999999869e-05, 4.0945000000000564e-05, 4.0681000000000744e-05, 4.0695000000000314e-05]</msg>
<status status="PASS" starttime="20201117 14:47:04.743" endtime="20201117 14:47:04.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.738" endtime="20201117 14:47:04.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.748" endtime="20201117 14:47:04.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:04.752" endtime="20201117 14:47:04.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.750" endtime="20201117 14:47:04.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.747" endtime="20201117 14:47:04.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.378" endtime="20201117 14:47:04.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.376" endtime="20201117 14:47:04.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.375" endtime="20201117 14:47:04.773"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.776" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.784" endtime="20201117 14:47:04.801"></status>
</kw>
<msg timestamp="20201117 14:47:04.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.782" endtime="20201117 14:47:04.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.802" endtime="20201117 14:47:04.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.805" endtime="20201117 14:47:04.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.780" endtime="20201117 14:47:04.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.778" endtime="20201117 14:47:04.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.814" endtime="20201117 14:47:05.100"></status>
</kw>
<msg timestamp="20201117 14:47:05.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025173472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025215528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.813" endtime="20201117 14:47:05.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025173472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025215528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.105" endtime="20201117 14:47:05.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.113" endtime="20201117 14:47:05.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.810" endtime="20201117 14:47:05.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.808" endtime="20201117 14:47:05.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.120" level="INFO">${RESULT} = [{'time': 0.025215528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.205600000000212e-05, 'source_diff': 4.205600000000212e-05}, {'time': 0.025274542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:05.116" endtime="20201117 14:47:05.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.134" level="INFO">${ACCURACY} = {'time': [0.025215528, 0.025274542, 0.025334542, 0.025394556, 0.025453556, 0.025510556, 0.025571569, 0.025632569, 0.025693597, 0.025753611, 0.025815639, 0.025878597, 0.025934681, 0.025991639, 0.026053...</msg>
<status status="PASS" starttime="20201117 14:47:05.121" endtime="20201117 14:47:05.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.139" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.138" endtime="20201117 14:47:05.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.142" level="INFO">VALUE: [4.205600000000212e-05, 4.2181000000002244e-05, 4.2153000000003105e-05, 4.2180999999998775e-05, 4.149999999999987e-05, 4.1737000000000024e-05, 4.175000000000012e-05, 4.191599999999948e-05, 4.1860999999997206e-05, 4.1597000000000856e-05, 4.177800000000273e-05, 4.225000000000062e-05, 4.1917000000002425e-05, 4.152799999999901e-05, 4.227799999999976e-05, 4.2083000000001786e-05, 4.1930999999998525e-05, 4.2347000000001606e-05, 4.1917000000002425e-05, 4.1680999999998275e-05, 4.233399999999804e-05, 4.159800000000033e-05, 4.2097000000001356e-05, 4.225000000000062e-05, 4.1583000000001286e-05, 4.2082999999998316e-05, 4.2082999999998316e-05, 4.2083000000001786e-05, 4.172200000000098e-05, 4.2068999999998746e-05, 4.143000000000202e-05, 4.200000000000037e-05, 4.226400000000019e-05, 4.1431000000001494e-05, 4.1846999999997636e-05, 4.1931000000001994e-05, 4.14860000000003e-05, 4.1916999999998955e-05, 4.234800000000108e-05, 4.225000000000062e-05, 4.225000000000062e-05, 4.1597000000000856e-05, 4.141600000000245e-05, 4.200000000000037e-05, 4.2068999999998746e-05, 4.176399999999969e-05, 4.227799999999976e-05, 4.2318999999998996e-05, 4.2082999999998316e-05, 4.1931000000001994e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.140" endtime="20201117 14:47:05.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.135" endtime="20201117 14:47:05.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.145" endtime="20201117 14:47:05.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.148" endtime="20201117 14:47:05.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.147" endtime="20201117 14:47:05.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.143" endtime="20201117 14:47:05.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.776" endtime="20201117 14:47:05.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.774" endtime="20201117 14:47:05.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.773" endtime="20201117 14:47:05.170"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.172" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.180" endtime="20201117 14:47:05.197"></status>
</kw>
<msg timestamp="20201117 14:47:05.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.179" endtime="20201117 14:47:05.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.199" endtime="20201117 14:47:05.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.201" endtime="20201117 14:47:05.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.176" endtime="20201117 14:47:05.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.174" endtime="20201117 14:47:05.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.211" endtime="20201117 14:47:05.495"></status>
</kw>
<msg timestamp="20201117 14:47:05.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024604306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024647097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.209" endtime="20201117 14:47:05.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024604306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024647097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.500" endtime="20201117 14:47:05.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.509" endtime="20201117 14:47:05.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.206" endtime="20201117 14:47:05.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.205" endtime="20201117 14:47:05.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.516" level="INFO">${RESULT} = [{'time': 0.024647097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2791000000000357e-05, 'source_diff': 4.2791000000000357e-05}, {'time': 0.024705028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:05.512" endtime="20201117 14:47:05.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.530" level="INFO">${ACCURACY} = {'time': [0.024647097, 0.024705028, 0.024768028, 0.024830042, 0.024888056, 0.024954069, 0.025019056, 0.025078083, 0.025136069, 0.025199083, 0.025265083, 0.025328111, 0.025392097, 0.025456111, 0.025521...</msg>
<status status="PASS" starttime="20201117 14:47:05.517" endtime="20201117 14:47:05.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.535" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.533" endtime="20201117 14:47:05.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.538" level="INFO">VALUE: [4.2791000000000357e-05, 4.2916999999999955e-05, 4.2639000000000565e-05, 4.3167000000000205e-05, 4.24999999999974e-05, 4.323599999999858e-05, 4.325000000000162e-05, 4.3082999999999316e-05, 4.323600000000205e-05, 4.3082999999999316e-05, 4.3082999999999316e-05, 4.2597000000001856e-05, 4.2402999999999885e-05, 4.250000000000087e-05, 4.2360999999997706e-05, 4.2680999999999275e-05, 4.250000000000087e-05, 4.273599999999808e-05, 4.258400000000176e-05, 4.2416999999999455e-05, 4.301400000000094e-05, 4.255600000000262e-05, 4.242999999999955e-05, 4.320799999999944e-05, 4.274999999999765e-05, 4.275000000000112e-05, 4.329200000000033e-05, 4.274999999999765e-05, 4.291599999999701e-05, 4.29860000000018e-05, 4.2611000000001426e-05, 4.2916999999999955e-05, 4.2847000000002106e-05, 4.275000000000112e-05, 4.2430999999999025e-05, 4.2653000000000135e-05, 4.283399999999854e-05, 4.31120000000014e-05, 4.26120000000009e-05, 4.29999999999979e-05, 4.2861000000001676e-05, 4.2416999999999455e-05, 4.2847000000002106e-05, 4.3082999999999316e-05, 4.242999999999955e-05, 4.316600000000073e-05, 4.266600000000023e-05, 4.251400000000044e-05, 4.280600000000287e-05, 4.2389000000000315e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.536" endtime="20201117 14:47:05.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.531" endtime="20201117 14:47:05.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.541" endtime="20201117 14:47:05.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.545" endtime="20201117 14:47:05.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.543" endtime="20201117 14:47:05.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.540" endtime="20201117 14:47:05.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.173" endtime="20201117 14:47:05.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.171" endtime="20201117 14:47:05.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.170" endtime="20201117 14:47:05.566"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.568" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.577" endtime="20201117 14:47:05.595"></status>
</kw>
<msg timestamp="20201117 14:47:05.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.575" endtime="20201117 14:47:05.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.596" endtime="20201117 14:47:05.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.599" endtime="20201117 14:47:05.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.573" endtime="20201117 14:47:05.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.571" endtime="20201117 14:47:05.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.609" endtime="20201117 14:47:05.894"></status>
</kw>
<msg timestamp="20201117 14:47:05.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025542306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025586167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.607" endtime="20201117 14:47:05.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025542306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025586167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.899" endtime="20201117 14:47:05.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.907" endtime="20201117 14:47:05.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.604" endtime="20201117 14:47:05.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.602" endtime="20201117 14:47:05.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.914" level="INFO">${RESULT} = [{'time': 0.025586167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3860999999999206e-05, 'source_diff': 4.3860999999999206e-05}, {'time': 0.025647222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:05.911" endtime="20201117 14:47:05.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.929" level="INFO">${ACCURACY} = {'time': [0.025586167, 0.025647222, 0.025714181, 0.025781222, 0.025844292, 0.025902208, 0.025964222, 0.026029264, 0.02609425, 0.02616025, 0.02621925, 0.02628425, 0.026349264, 0.026417264, 0.026480292,...</msg>
<status status="PASS" starttime="20201117 14:47:05.915" endtime="20201117 14:47:05.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.934" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.932" endtime="20201117 14:47:05.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.936" level="INFO">VALUE: [4.3860999999999206e-05, 4.3625000000001996e-05, 4.3667000000000705e-05, 4.427799999999829e-05, 4.384800000000258e-05, 4.4083000000000316e-05, 4.3596999999999386e-05, 4.427799999999829e-05, 4.394400000000062e-05, 4.3667000000000705e-05, 4.398599999999933e-05, 4.3416999999996986e-05, 4.34860000000023e-05, 4.424999999999915e-05, 4.4110999999999456e-05, 4.358399999999929e-05, 4.424999999999915e-05, 4.375000000000212e-05, 4.4083000000000316e-05, 4.4055000000001177e-05, 4.4096999999999886e-05, 4.408299999999685e-05, 4.3555000000000677e-05, 4.3596999999999386e-05, 4.4069000000000746e-05, 4.379200000000083e-05, 4.425000000000262e-05, 4.3403000000000885e-05, 4.354200000000058e-05, 4.3874999999998776e-05, 4.4180999999997306e-05, 4.4167000000001205e-05, 4.381999999999997e-05, 4.3694999999999845e-05, 4.3861000000002676e-05, 4.4333000000000566e-05, 4.345799999999969e-05, 4.3888999999998346e-05, 4.341600000000098e-05, 4.366600000000123e-05, 4.36800000000008e-05, 4.4153000000001635e-05, 4.352799999999754e-05, 4.373599999999908e-05, 4.3597000000002856e-05, 4.377799999999779e-05, 4.3903000000001385e-05, 4.350000000000187e-05, 4.3431000000000025e-05, 4.4166999999997736e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.935" endtime="20201117 14:47:05.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.930" endtime="20201117 14:47:05.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.940" endtime="20201117 14:47:05.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.943" endtime="20201117 14:47:05.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.942" endtime="20201117 14:47:05.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.938" endtime="20201117 14:47:05.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.569" endtime="20201117 14:47:05.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.567" endtime="20201117 14:47:05.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.566" endtime="20201117 14:47:05.964"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.967" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.975" endtime="20201117 14:47:05.992"></status>
</kw>
<msg timestamp="20201117 14:47:05.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.974" endtime="20201117 14:47:05.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.994" endtime="20201117 14:47:05.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.997" endtime="20201117 14:47:05.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.971" endtime="20201117 14:47:05.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.969" endtime="20201117 14:47:05.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.006" endtime="20201117 14:47:06.292"></status>
</kw>
<msg timestamp="20201117 14:47:06.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025021972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025066847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.004" endtime="20201117 14:47:06.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025021972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025066847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.296" endtime="20201117 14:47:06.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.305" endtime="20201117 14:47:06.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.002" endtime="20201117 14:47:06.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.000" endtime="20201117 14:47:06.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.312" level="INFO">${RESULT} = [{'time': 0.025066847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4874999999999776e-05, 'source_diff': 4.4874999999999776e-05}, {'time': 0.025132847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:06.308" endtime="20201117 14:47:06.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.325" level="INFO">${ACCURACY} = {'time': [0.025066847, 0.025132847, 0.025198847, 0.025261931, 0.025328861, 0.025388875, 0.025456875, 0.025519903, 0.025586889, 0.025647903, 0.025715903, 0.025776917, 0.025843917, 0.025905931, 0.025970...</msg>
<status status="PASS" starttime="20201117 14:47:06.313" endtime="20201117 14:47:06.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.330" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.329" endtime="20201117 14:47:06.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.333" level="INFO">VALUE: [4.4874999999999776e-05, 4.4597000000000386e-05, 4.522200000000101e-05, 4.49999999999999e-05, 4.4833000000001066e-05, 4.476400000000269e-05, 4.505600000000165e-05, 4.458400000000029e-05, 4.5083000000001316e-05, 4.5097000000000886e-05, 4.504199999999861e-05, 4.525000000000015e-05, 4.508400000000079e-05, 4.4417000000001455e-05, 4.452699999999907e-05, 4.493000000000205e-05, 4.44999999999994e-05, 4.490199999999944e-05, 4.4847000000000636e-05, 4.523600000000058e-05, 4.527799999999929e-05, 4.476399999999922e-05, 4.5069000000001747e-05, 4.509699999999742e-05, 4.529099999999939e-05, 4.4416999999997986e-05, 4.4653000000002135e-05, 4.4653000000002135e-05, 4.4666999999998236e-05, 4.4472999999999735e-05, 4.506899999999828e-05, 4.5195000000001345e-05, 4.474999999999965e-05, 4.474999999999965e-05, 4.490199999999944e-05, 4.495800000000119e-05, 4.494399999999815e-05, 4.5361000000000706e-05, 4.4347000000000136e-05, 4.451399999999897e-05, 4.4917000000001955e-05, 4.451399999999897e-05, 4.4916999999998486e-05, 4.5223000000000485e-05, 4.5139000000003066e-05, 4.509800000000036e-05, 4.459799999999986e-05, 4.491599999999901e-05, 4.4861000000000206e-05, 4.505499999999871e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.331" endtime="20201117 14:47:06.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.326" endtime="20201117 14:47:06.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.336" endtime="20201117 14:47:06.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.340" endtime="20201117 14:47:06.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.338" endtime="20201117 14:47:06.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.334" endtime="20201117 14:47:06.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.967" endtime="20201117 14:47:06.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.966" endtime="20201117 14:47:06.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.965" endtime="20201117 14:47:06.361"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.363" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.372" endtime="20201117 14:47:06.389"></status>
</kw>
<msg timestamp="20201117 14:47:06.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.371" endtime="20201117 14:47:06.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.391" endtime="20201117 14:47:06.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.393" endtime="20201117 14:47:06.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.368" endtime="20201117 14:47:06.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.365" endtime="20201117 14:47:06.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.403" endtime="20201117 14:47:06.689"></status>
</kw>
<msg timestamp="20201117 14:47:06.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025524111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025569806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.401" endtime="20201117 14:47:06.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025524111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025569806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.693" endtime="20201117 14:47:06.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.702" endtime="20201117 14:47:06.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.398" endtime="20201117 14:47:06.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.397" endtime="20201117 14:47:06.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.709" level="INFO">${RESULT} = [{'time': 0.025569806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5695000000001845e-05, 'source_diff': 4.5695000000001845e-05}, {'time': 0.025630819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:06.705" endtime="20201117 14:47:06.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.722" level="INFO">${ACCURACY} = {'time': [0.025569806, 0.025630819, 0.025694819, 0.025759847, 0.025820833, 0.025880861, 0.025946847, 0.026011861, 0.026080861, 0.026141875, 0.026207875, 0.026273958, 0.026342903, 0.026412944, 0.026477...</msg>
<status status="PASS" starttime="20201117 14:47:06.710" endtime="20201117 14:47:06.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.727" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.726" endtime="20201117 14:47:06.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.730" level="INFO">VALUE: [4.5695000000001845e-05, 4.559699999999792e-05, 4.588800000000087e-05, 4.56939999999989e-05, 4.615200000000069e-05, 4.5861000000001206e-05, 4.624999999999768e-05, 4.542999999999908e-05, 4.55000000000004e-05, 4.5916999999999486e-05, 4.5666999999999236e-05, 4.556899999999878e-05, 4.6097000000001886e-05, 4.595800000000219e-05, 4.586200000000068e-05, 4.573600000000108e-05, 4.609800000000136e-05, 4.624999999999768e-05, 4.558299999999835e-05, 4.606900000000275e-05, 4.6097000000001886e-05, 4.594399999999915e-05, 4.559800000000086e-05, 4.575000000000065e-05, 4.5583000000001817e-05, 4.558299999999835e-05, 4.5569000000002247e-05, 4.626400000000072e-05, 4.613800000000112e-05, 4.608400000000179e-05, 4.5416999999998986e-05, 4.552799999999954e-05, 4.606999999999875e-05, 4.608400000000179e-05, 4.5680999999998806e-05, 4.6013000000001e-05, 4.626400000000072e-05, 4.558299999999835e-05, 4.624999999999768e-05, 4.591600000000001e-05, 4.617999999999983e-05, 4.5652999999999666e-05, 4.602800000000004e-05, 4.552799999999954e-05, 4.608299999999885e-05, 4.575000000000065e-05, 4.625000000000115e-05, 4.5708999999997946e-05, 4.575000000000065e-05, 4.544400000000212e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.728" endtime="20201117 14:47:06.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.723" endtime="20201117 14:47:06.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.733" endtime="20201117 14:47:06.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.736" endtime="20201117 14:47:06.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.735" endtime="20201117 14:47:06.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.731" endtime="20201117 14:47:06.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.364" endtime="20201117 14:47:06.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.362" endtime="20201117 14:47:06.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.361" endtime="20201117 14:47:06.758"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.761" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.769" endtime="20201117 14:47:06.787"></status>
</kw>
<msg timestamp="20201117 14:47:06.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.767" endtime="20201117 14:47:06.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.789" endtime="20201117 14:47:06.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.791" endtime="20201117 14:47:06.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.765" endtime="20201117 14:47:06.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.763" endtime="20201117 14:47:06.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.801" endtime="20201117 14:47:07.087"></status>
</kw>
<msg timestamp="20201117 14:47:07.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025372792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025419653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.799" endtime="20201117 14:47:07.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025372792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025419653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.091" endtime="20201117 14:47:07.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.100" endtime="20201117 14:47:07.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.796" endtime="20201117 14:47:07.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.795" endtime="20201117 14:47:07.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.107" level="INFO">${RESULT} = [{'time': 0.025419653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.686099999999874e-05, 'source_diff': 4.686099999999874e-05}, {'time': 0.025480639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:07.103" endtime="20201117 14:47:07.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.120" level="INFO">${ACCURACY} = {'time': [0.025419653, 0.025480639, 0.025543653, 0.025613653, 0.025683667, 0.025749681, 0.025815681, 0.025876681, 0.025941694, 0.026003694, 0.026065736, 0.026133722, 0.026202722, 0.026271764, 0.026332...</msg>
<status status="PASS" starttime="20201117 14:47:07.108" endtime="20201117 14:47:07.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.125" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.124" endtime="20201117 14:47:07.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.128" level="INFO">VALUE: [4.686099999999874e-05, 4.708299999999985e-05, 4.674999999999818e-05, 4.724999999999868e-05, 4.6931000000000056e-05, 4.7167000000000736e-05, 4.730600000000043e-05, 4.674999999999818e-05, 4.7097000000002887e-05, 4.641600000000051e-05, 4.652800000000054e-05, 4.706900000000028e-05, 4.6903000000000916e-05, 4.687499999999831e-05, 4.676399999999775e-05, 4.658299999999935e-05, 4.675000000000165e-05, 4.6597000000002387e-05, 4.7194999999999876e-05, 4.6931000000000056e-05, 4.7181000000000306e-05, 4.6416999999999986e-05, 4.699999999999843e-05, 4.658400000000229e-05, 4.661099999999849e-05, 4.708299999999985e-05, 4.724999999999868e-05, 4.7139000000001596e-05, 4.676399999999775e-05, 4.6889000000001346e-05, 4.731900000000053e-05, 4.673600000000208e-05, 4.675000000000165e-05, 4.677800000000079e-05, 4.6416999999999986e-05, 4.684800000000211e-05, 4.661199999999796e-05, 4.673600000000208e-05, 4.6917000000000486e-05, 4.66939999999999e-05, 4.648599999999836e-05, 4.676400000000122e-05, 4.644399999999965e-05, 4.668000000000033e-05, 4.656999999999925e-05, 4.673600000000208e-05, 4.6416999999999986e-05, 4.7167000000000736e-05, 4.651400000000097e-05, 4.6917000000000486e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.126" endtime="20201117 14:47:07.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.121" endtime="20201117 14:47:07.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.131" endtime="20201117 14:47:07.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.135" endtime="20201117 14:47:07.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.133" endtime="20201117 14:47:07.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.130" endtime="20201117 14:47:07.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.761" endtime="20201117 14:47:07.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.759" endtime="20201117 14:47:07.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.759" endtime="20201117 14:47:07.156"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.158" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.167" endtime="20201117 14:47:07.185"></status>
</kw>
<msg timestamp="20201117 14:47:07.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.165" endtime="20201117 14:47:07.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.187" endtime="20201117 14:47:07.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.190" endtime="20201117 14:47:07.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.163" endtime="20201117 14:47:07.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.161" endtime="20201117 14:47:07.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.199" endtime="20201117 14:47:07.485"></status>
</kw>
<msg timestamp="20201117 14:47:07.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025522111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025570333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.198" endtime="20201117 14:47:07.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025522111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025570333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.490" endtime="20201117 14:47:07.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.498" endtime="20201117 14:47:07.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.195" endtime="20201117 14:47:07.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.193" endtime="20201117 14:47:07.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.505" level="INFO">${RESULT} = [{'time': 0.025570333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.822200000000054e-05, 'source_diff': 4.822200000000054e-05}, {'time': 0.025639319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:07.501" endtime="20201117 14:47:07.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.520" level="INFO">${ACCURACY} = {'time': [0.025570333, 0.025639319, 0.025703319, 0.025770417, 0.025841333, 0.025906347, 0.025975347, 0.026041375, 0.026113375, 0.026183375, 0.026252389, 0.026316403, 0.026386431, 0.026456403, 0.026526...</msg>
<status status="PASS" starttime="20201117 14:47:07.506" endtime="20201117 14:47:07.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.525" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.523" endtime="20201117 14:47:07.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.528" level="INFO">VALUE: [4.822200000000054e-05, 4.741600000000151e-05, 4.766599999999829e-05, 4.776399999999875e-05, 4.831900000000153e-05, 4.823600000000011e-05, 4.755499999999774e-05, 4.776399999999875e-05, 4.808300000000085e-05, 4.740299999999795e-05, 4.751400000000197e-05, 4.793099999999759e-05, 4.8194999999997407e-05, 4.799999999999943e-05, 4.7931000000001056e-05, 4.766699999999777e-05, 4.831999999999753e-05, 4.824999999999968e-05, 4.809700000000042e-05, 4.824999999999968e-05, 4.808300000000085e-05, 4.775000000000265e-05, 4.776400000000222e-05, 4.759699999999992e-05, 4.774999999999918e-05, 4.7403000000001416e-05, 4.8195000000000876e-05, 4.83330000000011e-05, 4.823600000000011e-05, 4.758399999999982e-05, 4.758399999999982e-05, 4.7931000000001056e-05, 4.773599999999961e-05, 4.801299999999953e-05, 4.808299999999738e-05, 4.792999999999811e-05, 4.818000000000183e-05, 4.811099999999999e-05, 4.826399999999925e-05, 4.816699999999827e-05, 4.7681000000000806e-05, 4.7931000000001056e-05, 4.791699999999802e-05, 4.81529999999987e-05, 4.748599999999936e-05, 4.824999999999968e-05, 4.827799999999882e-05, 4.7417000000000986e-05, 4.756900000000078e-05, 4.824999999999968e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.526" endtime="20201117 14:47:07.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.521" endtime="20201117 14:47:07.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.531" endtime="20201117 14:47:07.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.534" endtime="20201117 14:47:07.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.533" endtime="20201117 14:47:07.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.529" endtime="20201117 14:47:07.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.159" endtime="20201117 14:47:07.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.157" endtime="20201117 14:47:07.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.156" endtime="20201117 14:47:07.556"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.559" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.568" endtime="20201117 14:47:07.586"></status>
</kw>
<msg timestamp="20201117 14:47:07.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.566" endtime="20201117 14:47:07.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.587" endtime="20201117 14:47:07.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.590" endtime="20201117 14:47:07.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.563" endtime="20201117 14:47:07.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.561" endtime="20201117 14:47:07.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.600" endtime="20201117 14:47:07.885"></status>
</kw>
<msg timestamp="20201117 14:47:07.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026385389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026434125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.598" endtime="20201117 14:47:07.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026385389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026434125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.889" endtime="20201117 14:47:07.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.898" endtime="20201117 14:47:07.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.595" endtime="20201117 14:47:07.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.594" endtime="20201117 14:47:07.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.905" level="INFO">${RESULT} = [{'time': 0.026434125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.873600000000061e-05, 'source_diff': 4.873600000000061e-05}, {'time': 0.026501125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:07.901" endtime="20201117 14:47:07.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.919" level="INFO">${ACCURACY} = {'time': [0.026434125, 0.026501125, 0.026570125, 0.026634125, 0.026697139, 0.026764153, 0.026836153, 0.026908153, 0.026976236, 0.027039181, 0.027104194, 0.027169194, 0.027240236, 0.027305236, 0.027369...</msg>
<status status="PASS" starttime="20201117 14:47:07.906" endtime="20201117 14:47:07.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.924" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.923" endtime="20201117 14:47:07.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.926" level="INFO">VALUE: [4.873600000000061e-05, 4.891699999999902e-05, 4.868099999999834e-05, 4.9153000000003166e-05, 4.88330000000016e-05, 4.841699999999852e-05, 4.8653000000002666e-05, 4.933400000000157e-05, 4.880499999999899e-05, 4.887500000000031e-05, 4.866600000000276e-05, 4.884700000000117e-05, 4.927799999999982e-05, 4.895800000000172e-05, 4.916599999999979e-05, 4.849999999999993e-05, 4.858299999999788e-05, 4.894499999999816e-05, 4.88469999999977e-05, 4.8417000000001986e-05, 4.934700000000167e-05, 4.923600000000111e-05, 4.911100000000099e-05, 4.926400000000025e-05, 4.8403000000002416e-05, 4.8667000000002236e-05, 4.888899999999988e-05, 4.876300000000028e-05, 4.926400000000025e-05, 4.858299999999788e-05, 4.840199999999947e-05, 4.849999999999993e-05, 4.926400000000025e-05, 4.858300000000135e-05, 4.925000000000068e-05, 4.856899999999831e-05, 4.8444999999997657e-05, 4.9320000000002e-05, 4.852800000000254e-05, 4.875000000000018e-05, 4.891699999999902e-05, 4.934799999999767e-05, 4.908399999999785e-05, 4.845799999999775e-05, 4.915200000000022e-05, 4.881899999999856e-05, 4.895800000000172e-05, 4.866599999999929e-05, 4.902799999999957e-05, 4.855499999999874e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.925" endtime="20201117 14:47:07.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.920" endtime="20201117 14:47:07.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.929" endtime="20201117 14:47:07.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.933" endtime="20201117 14:47:07.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.931" endtime="20201117 14:47:07.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.928" endtime="20201117 14:47:07.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.559" endtime="20201117 14:47:07.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.557" endtime="20201117 14:47:07.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.556" endtime="20201117 14:47:07.954"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.956" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.965" endtime="20201117 14:47:07.983"></status>
</kw>
<msg timestamp="20201117 14:47:07.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.963" endtime="20201117 14:47:07.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.985" endtime="20201117 14:47:07.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.988" endtime="20201117 14:47:07.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.961" endtime="20201117 14:47:07.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.959" endtime="20201117 14:47:07.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.997" endtime="20201117 14:47:08.283"></status>
</kw>
<msg timestamp="20201117 14:47:08.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024950236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024999972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.996" endtime="20201117 14:47:08.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024950236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024999972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.288" endtime="20201117 14:47:08.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.297" endtime="20201117 14:47:08.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.993" endtime="20201117 14:47:08.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.991" endtime="20201117 14:47:08.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.304" level="INFO">${RESULT} = [{'time': 0.024999972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.973599999999814e-05, 'source_diff': 4.973599999999814e-05}, {'time': 0.025064944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:08.300" endtime="20201117 14:47:08.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.317" level="INFO">${ACCURACY} = {'time': [0.024999972, 0.025064944, 0.025130944, 0.025195944, 0.025267958, 0.025339958, 0.025409972, 0.025478972, 0.025546986, 0.025621, 0.025693, 0.025765028, 0.025832014, 0.025903028, 0.025969097, 0...</msg>
<status status="PASS" starttime="20201117 14:47:08.305" endtime="20201117 14:47:08.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.322" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.321" endtime="20201117 14:47:08.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.325" level="INFO">VALUE: [4.973599999999814e-05, 4.958299999999888e-05, 5.026299999999831e-05, 5.023600000000211e-05, 5.026400000000125e-05, 4.9901999999997504e-05, 4.948599999999789e-05, 4.941600000000004e-05, 4.966699999999977e-05, 5.03330000000031e-05, 5.008299999999938e-05, 5.009699999999895e-05, 4.938900000000038e-05, 4.983400000000207e-05, 4.981899999999956e-05, 4.991700000000002e-05, 5.001299999999806e-05, 4.974999999999771e-05, 5.011100000000199e-05, 5.025000000000168e-05, 4.940200000000047e-05, 5.000000000000143e-05, 5.012500000000156e-05, 4.976400000000075e-05, 5.0014000000001e-05, 4.991700000000002e-05, 4.979199999999989e-05, 5.008300000000285e-05, 5.009700000000242e-05, 4.958399999999835e-05, 4.977699999999738e-05, 5.009799999999842e-05, 4.959800000000139e-05, 5.025000000000168e-05, 4.991600000000054e-05, 4.948600000000136e-05, 4.941600000000004e-05, 4.952800000000007e-05, 5.012499999999809e-05, 4.976400000000075e-05, 5.008299999999938e-05, 4.991700000000002e-05, 5.018099999999984e-05, 4.980599999999946e-05, 4.993099999999959e-05, 5.013900000000113e-05, 4.986200000000121e-05, 5.026400000000125e-05, 4.958399999999835e-05, 4.980499999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.323" endtime="20201117 14:47:08.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.318" endtime="20201117 14:47:08.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.328" endtime="20201117 14:47:08.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.331" endtime="20201117 14:47:08.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.330" endtime="20201117 14:47:08.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.326" endtime="20201117 14:47:08.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.957" endtime="20201117 14:47:08.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.955" endtime="20201117 14:47:08.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.954" endtime="20201117 14:47:08.353"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.355" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.364" endtime="20201117 14:47:08.381"></status>
</kw>
<msg timestamp="20201117 14:47:08.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.362" endtime="20201117 14:47:08.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.383" endtime="20201117 14:47:08.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.385" endtime="20201117 14:47:08.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.359" endtime="20201117 14:47:08.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.357" endtime="20201117 14:47:08.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.395" endtime="20201117 14:47:08.680"></status>
</kw>
<msg timestamp="20201117 14:47:08.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024578903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024629792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.393" endtime="20201117 14:47:08.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024578903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024629792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.684" endtime="20201117 14:47:08.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.693" endtime="20201117 14:47:08.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.390" endtime="20201117 14:47:08.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.389" endtime="20201117 14:47:08.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.700" level="INFO">${RESULT} = [{'time': 0.024629792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.088900000000188e-05, 'source_diff': 5.088900000000188e-05}, {'time': 0.024698792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:08.696" endtime="20201117 14:47:08.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.713" level="INFO">${ACCURACY} = {'time': [0.024629792, 0.024698792, 0.024769806, 0.024843819, 0.024911819, 0.024985833, 0.025056847, 0.025129847, 0.025195861, 0.025270875, 0.025336875, 0.025409875, 0.025477889, 0.025552889, 0.025618...</msg>
<status status="PASS" starttime="20201117 14:47:08.701" endtime="20201117 14:47:08.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.718" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.717" endtime="20201117 14:47:08.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.721" level="INFO">VALUE: [5.088900000000188e-05, 5.107000000000028e-05, 5.0736999999998617e-05, 5.124999999999921e-05, 5.106900000000081e-05, 5.043000000000061e-05, 5.049999999999846e-05, 5.056900000000031e-05, 5.076399999999828e-05, 5.0708e-05, 5.076399999999828e-05, 5.124999999999921e-05, 5.041700000000052e-05, 5.131999999999706e-05, 5.124999999999921e-05, 5.091699999999755e-05, 5.066700000000077e-05, 5.050000000000193e-05, 5.0915999999998074e-05, 5.111100000000299e-05, 5.052800000000107e-05, 5.074999999999871e-05, 5.075000000000218e-05, 5.091600000000154e-05, 5.118100000000084e-05, 5.13470000000002e-05, 5.108299999999691e-05, 5.076400000000175e-05, 5.077799999999785e-05, 5.094500000000016e-05, 5.066700000000077e-05, 5.13340000000001e-05, 5.044400000000018e-05, 5.11669999999978e-05, 5.051300000000203e-05, 5.056900000000031e-05, 5.124999999999921e-05, 5.108300000000038e-05, 5.126399999999878e-05, 5.129199999999792e-05, 5.040300000000095e-05, 5.068100000000034e-05, 5.049999999999846e-05, 5.058299999999988e-05, 5.0679999999997394e-05, 5.093099999999712e-05, 5.116700000000127e-05, 5.049999999999846e-05, 5.043100000000009e-05, 5.066700000000077e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.719" endtime="20201117 14:47:08.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.714" endtime="20201117 14:47:08.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.724" endtime="20201117 14:47:08.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.727" endtime="20201117 14:47:08.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.726" endtime="20201117 14:47:08.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.722" endtime="20201117 14:47:08.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.356" endtime="20201117 14:47:08.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.354" endtime="20201117 14:47:08.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.353" endtime="20201117 14:47:08.749"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.751" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.760" endtime="20201117 14:47:08.778"></status>
</kw>
<msg timestamp="20201117 14:47:08.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.758" endtime="20201117 14:47:08.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.780" endtime="20201117 14:47:08.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.783" endtime="20201117 14:47:08.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.755" endtime="20201117 14:47:08.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.753" endtime="20201117 14:47:08.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.793" endtime="20201117 14:47:09.079"></status>
</kw>
<msg timestamp="20201117 14:47:09.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025767389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02581925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:08.791" endtime="20201117 14:47:09.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025767389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02581925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:09.083" endtime="20201117 14:47:09.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.091" endtime="20201117 14:47:09.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.788" endtime="20201117 14:47:09.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.786" endtime="20201117 14:47:09.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.099" level="INFO">${RESULT} = [{'time': 0.02581925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.18609999999968e-05, 'source_diff': 5.18609999999968e-05}, {'time': 0.025889264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:09.095" endtime="20201117 14:47:09.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.113" level="INFO">${ACCURACY} = {'time': [0.02581925, 0.025889264, 0.025956278, 0.026026278, 0.026098292, 0.026168306, 0.026244306, 0.026319306, 0.026391319, 0.026460333, 0.026528333, 0.026598417, 0.026669347, 0.026742361, 0.0268103...</msg>
<status status="PASS" starttime="20201117 14:47:09.100" endtime="20201117 14:47:09.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.118" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.117" endtime="20201117 14:47:09.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.121" level="INFO">VALUE: [5.18609999999968e-05, 5.143099999999762e-05, 5.151399999999903e-05, 5.157000000000078e-05, 5.143099999999762e-05, 5.212500000000009e-05, 5.168099999999787e-05, 5.149999999999946e-05, 5.206899999999834e-05, 5.174999999999971e-05, 5.158300000000088e-05, 5.165299999999873e-05, 5.225000000000021e-05, 5.209700000000095e-05, 5.209700000000095e-05, 5.209700000000095e-05, 5.161100000000002e-05, 5.176399999999928e-05, 5.140300000000195e-05, 5.199999999999996e-05, 5.208400000000085e-05, 5.159799999999992e-05, 5.140299999999848e-05, 5.149999999999946e-05, 5.208299999999791e-05, 5.197200000000082e-05, 5.223600000000064e-05, 5.168100000000134e-05, 5.184699999999723e-05, 5.225000000000021e-05, 5.22080000000015e-05, 5.144500000000066e-05, 5.21669999999988e-05, 5.201399999999953e-05, 5.174999999999971e-05, 5.174999999999971e-05, 5.141699999999805e-05, 5.21669999999988e-05, 5.219400000000193e-05, 5.159700000000045e-05, 5.172200000000057e-05, 5.225000000000021e-05, 5.141700000000152e-05, 5.219400000000193e-05, 5.198600000000039e-05, 5.141700000000152e-05, 5.219500000000141e-05, 5.183299999999766e-05, 5.177800000000232e-05, 5.158400000000035e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.119" endtime="20201117 14:47:09.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.114" endtime="20201117 14:47:09.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.124" endtime="20201117 14:47:09.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.127" endtime="20201117 14:47:09.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.126" endtime="20201117 14:47:09.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.122" endtime="20201117 14:47:09.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.752" endtime="20201117 14:47:09.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.750" endtime="20201117 14:47:09.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.749" endtime="20201117 14:47:09.149"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.151" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.160" endtime="20201117 14:47:09.177"></status>
</kw>
<msg timestamp="20201117 14:47:09.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.158" endtime="20201117 14:47:09.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.179" endtime="20201117 14:47:09.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.182" endtime="20201117 14:47:09.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.155" endtime="20201117 14:47:09.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.153" endtime="20201117 14:47:09.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.191" endtime="20201117 14:47:09.477"></status>
</kw>
<msg timestamp="20201117 14:47:09.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025175972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025229333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.189" endtime="20201117 14:47:09.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025175972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025229333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.481" endtime="20201117 14:47:09.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.490" endtime="20201117 14:47:09.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.187" endtime="20201117 14:47:09.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.185" endtime="20201117 14:47:09.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.497" level="INFO">${RESULT} = [{'time': 0.025229333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.33609999999983e-05, 'source_diff': 5.33609999999983e-05}, {'time': 0.025302347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:09.493" endtime="20201117 14:47:09.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.510" level="INFO">${ACCURACY} = {'time': [0.025229333, 0.025302347, 0.025371347, 0.025440361, 0.025515361, 0.025587361, 0.025663375, 0.025731375, 0.025799389, 0.025869403, 0.025938403, 0.026006431, 0.026083417, 0.026159431, 0.026228...</msg>
<status status="PASS" starttime="20201117 14:47:09.498" endtime="20201117 14:47:09.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.515" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.514" endtime="20201117 14:47:09.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.518" level="INFO">VALUE: [5.33609999999983e-05, 5.309699999999848e-05, 5.2415999999999574e-05, 5.2680000000002863e-05, 5.297200000000182e-05, 5.30280000000001e-05, 5.276400000000028e-05, 5.258300000000188e-05, 5.256999999999831e-05, 5.259699999999798e-05, 5.23609999999973e-05, 5.319499999999894e-05, 5.28340000000016e-05, 5.308400000000185e-05, 5.276300000000081e-05, 5.331999999999906e-05, 5.309699999999848e-05, 5.256899999999884e-05, 5.258299999999841e-05, 5.275000000000071e-05, 5.243100000000209e-05, 5.301400000000053e-05, 5.254199999999917e-05, 5.258300000000188e-05, 5.273600000000114e-05, 5.275000000000071e-05, 5.293099999999912e-05, 5.250000000000046e-05, 5.276299999999734e-05, 5.2415999999999574e-05, 5.300000000000096e-05, 5.326400000000078e-05, 5.326400000000078e-05, 5.305499999999977e-05, 5.290299999999998e-05, 5.320899999999851e-05, 5.272299999999758e-05, 5.333299999999916e-05, 5.327800000000035e-05, 5.308300000000238e-05, 5.325000000000121e-05, 5.2957999999998784e-05, 5.333399999999863e-05, 5.243099999999862e-05, 5.26669999999993e-05, 5.283299999999866e-05, 5.2430000000002613e-05, 5.2665999999999824e-05, 5.298600000000139e-05, 5.259699999999798e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.516" endtime="20201117 14:47:09.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.511" endtime="20201117 14:47:09.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.521" endtime="20201117 14:47:09.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.524" endtime="20201117 14:47:09.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.523" endtime="20201117 14:47:09.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.519" endtime="20201117 14:47:09.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.152" endtime="20201117 14:47:09.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.150" endtime="20201117 14:47:09.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.149" endtime="20201117 14:47:09.550"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.552" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.561" endtime="20201117 14:47:09.579"></status>
</kw>
<msg timestamp="20201117 14:47:09.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.559" endtime="20201117 14:47:09.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.580" endtime="20201117 14:47:09.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.583" endtime="20201117 14:47:09.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.556" endtime="20201117 14:47:09.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.554" endtime="20201117 14:47:09.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.593" endtime="20201117 14:47:09.881"></status>
</kw>
<msg timestamp="20201117 14:47:09.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029448042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029502417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.592" endtime="20201117 14:47:09.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029448042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029502417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.885" endtime="20201117 14:47:09.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.893" endtime="20201117 14:47:09.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.589" endtime="20201117 14:47:09.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.587" endtime="20201117 14:47:09.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.900" level="INFO">${RESULT} = [{'time': 0.029502417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.437499999999887e-05, 'source_diff': 5.437499999999887e-05}, {'time': 0.029579486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:09.897" endtime="20201117 14:47:09.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.914" level="INFO">${ACCURACY} = {'time': [0.029502417, 0.029579486, 0.029652431, 0.029720486, 0.029796472, 0.029873458, 0.029944472, 0.030013472, 0.0300915, 0.0301695, 0.0302405, 0.030318528, 0.030386542, 0.030458569, 0.030530542, 0...</msg>
<status status="PASS" starttime="20201117 14:47:09.901" endtime="20201117 14:47:09.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.919" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.918" endtime="20201117 14:47:09.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.921" level="INFO">VALUE: [5.437499999999887e-05, 5.431899999999712e-05, 5.4249999999998744e-05, 5.3457999999999284e-05, 5.434699999999973e-05, 5.354099999999723e-05, 5.4263999999998314e-05, 5.408299999999991e-05, 5.4249999999998744e-05, 5.393100000000012e-05, 5.415300000000123e-05, 5.43609999999993e-05, 5.4277999999997883e-05, 5.345800000000275e-05, 5.426400000000178e-05, 5.408399999999938e-05, 5.343099999999962e-05, 5.344499999999919e-05, 5.358299999999941e-05, 5.418100000000037e-05, 5.358299999999941e-05, 5.334699999999873e-05, 5.350000000000146e-05, 5.408299999999991e-05, 5.381999999999956e-05, 5.391700000000055e-05, 5.41670000000008e-05, 5.431999999999659e-05, 5.408399999999591e-05, 5.3457999999999284e-05, 5.3485999999998424e-05, 5.376299999999834e-05, 5.408399999999591e-05, 5.3416000000000574e-05, 5.4165999999994385e-05, 5.4180000000000894e-05, 5.4221999999999604e-05, 5.3735999999998674e-05, 5.390300000000098e-05, 5.350000000000493e-05, 5.406900000000381e-05, 5.4277999999997883e-05, 5.377800000000432e-05, 5.355600000000321e-05, 5.4263999999998314e-05, 5.358400000000235e-05, 5.3749999999998244e-05, 5.361100000000202e-05, 5.408299999999644e-05, 5.3430000000000144e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.920" endtime="20201117 14:47:09.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.915" endtime="20201117 14:47:09.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.925" endtime="20201117 14:47:09.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.929" endtime="20201117 14:47:09.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.927" endtime="20201117 14:47:09.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.923" endtime="20201117 14:47:09.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.553" endtime="20201117 14:47:09.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.551" endtime="20201117 14:47:09.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.550" endtime="20201117 14:47:09.950"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.952" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.961" endtime="20201117 14:47:09.978"></status>
</kw>
<msg timestamp="20201117 14:47:09.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.959" endtime="20201117 14:47:09.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.979" endtime="20201117 14:47:09.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.982" endtime="20201117 14:47:09.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.956" endtime="20201117 14:47:09.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.954" endtime="20201117 14:47:09.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.991" endtime="20201117 14:47:10.278"></status>
</kw>
<msg timestamp="20201117 14:47:10.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024658333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024713722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.990" endtime="20201117 14:47:10.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024658333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024713722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.282" endtime="20201117 14:47:10.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.291" endtime="20201117 14:47:10.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.987" endtime="20201117 14:47:10.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.985" endtime="20201117 14:47:10.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.298" level="INFO">${RESULT} = [{'time': 0.024713722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.538899999999944e-05, 'source_diff': 5.538899999999944e-05}, {'time': 0.024790722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:10.294" endtime="20201117 14:47:10.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.311" level="INFO">${ACCURACY} = {'time': [0.024713722, 0.024790722, 0.024862722, 0.02493175, 0.025005736, 0.025083764, 0.025153778, 0.025230764, 0.025309792, 0.025383792, 0.025458792, 0.025531847, 0.025606806, 0.025682819, 0.0257548...</msg>
<status status="PASS" starttime="20201117 14:47:10.299" endtime="20201117 14:47:10.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.316" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.315" endtime="20201117 14:47:10.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.319" level="INFO">VALUE: [5.538899999999944e-05, 5.4416000000001574e-05, 5.5165999999998855e-05, 5.480599999999752e-05, 5.490300000000198e-05, 5.534700000000073e-05, 5.477800000000185e-05, 5.491699999999808e-05, 5.482000000000056e-05, 5.509799999999995e-05, 5.441700000000105e-05, 5.50549999999983e-05, 5.458399999999988e-05, 5.4415999999998105e-05, 5.4666000000001824e-05, 5.5165999999998855e-05, 5.531899999999812e-05, 5.475000000000271e-05, 5.491700000000155e-05, 5.534700000000073e-05, 5.441700000000105e-05, 5.533300000000116e-05, 5.491700000000155e-05, 5.4694000000000964e-05, 5.468100000000087e-05, 5.454099999999823e-05, 5.522300000000008e-05, 5.508299999999744e-05, 5.508300000000091e-05, 5.529099999999898e-05, 5.484700000000023e-05, 5.5263999999999314e-05, 5.4763999999998814e-05, 5.466699999999783e-05, 5.4735999999999674e-05, 5.461099999999955e-05, 5.508300000000091e-05, 5.5236000000000174e-05, 5.5263999999999314e-05, 5.509799999999995e-05, 5.4930000000001644e-05, 5.508400000000038e-05, 5.4985999999999924e-05, 5.4415999999998105e-05, 5.481900000000109e-05, 5.5277999999998884e-05, 5.441700000000105e-05, 5.483299999999719e-05, 5.462499999999912e-05, 5.506899999999787e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.317" endtime="20201117 14:47:10.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.312" endtime="20201117 14:47:10.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.322" endtime="20201117 14:47:10.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.326" endtime="20201117 14:47:10.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.324" endtime="20201117 14:47:10.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.321" endtime="20201117 14:47:10.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.953" endtime="20201117 14:47:10.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.951" endtime="20201117 14:47:10.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.950" endtime="20201117 14:47:10.347"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.350" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.358" endtime="20201117 14:47:10.376"></status>
</kw>
<msg timestamp="20201117 14:47:10.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.357" endtime="20201117 14:47:10.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.378" endtime="20201117 14:47:10.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.381" endtime="20201117 14:47:10.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.354" endtime="20201117 14:47:10.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.352" endtime="20201117 14:47:10.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.390" endtime="20201117 14:47:10.676"></status>
</kw>
<msg timestamp="20201117 14:47:10.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025933153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025989347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.388" endtime="20201117 14:47:10.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025933153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025989347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.680" endtime="20201117 14:47:10.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.689" endtime="20201117 14:47:10.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.386" endtime="20201117 14:47:10.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.384" endtime="20201117 14:47:10.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.696" level="INFO">${RESULT} = [{'time': 0.025989347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6193999999998995e-05, 'source_diff': 5.6193999999998995e-05}, {'time': 0.026060375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:10.692" endtime="20201117 14:47:10.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.711" level="INFO">${ACCURACY} = {'time': [0.025989347, 0.026060375, 0.026132375, 0.026204375, 0.026280389, 0.026354389, 0.026430431, 0.026510417, 0.026581417, 0.026660444, 0.026732472, 0.026805458, 0.026878514, 0.026949472, 0.027019...</msg>
<status status="PASS" starttime="20201117 14:47:10.697" endtime="20201117 14:47:10.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.716" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.715" endtime="20201117 14:47:10.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.719" level="INFO">VALUE: [5.6193999999998995e-05, 5.6250000000000744e-05, 5.559700000000098e-05, 5.591699999999908e-05, 5.6000000000000494e-05, 5.5750000000000244e-05, 5.611200000000052e-05, 5.609800000000095e-05, 5.608399999999791e-05, 5.626299999999737e-05, 5.612500000000062e-05, 5.559700000000098e-05, 5.615299999999976e-05, 5.559699999999751e-05, 5.561099999999708e-05, 5.6222000000001604e-05, 5.590299999999951e-05, 5.634700000000173e-05, 5.556900000000184e-05, 5.5750000000000244e-05, 5.611100000000105e-05, 5.6249999999997274e-05, 5.590299999999951e-05, 5.583400000000113e-05, 5.6264000000000314e-05, 5.5972000000001354e-05, 5.583299999999819e-05, 5.606899999999887e-05, 5.5929999999999175e-05, 5.5986000000000924e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.5750000000000244e-05, 5.543099999999815e-05, 5.619499999999847e-05, 5.618100000000237e-05, 5.633400000000163e-05, 5.558399999999741e-05, 5.563899999999969e-05, 5.6236000000001174e-05, 5.5929999999999175e-05, 5.5680000000002394e-05, 5.5499999999999994e-05, 5.6250000000000744e-05, 5.609699999999801e-05, 5.6236000000001174e-05, 5.5777999999999384e-05, 5.6264000000000314e-05, 5.6014000000000064e-05, 5.609699999999801e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.717" endtime="20201117 14:47:10.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.712" endtime="20201117 14:47:10.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.722" endtime="20201117 14:47:10.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.725" endtime="20201117 14:47:10.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.724" endtime="20201117 14:47:10.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.720" endtime="20201117 14:47:10.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.350" endtime="20201117 14:47:10.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.349" endtime="20201117 14:47:10.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.348" endtime="20201117 14:47:10.747"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.749" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.758" endtime="20201117 14:47:10.775"></status>
</kw>
<msg timestamp="20201117 14:47:10.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.756" endtime="20201117 14:47:10.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.776" endtime="20201117 14:47:10.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.779" endtime="20201117 14:47:10.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.754" endtime="20201117 14:47:10.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.751" endtime="20201117 14:47:10.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.788" endtime="20201117 14:47:11.074"></status>
</kw>
<msg timestamp="20201117 14:47:11.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024843764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0249005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:10.787" endtime="20201117 14:47:11.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024843764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0249005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:11.079" endtime="20201117 14:47:11.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.087" endtime="20201117 14:47:11.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.784" endtime="20201117 14:47:11.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.782" endtime="20201117 14:47:11.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.094" level="INFO">${RESULT} = [{'time': 0.0249005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6735999999998205e-05, 'source_diff': 5.6735999999998205e-05}, {'time': 0.024973486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:11.091" endtime="20201117 14:47:11.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.108" level="INFO">${ACCURACY} = {'time': [0.0249005, 0.024973486, 0.0250495, 0.0251215, 0.025198542, 0.025273514, 0.025352542, 0.025428528, 0.025503583, 0.025581556, 0.025657556, 0.025738569, 0.025809569, 0.025889583, 0.025962611, 0...</msg>
<status status="PASS" starttime="20201117 14:47:11.095" endtime="20201117 14:47:11.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.113" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.112" endtime="20201117 14:47:11.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.116" level="INFO">VALUE: [5.6735999999998205e-05, 5.658299999999894e-05, 5.7249999999998274e-05, 5.693100000000312e-05, 5.7042000000000204e-05, 5.640300000000001e-05, 5.71809999999999e-05, 5.6805999999999524e-05, 5.711099999999858e-05, 5.7263999999997844e-05, 5.690300000000051e-05, 5.734699999999926e-05, 5.708299999999944e-05, 5.6750000000001244e-05, 5.711099999999858e-05, 5.708299999999944e-05, 5.691700000000008e-05, 5.668100000000287e-05, 5.665300000000026e-05, 5.666699999999983e-05, 5.7319999999999593e-05, 5.7249999999998274e-05, 5.6569999999998843e-05, 5.681900000000309e-05, 5.662500000000112e-05, 5.7278000000000884e-05, 5.708299999999944e-05, 5.709699999999901e-05, 5.7000000000001494e-05, 5.681899999999962e-05, 5.6750000000001244e-05, 5.6778000000000384e-05, 5.691700000000008e-05, 5.683399999999866e-05, 5.658400000000188e-05, 5.7069999999999343e-05, 5.6569999999998843e-05, 5.7083999999998913e-05, 5.7278000000000884e-05, 5.686099999999833e-05, 5.7277999999997414e-05, 5.6764000000000814e-05, 5.711099999999858e-05, 5.708299999999944e-05, 5.6444000000002714e-05, 5.663900000000069e-05, 5.716700000000033e-05, 5.736099999999883e-05, 5.7069999999999343e-05, 5.658399999999841e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.114" endtime="20201117 14:47:11.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.109" endtime="20201117 14:47:11.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.119" endtime="20201117 14:47:11.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.122" endtime="20201117 14:47:11.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.121" endtime="20201117 14:47:11.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.117" endtime="20201117 14:47:11.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.750" endtime="20201117 14:47:11.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.748" endtime="20201117 14:47:11.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.747" endtime="20201117 14:47:11.144"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.146" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.155" endtime="20201117 14:47:11.172"></status>
</kw>
<msg timestamp="20201117 14:47:11.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.153" endtime="20201117 14:47:11.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.174" endtime="20201117 14:47:11.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.176" endtime="20201117 14:47:11.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.150" endtime="20201117 14:47:11.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.148" endtime="20201117 14:47:11.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.186" endtime="20201117 14:47:11.473"></status>
</kw>
<msg timestamp="20201117 14:47:11.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024798306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024856097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.184" endtime="20201117 14:47:11.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024798306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024856097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.477" endtime="20201117 14:47:11.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.486" endtime="20201117 14:47:11.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.182" endtime="20201117 14:47:11.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.180" endtime="20201117 14:47:11.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.493" level="INFO">${RESULT} = [{'time': 0.024856097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.779100000000148e-05, 'source_diff': 5.779100000000148e-05}, {'time': 0.024929111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:11.489" endtime="20201117 14:47:11.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.507" level="INFO">${ACCURACY} = {'time': [0.024856097, 0.024929111, 0.025011125, 0.025084125, 0.025160139, 0.025240153, 0.025314153, 0.025392181, 0.025468167, 0.025550181, 0.025623194, 0.025705208, 0.025784208, 0.025864222, 0.025946...</msg>
<status status="PASS" starttime="20201117 14:47:11.494" endtime="20201117 14:47:11.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.511" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.510" endtime="20201117 14:47:11.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.514" level="INFO">VALUE: [5.779100000000148e-05, 5.759699999999951e-05, 5.793099999999718e-05, 5.7999999999999025e-05, 5.78610000000028e-05, 5.766700000000083e-05, 5.816699999999786e-05, 5.76810000000004e-05, 5.816700000000133e-05, 5.7820000000000094e-05, 5.759699999999951e-05, 5.7749999999998775e-05, 5.7735999999999205e-05, 5.8249999999999275e-05, 5.7764000000001814e-05, 5.7735999999999205e-05, 5.743100000000015e-05, 5.7486000000002424e-05, 5.758299999999994e-05, 5.8236000000003174e-05, 5.741700000000058e-05, 5.7499999999998525e-05, 5.7430000000000675e-05, 5.816700000000133e-05, 5.779099999999801e-05, 5.804099999999826e-05, 5.806900000000087e-05, 5.809700000000001e-05, 5.759699999999951e-05, 5.8250000000002744e-05, 5.744499999999972e-05, 5.766699999999736e-05, 5.784699999999976e-05, 5.8041999999997734e-05, 5.7749999999998775e-05, 5.813900000000219e-05, 5.7444000000000245e-05, 5.766700000000083e-05, 5.7694000000000495e-05, 5.8056000000000774e-05, 5.7916000000001605e-05, 5.7694000000000495e-05, 5.783300000000019e-05, 5.7764000000001814e-05, 5.809700000000001e-05, 5.8277999999998414e-05, 5.761099999999908e-05, 5.738900000000144e-05, 5.816700000000133e-05, 5.8028000000001634e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.512" endtime="20201117 14:47:11.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.507" endtime="20201117 14:47:11.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.517" endtime="20201117 14:47:11.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.521" endtime="20201117 14:47:11.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.519" endtime="20201117 14:47:11.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.515" endtime="20201117 14:47:11.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.147" endtime="20201117 14:47:11.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.145" endtime="20201117 14:47:11.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.144" endtime="20201117 14:47:11.542"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.544" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.553" endtime="20201117 14:47:11.572"></status>
</kw>
<msg timestamp="20201117 14:47:11.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.551" endtime="20201117 14:47:11.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.573" endtime="20201117 14:47:11.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.576" endtime="20201117 14:47:11.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.549" endtime="20201117 14:47:11.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.546" endtime="20201117 14:47:11.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.586" endtime="20201117 14:47:11.872"></status>
</kw>
<msg timestamp="20201117 14:47:11.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025016, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025074708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:11.584" endtime="20201117 14:47:11.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025016, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025074708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:11.876" endtime="20201117 14:47:11.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.885" endtime="20201117 14:47:11.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.581" endtime="20201117 14:47:11.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.580" endtime="20201117 14:47:11.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.892" level="INFO">${RESULT} = [{'time': 0.025074708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8708000000001065e-05, 'source_diff': 5.8708000000001065e-05}, {'time': 0.025150778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:11.888" endtime="20201117 14:47:11.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.905" level="INFO">${ACCURACY} = {'time': [0.025074708, 0.025150778, 0.02522875, 0.025305736, 0.02538275, 0.02545675, 0.02553775, 0.025614764, 0.025689778, 0.025769778, 0.025847806, 0.025922806, 0.025996819, 0.026078819, 0.026161833,...</msg>
<status status="PASS" starttime="20201117 14:47:11.893" endtime="20201117 14:47:11.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.910" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.909" endtime="20201117 14:47:11.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.913" level="INFO">VALUE: [5.8708000000001065e-05, 5.915299999999929e-05, 5.912500000000015e-05, 5.858299999999747e-05, 5.843099999999768e-05, 5.8777999999998914e-05, 5.840300000000201e-05, 5.8792000000001954e-05, 5.891699999999861e-05, 5.9320000000001594e-05, 5.8763999999999345e-05, 5.9084000000000914e-05, 5.9236000000000705e-05, 5.908299999999797e-05, 5.9263999999999845e-05, 5.888899999999947e-05, 5.9000000000000025e-05, 5.858300000000094e-05, 5.891700000000208e-05, 5.915299999999929e-05, 5.85550000000018e-05, 5.9084000000000914e-05, 5.911099999999711e-05, 5.8584000000000414e-05, 5.9084000000000914e-05, 5.9263999999999845e-05, 5.9263999999999845e-05, 5.9250000000000275e-05, 5.8429999999998206e-05, 5.88749999999999e-05, 5.906900000000187e-05, 5.861100000000008e-05, 5.9263999999999845e-05, 5.8749999999999775e-05, 5.891700000000208e-05, 5.91810000000019e-05, 5.862499999999965e-05, 5.8834000000000664e-05, 5.891700000000208e-05, 5.91810000000019e-05, 5.901300000000012e-05, 5.859700000000051e-05, 5.8429999999998206e-05, 5.88749999999999e-05, 5.8750000000003244e-05, 5.9070000000001344e-05, 5.8763999999999345e-05, 5.8736000000000205e-05, 5.894500000000122e-05, 5.934699999999779e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.911" endtime="20201117 14:47:11.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.906" endtime="20201117 14:47:11.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.916" endtime="20201117 14:47:11.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.919" endtime="20201117 14:47:11.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.918" endtime="20201117 14:47:11.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.914" endtime="20201117 14:47:11.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.545" endtime="20201117 14:47:11.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.543" endtime="20201117 14:47:11.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.542" endtime="20201117 14:47:11.941"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.943" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.952" endtime="20201117 14:47:11.970"></status>
</kw>
<msg timestamp="20201117 14:47:11.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.951" endtime="20201117 14:47:11.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.972" endtime="20201117 14:47:11.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.975" endtime="20201117 14:47:11.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.948" endtime="20201117 14:47:11.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.945" endtime="20201117 14:47:11.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.984" endtime="20201117 14:47:12.271"></status>
</kw>
<msg timestamp="20201117 14:47:12.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026210181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0262705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:11.982" endtime="20201117 14:47:12.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026210181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0262705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:12.275" endtime="20201117 14:47:12.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.284" endtime="20201117 14:47:12.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.980" endtime="20201117 14:47:12.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.978" endtime="20201117 14:47:12.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.291" level="INFO">${RESULT} = [{'time': 0.0262705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.031899999999965e-05, 'source_diff': 6.031899999999965e-05}, {'time': 0.026349583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:12.287" endtime="20201117 14:47:12.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.306" level="INFO">${ACCURACY} = {'time': [0.0262705, 0.026349583, 0.0264235, 0.026499514, 0.026575542, 0.026657542, 0.026731542, 0.026815556, 0.026890556, 0.026970583, 0.027052583, 0.027128583, 0.027202597, 0.027281611, 0.027360611,...</msg>
<status status="PASS" starttime="20201117 14:47:12.292" endtime="20201117 14:47:12.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.310" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.309" endtime="20201117 14:47:12.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.313" level="INFO">VALUE: [6.031899999999965e-05, 6.0014000000000595e-05, 6.016699999999986e-05, 5.938899999999997e-05, 5.966699999999936e-05, 5.9514000000000095e-05, 5.940299999999954e-05, 6.0000000000001025e-05, 5.9583999999997944e-05, 5.959699999999804e-05, 5.9430000000002675e-05, 6.0166000000000386e-05, 5.9499999999997055e-05, 6.008300000000244e-05, 5.938899999999997e-05, 5.9791999999999484e-05, 6.0014000000000595e-05, 6.033300000000269e-05, 6.011100000000158e-05, 6.011100000000158e-05, 6.0291999999999984e-05, 6.036099999999836e-05, 6.005499999999983e-05, 5.9750000000000775e-05, 6.009699999999854e-05, 5.9402000000000066e-05, 6.034700000000226e-05, 6.009699999999854e-05, 5.934700000000126e-05, 6.034699999999879e-05, 5.993100000000265e-05, 5.984699999999829e-05, 6.0249999999997805e-05, 5.959699999999804e-05, 5.9749999999997305e-05, 6.0250000000001275e-05, 5.959699999999804e-05, 6.0222000000002135e-05, 6.0264000000000845e-05, 5.986099999999786e-05, 5.9750000000000775e-05, 5.9999999999997555e-05, 5.984699999999829e-05, 6.008299999999897e-05, 6.0263999999997375e-05, 5.9764000000000345e-05, 5.9957999999998846e-05, 6.0014000000000595e-05, 5.9735999999997735e-05, 5.973700000000068e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.311" endtime="20201117 14:47:12.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.307" endtime="20201117 14:47:12.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.316" endtime="20201117 14:47:12.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.320" endtime="20201117 14:47:12.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.318" endtime="20201117 14:47:12.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.314" endtime="20201117 14:47:12.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.944" endtime="20201117 14:47:12.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.942" endtime="20201117 14:47:12.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.941" endtime="20201117 14:47:12.341"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.344" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.352" endtime="20201117 14:47:12.372"></status>
</kw>
<msg timestamp="20201117 14:47:12.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.351" endtime="20201117 14:47:12.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.373" endtime="20201117 14:47:12.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.376" endtime="20201117 14:47:12.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.348" endtime="20201117 14:47:12.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.346" endtime="20201117 14:47:12.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.385" endtime="20201117 14:47:12.672"></status>
</kw>
<msg timestamp="20201117 14:47:12.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025231111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025291653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.384" endtime="20201117 14:47:12.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025231111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025291653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.677" endtime="20201117 14:47:12.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.685" endtime="20201117 14:47:12.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.381" endtime="20201117 14:47:12.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.379" endtime="20201117 14:47:12.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.692" level="INFO">${RESULT} = [{'time': 0.025291653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0542000000000235e-05, 'source_diff': 6.0542000000000235e-05}, {'time': 0.025374667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:12.689" endtime="20201117 14:47:12.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.706" level="INFO">${ACCURACY} = {'time': [0.025291653, 0.025374667, 0.025457681, 0.025537694, 0.025615708, 0.025698694, 0.025780708, 0.025856722, 0.025935722, 0.02601275, 0.02609475, 0.026177792, 0.026260778, 0.026336778, 0.02641777...</msg>
<status status="PASS" starttime="20201117 14:47:12.693" endtime="20201117 14:47:12.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.711" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.710" endtime="20201117 14:47:12.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.713" level="INFO">VALUE: [6.0542000000000235e-05, 6.066700000000036e-05, 6.066700000000036e-05, 6.0680000000000456e-05, 6.118000000000096e-05, 6.0652000000001316e-05, 6.0443999999999776e-05, 6.0694000000000026e-05, 6.0514000000001095e-05, 6.059700000000251e-05, 6.059699999999904e-05, 6.045899999999882e-05, 6.084699999999929e-05, 6.109700000000301e-05, 6.123599999999924e-05, 6.0888999999998e-05, 6.1014000000001595e-05, 6.061099999999861e-05, 6.0916000000001136e-05, 6.0513999999997625e-05, 6.05689999999999e-05, 6.059699999999904e-05, 6.0930000000000706e-05, 6.116700000000086e-05, 6.136099999999936e-05, 6.0598000000001984e-05, 6.12499999999988e-05, 6.059699999999904e-05, 6.044499999999925e-05, 6.0514000000001095e-05, 6.0749999999998305e-05, 6.054099999999729e-05, 6.05689999999999e-05, 6.108300000000344e-05, 6.10690000000004e-05, 6.0944000000000276e-05, 6.133300000000022e-05, 6.058299999999947e-05, 6.091700000000061e-05, 6.134699999999979e-05, 6.041700000000011e-05, 6.0833999999999194e-05, 6.12499999999988e-05, 6.12080000000001e-05, 6.108299999999997e-05, 6.08750000000019e-05, 6.1000000000002025e-05, 6.0457999999999346e-05, 6.137499999999893e-05, 6.108299999999997e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.712" endtime="20201117 14:47:12.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.707" endtime="20201117 14:47:12.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.717" endtime="20201117 14:47:12.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.721" endtime="20201117 14:47:12.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.719" endtime="20201117 14:47:12.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.715" endtime="20201117 14:47:12.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.344" endtime="20201117 14:47:12.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.342" endtime="20201117 14:47:12.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.342" endtime="20201117 14:47:12.742"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.744" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.753" endtime="20201117 14:47:12.770"></status>
</kw>
<msg timestamp="20201117 14:47:12.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.751" endtime="20201117 14:47:12.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.772" endtime="20201117 14:47:12.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.775" endtime="20201117 14:47:12.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.748" endtime="20201117 14:47:12.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.746" endtime="20201117 14:47:12.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.784" endtime="20201117 14:47:13.069"></status>
</kw>
<msg timestamp="20201117 14:47:13.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024743069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024804708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.782" endtime="20201117 14:47:13.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024743069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024804708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.074" endtime="20201117 14:47:13.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.082" endtime="20201117 14:47:13.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.780" endtime="20201117 14:47:13.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.778" endtime="20201117 14:47:13.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.089" level="INFO">${RESULT} = [{'time': 0.024804708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.163900000000222e-05, 'source_diff': 6.163900000000222e-05}, {'time': 0.024886722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:13.086" endtime="20201117 14:47:13.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.103" level="INFO">${ACCURACY} = {'time': [0.024804708, 0.024886722, 0.024962722, 0.02504375, 0.025126764, 0.025207764, 0.025289764, 0.025370778, 0.025448778, 0.025530819, 0.025606875, 0.025684806, 0.025770819, 0.025851847, 0.0259308...</msg>
<status status="PASS" starttime="20201117 14:47:13.090" endtime="20201117 14:47:13.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.108" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.107" endtime="20201117 14:47:13.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.111" level="INFO">VALUE: [6.163900000000222e-05, 6.159700000000004e-05, 6.17499999999993e-05, 6.226399999999938e-05, 6.227799999999895e-05, 6.190300000000204e-05, 6.199999999999956e-05, 6.22499999999998e-05, 6.208399999999697e-05, 6.227699999999947e-05, 6.148599999999949e-05, 6.166700000000136e-05, 6.199999999999956e-05, 6.211100000000011e-05, 6.141600000000164e-05, 6.231900000000165e-05, 6.173599999999974e-05, 6.206899999999793e-05, 6.17499999999993e-05, 6.143100000000068e-05, 6.168099999999746e-05, 6.15140000000021e-05, 6.193099999999771e-05, 6.18340000000002e-05, 6.163899999999875e-05, 6.205499999999836e-05, 6.199999999999956e-05, 6.233300000000122e-05, 6.168000000000146e-05, 6.19300000000017e-05, 6.166700000000136e-05, 6.202699999999922e-05, 6.159700000000004e-05, 6.191699999999814e-05, 6.182000000000062e-05, 6.193100000000118e-05, 6.166699999999789e-05, 6.201299999999965e-05, 6.19300000000017e-05, 6.199999999999956e-05, 6.141600000000164e-05, 6.219400000000153e-05, 6.163900000000222e-05, 6.150000000000252e-05, 6.195900000000032e-05, 6.15140000000021e-05, 6.193099999999771e-05, 6.165300000000179e-05, 6.234800000000026e-05, 6.17499999999993e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.109" endtime="20201117 14:47:13.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.104" endtime="20201117 14:47:13.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.114" endtime="20201117 14:47:13.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.117" endtime="20201117 14:47:13.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.116" endtime="20201117 14:47:13.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.112" endtime="20201117 14:47:13.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.745" endtime="20201117 14:47:13.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.743" endtime="20201117 14:47:13.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.742" endtime="20201117 14:47:13.139"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.141" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.150" endtime="20201117 14:47:13.167"></status>
</kw>
<msg timestamp="20201117 14:47:13.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.148" endtime="20201117 14:47:13.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.169" endtime="20201117 14:47:13.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.171" endtime="20201117 14:47:13.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.145" endtime="20201117 14:47:13.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.143" endtime="20201117 14:47:13.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.181" endtime="20201117 14:47:13.468"></status>
</kw>
<msg timestamp="20201117 14:47:13.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024766097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024829472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.179" endtime="20201117 14:47:13.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024766097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024829472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.472" endtime="20201117 14:47:13.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.480" endtime="20201117 14:47:13.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.176" endtime="20201117 14:47:13.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.175" endtime="20201117 14:47:13.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.487" level="INFO">${RESULT} = [{'time': 0.024829472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.337499999999746e-05, 'source_diff': 6.337499999999746e-05}, {'time': 0.024915514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:13.484" endtime="20201117 14:47:13.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.501" level="INFO">${ACCURACY} = {'time': [0.024829472, 0.024915514, 0.024997514, 0.0250755, 0.025156528, 0.025237528, 0.025317583, 0.025395542, 0.025480556, 0.025558583, 0.025637597, 0.025723597, 0.025807611, 0.025893625, 0.02597565...</msg>
<status status="PASS" starttime="20201117 14:47:13.489" endtime="20201117 14:47:13.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.506" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.505" endtime="20201117 14:47:13.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.509" level="INFO">VALUE: [6.337499999999746e-05, 6.279199999999902e-05, 6.241699999999864e-05, 6.281900000000215e-05, 6.244500000000125e-05, 6.266699999999889e-05, 6.255500000000233e-05, 6.268099999999846e-05, 6.326400000000038e-05, 6.327700000000047e-05, 6.311100000000111e-05, 6.244400000000178e-05, 6.319400000000253e-05, 6.319399999999906e-05, 6.272200000000117e-05, 6.333300000000222e-05, 6.241699999999864e-05, 6.308300000000197e-05, 6.258400000000094e-05, 6.248600000000049e-05, 6.33479999999978e-05, 6.243100000000168e-05, 6.266700000000236e-05, 6.302700000000022e-05, 6.24300000000022e-05, 6.304200000000273e-05, 6.242999999999874e-05, 6.251399999999963e-05, 6.30829999999985e-05, 6.298600000000099e-05, 6.318099999999896e-05, 6.250000000000006e-05, 6.305599999999884e-05, 6.247200000000092e-05, 6.318099999999896e-05, 6.284700000000129e-05, 6.261100000000061e-05, 6.32500000000008e-05, 6.273600000000074e-05, 6.259700000000104e-05, 6.329200000000298e-05, 6.291699999999914e-05, 6.316699999999939e-05, 6.284699999999782e-05, 6.273600000000074e-05, 6.259700000000104e-05, 6.247199999999745e-05, 6.28340000000012e-05, 6.240299999999907e-05, 6.283299999999825e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.507" endtime="20201117 14:47:13.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.502" endtime="20201117 14:47:13.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.512" endtime="20201117 14:47:13.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.515" endtime="20201117 14:47:13.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.514" endtime="20201117 14:47:13.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.510" endtime="20201117 14:47:13.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.142" endtime="20201117 14:47:13.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.140" endtime="20201117 14:47:13.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.139" endtime="20201117 14:47:13.536"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.539" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.547" endtime="20201117 14:47:13.566"></status>
</kw>
<msg timestamp="20201117 14:47:13.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.546" endtime="20201117 14:47:13.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.567" endtime="20201117 14:47:13.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.570" endtime="20201117 14:47:13.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.543" endtime="20201117 14:47:13.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.541" endtime="20201117 14:47:13.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.579" endtime="20201117 14:47:13.865"></status>
</kw>
<msg timestamp="20201117 14:47:13.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025473722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025537264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.578" endtime="20201117 14:47:13.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025473722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025537264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.870" endtime="20201117 14:47:13.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.878" endtime="20201117 14:47:13.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.575" endtime="20201117 14:47:13.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.573" endtime="20201117 14:47:13.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.885" level="INFO">${RESULT} = [{'time': 0.025537264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.354199999999977e-05, 'source_diff': 6.354199999999977e-05}, {'time': 0.025625278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:13.882" endtime="20201117 14:47:13.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.900" level="INFO">${ACCURACY} = {'time': [0.025537264, 0.025625278, 0.025709292, 0.025793306, 0.025880347, 0.025961306, 0.026048319, 0.026129347, 0.026215361, 0.026298361, 0.026381361, 0.026460389, 0.026542389, 0.026621389, 0.026709...</msg>
<status status="PASS" starttime="20201117 14:47:13.886" endtime="20201117 14:47:13.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.905" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.904" endtime="20201117 14:47:13.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.908" level="INFO">VALUE: [6.354199999999977e-05, 6.434700000000279e-05, 6.409800000000201e-05, 6.358399999999848e-05, 6.427800000000095e-05, 6.358399999999848e-05, 6.356899999999943e-05, 6.404100000000079e-05, 6.377800000000045e-05, 6.3582999999999e-05, 6.359699999999857e-05, 6.393099999999971e-05, 6.430600000000009e-05, 6.374999999999784e-05, 6.424999999999834e-05, 6.357000000000237e-05, 6.359799999999804e-05, 6.409799999999855e-05, 6.422299999999867e-05, 6.356899999999943e-05, 6.342999999999974e-05, 6.433299999999975e-05, 6.426400000000138e-05, 6.393099999999971e-05, 6.434699999999932e-05, 6.373600000000174e-05, 6.391700000000014e-05, 6.400000000000156e-05, 6.391700000000014e-05, 6.402700000000122e-05, 6.409799999999855e-05, 6.35690000000029e-05, 6.424999999999834e-05, 6.37500000000013e-05, 6.382000000000262e-05, 6.379200000000002e-05, 6.393000000000024e-05, 6.35280000000002e-05, 6.374999999999784e-05, 6.409699999999907e-05, 6.394499999999928e-05, 6.391700000000014e-05, 6.409699999999907e-05, 6.37500000000013e-05, 6.399999999999809e-05, 6.395800000000285e-05, 6.40280000000007e-05, 6.387500000000143e-05, 6.416599999999745e-05, 6.436100000000236e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.906" endtime="20201117 14:47:13.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.901" endtime="20201117 14:47:13.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.911" endtime="20201117 14:47:13.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.915" endtime="20201117 14:47:13.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.913" endtime="20201117 14:47:13.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.909" endtime="20201117 14:47:13.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.540" endtime="20201117 14:47:13.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.538" endtime="20201117 14:47:13.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.537" endtime="20201117 14:47:13.936"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.938" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.947" endtime="20201117 14:47:13.964"></status>
</kw>
<msg timestamp="20201117 14:47:13.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.945" endtime="20201117 14:47:13.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.966" endtime="20201117 14:47:13.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.968" endtime="20201117 14:47:13.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.943" endtime="20201117 14:47:13.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.940" endtime="20201117 14:47:13.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.978" endtime="20201117 14:47:14.265"></status>
</kw>
<msg timestamp="20201117 14:47:14.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024772431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024837069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.976" endtime="20201117 14:47:14.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024772431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024837069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.269" endtime="20201117 14:47:14.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.277" endtime="20201117 14:47:14.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.973" endtime="20201117 14:47:14.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.972" endtime="20201117 14:47:14.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.284" level="INFO">${RESULT} = [{'time': 0.024837069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.463799999999881e-05, 'source_diff': 6.463799999999881e-05}, {'time': 0.024926083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:14.281" endtime="20201117 14:47:14.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.298" level="INFO">${ACCURACY} = {'time': [0.024837069, 0.024926083, 0.025009083, 0.025097097, 0.025177111, 0.025263111, 0.025346125, 0.025428153, 0.025516167, 0.025605153, 0.025689167, 0.025775194, 0.025856194, 0.025945194, 0.026027...</msg>
<status status="PASS" starttime="20201117 14:47:14.285" endtime="20201117 14:47:14.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.303" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.302" endtime="20201117 14:47:14.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.306" level="INFO">VALUE: [6.463799999999881e-05, 6.509700000000007e-05, 6.441600000000117e-05, 6.465299999999785e-05, 6.517999999999802e-05, 6.465300000000132e-05, 6.465300000000132e-05, 6.518099999999749e-05, 6.502799999999823e-05, 6.473599999999927e-05, 6.491699999999767e-05, 6.519400000000106e-05, 6.484699999999982e-05, 6.47500000000023e-05, 6.47639999999984e-05, 6.493000000000124e-05, 6.531900000000118e-05, 6.50830000000005e-05, 6.511099999999964e-05, 6.47219999999997e-05, 6.491700000000114e-05, 6.536099999999989e-05, 6.443100000000021e-05, 6.448599999999902e-05, 6.509799999999955e-05, 6.476299999999893e-05, 6.508299999999703e-05, 6.4583e-05, 6.509700000000007e-05, 6.474999999999884e-05, 6.491699999999767e-05, 6.449999999999859e-05, 6.49029999999981e-05, 6.499999999999909e-05, 6.443100000000021e-05, 6.48479999999993e-05, 6.491700000000114e-05, 6.502699999999875e-05, 6.52639999999989e-05, 6.511099999999964e-05, 6.50830000000005e-05, 6.443000000000074e-05, 6.449999999999859e-05, 6.509700000000007e-05, 6.494499999999681e-05, 6.488899999999853e-05, 6.491700000000114e-05, 6.483399999999973e-05, 6.45699999999999e-05, 6.493100000000071e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.304" endtime="20201117 14:47:14.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.299" endtime="20201117 14:47:14.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.309" endtime="20201117 14:47:14.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.312" endtime="20201117 14:47:14.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.311" endtime="20201117 14:47:14.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.307" endtime="20201117 14:47:14.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.939" endtime="20201117 14:47:14.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.937" endtime="20201117 14:47:14.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.936" endtime="20201117 14:47:14.334"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.336" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.344" endtime="20201117 14:47:14.362"></status>
</kw>
<msg timestamp="20201117 14:47:14.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.343" endtime="20201117 14:47:14.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.364" endtime="20201117 14:47:14.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.367" endtime="20201117 14:47:14.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.340" endtime="20201117 14:47:14.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.338" endtime="20201117 14:47:14.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.376" endtime="20201117 14:47:14.662"></status>
</kw>
<msg timestamp="20201117 14:47:14.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024570389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024636069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.375" endtime="20201117 14:47:14.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024570389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024636069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.667" endtime="20201117 14:47:14.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.676" endtime="20201117 14:47:14.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.372" endtime="20201117 14:47:14.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.370" endtime="20201117 14:47:14.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.683" level="INFO">${RESULT} = [{'time': 0.024636069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.567999999999852e-05, 'source_diff': 6.567999999999852e-05}, {'time': 0.024717069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:14.679" endtime="20201117 14:47:14.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.697" level="INFO">${ACCURACY} = {'time': [0.024636069, 0.024717069, 0.024804083, 0.024890111, 0.024978111, 0.025065111, 0.025148139, 0.025234139, 0.025314139, 0.025397153, 0.025483167, 0.025565181, 0.025651181, 0.025740194, 0.025821...</msg>
<status status="PASS" starttime="20201117 14:47:14.684" endtime="20201117 14:47:14.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.701" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.700" endtime="20201117 14:47:14.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.704" level="INFO">VALUE: [6.567999999999852e-05, 6.591600000000267e-05, 6.595800000000138e-05, 6.559700000000057e-05, 6.543000000000174e-05, 6.566700000000189e-05, 6.586100000000039e-05, 6.543099999999774e-05, 6.619499999999806e-05, 6.60839999999975e-05, 6.57639999999994e-05, 6.558400000000048e-05, 6.556999999999744e-05, 6.626300000000043e-05, 6.59159999999992e-05, 6.625000000000034e-05, 6.62639999999999e-05, 6.543000000000174e-05, 6.600000000000009e-05, 6.597300000000042e-05, 6.595800000000138e-05, 6.544499999999731e-05, 6.600000000000009e-05, 6.55419999999983e-05, 6.586100000000039e-05, 6.631999999999819e-05, 6.625000000000034e-05, 6.57639999999994e-05, 6.540199999999913e-05, 6.601399999999966e-05, 6.574999999999984e-05, 6.625000000000034e-05, 6.556900000000143e-05, 6.625000000000034e-05, 6.594499999999781e-05, 6.549999999999959e-05, 6.559800000000005e-05, 6.624999999999687e-05, 6.60839999999975e-05, 6.542999999999827e-05, 6.59029999999991e-05, 6.574999999999984e-05, 6.57639999999994e-05, 6.598699999999999e-05, 6.600000000000009e-05, 6.541700000000164e-05, 6.634700000000132e-05, 6.540300000000207e-05, 6.58480000000003e-05, 6.58480000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.702" endtime="20201117 14:47:14.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.698" endtime="20201117 14:47:14.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.707" endtime="20201117 14:47:14.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.711" endtime="20201117 14:47:14.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.709" endtime="20201117 14:47:14.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.706" endtime="20201117 14:47:14.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.337" endtime="20201117 14:47:14.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.335" endtime="20201117 14:47:14.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.334" endtime="20201117 14:47:14.732"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.735" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.750" endtime="20201117 14:47:14.768"></status>
</kw>
<msg timestamp="20201117 14:47:14.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.748" endtime="20201117 14:47:14.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.770" endtime="20201117 14:47:14.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.772" endtime="20201117 14:47:14.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.739" endtime="20201117 14:47:14.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.737" endtime="20201117 14:47:14.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.782" endtime="20201117 14:47:15.069"></status>
</kw>
<msg timestamp="20201117 14:47:15.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032070944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032137833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.780" endtime="20201117 14:47:15.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032070944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032137833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.073" endtime="20201117 14:47:15.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.082" endtime="20201117 14:47:15.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.777" endtime="20201117 14:47:15.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.775" endtime="20201117 14:47:15.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.089" level="INFO">${RESULT} = [{'time': 0.032137833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.688900000000053e-05, 'source_diff': 6.688900000000053e-05}, {'time': 0.032224847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:15.085" endtime="20201117 14:47:15.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.103" level="INFO">${ACCURACY} = {'time': [0.032137833, 0.032224847, 0.032315847, 0.032405861, 0.032486875, 0.032572875, 0.032663889, 0.032748917, 0.032830917, 0.032917917, 0.033007931, 0.033097944, 0.033179944, 0.033265972, 0.033347...</msg>
<status status="PASS" starttime="20201117 14:47:15.090" endtime="20201117 14:47:15.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.107" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.106" endtime="20201117 14:47:15.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.110" level="INFO">VALUE: [6.688900000000053e-05, 6.659700000000157e-05, 6.686100000000139e-05, 6.667999999999952e-05, 6.668099999999899e-05, 6.666699999999942e-05, 6.732000000000266e-05, 6.694500000000575e-05, 6.651400000000363e-05, 6.641699999999917e-05, 6.718099999999949e-05, 6.716600000000045e-05, 6.645800000000535e-05, 6.659699999999463e-05, 6.676399999999694e-05, 6.724999999999787e-05, 6.72500000000048e-05, 6.672199999999823e-05, 6.687499999999402e-05, 6.716699999999992e-05, 6.643099999999874e-05, 6.718099999999949e-05, 6.698599999999805e-05, 6.708399999999504e-05, 6.71109999999947e-05, 6.64159999999997e-05, 6.651399999999669e-05, 6.6583000000002e-05, 6.72500000000048e-05, 6.724999999999787e-05, 6.676400000000388e-05, 6.659700000000157e-05, 6.659700000000157e-05, 6.643099999999874e-05, 6.666699999999942e-05, 6.686099999999445e-05, 6.711100000000164e-05, 6.709700000000207e-05, 6.642999999999927e-05, 6.683299999999531e-05, 6.69160000000002e-05, 6.681899999999574e-05, 6.687500000000096e-05, 6.734699999999538e-05, 6.64029999999996e-05, 6.715300000000035e-05, 6.701399999999719e-05, 6.72500000000048e-05, 6.694399999999934e-05, 6.737499999999452e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.109" endtime="20201117 14:47:15.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.104" endtime="20201117 14:47:15.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.113" endtime="20201117 14:47:15.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.117" endtime="20201117 14:47:15.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.115" endtime="20201117 14:47:15.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.112" endtime="20201117 14:47:15.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.735" endtime="20201117 14:47:15.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.733" endtime="20201117 14:47:15.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.732" endtime="20201117 14:47:15.139"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.141" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.150" endtime="20201117 14:47:15.169"></status>
</kw>
<msg timestamp="20201117 14:47:15.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.148" endtime="20201117 14:47:15.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.170" endtime="20201117 14:47:15.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.173" endtime="20201117 14:47:15.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.145" endtime="20201117 14:47:15.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.143" endtime="20201117 14:47:15.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.182" endtime="20201117 14:47:15.468"></status>
</kw>
<msg timestamp="20201117 14:47:15.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026596806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026664347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.181" endtime="20201117 14:47:15.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026596806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026664347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.473" endtime="20201117 14:47:15.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.481" endtime="20201117 14:47:15.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.178" endtime="20201117 14:47:15.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.176" endtime="20201117 14:47:15.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.488" level="INFO">${RESULT} = [{'time': 0.026664347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.754100000000082e-05, 'source_diff': 6.754100000000082e-05}, {'time': 0.026753361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:15.484" endtime="20201117 14:47:15.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.503" level="INFO">${ACCURACY} = {'time': [0.026664347, 0.026753361, 0.026839403, 0.026923403, 0.027006389, 0.027098417, 0.027184458, 0.027271431, 0.027361431, 0.027448444, 0.027538444, 0.027621458, 0.027707486, 0.027789486, 0.027872...</msg>
<status status="PASS" starttime="20201117 14:47:15.489" endtime="20201117 14:47:15.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.508" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.507" endtime="20201117 14:47:15.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.510" level="INFO">VALUE: [6.754100000000082e-05, 6.766700000000042e-05, 6.818100000000049e-05, 6.769499999999956e-05, 6.766700000000042e-05, 6.819500000000006e-05, 6.838900000000203e-05, 6.755599999999987e-05, 6.776399999999794e-05, 6.79299999999973e-05, 6.833300000000028e-05, 6.79160000000012e-05, 6.752800000000073e-05, 6.829199999999758e-05, 6.770899999999913e-05, 6.833300000000028e-05, 6.756899999999996e-05, 6.802799999999776e-05, 6.77640000000014e-05, 6.744499999999931e-05, 6.816700000000092e-05, 6.78480000000023e-05, 6.75969999999991e-05, 6.824999999999887e-05, 6.797199999999948e-05, 6.834699999999985e-05, 6.800000000000209e-05, 6.798600000000252e-05, 6.761099999999867e-05, 6.793099999999677e-05, 6.816700000000092e-05, 6.833399999999976e-05, 6.743099999999974e-05, 6.799999999999862e-05, 6.758400000000248e-05, 6.826299999999896e-05, 6.795799999999991e-05, 6.766600000000095e-05, 6.750000000000159e-05, 6.827799999999801e-05, 6.793100000000024e-05, 6.751400000000116e-05, 6.775000000000184e-05, 6.791700000000067e-05, 6.751400000000116e-05, 6.74030000000006e-05, 6.801300000000218e-05, 6.825000000000234e-05, 6.801400000000166e-05, 6.77640000000014e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.509" endtime="20201117 14:47:15.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.504" endtime="20201117 14:47:15.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.514" endtime="20201117 14:47:15.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.518" endtime="20201117 14:47:15.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.516" endtime="20201117 14:47:15.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.512" endtime="20201117 14:47:15.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.142" endtime="20201117 14:47:15.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.140" endtime="20201117 14:47:15.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.139" endtime="20201117 14:47:15.539"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.541" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.550" endtime="20201117 14:47:15.568"></status>
</kw>
<msg timestamp="20201117 14:47:15.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.548" endtime="20201117 14:47:15.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.569" endtime="20201117 14:47:15.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.572" endtime="20201117 14:47:15.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.546" endtime="20201117 14:47:15.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.543" endtime="20201117 14:47:15.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.581" endtime="20201117 14:47:15.868"></status>
</kw>
<msg timestamp="20201117 14:47:15.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024865597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024934125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.580" endtime="20201117 14:47:15.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024865597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024934125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.872" endtime="20201117 14:47:15.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.881" endtime="20201117 14:47:15.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.577" endtime="20201117 14:47:15.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.575" endtime="20201117 14:47:15.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.888" level="INFO">${RESULT} = [{'time': 0.024934125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.852800000000173e-05, 'source_diff': 6.852800000000173e-05}, {'time': 0.025023111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:15.884" endtime="20201117 14:47:15.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.901" level="INFO">${ACCURACY} = {'time': [0.024934125, 0.025023111, 0.025113125, 0.025203139, 0.025286153, 0.025373167, 0.025461181, 0.025546181, 0.025634194, 0.025722236, 0.025814208, 0.025899222, 0.025990222, 0.026082236, 0.026165...</msg>
<status status="PASS" starttime="20201117 14:47:15.889" endtime="20201117 14:47:15.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.906" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.905" endtime="20201117 14:47:15.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.909" level="INFO">VALUE: [6.852800000000173e-05, 6.915300000000235e-05, 6.883300000000078e-05, 6.85970000000001e-05, 6.8584e-05, 6.926399999999944e-05, 6.876399999999894e-05, 6.893100000000124e-05, 6.884700000000035e-05, 6.874999999999937e-05, 6.90970000000006e-05, 6.90970000000006e-05, 6.891599999999873e-05, 6.900000000000309e-05, 6.90970000000006e-05, 6.843100000000074e-05, 6.897200000000048e-05, 6.8584e-05, 6.874999999999937e-05, 6.894400000000134e-05, 6.936100000000042e-05, 6.87359999999998e-05, 6.908299999999756e-05, 6.876399999999894e-05, 6.85970000000001e-05, 6.908300000000103e-05, 6.893100000000124e-05, 6.888899999999906e-05, 6.90970000000006e-05, 6.90970000000006e-05, 6.926399999999944e-05, 6.924999999999987e-05, 6.84299999999978e-05, 6.868000000000152e-05, 6.933300000000128e-05, 6.90970000000006e-05, 6.89160000000022e-05, 6.933299999999781e-05, 6.906900000000146e-05, 6.89169999999982e-05, 6.85420000000013e-05, 6.859799999999958e-05, 6.927800000000248e-05, 6.868100000000099e-05, 6.934700000000085e-05, 6.876399999999894e-05, 6.906900000000146e-05, 6.840199999999866e-05, 6.849999999999912e-05, 6.838900000000203e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.907" endtime="20201117 14:47:15.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.902" endtime="20201117 14:47:15.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.912" endtime="20201117 14:47:15.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.916" endtime="20201117 14:47:15.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.914" endtime="20201117 14:47:15.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.911" endtime="20201117 14:47:15.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.542" endtime="20201117 14:47:15.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.540" endtime="20201117 14:47:15.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.539" endtime="20201117 14:47:15.937"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.939" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.948" endtime="20201117 14:47:15.966"></status>
</kw>
<msg timestamp="20201117 14:47:15.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.946" endtime="20201117 14:47:15.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.967" endtime="20201117 14:47:15.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.970" endtime="20201117 14:47:15.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.944" endtime="20201117 14:47:15.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.941" endtime="20201117 14:47:15.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.979" endtime="20201117 14:47:16.266"></status>
</kw>
<msg timestamp="20201117 14:47:16.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024982778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025052264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.978" endtime="20201117 14:47:16.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024982778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025052264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.270" endtime="20201117 14:47:16.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.279" endtime="20201117 14:47:16.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.975" endtime="20201117 14:47:16.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.973" endtime="20201117 14:47:16.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.286" level="INFO">${RESULT} = [{'time': 0.025052264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.948600000000055e-05, 'source_diff': 6.948600000000055e-05}, {'time': 0.025146264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:16.282" endtime="20201117 14:47:16.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.300" level="INFO">${ACCURACY} = {'time': [0.025052264, 0.025146264, 0.025233278, 0.025319306, 0.025411319, 0.025502306, 0.025588333, 0.025682333, 0.025776333, 0.025860347, 0.025946347, 0.026039403, 0.026127375, 0.026214389, 0.026304...</msg>
<status status="PASS" starttime="20201117 14:47:16.287" endtime="20201117 14:47:16.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.304" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.303" endtime="20201117 14:47:16.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.307" level="INFO">VALUE: [6.948600000000055e-05, 6.993100000000224e-05, 7.016700000000292e-05, 6.969499999999809e-05, 6.987500000000049e-05, 6.976399999999994e-05, 6.994400000000234e-05, 6.969400000000209e-05, 6.980499999999917e-05, 6.94299999999988e-05, 6.981900000000221e-05, 6.979199999999908e-05, 6.943100000000174e-05, 7.034700000000185e-05, 7.007000000000194e-05, 6.993099999999877e-05, 7.001400000000019e-05, 6.975000000000037e-05, 7.009699999999813e-05, 6.943000000000227e-05, 6.984700000000135e-05, 6.956899999999849e-05, 6.991599999999973e-05, 7.002799999999976e-05, 6.991700000000267e-05, 6.976399999999994e-05, 6.94169999999987e-05, 6.998600000000105e-05, 6.943100000000174e-05, 7.001399999999672e-05, 6.99169999999992e-05, 7.017999999999955e-05, 6.952799999999926e-05, 6.941599999999923e-05, 6.983300000000178e-05, 7.00970000000016e-05, 7.026400000000044e-05, 7.029200000000305e-05, 7.002799999999976e-05, 6.941700000000217e-05, 7.034800000000133e-05, 7.025000000000087e-05, 6.961100000000067e-05, 7.02360000000013e-05, 6.99299999999993e-05, 7.000000000000062e-05, 6.975000000000037e-05, 7.00970000000016e-05, 7.027800000000001e-05, 6.959699999999763e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.305" endtime="20201117 14:47:16.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.301" endtime="20201117 14:47:16.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.310" endtime="20201117 14:47:16.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.314" endtime="20201117 14:47:16.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.312" endtime="20201117 14:47:16.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.309" endtime="20201117 14:47:16.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.940" endtime="20201117 14:47:16.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.938" endtime="20201117 14:47:16.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.937" endtime="20201117 14:47:16.335"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.337" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.346" endtime="20201117 14:47:16.364"></status>
</kw>
<msg timestamp="20201117 14:47:16.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.344" endtime="20201117 14:47:16.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.365" endtime="20201117 14:47:16.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.368" endtime="20201117 14:47:16.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.342" endtime="20201117 14:47:16.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.339" endtime="20201117 14:47:16.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.377" endtime="20201117 14:47:16.663"></status>
</kw>
<msg timestamp="20201117 14:47:16.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025002792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025073806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.376" endtime="20201117 14:47:16.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025002792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025073806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.668" endtime="20201117 14:47:16.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.676" endtime="20201117 14:47:16.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.373" endtime="20201117 14:47:16.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.372" endtime="20201117 14:47:16.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.683" level="INFO">${RESULT} = [{'time': 0.025073806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.101400000000119e-05, 'source_diff': 7.101400000000119e-05}, {'time': 0.025166819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:16.680" endtime="20201117 14:47:16.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.697" level="INFO">${ACCURACY} = {'time': [0.025073806, 0.025166819, 0.025252861, 0.025343847, 0.025432875, 0.025523861, 0.025615875, 0.025700875, 0.025786889, 0.025880917, 0.025969917, 0.026055917, 0.026148931, 0.026243958, 0.026333...</msg>
<status status="PASS" starttime="20201117 14:47:16.684" endtime="20201117 14:47:16.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.702" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.701" endtime="20201117 14:47:16.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.705" level="INFO">VALUE: [7.101400000000119e-05, 7.118000000000055e-05, 7.136100000000242e-05, 7.126399999999797e-05, 7.044399999999937e-05, 7.084699999999888e-05, 7.108299999999956e-05, 7.1069e-05, 7.123599999999883e-05, 7.075000000000137e-05, 7.12499999999984e-05, 7.057000000000244e-05, 7.125000000000187e-05, 7.076400000000094e-05, 7.076400000000094e-05, 7.05970000000021e-05, 7.115300000000088e-05, 7.1069e-05, 7.052800000000026e-05, 7.12499999999984e-05, 7.093100000000324e-05, 7.084700000000235e-05, 7.093099999999977e-05, 7.086099999999845e-05, 7.063900000000081e-05, 7.126300000000196e-05, 7.051400000000069e-05, 7.125000000000187e-05, 7.126399999999797e-05, 7.111100000000217e-05, 7.050000000000112e-05, 7.136099999999895e-05, 7.075000000000137e-05, 7.075000000000137e-05, 7.090300000000063e-05, 7.100000000000162e-05, 7.10840000000025e-05, 7.075000000000137e-05, 7.126400000000144e-05, 7.091600000000073e-05, 7.051399999999722e-05, 7.10970000000026e-05, 7.04169999999997e-05, 7.083300000000278e-05, 7.093099999999977e-05, 7.101400000000119e-05, 7.090300000000063e-05, 7.101400000000119e-05, 7.090300000000063e-05, 7.069399999999962e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.704" endtime="20201117 14:47:16.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.698" endtime="20201117 14:47:16.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.708" endtime="20201117 14:47:16.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.712" endtime="20201117 14:47:16.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.710" endtime="20201117 14:47:16.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.707" endtime="20201117 14:47:16.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.338" endtime="20201117 14:47:16.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.336" endtime="20201117 14:47:16.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.335" endtime="20201117 14:47:16.733"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.736" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.744" endtime="20201117 14:47:16.765"></status>
</kw>
<msg timestamp="20201117 14:47:16.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.743" endtime="20201117 14:47:16.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.767" endtime="20201117 14:47:16.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.769" endtime="20201117 14:47:16.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.740" endtime="20201117 14:47:16.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.738" endtime="20201117 14:47:16.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.779" endtime="20201117 14:47:17.065"></status>
</kw>
<msg timestamp="20201117 14:47:17.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025905542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025977417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.777" endtime="20201117 14:47:17.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025905542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025977417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.069" endtime="20201117 14:47:17.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.078" endtime="20201117 14:47:17.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.775" endtime="20201117 14:47:17.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.773" endtime="20201117 14:47:17.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.085" level="INFO">${RESULT} = [{'time': 0.025977417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.187499999999902e-05, 'source_diff': 7.187499999999902e-05}, {'time': 0.026066431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.081" endtime="20201117 14:47:17.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.100" level="INFO">${ACCURACY} = {'time': [0.025977417, 0.026066431, 0.026160444, 0.026252458, 0.026347486, 0.026438472, 0.0265245, 0.026610514, 0.026701514, 0.026788528, 0.026883528, 0.026969542, 0.027059556, 0.027155556, 0.02724656...</msg>
<status status="PASS" starttime="20201117 14:47:17.086" endtime="20201117 14:47:17.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.104" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.103" endtime="20201117 14:47:17.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.107" level="INFO">VALUE: [7.187499999999902e-05, 7.19170000000012e-05, 7.166600000000148e-05, 7.151399999999822e-05, 7.227799999999854e-05, 7.175000000000237e-05, 7.229199999999811e-05, 7.152799999999779e-05, 7.193100000000077e-05, 7.218099999999755e-05, 7.165300000000138e-05, 7.184799999999936e-05, 7.176399999999847e-05, 7.190300000000163e-05, 7.215200000000241e-05, 7.202800000000176e-05, 7.176399999999847e-05, 7.155500000000092e-05, 7.215299999999841e-05, 7.193100000000077e-05, 7.202799999999829e-05, 7.23049999999982e-05, 7.209700000000013e-05, 7.144499999999984e-05, 7.190300000000163e-05, 7.22499999999994e-05, 7.141600000000123e-05, 7.238899999999909e-05, 7.159699999999963e-05, 7.208300000000056e-05, 7.17499999999989e-05, 7.226399999999897e-05, 7.209700000000013e-05, 7.159699999999963e-05, 7.215299999999841e-05, 7.193100000000077e-05, 7.199999999999915e-05, 7.159699999999963e-05, 7.172199999999976e-05, 7.172199999999976e-05, 7.158300000000006e-05, 7.180599999999718e-05, 7.22499999999994e-05, 7.209700000000013e-05, 7.194500000000034e-05, 7.148599999999908e-05, 7.22499999999994e-05, 7.161199999999868e-05, 7.19170000000012e-05, 7.149999999999865e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.105" endtime="20201117 14:47:17.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.101" endtime="20201117 14:47:17.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.110" endtime="20201117 14:47:17.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.114" endtime="20201117 14:47:17.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.112" endtime="20201117 14:47:17.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.109" endtime="20201117 14:47:17.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.736" endtime="20201117 14:47:17.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.734" endtime="20201117 14:47:17.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.733" endtime="20201117 14:47:17.135"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.137" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.146" endtime="20201117 14:47:17.164"></status>
</kw>
<msg timestamp="20201117 14:47:17.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.144" endtime="20201117 14:47:17.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.166" endtime="20201117 14:47:17.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.169" endtime="20201117 14:47:17.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.142" endtime="20201117 14:47:17.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.139" endtime="20201117 14:47:17.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.178" endtime="20201117 14:47:17.465"></status>
</kw>
<msg timestamp="20201117 14:47:17.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024450389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024523611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.177" endtime="20201117 14:47:17.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024450389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024523611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.469" endtime="20201117 14:47:17.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.478" endtime="20201117 14:47:17.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.174" endtime="20201117 14:47:17.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.172" endtime="20201117 14:47:17.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.485" level="INFO">${RESULT} = [{'time': 0.024523611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.322200000000126e-05, 'source_diff': 7.322200000000126e-05}, {'time': 0.024612611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.481" endtime="20201117 14:47:17.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.498" level="INFO">${ACCURACY} = {'time': [0.024523611, 0.024612611, 0.024708625, 0.024797639, 0.024893639, 0.024981653, 0.025077667, 0.025172681, 0.025259681, 0.025347708, 0.025442708, 0.025529736, 0.025618722, 0.025709736, 0.025801...</msg>
<status status="PASS" starttime="20201117 14:47:17.486" endtime="20201117 14:47:17.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.503" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.502" endtime="20201117 14:47:17.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.505" level="INFO">VALUE: [7.322200000000126e-05, 7.30829999999981e-05, 7.243100000000127e-05, 7.268100000000152e-05, 7.331999999999825e-05, 7.241699999999823e-05, 7.301399999999972e-05, 7.29309999999983e-05, 7.318099999999855e-05, 7.309700000000113e-05, 7.308300000000156e-05, 7.329199999999911e-05, 7.300000000000015e-05, 7.308300000000156e-05, 7.244500000000084e-05, 7.283300000000131e-05, 7.29170000000022e-05, 7.263899999999934e-05, 7.266700000000195e-05, 7.336099999999748e-05, 7.309700000000113e-05, 7.333400000000129e-05, 7.24300000000018e-05, 7.317999999999908e-05, 7.284700000000088e-05, 7.323600000000083e-05, 7.290300000000263e-05, 7.249999999999965e-05, 7.29170000000022e-05, 7.297199999999754e-05, 7.297200000000101e-05, 7.268099999999805e-05, 7.316599999999951e-05, 7.265200000000291e-05, 7.300000000000015e-05, 7.294400000000187e-05, 7.334700000000138e-05, 7.270799999999772e-05, 7.256899999999802e-05, 7.279199999999861e-05, 7.326399999999997e-05, 7.32500000000004e-05, 7.322299999999726e-05, 7.312500000000027e-05, 7.256899999999802e-05, 7.268000000000205e-05, 7.27499999999999e-05, 7.240300000000213e-05, 7.268000000000205e-05, 7.318100000000202e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.504" endtime="20201117 14:47:17.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.499" endtime="20201117 14:47:17.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.509" endtime="20201117 14:47:17.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.512" endtime="20201117 14:47:17.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.511" endtime="20201117 14:47:17.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.507" endtime="20201117 14:47:17.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.138" endtime="20201117 14:47:17.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.136" endtime="20201117 14:47:17.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.135" endtime="20201117 14:47:17.533"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.536" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.545" endtime="20201117 14:47:17.563"></status>
</kw>
<msg timestamp="20201117 14:47:17.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.543" endtime="20201117 14:47:17.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.565" endtime="20201117 14:47:17.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.568" endtime="20201117 14:47:17.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.540" endtime="20201117 14:47:17.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.538" endtime="20201117 14:47:17.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.577" endtime="20201117 14:47:17.864"></status>
</kw>
<msg timestamp="20201117 14:47:17.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024952861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025026417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.575" endtime="20201117 14:47:17.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024952861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025026417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.868" endtime="20201117 14:47:17.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.877" endtime="20201117 14:47:17.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.573" endtime="20201117 14:47:17.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.571" endtime="20201117 14:47:17.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.883" level="INFO">${RESULT} = [{'time': 0.025026417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.355599999999893e-05, 'source_diff': 7.355599999999893e-05}, {'time': 0.025115431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.880" endtime="20201117 14:47:17.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.897" level="INFO">${ACCURACY} = {'time': [0.025026417, 0.025115431, 0.025207431, 0.025300444, 0.025397458, 0.025485486, 0.0255775, 0.0256695, 0.0257675, 0.025857528, 0.025953514, 0.026049528, 0.026141542, 0.026238556, 0.026336569, 0...</msg>
<status status="PASS" starttime="20201117 14:47:17.885" endtime="20201117 14:47:17.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.902" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.901" endtime="20201117 14:47:17.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.904" level="INFO">VALUE: [7.355599999999893e-05, 7.401400000000072e-05, 7.373699999999733e-05, 7.391599999999679e-05, 7.348600000000108e-05, 7.344400000000237e-05, 7.369399999999915e-05, 7.401400000000072e-05, 7.374999999999743e-05, 7.394500000000234e-05, 7.383299999999884e-05, 7.341699999999923e-05, 7.348600000000108e-05, 7.408399999999857e-05, 7.37500000000009e-05, 7.374999999999743e-05, 7.34300000000028e-05, 7.379199999999961e-05, 7.42500000000014e-05, 7.39309999999993e-05, 7.398600000000158e-05, 7.37500000000009e-05, 7.372299999999776e-05, 7.379100000000013e-05, 7.39309999999993e-05, 7.350000000000065e-05, 7.426299999999803e-05, 7.426400000000097e-05, 7.395899999999844e-05, 7.433299999999934e-05, 7.40829999999991e-05, 7.359699999999816e-05, 7.34309999999988e-05, 7.384699999999841e-05, 7.358400000000154e-05, 7.413900000000084e-05, 7.338900000000009e-05, 7.363900000000034e-05, 7.401399999999725e-05, 7.376400000000047e-05, 7.392999999999983e-05, 7.401399999999725e-05, 7.35829999999986e-05, 7.359700000000163e-05, 7.39309999999993e-05, 7.436199999999796e-05, 7.391699999999973e-05, 7.416699999999998e-05, 7.441700000000023e-05, 7.422199999999879e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.903" endtime="20201117 14:47:17.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.898" endtime="20201117 14:47:17.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.908" endtime="20201117 14:47:17.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.911" endtime="20201117 14:47:17.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.910" endtime="20201117 14:47:17.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.906" endtime="20201117 14:47:17.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.537" endtime="20201117 14:47:17.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.535" endtime="20201117 14:47:17.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.534" endtime="20201117 14:47:17.933"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.935" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.944" endtime="20201117 14:47:17.963"></status>
</kw>
<msg timestamp="20201117 14:47:17.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.942" endtime="20201117 14:47:17.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.964" endtime="20201117 14:47:17.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.967" endtime="20201117 14:47:17.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.940" endtime="20201117 14:47:17.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.937" endtime="20201117 14:47:17.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.976" endtime="20201117 14:47:18.263"></status>
</kw>
<msg timestamp="20201117 14:47:18.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025053569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025128472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.975" endtime="20201117 14:47:18.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025053569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025128472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.267" endtime="20201117 14:47:18.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.275" endtime="20201117 14:47:18.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.972" endtime="20201117 14:47:18.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.970" endtime="20201117 14:47:18.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.282" level="INFO">${RESULT} = [{'time': 0.025128472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.49029999999977e-05, 'source_diff': 7.49029999999977e-05}, {'time': 0.025218472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:18.279" endtime="20201117 14:47:18.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.296" level="INFO">${ACCURACY} = {'time': [0.025128472, 0.025218472, 0.025314486, 0.025411486, 0.025507514, 0.025603514, 0.025702528, 0.025795542, 0.025891542, 0.025982569, 0.026074611, 0.026163583, 0.026261583, 0.026359611, 0.026451...</msg>
<status status="PASS" starttime="20201117 14:47:18.283" endtime="20201117 14:47:18.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.301" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.299" endtime="20201117 14:47:18.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.303" level="INFO">VALUE: [7.49029999999977e-05, 7.4763999999998e-05, 7.45829999999996e-05, 7.441700000000023e-05, 7.516699999999751e-05, 7.451400000000122e-05, 7.524999999999893e-05, 7.508399999999957e-05, 7.458399999999907e-05, 7.50830000000001e-05, 7.509699999999966e-05, 7.527700000000206e-05, 7.533300000000034e-05, 7.473600000000233e-05, 7.443000000000033e-05, 7.479199999999714e-05, 7.49310000000003e-05, 7.465299999999744e-05, 7.498599999999911e-05, 7.4763999999998e-05, 7.524999999999893e-05, 7.458399999999907e-05, 7.486100000000245e-05, 7.533300000000034e-05, 7.477799999999757e-05, 7.529200000000111e-05, 7.44309999999998e-05, 7.465299999999744e-05, 7.536200000000243e-05, 7.49029999999977e-05, 7.516700000000098e-05, 7.518100000000055e-05, 7.469400000000015e-05, 7.533300000000034e-05, 7.50830000000001e-05, 7.443000000000033e-05, 7.465300000000091e-05, 7.454200000000036e-05, 7.50830000000001e-05, 7.523599999999936e-05, 7.495799999999997e-05, 7.463900000000134e-05, 7.447299999999851e-05, 7.508399999999957e-05, 7.459699999999916e-05, 7.443000000000033e-05, 7.466600000000101e-05, 7.465300000000091e-05, 7.483299999999984e-05, 7.473600000000233e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.302" endtime="20201117 14:47:18.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.297" endtime="20201117 14:47:18.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.307" endtime="20201117 14:47:18.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.310" endtime="20201117 14:47:18.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.309" endtime="20201117 14:47:18.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.305" endtime="20201117 14:47:18.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.936" endtime="20201117 14:47:18.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.934" endtime="20201117 14:47:18.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.933" endtime="20201117 14:47:18.332"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.334" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.342" endtime="20201117 14:47:18.362"></status>
</kw>
<msg timestamp="20201117 14:47:18.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.341" endtime="20201117 14:47:18.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.363" endtime="20201117 14:47:18.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.366" endtime="20201117 14:47:18.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.338" endtime="20201117 14:47:18.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.336" endtime="20201117 14:47:18.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.375" endtime="20201117 14:47:18.662"></status>
</kw>
<msg timestamp="20201117 14:47:18.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025556375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.374" endtime="20201117 14:47:18.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025556375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.666" endtime="20201117 14:47:18.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.675" endtime="20201117 14:47:18.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.371" endtime="20201117 14:47:18.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.369" endtime="20201117 14:47:18.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.682" level="INFO">${RESULT} = [{'time': 0.025556375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.622200000000079e-05, 'source_diff': 7.622200000000079e-05}, {'time': 0.025646375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:18.678" endtime="20201117 14:47:18.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.697" level="INFO">${ACCURACY} = {'time': [0.025556375, 0.025646375, 0.025738389, 0.025838403, 0.025928417, 0.026023444, 0.026119431, 0.026217444, 0.026310472, 0.026407472, 0.026504486, 0.0266045, 0.0266965, 0.026786528, 0.026884542,...</msg>
<status status="PASS" starttime="20201117 14:47:18.683" endtime="20201117 14:47:18.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.701" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.700" endtime="20201117 14:47:18.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.704" level="INFO">VALUE: [7.622200000000079e-05, 7.555599999999746e-05, 7.591700000000173e-05, 7.584700000000041e-05, 7.543099999999733e-05, 7.602699999999935e-05, 7.541699999999776e-05, 7.633299999999787e-05, 7.543000000000133e-05, 7.568000000000158e-05, 7.584700000000041e-05, 7.605599999999796e-05, 7.57500000000029e-05, 7.577800000000204e-05, 7.611100000000023e-05, 7.547200000000004e-05, 7.583400000000032e-05, 7.611100000000023e-05, 7.534699999999991e-05, 7.551399999999875e-05, 7.542999999999786e-05, 7.599999999999968e-05, 7.608299999999762e-05, 7.574999999999943e-05, 7.577799999999857e-05, 7.586099999999998e-05, 7.598600000000011e-05, 7.541699999999776e-05, 7.601400000000272e-05, 7.627800000000254e-05, 7.576400000000247e-05, 7.624999999999993e-05, 7.627800000000254e-05, 7.62639999999995e-05, 7.544500000000037e-05, 7.634700000000091e-05, 7.55830000000006e-05, 7.593099999999783e-05, 7.616700000000198e-05, 7.549999999999918e-05, 7.543000000000133e-05, 7.634700000000091e-05, 7.583399999999685e-05, 7.559700000000016e-05, 7.573599999999986e-05, 7.574999999999943e-05, 7.541700000000123e-05, 7.602799999999882e-05, 7.55700000000005e-05, 7.574999999999943e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.702" endtime="20201117 14:47:18.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.697" endtime="20201117 14:47:18.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.707" endtime="20201117 14:47:18.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.711" endtime="20201117 14:47:18.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.709" endtime="20201117 14:47:18.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.706" endtime="20201117 14:47:18.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.335" endtime="20201117 14:47:18.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.333" endtime="20201117 14:47:18.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.332" endtime="20201117 14:47:18.732"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.735" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.743" endtime="20201117 14:47:18.762"></status>
</kw>
<msg timestamp="20201117 14:47:18.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.742" endtime="20201117 14:47:18.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.764" endtime="20201117 14:47:18.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.766" endtime="20201117 14:47:18.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.739" endtime="20201117 14:47:18.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.737" endtime="20201117 14:47:18.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.776" endtime="20201117 14:47:19.063"></status>
</kw>
<msg timestamp="20201117 14:47:19.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024810847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.774" endtime="20201117 14:47:19.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024810847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.067" endtime="20201117 14:47:19.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.075" endtime="20201117 14:47:19.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.771" endtime="20201117 14:47:19.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.770" endtime="20201117 14:47:19.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.082" level="INFO">${RESULT} = [{'time': 0.024887417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.656999999999803e-05, 'source_diff': 7.656999999999803e-05}, {'time': 0.024980417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.079" endtime="20201117 14:47:19.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.096" level="INFO">${ACCURACY} = {'time': [0.024887417, 0.024980417, 0.025078417, 0.025177444, 0.0252725, 0.025365458, 0.025456472, 0.025549472, 0.0256465, 0.025742514, 0.025835528, 0.025936514, 0.026030542, 0.026129542, 0.026223556,...</msg>
<status status="PASS" starttime="20201117 14:47:19.084" endtime="20201117 14:47:19.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.101" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.100" endtime="20201117 14:47:19.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.104" level="INFO">VALUE: [7.656999999999803e-05, 7.734800000000139e-05, 7.70839999999981e-05, 7.642999999999886e-05, 7.655599999999846e-05, 7.692999999999936e-05, 7.666599999999954e-05, 7.683300000000184e-05, 7.65969999999977e-05, 7.694500000000187e-05, 7.713900000000037e-05, 7.682000000000175e-05, 7.65700000000015e-05, 7.641699999999876e-05, 7.659799999999717e-05, 7.702700000000035e-05, 7.70830000000021e-05, 7.675000000000043e-05, 7.725000000000093e-05, 7.6764e-05, 7.711099999999776e-05, 7.70969999999982e-05, 7.706999999999853e-05, 7.72640000000005e-05, 7.701400000000025e-05, 7.72640000000005e-05, 7.72770000000006e-05, 7.70830000000021e-05, 7.652800000000279e-05, 7.658299999999812e-05, 7.661099999999726e-05, 7.708299999999862e-05, 7.691700000000273e-05, 7.702799999999982e-05, 7.659800000000064e-05, 7.693099999999883e-05, 7.701400000000025e-05, 7.723699999999736e-05, 7.723600000000136e-05, 7.691599999999979e-05, 7.701400000000025e-05, 7.687500000000055e-05, 7.73189999999993e-05, 7.641699999999876e-05, 7.651400000000322e-05, 7.693099999999883e-05, 7.733400000000182e-05, 7.64310000000018e-05, 7.699999999999721e-05, 7.675000000000043e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.102" endtime="20201117 14:47:19.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.097" endtime="20201117 14:47:19.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.107" endtime="20201117 14:47:19.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.110" endtime="20201117 14:47:19.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.109" endtime="20201117 14:47:19.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.105" endtime="20201117 14:47:19.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.736" endtime="20201117 14:47:19.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.734" endtime="20201117 14:47:19.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.733" endtime="20201117 14:47:19.132"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.134" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.143" endtime="20201117 14:47:19.161"></status>
</kw>
<msg timestamp="20201117 14:47:19.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.141" endtime="20201117 14:47:19.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.163" endtime="20201117 14:47:19.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.166" endtime="20201117 14:47:19.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.138" endtime="20201117 14:47:19.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.136" endtime="20201117 14:47:19.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.175" endtime="20201117 14:47:19.461"></status>
</kw>
<msg timestamp="20201117 14:47:19.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024638153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024715708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.173" endtime="20201117 14:47:19.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024638153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024715708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.465" endtime="20201117 14:47:19.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.474" endtime="20201117 14:47:19.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.171" endtime="20201117 14:47:19.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.169" endtime="20201117 14:47:19.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.481" level="INFO">${RESULT} = [{'time': 0.024715708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.755499999999999e-05, 'source_diff': 7.755499999999999e-05}, {'time': 0.024812722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.478" endtime="20201117 14:47:19.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.495" level="INFO">${ACCURACY} = {'time': [0.024715708, 0.024812722, 0.024905708, 0.025001736, 0.025100736, 0.02519575, 0.025293806, 0.025394764, 0.025489778, 0.025582806, 0.025676819, 0.025769819, 0.025864819, 0.025960847, 0.0260578...</msg>
<status status="PASS" starttime="20201117 14:47:19.482" endtime="20201117 14:47:19.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.500" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.499" endtime="20201117 14:47:19.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.502" level="INFO">VALUE: [7.755499999999999e-05, 7.752800000000032e-05, 7.824999999999846e-05, 7.811099999999876e-05, 7.75969999999987e-05, 7.793099999999983e-05, 7.805599999999996e-05, 7.758299999999912e-05, 7.806999999999953e-05, 7.809799999999867e-05, 7.776300000000153e-05, 7.758299999999912e-05, 7.791600000000079e-05, 7.819400000000018e-05, 7.802800000000082e-05, 7.747300000000151e-05, 7.766700000000001e-05, 7.770899999999872e-05, 7.751400000000075e-05, 7.759799999999817e-05, 7.763900000000087e-05, 7.758400000000207e-05, 7.79030000000007e-05, 7.784700000000241e-05, 7.77779999999971e-05, 7.75969999999987e-05, 7.775000000000143e-05, 7.759700000000216e-05, 7.76250000000013e-05, 7.75969999999987e-05, 7.79449999999994e-05, 7.766700000000001e-05, 7.802700000000135e-05, 7.793099999999983e-05, 7.768000000000011e-05, 7.786100000000198e-05, 7.774999999999796e-05, 7.808299999999962e-05, 7.7764000000001e-05, 7.793099999999983e-05, 7.816700000000051e-05, 7.784699999999894e-05, 7.791700000000026e-05, 7.833399999999935e-05, 7.75700000000025e-05, 7.776299999999806e-05, 7.808299999999962e-05, 7.759700000000216e-05, 7.759700000000216e-05, 7.831999999999978e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.501" endtime="20201117 14:47:19.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.496" endtime="20201117 14:47:19.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.505" endtime="20201117 14:47:19.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.509" endtime="20201117 14:47:19.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.507" endtime="20201117 14:47:19.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.504" endtime="20201117 14:47:19.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.135" endtime="20201117 14:47:19.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.133" endtime="20201117 14:47:19.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.132" endtime="20201117 14:47:19.530"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.533" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.541" endtime="20201117 14:47:19.560"></status>
</kw>
<msg timestamp="20201117 14:47:19.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.540" endtime="20201117 14:47:19.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.562" endtime="20201117 14:47:19.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.564" endtime="20201117 14:47:19.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.537" endtime="20201117 14:47:19.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.535" endtime="20201117 14:47:19.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.574" endtime="20201117 14:47:19.860"></status>
</kw>
<msg timestamp="20201117 14:47:19.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024645681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024724361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.572" endtime="20201117 14:47:19.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024645681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024724361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.864" endtime="20201117 14:47:19.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.873" endtime="20201117 14:47:19.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.570" endtime="20201117 14:47:19.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.568" endtime="20201117 14:47:19.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.880" level="INFO">${RESULT} = [{'time': 0.024724361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.868000000000111e-05, 'source_diff': 7.868000000000111e-05}, {'time': 0.024819389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.876" endtime="20201117 14:47:19.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.894" level="INFO">${ACCURACY} = {'time': [0.024724361, 0.024819389, 0.024922389, 0.025019403, 0.025114417, 0.025214431, 0.025317444, 0.025413444, 0.025510444, 0.025607472, 0.025705472, 0.025800486, 0.025899569, 0.025997528, 0.026094...</msg>
<status status="PASS" starttime="20201117 14:47:19.881" endtime="20201117 14:47:19.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.898" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.897" endtime="20201117 14:47:19.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.901" level="INFO">VALUE: [7.868000000000111e-05, 7.919500000000065e-05, 7.918100000000108e-05, 7.918099999999761e-05, 7.901399999999878e-05, 7.911199999999924e-05, 7.894400000000093e-05, 7.862499999999883e-05, 7.883300000000037e-05, 7.90970000000002e-05, 7.905500000000149e-05, 7.893000000000136e-05, 7.875000000000243e-05, 7.868100000000058e-05, 7.933300000000088e-05, 7.919500000000065e-05, 7.926399999999903e-05, 7.926399999999903e-05, 7.89169999999978e-05, 7.916600000000204e-05, 7.870800000000025e-05, 7.918000000000161e-05, 7.884699999999994e-05, 7.858300000000012e-05, 7.874999999999896e-05, 7.887500000000255e-05, 7.922200000000032e-05, 7.85839999999996e-05, 7.89169999999978e-05, 7.900000000000268e-05, 7.911100000000323e-05, 7.87779999999981e-05, 7.924999999999946e-05, 7.915300000000194e-05, 7.874999999999896e-05, 7.923599999999989e-05, 7.844399999999696e-05, 7.886099999999951e-05, 7.876399999999853e-05, 7.926299999999956e-05, 7.907000000000053e-05, 7.918000000000161e-05, 7.85969999999997e-05, 7.877800000000157e-05, 7.858300000000012e-05, 7.858300000000012e-05, 7.858300000000012e-05, 7.927800000000207e-05, 7.92779999999986e-05, 7.861199999999874e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.899" endtime="20201117 14:47:19.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.894" endtime="20201117 14:47:19.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.904" endtime="20201117 14:47:19.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.908" endtime="20201117 14:47:19.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.906" endtime="20201117 14:47:19.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.902" endtime="20201117 14:47:19.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.533" endtime="20201117 14:47:19.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.531" endtime="20201117 14:47:19.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.531" endtime="20201117 14:47:19.929"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.931" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.940" endtime="20201117 14:47:19.959"></status>
</kw>
<msg timestamp="20201117 14:47:19.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.938" endtime="20201117 14:47:19.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.961" endtime="20201117 14:47:19.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.972" endtime="20201117 14:47:19.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.935" endtime="20201117 14:47:19.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.933" endtime="20201117 14:47:19.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.982" endtime="20201117 14:47:20.268"></status>
</kw>
<msg timestamp="20201117 14:47:20.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025488028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02556775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:19.980" endtime="20201117 14:47:20.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025488028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02556775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:20.272" endtime="20201117 14:47:20.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.281" endtime="20201117 14:47:20.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.978" endtime="20201117 14:47:20.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.976" endtime="20201117 14:47:20.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.288" level="INFO">${RESULT} = [{'time': 0.02556775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.972200000000082e-05, 'source_diff': 7.972200000000082e-05}, {'time': 0.02567075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:20.284" endtime="20201117 14:47:20.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.303" level="INFO">${ACCURACY} = {'time': [0.02556775, 0.02567075, 0.025769778, 0.025869778, 0.025970806, 0.026070875, 0.026172847, 0.026267819, 0.026367847, 0.026469847, 0.026563875, 0.026659875, 0.026755875, 0.026855931, 0.02695890...</msg>
<status status="PASS" starttime="20201117 14:47:20.289" endtime="20201117 14:47:20.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.307" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.306" endtime="20201117 14:47:20.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.310" level="INFO">VALUE: [7.972200000000082e-05, 7.94169999999983e-05, 8.033400000000135e-05, 7.95840000000006e-05, 7.959800000000017e-05, 8.000000000000021e-05, 7.986100000000051e-05, 7.941600000000229e-05, 7.967999999999864e-05, 8.016599999999957e-05, 8.002799999999935e-05, 7.95970000000007e-05, 7.94169999999983e-05, 8.016699999999904e-05, 8.02779999999996e-05, 7.941700000000176e-05, 8.018100000000208e-05, 7.991600000000279e-05, 7.951399999999928e-05, 8.026400000000003e-05, 7.943000000000186e-05, 7.954200000000189e-05, 8.026400000000003e-05, 7.95970000000007e-05, 8.025000000000046e-05, 7.974999999999996e-05, 7.993100000000183e-05, 8.034800000000092e-05, 8.02909999999997e-05, 8.016599999999957e-05, 7.966599999999907e-05, 8.000000000000021e-05, 7.949999999999971e-05, 7.984699999999748e-05, 7.955599999999799e-05, 7.958299999999766e-05, 8.026400000000003e-05, 7.9764000000003e-05, 7.962499999999983e-05, 7.992999999999889e-05, 7.966599999999907e-05, 7.98190000000018e-05, 7.970800000000125e-05, 7.994400000000193e-05, 7.949999999999971e-05, 7.97779999999991e-05, 8.00970000000012e-05, 8.006999999999806e-05, 7.992999999999889e-05, 8.034800000000092e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.309" endtime="20201117 14:47:20.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.304" endtime="20201117 14:47:20.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.313" endtime="20201117 14:47:20.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.317" endtime="20201117 14:47:20.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.315" endtime="20201117 14:47:20.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.312" endtime="20201117 14:47:20.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.932" endtime="20201117 14:47:20.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.930" endtime="20201117 14:47:20.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.929" endtime="20201117 14:47:20.338"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.341" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.350" endtime="20201117 14:47:20.369"></status>
</kw>
<msg timestamp="20201117 14:47:20.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.348" endtime="20201117 14:47:20.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.370" endtime="20201117 14:47:20.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.373" endtime="20201117 14:47:20.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.345" endtime="20201117 14:47:20.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.343" endtime="20201117 14:47:20.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.382" endtime="20201117 14:47:20.668"></status>
</kw>
<msg timestamp="20201117 14:47:20.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025246153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025327375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.380" endtime="20201117 14:47:20.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025246153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025327375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.672" endtime="20201117 14:47:20.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.681" endtime="20201117 14:47:20.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.378" endtime="20201117 14:47:20.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.376" endtime="20201117 14:47:20.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.688" level="INFO">${RESULT} = [{'time': 0.025327375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.122199999999885e-05, 'source_diff': 8.122199999999885e-05}, {'time': 0.025431403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:20.684" endtime="20201117 14:47:20.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.701" level="INFO">${ACCURACY} = {'time': [0.025327375, 0.025431403, 0.025526389, 0.025623417, 0.025719403, 0.025819417, 0.025918444, 0.026016444, 0.026111486, 0.026210458, 0.026306486, 0.026402486, 0.0265015, 0.026604528, 0.02670751...</msg>
<status status="PASS" starttime="20201117 14:47:20.689" endtime="20201117 14:47:20.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.706" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.705" endtime="20201117 14:47:20.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.708" level="INFO">VALUE: [8.122199999999885e-05, 8.112500000000133e-05, 8.05970000000017e-05, 8.094499999999893e-05, 8.048599999999767e-05, 8.04169999999993e-05, 8.052700000000038e-05, 8.124999999999799e-05, 8.11109999999983e-05, 8.091600000000032e-05, 8.101400000000078e-05, 8.056899999999909e-05, 8.093099999999936e-05, 8.102800000000035e-05, 8.057000000000203e-05, 8.10840000000021e-05, 8.073600000000139e-05, 8.126400000000103e-05, 8.062500000000083e-05, 8.074999999999749e-05, 8.111100000000177e-05, 8.11390000000009e-05, 8.059699999999823e-05, 8.09169999999998e-05, 8.115300000000047e-05, 8.073600000000139e-05, 8.08329999999989e-05, 8.093099999999936e-05, 8.052700000000038e-05, 8.10970000000022e-05, 8.126400000000103e-05, 8.076400000000053e-05, 8.051400000000028e-05, 8.093099999999936e-05, 8.100000000000121e-05, 8.123599999999842e-05, 8.126400000000103e-05, 8.093099999999936e-05, 8.066699999999954e-05, 8.050000000000071e-05, 8.041599999999982e-05, 8.100000000000121e-05, 8.109699999999873e-05, 8.112499999999787e-05, 8.043099999999886e-05, 8.069500000000215e-05, 8.068099999999911e-05, 8.051400000000028e-05, 8.076400000000053e-05, 8.088800000000118e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.707" endtime="20201117 14:47:20.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.702" endtime="20201117 14:47:20.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.712" endtime="20201117 14:47:20.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.715" endtime="20201117 14:47:20.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.714" endtime="20201117 14:47:20.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.710" endtime="20201117 14:47:20.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.341" endtime="20201117 14:47:20.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.339" endtime="20201117 14:47:20.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.339" endtime="20201117 14:47:20.737"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.740" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.748" endtime="20201117 14:47:20.769"></status>
</kw>
<msg timestamp="20201117 14:47:20.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.747" endtime="20201117 14:47:20.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.770" endtime="20201117 14:47:20.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.773" endtime="20201117 14:47:20.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.744" endtime="20201117 14:47:20.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.742" endtime="20201117 14:47:20.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.782" endtime="20201117 14:47:21.067"></status>
</kw>
<msg timestamp="20201117 14:47:21.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026125486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026207208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.781" endtime="20201117 14:47:21.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026125486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026207208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.071" endtime="20201117 14:47:21.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.080" endtime="20201117 14:47:21.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.778" endtime="20201117 14:47:21.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.776" endtime="20201117 14:47:21.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.086" level="INFO">${RESULT} = [{'time': 0.026207208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.172199999999935e-05, 'source_diff': 8.172199999999935e-05}, {'time': 0.026310222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:21.083" endtime="20201117 14:47:21.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.100" level="INFO">${ACCURACY} = {'time': [0.026207208, 0.026310222, 0.02641125, 0.026510236, 0.026612236, 0.02671725, 0.026817264, 0.026916278, 0.027022292, 0.027120319, 0.027218306, 0.027323333, 0.027428361, 0.027528361, 0.02762536...</msg>
<status status="PASS" starttime="20201117 14:47:21.087" endtime="20201117 14:47:21.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.105" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.104" endtime="20201117 14:47:21.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.107" level="INFO">VALUE: [8.172199999999935e-05, 8.211100000000277e-05, 8.212500000000234e-05, 8.193000000000089e-05, 8.200000000000221e-05, 8.14170000000003e-05, 8.23330000000004e-05, 8.141699999999683e-05, 8.201399999999831e-05, 8.159699999999923e-05, 8.175000000000196e-05, 8.151400000000128e-05, 8.21109999999993e-05, 8.155500000000052e-05, 8.209699999999973e-05, 8.229200000000117e-05, 8.223599999999942e-05, 8.173599999999892e-05, 8.213899999999844e-05, 8.227799999999813e-05, 8.176400000000153e-05, 8.193000000000089e-05, 8.21659999999981e-05, 8.200000000000221e-05, 8.170799999999978e-05, 8.176399999999806e-05, 8.17780000000011e-05, 8.147200000000257e-05, 8.17780000000011e-05, 8.224999999999899e-05, 8.231900000000084e-05, 8.158399999999913e-05, 8.175000000000196e-05, 8.158299999999966e-05, 8.192999999999742e-05, 8.166700000000054e-05, 8.200000000000221e-05, 8.174999999999849e-05, 8.17780000000011e-05, 8.143099999999986e-05, 8.216700000000104e-05, 8.201400000000178e-05, 8.158399999999913e-05, 8.141599999999735e-05, 8.16659999999976e-05, 8.16659999999976e-05, 8.184700000000295e-05, 8.226399999999856e-05, 8.155599999999999e-05, 8.14170000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.106" endtime="20201117 14:47:21.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.101" endtime="20201117 14:47:21.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.111" endtime="20201117 14:47:21.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.114" endtime="20201117 14:47:21.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.113" endtime="20201117 14:47:21.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.109" endtime="20201117 14:47:21.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.740" endtime="20201117 14:47:21.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.738" endtime="20201117 14:47:21.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.737" endtime="20201117 14:47:21.136"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.138" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.146" endtime="20201117 14:47:21.166"></status>
</kw>
<msg timestamp="20201117 14:47:21.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.145" endtime="20201117 14:47:21.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.167" endtime="20201117 14:47:21.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.170" endtime="20201117 14:47:21.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.142" endtime="20201117 14:47:21.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.140" endtime="20201117 14:47:21.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.179" endtime="20201117 14:47:21.465"></status>
</kw>
<msg timestamp="20201117 14:47:21.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024793111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024875986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.178" endtime="20201117 14:47:21.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024793111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024875986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.470" endtime="20201117 14:47:21.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.479" endtime="20201117 14:47:21.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.175" endtime="20201117 14:47:21.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.173" endtime="20201117 14:47:21.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.485" level="INFO">${RESULT} = [{'time': 0.024875986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.287499999999962e-05, 'source_diff': 8.287499999999962e-05}, {'time': 0.024978, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:21.482" endtime="20201117 14:47:21.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.499" level="INFO">${ACCURACY} = {'time': [0.024875986, 0.024978, 0.025082028, 0.025181028, 0.025283042, 0.025380056, 0.025480056, 0.025582083, 0.025681083, 0.025785139, 0.025883125, 0.025982125, 0.026080125, 0.026187139, 0.026290167...</msg>
<status status="PASS" starttime="20201117 14:47:21.486" endtime="20201117 14:47:21.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.504" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.503" endtime="20201117 14:47:21.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.507" level="INFO">VALUE: [8.287499999999962e-05, 8.308300000000116e-05, 8.29309999999979e-05, 8.284700000000048e-05, 8.276399999999906e-05, 8.293100000000136e-05, 8.32780000000026e-05, 8.309699999999726e-05, 8.309700000000073e-05, 8.280599999999777e-05, 8.327799999999913e-05, 8.326399999999956e-05, 8.274999999999949e-05, 8.290300000000222e-05, 8.334800000000045e-05, 8.308400000000063e-05, 8.306999999999759e-05, 8.258300000000066e-05, 8.242999999999792e-05, 8.319399999999824e-05, 8.241599999999835e-05, 8.251399999999881e-05, 8.256899999999762e-05, 8.290299999999876e-05, 8.316699999999858e-05, 8.332000000000131e-05, 8.31110000000003e-05, 8.277699999999916e-05, 8.309700000000073e-05, 8.259700000000023e-05, 8.326399999999956e-05, 8.242999999999792e-05, 8.255599999999752e-05, 8.3152999999999e-05, 8.326399999999956e-05, 8.259700000000023e-05, 8.29309999999979e-05, 8.283400000000038e-05, 8.308400000000063e-05, 8.274999999999949e-05, 8.309700000000073e-05, 8.276400000000253e-05, 8.326399999999956e-05, 8.309699999999726e-05, 8.324999999999999e-05, 8.25979999999997e-05, 8.258400000000013e-05, 8.32780000000026e-05, 8.274999999999949e-05, 8.327699999999966e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.505" endtime="20201117 14:47:21.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.500" endtime="20201117 14:47:21.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.510" endtime="20201117 14:47:21.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.514" endtime="20201117 14:47:21.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.512" endtime="20201117 14:47:21.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.508" endtime="20201117 14:47:21.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.139" endtime="20201117 14:47:21.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.137" endtime="20201117 14:47:21.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.136" endtime="20201117 14:47:21.535"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.537" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.546" endtime="20201117 14:47:21.566"></status>
</kw>
<msg timestamp="20201117 14:47:21.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.544" endtime="20201117 14:47:21.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.568" endtime="20201117 14:47:21.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.570" endtime="20201117 14:47:21.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.542" endtime="20201117 14:47:21.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.539" endtime="20201117 14:47:21.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.580" endtime="20201117 14:47:21.864"></status>
</kw>
<msg timestamp="20201117 14:47:21.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025497208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025581417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.578" endtime="20201117 14:47:21.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025497208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025581417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.869" endtime="20201117 14:47:21.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.877" endtime="20201117 14:47:21.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.575" endtime="20201117 14:47:21.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.574" endtime="20201117 14:47:21.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.884" level="INFO">${RESULT} = [{'time': 0.025581417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.420899999999829e-05, 'source_diff': 8.420899999999829e-05}, {'time': 0.025682444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:21.881" endtime="20201117 14:47:21.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.900" level="INFO">${ACCURACY} = {'time': [0.025581417, 0.025682444, 0.025789444, 0.025895458, 0.025993528, 0.026091472, 0.026190486, 0.026296556, 0.026396514, 0.026502528, 0.026601542, 0.026706569, 0.026811556, 0.026917639, 0.027022...</msg>
<status status="PASS" starttime="20201117 14:47:21.886" endtime="20201117 14:47:21.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.904" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.903" endtime="20201117 14:47:21.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.907" level="INFO">VALUE: [8.420899999999829e-05, 8.376299999999712e-05, 8.422200000000185e-05, 8.426400000000056e-05, 8.34859999999972e-05, 8.38049999999993e-05, 8.388900000000019e-05, 8.388900000000019e-05, 8.408299999999869e-05, 8.409700000000173e-05, 8.420899999999829e-05, 8.376300000000059e-05, 8.375000000000049e-05, 8.348600000000067e-05, 8.348600000000067e-05, 8.377799999999963e-05, 8.393000000000289e-05, 8.418099999999915e-05, 8.422299999999786e-05, 8.416699999999958e-05, 8.366699999999908e-05, 8.413900000000044e-05, 8.436099999999808e-05, 8.342999999999892e-05, 8.358400000000113e-05, 8.409700000000173e-05, 8.391599999999985e-05, 8.433299999999894e-05, 8.376400000000006e-05, 8.37919999999992e-05, 8.426400000000056e-05, 8.376400000000006e-05, 8.408399999999816e-05, 8.338899999999969e-05, 8.400000000000074e-05, 8.366700000000254e-05, 8.342999999999892e-05, 8.436099999999808e-05, 8.426400000000056e-05, 8.343100000000186e-05, 8.366700000000254e-05, 8.433399999999841e-05, 8.426399999999709e-05, 8.429099999999676e-05, 8.406900000000259e-05, 8.392999999999942e-05, 8.398600000000117e-05, 8.359700000000123e-05, 8.376400000000006e-05, 8.344500000000143e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.905" endtime="20201117 14:47:21.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.901" endtime="20201117 14:47:21.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.910" endtime="20201117 14:47:21.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.914" endtime="20201117 14:47:21.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.912" endtime="20201117 14:47:21.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.908" endtime="20201117 14:47:21.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.538" endtime="20201117 14:47:21.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.536" endtime="20201117 14:47:21.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.535" endtime="20201117 14:47:21.935"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.937" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.946" endtime="20201117 14:47:21.965"></status>
</kw>
<msg timestamp="20201117 14:47:21.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.944" endtime="20201117 14:47:21.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.967" endtime="20201117 14:47:21.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.969" endtime="20201117 14:47:21.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.941" endtime="20201117 14:47:21.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.939" endtime="20201117 14:47:21.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.979" endtime="20201117 14:47:22.264"></status>
</kw>
<msg timestamp="20201117 14:47:22.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024472278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024557153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.977" endtime="20201117 14:47:22.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024472278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024557153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.268" endtime="20201117 14:47:22.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.277" endtime="20201117 14:47:22.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.975" endtime="20201117 14:47:22.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.973" endtime="20201117 14:47:22.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.284" level="INFO">${RESULT} = [{'time': 0.024557153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.487500000000162e-05, 'source_diff': 8.487500000000162e-05}, {'time': 0.024664167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:22.281" endtime="20201117 14:47:22.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.298" level="INFO">${ACCURACY} = {'time': [0.024557153, 0.024664167, 0.024769181, 0.024876194, 0.024980222, 0.025085222, 0.025190236, 0.025296264, 0.02539725, 0.025497292, 0.025599278, 0.025700333, 0.025805361, 0.025911347, 0.0260123...</msg>
<status status="PASS" starttime="20201117 14:47:22.285" endtime="20201117 14:47:22.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.302" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.301" endtime="20201117 14:47:22.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.305" level="INFO">VALUE: [8.487500000000162e-05, 8.473600000000192e-05, 8.526400000000156e-05, 8.525000000000199e-05, 8.441600000000035e-05, 8.484700000000248e-05, 8.491700000000033e-05, 8.452800000000038e-05, 8.458299999999919e-05, 8.504200000000045e-05, 8.49309999999999e-05, 8.504099999999751e-05, 8.530499999999733e-05, 8.494399999999999e-05, 8.46660000000006e-05, 8.51660000000011e-05, 8.516599999999763e-05, 8.516700000000058e-05, 8.533299999999994e-05, 8.525000000000199e-05, 8.494499999999947e-05, 8.518100000000015e-05, 8.46530000000005e-05, 8.52920000000007e-05, 8.526299999999862e-05, 8.442999999999992e-05, 8.468000000000017e-05, 8.516700000000058e-05, 8.49859999999987e-05, 8.476400000000106e-05, 8.509700000000273e-05, 8.508399999999916e-05, 8.44309999999994e-05, 8.451400000000081e-05, 8.477700000000116e-05, 8.441600000000035e-05, 8.519400000000024e-05, 8.483299999999944e-05, 8.49859999999987e-05, 8.533299999999994e-05, 8.509699999999926e-05, 8.524999999999852e-05, 8.44309999999994e-05, 8.534799999999898e-05, 8.458399999999866e-05, 8.491599999999738e-05, 8.475000000000149e-05, 8.484700000000248e-05, 8.475000000000149e-05, 8.494499999999947e-05]</msg>
<status status="PASS" starttime="20201117 14:47:22.304" endtime="20201117 14:47:22.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.299" endtime="20201117 14:47:22.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.308" endtime="20201117 14:47:22.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.312" endtime="20201117 14:47:22.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.310" endtime="20201117 14:47:22.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.307" endtime="20201117 14:47:22.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.938" endtime="20201117 14:47:22.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.936" endtime="20201117 14:47:22.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.935" endtime="20201117 14:47:22.333"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.335" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.344" endtime="20201117 14:47:22.364"></status>
</kw>
<msg timestamp="20201117 14:47:22.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.342" endtime="20201117 14:47:22.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.366" endtime="20201117 14:47:22.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.369" endtime="20201117 14:47:22.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.340" endtime="20201117 14:47:22.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.337" endtime="20201117 14:47:22.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.379" endtime="20201117 14:47:22.665"></status>
</kw>
<msg timestamp="20201117 14:47:22.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024847389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024933125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.376" endtime="20201117 14:47:22.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024847389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024933125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.670" endtime="20201117 14:47:22.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.678" endtime="20201117 14:47:22.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.374" endtime="20201117 14:47:22.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.372" endtime="20201117 14:47:22.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.685" level="INFO">${RESULT} = [{'time': 0.024933125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.573599999999945e-05, 'source_diff': 8.573599999999945e-05}, {'time': 0.025036125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:22.682" endtime="20201117 14:47:22.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.699" level="INFO">${ACCURACY} = {'time': [0.024933125, 0.025036125, 0.025139139, 0.025241167, 0.025347181, 0.025456167, 0.025560181, 0.025665194, 0.025774208, 0.025879236, 0.02598125, 0.026088278, 0.026194278, 0.026299264, 0.0264062...</msg>
<status status="PASS" starttime="20201117 14:47:22.686" endtime="20201117 14:47:22.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.703" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.702" endtime="20201117 14:47:22.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.706" level="INFO">VALUE: [8.573599999999945e-05, 8.59310000000009e-05, 8.601400000000231e-05, 8.626399999999909e-05, 8.559799999999923e-05, 8.558399999999966e-05, 8.588900000000219e-05, 8.566599999999813e-05, 8.601399999999884e-05, 8.626399999999909e-05, 8.626400000000256e-05, 8.594500000000047e-05, 8.619500000000072e-05, 8.615299999999854e-05, 8.568100000000065e-05, 8.584799999999948e-05, 8.541700000000083e-05, 8.551400000000181e-05, 8.594399999999752e-05, 8.5847e-05, 8.620799999999734e-05, 8.540299999999779e-05, 8.601399999999884e-05, 8.629199999999823e-05, 8.5847e-05, 8.575000000000249e-05, 8.559799999999923e-05, 8.608400000000016e-05, 8.608300000000069e-05, 8.541599999999788e-05, 8.568000000000117e-05, 8.5847e-05, 8.609700000000026e-05, 8.576399999999859e-05, 8.609799999999973e-05, 8.56249999999989e-05, 8.59859999999997e-05, 8.551299999999887e-05, 8.599999999999927e-05, 8.636100000000008e-05, 8.576399999999859e-05, 8.591700000000133e-05, 8.548600000000267e-05, 8.626399999999909e-05, 8.61669999999981e-05, 8.601399999999884e-05, 8.633300000000094e-05, 8.594400000000099e-05, 8.583300000000044e-05, 8.540199999999831e-05]</msg>
<status status="PASS" starttime="20201117 14:47:22.704" endtime="20201117 14:47:22.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.700" endtime="20201117 14:47:22.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.709" endtime="20201117 14:47:22.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.713" endtime="20201117 14:47:22.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.711" endtime="20201117 14:47:22.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.707" endtime="20201117 14:47:22.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.336" endtime="20201117 14:47:22.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.334" endtime="20201117 14:47:22.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.333" endtime="20201117 14:47:22.734"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.736" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.745" endtime="20201117 14:47:22.764"></status>
</kw>
<msg timestamp="20201117 14:47:22.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.743" endtime="20201117 14:47:22.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.766" endtime="20201117 14:47:22.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.769" endtime="20201117 14:47:22.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.741" endtime="20201117 14:47:22.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.738" endtime="20201117 14:47:22.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.779" endtime="20201117 14:47:23.064"></status>
</kw>
<msg timestamp="20201117 14:47:23.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024653208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024740444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.777" endtime="20201117 14:47:23.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024653208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024740444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.069" endtime="20201117 14:47:23.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.077" endtime="20201117 14:47:23.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.774" endtime="20201117 14:47:23.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.772" endtime="20201117 14:47:23.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.084" level="INFO">${RESULT} = [{'time': 0.024740444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.723600000000095e-05, 'source_diff': 8.723600000000095e-05}, {'time': 0.024851444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:23.081" endtime="20201117 14:47:23.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.098" level="INFO">${ACCURACY} = {'time': [0.024740444, 0.024851444, 0.024953458, 0.025061486, 0.025164528, 0.025265514, 0.025376514, 0.025483528, 0.025593528, 0.025694542, 0.025804556, 0.025911583, 0.026016583, 0.026118625, 0.026219...</msg>
<status status="PASS" starttime="20201117 14:47:23.085" endtime="20201117 14:47:23.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.103" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.102" endtime="20201117 14:47:23.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.105" level="INFO">VALUE: [8.723600000000095e-05, 8.692999999999895e-05, 8.651400000000281e-05, 8.659700000000076e-05, 8.695899999999757e-05, 8.686100000000058e-05, 8.708299999999822e-05, 8.691699999999886e-05, 8.682000000000134e-05, 8.726400000000009e-05, 8.700000000000027e-05, 8.661099999999686e-05, 8.675000000000002e-05, 8.71250000000004e-05, 8.641600000000235e-05, 8.71250000000004e-05, 8.668100000000165e-05, 8.68059999999983e-05, 8.644500000000097e-05, 8.719499999999825e-05, 8.666700000000208e-05, 8.66799999999987e-05, 8.716599999999963e-05, 8.71799999999992e-05, 8.73470000000015e-05, 8.637499999999965e-05, 8.688900000000319e-05, 8.726400000000009e-05, 8.64310000000014e-05, 8.64860000000002e-05, 8.725000000000052e-05, 8.679100000000273e-05, 8.675000000000002e-05, 8.654099999999901e-05, 8.709700000000126e-05, 8.642999999999845e-05, 8.655600000000152e-05, 8.640299999999879e-05, 8.716700000000258e-05, 8.734800000000098e-05, 8.647200000000063e-05, 8.734799999999751e-05, 8.642999999999845e-05, 8.733299999999847e-05, 8.676399999999959e-05, 8.708300000000169e-05, 8.675000000000002e-05, 8.676400000000306e-05, 8.691699999999886e-05, 8.733399999999794e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.104" endtime="20201117 14:47:23.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.099" endtime="20201117 14:47:23.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.109" endtime="20201117 14:47:23.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.112" endtime="20201117 14:47:23.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.110" endtime="20201117 14:47:23.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.107" endtime="20201117 14:47:23.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.737" endtime="20201117 14:47:23.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.735" endtime="20201117 14:47:23.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.734" endtime="20201117 14:47:23.133"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.136" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.145" endtime="20201117 14:47:23.165"></status>
</kw>
<msg timestamp="20201117 14:47:23.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.143" endtime="20201117 14:47:23.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.166" endtime="20201117 14:47:23.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.169" endtime="20201117 14:47:23.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.140" endtime="20201117 14:47:23.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.138" endtime="20201117 14:47:23.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.178" endtime="20201117 14:47:23.465"></status>
</kw>
<msg timestamp="20201117 14:47:23.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025918764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026006806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.177" endtime="20201117 14:47:23.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025918764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026006806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.469" endtime="20201117 14:47:23.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.477" endtime="20201117 14:47:23.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.174" endtime="20201117 14:47:23.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.172" endtime="20201117 14:47:23.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.484" level="INFO">${RESULT} = [{'time': 0.026006806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.804199999999998e-05, 'source_diff': 8.804199999999998e-05}, {'time': 0.026111806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:23.481" endtime="20201117 14:47:23.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.499" level="INFO">${ACCURACY} = {'time': [0.026006806, 0.026111806, 0.026218819, 0.026322889, 0.026428861, 0.026531875, 0.026642875, 0.026744889, 0.026854903, 0.026962917, 0.027068917, 0.027176931, 0.027279958, 0.027384972, 0.027493...</msg>
<status status="PASS" starttime="20201117 14:47:23.485" endtime="20201117 14:47:23.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.504" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.503" endtime="20201117 14:47:23.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.507" level="INFO">VALUE: [8.804199999999998e-05, 8.833400000000241e-05, 8.790200000000081e-05, 8.756999999999862e-05, 8.792999999999995e-05, 8.836099999999861e-05, 8.826400000000109e-05, 8.775000000000102e-05, 8.790300000000029e-05, 8.801400000000084e-05, 8.741700000000283e-05, 8.750000000000077e-05, 8.761100000000133e-05, 8.777800000000016e-05, 8.826400000000109e-05, 8.744500000000197e-05, 8.768099999999918e-05, 8.833300000000294e-05, 8.741699999999936e-05, 8.833399999999894e-05, 8.808399999999869e-05, 8.765300000000004e-05, 8.822199999999891e-05, 8.808299999999922e-05, 8.808300000000269e-05, 8.826400000000109e-05, 8.745899999999807e-05, 8.74999999999973e-05, 8.805600000000302e-05, 8.773599999999798e-05, 8.777800000000016e-05, 8.743099999999893e-05, 8.747200000000163e-05, 8.800000000000127e-05, 8.766600000000013e-05, 8.819399999999977e-05, 8.754199999999948e-05, 8.776400000000059e-05, 8.7944999999999e-05, 8.76669999999996e-05, 8.833399999999894e-05, 8.811099999999836e-05, 8.790199999999734e-05, 8.751400000000034e-05, 8.774999999999755e-05, 8.824999999999805e-05, 8.802800000000041e-05, 8.74310000000024e-05, 8.750000000000077e-05, 8.777799999999669e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.505" endtime="20201117 14:47:23.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.500" endtime="20201117 14:47:23.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.510" endtime="20201117 14:47:23.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.513" endtime="20201117 14:47:23.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.512" endtime="20201117 14:47:23.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.508" endtime="20201117 14:47:23.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.136" endtime="20201117 14:47:23.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.134" endtime="20201117 14:47:23.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.134" endtime="20201117 14:47:23.535"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.537" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.546" endtime="20201117 14:47:23.565"></status>
</kw>
<msg timestamp="20201117 14:47:23.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.544" endtime="20201117 14:47:23.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.567" endtime="20201117 14:47:23.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.570" endtime="20201117 14:47:23.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.542" endtime="20201117 14:47:23.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.540" endtime="20201117 14:47:23.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.579" endtime="20201117 14:47:23.865"></status>
</kw>
<msg timestamp="20201117 14:47:23.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024957792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025046333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.577" endtime="20201117 14:47:23.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024957792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025046333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.869" endtime="20201117 14:47:23.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.878" endtime="20201117 14:47:23.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.575" endtime="20201117 14:47:23.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.573" endtime="20201117 14:47:23.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.885" level="INFO">${RESULT} = [{'time': 0.025046333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.854100000000101e-05, 'source_diff': 8.854100000000101e-05}, {'time': 0.025151347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:23.881" endtime="20201117 14:47:23.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.898" level="INFO">${ACCURACY} = {'time': [0.025046333, 0.025151347, 0.025260417, 0.025372389, 0.025484389, 0.025591403, 0.025696431, 0.025803417, 0.025915444, 0.026027458, 0.026132458, 0.026237486, 0.0263465, 0.026453528, 0.02656352...</msg>
<status status="PASS" starttime="20201117 14:47:23.886" endtime="20201117 14:47:23.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.903" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.902" endtime="20201117 14:47:23.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.906" level="INFO">VALUE: [8.854100000000101e-05, 8.850000000000177e-05, 8.932000000000037e-05, 8.911099999999936e-05, 8.909699999999979e-05, 8.891699999999739e-05, 8.918099999999721e-05, 8.916699999999764e-05, 8.89999999999988e-05, 8.840200000000131e-05, 8.866600000000113e-05, 8.901400000000184e-05, 8.927799999999819e-05, 8.927800000000166e-05, 8.861099999999886e-05, 8.909699999999979e-05, 8.893100000000043e-05, 8.924999999999905e-05, 8.893000000000095e-05, 8.883299999999997e-05, 8.858299999999972e-05, 8.891599999999791e-05, 8.900000000000227e-05, 8.911099999999936e-05, 8.841700000000036e-05, 8.845899999999907e-05, 8.923699999999896e-05, 8.859799999999876e-05, 8.855600000000005e-05, 8.856900000000015e-05, 8.894400000000052e-05, 8.917999999999773e-05, 8.936099999999961e-05, 8.909699999999979e-05, 8.858399999999919e-05, 8.909699999999979e-05, 8.891700000000086e-05, 8.850000000000177e-05, 8.907000000000012e-05, 8.890200000000181e-05, 8.84999999999983e-05, 8.911099999999936e-05, 8.858299999999972e-05, 8.858299999999972e-05, 8.926400000000209e-05, 8.873599999999898e-05, 8.909799999999926e-05, 8.923599999999948e-05, 8.856999999999962e-05, 8.841600000000088e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.904" endtime="20201117 14:47:23.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.899" endtime="20201117 14:47:23.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.909" endtime="20201117 14:47:23.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.913" endtime="20201117 14:47:23.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.911" endtime="20201117 14:47:23.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.907" endtime="20201117 14:47:23.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.538" endtime="20201117 14:47:23.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.536" endtime="20201117 14:47:23.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.535" endtime="20201117 14:47:23.934"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.936" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.945" endtime="20201117 14:47:23.964"></status>
</kw>
<msg timestamp="20201117 14:47:23.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.943" endtime="20201117 14:47:23.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.966" endtime="20201117 14:47:23.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.968" endtime="20201117 14:47:23.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.941" endtime="20201117 14:47:23.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.939" endtime="20201117 14:47:23.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.978" endtime="20201117 14:47:24.263"></status>
</kw>
<msg timestamp="20201117 14:47:24.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024603847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.976" endtime="20201117 14:47:24.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024603847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.267" endtime="20201117 14:47:24.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.276" endtime="20201117 14:47:24.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.974" endtime="20201117 14:47:24.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.972" endtime="20201117 14:47:24.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.283" level="INFO">${RESULT} = [{'time': 0.024693569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.972199999999694e-05, 'source_diff': 8.972199999999694e-05}, {'time': 0.024802569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:24.280" endtime="20201117 14:47:24.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.297" level="INFO">${ACCURACY} = {'time': [0.024693569, 0.024802569, 0.024908597, 0.025014597, 0.025119639, 0.025230625, 0.025342639, 0.025452667, 0.025565681, 0.025678681, 0.025790694, 0.025900722, 0.026012708, 0.026119722, 0.026233...</msg>
<status status="PASS" starttime="20201117 14:47:24.284" endtime="20201117 14:47:24.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.301" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.300" endtime="20201117 14:47:24.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.304" level="INFO">VALUE: [8.972199999999694e-05, 9.023600000000048e-05, 8.955500000000158e-05, 8.959700000000029e-05, 8.995799999999762e-05, 8.984700000000054e-05, 8.993100000000143e-05, 8.986100000000011e-05, 8.974999999999955e-05, 8.943099999999746e-05, 8.967999999999823e-05, 8.984700000000054e-05, 9.023600000000048e-05, 8.941600000000188e-05, 8.99999999999998e-05, 8.958300000000072e-05, 8.990300000000229e-05, 9.002799999999894e-05, 8.961199999999933e-05, 9.026399999999962e-05, 9.011100000000036e-05, 8.973599999999998e-05, 9.006899999999818e-05, 9.019400000000177e-05, 8.990300000000229e-05, 8.99999999999998e-05, 8.959700000000029e-05, 8.9945000000001e-05, 8.970800000000084e-05, 8.986100000000011e-05, 8.998600000000023e-05, 9.01800000000022e-05, 9.016599999999916e-05, 9.016599999999916e-05, 8.967999999999823e-05, 8.948599999999973e-05, 8.976400000000259e-05, 8.943100000000093e-05, 9.036200000000008e-05, 8.970800000000084e-05, 8.942999999999798e-05, 8.966599999999866e-05, 9.038899999999975e-05, 8.974999999999955e-05, 8.976399999999912e-05, 8.993099999999796e-05, 8.984700000000054e-05, 9.027799999999919e-05, 8.993099999999796e-05, 8.952700000000244e-05]</msg>
<status status="PASS" starttime="20201117 14:47:24.302" endtime="20201117 14:47:24.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.298" endtime="20201117 14:47:24.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.308" endtime="20201117 14:47:24.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.311" endtime="20201117 14:47:24.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.310" endtime="20201117 14:47:24.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.306" endtime="20201117 14:47:24.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.937" endtime="20201117 14:47:24.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.935" endtime="20201117 14:47:24.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.934" endtime="20201117 14:47:24.332"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.335" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.343" endtime="20201117 14:47:24.363"></status>
</kw>
<msg timestamp="20201117 14:47:24.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.342" endtime="20201117 14:47:24.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.364" endtime="20201117 14:47:24.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.367" endtime="20201117 14:47:24.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.339" endtime="20201117 14:47:24.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.337" endtime="20201117 14:47:24.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.377" endtime="20201117 14:47:24.663"></status>
</kw>
<msg timestamp="20201117 14:47:24.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024659625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024750347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.375" endtime="20201117 14:47:24.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024659625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024750347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.667" endtime="20201117 14:47:24.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.676" endtime="20201117 14:47:24.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.372" endtime="20201117 14:47:24.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.370" endtime="20201117 14:47:24.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.683" level="INFO">${RESULT} = [{'time': 0.024750347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.072199999999794e-05, 'source_diff': 9.072199999999794e-05}, {'time': 0.024862375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:24.679" endtime="20201117 14:47:24.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.697" level="INFO">${ACCURACY} = {'time': [0.024750347, 0.024862375, 0.024969361, 0.025083361, 0.025193389, 0.025307389, 0.025420403, 0.025535431, 0.025647431, 0.025760458, 0.025871472, 0.025985472, 0.0260965, 0.0262065, 0.026316514,...</msg>
<status status="PASS" starttime="20201117 14:47:24.684" endtime="20201117 14:47:24.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.701" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.700" endtime="20201117 14:47:24.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.704" level="INFO">VALUE: [9.072199999999794e-05, 9.129199999999976e-05, 9.123599999999801e-05, 9.058299999999825e-05, 9.059700000000129e-05, 9.123599999999801e-05, 9.125000000000105e-05, 9.075000000000055e-05, 9.108399999999822e-05, 9.127700000000072e-05, 9.126400000000062e-05, 9.091599999999991e-05, 9.136100000000161e-05, 9.059700000000129e-05, 9.105599999999908e-05, 9.129199999999976e-05, 9.069499999999828e-05, 9.116699999999964e-05, 9.129100000000029e-05, 9.041599999999941e-05, 9.084700000000154e-05, 9.077799999999969e-05, 9.077799999999969e-05, 9.058300000000172e-05, 9.043099999999846e-05, 9.118099999999921e-05, 9.066699999999914e-05, 9.140300000000032e-05, 9.125000000000105e-05, 9.111099999999789e-05, 9.073600000000098e-05, 9.041700000000236e-05, 9.116699999999964e-05, 9.052799999999944e-05, 9.091699999999939e-05, 9.068099999999871e-05, 9.084800000000101e-05, 9.125000000000105e-05, 9.037500000000018e-05, 9.06939999999988e-05, 9.101400000000037e-05, 9.040299999999932e-05, 9.131899999999943e-05, 9.125000000000105e-05, 9.073600000000098e-05, 9.041700000000236e-05, 9.066699999999914e-05, 9.084799999999754e-05, 9.073599999999751e-05, 9.056899999999868e-05]</msg>
<status status="PASS" starttime="20201117 14:47:24.702" endtime="20201117 14:47:24.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.698" endtime="20201117 14:47:24.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.707" endtime="20201117 14:47:24.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.711" endtime="20201117 14:47:24.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.709" endtime="20201117 14:47:24.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.705" endtime="20201117 14:47:24.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.335" endtime="20201117 14:47:24.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.334" endtime="20201117 14:47:24.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.333" endtime="20201117 14:47:24.732"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.734" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.743" endtime="20201117 14:47:24.763"></status>
</kw>
<msg timestamp="20201117 14:47:24.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.741" endtime="20201117 14:47:24.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.765" endtime="20201117 14:47:24.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.767" endtime="20201117 14:47:24.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.739" endtime="20201117 14:47:24.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.736" endtime="20201117 14:47:24.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.777" endtime="20201117 14:47:25.063"></status>
</kw>
<msg timestamp="20201117 14:47:25.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025625361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025717403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.775" endtime="20201117 14:47:25.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025625361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025717403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.067" endtime="20201117 14:47:25.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.080" endtime="20201117 14:47:25.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.772" endtime="20201117 14:47:25.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.771" endtime="20201117 14:47:25.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.087" level="INFO">${RESULT} = [{'time': 0.025717403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.204200000000051e-05, 'source_diff': 9.204200000000051e-05}, {'time': 0.025826417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:25.084" endtime="20201117 14:47:25.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.102" level="INFO">${ACCURACY} = {'time': [0.025717403, 0.025826417, 0.025935431, 0.026047444, 0.026162458, 0.026269514, 0.026376486, 0.0264865, 0.026598528, 0.026706542, 0.026817542, 0.026925569, 0.027034556, 0.027142569, 0.02725163...</msg>
<status status="PASS" starttime="20201117 14:47:25.088" endtime="20201117 14:47:25.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.107" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.106" endtime="20201117 14:47:25.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.109" level="INFO">VALUE: [9.204200000000051e-05, 9.216700000000064e-05, 9.168099999999971e-05, 9.218000000000073e-05, 9.151400000000087e-05, 9.21390000000015e-05, 9.176400000000112e-05, 9.176400000000112e-05, 9.144499999999903e-05, 9.218100000000021e-05, 9.201400000000137e-05, 9.177700000000122e-05, 9.225000000000205e-05, 9.192999999999701e-05, 9.190300000000082e-05, 9.233399999999947e-05, 9.152800000000044e-05, 9.144499999999903e-05, 9.218100000000021e-05, 9.15139999999974e-05, 9.211199999999836e-05, 9.218100000000021e-05, 9.208399999999922e-05, 9.141599999999694e-05, 9.211099999999889e-05, 9.180500000000036e-05, 9.226400000000162e-05, 9.143099999999946e-05, 9.184700000000254e-05, 9.175000000000155e-05, 9.161199999999786e-05, 9.159799999999829e-05, 9.156999999999915e-05, 9.142999999999998e-05, 9.21940000000003e-05, 9.15000000000013e-05, 9.158299999999925e-05, 9.193099999999996e-05, 9.186099999999864e-05, 9.193099999999996e-05, 9.152800000000044e-05, 9.204099999999757e-05, 9.140300000000032e-05, 9.231899999999696e-05, 9.190200000000134e-05, 9.215300000000107e-05, 9.184700000000254e-05, 9.179200000000026e-05, 9.212499999999846e-05, 9.177800000000069e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.108" endtime="20201117 14:47:25.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.103" endtime="20201117 14:47:25.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.113" endtime="20201117 14:47:25.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.116" endtime="20201117 14:47:25.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.114" endtime="20201117 14:47:25.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.111" endtime="20201117 14:47:25.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.735" endtime="20201117 14:47:25.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.733" endtime="20201117 14:47:25.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.732" endtime="20201117 14:47:25.137"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.140" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.148" endtime="20201117 14:47:25.168"></status>
</kw>
<msg timestamp="20201117 14:47:25.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.146" endtime="20201117 14:47:25.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.170" endtime="20201117 14:47:25.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.172" endtime="20201117 14:47:25.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.144" endtime="20201117 14:47:25.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.142" endtime="20201117 14:47:25.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.182" endtime="20201117 14:47:25.468"></status>
</kw>
<msg timestamp="20201117 14:47:25.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024821708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02491475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:25.180" endtime="20201117 14:47:25.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024821708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02491475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:25.473" endtime="20201117 14:47:25.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.481" endtime="20201117 14:47:25.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.178" endtime="20201117 14:47:25.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.176" endtime="20201117 14:47:25.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.488" level="INFO">${RESULT} = [{'time': 0.02491475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.304199999999804e-05, 'source_diff': 9.304199999999804e-05}, {'time': 0.025028806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:25.485" endtime="20201117 14:47:25.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.502" level="INFO">${ACCURACY} = {'time': [0.02491475, 0.025028806, 0.025136778, 0.025245792, 0.025353806, 0.025468819, 0.025577833, 0.025690847, 0.025797847, 0.025906875, 0.026018889, 0.026127903, 0.026241903, 0.026355917, 0.0264699...</msg>
<status status="PASS" starttime="20201117 14:47:25.489" endtime="20201117 14:47:25.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.507" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.506" endtime="20201117 14:47:25.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.509" level="INFO">VALUE: [9.304199999999804e-05, 9.287499999999921e-05, 9.243099999999699e-05, 9.30139999999989e-05, 9.293100000000096e-05, 9.249999999999883e-05, 9.259699999999982e-05, 9.287499999999921e-05, 9.283299999999703e-05, 9.276399999999865e-05, 9.326399999999915e-05, 9.309700000000032e-05, 9.293100000000096e-05, 9.283399999999997e-05, 9.284799999999954e-05, 9.286099999999964e-05, 9.294400000000105e-05, 9.26940000000008e-05, 9.334700000000057e-05, 9.276399999999865e-05, 9.327800000000219e-05, 9.262499999999896e-05, 9.293100000000096e-05, 9.31529999999986e-05, 9.333400000000047e-05, 9.327699999999925e-05, 9.311099999999989e-05, 9.308300000000075e-05, 9.277800000000169e-05, 9.243099999999699e-05, 9.284700000000007e-05, 9.277800000000169e-05, 9.275000000000255e-05, 9.291700000000139e-05, 9.316700000000164e-05, 9.312500000000293e-05, 9.268000000000123e-05, 9.319399999999783e-05, 9.29720000000002e-05, 9.277799999999822e-05, 9.29590000000001e-05, 9.286099999999964e-05, 9.277800000000169e-05, 9.33469999999971e-05, 9.324999999999958e-05, 9.292999999999801e-05, 9.266600000000166e-05, 9.284700000000007e-05, 9.255600000000058e-05, 9.307000000000065e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.508" endtime="20201117 14:47:25.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.503" endtime="20201117 14:47:25.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.512" endtime="20201117 14:47:25.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.516" endtime="20201117 14:47:25.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.514" endtime="20201117 14:47:25.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.511" endtime="20201117 14:47:25.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.140" endtime="20201117 14:47:25.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.138" endtime="20201117 14:47:25.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.138" endtime="20201117 14:47:25.537"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.540" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.548" endtime="20201117 14:47:25.567"></status>
</kw>
<msg timestamp="20201117 14:47:25.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.546" endtime="20201117 14:47:25.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.569" endtime="20201117 14:47:25.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.572" endtime="20201117 14:47:25.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.544" endtime="20201117 14:47:25.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.542" endtime="20201117 14:47:25.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.582" endtime="20201117 14:47:25.868"></status>
</kw>
<msg timestamp="20201117 14:47:25.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024640333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024734181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.580" endtime="20201117 14:47:25.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024640333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024734181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.872" endtime="20201117 14:47:25.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.881" endtime="20201117 14:47:25.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.577" endtime="20201117 14:47:25.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.575" endtime="20201117 14:47:25.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.888" level="INFO">${RESULT} = [{'time': 0.024734181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.384800000000054e-05, 'source_diff': 9.384800000000054e-05}, {'time': 0.024847194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:25.884" endtime="20201117 14:47:25.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.901" level="INFO">${ACCURACY} = {'time': [0.024734181, 0.024847194, 0.024956208, 0.025071208, 0.025179222, 0.025289236, 0.02540025, 0.025516278, 0.025630333, 0.025742306, 0.025859306, 0.025971375, 0.026081347, 0.026199347, 0.0263153...</msg>
<status status="PASS" starttime="20201117 14:47:25.889" endtime="20201117 14:47:25.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.906" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.905" endtime="20201117 14:47:25.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.909" level="INFO">VALUE: [9.384800000000054e-05, 9.426300000000068e-05, 9.358300000000125e-05, 9.373600000000051e-05, 9.391599999999944e-05, 9.417999999999926e-05, 9.40139999999999e-05, 9.405599999999861e-05, 9.348600000000026e-05, 9.419499999999831e-05, 9.399999999999686e-05, 9.398600000000076e-05, 9.352800000000244e-05, 9.393000000000248e-05, 9.383299999999803e-05, 9.426400000000015e-05, 9.359700000000082e-05, 9.391699999999892e-05, 9.384800000000054e-05, 9.409800000000079e-05, 9.384800000000054e-05, 9.383299999999803e-05, 9.422200000000144e-05, 9.344400000000155e-05, 9.344400000000155e-05, 9.361100000000039e-05, 9.388899999999978e-05, 9.405499999999914e-05, 9.343100000000146e-05, 9.401300000000043e-05, 9.342999999999851e-05, 9.352799999999897e-05, 9.425000000000058e-05, 9.341700000000189e-05, 9.404200000000251e-05, 9.358299999999778e-05, 9.359700000000082e-05, 9.340300000000232e-05, 9.384800000000054e-05, 9.392999999999901e-05, 9.36659999999992e-05, 9.38330000000015e-05, 9.359700000000082e-05, 9.341699999999842e-05, 9.368100000000171e-05, 9.433299999999853e-05, 9.358399999999725e-05, 9.427799999999972e-05, 9.4333999999998e-05, 9.391700000000239e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.907" endtime="20201117 14:47:25.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.902" endtime="20201117 14:47:25.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.912" endtime="20201117 14:47:25.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.915" endtime="20201117 14:47:25.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.914" endtime="20201117 14:47:25.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.910" endtime="20201117 14:47:25.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.540" endtime="20201117 14:47:25.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.538" endtime="20201117 14:47:25.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.537" endtime="20201117 14:47:25.936"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.939" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.948" endtime="20201117 14:47:25.967"></status>
</kw>
<msg timestamp="20201117 14:47:25.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.946" endtime="20201117 14:47:25.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.969" endtime="20201117 14:47:25.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.972" endtime="20201117 14:47:25.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.943" endtime="20201117 14:47:25.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.941" endtime="20201117 14:47:25.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.981" endtime="20201117 14:47:26.267"></status>
</kw>
<msg timestamp="20201117 14:47:26.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02519175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025286986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:25.980" endtime="20201117 14:47:26.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02519175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025286986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:26.272" endtime="20201117 14:47:26.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.280" endtime="20201117 14:47:26.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.977" endtime="20201117 14:47:26.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.975" endtime="20201117 14:47:26.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.287" level="INFO">${RESULT} = [{'time': 0.025286986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.523600000000201e-05, 'source_diff': 9.523600000000201e-05}, {'time': 0.025403958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:26.284" endtime="20201117 14:47:26.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.301" level="INFO">${ACCURACY} = {'time': [0.025286986, 0.025403958, 0.025516986, 0.025625986, 0.025739014, 0.025849028, 0.025965083, 0.026084042, 0.026199056, 0.026313069, 0.026427097, 0.026543153, 0.026661125, 0.026780125, 0.026890...</msg>
<status status="PASS" starttime="20201117 14:47:26.288" endtime="20201117 14:47:26.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.305" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.304" endtime="20201117 14:47:26.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.308" level="INFO">VALUE: [9.523600000000201e-05, 9.525000000000158e-05, 9.459699999999835e-05, 9.483299999999903e-05, 9.51530000000006e-05, 9.486099999999817e-05, 9.459699999999835e-05, 9.508400000000222e-05, 9.456999999999868e-05, 9.459700000000182e-05, 9.476400000000065e-05, 9.475000000000108e-05, 9.477800000000022e-05, 9.493099999999949e-05, 9.53469999999991e-05, 9.444500000000203e-05, 9.519499999999931e-05, 9.480599999999936e-05, 9.475000000000108e-05, 9.43880000000008e-05, 9.533299999999953e-05, 9.476400000000065e-05, 9.494500000000253e-05, 9.501399999999743e-05, 9.469499999999881e-05, 9.459699999999835e-05, 9.5333000000003e-05, 9.443099999999899e-05, 9.513800000000155e-05, 9.50140000000009e-05, 9.442999999999951e-05, 9.529100000000082e-05, 9.444500000000203e-05, 9.48469999999986e-05, 9.443099999999899e-05, 9.534799999999857e-05, 9.444399999999908e-05, 9.467999999999976e-05, 9.48469999999986e-05, 9.479199999999979e-05, 9.458299999999878e-05, 9.459699999999835e-05, 9.458300000000225e-05, 9.445899999999813e-05, 9.531999999999943e-05, 9.476400000000065e-05, 9.473700000000099e-05, 9.526299999999821e-05, 9.509699999999885e-05, 9.524999999999811e-05]</msg>
<status status="PASS" starttime="20201117 14:47:26.307" endtime="20201117 14:47:26.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.302" endtime="20201117 14:47:26.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.311" endtime="20201117 14:47:26.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.315" endtime="20201117 14:47:26.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.313" endtime="20201117 14:47:26.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.310" endtime="20201117 14:47:26.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.940" endtime="20201117 14:47:26.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.938" endtime="20201117 14:47:26.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.937" endtime="20201117 14:47:26.336"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.339" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.347" endtime="20201117 14:47:26.368"></status>
</kw>
<msg timestamp="20201117 14:47:26.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.346" endtime="20201117 14:47:26.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.370" endtime="20201117 14:47:26.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.373" endtime="20201117 14:47:26.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.343" endtime="20201117 14:47:26.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.341" endtime="20201117 14:47:26.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.382" endtime="20201117 14:47:26.668"></status>
</kw>
<msg timestamp="20201117 14:47:26.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025992042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026087597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.381" endtime="20201117 14:47:26.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025992042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026087597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.673" endtime="20201117 14:47:26.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.681" endtime="20201117 14:47:26.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.378" endtime="20201117 14:47:26.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.376" endtime="20201117 14:47:26.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.688" level="INFO">${RESULT} = [{'time': 0.026087597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.555500000000064e-05, 'source_diff': 9.555500000000064e-05}, {'time': 0.026202611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:26.685" endtime="20201117 14:47:26.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.703" level="INFO">${ACCURACY} = {'time': [0.026087597, 0.026202611, 0.026316625, 0.026431639, 0.026550653, 0.026670694, 0.026789694, 0.026902694, 0.027012708, 0.027123722, 0.027236736, 0.02735075, 0.027464764, 0.027574764, 0.0276917...</msg>
<status status="PASS" starttime="20201117 14:47:26.689" endtime="20201117 14:47:26.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.708" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.707" endtime="20201117 14:47:26.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.711" level="INFO">VALUE: [9.555500000000064e-05, 9.550000000000183e-05, 9.622199999999997e-05, 9.540300000000085e-05, 9.550000000000183e-05, 9.595800000000015e-05, 9.551299999999846e-05, 9.608300000000028e-05, 9.609699999999985e-05, 9.543000000000051e-05, 9.566700000000067e-05, 9.616700000000117e-05, 9.566700000000067e-05, 9.598600000000276e-05, 9.623599999999954e-05, 9.541600000000094e-05, 9.569400000000033e-05, 9.587499999999874e-05, 9.609699999999985e-05, 9.577799999999775e-05, 9.608300000000028e-05, 9.576400000000165e-05, 9.593100000000049e-05, 9.568100000000024e-05, 9.588900000000178e-05, 9.607000000000018e-05, 9.541600000000094e-05, 9.568000000000076e-05, 9.633300000000053e-05, 9.591600000000144e-05, 9.566700000000067e-05, 9.618100000000074e-05, 9.615299999999813e-05, 9.599999999999886e-05, 9.558399999999925e-05, 9.608399999999975e-05, 9.561099999999892e-05, 9.609699999999985e-05, 9.586099999999917e-05, 9.604200000000104e-05, 9.576400000000165e-05, 9.568000000000076e-05, 9.559700000000282e-05, 9.623599999999954e-05, 9.626399999999868e-05, 9.613900000000203e-05, 9.562499999999502e-05, 9.627800000000519e-05, 9.61530000000016e-05, 9.574999999999861e-05]</msg>
<status status="PASS" starttime="20201117 14:47:26.709" endtime="20201117 14:47:26.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.704" endtime="20201117 14:47:26.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.714" endtime="20201117 14:47:26.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.718" endtime="20201117 14:47:26.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.716" endtime="20201117 14:47:26.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.712" endtime="20201117 14:47:26.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.339" endtime="20201117 14:47:26.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.337" endtime="20201117 14:47:26.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.337" endtime="20201117 14:47:26.739"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.742" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.750" endtime="20201117 14:47:26.770"></status>
</kw>
<msg timestamp="20201117 14:47:26.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.748" endtime="20201117 14:47:26.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.772" endtime="20201117 14:47:26.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.774" endtime="20201117 14:47:26.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.746" endtime="20201117 14:47:26.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.744" endtime="20201117 14:47:26.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.784" endtime="20201117 14:47:27.070"></status>
</kw>
<msg timestamp="20201117 14:47:27.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024761847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024859083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.782" endtime="20201117 14:47:27.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024761847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024859083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.074" endtime="20201117 14:47:27.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.083" endtime="20201117 14:47:27.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.779" endtime="20201117 14:47:27.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.777" endtime="20201117 14:47:27.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.090" level="INFO">${RESULT} = [{'time': 0.024859083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.723600000000054e-05, 'source_diff': 9.723600000000054e-05}, {'time': 0.024979083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:27.086" endtime="20201117 14:47:27.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.103" level="INFO">${ACCURACY} = {'time': [0.024859083, 0.024979083, 0.025100097, 0.025216111, 0.025332139, 0.025451139, 0.025564167, 0.025685167, 0.025798194, 0.025917194, 0.026031208, 0.026150222, 0.026265236, 0.026382264, 0.026499...</msg>
<status status="PASS" starttime="20201117 14:47:27.091" endtime="20201117 14:47:27.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.108" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.107" endtime="20201117 14:47:27.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.111" level="INFO">VALUE: [9.723600000000054e-05, 9.674999999999961e-05, 9.708299999999781e-05, 9.706899999999824e-05, 9.644500000000056e-05, 9.65140000000024e-05, 9.727799999999925e-05, 9.726399999999968e-05, 9.727699999999978e-05, 9.706900000000171e-05, 9.674999999999961e-05, 9.70409999999991e-05, 9.693000000000201e-05, 9.734699999999763e-05, 9.676400000000265e-05, 9.641699999999795e-05, 9.731999999999796e-05, 9.706999999999771e-05, 9.694400000000158e-05, 9.681899999999799e-05, 9.674999999999961e-05, 9.726399999999968e-05, 9.723599999999707e-05, 9.673600000000004e-05, 9.725000000000011e-05, 9.676399999999918e-05, 9.643100000000099e-05, 9.734800000000057e-05, 9.691599999999898e-05, 9.68470000000006e-05, 9.711100000000042e-05, 9.677799999999875e-05, 9.709700000000085e-05, 9.661099999999992e-05, 9.674999999999961e-05, 9.727799999999925e-05, 9.686199999999964e-05, 9.719399999999837e-05, 9.666599999999873e-05, 9.715299999999913e-05, 9.64859999999998e-05, 9.643100000000099e-05, 9.731900000000196e-05, 9.691699999999845e-05, 9.68340000000005e-05, 9.708399999999728e-05, 9.723700000000002e-05, 9.711099999999695e-05, 9.676400000000265e-05, 9.676399999999918e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.109" endtime="20201117 14:47:27.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.104" endtime="20201117 14:47:27.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.114" endtime="20201117 14:47:27.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.118" endtime="20201117 14:47:27.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.116" endtime="20201117 14:47:27.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.113" endtime="20201117 14:47:27.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.742" endtime="20201117 14:47:27.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.740" endtime="20201117 14:47:27.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.739" endtime="20201117 14:47:27.139"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.141" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.150" endtime="20201117 14:47:27.170"></status>
</kw>
<msg timestamp="20201117 14:47:27.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.148" endtime="20201117 14:47:27.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.171" endtime="20201117 14:47:27.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.174" endtime="20201117 14:47:27.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.146" endtime="20201117 14:47:27.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.144" endtime="20201117 14:47:27.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.183" endtime="20201117 14:47:27.469"></status>
</kw>
<msg timestamp="20201117 14:47:27.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024608778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.182" endtime="20201117 14:47:27.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024608778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.473" endtime="20201117 14:47:27.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.482" endtime="20201117 14:47:27.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.179" endtime="20201117 14:47:27.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.177" endtime="20201117 14:47:27.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.489" level="INFO">${RESULT} = [{'time': 0.024706819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.80410000000001e-05, 'source_diff': 9.80410000000001e-05}, {'time': 0.024827833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:27.486" endtime="20201117 14:47:27.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.503" level="INFO">${ACCURACY} = {'time': [0.024706819, 0.024827833, 0.024946847, 0.025060861, 0.025176875, 0.025294931, 0.025411903, 0.025530931, 0.025651944, 0.025771958, 0.025883972, 0.026001986, 0.026118014, 0.026239014, 0.026358...</msg>
<status status="PASS" starttime="20201117 14:47:27.490" endtime="20201117 14:47:27.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.508" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.507" endtime="20201117 14:47:27.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.510" level="INFO">VALUE: [9.80410000000001e-05, 9.81799999999998e-05, 9.816600000000023e-05, 9.800000000000086e-05, 9.791700000000292e-05, 9.838900000000081e-05, 9.738899999999981e-05, 9.8028e-05, 9.775000000000061e-05, 9.794400000000258e-05, 9.752800000000297e-05, 9.826400000000068e-05, 9.795799999999869e-05, 9.768100000000224e-05, 9.783299999999856e-05, 9.757000000000168e-05, 9.776400000000018e-05, 9.776400000000018e-05, 9.775000000000061e-05, 9.773600000000104e-05, 9.815300000000013e-05, 9.758300000000178e-05, 9.758300000000178e-05, 9.740299999999938e-05, 9.822200000000197e-05, 9.815300000000013e-05, 9.750000000000036e-05, 9.820900000000188e-05, 9.811100000000142e-05, 9.791599999999998e-05, 9.780499999999942e-05, 9.776400000000018e-05, 9.826400000000068e-05, 9.776400000000018e-05, 9.743099999999852e-05, 9.8028e-05, 9.809800000000132e-05, 9.808299999999881e-05, 9.776400000000018e-05, 9.776400000000018e-05, 9.809699999999838e-05, 9.776400000000018e-05, 9.776400000000018e-05, 9.777799999999975e-05, 9.743099999999852e-05, 9.802700000000053e-05, 9.741600000000294e-05, 9.74860000000008e-05, 9.742999999999905e-05, 9.784699999999813e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.509" endtime="20201117 14:47:27.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.504" endtime="20201117 14:47:27.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.514" endtime="20201117 14:47:27.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.517" endtime="20201117 14:47:27.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.516" endtime="20201117 14:47:27.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.512" endtime="20201117 14:47:27.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.142" endtime="20201117 14:47:27.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.140" endtime="20201117 14:47:27.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.139" endtime="20201117 14:47:27.538"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.541" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.549" endtime="20201117 14:47:27.569"></status>
</kw>
<msg timestamp="20201117 14:47:27.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.548" endtime="20201117 14:47:27.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.570" endtime="20201117 14:47:27.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.573" endtime="20201117 14:47:27.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.545" endtime="20201117 14:47:27.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.543" endtime="20201117 14:47:27.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.583" endtime="20201117 14:47:27.869"></status>
</kw>
<msg timestamp="20201117 14:47:27.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024571208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024669931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.581" endtime="20201117 14:47:27.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024571208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024669931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.873" endtime="20201117 14:47:27.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.882" endtime="20201117 14:47:27.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.578" endtime="20201117 14:47:27.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.576" endtime="20201117 14:47:27.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.889" level="INFO">${RESULT} = [{'time': 0.024669931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.872299999999848e-05, 'source_diff': 9.872299999999848e-05}, {'time': 0.024788944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:27.886" endtime="20201117 14:47:27.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.903" level="INFO">${ACCURACY} = {'time': [0.024669931, 0.024788944, 0.024904972, 0.025019972, 0.025138986, 0.025253, 0.025370014, 0.025486042, 0.025599042, 0.025721056, 0.025843069, 0.025964097, 0.026083097, 0.026204111, 0.026318125...</msg>
<status status="PASS" starttime="20201117 14:47:27.890" endtime="20201117 14:47:27.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.908" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.907" endtime="20201117 14:47:27.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.910" level="INFO">VALUE: [9.872299999999848e-05, 9.891600000000098e-05, 9.869399999999987e-05, 9.933300000000006e-05, 9.859699999999888e-05, 9.901400000000143e-05, 9.893100000000002e-05, 9.93609999999992e-05, 9.929199999999735e-05, 9.88479999999986e-05, 9.870799999999944e-05, 9.861099999999845e-05, 9.876400000000118e-05, 9.908299999999981e-05, 9.876400000000118e-05, 9.893100000000002e-05, 9.88470000000026e-05, 9.875000000000161e-05, 9.894400000000012e-05, 9.869399999999987e-05, 9.916600000000123e-05, 9.901400000000143e-05, 9.859699999999888e-05, 9.843100000000299e-05, 9.850000000000136e-05, 9.856999999999921e-05, 9.887499999999827e-05, 9.918100000000027e-05, 9.918100000000027e-05, 9.933300000000006e-05, 9.858299999999931e-05, 9.927800000000125e-05, 9.906900000000024e-05, 9.926400000000168e-05, 9.894499999999959e-05, 9.918100000000027e-05, 9.86670000000002e-05, 9.933399999999953e-05, 9.893000000000055e-05, 9.84999999999979e-05, 9.858299999999931e-05, 9.924999999999864e-05, 9.859699999999888e-05, 9.843099999999952e-05, 9.93479999999991e-05, 9.894499999999959e-05, 9.933399999999953e-05, 9.89020000000014e-05, 9.926399999999821e-05, 9.920799999999994e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.909" endtime="20201117 14:47:27.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.904" endtime="20201117 14:47:27.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.913" endtime="20201117 14:47:27.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.917" endtime="20201117 14:47:27.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.915" endtime="20201117 14:47:27.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.912" endtime="20201117 14:47:27.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.541" endtime="20201117 14:47:27.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.540" endtime="20201117 14:47:27.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.539" endtime="20201117 14:47:27.938"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.941" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.949" endtime="20201117 14:47:27.970"></status>
</kw>
<msg timestamp="20201117 14:47:27.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.947" endtime="20201117 14:47:27.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.971" endtime="20201117 14:47:27.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.974" endtime="20201117 14:47:27.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.945" endtime="20201117 14:47:27.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.943" endtime="20201117 14:47:27.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.984" endtime="20201117 14:47:28.270"></status>
</kw>
<msg timestamp="20201117 14:47:28.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025535792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025636, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:27.982" endtime="20201117 14:47:28.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025535792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025636, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:28.274" endtime="20201117 14:47:28.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.282" endtime="20201117 14:47:28.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.979" endtime="20201117 14:47:28.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.977" endtime="20201117 14:47:28.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.289" level="INFO">${RESULT} = [{'time': 0.025636, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010020799999999747, 'source_diff': 0.00010020799999999747}, {'time': 0.025752042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:28.286" endtime="20201117 14:47:28.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.304" level="INFO">${ACCURACY} = {'time': [0.025636, 0.025752042, 0.025869042, 0.025990042, 0.026114069, 0.026237069, 0.026355097, 0.026473097, 0.026593111, 0.026709125, 0.026829139, 0.026949153, 0.027068167, 0.027183194, 0.027298222...</msg>
<status status="PASS" starttime="20201117 14:47:28.290" endtime="20201117 14:47:28.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.309" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.308" endtime="20201117 14:47:28.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.312" level="INFO">VALUE: [0.00010020799999999747, 9.994500000000059e-05, 9.98609999999997e-05, 9.943100000000052e-05, 0.00010033300000000106, 9.974999999999914e-05, 9.961099999999945e-05, 9.991600000000198e-05, 0.00010034700000000063, 9.993100000000102e-05, 9.984699999999666e-05, 9.940300000000138e-05, 9.968100000000077e-05, 0.00010034700000000063, 9.962499999999902e-05, 9.977799999999828e-05, 9.976400000000218e-05, 9.976400000000218e-05, 9.958300000000031e-05, 0.00010008300000000081, 9.945899999999966e-05, 9.982000000000046e-05, 9.962500000000249e-05, 0.00010026299999999974, 9.959699999999988e-05, 9.965300000000163e-05, 9.969400000000087e-05, 9.943100000000052e-05, 9.983300000000056e-05, 9.941700000000095e-05, 9.951399999999846e-05, 9.94999999999989e-05, 9.988899999999884e-05, 0.00010008300000000081, 9.977800000000175e-05, 9.993100000000102e-05, 9.966699999999773e-05, 9.987499999999927e-05, 9.98609999999997e-05, 9.998599999999983e-05, 0.00010025000000000311, 9.958399999999978e-05, 9.954099999999813e-05, 9.958300000000031e-05, 9.974999999999914e-05, 9.940300000000138e-05, 9.981900000000099e-05, 9.941700000000095e-05, 9.986199999999917e-05, 0.00010008400000000028]</msg>
<status status="PASS" starttime="20201117 14:47:28.310" endtime="20201117 14:47:28.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.305" endtime="20201117 14:47:28.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.315" endtime="20201117 14:47:28.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.318" endtime="20201117 14:47:28.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.317" endtime="20201117 14:47:28.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.313" endtime="20201117 14:47:28.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.941" endtime="20201117 14:47:28.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.939" endtime="20201117 14:47:28.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.939" endtime="20201117 14:47:28.340"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.342" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.350" endtime="20201117 14:47:28.371"></status>
</kw>
<msg timestamp="20201117 14:47:28.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.349" endtime="20201117 14:47:28.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.372" endtime="20201117 14:47:28.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.375" endtime="20201117 14:47:28.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.346" endtime="20201117 14:47:28.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.344" endtime="20201117 14:47:28.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.385" endtime="20201117 14:47:28.671"></status>
</kw>
<msg timestamp="20201117 14:47:28.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024643097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024744319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.383" endtime="20201117 14:47:28.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024643097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024744319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.675" endtime="20201117 14:47:28.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.683" endtime="20201117 14:47:28.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.381" endtime="20201117 14:47:28.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.379" endtime="20201117 14:47:28.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.690" level="INFO">${RESULT} = [{'time': 0.024744319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001012220000000015, 'source_diff': 0.0001012220000000015}, {'time': 0.024859361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:28.687" endtime="20201117 14:47:28.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.703" level="INFO">${ACCURACY} = {'time': [0.024744319, 0.024859361, 0.024977403, 0.025097361, 0.025219375, 0.025342389, 0.025462403, 0.025586417, 0.025701486, 0.025816444, 0.025932458, 0.026056472, 0.026179486, 0.026302528, 0.026417...</msg>
<status status="PASS" starttime="20201117 14:47:28.691" endtime="20201117 14:47:28.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.708" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.707" endtime="20201117 14:47:28.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.711" level="INFO">VALUE: [0.0001012220000000015, 0.00010045800000000119, 0.00010106999999999824, 0.00010091699999999898, 0.0001006809999999983, 0.00010063899999999959, 0.00010068100000000177, 0.0001011809999999988, 0.00010056899999999827, 0.00010041600000000248, 0.00010101399999999996, 0.00010076399999999971, 0.00010056899999999827, 0.00010062500000000002, 0.00010076399999999971, 0.00010051399999999946, 0.00010126400000000021, 0.00010043099999999805, 0.00010134700000000163, 0.00010108299999999834, 0.00010090299999999941, 0.00010137500000000077, 0.00010122199999999804, 0.00010093099999999855, 0.00010111099999999748, 0.00010119500000000184, 0.00010101300000000049, 0.00010051299999999999, 0.00010108299999999834, 0.00010075000000000014, 0.00010126400000000021, 0.00010130599999999892, 0.00010084700000000113, 0.00010056999999999774, 0.00010129099999999988, 0.00010107000000000171, 0.00010094399999999865, 0.00010102799999999953, 0.00010124999999999718, 0.00010112500000000052, 0.00010091699999999898, 0.00010134700000000163, 0.00010057000000000121, 0.00010041700000000195, 0.00010133399999999806, 0.00010091699999999898, 0.00010081899999999852, 0.00010061100000000045, 0.00010112500000000052, 0.00010093100000000202]</msg>
<status status="PASS" starttime="20201117 14:47:28.709" endtime="20201117 14:47:28.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.704" endtime="20201117 14:47:28.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.714" endtime="20201117 14:47:28.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.717" endtime="20201117 14:47:28.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.716" endtime="20201117 14:47:28.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.712" endtime="20201117 14:47:28.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.343" endtime="20201117 14:47:28.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.341" endtime="20201117 14:47:28.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.340" endtime="20201117 14:47:28.739"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.741" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.750" endtime="20201117 14:47:28.771"></status>
</kw>
<msg timestamp="20201117 14:47:28.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.749" endtime="20201117 14:47:28.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.772" endtime="20201117 14:47:28.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.775" endtime="20201117 14:47:28.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.745" endtime="20201117 14:47:28.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.743" endtime="20201117 14:47:28.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.784" endtime="20201117 14:47:29.071"></status>
</kw>
<msg timestamp="20201117 14:47:29.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025384153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025486278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.783" endtime="20201117 14:47:29.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025384153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025486278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.075" endtime="20201117 14:47:29.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.084" endtime="20201117 14:47:29.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.780" endtime="20201117 14:47:29.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.778" endtime="20201117 14:47:29.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.091" level="INFO">${RESULT} = [{'time': 0.025486278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010212500000000152, 'source_diff': 0.00010212500000000152}, {'time': 0.025605347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:29.087" endtime="20201117 14:47:29.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.104" level="INFO">${ACCURACY} = {'time': [0.025486278, 0.025605347, 0.025728292, 0.025844306, 0.025969375, 0.026085347, 0.026208347, 0.026324361, 0.026443375, 0.026561389, 0.026681403, 0.026803431, 0.026919514, 0.027040458, 0.027165...</msg>
<status status="PASS" starttime="20201117 14:47:29.092" endtime="20201117 14:47:29.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.109" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.107" endtime="20201117 14:47:29.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.111" level="INFO">VALUE: [0.00010212500000000152, 0.0001015000000000009, 0.0001016809999999993, 0.0001016809999999993, 0.00010156899999999927, 0.00010138899999999687, 0.00010181899999999952, 0.00010159700000000188, 0.00010193100000000302, 0.00010151400000000046, 0.00010141699999999948, 0.0001023199999999995, 0.0001016809999999993, 0.00010194399999999965, 0.00010184699999999866, 0.00010209699999999891, 0.00010209699999999891, 0.00010175000000000115, 0.00010227800000000078, 0.00010229200000000035, 0.0001020139999999975, 0.00010209800000000185, 0.00010193000000000008, 0.00010151400000000046, 0.00010226399999999775, 0.00010142999999999958, 0.00010151400000000046, 0.00010209700000000238, 0.00010224999999999818, 0.00010158399999999831, 0.00010224999999999818, 0.00010166699999999973, 0.00010158299999999884, 0.000101416, 0.00010177800000000028, 0.00010159699999999841, 0.00010191699999999998, 0.0001020139999999975, 0.00010191699999999998, 0.0001021809999999998, 0.00010199999999999793, 0.0001015000000000009, 0.0001015000000000009, 0.00010159699999999841, 0.00010143099999999905, 0.00010184700000000213, 0.0001013749999999973, 0.00010166699999999973, 0.00010232000000000296, 0.00010212500000000152]</msg>
<status status="PASS" starttime="20201117 14:47:29.110" endtime="20201117 14:47:29.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.105" endtime="20201117 14:47:29.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.114" endtime="20201117 14:47:29.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.118" endtime="20201117 14:47:29.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.116" endtime="20201117 14:47:29.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.113" endtime="20201117 14:47:29.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.742" endtime="20201117 14:47:29.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.740" endtime="20201117 14:47:29.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.739" endtime="20201117 14:47:29.139"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.142" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.150" endtime="20201117 14:47:29.171"></status>
</kw>
<msg timestamp="20201117 14:47:29.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.149" endtime="20201117 14:47:29.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.172" endtime="20201117 14:47:29.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.175" endtime="20201117 14:47:29.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.146" endtime="20201117 14:47:29.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.144" endtime="20201117 14:47:29.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.185" endtime="20201117 14:47:29.471"></status>
</kw>
<msg timestamp="20201117 14:47:29.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025071958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025175319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.183" endtime="20201117 14:47:29.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025071958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025175319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.475" endtime="20201117 14:47:29.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.483" endtime="20201117 14:47:29.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.180" endtime="20201117 14:47:29.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.178" endtime="20201117 14:47:29.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.490" level="INFO">${RESULT} = [{'time': 0.025175319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001033610000000032, 'source_diff': 0.0001033610000000032}, {'time': 0.025297417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:29.487" endtime="20201117 14:47:29.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.503" level="INFO">${ACCURACY} = {'time': [0.025175319, 0.025297417, 0.025415347, 0.025535361, 0.025661375, 0.025779403, 0.025899417, 0.026017417, 0.026140431, 0.026261444, 0.026385472, 0.026511472, 0.026634486, 0.026761514, 0.026879...</msg>
<status status="PASS" starttime="20201117 14:47:29.491" endtime="20201117 14:47:29.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.508" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.507" endtime="20201117 14:47:29.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.511" level="INFO">VALUE: [0.0001033610000000032, 0.00010333400000000006, 0.0001029160000000015, 0.00010299999999999893, 0.00010241700000000048, 0.00010334700000000016, 0.00010241700000000048, 0.00010263900000000159, 0.00010315299999999819, 0.00010249999999999843, 0.00010243000000000058, 0.00010281900000000052, 0.00010274999999999868, 0.00010276400000000172, 0.00010308300000000034, 0.00010270900000000291, 0.00010312500000000252, 0.0001029160000000015, 0.00010288900000000184, 0.000102416000000001, 0.00010334700000000016, 0.00010256900000000027, 0.00010258299999999984, 0.00010291699999999751, 0.00010333400000000006, 0.00010308399999999981, 0.00010293000000000108, 0.0001032359999999996, 0.00010287500000000227, 0.00010311099999999948, 0.00010255600000000017, 0.00010324999999999918, 0.00010326400000000222, 0.00010329100000000188, 0.00010241700000000048, 0.00010252700000000156, 0.00010275000000000215, 0.0001029299999999976, 0.0001026940000000004, 0.00010247200000000276, 0.00010309699999999991, 0.00010259699999999941, 0.00010261199999999845, 0.00010291700000000098, 0.00010288899999999837, 0.0001026810000000003, 0.00010243000000000058, 0.00010261100000000245, 0.00010320800000000047, 0.0001025420000000006]</msg>
<status status="PASS" starttime="20201117 14:47:29.509" endtime="20201117 14:47:29.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.504" endtime="20201117 14:47:29.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.514" endtime="20201117 14:47:29.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.518" endtime="20201117 14:47:29.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.516" endtime="20201117 14:47:29.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.513" endtime="20201117 14:47:29.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.143" endtime="20201117 14:47:29.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.141" endtime="20201117 14:47:29.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.140" endtime="20201117 14:47:29.539"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.542" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.550" endtime="20201117 14:47:29.571"></status>
</kw>
<msg timestamp="20201117 14:47:29.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.549" endtime="20201117 14:47:29.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.573" endtime="20201117 14:47:29.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.575" endtime="20201117 14:47:29.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.546" endtime="20201117 14:47:29.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.544" endtime="20201117 14:47:29.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.585" endtime="20201117 14:47:29.871"></status>
</kw>
<msg timestamp="20201117 14:47:29.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025770014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025874417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.583" endtime="20201117 14:47:29.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025770014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025874417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.876" endtime="20201117 14:47:29.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.884" endtime="20201117 14:47:29.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.580" endtime="20201117 14:47:29.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.579" endtime="20201117 14:47:29.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.892" level="INFO">${RESULT} = [{'time': 0.025874417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010440299999999944, 'source_diff': 0.00010440299999999944}, {'time': 0.025996417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:29.888" endtime="20201117 14:47:29.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.907" level="INFO">${ACCURACY} = {'time': [0.025874417, 0.025996417, 0.026114458, 0.026234458, 0.026355472, 0.026478486, 0.026600528, 0.0267275, 0.026851569, 0.026977542, 0.027102556, 0.027223556, 0.027341583, 0.027469583, 0.02759261...</msg>
<status status="PASS" starttime="20201117 14:47:29.893" endtime="20201117 14:47:29.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.911" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.910" endtime="20201117 14:47:29.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.914" level="INFO">VALUE: [0.00010440299999999944, 0.00010393100000000155, 0.0001038749999999998, 0.00010376399999999925, 0.00010427800000000279, 0.00010377799999999882, 0.00010363899999999912, 0.00010393100000000155, 0.00010390199999999947, 0.00010344500000000062, 0.0001036810000000013, 0.00010384800000000013, 0.00010394399999999818, 0.00010433299999999812, 0.00010405499999999873, 0.00010426399999999975, 0.00010359700000000041, 0.00010357000000000074, 0.00010375000000000315, 0.00010383299999999762, 0.00010379099999999891, 0.00010408300000000134, 0.0001037360000000001, 0.00010392999999999861, 0.00010363900000000259, 0.00010418099999999833, 0.0001041810000000018, 0.00010418099999999833, 0.00010348599999999986, 0.00010408400000000081, 0.000103416000000002, 0.000103513999999999, 0.00010390300000000241, 0.00010399999999999993, 0.00010343099999999758, 0.00010398600000000036, 0.00010393099999999808, 0.00010404099999999916, 0.00010357000000000074, 0.00010376399999999925, 0.00010343000000000158, 0.00010383300000000109, 0.00010409700000000091, 0.00010372200000000054, 0.00010425000000000018, 0.0001042360000000006, 0.00010408400000000428, 0.00010343000000000158, 0.00010434699999999769, 0.00010358299999999737]</msg>
<status status="PASS" starttime="20201117 14:47:29.912" endtime="20201117 14:47:29.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.908" endtime="20201117 14:47:29.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.918" endtime="20201117 14:47:29.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.921" endtime="20201117 14:47:29.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.920" endtime="20201117 14:47:29.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.916" endtime="20201117 14:47:29.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.542" endtime="20201117 14:47:29.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.540" endtime="20201117 14:47:29.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.540" endtime="20201117 14:47:29.942"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.945" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.953" endtime="20201117 14:47:29.974"></status>
</kw>
<msg timestamp="20201117 14:47:29.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.952" endtime="20201117 14:47:29.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.975" endtime="20201117 14:47:29.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.978" endtime="20201117 14:47:29.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.949" endtime="20201117 14:47:29.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.947" endtime="20201117 14:47:29.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.987" endtime="20201117 14:47:30.273"></status>
</kw>
<msg timestamp="20201117 14:47:30.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024597542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024702903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.986" endtime="20201117 14:47:30.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024597542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024702903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.277" endtime="20201117 14:47:30.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.286" endtime="20201117 14:47:30.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.983" endtime="20201117 14:47:30.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.981" endtime="20201117 14:47:30.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.292" level="INFO">${RESULT} = [{'time': 0.024702903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010536099999999826, 'source_diff': 0.00010536099999999826}, {'time': 0.024827944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:30.289" endtime="20201117 14:47:30.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.311" level="INFO">${ACCURACY} = {'time': [0.024702903, 0.024827944, 0.024953958, 0.025077986, 0.025205972, 0.025331986, 0.025459, 0.025578028, 0.025701042, 0.025823042, 0.025944056, 0.026072083, 0.026194083, 0.026321097, 0.026445111...</msg>
<status status="PASS" starttime="20201117 14:47:30.298" endtime="20201117 14:47:30.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.315" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.314" endtime="20201117 14:47:30.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.318" level="INFO">VALUE: [0.00010536099999999826, 0.00010511100000000148, 0.00010442999999999911, 0.0001047079999999985, 0.00010513900000000062, 0.00010466699999999926, 0.00010518099999999933, 0.00010522199999999857, 0.00010477799999999982, 0.00010508400000000181, 0.00010476400000000025, 0.00010508299999999887, 0.00010441599999999954, 0.00010483300000000209, 0.00010509700000000191, 0.00010491699999999951, 0.00010502800000000007, 0.00010459700000000141, 0.00010530499999999998, 0.00010476400000000025, 0.00010476300000000077, 0.00010436100000000073, 0.00010467999999999936, 0.00010450000000000043, 0.00010443100000000205, 0.00010486100000000123, 0.00010511099999999801, 0.00010523699999999761, 0.00010477700000000034, 0.00010525000000000118, 0.00010491600000000004, 0.000104514, 0.00010472200000000154, 0.00010459699999999794, 0.00010508300000000234, 0.00010483299999999862, 0.00010491699999999951, 0.00010458399999999785, 0.00010483299999999862, 0.0001050689999999993, 0.0001053200000000025, 0.00010509700000000191, 0.0001047499999999972, 0.00010526400000000075, 0.00010523700000000108, 0.00010443099999999858, 0.00010467999999999936, 0.00010466599999999979, 0.00010488900000000037, 0.00010527800000000032]</msg>
<status status="PASS" starttime="20201117 14:47:30.316" endtime="20201117 14:47:30.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.312" endtime="20201117 14:47:30.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.321" endtime="20201117 14:47:30.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.325" endtime="20201117 14:47:30.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.323" endtime="20201117 14:47:30.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.319" endtime="20201117 14:47:30.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.945" endtime="20201117 14:47:30.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.944" endtime="20201117 14:47:30.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.943" endtime="20201117 14:47:30.346"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.348" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.356" endtime="20201117 14:47:30.377"></status>
</kw>
<msg timestamp="20201117 14:47:30.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.355" endtime="20201117 14:47:30.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.379" endtime="20201117 14:47:30.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.381" endtime="20201117 14:47:30.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.352" endtime="20201117 14:47:30.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.350" endtime="20201117 14:47:30.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.391" endtime="20201117 14:47:30.676"></status>
</kw>
<msg timestamp="20201117 14:47:30.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024715486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024821875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.389" endtime="20201117 14:47:30.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024715486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024821875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.680" endtime="20201117 14:47:30.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.689" endtime="20201117 14:47:30.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.386" endtime="20201117 14:47:30.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.384" endtime="20201117 14:47:30.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.696" level="INFO">${RESULT} = [{'time': 0.024821875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010638900000000187, 'source_diff': 0.00010638900000000187}, {'time': 0.024950889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:30.692" endtime="20201117 14:47:30.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.709" level="INFO">${ACCURACY} = {'time': [0.024821875, 0.024950889, 0.025074944, 0.025197917, 0.025318931, 0.025439958, 0.025568014, 0.025688986, 0.025815014, 0.025941, 0.026062014, 0.026190028, 0.026311056, 0.026440056, 0.026566083...</msg>
<status status="PASS" starttime="20201117 14:47:30.697" endtime="20201117 14:47:30.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.714" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.713" endtime="20201117 14:47:30.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.716" level="INFO">VALUE: [0.00010638900000000187, 0.00010623599999999914, 0.00010559699999999894, 0.00010559800000000188, 0.0001057499999999982, 0.00010611099999999901, 0.00010632000000000003, 0.00010611099999999901, 0.00010595799999999975, 0.00010599999999999846, 0.00010591700000000051, 0.00010547200000000229, 0.00010611199999999849, 0.00010608399999999935, 0.00010543000000000011, 0.00010581900000000005, 0.00010534699999999869, 0.00010634699999999969, 0.0001057499999999982, 0.00010609799999999892, 0.00010576400000000125, 0.00010577699999999787, 0.00010625000000000218, 0.00010626399999999828, 0.00010593000000000061, 0.00010619400000000043, 0.00010602800000000107, 0.00010622199999999957, 0.00010626399999999828, 0.0001058750000000018, 0.00010547199999999882, 0.00010608299999999987, 0.00010559700000000241, 0.00010625000000000218, 0.00010611099999999901, 0.0001057499999999982, 0.00010627800000000132, 0.00010545899999999872, 0.00010551399999999753, 0.0001062629999999988, 0.00010576300000000177, 0.00010609699999999944, 0.00010626399999999828, 0.000105514000000001, 0.00010591700000000051, 0.00010550000000000143, 0.0001062499999999987, 0.00010607000000000325, 0.00010541700000000001, 0.000105514000000001]</msg>
<status status="PASS" starttime="20201117 14:47:30.715" endtime="20201117 14:47:30.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.710" endtime="20201117 14:47:30.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.720" endtime="20201117 14:47:30.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.723" endtime="20201117 14:47:30.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.722" endtime="20201117 14:47:30.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.718" endtime="20201117 14:47:30.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.349" endtime="20201117 14:47:30.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.347" endtime="20201117 14:47:30.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.346" endtime="20201117 14:47:30.744"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.747" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.755" endtime="20201117 14:47:30.775"></status>
</kw>
<msg timestamp="20201117 14:47:30.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.754" endtime="20201117 14:47:30.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.777" endtime="20201117 14:47:30.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.780" endtime="20201117 14:47:30.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.751" endtime="20201117 14:47:30.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.749" endtime="20201117 14:47:30.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.790" endtime="20201117 14:47:31.076"></status>
</kw>
<msg timestamp="20201117 14:47:31.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024600875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.788" endtime="20201117 14:47:31.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024600875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.081" endtime="20201117 14:47:31.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.089" endtime="20201117 14:47:31.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.785" endtime="20201117 14:47:31.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.783" endtime="20201117 14:47:31.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.096" level="INFO">${RESULT} = [{'time': 0.024600875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001067080000000005, 'source_diff': 0.0001067080000000005}, {'time': 0.024725889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:31.092" endtime="20201117 14:47:31.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.109" level="INFO">${ACCURACY} = {'time': [0.024600875, 0.024725889, 0.024856903, 0.024982917, 0.02511, 0.025239944, 0.025360972, 0.025483, 0.025611986, 0.025741, 0.025865028, 0.025995028, 0.026123111, 0.026245069, 0.026368111, 0.026...</msg>
<status status="PASS" starttime="20201117 14:47:31.097" endtime="20201117 14:47:31.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.114" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.113" endtime="20201117 14:47:31.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.116" level="INFO">VALUE: [0.0001067080000000005, 0.00010708300000000087, 0.00010686099999999976, 0.0001073340000000006, 0.00010666700000000126, 0.00010641600000000154, 0.00010701399999999903, 0.00010727799999999885, 0.0001065690000000008, 0.00010691700000000151, 0.0001070140000000025, 0.0001071950000000009, 0.00010731900000000155, 0.00010709700000000044, 0.00010729199999999842, 0.0001072499999999997, 0.00010708300000000087, 0.00010709699999999697, 0.00010658300000000037, 0.00010708400000000035, 0.00010676400000000225, 0.00010709700000000044, 0.00010691599999999857, 0.00010734700000000069, 0.00010722200000000057, 0.00010677800000000182, 0.00010643099999999711, 0.00010652800000000157, 0.00010649999999999896, 0.00010699999999999946, 0.00010677700000000234, 0.00010688900000000237, 0.00010733300000000112, 0.00010690299999999847, 0.00010683300000000062, 0.0001067499999999992, 0.00010658300000000037, 0.00010709799999999992, 0.00010673599999999964, 0.00010694399999999771, 0.00010645800000000025, 0.00010661099999999951, 0.00010692999999999814, 0.00010679200000000139, 0.00010643100000000058, 0.00010662499999999908, 0.0001065279999999981, 0.00010641699999999754, 0.00010659699999999994, 0.00010719400000000143]</msg>
<status status="PASS" starttime="20201117 14:47:31.115" endtime="20201117 14:47:31.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.110" endtime="20201117 14:47:31.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.120" endtime="20201117 14:47:31.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.123" endtime="20201117 14:47:31.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.122" endtime="20201117 14:47:31.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.118" endtime="20201117 14:47:31.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.747" endtime="20201117 14:47:31.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.745" endtime="20201117 14:47:31.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.745" endtime="20201117 14:47:31.144"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.147" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.155" endtime="20201117 14:47:31.177"></status>
</kw>
<msg timestamp="20201117 14:47:31.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.154" endtime="20201117 14:47:31.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.178" endtime="20201117 14:47:31.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.181" endtime="20201117 14:47:31.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.151" endtime="20201117 14:47:31.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.149" endtime="20201117 14:47:31.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.191" endtime="20201117 14:47:31.477"></status>
</kw>
<msg timestamp="20201117 14:47:31.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025438944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025547167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.189" endtime="20201117 14:47:31.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025438944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025547167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.481" endtime="20201117 14:47:31.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.490" endtime="20201117 14:47:31.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.187" endtime="20201117 14:47:31.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.185" endtime="20201117 14:47:31.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.497" level="INFO">${RESULT} = [{'time': 0.025547167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010822299999999757, 'source_diff': 0.00010822299999999757}, {'time': 0.025676167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:31.493" endtime="20201117 14:47:31.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.511" level="INFO">${ACCURACY} = {'time': [0.025547167, 0.025676167, 0.025804194, 0.025926208, 0.026053222, 0.026176222, 0.026300236, 0.026428264, 0.026557264, 0.026680278, 0.026802347, 0.026927319, 0.027055319, 0.027178361, 0.027301...</msg>
<status status="PASS" starttime="20201117 14:47:31.498" endtime="20201117 14:47:31.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.516" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.515" endtime="20201117 14:47:31.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.518" level="INFO">VALUE: [0.00010822299999999757, 0.0001077500000000002, 0.00010744399999999821, 0.00010819399999999896, 0.0001082500000000007, 0.00010776399999999978, 0.00010826400000000028, 0.00010761100000000051, 0.00010776399999999978, 0.00010791700000000251, 0.00010805499999999926, 0.00010819400000000243, 0.00010808300000000187, 0.00010794400000000218, 0.00010801400000000003, 0.00010793100000000208, 0.00010818100000000233, 0.00010834699999999822, 0.00010780499999999901, 0.00010808399999999788, 0.00010742999999999864, 0.00010798599999999742, 0.00010744399999999821, 0.00010829199999999942, 0.0001077500000000002, 0.00010744499999999768, 0.00010836100000000126, 0.00010797199999999785, 0.00010818099999999886, 0.00010749999999999996, 0.00010758300000000137, 0.00010758300000000137, 0.00010784699999999772, 0.00010763899999999965, 0.00010766699999999879, 0.00010786199999999677, 0.00010776399999999978, 0.00010776299999999683, 0.00010759700000000094, 0.00010797200000000132, 0.00010784699999999772, 0.00010824999999999724, 0.00010827799999999985, 0.00010809700000000144, 0.00010776400000000325, 0.00010805500000000273, 0.00010809700000000144, 0.00010777799999999588, 0.00010792999999999914, 0.0001080140000000035]</msg>
<status status="PASS" starttime="20201117 14:47:31.517" endtime="20201117 14:47:31.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.512" endtime="20201117 14:47:31.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.522" endtime="20201117 14:47:31.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.525" endtime="20201117 14:47:31.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.524" endtime="20201117 14:47:31.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.520" endtime="20201117 14:47:31.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.147" endtime="20201117 14:47:31.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.146" endtime="20201117 14:47:31.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.145" endtime="20201117 14:47:31.546"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.549" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.558" endtime="20201117 14:47:31.578"></status>
</kw>
<msg timestamp="20201117 14:47:31.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.556" endtime="20201117 14:47:31.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.580" endtime="20201117 14:47:31.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.582" endtime="20201117 14:47:31.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.554" endtime="20201117 14:47:31.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.551" endtime="20201117 14:47:31.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.592" endtime="20201117 14:47:31.878"></status>
</kw>
<msg timestamp="20201117 14:47:31.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025244681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025353583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.590" endtime="20201117 14:47:31.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025244681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025353583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.882" endtime="20201117 14:47:31.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.891" endtime="20201117 14:47:31.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.588" endtime="20201117 14:47:31.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.586" endtime="20201117 14:47:31.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.898" level="INFO">${RESULT} = [{'time': 0.025353583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010890199999999753, 'source_diff': 0.00010890199999999753}, {'time': 0.025476611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:31.894" endtime="20201117 14:47:31.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.911" level="INFO">${ACCURACY} = {'time': [0.025353583, 0.025476611, 0.025607625, 0.025739611, 0.025868625, 0.025993639, 0.026121653, 0.026244681, 0.02636975, 0.026497694, 0.026624722, 0.026753722, 0.02688675, 0.027014764, 0.02714677...</msg>
<status status="PASS" starttime="20201117 14:47:31.899" endtime="20201117 14:47:31.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.916" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.915" endtime="20201117 14:47:31.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.919" level="INFO">VALUE: [0.00010890199999999753, 0.00010924999999999824, 0.00010937499999999836, 0.00010876400000000078, 0.0001085829999999989, 0.00010891700000000004, 0.00010934700000000269, 0.00010911199999999802, 0.00010931900000000008, 0.0001085829999999989, 0.00010911099999999854, 0.00010909699999999897, 0.00010926400000000128, 0.00010893099999999961, 0.00010850000000000096, 0.00010843100000000258, 0.00010931999999999956, 0.00010842999999999964, 0.00010933299999999965, 0.00010844400000000268, 0.00010883299999999915, 0.00010850000000000096, 0.00010934699999999922, 0.0001088890000000009, 0.00010887499999999786, 0.00010844400000000268, 0.00010884700000000219, 0.00010858300000000237, 0.00010850000000000096, 0.00010869499999999893, 0.00010898600000000189, 0.00010897199999999885, 0.00010918000000000039, 0.00010911200000000149, 0.00010868000000000336, 0.00010916600000000082, 0.00010918000000000039, 0.00010918000000000039, 0.00010900000000000146, 0.00010844499999999868, 0.00010926400000000128, 0.00010924999999999824, 0.00010842999999999964, 0.00010933299999999965, 0.0001090829999999994, 0.00010925000000000171, 0.00010876400000000078, 0.00010891700000000004, 0.00010930599999999652, 0.00010869500000000587]</msg>
<status status="PASS" starttime="20201117 14:47:31.917" endtime="20201117 14:47:31.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.912" endtime="20201117 14:47:31.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.923" endtime="20201117 14:47:31.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.927" endtime="20201117 14:47:31.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.925" endtime="20201117 14:47:31.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.921" endtime="20201117 14:47:31.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.550" endtime="20201117 14:47:31.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.548" endtime="20201117 14:47:31.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.547" endtime="20201117 14:47:31.948"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.950" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.959" endtime="20201117 14:47:31.979"></status>
</kw>
<msg timestamp="20201117 14:47:31.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.957" endtime="20201117 14:47:31.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.981" endtime="20201117 14:47:31.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.984" endtime="20201117 14:47:31.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.955" endtime="20201117 14:47:31.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.953" endtime="20201117 14:47:31.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.993" endtime="20201117 14:47:32.280"></status>
</kw>
<msg timestamp="20201117 14:47:32.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024737292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024847167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.992" endtime="20201117 14:47:32.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024737292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024847167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.284" endtime="20201117 14:47:32.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.292" endtime="20201117 14:47:32.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.989" endtime="20201117 14:47:32.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.987" endtime="20201117 14:47:32.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.299" level="INFO">${RESULT} = [{'time': 0.024847167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010987499999999886, 'source_diff': 0.00010987499999999886}, {'time': 0.024979181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:32.296" endtime="20201117 14:47:32.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.313" level="INFO">${ACCURACY} = {'time': [0.024847167, 0.024979181, 0.025107208, 0.025234236, 0.02536125, 0.02548525, 0.025615264, 0.025743278, 0.025867292, 0.025997306, 0.026124319, 0.026252333, 0.026381347, 0.026508361, 0.02663438...</msg>
<status status="PASS" starttime="20201117 14:47:32.300" endtime="20201117 14:47:32.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.317" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.316" endtime="20201117 14:47:32.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.320" level="INFO">VALUE: [0.00010987499999999886, 0.00011024999999999924, 0.00010976399999999831, 0.00010988899999999843, 0.00011036099999999979, 0.00010991700000000104, 0.00011016699999999782, 0.00011034700000000022, 0.00010958399999999938, 0.00011009800000000292, 0.00010959699999999947, 0.0001100830000000004, 0.00011023599999999967, 0.00010943000000000064, 0.00011032000000000056, 0.00011008399999999988, 0.0001102220000000001, 0.00010943100000000011, 0.00010999999999999899, 0.00010976399999999831, 0.00010942999999999717, 0.00010968100000000036, 0.00010984699999999972, 0.00011026400000000228, 0.00011008399999999988, 0.00010955600000000024, 0.00010943100000000011, 0.00010967999999999742, 0.00011001399999999856, 0.000109902999999998, 0.00011033300000000065, 0.00011023599999999967, 0.00010943100000000011, 0.00010951400000000153, 0.00010958399999999938, 0.0001097630000000023, 0.0001095829999999999, 0.00010991700000000104, 0.00011019399999999749, 0.00010984699999999972, 0.00011011099999999954, 0.00011009699999999997, 0.00010976399999999831, 0.0001100830000000004, 0.00011004099999999822, 0.000109902999999998, 0.00010951399999999806, 0.00010993100000000061, 0.0001099159999999981, 0.00010943100000000011]</msg>
<status status="PASS" starttime="20201117 14:47:32.318" endtime="20201117 14:47:32.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.313" endtime="20201117 14:47:32.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.324" endtime="20201117 14:47:32.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.327" endtime="20201117 14:47:32.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.325" endtime="20201117 14:47:32.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.322" endtime="20201117 14:47:32.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.951" endtime="20201117 14:47:32.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.949" endtime="20201117 14:47:32.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.948" endtime="20201117 14:47:32.348"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.351" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.359" endtime="20201117 14:47:32.380"></status>
</kw>
<msg timestamp="20201117 14:47:32.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.357" endtime="20201117 14:47:32.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.381" endtime="20201117 14:47:32.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.384" endtime="20201117 14:47:32.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.355" endtime="20201117 14:47:32.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.353" endtime="20201117 14:47:32.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.393" endtime="20201117 14:47:32.681"></status>
</kw>
<msg timestamp="20201117 14:47:32.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024682986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024793847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.392" endtime="20201117 14:47:32.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024682986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024793847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.685" endtime="20201117 14:47:32.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.693" endtime="20201117 14:47:32.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.389" endtime="20201117 14:47:32.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.387" endtime="20201117 14:47:32.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.700" level="INFO">${RESULT} = [{'time': 0.024793847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011086100000000029, 'source_diff': 0.00011086100000000029}, {'time': 0.024927875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:32.697" endtime="20201117 14:47:32.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.713" level="INFO">${ACCURACY} = {'time': [0.024793847, 0.024927875, 0.025059903, 0.025185903, 0.025310931, 0.025445931, 0.025578944, 0.025708958, 0.025838042, 0.025969986, 0.026100042, 0.026235056, 0.026368028, 0.026499056, 0.026634...</msg>
<status status="PASS" starttime="20201117 14:47:32.701" endtime="20201117 14:47:32.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.718" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.717" endtime="20201117 14:47:32.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.721" level="INFO">VALUE: [0.00011086100000000029, 0.0001110969999999975, 0.00011127800000000285, 0.00011043099999999764, 0.00011063899999999918, 0.00011118100000000186, 0.00011117999999999892, 0.00011084700000000072, 0.00011083399999999716, 0.00011126399999999981, 0.00011047299999999982, 0.00011086199999999977, 0.00011037500000000283, 0.00011049999999999949, 0.00011095800000000128, 0.00011073600000000017, 0.00011118000000000239, 0.00011074999999999974, 0.00011101399999999956, 0.00011109700000000097, 0.00011044500000000068, 0.00011116700000000229, 0.00011097300000000032, 0.00011126399999999981, 0.00011120799999999806, 0.00011044500000000068, 0.00011084700000000072, 0.0001110830000000014, 0.00011059799999999995, 0.00011076399999999931, 0.00011076399999999931, 0.0001112220000000011, 0.00011134700000000122, 0.00011059700000000047, 0.00011040300000000197, 0.00011098600000000042, 0.00011093099999999814, 0.0001108480000000002, 0.00011126399999999981, 0.00011094400000000171, 0.00011134699999999775, 0.00011044399999999774, 0.0001105830000000009, 0.00011041699999999807, 0.00011051399999999906, 0.00011127799999999938, 0.00011094500000000118, 0.00011098699999999989, 0.00011111100000000054, 0.0001110969999999975]</msg>
<status status="PASS" starttime="20201117 14:47:32.719" endtime="20201117 14:47:32.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.714" endtime="20201117 14:47:32.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.724" endtime="20201117 14:47:32.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.728" endtime="20201117 14:47:32.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.726" endtime="20201117 14:47:32.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.723" endtime="20201117 14:47:32.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.351" endtime="20201117 14:47:32.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.349" endtime="20201117 14:47:32.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.349" endtime="20201117 14:47:32.749"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.752" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.760" endtime="20201117 14:47:32.781"></status>
</kw>
<msg timestamp="20201117 14:47:32.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.759" endtime="20201117 14:47:32.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.783" endtime="20201117 14:47:32.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.786" endtime="20201117 14:47:32.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.756" endtime="20201117 14:47:32.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.754" endtime="20201117 14:47:32.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.795" endtime="20201117 14:47:33.082"></status>
</kw>
<msg timestamp="20201117 14:47:33.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025831639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025943847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.794" endtime="20201117 14:47:33.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025831639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025943847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.086" endtime="20201117 14:47:33.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.094" endtime="20201117 14:47:33.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.791" endtime="20201117 14:47:33.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.789" endtime="20201117 14:47:33.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.101" level="INFO">${RESULT} = [{'time': 0.025943847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011220799999999906, 'source_diff': 0.00011220799999999906}, {'time': 0.026077861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:33.098" endtime="20201117 14:47:33.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.116" level="INFO">${ACCURACY} = {'time': [0.025943847, 0.026077861, 0.026208889, 0.026335917, 0.026470972, 0.026600931, 0.026731958, 0.026865958, 0.027001986, 0.027137986, 0.027266014, 0.027400028, 0.027532042, 0.027658056, 0.027787...</msg>
<status status="PASS" starttime="20201117 14:47:33.103" endtime="20201117 14:47:33.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.121" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.120" endtime="20201117 14:47:33.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.124" level="INFO">VALUE: [0.00011220799999999906, 0.00011206899999999936, 0.000111596999999998, 0.00011194499999999871, 0.0001122359999999982, 0.0001118480000000012, 0.00011192999999999967, 0.00011217999999999992, 0.00011234699999999875, 0.00011220799999999906, 0.00011169500000000193, 0.00011206999999999884, 0.00011226400000000081, 0.00011143099999999864, 0.00011184700000000172, 0.0001119160000000001, 0.00011201400000000056, 0.0001120830000000024, 0.00011191699999999957, 0.00011202800000000013, 0.00011143100000000211, 0.00011183399999999816, 0.00011142999999999917, 0.00011216600000000035, 0.00011151400000000006, 0.00011209700000000197, 0.00011219399999999949, 0.00011177799999999988, 0.00011181899999999911, 0.00011194500000000218, 0.00011168099999999889, 0.00011233299999999918, 0.0001122220000000021, 0.00011194399999999924, 0.0001124030000000005, 0.00011191699999999957, 0.00011166700000000279, 0.00011202800000000013, 0.00011193099999999914, 0.00011220800000000253, 0.00011201400000000056, 0.00011161100000000451, 0.00011143100000000211, 0.00011231899999999961, 0.0001120969999999985, 0.00011176400000000031, 0.00011219500000000243, 0.00011223700000000114, 0.00011180599999999902, 0.00011199999999999405]</msg>
<status status="PASS" starttime="20201117 14:47:33.122" endtime="20201117 14:47:33.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.117" endtime="20201117 14:47:33.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.127" endtime="20201117 14:47:33.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.131" endtime="20201117 14:47:33.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.129" endtime="20201117 14:47:33.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.125" endtime="20201117 14:47:33.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.752" endtime="20201117 14:47:33.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.751" endtime="20201117 14:47:33.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.750" endtime="20201117 14:47:33.152"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.154" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.163" endtime="20201117 14:47:33.183"></status>
</kw>
<msg timestamp="20201117 14:47:33.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.161" endtime="20201117 14:47:33.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.184" endtime="20201117 14:47:33.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.187" endtime="20201117 14:47:33.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.158" endtime="20201117 14:47:33.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.156" endtime="20201117 14:47:33.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.196" endtime="20201117 14:47:33.482"></status>
</kw>
<msg timestamp="20201117 14:47:33.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024657139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024769597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.195" endtime="20201117 14:47:33.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024657139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024769597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.486" endtime="20201117 14:47:33.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.495" endtime="20201117 14:47:33.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.192" endtime="20201117 14:47:33.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.190" endtime="20201117 14:47:33.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.502" level="INFO">${RESULT} = [{'time': 0.024769597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011245799999999931, 'source_diff': 0.00011245799999999931}, {'time': 0.024906639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:33.498" endtime="20201117 14:47:33.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.515" level="INFO">${ACCURACY} = {'time': [0.024769597, 0.024906639, 0.025038639, 0.025167653, 0.025296667, 0.025424694, 0.025560694, 0.025688708, 0.025822736, 0.025955736, 0.026087778, 0.026214764, 0.026344778, 0.026472806, 0.026599...</msg>
<status status="PASS" starttime="20201117 14:47:33.503" endtime="20201117 14:47:33.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.520" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.519" endtime="20201117 14:47:33.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.523" level="INFO">VALUE: [0.00011245799999999931, 0.00011294499999999971, 0.00011268099999999989, 0.00011266700000000032, 0.00011334799999999923, 0.00011322199999999963, 0.00011241599999999713, 0.00011284700000000272, 0.00011294400000000024, 0.00011268000000000042, 0.0001128749999999984, 0.00011326400000000181, 0.00011330600000000052, 0.00011243100000000311, 0.00011297199999999938, 0.0001129160000000011, 0.00011304199999999723, 0.00011291700000000057, 0.00011302800000000113, 0.00011276399999999784, 0.00011330500000000104, 0.00011311200000000202, 0.00011298600000000242, 0.00011284699999999925, 0.00011259700000000247, 0.00011308299999999993, 0.00011262500000000161, 0.00011244499999999921, 0.00011268099999999989, 0.00011333399999999966, 0.00011333300000000018, 0.0001127909999999975, 0.0001127359999999987, 0.000112903000000001, 0.00011334699999999975, 0.00011327799999999791, 0.00011277799999999741, 0.00011261099999999857, 0.00011308299999999993, 0.00011326399999999834, 0.00011329200000000095, 0.00011326399999999834, 0.00011258299999999943, 0.00011316600000000135, 0.00011265199999999781, 0.00011326399999999834, 0.00011301399999999809, 0.0001129160000000011, 0.00011319400000000049, 0.00011334699999999975]</msg>
<status status="PASS" starttime="20201117 14:47:33.521" endtime="20201117 14:47:33.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.516" endtime="20201117 14:47:33.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.526" endtime="20201117 14:47:33.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.530" endtime="20201117 14:47:33.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.528" endtime="20201117 14:47:33.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.524" endtime="20201117 14:47:33.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.155" endtime="20201117 14:47:33.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.153" endtime="20201117 14:47:33.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.152" endtime="20201117 14:47:33.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.564" endtime="20201117 14:47:33.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.560" endtime="20201117 14:47:33.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.558" endtime="20201117 14:47:33.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.557" endtime="20201117 14:47:33.580"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:53.459" endtime="20201117 14:47:33.581" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.591" endtime="20201117 14:47:33.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.590" endtime="20201117 14:47:33.611"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.626" endtime="20201117 14:47:33.640"></status>
</kw>
<msg timestamp="20201117 14:47:33.641" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.624" endtime="20201117 14:47:33.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.644" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.642" endtime="20201117 14:47:33.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.647" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:47:33.645" endtime="20201117 14:47:33.647"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:33.622" endtime="20201117 14:47:33.648"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:33.619" endtime="20201117 14:47:33.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.617" endtime="20201117 14:47:33.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:47:33.653" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:47:33.652" endtime="20201117 14:47:33.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.650" endtime="20201117 14:47:33.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.616" endtime="20201117 14:47:33.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.615" endtime="20201117 14:47:33.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.654" endtime="20201117 14:47:33.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.614" endtime="20201117 14:47:33.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.612" endtime="20201117 14:47:33.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.588" endtime="20201117 14:47:33.657"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.661" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.670" endtime="20201117 14:47:33.687"></status>
</kw>
<msg timestamp="20201117 14:47:33.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.668" endtime="20201117 14:47:33.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.689" endtime="20201117 14:47:33.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.692" endtime="20201117 14:47:33.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.666" endtime="20201117 14:47:33.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.663" endtime="20201117 14:47:33.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.703" endtime="20201117 14:47:33.991"></status>
</kw>
<msg timestamp="20201117 14:47:33.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071244014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071285611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.701" endtime="20201117 14:47:33.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071244014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071285611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.995" endtime="20201117 14:47:34.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.004" endtime="20201117 14:47:34.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.697" endtime="20201117 14:47:34.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.696" endtime="20201117 14:47:34.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.011" level="INFO">${RESULT} = [{'time': 0.071285611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1597000000004325e-05, 'source_diff': 4.1597000000004325e-05}, {'time': 0.071337611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:34.007" endtime="20201117 14:47:34.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.025" level="INFO">${ACCURACY} = {'time': [0.071285611, 0.071337611, 0.071391625, 0.071439639, 0.071495625, 0.071549639, 0.071599708, 0.071650667, 0.071697667, 0.071746667, 0.071795667, 0.071849681, 0.071902694, 0.071953681, 0.072001...</msg>
<status status="PASS" starttime="20201117 14:47:34.012" endtime="20201117 14:47:34.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.030" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.029" endtime="20201117 14:47:34.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.032" level="INFO">VALUE: [4.1597000000004325e-05, 4.1417000000001924e-05, 4.0818999999997496e-05, 4.1346999999997136e-05, 4.1666999999995236e-05, 4.099999999999937e-05, 4.122199999999354e-05, 4.1361000000003645e-05, 4.151400000000638e-05, 4.1666999999995236e-05, 4.1638999999996096e-05, 4.1486999999992835e-05, 4.099999999999937e-05, 4.083400000000348e-05, 4.1013000000006405e-05, 4.133299999999063e-05, 4.118000000000177e-05, 4.166600000000964e-05, 4.127699999999235e-05, 4.1610999999996956e-05, 4.0833000000004005e-05, 4.1346999999997136e-05, 4.148600000000724e-05, 4.0833000000004005e-05, 4.154199999999164e-05, 4.1194999999993875e-05, 4.0861000000003145e-05, 4.1111000000010334e-05, 4.1041000000005545e-05, 4.099999999999937e-05, 4.1681000000001744e-05, 4.084800000000999e-05, 4.116700000000861e-05, 4.133400000000398e-05, 4.116600000000914e-05, 4.1333000000004505e-05, 4.116600000000914e-05, 4.147200000000073e-05, 4.1347000000011014e-05, 4.166600000000964e-05, 4.166599999999576e-05, 4.099999999999937e-05, 4.083299999999013e-05, 4.099999999999937e-05, 4.1403000000009293e-05, 4.1347000000011014e-05, 4.1333000000004505e-05, 4.136099999998977e-05, 4.149999999999987e-05, 4.130600000000484e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.031" endtime="20201117 14:47:34.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.026" endtime="20201117 14:47:34.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.035" endtime="20201117 14:47:34.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.039" endtime="20201117 14:47:34.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.037" endtime="20201117 14:47:34.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.034" endtime="20201117 14:47:34.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.662" endtime="20201117 14:47:34.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.660" endtime="20201117 14:47:34.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.659" endtime="20201117 14:47:34.060"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.063" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.071" endtime="20201117 14:47:34.087"></status>
</kw>
<msg timestamp="20201117 14:47:34.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.070" endtime="20201117 14:47:34.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.088" endtime="20201117 14:47:34.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.091" endtime="20201117 14:47:34.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.067" endtime="20201117 14:47:34.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.065" endtime="20201117 14:47:34.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.103" endtime="20201117 14:47:34.389"></status>
</kw>
<msg timestamp="20201117 14:47:34.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024924667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024966097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.100" endtime="20201117 14:47:34.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024924667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024966097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.394" endtime="20201117 14:47:34.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.403" endtime="20201117 14:47:34.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.097" endtime="20201117 14:47:34.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.095" endtime="20201117 14:47:34.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.410" level="INFO">${RESULT} = [{'time': 0.024966097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.142999999999855e-05, 'source_diff': 4.142999999999855e-05}, {'time': 0.025017097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:34.406" endtime="20201117 14:47:34.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.423" level="INFO">${ACCURACY} = {'time': [0.024966097, 0.025017097, 0.025072111, 0.025118139, 0.025172111, 0.025218125, 0.025267139, 0.025313167, 0.025361139, 0.025407139, 0.025453153, 0.025499153, 0.025551153, 0.025600167, 0.025647...</msg>
<status status="PASS" starttime="20201117 14:47:34.411" endtime="20201117 14:47:34.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.428" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.427" endtime="20201117 14:47:34.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.430" level="INFO">VALUE: [4.142999999999855e-05, 4.126399999999919e-05, 4.168000000000227e-05, 4.1195000000000814e-05, 4.1167000000001674e-05, 4.1347000000000605e-05, 4.1181000000001244e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1152999999998635e-05, 4.127799999999876e-05, 4.133400000000051e-05, 4.099999999999937e-05, 4.1167000000001674e-05, 4.1666999999998705e-05, 4.169399999999837e-05, 4.1138999999999065e-05, 4.159800000000033e-05, 4.1332999999997566e-05, 4.1361000000000175e-05, 4.104200000000155e-05, 4.144400000000159e-05, 4.0833000000000536e-05, 4.1333000000001036e-05, 4.1333000000001036e-05, 4.170800000000141e-05, 4.155600000000162e-05, 4.151400000000291e-05, 4.127799999999876e-05, 4.14860000000003e-05, 4.1347000000000605e-05, 4.1166999999998205e-05, 4.1167000000001674e-05, 4.133400000000051e-05, 4.1180999999997775e-05, 4.083400000000001e-05, 4.149999999999987e-05, 4.100000000000284e-05, 4.1666999999998705e-05, 4.083400000000001e-05, 4.1332999999997566e-05, 4.099999999999937e-05, 4.099999999999937e-05, 4.1667000000002175e-05, 4.0791000000001826e-05, 4.1318999999997996e-05, 4.1652999999999135e-05, 4.09859999999998e-05, 4.099999999999937e-05, 4.1694999999997845e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.429" endtime="20201117 14:47:34.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.424" endtime="20201117 14:47:34.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.434" endtime="20201117 14:47:34.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.437" endtime="20201117 14:47:34.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.436" endtime="20201117 14:47:34.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.432" endtime="20201117 14:47:34.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.063" endtime="20201117 14:47:34.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.061" endtime="20201117 14:47:34.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.061" endtime="20201117 14:47:34.458"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.461" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.469" endtime="20201117 14:47:34.486"></status>
</kw>
<msg timestamp="20201117 14:47:34.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.468" endtime="20201117 14:47:34.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.488" endtime="20201117 14:47:34.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.490" endtime="20201117 14:47:34.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.465" endtime="20201117 14:47:34.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.463" endtime="20201117 14:47:34.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.501" endtime="20201117 14:47:34.789"></status>
</kw>
<msg timestamp="20201117 14:47:34.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024879597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024920681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.499" endtime="20201117 14:47:34.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024879597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024920681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.793" endtime="20201117 14:47:34.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.801" endtime="20201117 14:47:34.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.496" endtime="20201117 14:47:34.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.494" endtime="20201117 14:47:34.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.808" level="INFO">${RESULT} = [{'time': 0.024920681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.108400000000026e-05, 'source_diff': 4.108400000000026e-05}, {'time': 0.024969736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:34.804" endtime="20201117 14:47:34.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.823" level="INFO">${ACCURACY} = {'time': [0.024920681, 0.024969736, 0.025021764, 0.025072708, 0.025128708, 0.025181708, 0.025237722, 0.025290722, 0.025339736, 0.025395736, 0.025447792, 0.025501764, 0.02555775, 0.025602778, 0.0256587...</msg>
<status status="PASS" starttime="20201117 14:47:34.809" endtime="20201117 14:47:34.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.828" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.826" endtime="20201117 14:47:34.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.830" level="INFO">VALUE: [4.108400000000026e-05, 4.122200000000048e-05, 4.1166999999998205e-05, 4.166599999999923e-05, 4.1333000000001036e-05, 4.1319000000001466e-05, 4.151399999999944e-05, 4.100000000000284e-05, 4.1125000000002965e-05, 4.1318999999997996e-05, 4.1374999999999745e-05, 4.082000000000044e-05, 4.1333000000001036e-05, 4.083400000000001e-05, 4.1333000000001036e-05, 4.1166999999998205e-05, 4.1459000000000634e-05, 4.083400000000001e-05, 4.133399999999704e-05, 4.1667000000002175e-05, 4.134800000000008e-05, 4.149999999999987e-05, 4.149999999999987e-05, 4.149999999999987e-05, 4.151400000000291e-05, 4.0888999999998815e-05, 4.151400000000291e-05, 4.1652999999999135e-05, 4.14860000000003e-05, 4.151399999999944e-05, 4.1374999999999745e-05, 4.1166999999998205e-05, 4.1332999999997566e-05, 4.1346999999997136e-05, 4.130600000000137e-05, 4.099999999999937e-05, 4.1138999999999065e-05, 4.081999999999697e-05, 4.12920000000018e-05, 4.1040999999998606e-05, 4.084799999999958e-05, 4.1166999999998205e-05, 4.1666999999998705e-05, 4.11799999999983e-05, 4.1333000000001036e-05, 4.099999999999937e-05, 4.149999999999987e-05, 4.14860000000003e-05, 4.149999999999987e-05, 4.09859999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.829" endtime="20201117 14:47:34.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.824" endtime="20201117 14:47:34.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.834" endtime="20201117 14:47:34.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.837" endtime="20201117 14:47:34.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.836" endtime="20201117 14:47:34.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.832" endtime="20201117 14:47:34.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.461" endtime="20201117 14:47:34.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.460" endtime="20201117 14:47:34.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.459" endtime="20201117 14:47:34.858"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.861" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.869" endtime="20201117 14:47:34.885"></status>
</kw>
<msg timestamp="20201117 14:47:34.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.867" endtime="20201117 14:47:34.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.887" endtime="20201117 14:47:34.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.889" endtime="20201117 14:47:34.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.865" endtime="20201117 14:47:34.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.863" endtime="20201117 14:47:34.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.898" endtime="20201117 14:47:35.205"></status>
</kw>
<msg timestamp="20201117 14:47:35.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024511292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024552208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.897" endtime="20201117 14:47:35.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024511292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024552208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.210" endtime="20201117 14:47:35.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.218" endtime="20201117 14:47:35.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.894" endtime="20201117 14:47:35.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.893" endtime="20201117 14:47:35.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.225" level="INFO">${RESULT} = [{'time': 0.024552208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.091599999999848e-05, 'source_diff': 4.091599999999848e-05}, {'time': 0.024599208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:35.222" endtime="20201117 14:47:35.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.238" level="INFO">${ACCURACY} = {'time': [0.024552208, 0.024599208, 0.024651222, 0.024699222, 0.024745306, 0.024794278, 0.024842236, 0.02489225, 0.024938264, 0.024984264, 0.025036264, 0.025083264, 0.025133278, 0.025184292, 0.0252363...</msg>
<status status="PASS" starttime="20201117 14:47:35.226" endtime="20201117 14:47:35.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.243" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.242" endtime="20201117 14:47:35.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.246" level="INFO">VALUE: [4.091599999999848e-05, 4.0833000000000536e-05, 4.149999999999987e-05, 4.1652999999999135e-05, 4.155600000000162e-05, 4.102799999999851e-05, 4.099999999999937e-05, 4.1167000000001674e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.0833000000000536e-05, 4.1167000000001674e-05, 4.083400000000001e-05, 4.099999999999937e-05, 4.1681000000001744e-05, 4.16799999999988e-05, 4.1152999999998635e-05, 4.172200000000098e-05, 4.149999999999987e-05, 4.101399999999894e-05, 4.097200000000023e-05, 4.1347000000000605e-05, 4.16799999999988e-05, 4.151399999999944e-05, 4.11660000000022e-05, 4.0833000000000536e-05, 4.1666999999998705e-05, 4.0818999999997496e-05, 4.1347000000000605e-05, 4.1180999999997775e-05, 4.147200000000073e-05, 4.083400000000001e-05, 4.131999999999747e-05, 4.1680999999998275e-05, 4.0889000000002285e-05, 4.0945000000000564e-05, 4.1444999999997595e-05, 4.084799999999958e-05, 4.1472999999996735e-05, 4.0847000000000105e-05, 4.1512999999999967e-05, 4.0874999999999245e-05, 4.09859999999998e-05, 4.099999999999937e-05, 4.09859999999998e-05, 4.077800000000173e-05, 4.149999999999987e-05, 4.151399999999944e-05, 4.1666999999998705e-05, 4.1166999999998205e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.244" endtime="20201117 14:47:35.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.239" endtime="20201117 14:47:35.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.249" endtime="20201117 14:47:35.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.253" endtime="20201117 14:47:35.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.251" endtime="20201117 14:47:35.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.247" endtime="20201117 14:47:35.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.861" endtime="20201117 14:47:35.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.860" endtime="20201117 14:47:35.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.859" endtime="20201117 14:47:35.274"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.277" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.285" endtime="20201117 14:47:35.301"></status>
</kw>
<msg timestamp="20201117 14:47:35.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.284" endtime="20201117 14:47:35.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.303" endtime="20201117 14:47:35.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.305" endtime="20201117 14:47:35.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.281" endtime="20201117 14:47:35.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.279" endtime="20201117 14:47:35.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.315" endtime="20201117 14:47:35.602"></status>
</kw>
<msg timestamp="20201117 14:47:35.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025048583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025089833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.313" endtime="20201117 14:47:35.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025048583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025089833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.606" endtime="20201117 14:47:35.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.615" endtime="20201117 14:47:35.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.311" endtime="20201117 14:47:35.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.309" endtime="20201117 14:47:35.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.622" level="INFO">${RESULT} = [{'time': 0.025089833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.124999999999962e-05, 'source_diff': 4.124999999999962e-05}, {'time': 0.025137819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:35.618" endtime="20201117 14:47:35.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.635" level="INFO">${ACCURACY} = {'time': [0.025089833, 0.025137819, 0.025184847, 0.025238833, 0.025286847, 0.025332847, 0.025385889, 0.025438861, 0.025487861, 0.025539889, 0.025590875, 0.025638889, 0.025689931, 0.025737889, 0.025785...</msg>
<status status="PASS" starttime="20201117 14:47:35.623" endtime="20201117 14:47:35.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.640" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.639" endtime="20201117 14:47:35.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.643" level="INFO">VALUE: [4.124999999999962e-05, 4.1582999999997816e-05, 4.116599999999873e-05, 4.166599999999923e-05, 4.168000000000227e-05, 4.1652999999999135e-05, 4.0874999999999245e-05, 4.149999999999987e-05, 4.0819000000000966e-05, 4.0860999999999675e-05, 4.0833000000000536e-05, 4.151400000000291e-05, 4.1680999999998275e-05, 4.14860000000003e-05, 4.104200000000155e-05, 4.151399999999944e-05, 4.101399999999894e-05, 4.149999999999987e-05, 4.149999999999987e-05, 4.1139000000002535e-05, 4.082000000000044e-05, 4.115199999999916e-05, 4.115199999999916e-05, 4.1361000000000175e-05, 4.0818999999997496e-05, 4.165199999999966e-05, 4.1332999999997566e-05, 4.170800000000141e-05, 4.099999999999937e-05, 4.09859999999998e-05, 4.0847000000000105e-05, 4.090200000000238e-05, 4.0833000000000536e-05, 4.1681000000001744e-05, 4.1695000000001314e-05, 4.133400000000051e-05, 4.1153000000002105e-05, 4.1680999999998275e-05, 4.132000000000094e-05, 4.0860999999999675e-05, 4.11799999999983e-05, 4.149999999999987e-05, 4.11799999999983e-05, 4.1124999999999495e-05, 4.0833000000000536e-05, 4.0833000000000536e-05, 4.149999999999987e-05, 4.123600000000005e-05, 4.116599999999873e-05, 4.11799999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.641" endtime="20201117 14:47:35.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.636" endtime="20201117 14:47:35.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.653" endtime="20201117 14:47:35.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.657" endtime="20201117 14:47:35.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.656" endtime="20201117 14:47:35.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.644" endtime="20201117 14:47:35.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.277" endtime="20201117 14:47:35.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.275" endtime="20201117 14:47:35.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.274" endtime="20201117 14:47:35.678"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.681" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.689" endtime="20201117 14:47:35.706"></status>
</kw>
<msg timestamp="20201117 14:47:35.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.687" endtime="20201117 14:47:35.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.708" endtime="20201117 14:47:35.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.710" endtime="20201117 14:47:35.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.685" endtime="20201117 14:47:35.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.683" endtime="20201117 14:47:35.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.720" endtime="20201117 14:47:36.009"></status>
</kw>
<msg timestamp="20201117 14:47:36.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025313569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025354611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.718" endtime="20201117 14:47:36.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025313569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025354611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.013" endtime="20201117 14:47:36.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.022" endtime="20201117 14:47:36.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.715" endtime="20201117 14:47:36.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.714" endtime="20201117 14:47:36.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.029" level="INFO">${RESULT} = [{'time': 0.025354611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.104199999999808e-05, 'source_diff': 4.104199999999808e-05}, {'time': 0.025403653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:36.025" endtime="20201117 14:47:36.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.042" level="INFO">${ACCURACY} = {'time': [0.025354611, 0.025403653, 0.025458653, 0.025509625, 0.025555639, 0.025603639, 0.025654667, 0.025703653, 0.025751653, 0.025797681, 0.025847667, 0.025895694, 0.025943681, 0.025996694, 0.026048...</msg>
<status status="PASS" starttime="20201117 14:47:36.030" endtime="20201117 14:47:36.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.047" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.046" endtime="20201117 14:47:36.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.050" level="INFO">VALUE: [4.104199999999808e-05, 4.1639000000003035e-05, 4.1695000000001314e-05, 4.1333000000001036e-05, 4.149999999999987e-05, 4.0833000000000536e-05, 4.102799999999851e-05, 4.09859999999998e-05, 4.133400000000051e-05, 4.084799999999958e-05, 4.149999999999987e-05, 4.09859999999998e-05, 4.11119999999994e-05, 4.168000000000227e-05, 4.16799999999988e-05, 4.0847000000000105e-05, 4.14860000000003e-05, 4.1124999999999495e-05, 4.11799999999983e-05, 4.1167000000001674e-05, 4.16799999999988e-05, 4.1166999999998205e-05, 4.0847000000000105e-05, 4.102799999999851e-05, 4.1167000000001674e-05, 4.101399999999894e-05, 4.0833000000000536e-05, 4.133400000000051e-05, 4.100000000000284e-05, 4.083400000000001e-05, 4.124999999999962e-05, 4.081999999999697e-05, 4.16799999999988e-05, 4.16799999999988e-05, 4.1040999999998606e-05, 4.0833000000000536e-05, 4.0860999999999675e-05, 4.1347000000000605e-05, 4.101399999999894e-05, 4.1346999999997136e-05, 4.145799999999769e-05, 4.1332999999997566e-05, 4.118000000000177e-05, 4.0833000000000536e-05, 4.1388999999999315e-05, 4.0860999999999675e-05, 4.1347000000000605e-05, 4.0847000000000105e-05, 4.1332999999997566e-05, 4.1653000000002605e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.048" endtime="20201117 14:47:36.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.043" endtime="20201117 14:47:36.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.053" endtime="20201117 14:47:36.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.057" endtime="20201117 14:47:36.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.055" endtime="20201117 14:47:36.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.052" endtime="20201117 14:47:36.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.681" endtime="20201117 14:47:36.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.679" endtime="20201117 14:47:36.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.679" endtime="20201117 14:47:36.078"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.081" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.089" endtime="20201117 14:47:36.106"></status>
</kw>
<msg timestamp="20201117 14:47:36.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.087" endtime="20201117 14:47:36.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.107" endtime="20201117 14:47:36.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.110" endtime="20201117 14:47:36.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.085" endtime="20201117 14:47:36.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.083" endtime="20201117 14:47:36.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.120" endtime="20201117 14:47:36.407"></status>
</kw>
<msg timestamp="20201117 14:47:36.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024876444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024917222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.118" endtime="20201117 14:47:36.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024876444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024917222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.411" endtime="20201117 14:47:36.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.420" endtime="20201117 14:47:36.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.115" endtime="20201117 14:47:36.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.113" endtime="20201117 14:47:36.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.426" level="INFO">${RESULT} = [{'time': 0.024917222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.077799999999826e-05, 'source_diff': 4.077799999999826e-05}, {'time': 0.024969208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:36.423" endtime="20201117 14:47:36.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.442" level="INFO">${ACCURACY} = {'time': [0.024917222, 0.024969208, 0.025016208, 0.025069222, 0.025115222, 0.025164236, 0.025220236, 0.02527125, 0.025317264, 0.02537125, 0.025422264, 0.025478264, 0.025533278, 0.025586278, 0.02563429...</msg>
<status status="PASS" starttime="20201117 14:47:36.427" endtime="20201117 14:47:36.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.446" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.445" endtime="20201117 14:47:36.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.449" level="INFO">VALUE: [4.077799999999826e-05, 4.1124999999999495e-05, 4.16660000000027e-05, 4.1138999999999065e-05, 4.166599999999923e-05, 4.1611000000000425e-05, 4.1333000000001036e-05, 4.1166999999998205e-05, 4.1680999999998275e-05, 4.1333000000001036e-05, 4.1124999999999495e-05, 4.14860000000003e-05, 4.1652999999999135e-05, 4.149999999999987e-05, 4.101399999999894e-05, 4.1638999999999565e-05, 4.09859999999998e-05, 4.14860000000003e-05, 4.1473000000000204e-05, 4.1333000000001036e-05, 4.099999999999937e-05, 4.168000000000227e-05, 4.166599999999923e-05, 4.1333000000001036e-05, 4.16799999999988e-05, 4.099999999999937e-05, 4.1318999999997996e-05, 4.1333000000001036e-05, 4.1374999999999745e-05, 4.1667000000002175e-05, 4.101399999999894e-05, 4.099999999999937e-05, 4.1167000000001674e-05, 4.173600000000055e-05, 4.1541000000002576e-05, 4.102799999999851e-05, 4.084800000000305e-05, 4.099999999999937e-05, 4.1166999999998205e-05, 4.133400000000051e-05, 4.16799999999988e-05, 4.166599999999923e-05, 4.118000000000177e-05, 4.149999999999987e-05, 4.1319000000001466e-05, 4.0819000000000966e-05, 4.11799999999983e-05, 4.0833000000000536e-05, 4.1680999999998275e-05, 4.1652999999999135e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.447" endtime="20201117 14:47:36.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.443" endtime="20201117 14:47:36.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.453" endtime="20201117 14:47:36.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.456" endtime="20201117 14:47:36.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.455" endtime="20201117 14:47:36.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.451" endtime="20201117 14:47:36.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.081" endtime="20201117 14:47:36.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.079" endtime="20201117 14:47:36.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.078" endtime="20201117 14:47:36.477"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.480" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.488" endtime="20201117 14:47:36.506"></status>
</kw>
<msg timestamp="20201117 14:47:36.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.487" endtime="20201117 14:47:36.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.508" endtime="20201117 14:47:36.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.510" endtime="20201117 14:47:36.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.484" endtime="20201117 14:47:36.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.482" endtime="20201117 14:47:36.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.520" endtime="20201117 14:47:36.806"></status>
</kw>
<msg timestamp="20201117 14:47:36.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024676319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024717125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.518" endtime="20201117 14:47:36.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024676319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024717125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.811" endtime="20201117 14:47:36.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.819" endtime="20201117 14:47:36.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.515" endtime="20201117 14:47:36.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.513" endtime="20201117 14:47:36.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.826" level="INFO">${RESULT} = [{'time': 0.024717125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.080600000000087e-05, 'source_diff': 4.080600000000087e-05}, {'time': 0.024770083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:36.823" endtime="20201117 14:47:36.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.840" level="INFO">${ACCURACY} = {'time': [0.024717125, 0.024770083, 0.024823097, 0.024876097, 0.024923125, 0.024973111, 0.025028111, 0.025079125, 0.025129125, 0.025177139, 0.025225139, 0.025273139, 0.025327167, 0.025382167, 0.025438...</msg>
<status status="PASS" starttime="20201117 14:47:36.827" endtime="20201117 14:47:36.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.845" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.844" endtime="20201117 14:47:36.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.847" level="INFO">VALUE: [4.080600000000087e-05, 4.116599999999873e-05, 4.166599999999923e-05, 4.099999999999937e-05, 4.1347000000000605e-05, 4.1332999999997566e-05, 4.127799999999876e-05, 4.1681000000001744e-05, 4.099999999999937e-05, 4.151399999999944e-05, 4.14860000000003e-05, 4.1152999999998635e-05, 4.101400000000241e-05, 4.099999999999937e-05, 4.149999999999987e-05, 4.1667000000002175e-05, 4.134800000000008e-05, 4.1332999999997566e-05, 4.082000000000044e-05, 4.101400000000241e-05, 4.0804999999997926e-05, 4.11660000000022e-05, 4.1319000000001466e-05, 4.101399999999894e-05, 4.16660000000027e-05, 4.099999999999937e-05, 4.0832999999997066e-05, 4.149999999999987e-05, 4.101399999999894e-05, 4.0833000000000536e-05, 4.152799999999901e-05, 4.0832999999997066e-05, 4.1166999999998205e-05, 4.1666999999998705e-05, 4.099999999999937e-05, 4.133399999999704e-05, 4.1445000000001064e-05, 4.126399999999919e-05, 4.11799999999983e-05, 4.1166999999998205e-05, 4.11799999999983e-05, 4.099999999999937e-05, 4.11799999999983e-05, 4.11660000000022e-05, 4.099999999999937e-05, 4.0874999999999245e-05, 4.099999999999937e-05, 4.101400000000241e-05, 4.127800000000223e-05, 4.1195000000000814e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.846" endtime="20201117 14:47:36.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.841" endtime="20201117 14:47:36.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.851" endtime="20201117 14:47:36.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.854" endtime="20201117 14:47:36.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.853" endtime="20201117 14:47:36.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.849" endtime="20201117 14:47:36.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.480" endtime="20201117 14:47:36.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.479" endtime="20201117 14:47:36.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.478" endtime="20201117 14:47:36.875"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.878" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.886" endtime="20201117 14:47:36.902"></status>
</kw>
<msg timestamp="20201117 14:47:36.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.885" endtime="20201117 14:47:36.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.904" endtime="20201117 14:47:36.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.906" endtime="20201117 14:47:36.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.882" endtime="20201117 14:47:36.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.880" endtime="20201117 14:47:36.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.916" endtime="20201117 14:47:37.210"></status>
</kw>
<msg timestamp="20201117 14:47:37.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024572986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024613736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.914" endtime="20201117 14:47:37.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024572986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024613736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.215" endtime="20201117 14:47:37.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.223" endtime="20201117 14:47:37.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.912" endtime="20201117 14:47:37.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.910" endtime="20201117 14:47:37.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.230" level="INFO">${RESULT} = [{'time': 0.024613736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.074999999999912e-05, 'source_diff': 4.074999999999912e-05}, {'time': 0.02465975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:37.227" endtime="20201117 14:47:37.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.244" level="INFO">${ACCURACY} = {'time': [0.024613736, 0.02465975, 0.02471175, 0.024761778, 0.024810778, 0.024863778, 0.024914778, 0.024966833, 0.025018792, 0.025066792, 0.025112806, 0.025164806, 0.025212819, 0.025261819, 0.02531681...</msg>
<status status="PASS" starttime="20201117 14:47:37.231" endtime="20201117 14:47:37.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.249" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.247" endtime="20201117 14:47:37.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.251" level="INFO">VALUE: [4.074999999999912e-05, 4.0833000000000536e-05, 4.14860000000003e-05, 4.1695000000001314e-05, 4.1666999999998705e-05, 4.083400000000001e-05, 4.1444999999997595e-05, 4.1055000000001646e-05, 4.101400000000241e-05, 4.132000000000094e-05, 4.101400000000241e-05, 4.133400000000051e-05, 4.1347000000000605e-05, 4.09859999999998e-05, 4.099999999999937e-05, 4.16660000000027e-05, 4.166599999999923e-05, 4.1333000000001036e-05, 4.151399999999944e-05, 4.1153000000002105e-05, 4.0818999999997496e-05, 4.1180999999997775e-05, 4.102800000000198e-05, 4.1318999999997996e-05, 4.0847000000000105e-05, 4.151399999999944e-05, 4.1361000000000175e-05, 4.1139000000002535e-05, 4.1166999999998205e-05, 4.151399999999944e-05, 4.1194999999997345e-05, 4.1138999999999065e-05, 4.1541000000002576e-05, 4.133400000000051e-05, 4.1667000000002175e-05, 4.149999999999987e-05, 4.165199999999966e-05, 4.101399999999894e-05, 4.16799999999988e-05, 4.169399999999837e-05, 4.1333000000001036e-05, 4.116599999999873e-05, 4.124999999999962e-05, 4.099999999999937e-05, 4.1181000000001244e-05, 4.13059999999979e-05, 4.099999999999937e-05, 4.173600000000055e-05, 4.1332999999997566e-05, 4.0847000000000105e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.250" endtime="20201117 14:47:37.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.245" endtime="20201117 14:47:37.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.255" endtime="20201117 14:47:37.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.258" endtime="20201117 14:47:37.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.257" endtime="20201117 14:47:37.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.253" endtime="20201117 14:47:37.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.878" endtime="20201117 14:47:37.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.877" endtime="20201117 14:47:37.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.876" endtime="20201117 14:47:37.279"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.282" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.290" endtime="20201117 14:47:37.307"></status>
</kw>
<msg timestamp="20201117 14:47:37.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.289" endtime="20201117 14:47:37.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.308" endtime="20201117 14:47:37.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.311" endtime="20201117 14:47:37.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.286" endtime="20201117 14:47:37.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.284" endtime="20201117 14:47:37.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.321" endtime="20201117 14:47:37.607"></status>
</kw>
<msg timestamp="20201117 14:47:37.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025221875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025263181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.318" endtime="20201117 14:47:37.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025221875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025263181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.612" endtime="20201117 14:47:37.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.620" endtime="20201117 14:47:37.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.316" endtime="20201117 14:47:37.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.314" endtime="20201117 14:47:37.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.627" level="INFO">${RESULT} = [{'time': 0.025263181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.13059999999979e-05, 'source_diff': 4.13059999999979e-05}, {'time': 0.025314264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:37.624" endtime="20201117 14:47:37.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.641" level="INFO">${ACCURACY} = {'time': [0.025263181, 0.025314264, 0.025368222, 0.025416194, 0.025468222, 0.025522236, 0.025577222, 0.025623222, 0.025669236, 0.025719236, 0.025774236, 0.025828264, 0.02587625, 0.025925264, 0.0259732...</msg>
<status status="PASS" starttime="20201117 14:47:37.628" endtime="20201117 14:47:37.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.645" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.644" endtime="20201117 14:47:37.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.648" level="INFO">VALUE: [4.13059999999979e-05, 4.1083000000000786e-05, 4.102799999999851e-05, 4.1333000000001036e-05, 4.1346999999997136e-05, 4.169400000000184e-05, 4.151399999999944e-05, 4.099999999999937e-05, 4.0833000000000536e-05, 4.1652999999999135e-05, 4.1318999999997996e-05, 4.101399999999894e-05, 4.0833000000000536e-05, 4.1333000000001036e-05, 4.133400000000051e-05, 4.0847000000000105e-05, 4.132000000000094e-05, 4.132000000000094e-05, 4.1680999999998275e-05, 4.1167000000001674e-05, 4.134800000000008e-05, 4.080600000000087e-05, 4.1166999999998205e-05, 4.100000000000284e-05, 4.14860000000003e-05, 4.102800000000198e-05, 4.099999999999937e-05, 4.149999999999987e-05, 4.1624999999999995e-05, 4.170800000000141e-05, 4.0874999999999245e-05, 4.102799999999851e-05, 4.099999999999937e-05, 4.130600000000137e-05, 4.0847000000000105e-05, 4.173600000000055e-05, 4.1374999999999745e-05, 4.1347000000000605e-05, 4.133400000000051e-05, 4.084799999999958e-05, 4.14860000000003e-05, 4.09859999999998e-05, 4.124999999999962e-05, 4.133400000000051e-05, 4.0860999999999675e-05, 4.0790999999998356e-05, 4.11660000000022e-05, 4.169400000000184e-05, 4.144400000000159e-05, 4.152799999999901e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.646" endtime="20201117 14:47:37.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.642" endtime="20201117 14:47:37.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.651" endtime="20201117 14:47:37.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.655" endtime="20201117 14:47:37.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.653" endtime="20201117 14:47:37.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.649" endtime="20201117 14:47:37.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.282" endtime="20201117 14:47:37.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.281" endtime="20201117 14:47:37.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.280" endtime="20201117 14:47:37.676"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.678" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.687" endtime="20201117 14:47:37.703"></status>
</kw>
<msg timestamp="20201117 14:47:37.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.685" endtime="20201117 14:47:37.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.705" endtime="20201117 14:47:37.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.708" endtime="20201117 14:47:37.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.683" endtime="20201117 14:47:37.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.680" endtime="20201117 14:47:37.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.717" endtime="20201117 14:47:38.005"></status>
</kw>
<msg timestamp="20201117 14:47:38.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024762167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024804528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.715" endtime="20201117 14:47:38.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024762167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024804528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.010" endtime="20201117 14:47:38.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.018" endtime="20201117 14:47:38.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.713" endtime="20201117 14:47:38.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.711" endtime="20201117 14:47:38.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.026" level="INFO">${RESULT} = [{'time': 0.024804528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2360999999997706e-05, 'source_diff': 4.2360999999997706e-05}, {'time': 0.024852542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:38.022" endtime="20201117 14:47:38.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.041" level="INFO">${ACCURACY} = {'time': [0.024804528, 0.024852542, 0.024903514, 0.024958528, 0.025005528, 0.025055556, 0.025103556, 0.025158569, 0.025206556, 0.025255569, 0.025311569, 0.025359569, 0.025409583, 0.025460583, 0.025510...</msg>
<status status="PASS" starttime="20201117 14:47:38.027" endtime="20201117 14:47:38.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.046" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.045" endtime="20201117 14:47:38.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.048" level="INFO">VALUE: [4.2360999999997706e-05, 4.252800000000001e-05, 4.182000000000144e-05, 4.183400000000101e-05, 4.1666999999998705e-05, 4.186200000000015e-05, 4.1666999999998705e-05, 4.16799999999988e-05, 4.158400000000076e-05, 4.1818999999998496e-05, 4.216599999999973e-05, 4.24999999999974e-05, 4.250000000000087e-05, 4.198599999999733e-05, 4.244399999999912e-05, 4.2139000000000065e-05, 4.1666999999998705e-05, 4.21799999999993e-05, 4.1666999999998705e-05, 4.200000000000037e-05, 4.244399999999912e-05, 4.2332999999998566e-05, 4.1666999999998705e-05, 4.245800000000216e-05, 4.1847000000001106e-05, 4.2152999999999635e-05, 4.250000000000087e-05, 4.233399999999804e-05, 4.2568999999999246e-05, 4.1667000000002175e-05, 4.251300000000097e-05, 4.2361000000001175e-05, 4.215200000000016e-05, 4.219399999999887e-05, 4.16660000000027e-05, 4.220799999999844e-05, 4.1833000000001536e-05, 4.1861000000000675e-05, 4.19860000000008e-05, 4.1833000000001536e-05, 4.2180999999998775e-05, 4.1833000000001536e-05, 4.200000000000037e-05, 4.2152999999999635e-05, 4.201399999999994e-05, 4.233399999999804e-05, 4.233400000000151e-05, 4.2195000000001814e-05, 4.25129999999975e-05, 4.2527000000000537e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.047" endtime="20201117 14:47:38.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.042" endtime="20201117 14:47:38.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.052" endtime="20201117 14:47:38.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.055" endtime="20201117 14:47:38.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.054" endtime="20201117 14:47:38.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.050" endtime="20201117 14:47:38.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.679" endtime="20201117 14:47:38.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.677" endtime="20201117 14:47:38.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.676" endtime="20201117 14:47:38.077"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.079" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.088" endtime="20201117 14:47:38.105"></status>
</kw>
<msg timestamp="20201117 14:47:38.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.086" endtime="20201117 14:47:38.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.107" endtime="20201117 14:47:38.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.110" endtime="20201117 14:47:38.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.084" endtime="20201117 14:47:38.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.081" endtime="20201117 14:47:38.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.119" endtime="20201117 14:47:38.405"></status>
</kw>
<msg timestamp="20201117 14:47:38.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0254375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025480306, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:38.117" endtime="20201117 14:47:38.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0254375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025480306, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:38.409" endtime="20201117 14:47:38.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.417" endtime="20201117 14:47:38.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.115" endtime="20201117 14:47:38.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.113" endtime="20201117 14:47:38.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.424" level="INFO">${RESULT} = [{'time': 0.025480306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.280600000000287e-05, 'source_diff': 4.280600000000287e-05}, {'time': 0.025533333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:38.421" endtime="20201117 14:47:38.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.438" level="INFO">${ACCURACY} = {'time': [0.025480306, 0.025533333, 0.025589333, 0.025638333, 0.025690361, 0.025743347, 0.025792361, 0.025843375, 0.025891361, 0.025941375, 0.025994375, 0.026042417, 0.026096375, 0.026148389, 0.026201...</msg>
<status status="PASS" starttime="20201117 14:47:38.425" endtime="20201117 14:47:38.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.443" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.442" endtime="20201117 14:47:38.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.445" level="INFO">VALUE: [4.280600000000287e-05, 4.2846999999998636e-05, 4.29999999999979e-05, 4.34999999999984e-05, 4.269399999999937e-05, 4.2832999999999066e-05, 4.351400000000144e-05, 4.319399999999987e-05, 4.34860000000023e-05, 4.2666999999999705e-05, 4.2846999999998636e-05, 4.2861000000001676e-05, 4.3167000000000205e-05, 4.3167000000000205e-05, 4.3444999999999595e-05, 4.350000000000187e-05, 4.333399999999904e-05, 4.301400000000094e-05, 4.3167000000000205e-05, 4.2861000000001676e-05, 4.308400000000226e-05, 4.355600000000015e-05, 4.29860000000018e-05, 4.29999999999979e-05, 4.351400000000144e-05, 4.3110999999998456e-05, 4.2624999999997526e-05, 4.3389000000001315e-05, 4.270799999999894e-05, 4.329200000000033e-05, 4.348599999999883e-05, 4.3582999999999816e-05, 4.34860000000023e-05, 4.352800000000101e-05, 4.279199999999983e-05, 4.29999999999979e-05, 4.3167000000000205e-05, 4.301399999999747e-05, 4.3458999999999165e-05, 4.351399999999797e-05, 4.2874999999997776e-05, 4.2666999999999705e-05, 4.3555000000000677e-05, 4.2818999999999496e-05, 4.297199999999876e-05, 4.26799999999998e-05, 4.348599999999883e-05, 4.29999999999979e-05, 4.344400000000012e-05, 4.301400000000094e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.444" endtime="20201117 14:47:38.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.439" endtime="20201117 14:47:38.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.448" endtime="20201117 14:47:38.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.452" endtime="20201117 14:47:38.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.450" endtime="20201117 14:47:38.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.447" endtime="20201117 14:47:38.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.080" endtime="20201117 14:47:38.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.078" endtime="20201117 14:47:38.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.077" endtime="20201117 14:47:38.474"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.476" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.485" endtime="20201117 14:47:38.501"></status>
</kw>
<msg timestamp="20201117 14:47:38.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.483" endtime="20201117 14:47:38.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.503" endtime="20201117 14:47:38.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.506" endtime="20201117 14:47:38.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.480" endtime="20201117 14:47:38.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.478" endtime="20201117 14:47:38.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.515" endtime="20201117 14:47:38.802"></status>
</kw>
<msg timestamp="20201117 14:47:38.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024825806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.513" endtime="20201117 14:47:38.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024825806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.806" endtime="20201117 14:47:38.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.815" endtime="20201117 14:47:38.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.511" endtime="20201117 14:47:38.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.509" endtime="20201117 14:47:38.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.822" level="INFO">${RESULT} = [{'time': 0.024825806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3986999999998805e-05, 'source_diff': 4.3986999999998805e-05}, {'time': 0.024884819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:38.818" endtime="20201117 14:47:38.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.835" level="INFO">${ACCURACY} = {'time': [0.024825806, 0.024884819, 0.024943819, 0.025002847, 0.025052833, 0.025103819, 0.025157833, 0.025215833, 0.025270861, 0.025327847, 0.025378861, 0.025429875, 0.025487889, 0.025540875, 0.025590...</msg>
<status status="PASS" starttime="20201117 14:47:38.823" endtime="20201117 14:47:38.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.840" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.839" endtime="20201117 14:47:38.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.843" level="INFO">VALUE: [4.3986999999998805e-05, 4.4360999999999706e-05, 4.4347000000000136e-05, 4.454100000000211e-05, 4.3846999999999636e-05, 4.39999999999989e-05, 4.415200000000216e-05, 4.44999999999994e-05, 4.4166999999997736e-05, 4.398599999999933e-05, 4.44999999999994e-05, 4.3667000000000705e-05, 4.4360999999999706e-05, 4.3667000000000705e-05, 4.3681000000000275e-05, 4.3833000000000066e-05, 4.4166999999997736e-05, 4.429199999999786e-05, 4.39999999999989e-05, 4.4124999999999026e-05, 4.433400000000004e-05, 4.451399999999897e-05, 4.3986999999998805e-05, 4.4012999999999e-05, 4.416600000000173e-05, 4.451399999999897e-05, 4.4152999999998166e-05, 4.4402999999998416e-05, 4.43329999999971e-05, 4.44999999999994e-05, 4.41939999999974e-05, 4.3681000000000275e-05, 4.3681000000000275e-05, 4.4333000000000566e-05, 4.451399999999897e-05, 4.381999999999997e-05, 4.4333000000000566e-05, 4.4139000000002065e-05, 4.3666999999997236e-05, 4.4083000000000316e-05, 4.4167000000001205e-05, 4.451399999999897e-05, 4.41939999999974e-05, 4.442999999999808e-05, 4.366600000000123e-05, 4.4333000000000566e-05, 4.427800000000176e-05, 4.401400000000194e-05, 4.402799999999804e-05, 4.456999999999725e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.841" endtime="20201117 14:47:38.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.836" endtime="20201117 14:47:38.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.846" endtime="20201117 14:47:38.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.850" endtime="20201117 14:47:38.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.848" endtime="20201117 14:47:38.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.845" endtime="20201117 14:47:38.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.477" endtime="20201117 14:47:38.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.475" endtime="20201117 14:47:38.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.474" endtime="20201117 14:47:38.871"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.873" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.882" endtime="20201117 14:47:38.898"></status>
</kw>
<msg timestamp="20201117 14:47:38.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.880" endtime="20201117 14:47:38.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.900" endtime="20201117 14:47:38.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.903" endtime="20201117 14:47:38.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.878" endtime="20201117 14:47:38.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.876" endtime="20201117 14:47:38.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.912" endtime="20201117 14:47:39.200"></status>
</kw>
<msg timestamp="20201117 14:47:39.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024850542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024895861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.910" endtime="20201117 14:47:39.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024850542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024895861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.204" endtime="20201117 14:47:39.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.213" endtime="20201117 14:47:39.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.908" endtime="20201117 14:47:39.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.906" endtime="20201117 14:47:39.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.220" level="INFO">${RESULT} = [{'time': 0.024895861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.531899999999853e-05, 'source_diff': 4.531899999999853e-05}, {'time': 0.024950875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:39.216" endtime="20201117 14:47:39.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.233" level="INFO">${ACCURACY} = {'time': [0.024895861, 0.024950875, 0.025003875, 0.025059875, 0.025115889, 0.025166917, 0.025224903, 0.025276917, 0.025333903, 0.025388903, 0.025446917, 0.025502986, 0.025551931, 0.025602931, 0.025659...</msg>
<status status="PASS" starttime="20201117 14:47:39.221" endtime="20201117 14:47:39.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.238" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.237" endtime="20201117 14:47:39.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.241" level="INFO">VALUE: [4.531899999999853e-05, 4.5181000000001775e-05, 4.4638999999999096e-05, 4.501399999999947e-05, 4.477799999999879e-05, 4.5375000000000276e-05, 4.5347000000001136e-05, 4.4861000000000206e-05, 4.55000000000004e-05, 4.548600000000083e-05, 4.479199999999836e-05, 4.5402999999999416e-05, 4.486199999999968e-05, 4.4652999999998666e-05, 4.5402999999999416e-05, 4.548600000000083e-05, 4.476400000000269e-05, 4.49999999999999e-05, 4.517999999999883e-05, 4.519400000000187e-05, 4.5152999999999166e-05, 4.4847000000000636e-05, 4.501399999999947e-05, 4.552799999999954e-05, 4.49999999999999e-05, 4.4861000000000206e-05, 4.4695000000000845e-05, 4.552799999999954e-05, 4.4652999999998666e-05, 4.5166999999998736e-05, 4.482000000000097e-05, 4.534800000000061e-05, 4.5319999999998e-05, 4.552700000000007e-05, 4.498600000000033e-05, 4.517999999999883e-05, 4.466599999999876e-05, 4.501399999999947e-05, 4.4652999999998666e-05, 4.4833000000001066e-05, 4.534699999999767e-05, 4.4680999999997806e-05, 4.501399999999947e-05, 4.55000000000004e-05, 4.5333000000001566e-05, 4.4861000000000206e-05, 4.4667000000001705e-05, 4.4847000000000636e-05, 4.533400000000104e-05, 4.501399999999947e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.239" endtime="20201117 14:47:39.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.234" endtime="20201117 14:47:39.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.244" endtime="20201117 14:47:39.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.248" endtime="20201117 14:47:39.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.246" endtime="20201117 14:47:39.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.243" endtime="20201117 14:47:39.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.874" endtime="20201117 14:47:39.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.872" endtime="20201117 14:47:39.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.871" endtime="20201117 14:47:39.269"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.272" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.280" endtime="20201117 14:47:39.297"></status>
</kw>
<msg timestamp="20201117 14:47:39.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.278" endtime="20201117 14:47:39.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.299" endtime="20201117 14:47:39.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.301" endtime="20201117 14:47:39.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.276" endtime="20201117 14:47:39.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.274" endtime="20201117 14:47:39.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.311" endtime="20201117 14:47:39.600"></status>
</kw>
<msg timestamp="20201117 14:47:39.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024900167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024945986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.309" endtime="20201117 14:47:39.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024900167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024945986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.605" endtime="20201117 14:47:39.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.613" endtime="20201117 14:47:39.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.307" endtime="20201117 14:47:39.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.305" endtime="20201117 14:47:39.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.620" level="INFO">${RESULT} = [{'time': 0.024945986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.581899999999903e-05, 'source_diff': 4.581899999999903e-05}, {'time': 0.024997014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:39.617" endtime="20201117 14:47:39.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.636" level="INFO">${ACCURACY} = {'time': [0.024945986, 0.024997014, 0.025053014, 0.025105014, 0.025162014, 0.025215014, 0.025269028, 0.025319097, 0.025376042, 0.025436056, 0.025493042, 0.025549111, 0.025609097, 0.025662069, 0.025717...</msg>
<status status="PASS" starttime="20201117 14:47:39.621" endtime="20201117 14:47:39.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.640" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.639" endtime="20201117 14:47:39.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.643" level="INFO">VALUE: [4.581899999999903e-05, 4.5847000000001636e-05, 4.586099999999774e-05, 4.627799999999682e-05, 4.5666999999999236e-05, 4.60000000000009e-05, 4.65139999999975e-05, 4.591600000000001e-05, 4.5681000000002275e-05, 4.583399999999807e-05, 4.598600000000133e-05, 4.61939999999994e-05, 4.58190000000025e-05, 4.565200000000019e-05, 4.566599999999976e-05, 4.617999999999983e-05, 4.613899999999713e-05, 4.651400000000097e-05, 4.60000000000009e-05, 4.6180999999999306e-05, 4.60000000000009e-05, 4.651400000000097e-05, 4.6180999999999306e-05, 4.6166999999999736e-05, 4.6013999999997e-05, 4.601400000000047e-05, 4.60000000000009e-05, 4.584800000000111e-05, 4.633399999999857e-05, 4.633399999999857e-05, 4.601299999999753e-05, 4.569400000000237e-05, 4.634699999999867e-05, 4.565200000000019e-05, 4.597200000000176e-05, 4.634699999999867e-05, 4.61939999999994e-05, 4.601400000000047e-05, 4.581899999999903e-05, 4.58329999999986e-05, 4.580499999999946e-05, 4.649999999999793e-05, 4.605599999999918e-05, 4.5666999999999236e-05, 4.65000000000014e-05, 4.5861000000001206e-05, 4.5666999999999236e-05, 4.651400000000097e-05, 4.5680999999998806e-05, 4.6180999999999306e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.641" endtime="20201117 14:47:39.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.637" endtime="20201117 14:47:39.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.646" endtime="20201117 14:47:39.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.650" endtime="20201117 14:47:39.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.648" endtime="20201117 14:47:39.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.644" endtime="20201117 14:47:39.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.272" endtime="20201117 14:47:39.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.270" endtime="20201117 14:47:39.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.269" endtime="20201117 14:47:39.671"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.673" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.682" endtime="20201117 14:47:39.699"></status>
</kw>
<msg timestamp="20201117 14:47:39.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.680" endtime="20201117 14:47:39.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.700" endtime="20201117 14:47:39.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.703" endtime="20201117 14:47:39.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.677" endtime="20201117 14:47:39.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.675" endtime="20201117 14:47:39.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.712" endtime="20201117 14:47:39.999"></status>
</kw>
<msg timestamp="20201117 14:47:40.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024920736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024967889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.711" endtime="20201117 14:47:40.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024920736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024967889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.004" endtime="20201117 14:47:40.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.013" endtime="20201117 14:47:40.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.708" endtime="20201117 14:47:40.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.706" endtime="20201117 14:47:40.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.020" level="INFO">${RESULT} = [{'time': 0.024967889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7153000000001166e-05, 'source_diff': 4.7153000000001166e-05}, {'time': 0.025027903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:40.016" endtime="20201117 14:47:40.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.033" level="INFO">${ACCURACY} = {'time': [0.024967889, 0.025027903, 0.025081903, 0.025135903, 0.025186931, 0.025239917, 0.025294944, 0.025349986, 0.025410944, 0.025466958, 0.025523958, 0.025577958, 0.025632986, 0.025688014, 0.025747...</msg>
<status status="PASS" starttime="20201117 14:47:40.021" endtime="20201117 14:47:40.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.038" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.037" endtime="20201117 14:47:40.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.040" level="INFO">VALUE: [4.7153000000001166e-05, 4.733399999999957e-05, 4.7167000000000736e-05, 4.75000000000024e-05, 4.686199999999821e-05, 4.7167000000000736e-05, 4.736099999999924e-05, 4.670800000000294e-05, 4.73330000000001e-05, 4.6847000000002637e-05, 4.665199999999772e-05, 4.73330000000001e-05, 4.73330000000001e-05, 4.670799999999947e-05, 4.751400000000197e-05, 4.7181000000000306e-05, 4.7375000000002276e-05, 4.6875000000001776e-05, 4.7347000000003137e-05, 4.751400000000197e-05, 4.6667000000000236e-05, 4.686099999999874e-05, 4.684799999999864e-05, 4.70000000000019e-05, 4.716699999999727e-05, 4.7181000000000306e-05, 4.6653000000000666e-05, 4.702700000000157e-05, 4.749999999999893e-05, 4.751400000000197e-05, 4.666600000000076e-05, 4.68329999999996e-05, 4.68329999999996e-05, 4.73330000000001e-05, 4.749999999999893e-05, 4.73330000000001e-05, 4.695799999999972e-05, 4.7167000000000736e-05, 4.75139999999985e-05, 4.6680999999999806e-05, 4.749999999999893e-05, 4.699999999999843e-05, 4.702799999999757e-05, 4.749999999999893e-05, 4.734799999999914e-05, 4.698599999999886e-05, 4.749999999999893e-05, 4.684699999999917e-05, 4.695799999999972e-05, 4.749999999999893e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.039" endtime="20201117 14:47:40.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.034" endtime="20201117 14:47:40.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.044" endtime="20201117 14:47:40.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.048" endtime="20201117 14:47:40.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.046" endtime="20201117 14:47:40.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.042" endtime="20201117 14:47:40.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.674" endtime="20201117 14:47:40.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.672" endtime="20201117 14:47:40.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.671" endtime="20201117 14:47:40.069"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.072" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.080" endtime="20201117 14:47:40.097"></status>
</kw>
<msg timestamp="20201117 14:47:40.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.079" endtime="20201117 14:47:40.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.099" endtime="20201117 14:47:40.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.101" endtime="20201117 14:47:40.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.076" endtime="20201117 14:47:40.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.074" endtime="20201117 14:47:40.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.111" endtime="20201117 14:47:40.398"></status>
</kw>
<msg timestamp="20201117 14:47:40.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025069236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025117403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.109" endtime="20201117 14:47:40.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025069236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025117403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.403" endtime="20201117 14:47:40.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.412" endtime="20201117 14:47:40.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.107" endtime="20201117 14:47:40.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.105" endtime="20201117 14:47:40.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.418" level="INFO">${RESULT} = [{'time': 0.025117403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.816699999999827e-05, 'source_diff': 4.816699999999827e-05}, {'time': 0.025174403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:40.415" endtime="20201117 14:47:40.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.432" level="INFO">${ACCURACY} = {'time': [0.025117403, 0.025174403, 0.025231403, 0.025284417, 0.025345403, 0.025400417, 0.025459417, 0.025516444, 0.025571444, 0.025629444, 0.025686444, 0.025739444, 0.025800458, 0.025856486, 0.025914...</msg>
<status status="PASS" starttime="20201117 14:47:40.419" endtime="20201117 14:47:40.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.437" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.436" endtime="20201117 14:47:40.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.439" level="INFO">VALUE: [4.816699999999827e-05, 4.802800000000204e-05, 4.818099999999784e-05, 4.8181000000001306e-05, 4.799999999999943e-05, 4.7667000000001236e-05, 4.798599999999986e-05, 4.819399999999793e-05, 4.801299999999953e-05, 4.851300000000003e-05, 4.799999999999943e-05, 4.83330000000011e-05, 4.781899999999756e-05, 4.802800000000204e-05, 4.798599999999986e-05, 4.774999999999918e-05, 4.7653000000001666e-05, 4.798599999999986e-05, 4.8181000000001306e-05, 4.78330000000006e-05, 4.766699999999777e-05, 4.8167000000001736e-05, 4.783400000000007e-05, 4.7695000000000376e-05, 4.802800000000204e-05, 4.834800000000014e-05, 4.8320000000001e-05, 4.833400000000057e-05, 4.765199999999872e-05, 4.849999999999993e-05, 4.816599999999879e-05, 4.834700000000067e-05, 4.831899999999806e-05, 4.819399999999793e-05, 4.816600000000226e-05, 4.784700000000017e-05, 4.7667000000001236e-05, 4.834700000000067e-05, 4.798599999999986e-05, 4.852799999999907e-05, 4.816699999999827e-05, 4.822200000000054e-05, 4.818099999999784e-05, 4.7681000000000806e-05, 4.849999999999993e-05, 4.834700000000067e-05, 4.80000000000029e-05, 4.768000000000133e-05, 4.816599999999879e-05, 4.797200000000029e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.438" endtime="20201117 14:47:40.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.433" endtime="20201117 14:47:40.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.443" endtime="20201117 14:47:40.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.447" endtime="20201117 14:47:40.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.445" endtime="20201117 14:47:40.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.441" endtime="20201117 14:47:40.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.072" endtime="20201117 14:47:40.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.070" endtime="20201117 14:47:40.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.070" endtime="20201117 14:47:40.468"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.471" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.479" endtime="20201117 14:47:40.496"></status>
</kw>
<msg timestamp="20201117 14:47:40.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.477" endtime="20201117 14:47:40.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.497" endtime="20201117 14:47:40.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.500" endtime="20201117 14:47:40.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.475" endtime="20201117 14:47:40.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.473" endtime="20201117 14:47:40.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.510" endtime="20201117 14:47:40.797"></status>
</kw>
<msg timestamp="20201117 14:47:40.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025019028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025068028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.508" endtime="20201117 14:47:40.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025019028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025068028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.801" endtime="20201117 14:47:40.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.810" endtime="20201117 14:47:40.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.505" endtime="20201117 14:47:40.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.503" endtime="20201117 14:47:40.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.817" level="INFO">${RESULT} = [{'time': 0.025068028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.900000000000043e-05, 'source_diff': 4.900000000000043e-05}, {'time': 0.025126014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:40.813" endtime="20201117 14:47:40.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.830" level="INFO">${ACCURACY} = {'time': [0.025068028, 0.025126014, 0.025190097, 0.025244069, 0.025306042, 0.025363042, 0.025425056, 0.025483056, 0.025547069, 0.025605069, 0.025668139, 0.025725097, 0.025778097, 0.025832153, 0.025895...</msg>
<status status="PASS" starttime="20201117 14:47:40.818" endtime="20201117 14:47:40.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.835" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.834" endtime="20201117 14:47:40.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.837" level="INFO">VALUE: [4.900000000000043e-05, 4.916699999999927e-05, 4.956900000000278e-05, 4.86940000000019e-05, 4.9181000000002306e-05, 4.866699999999877e-05, 4.8681000000001806e-05, 4.883400000000107e-05, 4.951299999999756e-05, 4.866600000000276e-05, 4.906999999999828e-05, 4.866599999999929e-05, 4.886100000000074e-05, 4.872200000000104e-05, 4.883299999999813e-05, 4.900000000000043e-05, 4.916699999999927e-05, 4.888899999999988e-05, 4.931899999999906e-05, 4.952800000000007e-05, 4.95140000000005e-05, 4.890199999999997e-05, 4.948599999999789e-05, 4.911099999999752e-05, 4.934800000000114e-05, 4.886100000000074e-05, 4.9487000000000836e-05, 4.934700000000167e-05, 4.892999999999911e-05, 4.918000000000283e-05, 4.949999999999746e-05, 4.900000000000043e-05, 4.916599999999979e-05, 4.950000000000093e-05, 4.948600000000136e-05, 4.913900000000013e-05, 4.859700000000092e-05, 4.95140000000005e-05, 4.868099999999834e-05, 4.88469999999977e-05, 4.86529999999992e-05, 4.916699999999927e-05, 4.931999999999853e-05, 4.934799999999767e-05, 4.869399999999843e-05, 4.949999999999746e-05, 4.866599999999929e-05, 4.955599999999921e-05, 4.898600000000086e-05, 4.88469999999977e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.836" endtime="20201117 14:47:40.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.831" endtime="20201117 14:47:40.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.841" endtime="20201117 14:47:40.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.844" endtime="20201117 14:47:40.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.843" endtime="20201117 14:47:40.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.839" endtime="20201117 14:47:40.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.471" endtime="20201117 14:47:40.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.469" endtime="20201117 14:47:40.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.468" endtime="20201117 14:47:40.865"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.868" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.881" endtime="20201117 14:47:40.898"></status>
</kw>
<msg timestamp="20201117 14:47:40.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.879" endtime="20201117 14:47:40.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.900" endtime="20201117 14:47:40.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.902" endtime="20201117 14:47:40.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.872" endtime="20201117 14:47:40.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.870" endtime="20201117 14:47:40.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.912" endtime="20201117 14:47:41.199"></status>
</kw>
<msg timestamp="20201117 14:47:41.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029279292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029329444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.910" endtime="20201117 14:47:41.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029279292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029329444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.203" endtime="20201117 14:47:41.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.212" endtime="20201117 14:47:41.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.907" endtime="20201117 14:47:41.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.905" endtime="20201117 14:47:41.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.219" level="INFO">${RESULT} = [{'time': 0.029329444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.015200000000122e-05, 'source_diff': 5.015200000000122e-05}, {'time': 0.029393486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:41.216" endtime="20201117 14:47:41.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.234" level="INFO">${ACCURACY} = {'time': [0.029329444, 0.029393486, 0.029448472, 0.029506472, 0.029568486, 0.029630486, 0.029687486, 0.029751514, 0.0298075, 0.029870514, 0.029932514, 0.029994528, 0.030054528, 0.030118542, 0.03018054...</msg>
<status status="PASS" starttime="20201117 14:47:41.220" endtime="20201117 14:47:41.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.239" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.238" endtime="20201117 14:47:41.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.241" level="INFO">VALUE: [5.015200000000122e-05, 5.019399999999993e-05, 5.009699999999895e-05, 4.967999999999986e-05, 4.98330000000026e-05, 4.993000000000011e-05, 4.999999999999796e-05, 4.969499999999891e-05, 5.031900000000006e-05, 4.968099999999934e-05, 5.031999999999953e-05, 5.0014000000001e-05, 4.983400000000207e-05, 5.0181000000003306e-05, 4.98200000000025e-05, 5.018000000000036e-05, 5.016700000000027e-05, 4.98469999999987e-05, 5.049999999999846e-05, 4.984700000000217e-05, 5.034700000000267e-05, 5.05279999999976e-05, 4.983299999999913e-05, 4.986100000000174e-05, 4.968099999999934e-05, 5.03469999999992e-05, 4.96530000000002e-05, 5.0014000000001e-05, 5.0320000000003e-05, 4.98469999999987e-05, 5.034799999999867e-05, 5.019499999999941e-05, 4.968099999999587e-05, 5.0193999999996464e-05, 5.000000000000143e-05, 4.970800000000247e-05, 4.986100000000521e-05, 4.98469999999987e-05, 5.033299999999963e-05, 5.016600000000426e-05, 5.033299999999963e-05, 4.968000000000333e-05, 5.01669999999968e-05, 5.052799999999413e-05, 5.034700000000614e-05, 5.05140000000015e-05, 4.9681000000002806e-05, 5.051399999999456e-05, 4.968099999999587e-05, 5.05140000000015e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.240" endtime="20201117 14:47:41.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.235" endtime="20201117 14:47:41.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.245" endtime="20201117 14:47:41.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.248" endtime="20201117 14:47:41.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.247" endtime="20201117 14:47:41.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.243" endtime="20201117 14:47:41.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.868" endtime="20201117 14:47:41.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.867" endtime="20201117 14:47:41.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.866" endtime="20201117 14:47:41.270"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.272" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.281" endtime="20201117 14:47:41.298"></status>
</kw>
<msg timestamp="20201117 14:47:41.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.279" endtime="20201117 14:47:41.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.300" endtime="20201117 14:47:41.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.302" endtime="20201117 14:47:41.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.276" endtime="20201117 14:47:41.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.274" endtime="20201117 14:47:41.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.312" endtime="20201117 14:47:41.599"></status>
</kw>
<msg timestamp="20201117 14:47:41.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025310028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025361347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.310" endtime="20201117 14:47:41.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025310028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025361347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.603" endtime="20201117 14:47:41.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.612" endtime="20201117 14:47:41.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.308" endtime="20201117 14:47:41.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.306" endtime="20201117 14:47:41.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.619" level="INFO">${RESULT} = [{'time': 0.025361347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.131900000000106e-05, 'source_diff': 5.131900000000106e-05}, {'time': 0.025417347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:41.615" endtime="20201117 14:47:41.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.632" level="INFO">${ACCURACY} = {'time': [0.025361347, 0.025417347, 0.025474375, 0.025533375, 0.025592389, 0.025653375, 0.025717458, 0.025772403, 0.025832403, 0.025895403, 0.025958431, 0.026018417, 0.026076431, 0.026139431, 0.026199...</msg>
<status status="PASS" starttime="20201117 14:47:41.620" endtime="20201117 14:47:41.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.637" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.636" endtime="20201117 14:47:41.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.639" level="INFO">VALUE: [5.131900000000106e-05, 5.133300000000063e-05, 5.118100000000084e-05, 5.13470000000002e-05, 5.151399999999903e-05, 5.115299999999823e-05, 5.122200000000007e-05, 5.066700000000077e-05, 5.080600000000046e-05, 5.148599999999989e-05, 5.151399999999903e-05, 5.130599999999749e-05, 5.066700000000077e-05, 5.14729999999998e-05, 5.133299999999716e-05, 5.083300000000013e-05, 5.150000000000293e-05, 5.066600000000129e-05, 5.099999999999896e-05, 5.100000000000243e-05, 5.11669999999978e-05, 5.06669999999973e-05, 5.151399999999903e-05, 5.126400000000225e-05, 5.1014000000002e-05, 5.080600000000046e-05, 5.073599999999914e-05, 5.148599999999989e-05, 5.145899999999676e-05, 5.091700000000102e-05, 5.100000000000243e-05, 5.082000000000003e-05, 5.148599999999989e-05, 5.066600000000129e-05, 5.13470000000002e-05, 5.099999999999896e-05, 5.115299999999823e-05, 5.066600000000129e-05, 5.1014000000002e-05, 5.099999999999896e-05, 5.084700000000317e-05, 5.06669999999973e-05, 5.099999999999896e-05, 5.132000000000053e-05, 5.14729999999998e-05, 5.099999999999896e-05, 5.083400000000307e-05, 5.06669999999973e-05, 5.08339999999996e-05, 5.113899999999866e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.638" endtime="20201117 14:47:41.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.633" endtime="20201117 14:47:41.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.643" endtime="20201117 14:47:41.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.647" endtime="20201117 14:47:41.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.645" endtime="20201117 14:47:41.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.641" endtime="20201117 14:47:41.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.273" endtime="20201117 14:47:41.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.271" endtime="20201117 14:47:41.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.270" endtime="20201117 14:47:41.668"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.670" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.679" endtime="20201117 14:47:41.696"></status>
</kw>
<msg timestamp="20201117 14:47:41.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.677" endtime="20201117 14:47:41.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.698" endtime="20201117 14:47:41.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.700" endtime="20201117 14:47:41.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.674" endtime="20201117 14:47:41.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.672" endtime="20201117 14:47:41.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.710" endtime="20201117 14:47:41.996"></status>
</kw>
<msg timestamp="20201117 14:47:41.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024811806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024864111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.708" endtime="20201117 14:47:42.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024811806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024864111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.001" endtime="20201117 14:47:42.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.009" endtime="20201117 14:47:42.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.705" endtime="20201117 14:47:42.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.704" endtime="20201117 14:47:42.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.016" level="INFO">${RESULT} = [{'time': 0.024864111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.230500000000249e-05, 'source_diff': 5.230500000000249e-05}, {'time': 0.024928111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:42.013" endtime="20201117 14:47:42.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.030" level="INFO">${ACCURACY} = {'time': [0.024864111, 0.024928111, 0.024986125, 0.025049111, 0.025110125, 0.025167125, 0.025227167, 0.025288139, 0.025354153, 0.025413167, 0.025470167, 0.025532167, 0.025592194, 0.025656208, 0.025713...</msg>
<status status="PASS" starttime="20201117 14:47:42.017" endtime="20201117 14:47:42.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.034" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.033" endtime="20201117 14:47:42.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.037" level="INFO">VALUE: [5.230500000000249e-05, 5.21669999999988e-05, 5.219400000000193e-05, 5.233299999999816e-05, 5.183300000000113e-05, 5.231899999999859e-05, 5.204200000000214e-05, 5.216700000000227e-05, 5.251400000000003e-05, 5.184800000000017e-05, 5.21669999999988e-05, 5.216700000000227e-05, 5.229099999999945e-05, 5.1679999999998394e-05, 5.236100000000077e-05, 5.1665999999998824e-05, 5.180499999999852e-05, 5.1665999999998824e-05, 5.2165999999999324e-05, 5.2485999999997424e-05, 5.201399999999953e-05, 5.20279999999991e-05, 5.236100000000077e-05, 5.23470000000012e-05, 5.234699999999773e-05, 5.2499999999996994e-05, 5.201399999999953e-05, 5.199999999999996e-05, 5.168099999999787e-05, 5.2207999999998034e-05, 5.213899999999966e-05, 5.176299999999981e-05, 5.18470000000007e-05, 5.250000000000046e-05, 5.198600000000039e-05, 5.199999999999996e-05, 5.159700000000045e-05, 5.2193999999998464e-05, 5.230499999999902e-05, 5.170900000000048e-05, 5.250000000000046e-05, 5.16669999999983e-05, 5.183300000000113e-05, 5.186100000000027e-05, 5.21669999999988e-05, 5.165299999999873e-05, 5.199999999999996e-05, 5.21669999999988e-05, 5.250000000000046e-05, 5.251400000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.035" endtime="20201117 14:47:42.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.031" endtime="20201117 14:47:42.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.041" endtime="20201117 14:47:42.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.044" endtime="20201117 14:47:42.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.043" endtime="20201117 14:47:42.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.039" endtime="20201117 14:47:42.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.671" endtime="20201117 14:47:42.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.669" endtime="20201117 14:47:42.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.668" endtime="20201117 14:47:42.065"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.068" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.077" endtime="20201117 14:47:42.094"></status>
</kw>
<msg timestamp="20201117 14:47:42.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.075" endtime="20201117 14:47:42.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.096" endtime="20201117 14:47:42.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.099" endtime="20201117 14:47:42.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.072" endtime="20201117 14:47:42.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.070" endtime="20201117 14:47:42.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.108" endtime="20201117 14:47:42.395"></status>
</kw>
<msg timestamp="20201117 14:47:42.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025778611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025831764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.106" endtime="20201117 14:47:42.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025778611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025831764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.400" endtime="20201117 14:47:42.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.408" endtime="20201117 14:47:42.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.104" endtime="20201117 14:47:42.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.102" endtime="20201117 14:47:42.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.415" level="INFO">${RESULT} = [{'time': 0.025831764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.315300000000023e-05, 'source_diff': 5.315300000000023e-05}, {'time': 0.02589175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:42.412" endtime="20201117 14:47:42.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.429" level="INFO">${ACCURACY} = {'time': [0.025831764, 0.02589175, 0.025953764, 0.026015778, 0.026076778, 0.026135778, 0.026202792, 0.026266806, 0.026325819, 0.026392819, 0.026452819, 0.026512833, 0.026573875, 0.026636861, 0.0266988...</msg>
<status status="PASS" starttime="20201117 14:47:42.417" endtime="20201117 14:47:42.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.434" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.433" endtime="20201117 14:47:42.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.436" level="INFO">VALUE: [5.315300000000023e-05, 5.266700000000277e-05, 5.298600000000139e-05, 5.351400000000103e-05, 5.279199999999942e-05, 5.2985999999997924e-05, 5.31669999999998e-05, 5.348700000000137e-05, 5.3179999999999894e-05, 5.300000000000096e-05, 5.2999999999997494e-05, 5.2679999999999394e-05, 5.337500000000134e-05, 5.35280000000006e-05, 5.333300000000263e-05, 5.261100000000102e-05, 5.318099999999937e-05, 5.269500000000191e-05, 5.268099999999887e-05, 5.351400000000103e-05, 5.350000000000146e-05, 5.334699999999873e-05, 5.350000000000146e-05, 5.301400000000053e-05, 5.28479999999977e-05, 5.3179999999999894e-05, 5.298700000000087e-05, 5.283300000000213e-05, 5.284699999999823e-05, 5.300000000000096e-05, 5.334699999999873e-05, 5.329100000000045e-05, 5.281899999999909e-05, 5.327800000000035e-05, 5.301400000000053e-05, 5.283300000000213e-05, 5.319499999999894e-05, 5.333299999999916e-05, 5.350000000000146e-05, 5.315300000000023e-05, 5.30280000000001e-05, 5.261100000000102e-05, 5.315300000000023e-05, 5.348700000000137e-05, 5.287499999999737e-05, 5.300000000000096e-05, 5.35280000000006e-05, 5.3179999999999894e-05, 5.351400000000103e-05, 5.333300000000263e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.435" endtime="20201117 14:47:42.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.430" endtime="20201117 14:47:42.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.440" endtime="20201117 14:47:42.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.443" endtime="20201117 14:47:42.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.442" endtime="20201117 14:47:42.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.438" endtime="20201117 14:47:42.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.068" endtime="20201117 14:47:42.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.066" endtime="20201117 14:47:42.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.066" endtime="20201117 14:47:42.464"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.467" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.475" endtime="20201117 14:47:42.492"></status>
</kw>
<msg timestamp="20201117 14:47:42.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.474" endtime="20201117 14:47:42.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.494" endtime="20201117 14:47:42.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.496" endtime="20201117 14:47:42.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.471" endtime="20201117 14:47:42.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.469" endtime="20201117 14:47:42.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.506" endtime="20201117 14:47:42.793"></status>
</kw>
<msg timestamp="20201117 14:47:42.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024865014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024919028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.504" endtime="20201117 14:47:42.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024865014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024919028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.797" endtime="20201117 14:47:42.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.806" endtime="20201117 14:47:42.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.501" endtime="20201117 14:47:42.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.500" endtime="20201117 14:47:42.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.813" level="INFO">${RESULT} = [{'time': 0.024919028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4013999999998064e-05, 'source_diff': 5.4013999999998064e-05}, {'time': 0.024979, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:42.810" endtime="20201117 14:47:42.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.828" level="INFO">${ACCURACY} = {'time': [0.024919028, 0.024979, 0.025047014, 0.025115014, 0.025175042, 0.025234042, 0.025295069, 0.025360042, 0.025427056, 0.025494069, 0.025554069, 0.025620069, 0.025685111, 0.025753153, 0.025813125...</msg>
<status status="PASS" starttime="20201117 14:47:42.814" endtime="20201117 14:47:42.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.833" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.832" endtime="20201117 14:47:42.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.836" level="INFO">VALUE: [5.4013999999998064e-05, 5.450000000000246e-05, 5.4013999999998064e-05, 5.382000000000303e-05, 5.450000000000246e-05, 5.451400000000203e-05, 5.38609999999988e-05, 5.3999999999998494e-05, 5.401400000000153e-05, 5.3680000000000394e-05, 5.384699999999923e-05, 5.3999999999998494e-05, 5.38609999999988e-05, 5.372200000000257e-05, 5.383299999999966e-05, 5.415300000000123e-05, 5.3999999999998494e-05, 5.369499999999944e-05, 5.433300000000016e-05, 5.38609999999988e-05, 5.4458000000000284e-05, 5.418100000000037e-05, 5.408400000000285e-05, 5.43479999999992e-05, 5.4499999999998994e-05, 5.368099999999987e-05, 5.39869999999984e-05, 5.4221999999999604e-05, 5.4180000000000894e-05, 5.4165999999997855e-05, 5.4193999999996995e-05, 5.365300000000073e-05, 5.4179999999997425e-05, 5.41670000000008e-05, 5.36670000000003e-05, 5.41670000000008e-05, 5.451400000000203e-05, 5.368099999999987e-05, 5.419499999999994e-05, 5.4499999999998994e-05, 5.4527999999998134e-05, 5.43479999999992e-05, 5.38609999999988e-05, 5.4180000000000894e-05, 5.434699999999973e-05, 5.450000000000246e-05, 5.3680000000000394e-05, 5.3651999999997785e-05, 5.3985999999998924e-05, 5.3680000000000394e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.834" endtime="20201117 14:47:42.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.829" endtime="20201117 14:47:42.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.839" endtime="20201117 14:47:42.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.842" endtime="20201117 14:47:42.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.841" endtime="20201117 14:47:42.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.837" endtime="20201117 14:47:42.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.468" endtime="20201117 14:47:42.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.466" endtime="20201117 14:47:42.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.465" endtime="20201117 14:47:42.864"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.866" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.874" endtime="20201117 14:47:42.892"></status>
</kw>
<msg timestamp="20201117 14:47:42.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.873" endtime="20201117 14:47:42.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.894" endtime="20201117 14:47:42.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.896" endtime="20201117 14:47:42.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.870" endtime="20201117 14:47:42.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.868" endtime="20201117 14:47:42.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.906" endtime="20201117 14:47:43.193"></status>
</kw>
<msg timestamp="20201117 14:47:43.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024821556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024876542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.904" endtime="20201117 14:47:43.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024821556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024876542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.197" endtime="20201117 14:47:43.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.206" endtime="20201117 14:47:43.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.901" endtime="20201117 14:47:43.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.899" endtime="20201117 14:47:43.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.213" level="INFO">${RESULT} = [{'time': 0.024876542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4985999999999924e-05, 'source_diff': 5.4985999999999924e-05}, {'time': 0.024937528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:43.209" endtime="20201117 14:47:43.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.226" level="INFO">${ACCURACY} = {'time': [0.024876542, 0.024937528, 0.025004542, 0.025069556, 0.025133556, 0.025194556, 0.025256597, 0.025321569, 0.025388583, 0.025454583, 0.025521597, 0.025589597, 0.025654625, 0.025714625, 0.025775...</msg>
<status status="PASS" starttime="20201117 14:47:43.214" endtime="20201117 14:47:43.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.231" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.230" endtime="20201117 14:47:43.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.234" level="INFO">VALUE: [5.4985999999999924e-05, 5.5499999999999994e-05, 5.518100000000137e-05, 5.479200000000142e-05, 5.533400000000063e-05, 5.5499999999999994e-05, 5.4972000000000354e-05, 5.533299999999769e-05, 5.5513999999999564e-05, 5.4999999999999494e-05, 5.5499999999999994e-05, 5.531899999999812e-05, 5.468100000000087e-05, 5.534700000000073e-05, 5.481900000000109e-05, 5.484700000000023e-05, 5.536199999999977e-05, 5.533400000000063e-05, 5.4999999999999494e-05, 5.5527999999999134e-05, 5.481999999999709e-05, 5.4722000000000104e-05, 5.483400000000013e-05, 5.5236000000000174e-05, 5.484700000000023e-05, 5.534700000000073e-05, 5.5208000000001034e-05, 5.4666000000001824e-05, 5.468100000000087e-05, 5.533299999999769e-05, 5.534700000000073e-05, 5.483299999999719e-05, 5.536099999999683e-05, 5.484700000000023e-05, 5.5527999999999134e-05, 5.481999999999709e-05, 5.506900000000134e-05, 5.487500000000284e-05, 5.53610000000003e-05, 5.551300000000009e-05, 5.5499999999999994e-05, 5.5180000000001894e-05, 5.5180000000001894e-05, 5.487499999999937e-05, 5.4999999999999494e-05, 5.46670000000013e-05, 5.481900000000109e-05, 5.5527999999999134e-05, 5.533300000000116e-05, 5.501400000000253e-05]</msg>
<status status="PASS" starttime="20201117 14:47:43.232" endtime="20201117 14:47:43.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.227" endtime="20201117 14:47:43.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.237" endtime="20201117 14:47:43.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.241" endtime="20201117 14:47:43.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.239" endtime="20201117 14:47:43.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.235" endtime="20201117 14:47:43.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.867" endtime="20201117 14:47:43.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.865" endtime="20201117 14:47:43.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.864" endtime="20201117 14:47:43.262"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.264" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.273" endtime="20201117 14:47:43.290"></status>
</kw>
<msg timestamp="20201117 14:47:43.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.271" endtime="20201117 14:47:43.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.292" endtime="20201117 14:47:43.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.295" endtime="20201117 14:47:43.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.268" endtime="20201117 14:47:43.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.266" endtime="20201117 14:47:43.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.304" endtime="20201117 14:47:43.592"></status>
</kw>
<msg timestamp="20201117 14:47:43.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025292472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025348944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.303" endtime="20201117 14:47:43.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025292472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025348944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.596" endtime="20201117 14:47:43.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.604" endtime="20201117 14:47:43.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.300" endtime="20201117 14:47:43.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.298" endtime="20201117 14:47:43.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.611" level="INFO">${RESULT} = [{'time': 0.025348944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6472000000001854e-05, 'source_diff': 5.6472000000001854e-05}, {'time': 0.025419972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:43.608" endtime="20201117 14:47:43.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.625" level="INFO">${ACCURACY} = {'time': [0.025348944, 0.025419972, 0.025483972, 0.025545972, 0.025610986, 0.025670986, 0.025738, 0.025806014, 0.025876028, 0.025937014, 0.026005028, 0.026073042, 0.026136056, 0.026199056, 0.026261097...</msg>
<status status="PASS" starttime="20201117 14:47:43.613" endtime="20201117 14:47:43.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.630" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.629" endtime="20201117 14:47:43.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.632" level="INFO">VALUE: [5.6472000000001854e-05, 5.634699999999826e-05, 5.634700000000173e-05, 5.563899999999969e-05, 5.5679999999998925e-05, 5.58610000000008e-05, 5.584700000000123e-05, 5.584699999999776e-05, 5.584699999999776e-05, 5.6486000000001424e-05, 5.583400000000113e-05, 5.615299999999976e-05, 5.64870000000009e-05, 5.616699999999933e-05, 5.5708000000001534e-05, 5.613900000000019e-05, 5.583300000000166e-05, 5.6179999999999425e-05, 5.5666000000002824e-05, 5.634700000000173e-05, 5.6000000000000494e-05, 5.60280000000031e-05, 5.583300000000166e-05, 5.6500000000000994e-05, 5.581899999999862e-05, 5.6528000000000134e-05, 5.633299999999869e-05, 5.583399999999766e-05, 5.6514000000000564e-05, 5.615299999999976e-05, 5.652700000000066e-05, 5.64870000000009e-05, 5.601300000000059e-05, 5.5693999999998495e-05, 5.6014000000000064e-05, 5.583299999999819e-05, 5.606999999999834e-05, 5.565299999999926e-05, 5.615299999999976e-05, 5.583299999999819e-05, 5.581899999999862e-05, 5.56809999999984e-05, 5.584700000000123e-05, 5.584699999999776e-05, 5.5777999999999384e-05, 5.636200000000077e-05, 5.6000000000000494e-05, 5.6514000000000564e-05, 5.6165999999999855e-05, 5.651300000000109e-05]</msg>
<status status="PASS" starttime="20201117 14:47:43.631" endtime="20201117 14:47:43.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.626" endtime="20201117 14:47:43.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.636" endtime="20201117 14:47:43.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.639" endtime="20201117 14:47:43.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.638" endtime="20201117 14:47:43.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.634" endtime="20201117 14:47:43.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.265" endtime="20201117 14:47:43.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.263" endtime="20201117 14:47:43.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.262" endtime="20201117 14:47:43.660"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.663" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.672" endtime="20201117 14:47:43.690"></status>
</kw>
<msg timestamp="20201117 14:47:43.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.670" endtime="20201117 14:47:43.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.691" endtime="20201117 14:47:43.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.694" endtime="20201117 14:47:43.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.668" endtime="20201117 14:47:43.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.665" endtime="20201117 14:47:43.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.703" endtime="20201117 14:47:43.989"></status>
</kw>
<msg timestamp="20201117 14:47:43.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026029431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026086736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.702" endtime="20201117 14:47:43.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026029431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026086736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.993" endtime="20201117 14:47:44.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.002" endtime="20201117 14:47:44.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.699" endtime="20201117 14:47:44.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.697" endtime="20201117 14:47:44.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.009" level="INFO">${RESULT} = [{'time': 0.026086736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.730500000000055e-05, 'source_diff': 5.730500000000055e-05}, {'time': 0.026157736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:44.006" endtime="20201117 14:47:44.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.023" level="INFO">${ACCURACY} = {'time': [0.026086736, 0.026157736, 0.02622875, 0.02629975, 0.026370764, 0.026431833, 0.026496792, 0.026558819, 0.026620792, 0.026681806, 0.026748806, 0.026812833, 0.026877819, 0.026941833, 0.02700284...</msg>
<status status="PASS" starttime="20201117 14:47:44.010" endtime="20201117 14:47:44.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.028" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.027" endtime="20201117 14:47:44.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.030" level="INFO">VALUE: [5.730500000000055e-05, 5.7000000000001494e-05, 5.6999999999998024e-05, 5.716700000000033e-05, 5.7500000000001994e-05, 5.6735999999998205e-05, 5.7514000000001564e-05, 5.73610000000023e-05, 5.7333999999999163e-05, 5.684799999999823e-05, 5.683399999999866e-05, 5.680500000000005e-05, 5.7152000000001285e-05, 5.734699999999926e-05, 5.687500000000137e-05, 5.7221999999999135e-05, 5.683299999999919e-05, 5.686099999999833e-05, 5.736099999999883e-05, 5.7013999999997594e-05, 5.7014000000001064e-05, 5.734699999999926e-05, 5.73610000000023e-05, 5.666699999999983e-05, 5.734799999999873e-05, 5.694499999999922e-05, 5.7499999999998525e-05, 5.7193999999999995e-05, 5.6693999999999495e-05, 5.7485999999998955e-05, 5.7180000000000425e-05, 5.6666000000000355e-05, 5.7000000000001494e-05, 5.68610000000018e-05, 5.7514000000001564e-05, 5.669499999999897e-05, 5.733299999999969e-05, 5.734699999999926e-05, 5.6999999999998024e-05, 5.7514000000001564e-05, 5.6819999999999093e-05, 5.71809999999999e-05, 5.737500000000187e-05, 5.734700000000273e-05, 5.7165999999997386e-05, 5.7513999999998094e-05, 5.7556000000000274e-05, 5.683299999999919e-05, 5.733299999999969e-05, 5.7180000000000425e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.029" endtime="20201117 14:47:44.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.024" endtime="20201117 14:47:44.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.034" endtime="20201117 14:47:44.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.037" endtime="20201117 14:47:44.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.035" endtime="20201117 14:47:44.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.032" endtime="20201117 14:47:44.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.664" endtime="20201117 14:47:44.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.662" endtime="20201117 14:47:44.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.661" endtime="20201117 14:47:44.059"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.061" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.070" endtime="20201117 14:47:44.087"></status>
</kw>
<msg timestamp="20201117 14:47:44.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.068" endtime="20201117 14:47:44.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.088" endtime="20201117 14:47:44.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.091" endtime="20201117 14:47:44.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.066" endtime="20201117 14:47:44.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.063" endtime="20201117 14:47:44.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.100" endtime="20201117 14:47:44.388"></status>
</kw>
<msg timestamp="20201117 14:47:44.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025252083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025310083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.099" endtime="20201117 14:47:44.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025252083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025310083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.392" endtime="20201117 14:47:44.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.401" endtime="20201117 14:47:44.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.096" endtime="20201117 14:47:44.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.094" endtime="20201117 14:47:44.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.408" level="INFO">${RESULT} = [{'time': 0.025310083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7999999999999025e-05, 'source_diff': 5.7999999999999025e-05}, {'time': 0.025379083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:44.404" endtime="20201117 14:47:44.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.423" level="INFO">${ACCURACY} = {'time': [0.025310083, 0.025379083, 0.025445097, 0.025514111, 0.025586111, 0.025651139, 0.025722125, 0.025792153, 0.025861139, 0.025933167, 0.026004167, 0.026074167, 0.026146194, 0.026213181, 0.026280...</msg>
<status status="PASS" starttime="20201117 14:47:44.409" endtime="20201117 14:47:44.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.428" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.427" endtime="20201117 14:47:44.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.430" level="INFO">VALUE: [5.7999999999999025e-05, 5.7666000000001355e-05, 5.781900000000062e-05, 5.7679999999997456e-05, 5.815300000000176e-05, 5.769499999999997e-05, 5.761099999999908e-05, 5.819500000000047e-05, 5.812499999999915e-05, 5.766700000000083e-05, 5.78480000000027e-05, 5.815299999999829e-05, 5.836099999999983e-05, 5.815299999999829e-05, 5.7999999999999025e-05, 5.830500000000155e-05, 5.8527999999998664e-05, 5.7665999999997886e-05, 5.8499999999999525e-05, 5.816700000000133e-05, 5.81810000000009e-05, 5.8028000000001634e-05, 5.766699999999736e-05, 5.8000000000002494e-05, 5.7749999999998775e-05, 5.8014000000002064e-05, 5.8499999999999525e-05, 5.81810000000009e-05, 5.8166000000001855e-05, 5.7679999999997456e-05, 5.809700000000001e-05, 5.8556000000001274e-05, 5.8541999999998234e-05, 5.7929999999997706e-05, 5.783300000000019e-05, 5.8485999999999955e-05, 5.8041999999997734e-05, 5.784699999999976e-05, 5.786099999999933e-05, 5.8499999999999525e-05, 5.812500000000262e-05, 5.8499999999999525e-05, 5.8320000000000594e-05, 5.8513999999999095e-05, 5.8320000000000594e-05, 5.7694000000000495e-05, 5.8485999999999955e-05, 5.8014000000002064e-05, 5.8499999999999525e-05, 5.7971999999999885e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.429" endtime="20201117 14:47:44.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.424" endtime="20201117 14:47:44.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.434" endtime="20201117 14:47:44.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.437" endtime="20201117 14:47:44.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.436" endtime="20201117 14:47:44.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.432" endtime="20201117 14:47:44.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.062" endtime="20201117 14:47:44.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.060" endtime="20201117 14:47:44.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.059" endtime="20201117 14:47:44.459"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.461" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.470" endtime="20201117 14:47:44.486"></status>
</kw>
<msg timestamp="20201117 14:47:44.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.468" endtime="20201117 14:47:44.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.488" endtime="20201117 14:47:44.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.491" endtime="20201117 14:47:44.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.465" endtime="20201117 14:47:44.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.463" endtime="20201117 14:47:44.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.500" endtime="20201117 14:47:44.787"></status>
</kw>
<msg timestamp="20201117 14:47:44.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025003944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025063597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.499" endtime="20201117 14:47:44.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025003944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025063597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.791" endtime="20201117 14:47:44.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.800" endtime="20201117 14:47:44.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.496" endtime="20201117 14:47:44.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.494" endtime="20201117 14:47:44.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.806" level="INFO">${RESULT} = [{'time': 0.025063597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.965299999999979e-05, 'source_diff': 5.965299999999979e-05}, {'time': 0.025132611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:44.803" endtime="20201117 14:47:44.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.820" level="INFO">${ACCURACY} = {'time': [0.025063597, 0.025132611, 0.025201625, 0.025270625, 0.025338611, 0.025411625, 0.025483639, 0.025555653, 0.025628667, 0.025691653, 0.025760667, 0.025827681, 0.025892681, 0.025958694, 0.026024...</msg>
<status status="PASS" starttime="20201117 14:47:44.808" endtime="20201117 14:47:44.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.825" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.824" endtime="20201117 14:47:44.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.828" level="INFO">VALUE: [5.965299999999979e-05, 5.883299999999772e-05, 5.8693999999998026e-05, 5.886100000000033e-05, 5.933300000000169e-05, 5.9472000000001385e-05, 5.884699999999729e-05, 5.934700000000126e-05, 5.869500000000097e-05, 5.866699999999836e-05, 5.9292000000002454e-05, 5.9014000000003064e-05, 5.866700000000183e-05, 5.8972000000000885e-05, 5.9000000000000025e-05, 5.9027999999999164e-05, 5.933299999999822e-05, 5.9165999999999386e-05, 5.9514000000000095e-05, 5.933299999999822e-05, 5.9013999999999595e-05, 5.916699999999886e-05, 5.918099999999843e-05, 5.8986000000000455e-05, 5.918099999999843e-05, 5.8834000000000664e-05, 5.9486000000000955e-05, 5.9514000000000095e-05, 5.944499999999825e-05, 5.9193999999998526e-05, 5.934700000000126e-05, 5.8694000000001495e-05, 5.9514000000000095e-05, 5.934700000000126e-05, 5.884700000000076e-05, 5.934700000000126e-05, 5.918099999999843e-05, 5.913899999999972e-05, 5.934700000000126e-05, 5.916699999999886e-05, 5.8848000000000233e-05, 5.9500000000000525e-05, 5.9499999999997055e-05, 5.88749999999999e-05, 5.9000000000000025e-05, 5.8679999999998456e-05, 5.9165999999999386e-05, 5.9027999999999164e-05, 5.934700000000126e-05, 5.883299999999772e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.826" endtime="20201117 14:47:44.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.821" endtime="20201117 14:47:44.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.831" endtime="20201117 14:47:44.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.835" endtime="20201117 14:47:44.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.833" endtime="20201117 14:47:44.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.830" endtime="20201117 14:47:44.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.462" endtime="20201117 14:47:44.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.460" endtime="20201117 14:47:44.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.459" endtime="20201117 14:47:44.856"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.858" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.867" endtime="20201117 14:47:44.884"></status>
</kw>
<msg timestamp="20201117 14:47:44.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.865" endtime="20201117 14:47:44.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.886" endtime="20201117 14:47:44.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.888" endtime="20201117 14:47:44.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.863" endtime="20201117 14:47:44.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.860" endtime="20201117 14:47:44.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.898" endtime="20201117 14:47:45.185"></status>
</kw>
<msg timestamp="20201117 14:47:45.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025351153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025410958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.896" endtime="20201117 14:47:45.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025351153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025410958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.189" endtime="20201117 14:47:45.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.198" endtime="20201117 14:47:45.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.894" endtime="20201117 14:47:45.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.892" endtime="20201117 14:47:45.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.205" level="INFO">${RESULT} = [{'time': 0.025410958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.980499999999958e-05, 'source_diff': 5.980499999999958e-05}, {'time': 0.025476958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:45.201" endtime="20201117 14:47:45.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.219" level="INFO">${ACCURACY} = {'time': [0.025410958, 0.025476958, 0.025542972, 0.025610972, 0.025685, 0.025757, 0.025823, 0.025891, 0.025958014, 0.026029028, 0.026102028, 0.026176042, 0.026241056, 0.026314056, 0.026385069, 0.02645...</msg>
<status status="PASS" starttime="20201117 14:47:45.206" endtime="20201117 14:47:45.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.224" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.223" endtime="20201117 14:47:45.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.226" level="INFO">VALUE: [5.980499999999958e-05, 5.9943999999999276e-05, 5.9665999999999886e-05, 6.033299999999922e-05, 6.0528000000000665e-05, 6.0291999999999984e-05, 6.0499999999998055e-05, 6.0000000000001025e-05, 6.016699999999986e-05, 5.9999999999997555e-05, 6.016699999999986e-05, 5.9848000000001234e-05, 6.0333999999998694e-05, 5.9833999999998194e-05, 6.051300000000162e-05, 6.0472000000002385e-05, 5.9679999999999456e-05, 6.0014000000000595e-05, 6.034700000000226e-05, 6.0500000000001525e-05, 5.986100000000133e-05, 6.0514000000001095e-05, 6.0000000000001025e-05, 6.0014000000000595e-05, 5.986099999999786e-05, 6.016699999999986e-05, 6.0347999999998264e-05, 5.9986000000001455e-05, 6.0347999999998264e-05, 5.998700000000093e-05, 5.984700000000176e-05, 6.034699999999879e-05, 6.0166000000000386e-05, 5.984699999999829e-05, 6.015300000000029e-05, 6.0514000000001095e-05, 5.965299999999979e-05, 6.0014000000000595e-05, 5.984699999999829e-05, 6.036100000000183e-05, 5.9848000000001234e-05, 6.0347999999998264e-05, 6.045900000000229e-05, 6.0334000000002164e-05, 6.0347999999998264e-05, 5.9833999999998194e-05, 6.0486000000001955e-05, 5.984699999999829e-05, 6.0500000000001525e-05, 5.983300000000219e-05]</msg>
<status status="PASS" starttime="20201117 14:47:45.225" endtime="20201117 14:47:45.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.220" endtime="20201117 14:47:45.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.229" endtime="20201117 14:47:45.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.233" endtime="20201117 14:47:45.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.231" endtime="20201117 14:47:45.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.228" endtime="20201117 14:47:45.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.859" endtime="20201117 14:47:45.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.857" endtime="20201117 14:47:45.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.856" endtime="20201117 14:47:45.254"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.257" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.265" endtime="20201117 14:47:45.283"></status>
</kw>
<msg timestamp="20201117 14:47:45.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.263" endtime="20201117 14:47:45.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.285" endtime="20201117 14:47:45.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.287" endtime="20201117 14:47:45.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.261" endtime="20201117 14:47:45.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.259" endtime="20201117 14:47:45.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.297" endtime="20201117 14:47:45.583"></status>
</kw>
<msg timestamp="20201117 14:47:45.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024963403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025024875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.295" endtime="20201117 14:47:45.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024963403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025024875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.587" endtime="20201117 14:47:45.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.596" endtime="20201117 14:47:45.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.292" endtime="20201117 14:47:45.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.291" endtime="20201117 14:47:45.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.603" level="INFO">${RESULT} = [{'time': 0.025024875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.147199999999992e-05, 'source_diff': 6.147199999999992e-05}, {'time': 0.025097875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:45.600" endtime="20201117 14:47:45.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.616" level="INFO">${ACCURACY} = {'time': [0.025024875, 0.025097875, 0.025167889, 0.025240903, 0.025315972, 0.025385944, 0.025460917, 0.025525944, 0.025595944, 0.025667944, 0.025735958, 0.025808958, 0.025874972, 0.025949986, 0.026023...</msg>
<status status="PASS" starttime="20201117 14:47:45.604" endtime="20201117 14:47:45.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.621" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.620" endtime="20201117 14:47:45.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.624" level="INFO">VALUE: [6.147199999999992e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.118099999999696e-05, 6.156899999999743e-05, 6.154100000000176e-05, 6.066700000000036e-05, 6.0679999999996986e-05, 6.151299999999915e-05, 6.0666000000000886e-05, 6.084699999999929e-05, 6.131900000000065e-05, 6.129099999999804e-05, 6.1014000000001595e-05, 6.115300000000129e-05, 6.105599999999684e-05, 6.116700000000086e-05, 6.132000000000012e-05, 6.1195e-05, 6.0999999999998555e-05, 6.149999999999906e-05, 6.068099999999993e-05, 6.136099999999936e-05, 6.118000000000096e-05, 6.134699999999979e-05, 6.079099999999754e-05, 6.1000000000002025e-05, 6.083299999999972e-05, 6.1000000000002025e-05, 6.083299999999972e-05, 6.0999999999998555e-05, 6.149999999999906e-05, 6.134699999999979e-05, 6.083299999999972e-05, 6.118100000000043e-05, 6.0999999999998555e-05, 6.138900000000197e-05, 6.118100000000043e-05, 6.116699999999739e-05, 6.134700000000326e-05, 6.131899999999718e-05, 6.151399999999863e-05, 6.113899999999825e-05, 6.083299999999972e-05, 6.151399999999863e-05, 6.1000000000002025e-05, 6.0778000000000915e-05, 6.068099999999993e-05, 6.084700000000276e-05, 6.15140000000021e-05]</msg>
<status status="PASS" starttime="20201117 14:47:45.622" endtime="20201117 14:47:45.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.618" endtime="20201117 14:47:45.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.627" endtime="20201117 14:47:45.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.631" endtime="20201117 14:47:45.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.629" endtime="20201117 14:47:45.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.625" endtime="20201117 14:47:45.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.257" endtime="20201117 14:47:45.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.255" endtime="20201117 14:47:45.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.254" endtime="20201117 14:47:45.652"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.654" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.663" endtime="20201117 14:47:45.680"></status>
</kw>
<msg timestamp="20201117 14:47:45.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.661" endtime="20201117 14:47:45.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.682" endtime="20201117 14:47:45.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.684" endtime="20201117 14:47:45.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.659" endtime="20201117 14:47:45.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.656" endtime="20201117 14:47:45.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.694" endtime="20201117 14:47:45.981"></status>
</kw>
<msg timestamp="20201117 14:47:45.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025224528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0252865, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:45.692" endtime="20201117 14:47:45.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025224528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0252865, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:45.986" endtime="20201117 14:47:45.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.994" endtime="20201117 14:47:45.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.690" endtime="20201117 14:47:45.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.688" endtime="20201117 14:47:45.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.001" level="INFO">${RESULT} = [{'time': 0.0252865, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.197200000000042e-05, 'source_diff': 6.197200000000042e-05}, {'time': 0.025359528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:45.997" endtime="20201117 14:47:46.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.016" level="INFO">${ACCURACY} = {'time': [0.0252865, 0.025359528, 0.025429528, 0.025499597, 0.025567542, 0.025637542, 0.025709556, 0.025784569, 0.025852569, 0.025927597, 0.025998583, 0.026067625, 0.026137597, 0.026204611, 0.02627362...</msg>
<status status="PASS" starttime="20201117 14:47:46.002" endtime="20201117 14:47:46.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.021" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.020" endtime="20201117 14:47:46.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.023" level="INFO">VALUE: [6.197200000000042e-05, 6.184700000000029e-05, 6.177799999999845e-05, 6.206899999999793e-05, 6.251399999999963e-05, 6.165299999999832e-05, 6.248699999999996e-05, 6.250000000000006e-05, 6.217999999999849e-05, 6.20279999999987e-05, 6.216599999999892e-05, 6.204200000000173e-05, 6.24439999999983e-05, 6.199999999999956e-05, 6.248599999999702e-05, 6.166699999999789e-05, 6.251399999999963e-05, 6.250000000000006e-05, 6.234800000000026e-05, 6.17499999999993e-05, 6.216699999999839e-05, 6.165199999999885e-05, 6.216599999999892e-05, 6.234699999999732e-05, 6.181900000000115e-05, 6.166599999999842e-05, 6.166600000000189e-05, 6.218099999999796e-05, 6.183300000000072e-05, 6.233299999999775e-05, 6.181900000000115e-05, 6.20279999999987e-05, 6.182000000000062e-05, 6.170900000000007e-05, 6.18340000000002e-05, 6.237499999999993e-05, 6.184799999999976e-05, 6.201299999999965e-05, 6.234700000000079e-05, 6.233299999999775e-05, 6.201399999999913e-05, 6.172200000000017e-05, 6.219400000000153e-05, 6.186099999999986e-05, 6.166700000000136e-05, 6.251399999999963e-05, 6.166700000000136e-05, 6.184700000000029e-05, 6.215299999999882e-05, 6.218100000000143e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.022" endtime="20201117 14:47:46.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.017" endtime="20201117 14:47:46.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.027" endtime="20201117 14:47:46.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.030" endtime="20201117 14:47:46.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.029" endtime="20201117 14:47:46.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.025" endtime="20201117 14:47:46.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.655" endtime="20201117 14:47:46.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.653" endtime="20201117 14:47:46.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.652" endtime="20201117 14:47:46.051"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.054" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.062" endtime="20201117 14:47:46.080"></status>
</kw>
<msg timestamp="20201117 14:47:46.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.061" endtime="20201117 14:47:46.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.082" endtime="20201117 14:47:46.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.089" endtime="20201117 14:47:46.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.058" endtime="20201117 14:47:46.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.056" endtime="20201117 14:47:46.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.098" endtime="20201117 14:47:46.385"></status>
</kw>
<msg timestamp="20201117 14:47:46.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025104931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02516825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:46.097" endtime="20201117 14:47:46.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025104931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02516825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:46.389" endtime="20201117 14:47:46.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.398" endtime="20201117 14:47:46.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.094" endtime="20201117 14:47:46.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.092" endtime="20201117 14:47:46.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.405" level="INFO">${RESULT} = [{'time': 0.02516825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.331899999999918e-05, 'source_diff': 6.331899999999918e-05}, {'time': 0.025239264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:46.401" endtime="20201117 14:47:46.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.419" level="INFO">${ACCURACY} = {'time': [0.02516825, 0.025239264, 0.025315319, 0.025386319, 0.025454278, 0.025524306, 0.025598319, 0.025674319, 0.025746319, 0.025824333, 0.025896333, 0.025972389, 0.026046361, 0.026120361, 0.0261904...</msg>
<status status="PASS" starttime="20201117 14:47:46.406" endtime="20201117 14:47:46.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.423" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.422" endtime="20201117 14:47:46.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.426" level="INFO">VALUE: [6.331899999999918e-05, 6.334700000000179e-05, 6.27219999999977e-05, 6.355499999999986e-05, 6.33340000000017e-05, 6.351400000000063e-05, 6.336100000000136e-05, 6.317999999999949e-05, 6.317999999999949e-05, 6.327700000000047e-05, 6.316599999999992e-05, 6.32219999999982e-05, 6.295800000000185e-05, 6.266700000000236e-05, 6.309699999999807e-05, 6.315299999999982e-05, 6.318099999999896e-05, 6.27080000000016e-05, 6.350000000000106e-05, 6.318099999999896e-05, 6.301400000000013e-05, 6.302700000000022e-05, 6.300000000000056e-05, 6.317999999999949e-05, 6.281899999999868e-05, 6.350000000000106e-05, 6.317999999999949e-05, 6.283299999999825e-05, 6.265299999999932e-05, 6.286099999999739e-05, 6.315299999999982e-05, 6.351400000000063e-05, 6.333299999999875e-05, 6.265299999999932e-05, 6.316699999999939e-05, 6.281999999999816e-05, 6.351399999999716e-05, 6.3276999999997e-05, 6.2889e-05, 6.317999999999949e-05, 6.290299999999957e-05, 6.317999999999949e-05, 6.286100000000086e-05, 6.266699999999889e-05, 6.268100000000193e-05, 6.331900000000265e-05, 6.351400000000063e-05, 6.304200000000273e-05, 6.332000000000212e-05, 6.268100000000193e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.424" endtime="20201117 14:47:46.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.420" endtime="20201117 14:47:46.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.429" endtime="20201117 14:47:46.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.433" endtime="20201117 14:47:46.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.431" endtime="20201117 14:47:46.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.427" endtime="20201117 14:47:46.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.054" endtime="20201117 14:47:46.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.053" endtime="20201117 14:47:46.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.052" endtime="20201117 14:47:46.454"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.456" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.465" endtime="20201117 14:47:46.483"></status>
</kw>
<msg timestamp="20201117 14:47:46.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.463" endtime="20201117 14:47:46.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.485" endtime="20201117 14:47:46.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.487" endtime="20201117 14:47:46.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.460" endtime="20201117 14:47:46.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.458" endtime="20201117 14:47:46.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.496" endtime="20201117 14:47:46.784"></status>
</kw>
<msg timestamp="20201117 14:47:46.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025571194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025635028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.495" endtime="20201117 14:47:46.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025571194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025635028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.788" endtime="20201117 14:47:46.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.797" endtime="20201117 14:47:46.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.492" endtime="20201117 14:47:46.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.490" endtime="20201117 14:47:46.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.804" level="INFO">${RESULT} = [{'time': 0.025635028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.38340000000022e-05, 'source_diff': 6.38340000000022e-05}, {'time': 0.025703028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:46.800" endtime="20201117 14:47:46.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.818" level="INFO">${ACCURACY} = {'time': [0.025635028, 0.025703028, 0.025773028, 0.025844042, 0.025916056, 0.025985056, 0.026060069, 0.026131083, 0.026200083, 0.026273097, 0.026347125, 0.026425111, 0.026502125, 0.026572125, 0.026648...</msg>
<status status="PASS" starttime="20201117 14:47:46.805" endtime="20201117 14:47:46.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.822" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.821" endtime="20201117 14:47:46.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.825" level="INFO">VALUE: [6.38340000000022e-05, 6.366699999999989e-05, 6.383399999999873e-05, 6.418099999999996e-05, 6.368099999999946e-05, 6.401400000000113e-05, 6.377700000000097e-05, 6.418000000000049e-05, 6.434699999999932e-05, 6.366600000000042e-05, 6.369399999999956e-05, 6.401400000000113e-05, 6.450000000000206e-05, 6.366699999999989e-05, 6.448600000000249e-05, 6.379200000000002e-05, 6.444499999999978e-05, 6.359699999999857e-05, 6.451399999999816e-05, 6.400000000000156e-05, 6.419400000000006e-05, 6.436100000000236e-05, 6.413899999999778e-05, 6.37219999999987e-05, 6.383299999999925e-05, 6.416600000000092e-05, 6.418000000000049e-05, 6.362500000000118e-05, 6.434699999999932e-05, 6.383299999999925e-05, 6.368099999999946e-05, 6.400000000000156e-05, 6.427800000000095e-05, 6.45280000000012e-05, 6.416700000000039e-05, 6.416600000000092e-05, 6.383299999999925e-05, 6.383299999999925e-05, 6.401400000000113e-05, 6.433299999999975e-05, 6.368099999999946e-05, 6.433299999999975e-05, 6.430600000000009e-05, 6.383299999999925e-05, 6.411099999999864e-05, 6.451399999999816e-05, 6.374999999999784e-05, 6.401399999999766e-05, 6.450000000000206e-05, 6.37500000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.823" endtime="20201117 14:47:46.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.819" endtime="20201117 14:47:46.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.828" endtime="20201117 14:47:46.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.832" endtime="20201117 14:47:46.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.830" endtime="20201117 14:47:46.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.826" endtime="20201117 14:47:46.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.457" endtime="20201117 14:47:46.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.455" endtime="20201117 14:47:46.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.454" endtime="20201117 14:47:46.853"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.856" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.864" endtime="20201117 14:47:46.882"></status>
</kw>
<msg timestamp="20201117 14:47:46.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.863" endtime="20201117 14:47:46.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.884" endtime="20201117 14:47:46.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.886" endtime="20201117 14:47:46.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.860" endtime="20201117 14:47:46.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.858" endtime="20201117 14:47:46.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.896" endtime="20201117 14:47:47.183"></status>
</kw>
<msg timestamp="20201117 14:47:47.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025576153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025641444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.894" endtime="20201117 14:47:47.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025576153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025641444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.188" endtime="20201117 14:47:47.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.196" endtime="20201117 14:47:47.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.892" endtime="20201117 14:47:47.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.890" endtime="20201117 14:47:47.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.203" level="INFO">${RESULT} = [{'time': 0.025641444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.529099999999857e-05, 'source_diff': 6.529099999999857e-05}, {'time': 0.025713472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:47.200" endtime="20201117 14:47:47.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.217" level="INFO">${ACCURACY} = {'time': [0.025641444, 0.025713472, 0.025782458, 0.025856486, 0.0259275, 0.0259985, 0.0260685, 0.0261465, 0.026222528, 0.026297528, 0.026371528, 0.026441556, 0.026521542, 0.026590556, 0.026664569, 0.0...</msg>
<status status="PASS" starttime="20201117 14:47:47.204" endtime="20201117 14:47:47.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.222" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.221" endtime="20201117 14:47:47.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.224" level="INFO">VALUE: [6.529099999999857e-05, 6.534700000000032e-05, 6.486100000000286e-05, 6.515300000000182e-05, 6.486099999999939e-05, 6.534700000000032e-05, 6.534700000000032e-05, 6.549999999999959e-05, 6.551399999999916e-05, 6.501400000000213e-05, 6.500000000000256e-05, 6.551400000000263e-05, 6.549999999999959e-05, 6.486200000000233e-05, 6.476299999999893e-05, 6.484699999999982e-05, 6.486099999999939e-05, 6.483300000000025e-05, 6.483300000000025e-05, 6.547200000000045e-05, 6.481900000000068e-05, 6.486099999999939e-05, 6.515300000000182e-05, 6.488899999999853e-05, 6.499999999999909e-05, 6.466700000000089e-05, 6.551399999999916e-05, 6.532000000000066e-05, 6.487499999999896e-05, 6.541699999999817e-05, 6.549999999999959e-05, 6.466599999999795e-05, 6.534700000000032e-05, 6.516599999999845e-05, 6.551399999999916e-05, 6.549999999999959e-05, 6.500000000000256e-05, 6.519500000000053e-05, 6.500000000000256e-05, 6.483399999999973e-05, 6.519500000000053e-05, 6.533400000000023e-05, 6.501399999999866e-05, 6.533400000000023e-05, 6.491700000000114e-05, 6.4889000000002e-05, 6.498599999999952e-05, 6.516600000000192e-05, 6.498599999999952e-05, 6.549999999999959e-05]</msg>
<status status="PASS" starttime="20201117 14:47:47.223" endtime="20201117 14:47:47.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.218" endtime="20201117 14:47:47.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.228" endtime="20201117 14:47:47.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.231" endtime="20201117 14:47:47.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.230" endtime="20201117 14:47:47.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.226" endtime="20201117 14:47:47.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.856" endtime="20201117 14:47:47.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.854" endtime="20201117 14:47:47.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.854" endtime="20201117 14:47:47.253"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.255" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.263" endtime="20201117 14:47:47.281"></status>
</kw>
<msg timestamp="20201117 14:47:47.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.262" endtime="20201117 14:47:47.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.283" endtime="20201117 14:47:47.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.285" endtime="20201117 14:47:47.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.259" endtime="20201117 14:47:47.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.257" endtime="20201117 14:47:47.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.294" endtime="20201117 14:47:47.581"></status>
</kw>
<msg timestamp="20201117 14:47:47.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024979097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025045403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.293" endtime="20201117 14:47:47.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024979097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025045403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.585" endtime="20201117 14:47:47.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.593" endtime="20201117 14:47:47.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.290" endtime="20201117 14:47:47.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.288" endtime="20201117 14:47:47.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.601" level="INFO">${RESULT} = [{'time': 0.025045403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.630600000000209e-05, 'source_diff': 6.630600000000209e-05}, {'time': 0.025117417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:47.597" endtime="20201117 14:47:47.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.616" level="INFO">${ACCURACY} = {'time': [0.025045403, 0.025117417, 0.025196417, 0.025273431, 0.025348431, 0.025428444, 0.025501458, 0.025579458, 0.025656486, 0.025734486, 0.025808486, 0.025886514, 0.0259595, 0.026035528, 0.02611054...</msg>
<status status="PASS" starttime="20201117 14:47:47.602" endtime="20201117 14:47:47.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.620" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.619" endtime="20201117 14:47:47.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.624" level="INFO">VALUE: [6.630600000000209e-05, 6.616699999999892e-05, 6.645899999999788e-05, 6.618099999999849e-05, 6.566700000000189e-05, 6.631900000000218e-05, 6.618000000000249e-05, 6.616599999999945e-05, 6.601399999999966e-05, 6.601399999999966e-05, 6.631899999999871e-05, 6.568099999999799e-05, 6.565299999999885e-05, 6.584699999999735e-05, 6.636100000000089e-05, 6.583400000000073e-05, 6.600000000000009e-05, 6.630499999999914e-05, 6.586199999999987e-05, 6.633299999999828e-05, 6.616600000000292e-05, 6.644399999999884e-05, 6.617999999999902e-05, 6.600000000000009e-05, 6.650000000000059e-05, 6.588899999999953e-05, 6.569500000000103e-05, 6.584700000000082e-05, 6.601399999999966e-05, 6.650000000000059e-05, 6.63480000000008e-05, 6.618100000000196e-05, 6.600000000000009e-05, 6.584699999999735e-05, 6.638900000000003e-05, 6.634700000000132e-05, 6.583300000000125e-05, 6.565299999999885e-05, 6.568000000000199e-05, 6.612500000000021e-05, 6.584700000000082e-05, 6.636100000000089e-05, 6.634699999999785e-05, 6.583400000000073e-05, 6.631999999999819e-05, 6.627799999999948e-05, 6.570800000000113e-05, 6.587499999999996e-05, 6.616600000000292e-05, 6.601399999999966e-05]</msg>
<status status="PASS" starttime="20201117 14:47:47.622" endtime="20201117 14:47:47.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.617" endtime="20201117 14:47:47.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.627" endtime="20201117 14:47:47.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.630" endtime="20201117 14:47:47.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.629" endtime="20201117 14:47:47.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.625" endtime="20201117 14:47:47.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.256" endtime="20201117 14:47:47.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.254" endtime="20201117 14:47:47.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.253" endtime="20201117 14:47:47.652"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.654" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.662" endtime="20201117 14:47:47.680"></status>
</kw>
<msg timestamp="20201117 14:47:47.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.661" endtime="20201117 14:47:47.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.681" endtime="20201117 14:47:47.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.684" endtime="20201117 14:47:47.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.658" endtime="20201117 14:47:47.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.656" endtime="20201117 14:47:47.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.693" endtime="20201117 14:47:47.980"></status>
</kw>
<msg timestamp="20201117 14:47:47.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024685972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024752944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.692" endtime="20201117 14:47:47.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024685972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024752944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.984" endtime="20201117 14:47:47.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.993" endtime="20201117 14:47:47.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.689" endtime="20201117 14:47:47.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.687" endtime="20201117 14:47:47.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.999" level="INFO">${RESULT} = [{'time': 0.024752944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.697199999999848e-05, 'source_diff': 6.697199999999848e-05}, {'time': 0.024833958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:47.996" endtime="20201117 14:47:48.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.014" level="INFO">${ACCURACY} = {'time': [0.024752944, 0.024833958, 0.024905972, 0.024984972, 0.025063986, 0.025139014, 0.025221014, 0.025296028, 0.025375028, 0.025456028, 0.025529042, 0.025609056, 0.025684056, 0.025756069, 0.025838...</msg>
<status status="PASS" starttime="20201117 14:47:48.001" endtime="20201117 14:47:48.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.018" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.017" endtime="20201117 14:47:48.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.021" level="INFO">VALUE: [6.697199999999848e-05, 6.733299999999928e-05, 6.699999999999762e-05, 6.665299999999985e-05, 6.716699999999992e-05, 6.736100000000189e-05, 6.750000000000159e-05, 6.684700000000182e-05, 6.734700000000232e-05, 6.715299999999688e-05, 6.666699999999942e-05, 6.683400000000173e-05, 6.716699999999992e-05, 6.733299999999928e-05, 6.741700000000017e-05, 6.750000000000159e-05, 6.686100000000139e-05, 6.745799999999941e-05, 6.666699999999942e-05, 6.751400000000116e-05, 6.700000000000109e-05, 6.736100000000189e-05, 6.718099999999949e-05, 6.68480000000013e-05, 6.687499999999749e-05, 6.733399999999876e-05, 6.750000000000159e-05, 6.701299999999771e-05, 6.701400000000066e-05, 6.666599999999995e-05, 6.67220000000017e-05, 6.747200000000245e-05, 6.700000000000109e-05, 6.701400000000066e-05, 6.680600000000259e-05, 6.712500000000121e-05, 6.669399999999909e-05, 6.682000000000216e-05, 6.669499999999856e-05, 6.67220000000017e-05, 6.733400000000223e-05, 6.695800000000238e-05, 6.695800000000238e-05, 6.734699999999885e-05, 6.751400000000116e-05, 6.733299999999928e-05, 6.722199999999873e-05, 6.75420000000003e-05, 6.706899999999946e-05, 6.701300000000118e-05]</msg>
<status status="PASS" starttime="20201117 14:47:48.019" endtime="20201117 14:47:48.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.015" endtime="20201117 14:47:48.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.024" endtime="20201117 14:47:48.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.028" endtime="20201117 14:47:48.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.026" endtime="20201117 14:47:48.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.022" endtime="20201117 14:47:48.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.655" endtime="20201117 14:47:48.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.653" endtime="20201117 14:47:48.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.652" endtime="20201117 14:47:48.049"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.051" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.060" endtime="20201117 14:47:48.079"></status>
</kw>
<msg timestamp="20201117 14:47:48.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.058" endtime="20201117 14:47:48.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.080" endtime="20201117 14:47:48.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.083" endtime="20201117 14:47:48.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.056" endtime="20201117 14:47:48.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.053" endtime="20201117 14:47:48.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.092" endtime="20201117 14:47:48.379"></status>
</kw>
<msg timestamp="20201117 14:47:48.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024974278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025042264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.090" endtime="20201117 14:47:48.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024974278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025042264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.383" endtime="20201117 14:47:48.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.392" endtime="20201117 14:47:48.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.088" endtime="20201117 14:47:48.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.086" endtime="20201117 14:47:48.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.399" level="INFO">${RESULT} = [{'time': 0.025042264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.798600000000252e-05, 'source_diff': 6.798600000000252e-05}, {'time': 0.025117264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:48.395" endtime="20201117 14:47:48.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.412" level="INFO">${ACCURACY} = {'time': [0.025042264, 0.025117264, 0.025192292, 0.025267292, 0.025342306, 0.025416319, 0.025496319, 0.025570319, 0.025646333, 0.025719333, 0.025799347, 0.025880361, 0.025962431, 0.026040375, 0.026114...</msg>
<status status="PASS" starttime="20201117 14:47:48.400" endtime="20201117 14:47:48.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.417" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.416" endtime="20201117 14:47:48.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.420" level="INFO">VALUE: [6.798600000000252e-05, 6.799999999999862e-05, 6.819500000000006e-05, 6.851399999999869e-05, 6.834799999999933e-05, 6.786099999999892e-05, 6.833300000000028e-05, 6.797199999999948e-05, 6.816600000000145e-05, 6.766600000000095e-05, 6.801400000000166e-05, 6.818000000000102e-05, 6.852800000000173e-05, 6.784699999999935e-05, 6.781999999999969e-05, 6.766700000000042e-05, 6.851400000000216e-05, 6.818100000000049e-05, 6.77640000000014e-05, 6.78480000000023e-05, 6.816700000000092e-05, 6.815200000000188e-05, 6.794499999999981e-05, 6.833300000000028e-05, 6.813900000000178e-05, 6.857000000000044e-05, 6.833300000000028e-05, 6.818099999999702e-05, 6.819500000000006e-05, 6.822199999999973e-05, 6.805500000000089e-05, 6.801399999999819e-05, 6.766700000000042e-05, 6.852699999999878e-05, 6.836099999999942e-05, 6.849999999999912e-05, 6.783299999999978e-05, 6.806999999999994e-05, 6.816700000000092e-05, 6.765300000000085e-05, 6.851400000000216e-05, 6.818100000000049e-05, 6.851399999999869e-05, 6.768099999999999e-05, 6.768099999999999e-05, 6.848599999999955e-05, 6.833399999999976e-05, 6.851299999999921e-05, 6.768000000000052e-05, 6.783299999999978e-05]</msg>
<status status="PASS" starttime="20201117 14:47:48.418" endtime="20201117 14:47:48.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.413" endtime="20201117 14:47:48.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.423" endtime="20201117 14:47:48.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.427" endtime="20201117 14:47:48.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.425" endtime="20201117 14:47:48.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.421" endtime="20201117 14:47:48.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.052" endtime="20201117 14:47:48.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.050" endtime="20201117 14:47:48.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.049" endtime="20201117 14:47:48.448"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.450" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.459" endtime="20201117 14:47:48.478"></status>
</kw>
<msg timestamp="20201117 14:47:48.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.457" endtime="20201117 14:47:48.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.479" endtime="20201117 14:47:48.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.482" endtime="20201117 14:47:48.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.455" endtime="20201117 14:47:48.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.452" endtime="20201117 14:47:48.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.492" endtime="20201117 14:47:48.779"></status>
</kw>
<msg timestamp="20201117 14:47:48.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024976431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025045986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.490" endtime="20201117 14:47:48.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024976431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025045986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.783" endtime="20201117 14:47:48.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.792" endtime="20201117 14:47:48.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.487" endtime="20201117 14:47:48.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.485" endtime="20201117 14:47:48.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.799" level="INFO">${RESULT} = [{'time': 0.025045986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.955499999999892e-05, 'source_diff': 6.955499999999892e-05}, {'time': 0.025118944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:48.795" endtime="20201117 14:47:48.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.812" level="INFO">${ACCURACY} = {'time': [0.025045986, 0.025118944, 0.025197944, 0.025276944, 0.025352958, 0.025432972, 0.025514986, 0.025589986, 0.025671, 0.025747, 0.025822014, 0.025897028, 0.025976028, 0.026056083, 0.026132069, 0...</msg>
<status status="PASS" starttime="20201117 14:47:48.800" endtime="20201117 14:47:48.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.817" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.816" endtime="20201117 14:47:48.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.819" level="INFO">VALUE: [6.955499999999892e-05, 6.865200000000238e-05, 6.90970000000006e-05, 6.883300000000078e-05, 6.866599999999848e-05, 6.868000000000152e-05, 6.917999999999855e-05, 6.865299999999838e-05, 6.884700000000035e-05, 6.916699999999845e-05, 6.901399999999919e-05, 6.951399999999969e-05, 6.866700000000142e-05, 6.951399999999969e-05, 6.951300000000021e-05, 6.951300000000021e-05, 6.934700000000085e-05, 6.883300000000078e-05, 6.865199999999891e-05, 6.922200000000073e-05, 6.886099999999992e-05, 6.884700000000035e-05, 6.899999999999962e-05, 6.866700000000142e-05, 6.933300000000128e-05, 6.952799999999926e-05, 6.915300000000235e-05, 6.869500000000056e-05, 6.862499999999924e-05, 6.94030000000026e-05, 6.933300000000128e-05, 6.894499999999734e-05, 6.863899999999881e-05, 6.872200000000023e-05, 6.916599999999898e-05, 6.933299999999781e-05, 6.902800000000223e-05, 6.905600000000137e-05, 6.916699999999845e-05, 6.934699999999738e-05, 6.868100000000099e-05, 6.933399999999729e-05, 6.886099999999992e-05, 6.901299999999971e-05, 6.883300000000078e-05, 6.902799999999876e-05, 6.934700000000085e-05, 6.867999999999805e-05, 6.884699999999688e-05, 6.915299999999888e-05]</msg>
<status status="PASS" starttime="20201117 14:47:48.818" endtime="20201117 14:47:48.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.813" endtime="20201117 14:47:48.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.823" endtime="20201117 14:47:48.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.826" endtime="20201117 14:47:48.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.825" endtime="20201117 14:47:48.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.821" endtime="20201117 14:47:48.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.451" endtime="20201117 14:47:48.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.449" endtime="20201117 14:47:48.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.448" endtime="20201117 14:47:48.847"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.850" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.858" endtime="20201117 14:47:48.876"></status>
</kw>
<msg timestamp="20201117 14:47:48.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.857" endtime="20201117 14:47:48.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.877" endtime="20201117 14:47:48.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.880" endtime="20201117 14:47:48.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.854" endtime="20201117 14:47:48.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.852" endtime="20201117 14:47:48.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.890" endtime="20201117 14:47:49.177"></status>
</kw>
<msg timestamp="20201117 14:47:49.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024924472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024994458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.889" endtime="20201117 14:47:49.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024924472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024994458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.182" endtime="20201117 14:47:49.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.191" endtime="20201117 14:47:49.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.886" endtime="20201117 14:47:49.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.884" endtime="20201117 14:47:49.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.198" level="INFO">${RESULT} = [{'time': 0.024994458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.998600000000105e-05, 'source_diff': 6.998600000000105e-05}, {'time': 0.025077458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:49.194" endtime="20201117 14:47:49.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.213" level="INFO">${ACCURACY} = {'time': [0.024994458, 0.025077458, 0.025157514, 0.025237486, 0.025318486, 0.0253935, 0.025472542, 0.025554514, 0.025634528, 0.025712542, 0.025795569, 0.025870556, 0.025954569, 0.026029569, 0.02610658...</msg>
<status status="PASS" starttime="20201117 14:47:49.199" endtime="20201117 14:47:49.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.218" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.217" endtime="20201117 14:47:49.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.220" level="INFO">VALUE: [6.998600000000105e-05, 6.966599999999948e-05, 7.004199999999933e-05, 6.981899999999874e-05, 7.015299999999988e-05, 7.048599999999808e-05, 7.054199999999983e-05, 6.966699999999895e-05, 6.968099999999852e-05, 7.001400000000019e-05, 7.019399999999912e-05, 6.966699999999895e-05, 7.016599999999998e-05, 7.000000000000062e-05, 7.017999999999955e-05, 6.981899999999874e-05, 7.049999999999765e-05, 7.017999999999955e-05, 7.000000000000062e-05, 6.981899999999874e-05, 7.018099999999902e-05, 6.983300000000178e-05, 7.016699999999945e-05, 6.965299999999938e-05, 6.966700000000242e-05, 7.031999999999872e-05, 7.031899999999924e-05, 7.015299999999988e-05, 6.966599999999948e-05, 7.016599999999998e-05, 6.981900000000221e-05, 6.977800000000298e-05, 7.019499999999859e-05, 6.983300000000178e-05, 7.036100000000142e-05, 6.968099999999852e-05, 7.051400000000069e-05, 6.983400000000126e-05, 7.034800000000133e-05, 7.016599999999998e-05, 6.972199999999776e-05, 7.022199999999826e-05, 7.031899999999924e-05, 7.020800000000216e-05, 7.033299999999881e-05, 6.965299999999938e-05, 7.034700000000185e-05, 6.984700000000135e-05, 7.018099999999902e-05, 6.986099999999745e-05]</msg>
<status status="PASS" starttime="20201117 14:47:49.219" endtime="20201117 14:47:49.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.214" endtime="20201117 14:47:49.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.224" endtime="20201117 14:47:49.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.227" endtime="20201117 14:47:49.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.226" endtime="20201117 14:47:49.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.222" endtime="20201117 14:47:49.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.851" endtime="20201117 14:47:49.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.849" endtime="20201117 14:47:49.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.848" endtime="20201117 14:47:49.248"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.251" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.260" endtime="20201117 14:47:49.278"></status>
</kw>
<msg timestamp="20201117 14:47:49.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.258" endtime="20201117 14:47:49.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.280" endtime="20201117 14:47:49.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.282" endtime="20201117 14:47:49.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.255" endtime="20201117 14:47:49.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.253" endtime="20201117 14:47:49.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.292" endtime="20201117 14:47:49.578"></status>
</kw>
<msg timestamp="20201117 14:47:49.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025416111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025486917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.290" endtime="20201117 14:47:49.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025416111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025486917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.582" endtime="20201117 14:47:49.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.590" endtime="20201117 14:47:49.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.287" endtime="20201117 14:47:49.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.286" endtime="20201117 14:47:49.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.597" level="INFO">${RESULT} = [{'time': 0.025486917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.080599999999965e-05, 'source_diff': 7.080599999999965e-05}, {'time': 0.025571931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:49.594" endtime="20201117 14:47:49.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.611" level="INFO">${ACCURACY} = {'time': [0.025486917, 0.025571931, 0.025648944, 0.025726944, 0.025804972, 0.025885958, 0.025961986, 0.026042014, 0.026123014, 0.026199, 0.026275, 0.026353056, 0.026430028, 0.026506028, 0.026583042, 0...</msg>
<status status="PASS" starttime="20201117 14:47:49.598" endtime="20201117 14:47:49.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.616" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.614" endtime="20201117 14:47:49.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.618" level="INFO">VALUE: [7.080599999999965e-05, 7.116700000000045e-05, 7.134699999999938e-05, 7.148600000000255e-05, 7.152799999999779e-05, 7.133299999999981e-05, 7.119400000000012e-05, 7.120799999999969e-05, 7.069499999999909e-05, 7.149999999999865e-05, 7.083299999999931e-05, 7.120899999999916e-05, 7.100000000000162e-05, 7.083400000000226e-05, 7.068099999999952e-05, 7.134799999999886e-05, 7.083400000000226e-05, 7.149999999999865e-05, 7.084700000000235e-05, 7.133299999999981e-05, 7.081899999999974e-05, 7.134699999999938e-05, 7.100000000000162e-05, 7.133299999999981e-05, 7.133299999999981e-05, 7.065300000000038e-05, 7.116700000000045e-05, 7.125000000000187e-05, 7.133399999999929e-05, 7.122199999999926e-05, 7.066600000000048e-05, 7.130500000000067e-05, 7.10559999999999e-05, 7.118000000000055e-05, 7.116599999999751e-05, 7.101400000000119e-05, 7.086099999999845e-05, 7.087500000000149e-05, 7.086099999999845e-05, 7.134699999999938e-05, 7.140299999999766e-05, 7.068099999999952e-05, 7.118100000000002e-05, 7.116700000000045e-05, 7.134699999999938e-05, 7.118000000000055e-05, 7.126400000000144e-05, 7.088900000000106e-05, 7.066699999999995e-05, 7.102800000000076e-05]</msg>
<status status="PASS" starttime="20201117 14:47:49.617" endtime="20201117 14:47:49.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.612" endtime="20201117 14:47:49.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.621" endtime="20201117 14:47:49.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.625" endtime="20201117 14:47:49.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.623" endtime="20201117 14:47:49.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.620" endtime="20201117 14:47:49.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.251" endtime="20201117 14:47:49.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.250" endtime="20201117 14:47:49.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.249" endtime="20201117 14:47:49.647"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.649" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.658" endtime="20201117 14:47:49.675"></status>
</kw>
<msg timestamp="20201117 14:47:49.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.656" endtime="20201117 14:47:49.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.677" endtime="20201117 14:47:49.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.680" endtime="20201117 14:47:49.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.653" endtime="20201117 14:47:49.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.651" endtime="20201117 14:47:49.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.689" endtime="20201117 14:47:49.976"></status>
</kw>
<msg timestamp="20201117 14:47:49.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025373236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025445639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.687" endtime="20201117 14:47:49.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025373236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025445639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.980" endtime="20201117 14:47:49.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.989" endtime="20201117 14:47:49.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.685" endtime="20201117 14:47:49.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.683" endtime="20201117 14:47:49.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.996" level="INFO">${RESULT} = [{'time': 0.025445639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.240299999999866e-05, 'source_diff': 7.240299999999866e-05}, {'time': 0.025531611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:49.992" endtime="20201117 14:47:49.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.009" level="INFO">${ACCURACY} = {'time': [0.025445639, 0.025531611, 0.025614625, 0.025695639, 0.025777653, 0.025856653, 0.025943667, 0.026020667, 0.026101694, 0.026181694, 0.026261722, 0.026343722, 0.026429722, 0.026506722, 0.026583...</msg>
<status status="PASS" starttime="20201117 14:47:49.997" endtime="20201117 14:47:50.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.014" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.013" endtime="20201117 14:47:50.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.016" level="INFO">VALUE: [7.240299999999866e-05, 7.233300000000081e-05, 7.215299999999841e-05, 7.180600000000065e-05, 7.201400000000219e-05, 7.216700000000145e-05, 7.251399999999922e-05, 7.183399999999979e-05, 7.169400000000062e-05, 7.183299999999684e-05, 7.169400000000062e-05, 7.234700000000038e-05, 7.251399999999922e-05, 7.166600000000148e-05, 7.201399999999872e-05, 7.187499999999902e-05, 7.216699999999798e-05, 7.252800000000226e-05, 7.236099999999995e-05, 7.200000000000262e-05, 7.201399999999872e-05, 7.168100000000052e-05, 7.166599999999801e-05, 7.1762999999999e-05, 7.183300000000031e-05, 7.216599999999851e-05, 7.218000000000155e-05, 7.217999999999808e-05, 7.181899999999727e-05, 7.202799999999829e-05, 7.20560000000009e-05, 7.233400000000029e-05, 7.168100000000052e-05, 7.183399999999979e-05, 7.166700000000095e-05, 7.173599999999933e-05, 7.168000000000105e-05, 7.199999999999915e-05, 7.166600000000148e-05, 7.168000000000105e-05, 7.199999999999915e-05, 7.233300000000081e-05, 7.168099999999705e-05, 7.251399999999922e-05, 7.177800000000151e-05, 7.233400000000029e-05, 7.187499999999902e-05, 7.233400000000029e-05, 7.168100000000052e-05, 7.250000000000312e-05]</msg>
<status status="PASS" starttime="20201117 14:47:50.015" endtime="20201117 14:47:50.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.010" endtime="20201117 14:47:50.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.020" endtime="20201117 14:47:50.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.024" endtime="20201117 14:47:50.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.022" endtime="20201117 14:47:50.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.018" endtime="20201117 14:47:50.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.650" endtime="20201117 14:47:50.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.648" endtime="20201117 14:47:50.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.647" endtime="20201117 14:47:50.045"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.047" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.056" endtime="20201117 14:47:50.073"></status>
</kw>
<msg timestamp="20201117 14:47:50.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.054" endtime="20201117 14:47:50.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.075" endtime="20201117 14:47:50.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.078" endtime="20201117 14:47:50.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.052" endtime="20201117 14:47:50.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.049" endtime="20201117 14:47:50.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.087" endtime="20201117 14:47:50.374"></status>
</kw>
<msg timestamp="20201117 14:47:50.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024799861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024873181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.085" endtime="20201117 14:47:50.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024799861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024873181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.379" endtime="20201117 14:47:50.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.387" endtime="20201117 14:47:50.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.083" endtime="20201117 14:47:50.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.081" endtime="20201117 14:47:50.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.394" level="INFO">${RESULT} = [{'time': 0.024873181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.332000000000172e-05, 'source_diff': 7.332000000000172e-05}, {'time': 0.024953181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:50.391" endtime="20201117 14:47:50.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.408" level="INFO">${ACCURACY} = {'time': [0.024873181, 0.024953181, 0.025033194, 0.025120208, 0.025202208, 0.025288292, 0.02536725, 0.02544525, 0.025526264, 0.025611264, 0.025695292, 0.025774278, 0.025851292, 0.025938292, 0.02601930...</msg>
<status status="PASS" starttime="20201117 14:47:50.395" endtime="20201117 14:47:50.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.412" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.411" endtime="20201117 14:47:50.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.415" level="INFO">VALUE: [7.332000000000172e-05, 7.300000000000015e-05, 7.350000000000065e-05, 7.333300000000181e-05, 7.350000000000065e-05, 7.322300000000073e-05, 7.301399999999972e-05, 7.268099999999805e-05, 7.302799999999929e-05, 7.284700000000088e-05, 7.315300000000288e-05, 7.283400000000079e-05, 7.268100000000152e-05, 7.298600000000058e-05, 7.348700000000055e-05, 7.352700000000031e-05, 7.266599999999901e-05, 7.349999999999718e-05, 7.352799999999979e-05, 7.352799999999979e-05, 7.301399999999972e-05, 7.349999999999718e-05, 7.300000000000015e-05, 7.333300000000181e-05, 7.269399999999815e-05, 7.320799999999822e-05, 7.338900000000009e-05, 7.354099999999988e-05, 7.265199999999944e-05, 7.317999999999908e-05, 7.301399999999972e-05, 7.301399999999972e-05, 7.315299999999941e-05, 7.334700000000138e-05, 7.336100000000095e-05, 7.300000000000015e-05, 7.284699999999741e-05, 7.283400000000079e-05, 7.332000000000172e-05, 7.351400000000022e-05, 7.351400000000022e-05, 7.266699999999848e-05, 7.331900000000224e-05, 7.267999999999858e-05, 7.268000000000205e-05, 7.29300000000023e-05, 7.35699999999985e-05, 7.318099999999855e-05, 7.337500000000052e-05, 7.284700000000088e-05]</msg>
<status status="PASS" starttime="20201117 14:47:50.413" endtime="20201117 14:47:50.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.408" endtime="20201117 14:47:50.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.419" endtime="20201117 14:47:50.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.422" endtime="20201117 14:47:50.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.421" endtime="20201117 14:47:50.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.417" endtime="20201117 14:47:50.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.048" endtime="20201117 14:47:50.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.046" endtime="20201117 14:47:50.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.045" endtime="20201117 14:47:50.443"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.446" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.454" endtime="20201117 14:47:50.472"></status>
</kw>
<msg timestamp="20201117 14:47:50.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.453" endtime="20201117 14:47:50.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.474" endtime="20201117 14:47:50.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.476" endtime="20201117 14:47:50.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.450" endtime="20201117 14:47:50.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.448" endtime="20201117 14:47:50.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.486" endtime="20201117 14:47:50.774"></status>
</kw>
<msg timestamp="20201117 14:47:50.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024870208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024944847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.484" endtime="20201117 14:47:50.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024870208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024944847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.778" endtime="20201117 14:47:50.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.786" endtime="20201117 14:47:50.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.482" endtime="20201117 14:47:50.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.480" endtime="20201117 14:47:50.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.793" level="INFO">${RESULT} = [{'time': 0.024944847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.463899999999787e-05, 'source_diff': 7.463899999999787e-05}, {'time': 0.025022861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:50.790" endtime="20201117 14:47:50.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.809" level="INFO">${ACCURACY} = {'time': [0.024944847, 0.025022861, 0.025107889, 0.025186889, 0.025269889, 0.025353903, 0.025437917, 0.025520917, 0.025603958, 0.025686944, 0.025771014, 0.025853014, 0.025936972, 0.026024972, 0.026112...</msg>
<status status="PASS" starttime="20201117 14:47:50.795" endtime="20201117 14:47:50.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.814" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.813" endtime="20201117 14:47:50.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.816" level="INFO">VALUE: [7.463899999999787e-05, 7.366699999999948e-05, 7.436100000000195e-05, 7.434699999999891e-05, 7.379199999999961e-05, 7.368099999999905e-05, 7.418099999999955e-05, 7.366699999999948e-05, 7.404100000000038e-05, 7.451299999999828e-05, 7.422199999999879e-05, 7.45699999999995e-05, 7.418000000000008e-05, 7.450000000000165e-05, 7.366700000000295e-05, 7.366700000000295e-05, 7.384700000000188e-05, 7.397199999999854e-05, 7.366699999999948e-05, 7.404100000000038e-05, 7.437499999999805e-05, 7.383399999999832e-05, 7.434699999999891e-05, 7.384699999999841e-05, 7.35829999999986e-05, 7.452800000000079e-05, 7.367999999999958e-05, 7.384700000000188e-05, 7.368099999999905e-05, 7.401400000000072e-05, 7.434699999999891e-05, 7.451399999999775e-05, 7.448599999999861e-05, 7.450000000000165e-05, 7.434699999999891e-05, 7.449999999999818e-05, 7.434700000000238e-05, 7.434700000000238e-05, 7.401399999999725e-05, 7.433299999999934e-05, 7.369500000000209e-05, 7.416699999999998e-05, 7.368100000000252e-05, 7.447199999999904e-05, 7.451399999999775e-05, 7.434800000000186e-05, 7.434800000000186e-05, 7.383299999999884e-05, 7.384700000000188e-05, 7.367999999999958e-05]</msg>
<status status="PASS" starttime="20201117 14:47:50.815" endtime="20201117 14:47:50.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.810" endtime="20201117 14:47:50.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.820" endtime="20201117 14:47:50.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.823" endtime="20201117 14:47:50.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.821" endtime="20201117 14:47:50.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.818" endtime="20201117 14:47:50.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.446" endtime="20201117 14:47:50.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.444" endtime="20201117 14:47:50.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.444" endtime="20201117 14:47:50.844"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.847" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.855" endtime="20201117 14:47:50.873"></status>
</kw>
<msg timestamp="20201117 14:47:50.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.853" endtime="20201117 14:47:50.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.874" endtime="20201117 14:47:50.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.877" endtime="20201117 14:47:50.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.851" endtime="20201117 14:47:50.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.849" endtime="20201117 14:47:50.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.886" endtime="20201117 14:47:51.172"></status>
</kw>
<msg timestamp="20201117 14:47:51.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024927389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.885" endtime="20201117 14:47:51.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024927389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.177" endtime="20201117 14:47:51.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.190" endtime="20201117 14:47:51.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.882" endtime="20201117 14:47:51.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.880" endtime="20201117 14:47:51.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.197" level="INFO">${RESULT} = [{'time': 0.025002194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.480499999999723e-05, 'source_diff': 7.480499999999723e-05}, {'time': 0.025085208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:51.193" endtime="20201117 14:47:51.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.210" level="INFO">${ACCURACY} = {'time': [0.025002194, 0.025085208, 0.025169208, 0.025255222, 0.025344222, 0.025428236, 0.02551125, 0.02559325, 0.025681264, 0.025766278, 0.025854306, 0.025941292, 0.026029306, 0.026116333, 0.02620431...</msg>
<status status="PASS" starttime="20201117 14:47:51.198" endtime="20201117 14:47:51.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.215" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:47:51.214" endtime="20201117 14:47:51.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.218" level="INFO">VALUE: [7.480499999999723e-05, 7.550000000000265e-05, 7.465199999999797e-05, 7.501400000000172e-05, 7.549999999999918e-05, 7.518000000000108e-05, 7.549999999999918e-05, 7.481900000000027e-05, 7.549999999999918e-05, 7.501400000000172e-05, 7.518100000000055e-05, 7.483400000000279e-05, 7.534799999999939e-05, 7.486099999999898e-05, 7.516600000000151e-05, 7.549999999999918e-05, 7.459699999999916e-05, 7.533300000000034e-05, 7.549999999999918e-05, 7.549999999999918e-05, 7.504200000000086e-05, 7.516700000000098e-05, 7.518100000000055e-05, 7.472200000000276e-05, 7.470799999999972e-05, 7.501300000000224e-05, 7.537500000000252e-05, 7.534699999999991e-05, 7.53189999999973e-05, 7.486100000000245e-05, 7.534699999999991e-05, 7.519500000000012e-05, 7.483299999999984e-05, 7.484700000000288e-05, 7.500000000000215e-05, 7.498600000000258e-05, 7.501399999999825e-05, 7.547299999999951e-05, 7.516700000000098e-05, 7.518000000000108e-05, 7.534699999999991e-05, 7.548599999999961e-05, 7.55700000000005e-05, 7.484699999999941e-05, 7.551400000000222e-05, 7.469499999999962e-05, 7.556899999999755e-05, 7.534699999999991e-05, 7.549999999999918e-05, 7.500000000000215e-05]</msg>
<status status="PASS" starttime="20201117 14:47:51.217" endtime="20201117 14:47:51.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.211" endtime="20201117 14:47:51.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.222" endtime="20201117 14:47:51.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.225" endtime="20201117 14:47:51.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.224" endtime="20201117 14:47:51.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.220" endtime="20201117 14:47:51.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.847" endtime="20201117 14:47:51.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.845" endtime="20201117 14:47:51.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.845" endtime="20201117 14:47:51.247"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.249" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.258" endtime="20201117 14:47:51.276"></status>
</kw>
<msg timestamp="20201117 14:47:51.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.256" endtime="20201117 14:47:51.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.278" endtime="20201117 14:47:51.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.281" endtime="20201117 14:47:51.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.253" endtime="20201117 14:47:51.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.251" endtime="20201117 14:47:51.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.290" endtime="20201117 14:47:51.577"></status>
</kw>
<msg timestamp="20201117 14:47:51.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025201194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025277861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.288" endtime="20201117 14:47:51.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025201194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025277861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.582" endtime="20201117 14:47:51.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.590" endtime="20201117 14:47:51.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.286" endtime="20201117 14:47:51.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.284" endtime="20201117 14:47:51.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.597" level="INFO">${RESULT} = [{'time': 0.025277861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.666699999999901e-05, 'source_diff': 7.666699999999901e-05}, {'time': 0.025366861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:51.594" endtime="20201117 14:47:51.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.611" level="INFO">${ACCURACY} = {'time': [0.025277861, 0.025366861, 0.025450875, 0.025536889, 0.025619903, 0.025704917, 0.025795903, 0.025881917, 0.025969, 0.026055958, 0.026145944, 0.026233958, 0.026317014, 0.026402972, 0.02649, 0....</msg>
<status status="PASS" starttime="20201117 14:47:51.598" endtime="20201117 14:47:51.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.615" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:47:51.614" endtime="20201117 14:47:51.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.618" level="INFO">VALUE: [7.666699999999901e-05, 7.627800000000254e-05, 7.633300000000134e-05, 7.634700000000091e-05, 7.586099999999998e-05, 7.652799999999932e-05, 7.650000000000018e-05, 7.650000000000018e-05, 7.59029999999987e-05, 7.616599999999904e-05, 7.633300000000134e-05, 7.566600000000201e-05, 7.588899999999912e-05, 7.631900000000177e-05, 7.584700000000041e-05, 7.652799999999932e-05, 7.654199999999889e-05, 7.601399999999925e-05, 7.619500000000112e-05, 7.584799999999989e-05, 7.632000000000125e-05, 7.584700000000041e-05, 7.570800000000072e-05, 7.652800000000279e-05, 7.567999999999811e-05, 7.651399999999975e-05, 7.598600000000011e-05, 7.650000000000018e-05, 7.601399999999925e-05, 7.655499999999898e-05, 7.568100000000105e-05, 7.632000000000125e-05, 7.656900000000202e-05, 7.601400000000272e-05, 7.566700000000148e-05, 7.64029999999992e-05, 7.584700000000041e-05, 7.633300000000134e-05, 7.565299999999844e-05, 7.584700000000041e-05, 7.599999999999968e-05, 7.650000000000018e-05, 7.601399999999925e-05, 7.651399999999975e-05, 7.570799999999725e-05, 7.573599999999986e-05, 7.584699999999694e-05, 7.569400000000115e-05, 7.573599999999986e-05, 7.652799999999932e-05]</msg>
<status status="PASS" starttime="20201117 14:47:51.616" endtime="20201117 14:47:51.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.612" endtime="20201117 14:47:51.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.621" endtime="20201117 14:47:51.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.625" endtime="20201117 14:47:51.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.623" endtime="20201117 14:47:51.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.619" endtime="20201117 14:47:51.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.250" endtime="20201117 14:47:51.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.248" endtime="20201117 14:47:51.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.247" endtime="20201117 14:47:51.646"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.648" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.657" endtime="20201117 14:47:51.675"></status>
</kw>
<msg timestamp="20201117 14:47:51.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.655" endtime="20201117 14:47:51.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.677" endtime="20201117 14:47:51.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.680" endtime="20201117 14:47:51.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.652" endtime="20201117 14:47:51.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.650" endtime="20201117 14:47:51.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.689" endtime="20201117 14:47:51.977"></status>
</kw>
<msg timestamp="20201117 14:47:51.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025002208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025079708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.688" endtime="20201117 14:47:51.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025002208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025079708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.981" endtime="20201117 14:47:51.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.990" endtime="20201117 14:47:51.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.685" endtime="20201117 14:47:51.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.683" endtime="20201117 14:47:51.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.997" level="INFO">${RESULT} = [{'time': 0.025079708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.749999999999771e-05, 'source_diff': 7.749999999999771e-05}, {'time': 0.025167736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:51.993" endtime="20201117 14:47:51.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.010" level="INFO">${ACCURACY} = {'time': [0.025079708, 0.025167736, 0.025252722, 0.025334736, 0.025415764, 0.02549875, 0.02558375, 0.025672819, 0.025760792, 0.025848792, 0.025935847, 0.026019861, 0.026104819, 0.026195819, 0.02628283...</msg>
<status status="PASS" starttime="20201117 14:47:51.998" endtime="20201117 14:47:52.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.015" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.014" endtime="20201117 14:47:52.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.018" level="INFO">VALUE: [7.749999999999771e-05, 7.687500000000055e-05, 7.734699999999844e-05, 7.733299999999887e-05, 7.670800000000172e-05, 7.734700000000191e-05, 7.665299999999944e-05, 7.670799999999825e-05, 7.718100000000255e-05, 7.684799999999742e-05, 7.705500000000295e-05, 7.688899999999665e-05, 7.729100000000017e-05, 7.716600000000004e-05, 7.733299999999887e-05, 7.701399999999678e-05, 7.667999999999911e-05, 7.73189999999993e-05, 7.730599999999921e-05, 7.752800000000032e-05, 7.668100000000205e-05, 7.716699999999951e-05, 7.751400000000075e-05, 7.684800000000089e-05, 7.666699999999901e-05, 7.716600000000004e-05, 7.704199999999939e-05, 7.698600000000111e-05, 7.750000000000118e-05, 7.701400000000025e-05, 7.749999999999771e-05, 7.733299999999887e-05, 7.748600000000161e-05, 7.686099999999751e-05, 7.751399999999728e-05, 7.666699999999901e-05, 7.668099999999858e-05, 7.686100000000098e-05, 7.699999999999721e-05, 7.730499999999974e-05, 7.723599999999789e-05, 7.679200000000261e-05, 7.684699999999794e-05, 7.684700000000141e-05, 7.751400000000075e-05, 7.699999999999721e-05, 7.670899999999772e-05, 7.670799999999825e-05, 7.666699999999901e-05, 7.695899999999797e-05]</msg>
<status status="PASS" starttime="20201117 14:47:52.016" endtime="20201117 14:47:52.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.011" endtime="20201117 14:47:52.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.021" endtime="20201117 14:47:52.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.025" endtime="20201117 14:47:52.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.023" endtime="20201117 14:47:52.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.019" endtime="20201117 14:47:52.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.649" endtime="20201117 14:47:52.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.647" endtime="20201117 14:47:52.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.646" endtime="20201117 14:47:52.046"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.048" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.057" endtime="20201117 14:47:52.075"></status>
</kw>
<msg timestamp="20201117 14:47:52.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.056" endtime="20201117 14:47:52.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.076" endtime="20201117 14:47:52.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.079" endtime="20201117 14:47:52.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.052" endtime="20201117 14:47:52.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.050" endtime="20201117 14:47:52.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.088" endtime="20201117 14:47:52.376"></status>
</kw>
<msg timestamp="20201117 14:47:52.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025444194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025522014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.087" endtime="20201117 14:47:52.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025444194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025522014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.380" endtime="20201117 14:47:52.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.389" endtime="20201117 14:47:52.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.084" endtime="20201117 14:47:52.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.082" endtime="20201117 14:47:52.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.396" level="INFO">${RESULT} = [{'time': 0.025522014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.781999999999928e-05, 'source_diff': 7.781999999999928e-05}, {'time': 0.025615028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:52.393" endtime="20201117 14:47:52.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.411" level="INFO">${ACCURACY} = {'time': [0.025522014, 0.025615028, 0.025703111, 0.025787042, 0.025877056, 0.025961069, 0.026051097, 0.026136097, 0.026225111, 0.026308111, 0.026392111, 0.026476139, 0.026563139, 0.026649139, 0.026736...</msg>
<status status="PASS" starttime="20201117 14:47:52.397" endtime="20201117 14:47:52.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.416" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.415" endtime="20201117 14:47:52.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.418" level="INFO">VALUE: [7.781999999999928e-05, 7.851400000000175e-05, 7.791700000000026e-05, 7.798599999999864e-05, 7.815299999999747e-05, 7.784699999999894e-05, 7.802799999999735e-05, 7.818000000000061e-05, 7.769399999999968e-05, 7.848599999999914e-05, 7.783299999999937e-05, 7.836099999999901e-05, 7.851399999999828e-05, 7.815299999999747e-05, 7.783399999999885e-05, 7.766700000000001e-05, 7.840299999999772e-05, 7.833400000000282e-05, 7.851400000000175e-05, 7.801400000000125e-05, 7.833299999999987e-05, 7.820800000000322e-05, 7.784699999999894e-05, 7.836100000000248e-05, 7.768099999999958e-05, 7.833399999999935e-05, 7.769499999999915e-05, 7.818100000000008e-05, 7.784800000000189e-05, 7.815300000000094e-05, 7.834699999999944e-05, 7.833299999999987e-05, 7.783299999999937e-05, 7.836099999999901e-05, 7.768000000000011e-05, 7.783299999999937e-05, 7.800000000000168e-05, 7.766700000000001e-05, 7.834699999999944e-05, 7.781999999999928e-05, 7.786100000000198e-05, 7.786099999999851e-05, 7.817999999999714e-05, 7.790299999999722e-05, 7.857000000000003e-05, 7.769399999999968e-05, 7.783300000000284e-05, 7.8458e-05, 7.783299999999937e-05, 7.818100000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:47:52.417" endtime="20201117 14:47:52.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.412" endtime="20201117 14:47:52.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.422" endtime="20201117 14:47:52.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.425" endtime="20201117 14:47:52.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.424" endtime="20201117 14:47:52.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.420" endtime="20201117 14:47:52.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.049" endtime="20201117 14:47:52.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.047" endtime="20201117 14:47:52.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.046" endtime="20201117 14:47:52.447"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.449" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.458" endtime="20201117 14:47:52.476"></status>
</kw>
<msg timestamp="20201117 14:47:52.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.456" endtime="20201117 14:47:52.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.478" endtime="20201117 14:47:52.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.481" endtime="20201117 14:47:52.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.453" endtime="20201117 14:47:52.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.451" endtime="20201117 14:47:52.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.490" endtime="20201117 14:47:52.776"></status>
</kw>
<msg timestamp="20201117 14:47:52.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025406347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:52.488" endtime="20201117 14:47:52.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025406347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:52.780" endtime="20201117 14:47:52.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.789" endtime="20201117 14:47:52.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.486" endtime="20201117 14:47:52.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.484" endtime="20201117 14:47:52.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.796" level="INFO">${RESULT} = [{'time': 0.025486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.965300000000244e-05, 'source_diff': 7.965300000000244e-05}, {'time': 0.025579028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:52.792" endtime="20201117 14:47:52.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.809" level="INFO">${ACCURACY} = {'time': [0.025486, 0.025579028, 0.025669028, 0.025757056, 0.025841042, 0.025933056, 0.026024069, 0.026115097, 0.026208083, 0.026299097, 0.026389111, 0.026480125, 0.026568125, 0.026652153, 0.026741153...</msg>
<status status="PASS" starttime="20201117 14:47:52.797" endtime="20201117 14:47:52.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.814" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.813" endtime="20201117 14:47:52.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.817" level="INFO">VALUE: [7.965300000000244e-05, 7.866700000000101e-05, 7.866700000000101e-05, 7.952799999999885e-05, 7.950000000000318e-05, 7.898699999999911e-05, 7.934700000000044e-05, 7.936100000000001e-05, 7.898599999999964e-05, 7.865300000000144e-05, 7.868000000000111e-05, 7.951399999999928e-05, 7.89580000000005e-05, 7.934700000000044e-05, 7.899999999999921e-05, 7.901399999999878e-05, 7.949999999999971e-05, 7.934799999999992e-05, 7.899999999999921e-05, 7.865200000000197e-05, 7.9151999999999e-05, 7.879100000000167e-05, 7.886099999999951e-05, 7.955599999999799e-05, 7.916699999999804e-05, 7.868100000000058e-05, 7.901399999999878e-05, 7.866699999999754e-05, 7.898699999999911e-05, 7.948600000000014e-05, 7.883399999999985e-05, 7.884699999999994e-05, 7.936100000000001e-05, 7.951400000000275e-05, 7.934699999999698e-05, 7.886099999999951e-05, 7.901399999999878e-05, 7.90970000000002e-05, 7.883300000000037e-05, 7.901400000000225e-05, 7.916700000000151e-05, 7.916599999999857e-05, 7.954099999999895e-05, 7.899999999999921e-05, 7.919399999999771e-05, 7.934700000000044e-05, 7.91389999999989e-05, 7.923599999999989e-05, 7.916699999999804e-05, 7.866700000000101e-05]</msg>
<status status="PASS" starttime="20201117 14:47:52.815" endtime="20201117 14:47:52.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.810" endtime="20201117 14:47:52.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.820" endtime="20201117 14:47:52.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.824" endtime="20201117 14:47:52.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.822" endtime="20201117 14:47:52.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.819" endtime="20201117 14:47:52.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.450" endtime="20201117 14:47:52.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.448" endtime="20201117 14:47:52.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.447" endtime="20201117 14:47:52.845"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.848" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.856" endtime="20201117 14:47:52.876"></status>
</kw>
<msg timestamp="20201117 14:47:52.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.854" endtime="20201117 14:47:52.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.877" endtime="20201117 14:47:52.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.880" endtime="20201117 14:47:52.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.852" endtime="20201117 14:47:52.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.850" endtime="20201117 14:47:52.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.889" endtime="20201117 14:47:53.177"></status>
</kw>
<msg timestamp="20201117 14:47:53.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025088722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025168514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.888" endtime="20201117 14:47:53.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025088722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025168514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.181" endtime="20201117 14:47:53.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.190" endtime="20201117 14:47:53.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.885" endtime="20201117 14:47:53.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.883" endtime="20201117 14:47:53.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.196" level="INFO">${RESULT} = [{'time': 0.025168514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.979199999999867e-05, 'source_diff': 7.979199999999867e-05}, {'time': 0.025259542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:53.193" endtime="20201117 14:47:53.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.210" level="INFO">${ACCURACY} = {'time': [0.025168514, 0.025259542, 0.025344542, 0.025432542, 0.025518569, 0.025605569, 0.025690569, 0.025780583, 0.025867611, 0.025957694, 0.026045625, 0.026130708, 0.026217639, 0.026308667, 0.026396...</msg>
<status status="PASS" starttime="20201117 14:47:53.197" endtime="20201117 14:47:53.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.215" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.214" endtime="20201117 14:47:53.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.218" level="INFO">VALUE: [7.979199999999867e-05, 7.968099999999811e-05, 8.001399999999978e-05, 8.000000000000021e-05, 8.036100000000101e-05, 8.00130000000003e-05, 7.980499999999877e-05, 8.045799999999853e-05, 7.969399999999821e-05, 8.008300000000163e-05, 7.968099999999811e-05, 8.041599999999982e-05, 7.984700000000094e-05, 8.001399999999978e-05, 7.97779999999991e-05, 7.984800000000042e-05, 7.983399999999738e-05, 8.038900000000015e-05, 8.031899999999884e-05, 8.03329999999984e-05, 8.038900000000015e-05, 8.018100000000208e-05, 8.050000000000071e-05, 8.000000000000021e-05, 7.974999999999996e-05, 7.968099999999811e-05, 8.033400000000135e-05, 8.016699999999904e-05, 7.968099999999811e-05, 8.033300000000188e-05, 7.983300000000138e-05, 7.988899999999965e-05, 8.023599999999742e-05, 7.966599999999907e-05, 7.98190000000018e-05, 7.968099999999811e-05, 7.99719999999976e-05, 8.015300000000294e-05, 7.968099999999811e-05, 8.051400000000028e-05, 7.969399999999821e-05, 7.966699999999854e-05, 8.019400000000218e-05, 7.969400000000168e-05, 8.023600000000089e-05, 8.015299999999947e-05, 8.059699999999823e-05, 7.966699999999854e-05, 8.048599999999767e-05, 7.99450000000014e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.216" endtime="20201117 14:47:53.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.211" endtime="20201117 14:47:53.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.221" endtime="20201117 14:47:53.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.225" endtime="20201117 14:47:53.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.223" endtime="20201117 14:47:53.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.219" endtime="20201117 14:47:53.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.848" endtime="20201117 14:47:53.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.846" endtime="20201117 14:47:53.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.845" endtime="20201117 14:47:53.246"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.249" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.257" endtime="20201117 14:47:53.275"></status>
</kw>
<msg timestamp="20201117 14:47:53.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.256" endtime="20201117 14:47:53.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.277" endtime="20201117 14:47:53.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.280" endtime="20201117 14:47:53.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.253" endtime="20201117 14:47:53.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.251" endtime="20201117 14:47:53.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.289" endtime="20201117 14:47:53.578"></status>
</kw>
<msg timestamp="20201117 14:47:53.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025582431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025664083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.287" endtime="20201117 14:47:53.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025582431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025664083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.582" endtime="20201117 14:47:53.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.591" endtime="20201117 14:47:53.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.285" endtime="20201117 14:47:53.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.283" endtime="20201117 14:47:53.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.598" level="INFO">${RESULT} = [{'time': 0.025664083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.16520000000015e-05, 'source_diff': 8.16520000000015e-05}, {'time': 0.025757097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:53.594" endtime="20201117 14:47:53.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.612" level="INFO">${ACCURACY} = {'time': [0.025664083, 0.025757097, 0.025846111, 0.025932111, 0.026021125, 0.026117125, 0.026202139, 0.026288139, 0.026379194, 0.026472181, 0.02655825, 0.026653181, 0.026748194, 0.026834208, 0.0269292...</msg>
<status status="PASS" starttime="20201117 14:47:53.599" endtime="20201117 14:47:53.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.616" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.615" endtime="20201117 14:47:53.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.619" level="INFO">VALUE: [8.16520000000015e-05, 8.069399999999921e-05, 8.069400000000268e-05, 8.094399999999946e-05, 8.101400000000078e-05, 8.134700000000245e-05, 8.086099999999805e-05, 8.080599999999924e-05, 8.154100000000095e-05, 8.119499999999918e-05, 8.156900000000009e-05, 8.150000000000171e-05, 8.099999999999774e-05, 8.101399999999731e-05, 8.136099999999855e-05, 8.148599999999867e-05, 8.134699999999898e-05, 8.100000000000121e-05, 8.118099999999961e-05, 8.098599999999817e-05, 8.06109999999978e-05, 8.068099999999911e-05, 8.150000000000171e-05, 8.059699999999823e-05, 8.1152000000001e-05, 8.084699999999848e-05, 8.101400000000078e-05, 8.151400000000128e-05, 8.08329999999989e-05, 8.084699999999848e-05, 8.116700000000004e-05, 8.087499999999762e-05, 8.062500000000083e-05, 8.083399999999838e-05, 8.09169999999998e-05, 8.136100000000202e-05, 8.087499999999762e-05, 8.067999999999964e-05, 8.136099999999855e-05, 8.119399999999971e-05, 8.08329999999989e-05, 8.069500000000215e-05, 8.122299999999832e-05, 8.099999999999774e-05, 8.118099999999961e-05, 8.097300000000154e-05, 8.084799999999795e-05, 8.08190000000028e-05, 8.066600000000007e-05, 8.12910000000007e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.617" endtime="20201117 14:47:53.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.613" endtime="20201117 14:47:53.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.622" endtime="20201117 14:47:53.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.626" endtime="20201117 14:47:53.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.624" endtime="20201117 14:47:53.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.620" endtime="20201117 14:47:53.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.249" endtime="20201117 14:47:53.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.247" endtime="20201117 14:47:53.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.246" endtime="20201117 14:47:53.647"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.649" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.658" endtime="20201117 14:47:53.676"></status>
</kw>
<msg timestamp="20201117 14:47:53.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.656" endtime="20201117 14:47:53.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.677" endtime="20201117 14:47:53.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.680" endtime="20201117 14:47:53.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.654" endtime="20201117 14:47:53.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.651" endtime="20201117 14:47:53.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.689" endtime="20201117 14:47:53.977"></status>
</kw>
<msg timestamp="20201117 14:47:53.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024894528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024977181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.688" endtime="20201117 14:47:53.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024894528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024977181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.982" endtime="20201117 14:47:53.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.991" endtime="20201117 14:47:53.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.685" endtime="20201117 14:47:53.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.683" endtime="20201117 14:47:53.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.998" level="INFO">${RESULT} = [{'time': 0.024977181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.265300000000197e-05, 'source_diff': 8.265300000000197e-05}, {'time': 0.025068208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:53.994" endtime="20201117 14:47:53.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.013" level="INFO">${ACCURACY} = {'time': [0.024977181, 0.025068208, 0.025162194, 0.025250208, 0.025342222, 0.025431264, 0.02552425, 0.02561325, 0.025708264, 0.025801292, 0.025891278, 0.025982306, 0.026070306, 0.026166375, 0.02625533...</msg>
<status status="PASS" starttime="20201117 14:47:53.999" endtime="20201117 14:47:54.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.018" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.017" endtime="20201117 14:47:54.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.020" level="INFO">VALUE: [8.265300000000197e-05, 8.219400000000071e-05, 8.199999999999874e-05, 8.168000000000064e-05, 8.218000000000114e-05, 8.220800000000028e-05, 8.19719999999996e-05, 8.201400000000178e-05, 8.168100000000011e-05, 8.186099999999905e-05, 8.249999999999924e-05, 8.186199999999852e-05, 8.234800000000292e-05, 8.173599999999892e-05, 8.18329999999999e-05, 8.16520000000015e-05, 8.172199999999935e-05, 8.167999999999717e-05, 8.248599999999967e-05, 8.216700000000104e-05, 8.234699999999998e-05, 8.234699999999998e-05, 8.249999999999924e-05, 8.186199999999852e-05, 8.201299999999884e-05, 8.174999999999849e-05, 8.208300000000016e-05, 8.249999999999924e-05, 8.250000000000271e-05, 8.202800000000135e-05, 8.226400000000203e-05, 8.23330000000004e-05, 8.22919999999977e-05, 8.204200000000092e-05, 8.20269999999984e-05, 8.166700000000054e-05, 8.230600000000074e-05, 8.187499999999862e-05, 8.199999999999874e-05, 8.249999999999924e-05, 8.240299999999826e-05, 8.234699999999998e-05, 8.251399999999881e-05, 8.201400000000178e-05, 8.218100000000061e-05, 8.251399999999881e-05, 8.216699999999758e-05, 8.249999999999924e-05, 8.248699999999914e-05, 8.236099999999955e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.019" endtime="20201117 14:47:54.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.014" endtime="20201117 14:47:54.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.024" endtime="20201117 14:47:54.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.027" endtime="20201117 14:47:54.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.026" endtime="20201117 14:47:54.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.022" endtime="20201117 14:47:54.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.650" endtime="20201117 14:47:54.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.648" endtime="20201117 14:47:54.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.647" endtime="20201117 14:47:54.048"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.051" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.059" endtime="20201117 14:47:54.078"></status>
</kw>
<msg timestamp="20201117 14:47:54.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.058" endtime="20201117 14:47:54.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.080" endtime="20201117 14:47:54.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.082" endtime="20201117 14:47:54.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.055" endtime="20201117 14:47:54.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.053" endtime="20201117 14:47:54.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.092" endtime="20201117 14:47:54.379"></status>
</kw>
<msg timestamp="20201117 14:47:54.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025127319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025210653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.090" endtime="20201117 14:47:54.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025127319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025210653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.383" endtime="20201117 14:47:54.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.392" endtime="20201117 14:47:54.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.088" endtime="20201117 14:47:54.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.086" endtime="20201117 14:47:54.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.399" level="INFO">${RESULT} = [{'time': 0.025210653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.333400000000088e-05, 'source_diff': 8.333400000000088e-05}, {'time': 0.025304653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:54.395" endtime="20201117 14:47:54.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.412" level="INFO">${ACCURACY} = {'time': [0.025210653, 0.025304653, 0.025396653, 0.025491681, 0.025581694, 0.025673708, 0.025767708, 0.025855736, 0.025948722, 0.026040806, 0.026137792, 0.026230792, 0.026324778, 0.026412792, 0.026503...</msg>
<status status="PASS" starttime="20201117 14:47:54.400" endtime="20201117 14:47:54.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.417" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.416" endtime="20201117 14:47:54.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.420" level="INFO">VALUE: [8.333400000000088e-05, 8.334700000000098e-05, 8.316700000000204e-05, 8.318099999999815e-05, 8.352699999999991e-05, 8.336100000000055e-05, 8.26659999999986e-05, 8.269400000000121e-05, 8.268000000000164e-05, 8.358400000000113e-05, 8.338899999999969e-05, 8.352799999999938e-05, 8.268100000000111e-05, 8.351399999999981e-05, 8.309699999999726e-05, 8.301299999999984e-05, 8.334800000000045e-05, 8.356900000000209e-05, 8.287499999999962e-05, 8.331899999999837e-05, 8.283299999999744e-05, 8.344400000000196e-05, 8.319500000000118e-05, 8.291699999999833e-05, 8.355499999999905e-05, 8.301399999999931e-05, 8.284799999999995e-05, 8.280600000000124e-05, 8.332000000000131e-05, 8.351300000000034e-05, 8.336100000000055e-05, 8.317999999999867e-05, 8.284700000000048e-05, 8.350000000000024e-05, 8.336100000000055e-05, 8.318099999999815e-05, 8.28330000000009e-05, 8.284799999999995e-05, 8.347300000000057e-05, 8.269399999999774e-05, 8.351300000000034e-05, 8.28330000000009e-05, 8.319399999999824e-05, 8.334700000000098e-05, 8.316700000000204e-05, 8.350000000000024e-05, 8.350000000000024e-05, 8.309699999999726e-05, 8.284700000000048e-05, 8.348600000000067e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.418" endtime="20201117 14:47:54.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.413" endtime="20201117 14:47:54.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.423" endtime="20201117 14:47:54.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.426" endtime="20201117 14:47:54.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.425" endtime="20201117 14:47:54.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.421" endtime="20201117 14:47:54.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.051" endtime="20201117 14:47:54.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.050" endtime="20201117 14:47:54.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.049" endtime="20201117 14:47:54.448"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.450" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.459" endtime="20201117 14:47:54.477"></status>
</kw>
<msg timestamp="20201117 14:47:54.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.457" endtime="20201117 14:47:54.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.479" endtime="20201117 14:47:54.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.482" endtime="20201117 14:47:54.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.454" endtime="20201117 14:47:54.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.452" endtime="20201117 14:47:54.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.491" endtime="20201117 14:47:54.780"></status>
</kw>
<msg timestamp="20201117 14:47:54.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025359819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025444347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.490" endtime="20201117 14:47:54.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025359819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025444347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.784" endtime="20201117 14:47:54.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.794" endtime="20201117 14:47:54.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.487" endtime="20201117 14:47:54.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.485" endtime="20201117 14:47:54.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.801" level="INFO">${RESULT} = [{'time': 0.025444347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.452800000000038e-05, 'source_diff': 8.452800000000038e-05}, {'time': 0.025536306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:54.798" endtime="20201117 14:47:54.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.816" level="INFO">${ACCURACY} = {'time': [0.025444347, 0.025536306, 0.025628319, 0.025720347, 0.025810347, 0.025899347, 0.025989375, 0.026087389, 0.026177431, 0.026269389, 0.026362403, 0.026453431, 0.026543472, 0.026641431, 0.026735...</msg>
<status status="PASS" starttime="20201117 14:47:54.803" endtime="20201117 14:47:54.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.820" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.819" endtime="20201117 14:47:54.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.823" level="INFO">VALUE: [8.452800000000038e-05, 8.451400000000081e-05, 8.367999999999917e-05, 8.434700000000198e-05, 8.367999999999917e-05, 8.36659999999996e-05, 8.39859999999977e-05, 8.419499999999872e-05, 8.372300000000082e-05, 8.433299999999894e-05, 8.383399999999791e-05, 8.368099999999865e-05, 8.41660000000001e-05, 8.366699999999908e-05, 8.434700000000198e-05, 8.383299999999844e-05, 8.43330000000024e-05, 8.450000000000124e-05, 8.384700000000148e-05, 8.401400000000031e-05, 8.38330000000019e-05, 8.362500000000037e-05, 8.43469999999985e-05, 8.368099999999865e-05, 8.368099999999865e-05, 8.383299999999844e-05, 8.3846999999998e-05, 8.452800000000038e-05, 8.436100000000155e-05, 8.454199999999995e-05, 8.400000000000074e-05, 8.418099999999915e-05, 8.375000000000049e-05, 8.451400000000081e-05, 8.437500000000112e-05, 8.369500000000168e-05, 8.402700000000041e-05, 8.43469999999985e-05, 8.368000000000264e-05, 8.401400000000031e-05, 8.417999999999967e-05, 8.434799999999798e-05, 8.44859999999982e-05, 8.400000000000074e-05, 8.432000000000231e-05, 8.436099999999808e-05, 8.451400000000081e-05, 8.445899999999854e-05, 8.400000000000074e-05, 8.436099999999808e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.821" endtime="20201117 14:47:54.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.817" endtime="20201117 14:47:54.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.826" endtime="20201117 14:47:54.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.830" endtime="20201117 14:47:54.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.828" endtime="20201117 14:47:54.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.824" endtime="20201117 14:47:54.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.451" endtime="20201117 14:47:54.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.449" endtime="20201117 14:47:54.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.448" endtime="20201117 14:47:54.851"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.853" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.862" endtime="20201117 14:47:54.881"></status>
</kw>
<msg timestamp="20201117 14:47:54.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.861" endtime="20201117 14:47:54.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.883" endtime="20201117 14:47:54.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.885" endtime="20201117 14:47:54.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.858" endtime="20201117 14:47:54.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.855" endtime="20201117 14:47:54.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.895" endtime="20201117 14:47:55.182"></status>
</kw>
<msg timestamp="20201117 14:47:55.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025324167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025409819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.893" endtime="20201117 14:47:55.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025324167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025409819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.187" endtime="20201117 14:47:55.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.196" endtime="20201117 14:47:55.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.891" endtime="20201117 14:47:55.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.889" endtime="20201117 14:47:55.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.203" level="INFO">${RESULT} = [{'time': 0.025409819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.565199999999856e-05, 'source_diff': 8.565199999999856e-05}, {'time': 0.025506833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:55.200" endtime="20201117 14:47:55.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.217" level="INFO">${ACCURACY} = {'time': [0.025409819, 0.025506833, 0.025604847, 0.025700847, 0.025798861, 0.025894875, 0.025984889, 0.026075903, 0.026171903, 0.026270944, 0.026364931, 0.026460944, 0.026551944, 0.026646986, 0.026744...</msg>
<status status="PASS" starttime="20201117 14:47:55.204" endtime="20201117 14:47:55.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.221" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.220" endtime="20201117 14:47:55.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.224" level="INFO">VALUE: [8.565199999999856e-05, 8.53469999999995e-05, 8.549999999999877e-05, 8.483299999999944e-05, 8.549999999999877e-05, 8.518100000000015e-05, 8.518100000000015e-05, 8.468099999999965e-05, 8.5153000000001e-05, 8.519400000000024e-05, 8.551400000000181e-05, 8.53469999999995e-05, 8.531900000000037e-05, 8.552800000000138e-05, 8.499999999999827e-05, 8.4846999999999e-05, 8.519499999999972e-05, 8.533299999999994e-05, 8.475000000000149e-05, 8.468099999999965e-05, 8.534799999999898e-05, 8.534800000000245e-05, 8.482000000000281e-05, 8.49859999999987e-05, 8.501399999999784e-05, 8.472199999999888e-05, 8.495799999999956e-05, 8.515299999999754e-05, 8.54859999999992e-05, 8.4846999999999e-05, 8.487499999999815e-05, 8.483399999999891e-05, 8.533399999999941e-05, 8.487500000000162e-05, 8.537500000000212e-05, 8.465200000000103e-05, 8.476400000000106e-05, 8.513900000000144e-05, 8.550000000000224e-05, 8.519499999999972e-05, 8.480599999999977e-05, 8.53469999999995e-05, 8.520899999999929e-05, 8.466700000000008e-05, 8.549999999999877e-05, 8.490300000000076e-05, 8.550000000000224e-05, 8.551400000000181e-05, 8.536099999999908e-05, 8.53469999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.222" endtime="20201117 14:47:55.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.218" endtime="20201117 14:47:55.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.227" endtime="20201117 14:47:55.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.231" endtime="20201117 14:47:55.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.229" endtime="20201117 14:47:55.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.225" endtime="20201117 14:47:55.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.854" endtime="20201117 14:47:55.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.852" endtime="20201117 14:47:55.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.851" endtime="20201117 14:47:55.252"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.255" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.263" endtime="20201117 14:47:55.283"></status>
</kw>
<msg timestamp="20201117 14:47:55.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.262" endtime="20201117 14:47:55.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.284" endtime="20201117 14:47:55.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.287" endtime="20201117 14:47:55.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.259" endtime="20201117 14:47:55.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.257" endtime="20201117 14:47:55.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.296" endtime="20201117 14:47:55.583"></status>
</kw>
<msg timestamp="20201117 14:47:55.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025453528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025539986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.295" endtime="20201117 14:47:55.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025453528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025539986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.587" endtime="20201117 14:47:55.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.596" endtime="20201117 14:47:55.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.292" endtime="20201117 14:47:55.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.290" endtime="20201117 14:47:55.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.603" level="INFO">${RESULT} = [{'time': 0.025539986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.645800000000106e-05, 'source_diff': 8.645800000000106e-05}, {'time': 0.025639986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:55.599" endtime="20201117 14:47:55.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.662" level="INFO">${ACCURACY} = {'time': [0.025539986, 0.025639986, 0.025739, 0.025833069, 0.025928042, 0.026018028, 0.026116042, 0.026214069, 0.026311083, 0.026405083, 0.026502153, 0.026596139, 0.026695125, 0.026795125, 0.026894153...</msg>
<status status="PASS" starttime="20201117 14:47:55.604" endtime="20201117 14:47:55.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.666" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.665" endtime="20201117 14:47:55.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.669" level="INFO">VALUE: [8.645800000000106e-05, 8.599999999999927e-05, 8.63470000000005e-05, 8.590199999999881e-05, 8.613899999999897e-05, 8.581999999999687e-05, 8.59859999999997e-05, 8.577699999999869e-05, 8.652699999999944e-05, 8.633300000000094e-05, 8.640299999999879e-05, 8.568100000000065e-05, 8.568100000000065e-05, 8.643099999999793e-05, 8.568100000000065e-05, 8.590199999999881e-05, 8.649999999999977e-05, 8.568100000000065e-05, 8.618100000000115e-05, 8.618000000000167e-05, 8.649999999999977e-05, 8.56799999999977e-05, 8.618000000000167e-05, 8.5847e-05, 8.651399999999934e-05, 8.649999999999977e-05, 8.61669999999981e-05, 8.569500000000022e-05, 8.568100000000065e-05, 8.584799999999948e-05, 8.632000000000084e-05, 8.601299999999937e-05, 8.568100000000065e-05, 8.651399999999934e-05, 8.626399999999909e-05, 8.633300000000094e-05, 8.618099999999768e-05, 8.649999999999977e-05, 8.601400000000231e-05, 8.633400000000041e-05, 8.633400000000041e-05, 8.657000000000109e-05, 8.56799999999977e-05, 8.651399999999934e-05, 8.652800000000238e-05, 8.652799999999891e-05, 8.651399999999934e-05, 8.569500000000022e-05, 8.631900000000137e-05, 8.649999999999977e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.667" endtime="20201117 14:47:55.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.662" endtime="20201117 14:47:55.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.672" endtime="20201117 14:47:55.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.676" endtime="20201117 14:47:55.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.674" endtime="20201117 14:47:55.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.671" endtime="20201117 14:47:55.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.255" endtime="20201117 14:47:55.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.254" endtime="20201117 14:47:55.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.253" endtime="20201117 14:47:55.697"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.700" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.708" endtime="20201117 14:47:55.727"></status>
</kw>
<msg timestamp="20201117 14:47:55.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.706" endtime="20201117 14:47:55.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.728" endtime="20201117 14:47:55.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.731" endtime="20201117 14:47:55.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.704" endtime="20201117 14:47:55.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.702" endtime="20201117 14:47:55.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.741" endtime="20201117 14:47:56.027"></status>
</kw>
<msg timestamp="20201117 14:47:56.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025504292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025591778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.739" endtime="20201117 14:47:56.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025504292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025591778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.031" endtime="20201117 14:47:56.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.039" endtime="20201117 14:47:56.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.736" endtime="20201117 14:47:56.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.734" endtime="20201117 14:47:56.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.046" level="INFO">${RESULT} = [{'time': 0.025591778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.748599999999773e-05, 'source_diff': 8.748599999999773e-05}, {'time': 0.025693778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:56.043" endtime="20201117 14:47:56.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.060" level="INFO">${ACCURACY} = {'time': [0.025591778, 0.025693778, 0.025792806, 0.025891806, 0.025989819, 0.026086819, 0.026185847, 0.026284847, 0.026376861, 0.026474875, 0.026573889, 0.026667931, 0.026769903, 0.026869917, 0.026966...</msg>
<status status="PASS" starttime="20201117 14:47:56.047" endtime="20201117 14:47:56.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.064" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.063" endtime="20201117 14:47:56.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.067" level="INFO">VALUE: [8.748599999999773e-05, 8.733400000000141e-05, 8.686200000000005e-05, 8.701399999999984e-05, 8.73470000000015e-05, 8.681900000000187e-05, 8.733300000000194e-05, 8.665299999999904e-05, 8.6847000000001e-05, 8.718099999999868e-05, 8.668099999999818e-05, 8.686200000000005e-05, 8.750000000000077e-05, 8.734800000000098e-05, 8.693099999999843e-05, 8.733300000000194e-05, 8.74999999999973e-05, 8.704199999999898e-05, 8.701400000000331e-05, 8.6847000000001e-05, 8.750000000000077e-05, 8.698599999999723e-05, 8.666700000000208e-05, 8.734800000000098e-05, 8.66669999999986e-05, 8.701399999999984e-05, 8.669399999999827e-05, 8.701400000000331e-05, 8.751400000000034e-05, 8.751400000000034e-05, 8.683299999999797e-05, 8.669400000000174e-05, 8.707000000000159e-05, 8.66669999999986e-05, 8.71669999999991e-05, 8.700000000000027e-05, 8.66249999999999e-05, 8.752700000000044e-05, 8.669400000000174e-05, 8.681900000000187e-05, 8.71799999999992e-05, 8.733300000000194e-05, 8.727799999999966e-05, 8.700000000000027e-05, 8.666700000000208e-05, 8.669500000000122e-05, 8.702799999999941e-05, 8.751400000000034e-05, 8.67920000000022e-05, 8.716599999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.065" endtime="20201117 14:47:56.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.061" endtime="20201117 14:47:56.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.071" endtime="20201117 14:47:56.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.074" endtime="20201117 14:47:56.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.073" endtime="20201117 14:47:56.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.069" endtime="20201117 14:47:56.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.700" endtime="20201117 14:47:56.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.698" endtime="20201117 14:47:56.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.697" endtime="20201117 14:47:56.095"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.098" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.107" endtime="20201117 14:47:56.127"></status>
</kw>
<msg timestamp="20201117 14:47:56.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.106" endtime="20201117 14:47:56.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.128" endtime="20201117 14:47:56.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.131" endtime="20201117 14:47:56.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.103" endtime="20201117 14:47:56.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.100" endtime="20201117 14:47:56.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.140" endtime="20201117 14:47:56.427"></status>
</kw>
<msg timestamp="20201117 14:47:56.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025746014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025834486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.139" endtime="20201117 14:47:56.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025746014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025834486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.431" endtime="20201117 14:47:56.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.439" endtime="20201117 14:47:56.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.136" endtime="20201117 14:47:56.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.134" endtime="20201117 14:47:56.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.446" level="INFO">${RESULT} = [{'time': 0.025834486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.847199999999916e-05, 'source_diff': 8.847199999999916e-05}, {'time': 0.025934514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:56.443" endtime="20201117 14:47:56.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.465" level="INFO">${ACCURACY} = {'time': [0.025834486, 0.025934514, 0.026036569, 0.026130542, 0.026223542, 0.026325556, 0.026423569, 0.026521583, 0.026620625, 0.026715611, 0.026809597, 0.026909611, 0.027005625, 0.027100653, 0.027197...</msg>
<status status="PASS" starttime="20201117 14:47:56.452" endtime="20201117 14:47:56.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.470" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.468" endtime="20201117 14:47:56.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.472" level="INFO">VALUE: [8.847199999999916e-05, 8.834699999999904e-05, 8.855500000000058e-05, 8.852800000000091e-05, 8.851399999999787e-05, 8.798700000000118e-05, 8.816600000000063e-05, 8.783300000000244e-05, 8.822199999999891e-05, 8.819399999999977e-05, 8.766600000000013e-05, 8.800000000000127e-05, 8.833299999999947e-05, 8.852799999999744e-05, 8.818099999999968e-05, 8.801400000000084e-05, 8.798599999999823e-05, 8.81670000000001e-05, 8.850000000000177e-05, 8.76799999999997e-05, 8.766600000000013e-05, 8.772199999999841e-05, 8.783299999999897e-05, 8.772299999999789e-05, 8.852799999999744e-05, 8.81670000000001e-05, 8.851400000000134e-05, 8.770799999999884e-05, 8.78059999999993e-05, 8.834699999999904e-05, 8.76799999999997e-05, 8.816599999999716e-05, 8.76799999999997e-05, 8.81670000000001e-05, 8.769500000000222e-05, 8.813900000000097e-05, 8.783299999999897e-05, 8.834700000000251e-05, 8.818099999999968e-05, 8.819399999999977e-05, 8.786099999999811e-05, 8.801399999999737e-05, 8.769399999999927e-05, 8.834699999999904e-05, 8.783300000000244e-05, 8.834699999999904e-05, 8.787500000000115e-05, 8.841600000000088e-05, 8.818099999999968e-05, 8.81670000000001e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.471" endtime="20201117 14:47:56.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.466" endtime="20201117 14:47:56.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.475" endtime="20201117 14:47:56.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.479" endtime="20201117 14:47:56.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.477" endtime="20201117 14:47:56.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.474" endtime="20201117 14:47:56.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.099" endtime="20201117 14:47:56.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.097" endtime="20201117 14:47:56.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.096" endtime="20201117 14:47:56.500"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.503" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.512" endtime="20201117 14:47:56.531"></status>
</kw>
<msg timestamp="20201117 14:47:56.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.510" endtime="20201117 14:47:56.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.533" endtime="20201117 14:47:56.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.535" endtime="20201117 14:47:56.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.507" endtime="20201117 14:47:56.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.505" endtime="20201117 14:47:56.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.545" endtime="20201117 14:47:56.832"></status>
</kw>
<msg timestamp="20201117 14:47:56.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02580675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025896236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:56.543" endtime="20201117 14:47:56.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02580675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025896236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:56.836" endtime="20201117 14:47:56.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.845" endtime="20201117 14:47:56.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.541" endtime="20201117 14:47:56.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.539" endtime="20201117 14:47:56.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.852" level="INFO">${RESULT} = [{'time': 0.025896236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.948599999999973e-05, 'source_diff': 8.948599999999973e-05}, {'time': 0.02599025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:56.849" endtime="20201117 14:47:56.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.866" level="INFO">${ACCURACY} = {'time': [0.025896236, 0.02599025, 0.026089264, 0.026189278, 0.026290292, 0.026385306, 0.026482306, 0.026576333, 0.026673375, 0.026776347, 0.026874375, 0.026978375, 0.027082375, 0.027176389, 0.0272724...</msg>
<status status="PASS" starttime="20201117 14:47:56.853" endtime="20201117 14:47:56.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.870" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.869" endtime="20201117 14:47:56.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.873" level="INFO">VALUE: [8.948599999999973e-05, 8.91670000000011e-05, 8.900000000000227e-05, 8.884699999999954e-05, 8.883399999999944e-05, 8.934799999999951e-05, 8.877800000000116e-05, 8.901400000000184e-05, 8.922199999999991e-05, 8.866599999999766e-05, 8.936099999999961e-05, 8.951399999999887e-05, 8.948599999999973e-05, 8.89999999999988e-05, 8.936199999999908e-05, 8.887499999999868e-05, 8.934799999999951e-05, 8.91670000000011e-05, 8.884699999999954e-05, 8.884699999999954e-05, 8.934700000000004e-05, 8.884699999999954e-05, 8.886099999999911e-05, 8.950000000000277e-05, 8.918100000000068e-05, 8.868100000000018e-05, 8.952800000000191e-05, 8.859800000000223e-05, 8.94999999999993e-05, 8.886099999999911e-05, 8.866600000000113e-05, 8.933300000000047e-05, 8.91800000000012e-05, 8.884699999999954e-05, 8.868100000000018e-05, 8.933300000000047e-05, 8.926399999999862e-05, 8.951399999999887e-05, 8.94999999999993e-05, 8.933399999999994e-05, 8.90129999999989e-05, 8.950000000000277e-05, 8.958400000000019e-05, 8.886100000000258e-05, 8.918100000000068e-05, 8.925000000000252e-05, 8.91670000000011e-05, 8.901399999999837e-05, 8.923599999999948e-05, 8.948599999999973e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.871" endtime="20201117 14:47:56.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.867" endtime="20201117 14:47:56.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.876" endtime="20201117 14:47:56.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.880" endtime="20201117 14:47:56.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.878" endtime="20201117 14:47:56.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.874" endtime="20201117 14:47:56.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.503" endtime="20201117 14:47:56.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.501" endtime="20201117 14:47:56.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.500" endtime="20201117 14:47:56.901"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.903" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.913" endtime="20201117 14:47:56.932"></status>
</kw>
<msg timestamp="20201117 14:47:56.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.910" endtime="20201117 14:47:56.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.933" endtime="20201117 14:47:56.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.936" endtime="20201117 14:47:56.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.908" endtime="20201117 14:47:56.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.905" endtime="20201117 14:47:56.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.946" endtime="20201117 14:47:57.232"></status>
</kw>
<msg timestamp="20201117 14:47:57.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025764542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025854486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.944" endtime="20201117 14:47:57.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025764542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025854486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.237" endtime="20201117 14:47:57.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.245" endtime="20201117 14:47:57.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.941" endtime="20201117 14:47:57.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.939" endtime="20201117 14:47:57.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.252" level="INFO">${RESULT} = [{'time': 0.025854486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.994399999999805e-05, 'source_diff': 8.994399999999805e-05}, {'time': 0.0259515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:57.249" endtime="20201117 14:47:57.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.267" level="INFO">${ACCURACY} = {'time': [0.025854486, 0.0259515, 0.026046514, 0.026145528, 0.026240556, 0.026343542, 0.026441569, 0.026545569, 0.026647653, 0.026744625, 0.026841611, 0.026938611, 0.027039625, 0.027141639, 0.02723965...</msg>
<status status="PASS" starttime="20201117 14:47:57.253" endtime="20201117 14:47:57.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.272" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.270" endtime="20201117 14:47:57.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.274" level="INFO">VALUE: [8.994399999999805e-05, 8.980599999999783e-05, 9.033300000000147e-05, 9.033400000000094e-05, 8.983400000000044e-05, 8.99999999999998e-05, 9.05130000000004e-05, 8.983300000000097e-05, 8.974999999999955e-05, 9.054200000000248e-05, 9.051399999999987e-05, 9.01670000000021e-05, 8.983300000000097e-05, 9.018099999999821e-05, 9.018099999999821e-05, 9.029200000000223e-05, 9.034800000000051e-05, 9.048600000000073e-05, 9.016599999999916e-05, 8.967999999999823e-05, 9.001399999999937e-05, 9.01939999999983e-05, 8.969499999999728e-05, 8.96670000000016e-05, 8.96670000000016e-05, 8.988799999999977e-05, 9.018099999999821e-05, 9.017999999999873e-05, 8.967999999999823e-05, 9.000000000000327e-05, 9.016600000000263e-05, 9.01939999999983e-05, 9.036100000000061e-05, 9.016699999999864e-05, 8.984700000000054e-05, 8.980599999999783e-05, 8.966699999999814e-05, 8.973599999999998e-05, 9.05000000000003e-05, 8.96800000000017e-05, 9.019400000000177e-05, 8.99999999999998e-05, 9.051399999999987e-05, 9.01800000000022e-05, 9.049999999999683e-05, 8.987499999999968e-05, 9.037500000000018e-05, 8.963900000000247e-05, 9.045900000000107e-05, 9.006899999999818e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.273" endtime="20201117 14:47:57.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.268" endtime="20201117 14:47:57.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.277" endtime="20201117 14:47:57.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.281" endtime="20201117 14:47:57.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.279" endtime="20201117 14:47:57.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.276" endtime="20201117 14:47:57.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.904" endtime="20201117 14:47:57.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.902" endtime="20201117 14:47:57.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.901" endtime="20201117 14:47:57.302"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.305" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.314" endtime="20201117 14:47:57.333"></status>
</kw>
<msg timestamp="20201117 14:47:57.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.312" endtime="20201117 14:47:57.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.335" endtime="20201117 14:47:57.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.338" endtime="20201117 14:47:57.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.310" endtime="20201117 14:47:57.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.307" endtime="20201117 14:47:57.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.347" endtime="20201117 14:47:57.634"></status>
</kw>
<msg timestamp="20201117 14:47:57.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026579958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026671111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.346" endtime="20201117 14:47:57.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026579958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026671111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.639" endtime="20201117 14:47:57.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.647" endtime="20201117 14:47:57.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.343" endtime="20201117 14:47:57.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.341" endtime="20201117 14:47:57.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.654" level="INFO">${RESULT} = [{'time': 0.026671111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.115300000000007e-05, 'source_diff': 9.115300000000007e-05}, {'time': 0.026774139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:57.651" endtime="20201117 14:47:57.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.668" level="INFO">${ACCURACY} = {'time': [0.026671111, 0.026774139, 0.026871139, 0.026968194, 0.027066153, 0.027172181, 0.027268194, 0.027365194, 0.027462208, 0.027567236, 0.027664236, 0.027764236, 0.027863264, 0.027965264, 0.028065...</msg>
<status status="PASS" starttime="20201117 14:47:57.655" endtime="20201117 14:47:57.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.673" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.672" endtime="20201117 14:47:57.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.675" level="INFO">VALUE: [9.115300000000007e-05, 9.136099999999814e-05, 9.15139999999974e-05, 9.070800000000184e-05, 9.14719999999987e-05, 9.127800000000019e-05, 9.148599999999826e-05, 9.066599999999966e-05, 9.084699999999807e-05, 9.11939999999993e-05, 9.10139999999969e-05, 9.080500000000283e-05, 9.116699999999964e-05, 9.101400000000037e-05, 9.069499999999828e-05, 9.118099999999921e-05, 9.068100000000218e-05, 9.133400000000194e-05, 9.134700000000204e-05, 9.087500000000068e-05, 9.067999999999923e-05, 9.066699999999914e-05, 9.151400000000087e-05, 9.13190000000029e-05, 9.155599999999958e-05, 9.105499999999961e-05, 9.134800000000151e-05, 9.095900000000157e-05, 9.066599999999966e-05, 9.130499999999986e-05, 9.131899999999943e-05, 9.101400000000037e-05, 9.062500000000043e-05, 9.118099999999921e-05, 9.133400000000194e-05, 9.144499999999903e-05, 9.101400000000037e-05, 9.068099999999871e-05, 9.10000000000008e-05, 9.086100000000111e-05, 9.08329999999985e-05, 9.11390000000005e-05, 9.142999999999998e-05, 9.112500000000093e-05, 9.084700000000154e-05, 9.070900000000132e-05, 9.084699999999807e-05, 9.13199999999989e-05, 9.065300000000304e-05, 9.0945000000002e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.674" endtime="20201117 14:47:57.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.669" endtime="20201117 14:47:57.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.679" endtime="20201117 14:47:57.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.682" endtime="20201117 14:47:57.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.681" endtime="20201117 14:47:57.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.677" endtime="20201117 14:47:57.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.306" endtime="20201117 14:47:57.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.304" endtime="20201117 14:47:57.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.303" endtime="20201117 14:47:57.703"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.706" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.715" endtime="20201117 14:47:57.734"></status>
</kw>
<msg timestamp="20201117 14:47:57.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.713" endtime="20201117 14:47:57.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.736" endtime="20201117 14:47:57.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.738" endtime="20201117 14:47:57.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.710" endtime="20201117 14:47:57.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.708" endtime="20201117 14:47:57.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.748" endtime="20201117 14:47:58.034"></status>
</kw>
<msg timestamp="20201117 14:47:58.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025270194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025362528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.746" endtime="20201117 14:47:58.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025270194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025362528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.038" endtime="20201117 14:47:58.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.046" endtime="20201117 14:47:58.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.743" endtime="20201117 14:47:58.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.742" endtime="20201117 14:47:58.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.053" level="INFO">${RESULT} = [{'time': 0.025362528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.233399999999947e-05, 'source_diff': 9.233399999999947e-05}, {'time': 0.025461528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:58.050" endtime="20201117 14:47:58.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.067" level="INFO">${ACCURACY} = {'time': [0.025362528, 0.025461528, 0.025563583, 0.025665556, 0.025770583, 0.025877583, 0.025977597, 0.026077611, 0.026180611, 0.026277625, 0.026378653, 0.026484653, 0.026589681, 0.026686694, 0.026792...</msg>
<status status="PASS" starttime="20201117 14:47:58.054" endtime="20201117 14:47:58.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.072" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.071" endtime="20201117 14:47:58.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.074" level="INFO">VALUE: [9.233399999999947e-05, 9.25000000000023e-05, 9.220799999999987e-05, 9.20139999999979e-05, 9.1639000000001e-05, 9.234699999999957e-05, 9.166600000000066e-05, 9.215300000000107e-05, 9.2333e-05, 9.2333e-05, 9.168099999999971e-05, 9.183399999999897e-05, 9.236200000000208e-05, 9.218000000000073e-05, 9.168000000000023e-05, 9.218000000000073e-05, 9.212499999999846e-05, 9.223599999999901e-05, 9.251400000000187e-05, 9.198599999999876e-05, 9.230600000000033e-05, 9.234699999999957e-05, 9.199999999999833e-05, 9.166700000000014e-05, 9.236099999999914e-05, 9.168000000000023e-05, 9.184699999999907e-05, 9.20000000000018e-05, 9.231900000000043e-05, 9.251400000000187e-05, 9.216700000000064e-05, 9.219499999999978e-05, 9.165300000000057e-05, 9.199999999999833e-05, 9.198599999999876e-05, 9.215300000000107e-05, 9.251299999999893e-05, 9.162500000000143e-05, 9.218000000000073e-05, 9.168000000000023e-05, 9.218100000000021e-05, 9.234699999999957e-05, 9.220899999999935e-05, 9.186099999999864e-05, 9.168099999999971e-05, 9.184800000000201e-05, 9.251299999999893e-05, 9.170799999999937e-05, 9.184700000000254e-05, 9.25000000000023e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.073" endtime="20201117 14:47:58.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.068" endtime="20201117 14:47:58.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.077" endtime="20201117 14:47:58.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.081" endtime="20201117 14:47:58.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.079" endtime="20201117 14:47:58.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.076" endtime="20201117 14:47:58.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.706" endtime="20201117 14:47:58.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.704" endtime="20201117 14:47:58.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.704" endtime="20201117 14:47:58.103"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.105" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.114" endtime="20201117 14:47:58.133"></status>
</kw>
<msg timestamp="20201117 14:47:58.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.112" endtime="20201117 14:47:58.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.134" endtime="20201117 14:47:58.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.137" endtime="20201117 14:47:58.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.109" endtime="20201117 14:47:58.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.107" endtime="20201117 14:47:58.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.147" endtime="20201117 14:47:58.433"></status>
</kw>
<msg timestamp="20201117 14:47:58.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026029139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026122153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.145" endtime="20201117 14:47:58.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026029139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026122153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.438" endtime="20201117 14:47:58.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.446" endtime="20201117 14:47:58.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.142" endtime="20201117 14:47:58.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.140" endtime="20201117 14:47:58.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.453" level="INFO">${RESULT} = [{'time': 0.026122153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.30139999999989e-05, 'source_diff': 9.30139999999989e-05}, {'time': 0.026220139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:58.450" endtime="20201117 14:47:58.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.467" level="INFO">${ACCURACY} = {'time': [0.026122153, 0.026220139, 0.026325167, 0.026429208, 0.026533181, 0.026639194, 0.026744208, 0.026843236, 0.026941222, 0.027048236, 0.02715325, 0.027259278, 0.027367278, 0.027467292, 0.0275693...</msg>
<status status="PASS" starttime="20201117 14:47:58.454" endtime="20201117 14:47:58.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.472" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.471" endtime="20201117 14:47:58.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.474" level="INFO">VALUE: [9.30139999999989e-05, 9.3333000000001e-05, 9.284799999999954e-05, 9.355499999999864e-05, 9.284799999999954e-05, 9.26520000000021e-05, 9.317999999999826e-05, 9.26940000000008e-05, 9.315300000000207e-05, 9.281900000000093e-05, 9.281900000000093e-05, 9.284700000000007e-05, 9.33469999999971e-05, 9.301400000000237e-05, 9.273599999999951e-05, 9.31529999999986e-05, 9.312500000000293e-05, 9.272199999999994e-05, 9.302799999999847e-05, 9.267999999999776e-05, 9.270899999999985e-05, 9.349999999999983e-05, 9.266700000000114e-05, 9.34859999999968e-05, 9.287500000000268e-05, 9.336100000000014e-05, 9.312499999999946e-05, 9.316600000000216e-05, 9.349999999999983e-05, 9.284700000000007e-05, 9.307000000000065e-05, 9.318099999999774e-05, 9.30139999999989e-05, 9.262499999999896e-05, 9.268099999999724e-05, 9.35139999999994e-05, 9.334800000000004e-05, 9.334700000000057e-05, 9.336100000000014e-05, 9.30000000000028e-05, 9.299999999999933e-05, 9.298599999999976e-05, 9.26529999999981e-05, 9.3333000000001e-05, 9.284700000000007e-05, 9.284799999999954e-05, 9.3026999999999e-05, 9.274999999999908e-05, 9.298599999999976e-05, 9.26940000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.473" endtime="20201117 14:47:58.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.468" endtime="20201117 14:47:58.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.478" endtime="20201117 14:47:58.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.481" endtime="20201117 14:47:58.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.480" endtime="20201117 14:47:58.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.476" endtime="20201117 14:47:58.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.106" endtime="20201117 14:47:58.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.104" endtime="20201117 14:47:58.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.103" endtime="20201117 14:47:58.503"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.505" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.513" endtime="20201117 14:47:58.534"></status>
</kw>
<msg timestamp="20201117 14:47:58.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.512" endtime="20201117 14:47:58.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.536" endtime="20201117 14:47:58.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.539" endtime="20201117 14:47:58.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.509" endtime="20201117 14:47:58.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.507" endtime="20201117 14:47:58.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.548" endtime="20201117 14:47:58.835"></status>
</kw>
<msg timestamp="20201117 14:47:58.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025989431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026083569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.547" endtime="20201117 14:47:58.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025989431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026083569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.839" endtime="20201117 14:47:58.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.848" endtime="20201117 14:47:58.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.544" endtime="20201117 14:47:58.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.542" endtime="20201117 14:47:58.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.855" level="INFO">${RESULT} = [{'time': 0.026083569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.413800000000055e-05, 'source_diff': 9.413800000000055e-05}, {'time': 0.026183667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:58.851" endtime="20201117 14:47:58.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.870" level="INFO">${ACCURACY} = {'time': [0.026083569, 0.026183667, 0.026283611, 0.026384611, 0.026488625, 0.026595639, 0.026693653, 0.026794667, 0.026897722, 0.027000681, 0.027101694, 0.027202722, 0.027305722, 0.027404736, 0.027505...</msg>
<status status="PASS" starttime="20201117 14:47:58.856" endtime="20201117 14:47:58.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.874" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.873" endtime="20201117 14:47:58.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.877" level="INFO">VALUE: [9.413800000000055e-05, 9.425000000000058e-05, 9.413900000000003e-05, 9.417999999999926e-05, 9.418099999999874e-05, 9.38330000000015e-05, 9.387500000000021e-05, 9.416700000000264e-05, 9.438900000000028e-05, 9.451399999999693e-05, 9.41659999999997e-05, 9.369399999999833e-05, 9.40139999999999e-05, 9.417999999999926e-05, 9.366699999999867e-05, 9.448600000000126e-05, 9.418099999999874e-05, 9.418099999999874e-05, 9.369499999999781e-05, 9.406899999999871e-05, 9.386200000000011e-05, 9.38469999999976e-05, 9.404200000000251e-05, 9.36659999999992e-05, 9.45140000000004e-05, 9.405599999999861e-05, 9.4333000000002e-05, 9.416699999999917e-05, 9.4333999999998e-05, 9.36940000000018e-05, 9.401300000000043e-05, 9.4333000000002e-05, 9.38330000000015e-05, 9.384700000000107e-05, 9.434700000000157e-05, 9.40139999999999e-05, 9.36529999999991e-05, 9.416700000000264e-05, 9.436100000000114e-05, 9.384800000000054e-05, 9.391699999999892e-05, 9.363800000000005e-05, 9.450000000000083e-05, 9.41659999999997e-05, 9.41659999999997e-05, 9.45140000000004e-05, 9.418099999999874e-05, 9.40139999999999e-05, 9.43469999999981e-05, 9.434800000000104e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.875" endtime="20201117 14:47:58.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.871" endtime="20201117 14:47:58.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.881" endtime="20201117 14:47:58.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.884" endtime="20201117 14:47:58.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.883" endtime="20201117 14:47:58.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.879" endtime="20201117 14:47:58.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.506" endtime="20201117 14:47:58.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.504" endtime="20201117 14:47:58.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.503" endtime="20201117 14:47:58.905"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.908" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.916" endtime="20201117 14:47:58.937"></status>
</kw>
<msg timestamp="20201117 14:47:58.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.915" endtime="20201117 14:47:58.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.939" endtime="20201117 14:47:58.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.942" endtime="20201117 14:47:58.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.912" endtime="20201117 14:47:58.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.910" endtime="20201117 14:47:58.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.951" endtime="20201117 14:47:59.237"></status>
</kw>
<msg timestamp="20201117 14:47:59.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026181208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02627675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:58.950" endtime="20201117 14:47:59.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026181208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02627675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:59.241" endtime="20201117 14:47:59.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.250" endtime="20201117 14:47:59.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.947" endtime="20201117 14:47:59.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.945" endtime="20201117 14:47:59.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.257" level="INFO">${RESULT} = [{'time': 0.02627675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.554200000000054e-05, 'source_diff': 9.554200000000054e-05}, {'time': 0.026379694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:59.253" endtime="20201117 14:47:59.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.271" level="INFO">${ACCURACY} = {'time': [0.02627675, 0.026379694, 0.026482708, 0.026591722, 0.026694778, 0.02679475, 0.02689875, 0.027007764, 0.027107778, 0.027216792, 0.027316819, 0.027420819, 0.027528819, 0.027631847, 0.027732847...</msg>
<status status="PASS" starttime="20201117 14:47:59.258" endtime="20201117 14:47:59.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.276" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.275" endtime="20201117 14:47:59.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.278" level="INFO">VALUE: [9.554200000000054e-05, 9.48469999999986e-05, 9.55140000000014e-05, 9.550000000000183e-05, 9.536099999999867e-05, 9.499999999999786e-05, 9.466699999999967e-05, 9.55140000000014e-05, 9.551399999999793e-05, 9.484800000000154e-05, 9.552699999999803e-05, 9.53469999999991e-05, 9.533299999999953e-05, 9.484700000000207e-05, 9.534700000000257e-05, 9.486099999999817e-05, 9.484700000000207e-05, 9.469499999999881e-05, 9.518099999999974e-05, 9.519499999999931e-05, 9.500000000000133e-05, 9.518099999999974e-05, 9.552699999999803e-05, 9.484700000000207e-05, 9.55140000000014e-05, 9.48469999999986e-05, 9.468099999999924e-05, 9.500000000000133e-05, 9.54859999999988e-05, 9.5333999999999e-05, 9.516700000000017e-05, 9.549999999999836e-05, 9.467999999999976e-05, 9.502800000000047e-05, 9.533299999999953e-05, 9.549999999999836e-05, 9.552800000000097e-05, 9.55140000000014e-05, 9.468099999999924e-05, 9.519499999999931e-05, 9.518100000000321e-05, 9.50140000000009e-05, 9.51530000000006e-05, 9.531899999999996e-05, 9.486099999999817e-05, 9.531899999999996e-05, 9.533299999999953e-05, 9.518099999999974e-05, 9.537500000000171e-05, 9.501399999999743e-05]</msg>
<status status="PASS" starttime="20201117 14:47:59.277" endtime="20201117 14:47:59.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.272" endtime="20201117 14:47:59.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.281" endtime="20201117 14:47:59.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.285" endtime="20201117 14:47:59.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.283" endtime="20201117 14:47:59.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.280" endtime="20201117 14:47:59.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.909" endtime="20201117 14:47:59.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.907" endtime="20201117 14:47:59.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.906" endtime="20201117 14:47:59.306"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.309" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.317" endtime="20201117 14:47:59.337"></status>
</kw>
<msg timestamp="20201117 14:47:59.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.315" endtime="20201117 14:47:59.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.338" endtime="20201117 14:47:59.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.341" endtime="20201117 14:47:59.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.313" endtime="20201117 14:47:59.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.311" endtime="20201117 14:47:59.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.350" endtime="20201117 14:47:59.637"></status>
</kw>
<msg timestamp="20201117 14:47:59.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024892403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024988889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.349" endtime="20201117 14:47:59.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024892403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024988889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.641" endtime="20201117 14:47:59.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.650" endtime="20201117 14:47:59.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.346" endtime="20201117 14:47:59.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.344" endtime="20201117 14:47:59.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.657" level="INFO">${RESULT} = [{'time': 0.024988889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.64859999999998e-05, 'source_diff': 9.64859999999998e-05}, {'time': 0.025093903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:59.653" endtime="20201117 14:47:59.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.671" level="INFO">${ACCURACY} = {'time': [0.024988889, 0.025093903, 0.025193917, 0.025295931, 0.025397944, 0.025507958, 0.025608958, 0.025718986, 0.025820986, 0.025927014, 0.026029014, 0.026139014, 0.026250042, 0.026355069, 0.026461...</msg>
<status status="PASS" starttime="20201117 14:47:59.658" endtime="20201117 14:47:59.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.675" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.674" endtime="20201117 14:47:59.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.678" level="INFO">VALUE: [9.64859999999998e-05, 9.618100000000074e-05, 9.568100000000024e-05, 9.600000000000233e-05, 9.63470000000001e-05, 9.569400000000033e-05, 9.613900000000203e-05, 9.569400000000033e-05, 9.651399999999893e-05, 9.63470000000001e-05, 9.649999999999936e-05, 9.615299999999813e-05, 9.634799999999957e-05, 9.586099999999917e-05, 9.618100000000074e-05, 9.633300000000053e-05, 9.636099999999967e-05, 9.566599999999773e-05, 9.566700000000067e-05, 9.58469999999996e-05, 9.570899999999938e-05, 9.633300000000053e-05, 9.604199999999757e-05, 9.602800000000147e-05, 9.580600000000036e-05, 9.581900000000046e-05, 9.638899999999881e-05, 9.61660000000017e-05, 9.583300000000003e-05, 9.641600000000194e-05, 9.63470000000001e-05, 9.569500000000328e-05, 9.56669999999972e-05, 9.649999999999936e-05, 9.618100000000074e-05, 9.650000000000283e-05, 9.633300000000053e-05, 9.600000000000233e-05, 9.600000000000233e-05, 9.649999999999936e-05, 9.618100000000074e-05, 9.618100000000074e-05, 9.616700000000117e-05, 9.618099999999727e-05, 9.569400000000033e-05, 9.61660000000017e-05, 9.633300000000053e-05, 9.566599999999773e-05, 9.61660000000017e-05, 9.65279999999985e-05]</msg>
<status status="PASS" starttime="20201117 14:47:59.676" endtime="20201117 14:47:59.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.672" endtime="20201117 14:47:59.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.681" endtime="20201117 14:47:59.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.685" endtime="20201117 14:47:59.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.683" endtime="20201117 14:47:59.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.679" endtime="20201117 14:47:59.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.309" endtime="20201117 14:47:59.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.307" endtime="20201117 14:47:59.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.306" endtime="20201117 14:47:59.706"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.708" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.717" endtime="20201117 14:47:59.736"></status>
</kw>
<msg timestamp="20201117 14:47:59.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.715" endtime="20201117 14:47:59.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.738" endtime="20201117 14:47:59.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.741" endtime="20201117 14:47:59.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.712" endtime="20201117 14:47:59.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.710" endtime="20201117 14:47:59.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.751" endtime="20201117 14:48:00.036"></status>
</kw>
<msg timestamp="20201117 14:48:00.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025360653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025458125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.749" endtime="20201117 14:48:00.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025360653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025458125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.041" endtime="20201117 14:48:00.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.049" endtime="20201117 14:48:00.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.746" endtime="20201117 14:48:00.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.744" endtime="20201117 14:48:00.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.056" level="INFO">${RESULT} = [{'time': 0.025458125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.747200000000122e-05, 'source_diff': 9.747200000000122e-05}, {'time': 0.025569125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:00.053" endtime="20201117 14:48:00.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.070" level="INFO">${ACCURACY} = {'time': [0.025458125, 0.025569125, 0.025680139, 0.025782153, 0.025890222, 0.025999181, 0.026105208, 0.026211236, 0.026318222, 0.02642325, 0.026532236, 0.02663925, 0.026748278, 0.026851292, 0.02695329...</msg>
<status status="PASS" starttime="20201117 14:48:00.057" endtime="20201117 14:48:00.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.075" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.073" endtime="20201117 14:48:00.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.077" level="INFO">VALUE: [9.747200000000122e-05, 9.677800000000222e-05, 9.71530000000026e-05, 9.699999999999986e-05, 9.738899999999981e-05, 9.734800000000057e-05, 9.668000000000176e-05, 9.751399999999993e-05, 9.750000000000036e-05, 9.751399999999993e-05, 9.733300000000153e-05, 9.715299999999913e-05, 9.751399999999993e-05, 9.73609999999972e-05, 9.701399999999943e-05, 9.756899999999874e-05, 9.701299999999996e-05, 9.719400000000183e-05, 9.67080000000009e-05, 9.669400000000133e-05, 9.71669999999987e-05, 9.73470000000011e-05, 9.684699999999713e-05, 9.736200000000014e-05, 9.662499999999949e-05, 9.672200000000047e-05, 9.751300000000046e-05, 9.738899999999981e-05, 9.666599999999873e-05, 9.713899999999956e-05, 9.74860000000008e-05, 9.668100000000124e-05, 9.666700000000167e-05, 9.68340000000005e-05, 9.686199999999964e-05, 9.68340000000005e-05, 9.683299999999756e-05, 9.66660000000022e-05, 9.73470000000011e-05, 9.683300000000103e-05, 9.668000000000176e-05, 9.751399999999993e-05, 9.686100000000017e-05, 9.738800000000034e-05, 9.684800000000007e-05, 9.68340000000005e-05, 9.69730000000002e-05, 9.686100000000017e-05, 9.66799999999983e-05, 9.673600000000004e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.076" endtime="20201117 14:48:00.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.071" endtime="20201117 14:48:00.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.080" endtime="20201117 14:48:00.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.084" endtime="20201117 14:48:00.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.082" endtime="20201117 14:48:00.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.079" endtime="20201117 14:48:00.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.709" endtime="20201117 14:48:00.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.707" endtime="20201117 14:48:00.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.706" endtime="20201117 14:48:00.105"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.107" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.116" endtime="20201117 14:48:00.136"></status>
</kw>
<msg timestamp="20201117 14:48:00.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.114" endtime="20201117 14:48:00.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.138" endtime="20201117 14:48:00.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.141" endtime="20201117 14:48:00.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.112" endtime="20201117 14:48:00.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.110" endtime="20201117 14:48:00.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.150" endtime="20201117 14:48:00.437"></status>
</kw>
<msg timestamp="20201117 14:48:00.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025717542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025816194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.149" endtime="20201117 14:48:00.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025717542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025816194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.441" endtime="20201117 14:48:00.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.450" endtime="20201117 14:48:00.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.146" endtime="20201117 14:48:00.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.144" endtime="20201117 14:48:00.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.457" level="INFO">${RESULT} = [{'time': 0.025816194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.865200000000116e-05, 'source_diff': 9.865200000000116e-05}, {'time': 0.025925194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:00.453" endtime="20201117 14:48:00.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.472" level="INFO">${ACCURACY} = {'time': [0.025816194, 0.025925194, 0.026038208, 0.026140236, 0.026249236, 0.026354306, 0.02646025, 0.026571264, 0.026678278, 0.026789319, 0.026892375, 0.027003319, 0.027113333, 0.027220347, 0.0273303...</msg>
<status status="PASS" starttime="20201117 14:48:00.458" endtime="20201117 14:48:00.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.476" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.475" endtime="20201117 14:48:00.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.479" level="INFO">VALUE: [9.865200000000116e-05, 9.781899999999899e-05, 9.850000000000136e-05, 9.788900000000031e-05, 9.834699999999863e-05, 9.772300000000095e-05, 9.800000000000086e-05, 9.84860000000018e-05, 9.801400000000043e-05, 9.837499999999777e-05, 9.840300000000038e-05, 9.812500000000099e-05, 9.851400000000093e-05, 9.784699999999813e-05, 9.81799999999998e-05, 9.829199999999982e-05, 9.808299999999881e-05, 9.763900000000006e-05, 9.801399999999696e-05, 9.836200000000114e-05, 9.836100000000167e-05, 9.851300000000146e-05, 9.834699999999863e-05, 9.854200000000007e-05, 9.77080000000019e-05, 9.800000000000086e-05, 9.776400000000018e-05, 9.768099999999877e-05, 9.786100000000117e-05, 9.801400000000043e-05, 9.818100000000274e-05, 9.779099999999985e-05, 9.800000000000086e-05, 9.851400000000093e-05, 9.847199999999875e-05, 9.851400000000093e-05, 9.850000000000136e-05, 9.765299999999963e-05, 9.851399999999746e-05, 9.837499999999777e-05, 9.84999999999979e-05, 9.81799999999998e-05, 9.813900000000056e-05, 9.83609999999982e-05, 9.831899999999949e-05, 9.816700000000317e-05, 9.765299999999963e-05, 9.808300000000228e-05, 9.823600000000154e-05, 9.769500000000181e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.477" endtime="20201117 14:48:00.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.472" endtime="20201117 14:48:00.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.482" endtime="20201117 14:48:00.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.486" endtime="20201117 14:48:00.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.484" endtime="20201117 14:48:00.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.480" endtime="20201117 14:48:00.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.108" endtime="20201117 14:48:00.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.106" endtime="20201117 14:48:00.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.105" endtime="20201117 14:48:00.507"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.509" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.518" endtime="20201117 14:48:00.539"></status>
</kw>
<msg timestamp="20201117 14:48:00.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.516" endtime="20201117 14:48:00.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.541" endtime="20201117 14:48:00.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.543" endtime="20201117 14:48:00.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.513" endtime="20201117 14:48:00.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.511" endtime="20201117 14:48:00.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.553" endtime="20201117 14:48:00.839"></status>
</kw>
<msg timestamp="20201117 14:48:00.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025575097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025673889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.551" endtime="20201117 14:48:00.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025575097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025673889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.843" endtime="20201117 14:48:00.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.852" endtime="20201117 14:48:00.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.548" endtime="20201117 14:48:00.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.546" endtime="20201117 14:48:00.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.859" level="INFO">${RESULT} = [{'time': 0.025673889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.879199999999685e-05, 'source_diff': 9.879199999999685e-05}, {'time': 0.025784903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:00.855" endtime="20201117 14:48:00.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.873" level="INFO">${ACCURACY} = {'time': [0.025673889, 0.025784903, 0.025896958, 0.026004931, 0.026113958, 0.026219972, 0.026331958, 0.026441972, 0.026548, 0.026662014, 0.026767069, 0.026876056, 0.026990042, 0.027097056, 0.027205111...</msg>
<status status="PASS" starttime="20201117 14:48:00.860" endtime="20201117 14:48:00.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.877" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.876" endtime="20201117 14:48:00.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.880" level="INFO">VALUE: [9.879199999999685e-05, 9.900000000000186e-05, 9.92219999999995e-05, 9.951399999999846e-05, 9.919400000000037e-05, 9.936100000000267e-05, 9.894400000000012e-05, 9.94860000000028e-05, 9.916699999999723e-05, 9.933300000000006e-05, 9.923600000000254e-05, 9.919499999999984e-05, 9.94999999999989e-05, 9.865300000000063e-05, 9.920799999999994e-05, 9.94999999999989e-05, 9.95280000000015e-05, 9.886100000000217e-05, 9.909699999999938e-05, 9.91670000000007e-05, 9.882000000000293e-05, 9.934699999999963e-05, 9.901400000000143e-05, 9.879100000000085e-05, 9.869400000000333e-05, 9.870799999999944e-05, 9.86800000000003e-05, 9.93609999999992e-05, 9.901400000000143e-05, 9.901400000000143e-05, 9.901399999999796e-05, 9.94999999999989e-05, 9.900000000000186e-05, 9.93479999999991e-05, 9.917999999999733e-05, 9.937500000000224e-05, 9.952799999999803e-05, 9.866600000000073e-05, 9.89860000000023e-05, 9.869499999999934e-05, 9.919499999999984e-05, 9.919499999999984e-05, 9.88479999999986e-05, 9.91670000000007e-05, 9.883299999999956e-05, 9.934699999999963e-05, 9.862500000000149e-05, 9.916600000000123e-05, 9.86670000000002e-05, 9.951400000000193e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.878" endtime="20201117 14:48:00.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.873" endtime="20201117 14:48:00.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.883" endtime="20201117 14:48:00.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.886" endtime="20201117 14:48:00.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.885" endtime="20201117 14:48:00.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.881" endtime="20201117 14:48:00.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.510" endtime="20201117 14:48:00.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.508" endtime="20201117 14:48:00.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.507" endtime="20201117 14:48:00.908"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.911" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.919" endtime="20201117 14:48:00.939"></status>
</kw>
<msg timestamp="20201117 14:48:00.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.917" endtime="20201117 14:48:00.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.941" endtime="20201117 14:48:00.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.943" endtime="20201117 14:48:00.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.915" endtime="20201117 14:48:00.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.913" endtime="20201117 14:48:00.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.953" endtime="20201117 14:48:01.240"></status>
</kw>
<msg timestamp="20201117 14:48:01.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025855653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025955958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.951" endtime="20201117 14:48:01.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025855653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025955958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.244" endtime="20201117 14:48:01.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.253" endtime="20201117 14:48:01.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.949" endtime="20201117 14:48:01.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.947" endtime="20201117 14:48:01.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.260" level="INFO">${RESULT} = [{'time': 0.025955958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010030500000000192, 'source_diff': 0.00010030500000000192}, {'time': 0.026069986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:01.256" endtime="20201117 14:48:01.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.273" level="INFO">${ACCURACY} = {'time': [0.025955958, 0.026069986, 0.026181, 0.026291, 0.026395014, 0.026505028, 0.026612042, 0.026718125, 0.026832083, 0.026940097, 0.027047167, 0.027158097, 0.027263125, 0.027370139, 0.027478153, 0...</msg>
<status status="PASS" starttime="20201117 14:48:01.261" endtime="20201117 14:48:01.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.278" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.277" endtime="20201117 14:48:01.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.281" level="INFO">VALUE: [0.00010030500000000192, 0.00010033300000000106, 9.983300000000056e-05, 0.00010001399999999896, 9.984700000000013e-05, 0.00010011099999999995, 0.00010016699999999823, 0.00010055599999999817, 0.00010052699999999956, 0.00010016599999999876, 0.00010024999999999964, 0.00010016599999999876, 0.00010016699999999823, 9.986100000000317e-05, 0.000100028000000002, 9.962499999999902e-05, 9.98479999999996e-05, 0.00010018100000000127, 0.00010001299999999949, 0.00010051399999999946, 0.00010047200000000076, 0.00010029200000000182, 9.968100000000077e-05, 0.0001004999999999999, 9.968100000000077e-05, 9.998599999999983e-05, 9.99999999999994e-05, 0.0001001939999999979, 9.967999999999783e-05, 9.994400000000112e-05, 0.00010013900000000256, 0.00010019400000000137, 9.99020000000024e-05, 0.00010051400000000293, 9.970899999999991e-05, 0.00010033400000000053, 0.00010036199999999967, 0.00010016699999999823, 9.997200000000026e-05, 9.99999999999994e-05, 0.00010052799999999903, 9.96800000000013e-05, 0.00010051399999999946, 9.968100000000077e-05, 9.968100000000077e-05, 0.00010036199999999967, 9.99869999999993e-05, 9.965300000000163e-05, 9.984700000000013e-05, 0.00010052799999999557]</msg>
<status status="PASS" starttime="20201117 14:48:01.279" endtime="20201117 14:48:01.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.274" endtime="20201117 14:48:01.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.284" endtime="20201117 14:48:01.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.288" endtime="20201117 14:48:01.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.286" endtime="20201117 14:48:01.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.283" endtime="20201117 14:48:01.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.911" endtime="20201117 14:48:01.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.909" endtime="20201117 14:48:01.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.908" endtime="20201117 14:48:01.309"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.312" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.320" endtime="20201117 14:48:01.340"></status>
</kw>
<msg timestamp="20201117 14:48:01.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.318" endtime="20201117 14:48:01.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.342" endtime="20201117 14:48:01.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.345" endtime="20201117 14:48:01.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.316" endtime="20201117 14:48:01.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.314" endtime="20201117 14:48:01.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.355" endtime="20201117 14:48:01.641"></status>
</kw>
<msg timestamp="20201117 14:48:01.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024988806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025090056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.353" endtime="20201117 14:48:01.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024988806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025090056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.646" endtime="20201117 14:48:01.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.654" endtime="20201117 14:48:01.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.350" endtime="20201117 14:48:01.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.348" endtime="20201117 14:48:01.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.661" level="INFO">${RESULT} = [{'time': 0.025090056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010125000000000065, 'source_diff': 0.00010125000000000065}, {'time': 0.025206083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:01.657" endtime="20201117 14:48:01.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.674" level="INFO">${ACCURACY} = {'time': [0.025090056, 0.025206083, 0.025315083, 0.025427111, 0.025541111, 0.025657139, 0.025770181, 0.025882153, 0.025989167, 0.026095194, 0.026207208, 0.026315236, 0.026423222, 0.026537222, 0.026652...</msg>
<status status="PASS" starttime="20201117 14:48:01.662" endtime="20201117 14:48:01.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.679" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.678" endtime="20201117 14:48:01.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.692" level="INFO">VALUE: [0.00010125000000000065, 0.00010134700000000163, 0.00010134699999999816, 0.0001011939999999989, 0.00010134699999999816, 0.00010136099999999773, 0.00010088899999999984, 0.00010134700000000163, 0.0001006670000000022, 0.00010097199999999779, 0.0001008610000000007, 0.00010102799999999953, 0.00010151400000000046, 0.00010081899999999852, 0.00010122300000000098, 0.00010149999999999743, 0.0001008610000000007, 0.0001015000000000009, 0.00010119500000000184, 0.0001013610000000012, 0.00010117999999999933, 0.0001010419999999991, 0.0001006800000000023, 0.00010134699999999816, 0.00010119500000000184, 0.00010079200000000232, 0.0001010000000000004, 0.0001015000000000009, 0.0001006939999999984, 0.00010134799999999763, 0.00010154100000000013, 0.00010117999999999933, 0.0001011939999999989, 0.0001011800000000028, 0.0001006809999999983, 0.0001011670000000027, 0.00010133400000000153, 0.0001013480000000011, 0.00010129199999999935, 0.0001010000000000004, 0.0001006939999999984, 0.0001010000000000004, 0.000101513999999997, 0.00010152800000000003, 0.00010084700000000113, 0.00010151400000000046, 0.0001006670000000022, 0.00010119499999999837, 0.0001015000000000009, 0.00010098600000000083]</msg>
<status status="PASS" starttime="20201117 14:48:01.680" endtime="20201117 14:48:01.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.675" endtime="20201117 14:48:01.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.695" endtime="20201117 14:48:01.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.699" endtime="20201117 14:48:01.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.697" endtime="20201117 14:48:01.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.694" endtime="20201117 14:48:01.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.312" endtime="20201117 14:48:01.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.310" endtime="20201117 14:48:01.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.309" endtime="20201117 14:48:01.720"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.723" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.731" endtime="20201117 14:48:01.752"></status>
</kw>
<msg timestamp="20201117 14:48:01.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.730" endtime="20201117 14:48:01.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.753" endtime="20201117 14:48:01.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.756" endtime="20201117 14:48:01.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.727" endtime="20201117 14:48:01.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.725" endtime="20201117 14:48:01.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.765" endtime="20201117 14:48:02.051"></status>
</kw>
<msg timestamp="20201117 14:48:02.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02570275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025804556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:01.764" endtime="20201117 14:48:02.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02570275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025804556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:02.055" endtime="20201117 14:48:02.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.064" endtime="20201117 14:48:02.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.761" endtime="20201117 14:48:02.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.759" endtime="20201117 14:48:02.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.071" level="INFO">${RESULT} = [{'time': 0.025804556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010180599999999942, 'source_diff': 0.00010180599999999942}, {'time': 0.025914583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:02.067" endtime="20201117 14:48:02.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.086" level="INFO">${ACCURACY} = {'time': [0.025804556, 0.025914583, 0.026024583, 0.026138611, 0.026253639, 0.026370611, 0.026480625, 0.026594639, 0.026707653, 0.026822667, 0.026934681, 0.027043694, 0.027153778, 0.027270736, 0.027382...</msg>
<status status="PASS" starttime="20201117 14:48:02.072" endtime="20201117 14:48:02.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.090" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.089" endtime="20201117 14:48:02.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.093" level="INFO">VALUE: [0.00010180599999999942, 0.0001018610000000017, 0.00010166600000000026, 0.0001020139999999975, 0.00010254199999999714, 0.00010229200000000035, 0.00010166699999999973, 0.0001020000000000014, 0.00010182000000000246, 0.00010233400000000253, 0.00010183399999999856, 0.00010234699999999916, 0.00010190300000000041, 0.00010252800000000103, 0.00010218000000000033, 0.00010170900000000191, 0.00010240199999999797, 0.0001021809999999998, 0.00010197299999999826, 0.00010252700000000156, 0.00010202700000000106, 0.00010166600000000026, 0.00010216600000000076, 0.00010220799999999947, 0.0001025000000000019, 0.00010184700000000213, 0.00010224999999999818, 0.00010195900000000216, 0.00010219499999999937, 0.00010216700000000023, 0.00010198600000000183, 0.00010255600000000017, 0.000102513999999998, 0.00010233299999999959, 0.00010165300000000016, 0.00010175000000000115, 0.00010202800000000053, 0.000102513999999998, 0.00010252800000000103, 0.0001016809999999993, 0.00010181899999999952, 0.00010201400000000097, 0.00010167999999999983, 0.00010251400000000147, 0.00010252800000000103, 0.00010234699999999916, 0.00010233399999999906, 0.00010251400000000147, 0.00010166699999999973, 0.00010252700000000156]</msg>
<status status="PASS" starttime="20201117 14:48:02.091" endtime="20201117 14:48:02.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.087" endtime="20201117 14:48:02.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.096" endtime="20201117 14:48:02.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.100" endtime="20201117 14:48:02.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.098" endtime="20201117 14:48:02.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.094" endtime="20201117 14:48:02.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.723" endtime="20201117 14:48:02.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.721" endtime="20201117 14:48:02.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.721" endtime="20201117 14:48:02.121"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.123" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.132" endtime="20201117 14:48:02.152"></status>
</kw>
<msg timestamp="20201117 14:48:02.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.130" endtime="20201117 14:48:02.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.153" endtime="20201117 14:48:02.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.156" endtime="20201117 14:48:02.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.127" endtime="20201117 14:48:02.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.125" endtime="20201117 14:48:02.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.165" endtime="20201117 14:48:02.452"></status>
</kw>
<msg timestamp="20201117 14:48:02.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024994639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025098306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.163" endtime="20201117 14:48:02.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024994639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025098306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.457" endtime="20201117 14:48:02.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.465" endtime="20201117 14:48:02.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.161" endtime="20201117 14:48:02.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.159" endtime="20201117 14:48:02.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.472" level="INFO">${RESULT} = [{'time': 0.025098306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010366700000000173, 'source_diff': 0.00010366700000000173}, {'time': 0.025216292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:02.469" endtime="20201117 14:48:02.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.486" level="INFO">${ACCURACY} = {'time': [0.025098306, 0.025216292, 0.025332319, 0.025446319, 0.025560347, 0.025670347, 0.025787361, 0.025901389, 0.026013389, 0.026124389, 0.026238403, 0.026348417, 0.026458472, 0.026572458, 0.026685...</msg>
<status status="PASS" starttime="20201117 14:48:02.473" endtime="20201117 14:48:02.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.490" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.489" endtime="20201117 14:48:02.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.493" level="INFO">VALUE: [0.00010366700000000173, 0.00010334799999999963, 0.00010286099999999923, 0.00010284699999999966, 0.00010352800000000204, 0.00010333300000000059, 0.00010334700000000016, 0.00010295800000000022, 0.00010316700000000123, 0.00010333300000000059, 0.00010283399999999956, 0.00010284799999999913, 0.00010288900000000184, 0.00010336099999999973, 0.00010284699999999966, 0.00010352800000000204, 0.00010272199999999954, 0.00010268099999999683, 0.00010336099999999973, 0.000103513999999999, 0.0001030139999999985, 0.00010336099999999973, 0.00010354099999999866, 0.00010349999999999943, 0.00010351400000000247, 0.00010318000000000133, 0.00010266699999999726, 0.00010348599999999986, 0.00010333299999999712, 0.00010301400000000197, 0.00010352800000000204, 0.00010272199999999954, 0.00010336099999999973, 0.00010333300000000059, 0.00010268000000000083, 0.00010268000000000083, 0.00010283300000000009, 0.00010336099999999973, 0.00010301400000000197, 0.00010269499999999987, 0.00010315299999999819, 0.00010263800000000212, 0.00010284699999999966, 0.00010298599999999936, 0.00010299999999999893, 0.0001028749999999988, 0.00010294400000000065, 0.00010315299999999819, 0.0001031810000000008, 0.00010334799999999963]</msg>
<status status="PASS" starttime="20201117 14:48:02.491" endtime="20201117 14:48:02.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.486" endtime="20201117 14:48:02.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.496" endtime="20201117 14:48:02.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.500" endtime="20201117 14:48:02.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.498" endtime="20201117 14:48:02.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.494" endtime="20201117 14:48:02.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.124" endtime="20201117 14:48:02.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.122" endtime="20201117 14:48:02.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.121" endtime="20201117 14:48:02.521"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.523" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.532" endtime="20201117 14:48:02.551"></status>
</kw>
<msg timestamp="20201117 14:48:02.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.530" endtime="20201117 14:48:02.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.553" endtime="20201117 14:48:02.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.555" endtime="20201117 14:48:02.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.527" endtime="20201117 14:48:02.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.525" endtime="20201117 14:48:02.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.565" endtime="20201117 14:48:02.852"></status>
</kw>
<msg timestamp="20201117 14:48:02.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024942694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025046875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.563" endtime="20201117 14:48:02.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024942694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025046875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.856" endtime="20201117 14:48:02.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.864" endtime="20201117 14:48:02.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.561" endtime="20201117 14:48:02.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.559" endtime="20201117 14:48:02.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.871" level="INFO">${RESULT} = [{'time': 0.025046875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010418099999999833, 'source_diff': 0.00010418099999999833}, {'time': 0.025160875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:02.868" endtime="20201117 14:48:02.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.885" level="INFO">${ACCURACY} = {'time': [0.025046875, 0.025160875, 0.025269903, 0.025386917, 0.025502931, 0.025619917, 0.025737931, 0.025853944, 0.025972958, 0.026081986, 0.026200986, 0.026311014, 0.026425014, 0.026541083, 0.026652...</msg>
<status status="PASS" starttime="20201117 14:48:02.872" endtime="20201117 14:48:02.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.889" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.888" endtime="20201117 14:48:02.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.892" level="INFO">VALUE: [0.00010418099999999833, 0.00010434699999999769, 0.00010412500000000005, 0.00010452799999999957, 0.00010369500000000087, 0.00010398600000000036, 0.00010399999999999993, 0.00010398600000000036, 0.00010450000000000043, 0.00010368000000000183, 0.00010433299999999812, 0.00010384700000000066, 0.00010434700000000116, 0.0001045689999999988, 0.0001040139999999995, 0.00010416699999999876, 0.00010391700000000198, 0.00010384700000000066, 0.00010434700000000116, 0.00010384700000000066, 0.00010402799999999907, 0.00010399999999999993, 0.00010450000000000043, 0.0001036810000000013, 0.00010451300000000052, 0.0001040139999999995, 0.00010416599999999929, 0.00010384700000000066, 0.00010434700000000116, 0.0001040139999999995, 0.00010372300000000001, 0.000104514, 0.000104514, 0.00010369500000000087, 0.00010384800000000013, 0.00010445800000000172, 0.000104514, 0.00010436099999999726, 0.00010368000000000183, 0.00010374999999999968, 0.0001045420000000026, 0.00010450000000000043, 0.00010411099999999701, 0.000104514, 0.00010426399999999975, 0.00010367999999999836, 0.00010383300000000109, 0.00010431899999999855, 0.0001036940000000014, 0.00010386100000000023]</msg>
<status status="PASS" starttime="20201117 14:48:02.890" endtime="20201117 14:48:02.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.885" endtime="20201117 14:48:02.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.895" endtime="20201117 14:48:02.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.898" endtime="20201117 14:48:02.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.897" endtime="20201117 14:48:02.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.893" endtime="20201117 14:48:02.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.524" endtime="20201117 14:48:02.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.522" endtime="20201117 14:48:02.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.521" endtime="20201117 14:48:02.920"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.922" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.931" endtime="20201117 14:48:02.950"></status>
</kw>
<msg timestamp="20201117 14:48:02.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.929" endtime="20201117 14:48:02.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.952" endtime="20201117 14:48:02.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.955" endtime="20201117 14:48:02.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.926" endtime="20201117 14:48:02.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.924" endtime="20201117 14:48:02.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.964" endtime="20201117 14:48:03.250"></status>
</kw>
<msg timestamp="20201117 14:48:03.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024918764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025024083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.963" endtime="20201117 14:48:03.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024918764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025024083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.254" endtime="20201117 14:48:03.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.262" endtime="20201117 14:48:03.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.960" endtime="20201117 14:48:03.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.958" endtime="20201117 14:48:03.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.269" level="INFO">${RESULT} = [{'time': 0.025024083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010531899999999955, 'source_diff': 0.00010531899999999955}, {'time': 0.025139097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:03.266" endtime="20201117 14:48:03.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.283" level="INFO">${ACCURACY} = {'time': [0.025024083, 0.025139097, 0.025248181, 0.025359153, 0.025468153, 0.025579167, 0.025691181, 0.025808208, 0.025922194, 0.026034194, 0.026149208, 0.026262222, 0.026382236, 0.02650025, 0.0266172...</msg>
<status status="PASS" starttime="20201117 14:48:03.270" endtime="20201117 14:48:03.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.288" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.286" endtime="20201117 14:48:03.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.290" level="INFO">VALUE: [0.00010531899999999955, 0.00010549999999999796, 0.00010475000000000068, 0.00010470899999999797, 0.00010486100000000123, 0.0001046949999999984, 0.00010483400000000156, 0.000105207999999999, 0.00010483299999999862, 0.00010531899999999955, 0.00010548600000000186, 0.00010516600000000029, 0.00010550000000000143, 0.00010533299999999912, 0.00010516700000000323, 0.00010501399999999703, 0.0001048339999999981, 0.00010463900000000012, 0.00010555500000000023, 0.00010519399999999943, 0.00010534699999999869, 0.00010497200000000179, 0.00010551399999999753, 0.00010498600000000136, 0.00010466699999999926, 0.000104820000000002, 0.00010534800000000163, 0.00010517999999999986, 0.00010534699999999869, 0.00010502800000000007, 0.00010481899999999905, 0.0001046810000000023, 0.00010499999999999746, 0.0001050140000000005, 0.00010483400000000156, 0.00010547299999999829, 0.00010536100000000173, 0.00010469399999999893, 0.00010556999999999928, 0.00010483299999999862, 0.00010534700000000216, 0.0001048750000000008, 0.0001051810000000028, 0.00010552800000000057, 0.0001051949999999989, 0.00010516699999999976, 0.00010467999999999936, 0.00010534700000000216, 0.00010551399999999753, 0.00010522299999999804]</msg>
<status status="PASS" starttime="20201117 14:48:03.289" endtime="20201117 14:48:03.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.284" endtime="20201117 14:48:03.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.293" endtime="20201117 14:48:03.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.297" endtime="20201117 14:48:03.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.295" endtime="20201117 14:48:03.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.292" endtime="20201117 14:48:03.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.923" endtime="20201117 14:48:03.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.921" endtime="20201117 14:48:03.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.920" endtime="20201117 14:48:03.318"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.320" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.330" endtime="20201117 14:48:03.350"></status>
</kw>
<msg timestamp="20201117 14:48:03.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.328" endtime="20201117 14:48:03.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.351" endtime="20201117 14:48:03.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.354" endtime="20201117 14:48:03.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.325" endtime="20201117 14:48:03.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.323" endtime="20201117 14:48:03.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.363" endtime="20201117 14:48:03.652"></status>
</kw>
<msg timestamp="20201117 14:48:03.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026346556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026453208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.362" endtime="20201117 14:48:03.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026346556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026453208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.656" endtime="20201117 14:48:03.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.665" endtime="20201117 14:48:03.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.359" endtime="20201117 14:48:03.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.357" endtime="20201117 14:48:03.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.671" level="INFO">${RESULT} = [{'time': 0.026453208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010665199999999875, 'source_diff': 0.00010665199999999875}, {'time': 0.026565222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:03.668" endtime="20201117 14:48:03.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.686" level="INFO">${ACCURACY} = {'time': [0.026453208, 0.026565222, 0.026676236, 0.02679225, 0.026904278, 0.027015264, 0.027130278, 0.027242306, 0.027363306, 0.027476319, 0.027591333, 0.027701361, 0.027815389, 0.027930375, 0.0280503...</msg>
<status status="PASS" starttime="20201117 14:48:03.672" endtime="20201117 14:48:03.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.691" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.690" endtime="20201117 14:48:03.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.693" level="INFO">VALUE: [0.00010665199999999875, 0.00010634699999999969, 0.00010634699999999969, 0.00010568099999999983, 0.0001056949999999994, 0.00010633300000000012, 0.00010600000000000193, 0.00010568099999999983, 0.00010648699999999886, 0.00010584699999999919, 0.00010584699999999919, 0.0001058750000000018, 0.00010587499999999833, 0.00010600000000000193, 0.00010583299999999962, 0.00010584699999999919, 0.00010584800000000213, 0.0001063339999999996, 0.00010634699999999969, 0.00010568000000000036, 0.00010599999999999846, 0.0001060560000000002, 0.00010563900000000112, 0.00010658300000000037, 0.0001060140000000015, 0.0001060140000000015, 0.00010616700000000076, 0.00010634699999999969, 0.00010590300000000094, 0.00010650000000000243, 0.00010633300000000012, 0.00010618100000000033, 0.00010651399999999853, 0.00010568099999999983, 0.00010602800000000107, 0.00010652800000000157, 0.00010584800000000213, 0.00010599999999999846, 0.00010634699999999969, 0.00010568000000000036, 0.00010616699999999729, 0.00010636099999999926, 0.00010601399999999803, 0.00010587499999999833, 0.00010586199999999824, 0.00010655500000000123, 0.00010601299999999508, 0.000106514000000002, 0.00010633300000000012, 0.00010633300000000012]</msg>
<status status="PASS" starttime="20201117 14:48:03.692" endtime="20201117 14:48:03.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.687" endtime="20201117 14:48:03.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.696" endtime="20201117 14:48:03.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.700" endtime="20201117 14:48:03.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.698" endtime="20201117 14:48:03.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.695" endtime="20201117 14:48:03.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.321" endtime="20201117 14:48:03.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.319" endtime="20201117 14:48:03.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.318" endtime="20201117 14:48:03.722"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.724" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.733" endtime="20201117 14:48:03.753"></status>
</kw>
<msg timestamp="20201117 14:48:03.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.731" endtime="20201117 14:48:03.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.754" endtime="20201117 14:48:03.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.757" endtime="20201117 14:48:03.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.728" endtime="20201117 14:48:03.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.726" endtime="20201117 14:48:03.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.766" endtime="20201117 14:48:04.051"></status>
</kw>
<msg timestamp="20201117 14:48:04.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024856153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024962958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.765" endtime="20201117 14:48:04.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024856153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024962958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.056" endtime="20201117 14:48:04.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.064" endtime="20201117 14:48:04.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.762" endtime="20201117 14:48:04.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.760" endtime="20201117 14:48:04.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.071" level="INFO">${RESULT} = [{'time': 0.024962958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010680500000000148, 'source_diff': 0.00010680500000000148}, {'time': 0.025076986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:04.068" endtime="20201117 14:48:04.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.085" level="INFO">${ACCURACY} = {'time': [0.024962958, 0.025076986, 0.025196986, 0.025313, 0.025425028, 0.025545042, 0.025662042, 0.025778056, 0.025896083, 0.026017097, 0.026138097, 0.026258125, 0.026377167, 0.026493139, 0.026609153...</msg>
<status status="PASS" starttime="20201117 14:48:04.072" endtime="20201117 14:48:04.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.089" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.088" endtime="20201117 14:48:04.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.092" level="INFO">VALUE: [0.00010680500000000148, 0.00010715299999999872, 0.00010699999999999946, 0.00010718099999999786, 0.00010734699999999722, 0.0001075279999999991, 0.00010699999999999946, 0.00010751399999999953, 0.00010716599999999882, 0.0001075279999999991, 0.00010717999999999839, 0.00010734700000000069, 0.0001073889999999994, 0.00010734699999999722, 0.00010716699999999829, 0.00010751399999999953, 0.00010666700000000126, 0.00010666699999999779, 0.00010715199999999925, 0.00010698599999999989, 0.00010681900000000105, 0.00010665299999999822, 0.00010716700000000176, 0.00010693099999999761, 0.00010694500000000065, 0.00010686199999999924, 0.00010699999999999946, 0.00010737499999999983, 0.00010701399999999903, 0.00010736100000000026, 0.00010668100000000083, 0.00010667999999999789, 0.00010666700000000126, 0.0001068340000000001, 0.00010718099999999786, 0.00010668000000000136, 0.00010669400000000093, 0.00010751399999999953, 0.00010667999999999789, 0.00010733300000000112, 0.00010751399999999953, 0.00010734700000000069, 0.000107514000000003, 0.00010684799999999967, 0.0001073340000000006, 0.00010719399999999796, 0.00010748600000000039, 0.00010701399999999903, 0.00010734700000000069, 0.00010666700000000126]</msg>
<status status="PASS" starttime="20201117 14:48:04.090" endtime="20201117 14:48:04.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.086" endtime="20201117 14:48:04.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.096" endtime="20201117 14:48:04.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.099" endtime="20201117 14:48:04.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.097" endtime="20201117 14:48:04.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.094" endtime="20201117 14:48:04.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.725" endtime="20201117 14:48:04.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.723" endtime="20201117 14:48:04.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.722" endtime="20201117 14:48:04.120"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.123" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.131" endtime="20201117 14:48:04.151"></status>
</kw>
<msg timestamp="20201117 14:48:04.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.130" endtime="20201117 14:48:04.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.153" endtime="20201117 14:48:04.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.156" endtime="20201117 14:48:04.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.127" endtime="20201117 14:48:04.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.125" endtime="20201117 14:48:04.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.165" endtime="20201117 14:48:04.452"></status>
</kw>
<msg timestamp="20201117 14:48:04.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025010722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025119389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.163" endtime="20201117 14:48:04.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025010722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025119389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.456" endtime="20201117 14:48:04.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.465" endtime="20201117 14:48:04.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.161" endtime="20201117 14:48:04.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.159" endtime="20201117 14:48:04.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.471" level="INFO">${RESULT} = [{'time': 0.025119389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010866699999999979, 'source_diff': 0.00010866699999999979}, {'time': 0.025237403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:04.468" endtime="20201117 14:48:04.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.485" level="INFO">${ACCURACY} = {'time': [0.025119389, 0.025237403, 0.025352431, 0.025468431, 0.025588431, 0.025702458, 0.025817458, 0.025930486, 0.0260465, 0.0261595, 0.026274528, 0.026395528, 0.026514542, 0.026635556, 0.026754569,...</msg>
<status status="PASS" starttime="20201117 14:48:04.472" endtime="20201117 14:48:04.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.490" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.489" endtime="20201117 14:48:04.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.493" level="INFO">VALUE: [0.00010866699999999979, 0.00010818099999999886, 0.0001081950000000019, 0.00010851400000000053, 0.00010799999999999699, 0.00010801400000000003, 0.00010831900000000255, 0.00010767999999999889, 0.00010850000000000096, 0.00010801400000000003, 0.00010815299999999972, 0.00010851400000000053, 0.00010849999999999749, 0.00010801400000000003, 0.00010847199999999835, 0.00010817999999999939, 0.00010783299999999815, 0.00010767999999999889, 0.00010851400000000053, 0.00010833300000000212, 0.0001085280000000001, 0.00010804099999999969, 0.00010851399999999706, 0.00010851299999999758, 0.00010850000000000096, 0.00010786100000000076, 0.00010834700000000169, 0.00010836100000000126, 0.00010848600000000139, 0.00010787500000000033, 0.00010818099999999886, 0.00010852700000000062, 0.00010818000000000286, 0.00010766600000000279, 0.00010829099999999994, 0.00010786100000000076, 0.00010805599999999874, 0.00010816699999999929, 0.00010801400000000003, 0.00010800000000000046, 0.00010852699999999715, 0.00010768000000000236, 0.00010801400000000003, 0.00010851400000000053, 0.00010761100000000051, 0.00010798600000000089, 0.00010800000000000046, 0.00010848600000000139, 0.00010773600000000064, 0.00010816699999999929]</msg>
<status status="PASS" starttime="20201117 14:48:04.491" endtime="20201117 14:48:04.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.486" endtime="20201117 14:48:04.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.496" endtime="20201117 14:48:04.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.499" endtime="20201117 14:48:04.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.498" endtime="20201117 14:48:04.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.494" endtime="20201117 14:48:04.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.124" endtime="20201117 14:48:04.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.122" endtime="20201117 14:48:04.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.121" endtime="20201117 14:48:04.521"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.523" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.532" endtime="20201117 14:48:04.551"></status>
</kw>
<msg timestamp="20201117 14:48:04.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.530" endtime="20201117 14:48:04.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.553" endtime="20201117 14:48:04.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.555" endtime="20201117 14:48:04.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.527" endtime="20201117 14:48:04.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.525" endtime="20201117 14:48:04.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.565" endtime="20201117 14:48:04.851"></status>
</kw>
<msg timestamp="20201117 14:48:04.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024968069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025077694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.563" endtime="20201117 14:48:04.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024968069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025077694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.855" endtime="20201117 14:48:04.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.863" endtime="20201117 14:48:04.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.561" endtime="20201117 14:48:04.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.559" endtime="20201117 14:48:04.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.870" level="INFO">${RESULT} = [{'time': 0.025077694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010962500000000208, 'source_diff': 0.00010962500000000208}, {'time': 0.025192708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:04.867" endtime="20201117 14:48:04.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.884" level="INFO">${ACCURACY} = {'time': [0.025077694, 0.025192708, 0.025313722, 0.025431806, 0.02555475, 0.025674778, 0.025792806, 0.025915792, 0.026036806, 0.026153833, 0.026274833, 0.026396847, 0.026515861, 0.026634889, 0.0267489...</msg>
<status status="PASS" starttime="20201117 14:48:04.872" endtime="20201117 14:48:04.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.889" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.888" endtime="20201117 14:48:04.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.891" level="INFO">VALUE: [0.00010962500000000208, 0.00010867999999999989, 0.00010934699999999922, 0.00010907000000000278, 0.00010916700000000029, 0.00010901399999999756, 0.00010870900000000197, 0.00010916700000000029, 0.00010918099999999986, 0.00010901400000000103, 0.00010951400000000153, 0.00010918000000000039, 0.00010918000000000039, 0.00010886099999999829, 0.00010887500000000133, 0.00010934699999999922, 0.0001090280000000006, 0.00010869399999999946, 0.00010867999999999989, 0.0001095699999999998, 0.00010951400000000153, 0.00010904200000000017, 0.00010919499999999943, 0.00010955500000000076, 0.00010916600000000082, 0.0001093479999999987, 0.0001090280000000006, 0.00010952699999999815, 0.0001095419999999972, 0.00010918000000000039, 0.0001095280000000011, 0.00010884699999999872, 0.0001090280000000006, 0.00010934699999999922, 0.00010866699999999979, 0.00010951400000000153, 0.00010919399999999996, 0.00010918000000000039, 0.00010901399999999756, 0.0001095280000000011, 0.0001091950000000029, 0.00010949999999999849, 0.00010886099999999829, 0.00010949999999999849, 0.00010951400000000153, 0.00010952700000000162, 0.00010918000000000039, 0.00010918000000000039, 0.00010934699999999922, 0.0001091950000000029]</msg>
<status status="PASS" starttime="20201117 14:48:04.890" endtime="20201117 14:48:04.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.885" endtime="20201117 14:48:04.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.895" endtime="20201117 14:48:04.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.898" endtime="20201117 14:48:04.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.897" endtime="20201117 14:48:04.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.893" endtime="20201117 14:48:04.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.524" endtime="20201117 14:48:04.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.522" endtime="20201117 14:48:04.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.521" endtime="20201117 14:48:04.919"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.922" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.930" endtime="20201117 14:48:04.951"></status>
</kw>
<msg timestamp="20201117 14:48:04.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.929" endtime="20201117 14:48:04.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.952" endtime="20201117 14:48:04.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.955" endtime="20201117 14:48:04.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.926" endtime="20201117 14:48:04.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.924" endtime="20201117 14:48:04.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.964" endtime="20201117 14:48:05.251"></status>
</kw>
<msg timestamp="20201117 14:48:05.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025811875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025921986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.963" endtime="20201117 14:48:05.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025811875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025921986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.255" endtime="20201117 14:48:05.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.264" endtime="20201117 14:48:05.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.960" endtime="20201117 14:48:05.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.958" endtime="20201117 14:48:05.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.271" level="INFO">${RESULT} = [{'time': 0.025921986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011011099999999954, 'source_diff': 0.00011011099999999954}, {'time': 0.026046069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:05.267" endtime="20201117 14:48:05.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.286" level="INFO">${ACCURACY} = {'time': [0.025921986, 0.026046069, 0.026161014, 0.026279042, 0.026398042, 0.026519056, 0.026637069, 0.026761083, 0.026885097, 0.027009153, 0.027128125, 0.027246153, 0.027365153, 0.027484181, 0.027606...</msg>
<status status="PASS" starttime="20201117 14:48:05.272" endtime="20201117 14:48:05.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.290" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.289" endtime="20201117 14:48:05.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.293" level="INFO">VALUE: [0.00011011099999999954, 0.00010973600000000264, 0.00010983300000000015, 0.00011018099999999739, 0.00010999999999999899, 0.00010983399999999963, 0.00010983300000000015, 0.00010983300000000015, 0.00010998599999999942, 0.00011019500000000043, 0.00010980600000000049, 0.00011016699999999782, 0.00010982000000000006, 0.00010983399999999963, 0.00011049999999999949, 0.00011016600000000182, 0.0001100280000000016, 0.00010993000000000114, 0.00010998599999999942, 0.00011016700000000129, 0.00011002799999999813, 0.00010968099999999689, 0.00010966699999999732, 0.00010968000000000089, 0.00011033300000000065, 0.00010984699999999972, 0.00011030500000000151, 0.00011049999999999949, 0.00010999999999999899, 0.00011016699999999782, 0.00011043099999999764, 0.00010999999999999899, 0.00010999999999999899, 0.00010969400000000046, 0.00010999999999999899, 0.00010983300000000015, 0.00011034700000000022, 0.00010986099999999929, 0.00010984699999999972, 0.00011047200000000035, 0.00011036199999999927, 0.00010969399999999699, 0.00010984699999999972, 0.00011033300000000065, 0.00011034699999999675, 0.00010984700000000319, 0.00011034699999999675, 0.00011033299999999718, 0.00010986099999999582, 0.00011049999999999949]</msg>
<status status="PASS" starttime="20201117 14:48:05.291" endtime="20201117 14:48:05.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.287" endtime="20201117 14:48:05.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.296" endtime="20201117 14:48:05.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.300" endtime="20201117 14:48:05.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.298" endtime="20201117 14:48:05.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.294" endtime="20201117 14:48:05.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.923" endtime="20201117 14:48:05.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.921" endtime="20201117 14:48:05.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.920" endtime="20201117 14:48:05.321"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.323" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.332" endtime="20201117 14:48:05.352"></status>
</kw>
<msg timestamp="20201117 14:48:05.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.330" endtime="20201117 14:48:05.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.354" endtime="20201117 14:48:05.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.356" endtime="20201117 14:48:05.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.327" endtime="20201117 14:48:05.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.325" endtime="20201117 14:48:05.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.366" endtime="20201117 14:48:05.653"></status>
</kw>
<msg timestamp="20201117 14:48:05.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025130653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025242319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.364" endtime="20201117 14:48:05.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025130653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025242319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.657" endtime="20201117 14:48:05.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.666" endtime="20201117 14:48:05.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.362" endtime="20201117 14:48:05.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.360" endtime="20201117 14:48:05.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.672" level="INFO">${RESULT} = [{'time': 0.025242319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011166599999999985, 'source_diff': 0.00011166599999999985}, {'time': 0.025368333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:05.669" endtime="20201117 14:48:05.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.686" level="INFO">${ACCURACY} = {'time': [0.025242319, 0.025368333, 0.025486333, 0.025609347, 0.025726361, 0.025842389, 0.025959403, 0.026079417, 0.026196417, 0.026316486, 0.026438458, 0.026556514, 0.026675472, 0.0267945, 0.0269165,...</msg>
<status status="PASS" starttime="20201117 14:48:05.673" endtime="20201117 14:48:05.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.691" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.690" endtime="20201117 14:48:05.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.693" level="INFO">VALUE: [0.00011166599999999985, 0.00011152700000000015, 0.00011099999999999999, 0.00011133300000000165, 0.00011084700000000072, 0.00011086100000000029, 0.00011134699999999775, 0.00011101399999999956, 0.00011068099999999789, 0.000110902999999999, 0.00011136100000000079, 0.00011155599999999877, 0.00011083299999999768, 0.00011086100000000029, 0.00011101399999999956, 0.00011084700000000072, 0.00011066699999999832, 0.00011150000000000049, 0.00011068100000000136, 0.00011148600000000092, 0.0001110419999999987, 0.00011119399999999849, 0.00011097200000000085, 0.0001110280000000026, 0.00011136100000000079, 0.00011150000000000049, 0.00011151400000000006, 0.00011083399999999716, 0.00011068000000000189, 0.00011087499999999986, 0.00011069399999999799, 0.00011150000000000049, 0.00011101400000000303, 0.00011118099999999839, 0.00011083400000000063, 0.00011151400000000006, 0.00011122199999999763, 0.00011119400000000196, 0.00011117999999999892, 0.00011069399999999799, 0.00011069399999999799, 0.00011068100000000136, 0.00011152799999999963, 0.00011083400000000063, 0.00011152799999999963, 0.00011154099999999972, 0.00011083299999999768, 0.00011136100000000079, 0.00011069400000000146, 0.00011134700000000122]</msg>
<status status="PASS" starttime="20201117 14:48:05.692" endtime="20201117 14:48:05.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.687" endtime="20201117 14:48:05.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.696" endtime="20201117 14:48:05.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.700" endtime="20201117 14:48:05.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.698" endtime="20201117 14:48:05.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.695" endtime="20201117 14:48:05.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.324" endtime="20201117 14:48:05.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.322" endtime="20201117 14:48:05.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.321" endtime="20201117 14:48:05.721"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.724" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.732" endtime="20201117 14:48:05.752"></status>
</kw>
<msg timestamp="20201117 14:48:05.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.730" endtime="20201117 14:48:05.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.754" endtime="20201117 14:48:05.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.757" endtime="20201117 14:48:05.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.728" endtime="20201117 14:48:05.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.726" endtime="20201117 14:48:05.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.767" endtime="20201117 14:48:06.052"></status>
</kw>
<msg timestamp="20201117 14:48:06.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025151542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025263653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.765" endtime="20201117 14:48:06.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025151542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025263653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.056" endtime="20201117 14:48:06.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.065" endtime="20201117 14:48:06.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.762" endtime="20201117 14:48:06.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.761" endtime="20201117 14:48:06.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.072" level="INFO">${RESULT} = [{'time': 0.025263653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011211100000000154, 'source_diff': 0.00011211100000000154}, {'time': 0.025384653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:06.068" endtime="20201117 14:48:06.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.085" level="INFO">${ACCURACY} = {'time': [0.025263653, 0.025384653, 0.025504667, 0.025625667, 0.025751681, 0.025876708, 0.026001722, 0.026121736, 0.026242736, 0.026362778, 0.026486792, 0.026611806, 0.026738806, 0.026855833, 0.026973...</msg>
<status status="PASS" starttime="20201117 14:48:06.073" endtime="20201117 14:48:06.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.090" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.089" endtime="20201117 14:48:06.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.092" level="INFO">VALUE: [0.00011211100000000154, 0.00011252800000000063, 0.00011186100000000129, 0.00011211100000000154, 0.00011233399999999866, 0.00011167999999999942, 0.00011234700000000222, 0.00011167999999999942, 0.00011216699999999982, 0.00011169499999999846, 0.00011186099999999782, 0.0001118619999999973, 0.00011227800000000038, 0.00011216600000000035, 0.00011166599999999985, 0.00011201400000000056, 0.00011184700000000172, 0.00011166699999999932, 0.00011180599999999902, 0.00011198599999999795, 0.00011202800000000013, 0.0001123480000000017, 0.00011252699999999768, 0.00011186099999999782, 0.00011250000000000149, 0.00011187499999999739, 0.000111903, 0.00011218100000000286, 0.00011227800000000038, 0.00011251400000000106, 0.00011187500000000086, 0.00011170800000000203, 0.00011219399999999949, 0.00011166599999999985, 0.00011216699999999982, 0.00011229199999999995, 0.00011252800000000063, 0.00011201400000000056, 0.00011201400000000056, 0.000111903, 0.00011184700000000172, 0.00011202800000000013, 0.00011208400000000188, 0.00011234700000000222, 0.00011216699999999982, 0.00011169500000000193, 0.00011252799999999716, 0.00011199999999999752, 0.0001123480000000017, 0.00011168000000000289]</msg>
<status status="PASS" starttime="20201117 14:48:06.091" endtime="20201117 14:48:06.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.086" endtime="20201117 14:48:06.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.096" endtime="20201117 14:48:06.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.099" endtime="20201117 14:48:06.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.098" endtime="20201117 14:48:06.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.094" endtime="20201117 14:48:06.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.724" endtime="20201117 14:48:06.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.722" endtime="20201117 14:48:06.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.722" endtime="20201117 14:48:06.121"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.123" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.132" endtime="20201117 14:48:06.152"></status>
</kw>
<msg timestamp="20201117 14:48:06.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.130" endtime="20201117 14:48:06.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.153" endtime="20201117 14:48:06.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.156" endtime="20201117 14:48:06.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.128" endtime="20201117 14:48:06.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.125" endtime="20201117 14:48:06.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.165" endtime="20201117 14:48:06.450"></status>
</kw>
<msg timestamp="20201117 14:48:06.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025397806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025510472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.164" endtime="20201117 14:48:06.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025397806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025510472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.455" endtime="20201117 14:48:06.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.463" endtime="20201117 14:48:06.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.161" endtime="20201117 14:48:06.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.159" endtime="20201117 14:48:06.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.470" level="INFO">${RESULT} = [{'time': 0.025510472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011266600000000085, 'source_diff': 0.00011266600000000085}, {'time': 0.0256345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:06.467" endtime="20201117 14:48:06.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.484" level="INFO">${ACCURACY} = {'time': [0.025510472, 0.0256345, 0.025756542, 0.025877528, 0.026004528, 0.026129542, 0.026257556, 0.026378569, 0.026498583, 0.026622625, 0.026748653, 0.026866625, 0.026994639, 0.027118653, 0.02723966...</msg>
<status status="PASS" starttime="20201117 14:48:06.471" endtime="20201117 14:48:06.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.488" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.487" endtime="20201117 14:48:06.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.491" level="INFO">VALUE: [0.00011266600000000085, 0.00011336099999999932, 0.00011320899999999953, 0.00011279200000000045, 0.00011347199999999988, 0.00011301399999999809, 0.00011344500000000021, 0.00011266600000000085, 0.00011284699999999925, 0.00011336099999999932, 0.00011272199999999913, 0.00011301400000000156, 0.00011350000000000249, 0.00011318100000000039, 0.00011318100000000039, 0.00011318100000000039, 0.00011315199999999831, 0.00011336099999999932, 0.00011300000000000199, 0.00011349999999999902, 0.00011349999999999902, 0.00011281999999999959, 0.00011330600000000052, 0.00011318100000000039, 0.00011295799999999981, 0.00011284699999999925, 0.0001135559999999973, 0.00011351400000000206, 0.00011284699999999925, 0.00011306999999999984, 0.00011302800000000113, 0.00011318100000000039, 0.00011351399999999859, 0.00011324999999999877, 0.00011319400000000049, 0.00011269399999999999, 0.00011301400000000156, 0.00011284699999999925, 0.00011269499999999946, 0.00011319499999999996, 0.00011299999999999852, 0.00011283399999999916, 0.00011350000000000249, 0.00011301400000000156, 0.00011284699999999925, 0.00011284699999999925, 0.00011349999999999902, 0.00011284699999999925, 0.00011318099999999692, 0.00011266700000000379]</msg>
<status status="PASS" starttime="20201117 14:48:06.489" endtime="20201117 14:48:06.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.485" endtime="20201117 14:48:06.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.494" endtime="20201117 14:48:06.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.498" endtime="20201117 14:48:06.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.496" endtime="20201117 14:48:06.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.492" endtime="20201117 14:48:06.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.124" endtime="20201117 14:48:06.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.122" endtime="20201117 14:48:06.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.121" endtime="20201117 14:48:06.520"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.522" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.530" endtime="20201117 14:48:06.551"></status>
</kw>
<msg timestamp="20201117 14:48:06.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.529" endtime="20201117 14:48:06.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.552" endtime="20201117 14:48:06.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.555" endtime="20201117 14:48:06.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.526" endtime="20201117 14:48:06.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.524" endtime="20201117 14:48:06.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.564" endtime="20201117 14:48:06.852"></status>
</kw>
<msg timestamp="20201117 14:48:06.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025825722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025940208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.563" endtime="20201117 14:48:06.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025825722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025940208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.856" endtime="20201117 14:48:06.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.865" endtime="20201117 14:48:06.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.560" endtime="20201117 14:48:06.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.558" endtime="20201117 14:48:06.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.872" level="INFO">${RESULT} = [{'time': 0.025940208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011448600000000045, 'source_diff': 0.00011448600000000045}, {'time': 0.026061236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:06.868" endtime="20201117 14:48:06.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.886" level="INFO">${ACCURACY} = {'time': [0.025940208, 0.026061236, 0.026184264, 0.026304264, 0.026431278, 0.026551292, 0.026673375, 0.026801306, 0.026929333, 0.027049333, 0.027172347, 0.027295361, 0.027419389, 0.027547389, 0.027665...</msg>
<status status="PASS" starttime="20201117 14:48:06.873" endtime="20201117 14:48:06.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.891" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.890" endtime="20201117 14:48:06.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.894" level="INFO">VALUE: [0.00011448600000000045, 0.00011436100000000032, 0.00011404199999999823, 0.00011444500000000121, 0.00011368099999999742, 0.00011369500000000046, 0.00011426399999999934, 0.00011399999999999952, 0.00011386099999999982, 0.00011380499999999807, 0.00011367999999999795, 0.00011418000000000192, 0.00011452799999999916, 0.00011418099999999792, 0.00011386100000000329, 0.00011451399999999959, 0.00011450000000000002, 0.00011433300000000118, 0.00011384699999999678, 0.00011402799999999866, 0.00011418100000000139, 0.00011415300000000225, 0.00011418100000000139, 0.00011374999999999927, 0.00011399999999999952, 0.00011366700000000132, 0.00011388900000000243, 0.00011383300000000068, 0.00011451399999999959, 0.00011369500000000046, 0.00011368099999999742, 0.00011397200000000038, 0.00011386200000000277, 0.00011434800000000023, 0.00011405499999999832, 0.0001138749999999994, 0.00011401399999999909, 0.00011419399999999802, 0.00011450000000000002, 0.00011447200000000088, 0.00011369500000000046, 0.0001138619999999993, 0.00011418099999999792, 0.00011363899999999871, 0.00011417999999999845, 0.00011402800000000213, 0.00011381899999999417, 0.00011386099999999982, 0.00011384700000000025, 0.00011427799999999544]</msg>
<status status="PASS" starttime="20201117 14:48:06.892" endtime="20201117 14:48:06.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.887" endtime="20201117 14:48:06.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.897" endtime="20201117 14:48:06.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.901" endtime="20201117 14:48:06.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.899" endtime="20201117 14:48:06.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.896" endtime="20201117 14:48:06.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.523" endtime="20201117 14:48:06.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.521" endtime="20201117 14:48:06.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.520" endtime="20201117 14:48:06.922"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.925" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.933" endtime="20201117 14:48:06.953"></status>
</kw>
<msg timestamp="20201117 14:48:06.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.932" endtime="20201117 14:48:06.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.955" endtime="20201117 14:48:06.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.958" endtime="20201117 14:48:06.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.929" endtime="20201117 14:48:06.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.927" endtime="20201117 14:48:06.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.967" endtime="20201117 14:48:07.253"></status>
</kw>
<msg timestamp="20201117 14:48:07.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02497075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025086069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:06.966" endtime="20201117 14:48:07.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02497075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025086069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:07.257" endtime="20201117 14:48:07.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.266" endtime="20201117 14:48:07.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.963" endtime="20201117 14:48:07.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.961" endtime="20201117 14:48:07.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.273" level="INFO">${RESULT} = [{'time': 0.025086069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011531899999999914, 'source_diff': 0.00011531899999999914}, {'time': 0.025210083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:07.269" endtime="20201117 14:48:07.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.286" level="INFO">${ACCURACY} = {'time': [0.025086069, 0.025210083, 0.025330097, 0.025460125, 0.025580125, 0.025706139, 0.025831153, 0.025958167, 0.026087181, 0.026215194, 0.026341236, 0.026466236, 0.026591236, 0.02672025, 0.0268452...</msg>
<status status="PASS" starttime="20201117 14:48:07.274" endtime="20201117 14:48:07.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.291" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.290" endtime="20201117 14:48:07.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.294" level="INFO">VALUE: [0.00011531899999999914, 0.00011484700000000125, 0.00011534699999999828, 0.00011552800000000016, 0.00011544399999999927, 0.00011466699999999885, 0.00011534699999999828, 0.00011551400000000059, 0.00011532000000000209, 0.00011516599999999988, 0.00011554199999999973, 0.00011517999999999945, 0.00011483300000000168, 0.00011550000000000102, 0.00011533400000000166, 0.00011468099999999842, 0.00011466599999999938, 0.00011501299999999715, 0.00011497199999999791, 0.00011467999999999895, 0.00011545799999999884, 0.00011516699999999935, 0.00011549999999999755, 0.00011534699999999828, 0.00011468099999999842, 0.00011468099999999842, 0.00011484700000000125, 0.00011487499999999692, 0.00011484700000000125, 0.00011508399999999794, 0.00011502799999999966, 0.00011551400000000059, 0.00011534700000000175, 0.00011467999999999895, 0.00011484699999999778, 0.00011533299999999871, 0.00011470799999999809, 0.00011483299999999821, 0.00011501400000000009, 0.00011550000000000102, 0.00011531999999999862, 0.00011502800000000313, 0.00011508300000000193, 0.00011549999999999755, 0.00011483300000000168, 0.00011534699999999828, 0.00011551399999999712, 0.00011511100000000107, 0.00011551400000000059, 0.00011484700000000125]</msg>
<status status="PASS" starttime="20201117 14:48:07.292" endtime="20201117 14:48:07.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.287" endtime="20201117 14:48:07.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.297" endtime="20201117 14:48:07.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.301" endtime="20201117 14:48:07.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.299" endtime="20201117 14:48:07.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.295" endtime="20201117 14:48:07.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.925" endtime="20201117 14:48:07.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.923" endtime="20201117 14:48:07.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.923" endtime="20201117 14:48:07.322"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.324" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.333" endtime="20201117 14:48:07.353"></status>
</kw>
<msg timestamp="20201117 14:48:07.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.331" endtime="20201117 14:48:07.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.355" endtime="20201117 14:48:07.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.357" endtime="20201117 14:48:07.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.328" endtime="20201117 14:48:07.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.326" endtime="20201117 14:48:07.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.367" endtime="20201117 14:48:07.652"></status>
</kw>
<msg timestamp="20201117 14:48:07.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024808931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02492525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:07.365" endtime="20201117 14:48:07.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024808931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02492525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:07.656" endtime="20201117 14:48:07.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.665" endtime="20201117 14:48:07.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.363" endtime="20201117 14:48:07.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.361" endtime="20201117 14:48:07.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.672" level="INFO">${RESULT} = [{'time': 0.02492525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011631900000000014, 'source_diff': 0.00011631900000000014}, {'time': 0.025049264, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:48:07.668" endtime="20201117 14:48:07.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.686" level="INFO">${ACCURACY} = {'time': [0.02492525, 0.025049264, 0.025174264, 0.025302278, 0.025426292, 0.025557306, 0.025678319, 0.025801333, 0.025922347, 0.026044361, 0.026170389, 0.026296403, 0.026424403, 0.026553431, 0.0266834...</msg>
<status status="PASS" starttime="20201117 14:48:07.673" endtime="20201117 14:48:07.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.690" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.689" endtime="20201117 14:48:07.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.693" level="INFO">VALUE: [0.00011631900000000014, 0.00011568100000000289, 0.00011583299999999921, 0.00011600000000000152, 0.00011584799999999826, 0.00011649999999999855, 0.00011580500000000007, 0.00011633299999999971, 0.00011617999999999698, 0.00011616699999999688, 0.00011619499999999949, 0.00011633399999999919, 0.00011601399999999762, 0.00011584799999999826, 0.00011600000000000152, 0.00011563800000000124, 0.00011651399999999812, 0.00011567999999999995, 0.00011651400000000159, 0.00011569499999999899, 0.00011640199999999809, 0.00011634799999999876, 0.00011566600000000038, 0.00011633299999999971, 0.00011583299999999921, 0.00011599999999999805, 0.00011619400000000002, 0.00011648600000000245, 0.00011618099999999992, 0.00011591599999999716, 0.00011568099999999942, 0.00011584800000000173, 0.00011648599999999898, 0.00011567999999999995, 0.00011644400000000027, 0.00011651399999999812, 0.00011633299999999971, 0.00011583299999999921, 0.00011651400000000159, 0.00011600000000000152, 0.00011623599999999873, 0.00011634700000000275, 0.00011597199999999891, 0.00011652799999999769, 0.00011618099999999992, 0.00011619499999999949, 0.00011584699999999878, 0.00011569500000000246, 0.00011601399999999762, 0.00011599999999999805]</msg>
<status status="PASS" starttime="20201117 14:48:07.692" endtime="20201117 14:48:07.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.687" endtime="20201117 14:48:07.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.696" endtime="20201117 14:48:07.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.700" endtime="20201117 14:48:07.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.698" endtime="20201117 14:48:07.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.694" endtime="20201117 14:48:07.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.325" endtime="20201117 14:48:07.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.323" endtime="20201117 14:48:07.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.322" endtime="20201117 14:48:07.721"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.724" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.732" endtime="20201117 14:48:07.752"></status>
</kw>
<msg timestamp="20201117 14:48:07.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.730" endtime="20201117 14:48:07.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.754" endtime="20201117 14:48:07.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.756" endtime="20201117 14:48:07.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.728" endtime="20201117 14:48:07.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.726" endtime="20201117 14:48:07.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.766" endtime="20201117 14:48:08.052"></status>
</kw>
<msg timestamp="20201117 14:48:08.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024850722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024968236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.764" endtime="20201117 14:48:08.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024850722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024968236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.056" endtime="20201117 14:48:08.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.065" endtime="20201117 14:48:08.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.761" endtime="20201117 14:48:08.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.760" endtime="20201117 14:48:08.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.072" level="INFO">${RESULT} = [{'time': 0.024968236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011751400000000259, 'source_diff': 0.00011751400000000259}, {'time': 0.025098236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:08.069" endtime="20201117 14:48:08.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.085" level="INFO">${ACCURACY} = {'time': [0.024968236, 0.025098236, 0.02522925, 0.025356264, 0.025477278, 0.025604292, 0.025730306, 0.025855319, 0.025985347, 0.026110347, 0.026232361, 0.026360389, 0.026489417, 0.026617403, 0.0267444...</msg>
<status status="PASS" starttime="20201117 14:48:08.073" endtime="20201117 14:48:08.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.090" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.089" endtime="20201117 14:48:08.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.093" level="INFO">VALUE: [0.00011751400000000259, 0.00011734700000000028, 0.00011662500000000214, 0.00011744500000000074, 0.00011668100000000042, 0.00011684799999999926, 0.00011684800000000273, 0.00011681900000000064, 0.00011701399999999862, 0.00011701399999999862, 0.00011699999999999905, 0.00011702800000000166, 0.0001168750000000024, 0.00011700000000000252, 0.00011684799999999926, 0.00011732000000000062, 0.00011750000000000302, 0.00011704200000000123, 0.00011666700000000085, 0.00011681900000000064, 0.00011702799999999819, 0.00011741599999999866, 0.00011719499999999702, 0.00011752699999999922, 0.00011673599999999923, 0.00011663899999999824, 0.00011701400000000209, 0.00011751399999999912, 0.00011684699999999978, 0.00011736099999999985, 0.00011699999999999905, 0.00011668100000000042, 0.00011749999999999955, 0.00011733300000000071, 0.00011733299999999725, 0.00011755599999999783, 0.00011701399999999862, 0.0001168750000000024, 0.00011701400000000209, 0.00011751400000000259, 0.00011718100000000092, 0.00011751299999999965, 0.00011719399999999755, 0.00011684699999999978, 0.00011701399999999862, 0.00011734700000000028, 0.00011734700000000028, 0.00011680600000000055, 0.00011752800000000216, 0.00011740299999999856]</msg>
<status status="PASS" starttime="20201117 14:48:08.091" endtime="20201117 14:48:08.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.086" endtime="20201117 14:48:08.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.096" endtime="20201117 14:48:08.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.099" endtime="20201117 14:48:08.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.098" endtime="20201117 14:48:08.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.094" endtime="20201117 14:48:08.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.724" endtime="20201117 14:48:08.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.722" endtime="20201117 14:48:08.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.721" endtime="20201117 14:48:08.121"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.123" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.132" endtime="20201117 14:48:08.152"></status>
</kw>
<msg timestamp="20201117 14:48:08.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.130" endtime="20201117 14:48:08.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.154" endtime="20201117 14:48:08.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.157" endtime="20201117 14:48:08.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.127" endtime="20201117 14:48:08.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.125" endtime="20201117 14:48:08.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.167" endtime="20201117 14:48:08.452"></status>
</kw>
<msg timestamp="20201117 14:48:08.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026067028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026185528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.165" endtime="20201117 14:48:08.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026067028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026185528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.457" endtime="20201117 14:48:08.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.466" endtime="20201117 14:48:08.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.162" endtime="20201117 14:48:08.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.160" endtime="20201117 14:48:08.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.473" level="INFO">${RESULT} = [{'time': 0.026185528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011850000000000055, 'source_diff': 0.00011850000000000055}, {'time': 0.026312528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:08.470" endtime="20201117 14:48:08.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.488" level="INFO">${ACCURACY} = {'time': [0.026185528, 0.026312528, 0.026434542, 0.026560556, 0.026685583, 0.026815597, 0.026945611, 0.027068625, 0.027196653, 0.027321653, 0.027450681, 0.027576694, 0.027701764, 0.027827722, 0.027954...</msg>
<status status="PASS" starttime="20201117 14:48:08.474" endtime="20201117 14:48:08.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.493" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.491" endtime="20201117 14:48:08.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.495" level="INFO">VALUE: [0.00011850000000000055, 0.00011816700000000235, 0.00011766699999999838, 0.00011765299999999881, 0.00011834699999999782, 0.00011816599999999941, 0.00011818000000000245, 0.00011800000000000005, 0.00011802800000000266, 0.00011783400000000069, 0.000117695000000001, 0.00011769399999999805, 0.00011808300000000146, 0.00011769399999999805, 0.00011818000000000245, 0.00011849999999999708, 0.00011847200000000141, 0.00011851400000000012, 0.00011818099999999845, 0.00011833400000000119, 0.00011763799999999977, 0.00011836100000000085, 0.00011783300000000121, 0.00011833300000000171, 0.00011768099999999795, 0.000117695000000001, 0.00011833400000000119, 0.00011801400000000309, 0.00011802699999999972, 0.00011804100000000275, 0.00011834699999999782, 0.00011836099999999738, 0.00011784699999999732, 0.00011830599999999858, 0.00011836100000000085, 0.00011832000000000162, 0.00011830599999999858, 0.00011816699999999888, 0.00011784699999999732, 0.00011819400000000202, 0.00011851399999999665, 0.00011781900000000511, 0.00011766699999999491, 0.00011818000000000245, 0.00011848700000000045, 0.00011834699999999782, 0.00011819399999999508, 0.00011801399999999962, 0.00011767999999999501, 0.00011817999999999551]</msg>
<status status="PASS" starttime="20201117 14:48:08.494" endtime="20201117 14:48:08.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.489" endtime="20201117 14:48:08.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.498" endtime="20201117 14:48:08.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.502" endtime="20201117 14:48:08.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.500" endtime="20201117 14:48:08.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.496" endtime="20201117 14:48:08.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.124" endtime="20201117 14:48:08.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.122" endtime="20201117 14:48:08.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.121" endtime="20201117 14:48:08.523"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.525" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.534" endtime="20201117 14:48:08.554"></status>
</kw>
<msg timestamp="20201117 14:48:08.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.532" endtime="20201117 14:48:08.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.556" endtime="20201117 14:48:08.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.559" endtime="20201117 14:48:08.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.530" endtime="20201117 14:48:08.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.528" endtime="20201117 14:48:08.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.569" endtime="20201117 14:48:08.855"></status>
</kw>
<msg timestamp="20201117 14:48:08.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025196181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025315681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.567" endtime="20201117 14:48:08.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025196181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025315681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.859" endtime="20201117 14:48:08.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.868" endtime="20201117 14:48:08.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.564" endtime="20201117 14:48:08.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.562" endtime="20201117 14:48:08.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.875" level="INFO">${RESULT} = [{'time': 0.025315681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011949999999999808, 'source_diff': 0.00011949999999999808}, {'time': 0.025439681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:08.871" endtime="20201117 14:48:08.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.888" level="INFO">${ACCURACY} = {'time': [0.025315681, 0.025439681, 0.025565694, 0.025694764, 0.025825722, 0.025956736, 0.02607975, 0.026211806, 0.026336778, 0.026469806, 0.026598833, 0.026729833, 0.026856889, 0.026984861, 0.0271168...</msg>
<status status="PASS" starttime="20201117 14:48:08.876" endtime="20201117 14:48:08.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.893" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.892" endtime="20201117 14:48:08.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.895" level="INFO">VALUE: [0.00011949999999999808, 0.00011868099999999895, 0.00011884699999999832, 0.00011881999999999865, 0.00011934699999999882, 0.00011934700000000228, 0.00011884699999999832, 0.00011952800000000069, 0.00011948600000000198, 0.00011866699999999938, 0.00011952699999999775, 0.00011900000000000105, 0.00011872199999999819, 0.00011934699999999882, 0.00011884699999999832, 0.00011901399999999715, 0.00011951399999999765, 0.00011897299999999791, 0.00011952700000000122, 0.00011936099999999839, 0.00011886100000000135, 0.00011866599999999991, 0.00011883299999999875, 0.00011870900000000156, 0.00011951399999999765, 0.00011933399999999872, 0.00011899999999999758, 0.00011869399999999905, 0.00011952800000000069, 0.00011917999999999998, 0.00011901400000000062, 0.00011918099999999945, 0.00011899999999999758, 0.00011868100000000242, 0.00011936199999999786, 0.00011866699999999938, 0.00011869399999999905, 0.00011867999999999948, 0.00011901400000000062, 0.00011951399999999765, 0.00011877799999999994, 0.00011913900000000074, 0.00011909799999999804, 0.00011948699999999798, 0.00011867999999999948, 0.00011919400000000302, 0.00011952800000000069, 0.00011901400000000062, 0.00011916700000000335, 0.00011900000000000105]</msg>
<status status="PASS" starttime="20201117 14:48:08.894" endtime="20201117 14:48:08.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.889" endtime="20201117 14:48:08.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.899" endtime="20201117 14:48:08.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.902" endtime="20201117 14:48:08.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.901" endtime="20201117 14:48:08.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.897" endtime="20201117 14:48:08.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.526" endtime="20201117 14:48:08.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.524" endtime="20201117 14:48:08.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.523" endtime="20201117 14:48:08.923"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.926" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.935" endtime="20201117 14:48:08.955"></status>
</kw>
<msg timestamp="20201117 14:48:08.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.933" endtime="20201117 14:48:08.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.956" endtime="20201117 14:48:08.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.959" endtime="20201117 14:48:08.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.931" endtime="20201117 14:48:08.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.928" endtime="20201117 14:48:08.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.969" endtime="20201117 14:48:09.254"></status>
</kw>
<msg timestamp="20201117 14:48:09.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025534181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025654083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.967" endtime="20201117 14:48:09.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025534181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025654083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.258" endtime="20201117 14:48:09.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.266" endtime="20201117 14:48:09.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.964" endtime="20201117 14:48:09.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.962" endtime="20201117 14:48:09.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.273" level="INFO">${RESULT} = [{'time': 0.025654083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011990200000000159, 'source_diff': 0.00011990200000000159}, {'time': 0.025784153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:09.270" endtime="20201117 14:48:09.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.287" level="INFO">${ACCURACY} = {'time': [0.025654083, 0.025784153, 0.025910097, 0.026044139, 0.026173153, 0.026299167, 0.026434208, 0.026562181, 0.026694208, 0.026823264, 0.026954222, 0.027079292, 0.02721025, 0.027343278, 0.0274742...</msg>
<status status="PASS" starttime="20201117 14:48:09.274" endtime="20201117 14:48:09.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.292" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.290" endtime="20201117 14:48:09.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.294" level="INFO">VALUE: [0.00011990200000000159, 0.0001200699999999999, 0.00011995799999999987, 0.00012019500000000002, 0.00012002800000000119, 0.00012002799999999772, 0.00012055500000000136, 0.00012018100000000045, 0.00012001400000000162, 0.0001205700000000004, 0.00012016600000000141, 0.0001205700000000004, 0.00012047199999999994, 0.00011986099999999889, 0.00012018100000000045, 0.00011997300000000238, 0.00012034699999999982, 0.00011984699999999932, 0.00011968000000000048, 0.0001197089999999991, 0.00012034699999999982, 0.00011968099999999995, 0.00012019500000000002, 0.00012054100000000179, 0.00011966700000000038, 0.00012052699999999875, 0.00012034699999999982, 0.00011991700000000063, 0.00011986099999999889, 0.00011966700000000038, 0.00011999999999999858, 0.00011968099999999995, 0.00011968099999999995, 0.00011984699999999932, 0.00012023599999999926, 0.00012034699999999982, 0.00011981900000000018, 0.00012016700000000088, 0.00012056900000000093, 0.00012011099999999914, 0.00011966700000000038, 0.00012034699999999982, 0.0001203189999999972, 0.00011987500000000192, 0.00011968000000000048, 0.00012018099999999698, 0.00012018100000000392, 0.00011984700000000625, 0.00012018099999999698, 0.00011968100000000342]</msg>
<status status="PASS" starttime="20201117 14:48:09.293" endtime="20201117 14:48:09.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.288" endtime="20201117 14:48:09.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.297" endtime="20201117 14:48:09.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.301" endtime="20201117 14:48:09.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.300" endtime="20201117 14:48:09.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.296" endtime="20201117 14:48:09.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.927" endtime="20201117 14:48:09.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.925" endtime="20201117 14:48:09.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.924" endtime="20201117 14:48:09.323"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.325" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.333" endtime="20201117 14:48:09.354"></status>
</kw>
<msg timestamp="20201117 14:48:09.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.332" endtime="20201117 14:48:09.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.355" endtime="20201117 14:48:09.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.358" endtime="20201117 14:48:09.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.329" endtime="20201117 14:48:09.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.327" endtime="20201117 14:48:09.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.367" endtime="20201117 14:48:09.654"></status>
</kw>
<msg timestamp="20201117 14:48:09.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025189944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025310764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.366" endtime="20201117 14:48:09.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025189944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025310764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.658" endtime="20201117 14:48:09.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.666" endtime="20201117 14:48:09.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.363" endtime="20201117 14:48:09.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.361" endtime="20201117 14:48:09.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.673" level="INFO">${RESULT} = [{'time': 0.025310764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012082000000000065, 'source_diff': 0.00012082000000000065}, {'time': 0.025439819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:09.670" endtime="20201117 14:48:09.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.687" level="INFO">${ACCURACY} = {'time': [0.025310764, 0.025439819, 0.025567792, 0.025699819, 0.025827847, 0.025953847, 0.026083903, 0.026211889, 0.026346889, 0.026472931, 0.026600944, 0.026729944, 0.026863944, 0.026994972, 0.027120...</msg>
<status status="PASS" starttime="20201117 14:48:09.674" endtime="20201117 14:48:09.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.691" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.690" endtime="20201117 14:48:09.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.694" level="INFO">VALUE: [0.00012082000000000065, 0.00012117999999999851, 0.00012150000000000008, 0.00012067999999999801, 0.00012102800000000219, 0.00012151399999999965, 0.00012122199999999722, 0.00012068099999999748, 0.00012101399999999915, 0.00012087500000000292, 0.00012137499999999996, 0.00012119399999999808, 0.00012084700000000032, 0.00012134699999999735, 0.00012133300000000125, 0.00012151400000000312, 0.00012099999999999958, 0.00012086099999999989, 0.00012118100000000145, 0.00012134800000000029, 0.00012150000000000008, 0.00012150000000000008, 0.00012152799999999922, 0.00012118000000000198, 0.00012069500000000052, 0.00012083400000000022, 0.00012084700000000032, 0.00012133400000000072, 0.00012133399999999725, 0.00012136100000000039, 0.00012151399999999965, 0.00012081900000000118, 0.00012099999999999958, 0.0001207090000000001, 0.00012152799999999922, 0.00012069500000000052, 0.00012119400000000155, 0.00012137499999999996, 0.00012084700000000032, 0.00012083300000000075, 0.00012088899999999903, 0.00012134700000000082, 0.00012134700000000082, 0.00012068100000000095, 0.00012069400000000105, 0.00012154099999999932, 0.00012105600000000133, 0.00012117999999999851, 0.00012150000000000355, 0.00012152799999999575]</msg>
<status status="PASS" starttime="20201117 14:48:09.693" endtime="20201117 14:48:09.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.688" endtime="20201117 14:48:09.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.698" endtime="20201117 14:48:09.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.701" endtime="20201117 14:48:09.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.700" endtime="20201117 14:48:09.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.696" endtime="20201117 14:48:09.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.326" endtime="20201117 14:48:09.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.324" endtime="20201117 14:48:09.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.323" endtime="20201117 14:48:09.723"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.725" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.733" endtime="20201117 14:48:09.755"></status>
</kw>
<msg timestamp="20201117 14:48:09.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.732" endtime="20201117 14:48:09.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.756" endtime="20201117 14:48:09.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.759" endtime="20201117 14:48:09.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.729" endtime="20201117 14:48:09.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.727" endtime="20201117 14:48:09.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.769" endtime="20201117 14:48:10.055"></status>
</kw>
<msg timestamp="20201117 14:48:10.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025704556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025826375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.767" endtime="20201117 14:48:10.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025704556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025826375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.059" endtime="20201117 14:48:10.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.067" endtime="20201117 14:48:10.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.764" endtime="20201117 14:48:10.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.762" endtime="20201117 14:48:10.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.074" level="INFO">${RESULT} = [{'time': 0.025826375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001218189999999987, 'source_diff': 0.0001218189999999987}, {'time': 0.025953389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:10.071" endtime="20201117 14:48:10.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.089" level="INFO">${ACCURACY} = {'time': [0.025826375, 0.025953389, 0.026081389, 0.026215417, 0.026351417, 0.026486458, 0.026621458, 0.0267565, 0.026892486, 0.0270285, 0.027163597, 0.027299542, 0.027435542, 0.027562556, 0.027698597,...</msg>
<status status="PASS" starttime="20201117 14:48:10.075" endtime="20201117 14:48:10.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.094" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.093" endtime="20201117 14:48:10.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.097" level="INFO">VALUE: [0.0001218189999999987, 0.00012168100000000195, 0.00012218099999999898, 0.00012219500000000202, 0.00012166699999999891, 0.00012229100000000007, 0.00012201400000000015, 0.00012237499999999749, 0.00012234700000000182, 0.00012183300000000175, 0.00012204099999999982, 0.00012219499999999855, 0.00012200000000000058, 0.00012166699999999891, 0.00012202799999999972, 0.00012252800000000022, 0.0001219579999999984, 0.00012168100000000195, 0.00012201400000000015, 0.00012201400000000015, 0.00012201400000000015, 0.00012168099999999848, 0.00012169399999999858, 0.00012200000000000058, 0.0001219579999999984, 0.00012250000000000108, 0.00012201400000000015, 0.00012252800000000022, 0.00012170799999999815, 0.00012236100000000139, 0.00012186100000000089, 0.00012183300000000175, 0.00012220800000000212, 0.00012184700000000132, 0.00012200000000000058, 0.00012232000000000215, 0.00012251400000000065, 0.00012167999999999901, 0.00012173599999999729, 0.00012234699999999835, 0.00012250000000000108, 0.00012184699999999785, 0.00012201400000000362, 0.00012201400000000362, 0.00012184700000000132, 0.00012184800000000079, 0.0001224999999999976, 0.00012234700000000182, 0.00012215299999999985, 0.00012234700000000182]</msg>
<status status="PASS" starttime="20201117 14:48:10.095" endtime="20201117 14:48:10.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.090" endtime="20201117 14:48:10.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.100" endtime="20201117 14:48:10.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.104" endtime="20201117 14:48:10.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.102" endtime="20201117 14:48:10.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.098" endtime="20201117 14:48:10.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.726" endtime="20201117 14:48:10.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.724" endtime="20201117 14:48:10.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.723" endtime="20201117 14:48:10.125"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.127" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.136" endtime="20201117 14:48:10.156"></status>
</kw>
<msg timestamp="20201117 14:48:10.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.134" endtime="20201117 14:48:10.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.158" endtime="20201117 14:48:10.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.161" endtime="20201117 14:48:10.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.131" endtime="20201117 14:48:10.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.129" endtime="20201117 14:48:10.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.170" endtime="20201117 14:48:10.455"></status>
</kw>
<msg timestamp="20201117 14:48:10.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024849111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024971889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.169" endtime="20201117 14:48:10.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024849111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024971889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.460" endtime="20201117 14:48:10.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.468" endtime="20201117 14:48:10.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.166" endtime="20201117 14:48:10.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.164" endtime="20201117 14:48:10.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.475" level="INFO">${RESULT} = [{'time': 0.024971889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012277800000000047, 'source_diff': 0.00012277800000000047}, {'time': 0.025101944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.472" endtime="20201117 14:48:10.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.489" level="INFO">${ACCURACY} = {'time': [0.024971889, 0.025101944, 0.025232931, 0.025360931, 0.025492958, 0.025629972, 0.025763, 0.025897014, 0.026034042, 0.026162083, 0.026293042, 0.026422056, 0.026552097, 0.026681097, 0.026813111...</msg>
<status status="PASS" starttime="20201117 14:48:10.476" endtime="20201117 14:48:10.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.494" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.493" endtime="20201117 14:48:10.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.497" level="INFO">VALUE: [0.00012277800000000047, 0.0001227220000000022, 0.00012302800000000072, 0.0001229999999999981, 0.00012284699999999885, 0.00012333299999999978, 0.00012269399999999958, 0.00012336099999999892, 0.00012337500000000196, 0.00012305500000000039, 0.00012268099999999948, 0.00012334799999999882, 0.00012354100000000132, 0.00012302800000000072, 0.00012350000000000208, 0.00012302799999999725, 0.00012351400000000165, 0.00012269399999999958, 0.00012268099999999948, 0.00012270799999999915, 0.00012334699999999935, 0.00012268, 0.00012351399999999818, 0.00012333299999999978, 0.00012266699999999991, 0.0001233060000000001, 0.00012319499999999955, 0.00012269399999999958, 0.00012293099999999973, 0.0001231800000000005, 0.00012336099999999892, 0.00012301400000000115, 0.00012301399999999768, 0.0001234579999999999, 0.00012351399999999818, 0.00012284799999999832, 0.00012350000000000208, 0.00012266599999999697, 0.00012301400000000115, 0.0001234579999999999, 0.0001235420000000008, 0.00012351400000000165, 0.00012306899999999996, 0.00012266699999999991, 0.00012283399999999875, 0.00012333299999999978, 0.00012301399999999768, 0.00012329200000000054, 0.00012333299999999978, 0.00012283300000000275]</msg>
<status status="PASS" starttime="20201117 14:48:10.496" endtime="20201117 14:48:10.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.490" endtime="20201117 14:48:10.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.501" endtime="20201117 14:48:10.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.504" endtime="20201117 14:48:10.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.503" endtime="20201117 14:48:10.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.499" endtime="20201117 14:48:10.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.128" endtime="20201117 14:48:10.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.126" endtime="20201117 14:48:10.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.125" endtime="20201117 14:48:10.525"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.528" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.536" endtime="20201117 14:48:10.557"></status>
</kw>
<msg timestamp="20201117 14:48:10.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.535" endtime="20201117 14:48:10.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.558" endtime="20201117 14:48:10.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.561" endtime="20201117 14:48:10.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.532" endtime="20201117 14:48:10.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.530" endtime="20201117 14:48:10.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.570" endtime="20201117 14:48:10.856"></status>
</kw>
<msg timestamp="20201117 14:48:10.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024936778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025061083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.569" endtime="20201117 14:48:10.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024936778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025061083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.860" endtime="20201117 14:48:10.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.869" endtime="20201117 14:48:10.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.566" endtime="20201117 14:48:10.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.564" endtime="20201117 14:48:10.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.876" level="INFO">${RESULT} = [{'time': 0.025061083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012430500000000164, 'source_diff': 0.00012430500000000164}, {'time': 0.025194111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.873" endtime="20201117 14:48:10.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.890" level="INFO">${ACCURACY} = {'time': [0.025061083, 0.025194111, 0.025328125, 0.025458125, 0.025590139, 0.025722153, 0.025857167, 0.025986208, 0.026120236, 0.02625525, 0.026394236, 0.02652825, 0.026661278, 0.026791292, 0.02692329...</msg>
<status status="PASS" starttime="20201117 14:48:10.877" endtime="20201117 14:48:10.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.894" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.893" endtime="20201117 14:48:10.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.897" level="INFO">VALUE: [0.00012430500000000164, 0.00012386100000000289, 0.00012412499999999924, 0.000123986000000003, 0.00012434700000000035, 0.00012418100000000099, 0.00012445900000000037, 0.0001244999999999996, 0.00012370800000000015, 0.00012387500000000246, 0.00012450000000000308, 0.00012433300000000078, 0.00012419500000000055, 0.00012418100000000099, 0.00012418100000000099, 0.00012425000000000283, 0.00012451399999999918, 0.00012362499999999874, 0.00012380500000000114, 0.00012369500000000005, 0.00012418100000000099, 0.00012365300000000135, 0.00012368100000000048, 0.00012368100000000048, 0.00012452700000000275, 0.0001241519999999989, 0.00012383300000000028, 0.00012434699999999688, 0.00012419500000000055, 0.0001237359999999993, 0.00012362499999999874, 0.00012386099999999942, 0.0001242359999999998, 0.00012401399999999868, 0.00012383300000000028, 0.00012451400000000265, 0.0001239999999999991, 0.00012401399999999868, 0.0001240689999999975, 0.00012451399999999918, 0.00012384699999999985, 0.00012417999999999804, 0.00012447200000000047, 0.00012418100000000099, 0.00012366699999999745, 0.00012416700000000142, 0.00012454099999999885, 0.00012370800000000015, 0.000123680000000001, 0.00012452799999999875]</msg>
<status status="PASS" starttime="20201117 14:48:10.895" endtime="20201117 14:48:10.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.891" endtime="20201117 14:48:10.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.900" endtime="20201117 14:48:10.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.904" endtime="20201117 14:48:10.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.902" endtime="20201117 14:48:10.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.898" endtime="20201117 14:48:10.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.529" endtime="20201117 14:48:10.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.527" endtime="20201117 14:48:10.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.526" endtime="20201117 14:48:10.925"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.927" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.936" endtime="20201117 14:48:10.957"></status>
</kw>
<msg timestamp="20201117 14:48:10.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.934" endtime="20201117 14:48:10.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.958" endtime="20201117 14:48:10.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.961" endtime="20201117 14:48:10.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.931" endtime="20201117 14:48:10.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.929" endtime="20201117 14:48:10.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.971" endtime="20201117 14:48:11.257"></status>
</kw>
<msg timestamp="20201117 14:48:11.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025167222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025292889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.969" endtime="20201117 14:48:11.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025167222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025292889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.262" endtime="20201117 14:48:11.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.270" endtime="20201117 14:48:11.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.966" endtime="20201117 14:48:11.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.964" endtime="20201117 14:48:11.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.277" level="INFO">${RESULT} = [{'time': 0.025292889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012566699999999945, 'source_diff': 0.00012566699999999945}, {'time': 0.025427889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:11.274" endtime="20201117 14:48:11.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.290" level="INFO">${ACCURACY} = {'time': [0.025292889, 0.025427889, 0.025558917, 0.025697931, 0.025828944, 0.025961958, 0.026096972, 0.026235986, 0.026373, 0.026504014, 0.026641028, 0.026774056, 0.026909083, 0.027046083, 0.027183111...</msg>
<status status="PASS" starttime="20201117 14:48:11.278" endtime="20201117 14:48:11.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.295" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.294" endtime="20201117 14:48:11.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.298" level="INFO">VALUE: [0.00012566699999999945, 0.00012516699999999895, 0.0001246389999999993, 0.00012534800000000082, 0.00012481899999999824, 0.00012484700000000085, 0.0001255000000000006, 0.00012509699999999763, 0.0001255000000000006, 0.00012484700000000085, 0.00012516699999999895, 0.00012533400000000125, 0.00012497200000000097, 0.0001253329999999983, 0.00012502799999999925, 0.0001248329999999978, 0.00012501399999999968, 0.00012540200000000015, 0.00012536100000000092, 0.0001252779999999995, 0.00012479100000000257, 0.0001255840000000015, 0.00012533300000000178, 0.00012540299999999963, 0.00012501399999999968, 0.00012518100000000199, 0.00012502799999999925, 0.0001255000000000006, 0.00012484700000000085, 0.0001255139999999967, 0.00012467999999999854, 0.00012484700000000085, 0.00012484700000000085, 0.00012472200000000072, 0.00012484700000000085, 0.00012468100000000149, 0.0001250000000000001, 0.00012501399999999968, 0.0001246939999999981, 0.00012516699999999895, 0.00012519500000000156, 0.00012483400000000075, 0.00012555499999999942, 0.0001250000000000001, 0.00012515299999999938, 0.00012515199999999643, 0.00012534699999999788, 0.00012534699999999788, 0.00012466700000000192, 0.00012486099999999695]</msg>
<status status="PASS" starttime="20201117 14:48:11.296" endtime="20201117 14:48:11.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.291" endtime="20201117 14:48:11.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.301" endtime="20201117 14:48:11.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.304" endtime="20201117 14:48:11.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.303" endtime="20201117 14:48:11.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.299" endtime="20201117 14:48:11.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.928" endtime="20201117 14:48:11.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.926" endtime="20201117 14:48:11.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.925" endtime="20201117 14:48:11.326"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.328" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.337" endtime="20201117 14:48:11.358"></status>
</kw>
<msg timestamp="20201117 14:48:11.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.335" endtime="20201117 14:48:11.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.360" endtime="20201117 14:48:11.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.363" endtime="20201117 14:48:11.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.332" endtime="20201117 14:48:11.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.330" endtime="20201117 14:48:11.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.373" endtime="20201117 14:48:11.659"></status>
</kw>
<msg timestamp="20201117 14:48:11.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025819097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025944917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.371" endtime="20201117 14:48:11.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025819097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025944917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.664" endtime="20201117 14:48:11.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.672" endtime="20201117 14:48:11.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.368" endtime="20201117 14:48:11.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.366" endtime="20201117 14:48:11.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.679" level="INFO">${RESULT} = [{'time': 0.025944917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012582000000000218, 'source_diff': 0.00012582000000000218}, {'time': 0.026077931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:11.675" endtime="20201117 14:48:11.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.694" level="INFO">${ACCURACY} = {'time': [0.025944917, 0.026077931, 0.026218014, 0.026348986, 0.026482986, 0.026621, 0.026759014, 0.026896042, 0.027030056, 0.027167056, 0.027300083, 0.027432111, 0.027565111, 0.027699125, 0.027836181...</msg>
<status status="PASS" starttime="20201117 14:48:11.680" endtime="20201117 14:48:11.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.698" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.697" endtime="20201117 14:48:11.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.701" level="INFO">VALUE: [0.00012582000000000218, 0.0001265139999999977, 0.00012657000000000293, 0.000125680000000003, 0.00012618000000000004, 0.0001258329999999988, 0.00012568100000000249, 0.00012569499999999859, 0.00012569499999999859, 0.00012566699999999945, 0.00012567999999999954, 0.0001260139999999972, 0.00012629200000000007, 0.00012568100000000249, 0.0001262230000000017, 0.00012583399999999828, 0.00012587500000000099, 0.00012618099999999952, 0.00012567999999999954, 0.0001259169999999997, 0.00012652800000000075, 0.00012618099999999952, 0.0001263329999999993, 0.00012634800000000182, 0.00012586199999999742, 0.00012586100000000142, 0.00012634699999999888, 0.00012618000000000004, 0.0001265000000000016, 0.00012649999999999814, 0.00012601400000000068, 0.00012599999999999764, 0.00012634799999999835, 0.00012654100000000085, 0.00012569400000000258, 0.00012634699999999888, 0.00012584699999999838, 0.0001265139999999977, 0.00012601400000000068, 0.0001265000000000016, 0.00012595900000000188, 0.00012652700000000128, 0.00012569399999999564, 0.0001258329999999988, 0.00012566699999999598, 0.00012587499999999752, 0.00012566700000000292, 0.00012618100000000299, 0.00012569500000000206, 0.00012604100000000035]</msg>
<status status="PASS" starttime="20201117 14:48:11.699" endtime="20201117 14:48:11.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.694" endtime="20201117 14:48:11.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.704" endtime="20201117 14:48:11.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.707" endtime="20201117 14:48:11.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.706" endtime="20201117 14:48:11.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.702" endtime="20201117 14:48:11.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.329" endtime="20201117 14:48:11.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.327" endtime="20201117 14:48:11.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.326" endtime="20201117 14:48:11.729"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.731" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.740" endtime="20201117 14:48:11.761"></status>
</kw>
<msg timestamp="20201117 14:48:11.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.738" endtime="20201117 14:48:11.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.762" endtime="20201117 14:48:11.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.765" endtime="20201117 14:48:11.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.736" endtime="20201117 14:48:11.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.733" endtime="20201117 14:48:11.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.775" endtime="20201117 14:48:12.061"></status>
</kw>
<msg timestamp="20201117 14:48:12.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025493347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025620167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.773" endtime="20201117 14:48:12.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025493347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025620167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.065" endtime="20201117 14:48:12.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.073" endtime="20201117 14:48:12.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.770" endtime="20201117 14:48:12.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.768" endtime="20201117 14:48:12.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.080" level="INFO">${RESULT} = [{'time': 0.025620167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001268199999999997, 'source_diff': 0.0001268199999999997}, {'time': 0.025752181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:12.077" endtime="20201117 14:48:12.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.094" level="INFO">${ACCURACY} = {'time': [0.025620167, 0.025752181, 0.025890208, 0.026029222, 0.026170236, 0.02631125, 0.026448306, 0.026582306, 0.026717292, 0.026853333, 0.026987319, 0.027124347, 0.027262361, 0.027401375, 0.0275373...</msg>
<status status="PASS" starttime="20201117 14:48:12.081" endtime="20201117 14:48:12.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.098" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.097" endtime="20201117 14:48:12.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.101" level="INFO">VALUE: [0.0001268199999999997, 0.00012718100000000052, 0.00012752700000000228, 0.00012701400000000168, 0.0001270139999999982, 0.00012718100000000052, 0.00012738900000000206, 0.00012670899999999916, 0.00012749999999999914, 0.00012704100000000135, 0.00012665199999999793, 0.00012749999999999914, 0.0001270139999999982, 0.0001273330000000003, 0.00012716699999999748, 0.00012668100000000002, 0.00012670799999999968, 0.00012736099999999945, 0.0001271940000000006, 0.0001266659999999975, 0.00012670799999999968, 0.00012718100000000052, 0.0001275139999999987, 0.00012734799999999935, 0.00012684799999999885, 0.00012695799999999993, 0.00012701400000000168, 0.0001266659999999975, 0.00012684699999999938, 0.00012740300000000163, 0.00012716699999999748, 0.00012683399999999928, 0.00012684799999999885, 0.00012705500000000092, 0.00012687500000000199, 0.00012693100000000027, 0.00012668000000000054, 0.00012690200000000165, 0.0001273330000000003, 0.00012752800000000175, 0.00012734699999999988, 0.00012666600000000097, 0.00012669399999999664, 0.00012734699999999988, 0.0001267079999999962, 0.00012668099999999655, 0.0001270000000000021, 0.0001270979999999991, 0.00012684799999999885, 0.00012686100000000589]</msg>
<status status="PASS" starttime="20201117 14:48:12.099" endtime="20201117 14:48:12.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.095" endtime="20201117 14:48:12.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.104" endtime="20201117 14:48:12.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.112" endtime="20201117 14:48:12.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.106" endtime="20201117 14:48:12.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.102" endtime="20201117 14:48:12.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.732" endtime="20201117 14:48:12.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.730" endtime="20201117 14:48:12.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.729" endtime="20201117 14:48:12.134"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.136" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.145" endtime="20201117 14:48:12.165"></status>
</kw>
<msg timestamp="20201117 14:48:12.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.143" endtime="20201117 14:48:12.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.167" endtime="20201117 14:48:12.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.170" endtime="20201117 14:48:12.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.140" endtime="20201117 14:48:12.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.138" endtime="20201117 14:48:12.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.179" endtime="20201117 14:48:12.465"></status>
</kw>
<msg timestamp="20201117 14:48:12.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024844792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024973208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.177" endtime="20201117 14:48:12.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024844792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024973208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.469" endtime="20201117 14:48:12.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.478" endtime="20201117 14:48:12.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.175" endtime="20201117 14:48:12.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.173" endtime="20201117 14:48:12.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.485" level="INFO">${RESULT} = [{'time': 0.024973208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012841599999999925, 'source_diff': 0.00012841599999999925}, {'time': 0.025107236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:12.481" endtime="20201117 14:48:12.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.498" level="INFO">${ACCURACY} = {'time': [0.024973208, 0.025107236, 0.02524125, 0.02537725, 0.025518278, 0.025653306, 0.025785306, 0.025917319, 0.026052347, 0.026193347, 0.026333361, 0.026467375, 0.026601417, 0.026742431, 0.02687843...</msg>
<status status="PASS" starttime="20201117 14:48:12.486" endtime="20201117 14:48:12.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.503" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.502" endtime="20201117 14:48:12.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.505" level="INFO">VALUE: [0.00012841599999999925, 0.0001276940000000011, 0.00012819399999999814, 0.00012766700000000145, 0.0001285139999999997, 0.00012769500000000059, 0.00012766700000000145, 0.00012780500000000167, 0.00012836100000000045, 0.0001280139999999992, 0.0001278330000000008, 0.00012784700000000038, 0.00012818099999999805, 0.00012834800000000035, 0.00012801400000000268, 0.00012786099999999995, 0.00012819399999999814, 0.00012852799999999928, 0.0001280139999999992, 0.00012783299999999734, 0.0001285139999999997, 0.0001285139999999997, 0.00012766700000000145, 0.00012817999999999857, 0.00012815199999999943, 0.00012799999999999964, 0.00012766700000000145, 0.00012799999999999964, 0.00012852799999999928, 0.00012784799999999985, 0.00012768100000000102, 0.00012851300000000024, 0.0001276659999999985, 0.00012818100000000152, 0.00012766699999999798, 0.00012834700000000088, 0.0001277919999999981, 0.00012805499999999845, 0.00012840299999999916, 0.00012768000000000154, 0.00012766600000000197, 0.00012818000000000204, 0.0001285139999999997, 0.00012852799999999928, 0.00012784700000000038, 0.00012833400000000078, 0.0001280980000000001, 0.00012787499999999952, 0.00012847200000000447, 0.00012763900000000578]</msg>
<status status="PASS" starttime="20201117 14:48:12.504" endtime="20201117 14:48:12.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.499" endtime="20201117 14:48:12.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.509" endtime="20201117 14:48:12.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.513" endtime="20201117 14:48:12.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.511" endtime="20201117 14:48:12.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.507" endtime="20201117 14:48:12.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.137" endtime="20201117 14:48:12.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.135" endtime="20201117 14:48:12.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.134" endtime="20201117 14:48:12.534"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.537" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.545" endtime="20201117 14:48:12.566"></status>
</kw>
<msg timestamp="20201117 14:48:12.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.544" endtime="20201117 14:48:12.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.567" endtime="20201117 14:48:12.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.570" endtime="20201117 14:48:12.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.541" endtime="20201117 14:48:12.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.539" endtime="20201117 14:48:12.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.580" endtime="20201117 14:48:12.866"></status>
</kw>
<msg timestamp="20201117 14:48:12.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024960306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025089806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.578" endtime="20201117 14:48:12.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024960306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025089806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.871" endtime="20201117 14:48:12.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.879" endtime="20201117 14:48:12.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.575" endtime="20201117 14:48:12.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.573" endtime="20201117 14:48:12.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.886" level="INFO">${RESULT} = [{'time': 0.025089806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012949999999999767, 'source_diff': 0.00012949999999999767}, {'time': 0.025225819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:12.882" endtime="20201117 14:48:12.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.899" level="INFO">${ACCURACY} = {'time': [0.025089806, 0.025225819, 0.025365833, 0.025509861, 0.025649875, 0.025784889, 0.025926903, 0.026068931, 0.026209958, 0.026346986, 0.026489972, 0.026623986, 0.026763, 0.026904028, 0.027039028...</msg>
<status status="PASS" starttime="20201117 14:48:12.887" endtime="20201117 14:48:12.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.904" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.903" endtime="20201117 14:48:12.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.907" level="INFO">VALUE: [0.00012949999999999767, 0.00012879099999999963, 0.00012934700000000188, 0.00012952800000000028, 0.00012902799999999978, 0.00012951399999999724, 0.00012944500000000234, 0.00012902799999999978, 0.00012886099999999748, 0.00012922199999999828, 0.00012884700000000138, 0.00012902799999999978, 0.00012883299999999834, 0.0001293469999999984, 0.00012868099999999855, 0.00012947300000000148, 0.0001291940000000026, 0.00012937499999999755, 0.00012900000000000064, 0.00012902799999999978, 0.00012919499999999862, 0.00012919500000000209, 0.00012884700000000138, 0.00012919499999999862, 0.00012898700000000055, 0.00012951399999999724, 0.00012936100000000145, 0.0001286940000000021, 0.00012869500000000159, 0.0001290140000000002, 0.0001293469999999984, 0.00012918099999999905, 0.0001288890000000001, 0.00012917999999999957, 0.0001294859999999981, 0.00012905599999999892, 0.0001291529999999999, 0.00012918099999999905, 0.0001294859999999981, 0.0001286940000000021, 0.0001289720000000015, 0.00012936099999999798, 0.000129166, 0.0001288330000000018, 0.0001293330000000023, 0.0001294859999999981, 0.0001287079999999982, 0.00012866699999999898, 0.00012869399999999864, 0.00012934700000000188]</msg>
<status status="PASS" starttime="20201117 14:48:12.905" endtime="20201117 14:48:12.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.900" endtime="20201117 14:48:12.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.910" endtime="20201117 14:48:12.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.914" endtime="20201117 14:48:12.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.912" endtime="20201117 14:48:12.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.909" endtime="20201117 14:48:12.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.537" endtime="20201117 14:48:12.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.535" endtime="20201117 14:48:12.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.535" endtime="20201117 14:48:12.935"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.938" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.946" endtime="20201117 14:48:12.968"></status>
</kw>
<msg timestamp="20201117 14:48:12.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.944" endtime="20201117 14:48:12.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.970" endtime="20201117 14:48:12.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.973" endtime="20201117 14:48:12.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.942" endtime="20201117 14:48:12.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.940" endtime="20201117 14:48:12.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.982" endtime="20201117 14:48:13.269"></status>
</kw>
<msg timestamp="20201117 14:48:13.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026163083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026292917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.980" endtime="20201117 14:48:13.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026163083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026292917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.273" endtime="20201117 14:48:13.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.281" endtime="20201117 14:48:13.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.978" endtime="20201117 14:48:13.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.976" endtime="20201117 14:48:13.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.288" level="INFO">${RESULT} = [{'time': 0.026292917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001298339999999988, 'source_diff': 0.0001298339999999988}, {'time': 0.026437931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:13.285" endtime="20201117 14:48:13.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.303" level="INFO">${ACCURACY} = {'time': [0.026292917, 0.026437931, 0.026580944, 0.026717958, 0.026860986, 0.027001042, 0.027143014, 0.027283042, 0.027423042, 0.027563069, 0.027702111, 0.027844097, 0.027978111, 0.028122125, 0.028258...</msg>
<status status="PASS" starttime="20201117 14:48:13.290" endtime="20201117 14:48:13.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.308" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.307" endtime="20201117 14:48:13.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.311" level="INFO">VALUE: [0.0001298339999999988, 0.00013034800000000235, 0.00013033299999999984, 0.0001300140000000012, 0.00012981899999999977, 0.00013055600000000042, 0.00013000000000000164, 0.00013018100000000005, 0.00012968100000000302, 0.0001296660000000005, 0.00013020800000000318, 0.0001301530000000009, 0.00012962500000000127, 0.00012968100000000302, 0.00013018100000000005, 0.00013037499999999855, 0.00012966699999999998, 0.00013034700000000288, 0.0001305140000000017, 0.00012963900000000084, 0.00013016700000000048, 0.0001305140000000017, 0.00013033400000000278, 0.00013013899999999787, 0.00013000000000000164, 0.0001298469999999989, 0.0001298469999999989, 0.0001303469999999994, 0.00012986099999999848, 0.00013018100000000005, 0.00013051399999999824, 0.00013036100000000245, 0.00013050000000000214, 0.00013000000000000164, 0.00012968000000000007, 0.0001299859999999986, 0.00012997199999999903, 0.0001298330000000028, 0.00013019499999999962, 0.00013051399999999824, 0.00013001299999999827, 0.00012984699999999544, 0.00013012500000000177, 0.00013018000000000057, 0.00013016700000000048, 0.00012990200000000118, 0.00013018100000000005, 0.00013016699999999354, 0.00012986100000000195, 0.00013049999999999867]</msg>
<status status="PASS" starttime="20201117 14:48:13.309" endtime="20201117 14:48:13.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.304" endtime="20201117 14:48:13.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.314" endtime="20201117 14:48:13.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.317" endtime="20201117 14:48:13.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.316" endtime="20201117 14:48:13.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.312" endtime="20201117 14:48:13.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.938" endtime="20201117 14:48:13.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.936" endtime="20201117 14:48:13.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.935" endtime="20201117 14:48:13.339"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.341" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.349" endtime="20201117 14:48:13.371"></status>
</kw>
<msg timestamp="20201117 14:48:13.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.348" endtime="20201117 14:48:13.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.372" endtime="20201117 14:48:13.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.375" endtime="20201117 14:48:13.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.345" endtime="20201117 14:48:13.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.343" endtime="20201117 14:48:13.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.385" endtime="20201117 14:48:13.670"></status>
</kw>
<msg timestamp="20201117 14:48:13.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024990597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025121278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.383" endtime="20201117 14:48:13.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024990597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025121278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.674" endtime="20201117 14:48:13.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.683" endtime="20201117 14:48:13.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.380" endtime="20201117 14:48:13.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.379" endtime="20201117 14:48:13.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.690" level="INFO">${RESULT} = [{'time': 0.025121278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013068100000000055, 'source_diff': 0.00013068100000000055}, {'time': 0.025263278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:13.687" endtime="20201117 14:48:13.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.704" level="INFO">${ACCURACY} = {'time': [0.025121278, 0.025263278, 0.025406292, 0.025550306, 0.025690319, 0.025831347, 0.025968361, 0.026105431, 0.026248403, 0.026391417, 0.026537417, 0.026678458, 0.026823472, 0.026967472, 0.027110...</msg>
<status status="PASS" starttime="20201117 14:48:13.691" endtime="20201117 14:48:13.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.708" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.707" endtime="20201117 14:48:13.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.711" level="INFO">VALUE: [0.00013068100000000055, 0.0001313470000000004, 0.00013118100000000105, 0.00013134799999999988, 0.0001309859999999996, 0.00013100000000000264, 0.00013101399999999874, 0.0001307089999999997, 0.00013119500000000062, 0.0001315279999999988, 0.0001314860000000001, 0.00013152699999999934, 0.00013069400000000064, 0.00013133300000000084, 0.0001309859999999996, 0.00013119500000000062, 0.00013118099999999758, 0.0001315409999999989, 0.00013084799999999938, 0.0001308469999999999, 0.0001307080000000002, 0.00013151399999999924, 0.00013066700000000098, 0.00013133300000000084, 0.0001308339999999998, 0.00013101399999999874, 0.0001313340000000003, 0.0001313470000000004, 0.00013070799999999674, 0.000131166999999998, 0.0001308469999999999, 0.00013068099999999708, 0.0001310140000000022, 0.00013118099999999758, 0.0001309310000000008, 0.0001308469999999999, 0.00013068000000000107, 0.00013133300000000084, 0.0001309310000000008, 0.0001308469999999999, 0.00013118100000000105, 0.00013068100000000055, 0.0001313470000000004, 0.0001313470000000004, 0.00013151399999999924, 0.00013099999999999917, 0.00013090300000000166, 0.00013099999999999917, 0.00013137500000000302, 0.00013118100000000105]</msg>
<status status="PASS" starttime="20201117 14:48:13.710" endtime="20201117 14:48:13.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.705" endtime="20201117 14:48:13.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.714" endtime="20201117 14:48:13.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.718" endtime="20201117 14:48:13.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.716" endtime="20201117 14:48:13.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.712" endtime="20201117 14:48:13.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.342" endtime="20201117 14:48:13.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.340" endtime="20201117 14:48:13.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.339" endtime="20201117 14:48:13.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.658" endtime="20201117 14:48:13.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.748" endtime="20201117 14:48:13.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.747" endtime="20201117 14:48:13.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.745" endtime="20201117 14:48:13.769"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:47:33.585" endtime="20201117 14:48:13.769" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:51.964" endtime="20201117 14:48:13.776"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201117 14:46:49.819" endtime="20201117 14:48:13.790"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
