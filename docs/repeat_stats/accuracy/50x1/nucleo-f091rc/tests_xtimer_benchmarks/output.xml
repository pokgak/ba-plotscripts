<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 23:01:09.610" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.180" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:10.188" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:11.291" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:10.179" endtime="20201115 23:01:11.292"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.294" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:11.293" endtime="20201115 23:01:11.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.177" endtime="20201115 23:01:11.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:11.297" endtime="20201115 23:01:11.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.296" endtime="20201115 23:01:11.483"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.496" endtime="20201115 23:01:11.511"></status>
</kw>
<msg timestamp="20201115 23:01:11.511" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201115 23:01:11.494" endtime="20201115 23:01:11.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.514" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201115 23:01:11.512" endtime="20201115 23:01:11.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.517" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:11.515" endtime="20201115 23:01:11.518"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:11.491" endtime="20201115 23:01:11.519"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:11.489" endtime="20201115 23:01:11.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.488" endtime="20201115 23:01:11.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:11.523" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:11.523" endtime="20201115 23:01:11.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.520" endtime="20201115 23:01:11.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.487" endtime="20201115 23:01:11.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.486" endtime="20201115 23:01:11.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.525" endtime="20201115 23:01:11.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.485" endtime="20201115 23:01:11.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.528" endtime="20201115 23:01:11.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.483" endtime="20201115 23:01:11.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.175" endtime="20201115 23:01:11.530"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:11.537" endtime="20201115 23:01:11.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.535" endtime="20201115 23:01:11.557"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.571" endtime="20201115 23:01:11.586"></status>
</kw>
<msg timestamp="20201115 23:01:11.586" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.569" endtime="20201115 23:01:11.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.589" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.587" endtime="20201115 23:01:11.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.592" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:11.590" endtime="20201115 23:01:11.592"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:11.566" endtime="20201115 23:01:11.593"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:11.564" endtime="20201115 23:01:11.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.562" endtime="20201115 23:01:11.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:11.597" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:11.597" endtime="20201115 23:01:11.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.595" endtime="20201115 23:01:11.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.561" endtime="20201115 23:01:11.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.561" endtime="20201115 23:01:11.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.599" endtime="20201115 23:01:11.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.559" endtime="20201115 23:01:11.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.557" endtime="20201115 23:01:11.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.534" endtime="20201115 23:01:11.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.609" endtime="20201115 23:01:11.619"></status>
</kw>
<msg timestamp="20201115 23:01:11.619" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.608" endtime="20201115 23:01:11.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.622" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.621" endtime="20201115 23:01:11.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.623" endtime="20201115 23:01:11.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.605" endtime="20201115 23:01:11.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.603" endtime="20201115 23:01:11.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.630" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 23:01:11.629" endtime="20201115 23:01:11.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.632" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 23:01:11.631" endtime="20201115 23:01:11.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.627" endtime="20201115 23:01:11.633"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:11.531" endtime="20201115 23:01:11.634" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:09.731" endtime="20201115 23:01:11.637"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.691" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:11.699" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:12.803" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:11.690" endtime="20201115 23:01:12.804"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.806" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:12.805" endtime="20201115 23:01:12.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.688" endtime="20201115 23:01:12.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:12.809" endtime="20201115 23:01:13.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.808" endtime="20201115 23:01:13.032"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.045" endtime="20201115 23:01:13.059"></status>
</kw>
<msg timestamp="20201115 23:01:13.059" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.043" endtime="20201115 23:01:13.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.062" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.060" endtime="20201115 23:01:13.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.065" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:13.063" endtime="20201115 23:01:13.065"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:13.041" endtime="20201115 23:01:13.066"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:13.038" endtime="20201115 23:01:13.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.037" endtime="20201115 23:01:13.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:13.071" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:13.070" endtime="20201115 23:01:13.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.068" endtime="20201115 23:01:13.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.036" endtime="20201115 23:01:13.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.036" endtime="20201115 23:01:13.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.072" endtime="20201115 23:01:13.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.034" endtime="20201115 23:01:13.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.075" endtime="20201115 23:01:13.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.033" endtime="20201115 23:01:13.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.687" endtime="20201115 23:01:13.077"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:13.084" endtime="20201115 23:01:13.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.082" endtime="20201115 23:01:13.105"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.118" endtime="20201115 23:01:13.133"></status>
</kw>
<msg timestamp="20201115 23:01:13.133" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.117" endtime="20201115 23:01:13.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.136" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.135" endtime="20201115 23:01:13.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.140" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:13.137" endtime="20201115 23:01:13.140"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:13.114" endtime="20201115 23:01:13.141"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:13.112" endtime="20201115 23:01:13.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.111" endtime="20201115 23:01:13.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:13.146" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:13.145" endtime="20201115 23:01:13.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.143" endtime="20201115 23:01:13.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.109" endtime="20201115 23:01:13.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.108" endtime="20201115 23:01:13.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.148" endtime="20201115 23:01:13.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.107" endtime="20201115 23:01:13.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.105" endtime="20201115 23:01:13.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.081" endtime="20201115 23:01:13.151"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.155" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.165" endtime="20201115 23:01:13.180"></status>
</kw>
<msg timestamp="20201115 23:01:13.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.162" endtime="20201115 23:01:13.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.182" endtime="20201115 23:01:13.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.184" endtime="20201115 23:01:13.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.160" endtime="20201115 23:01:13.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.158" endtime="20201115 23:01:13.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.193" endtime="20201115 23:01:13.498"></status>
</kw>
<msg timestamp="20201115 23:01:13.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073296319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073301083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.192" endtime="20201115 23:01:13.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073296319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073301083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.502" endtime="20201115 23:01:13.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.511" endtime="20201115 23:01:13.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.189" endtime="20201115 23:01:13.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.187" endtime="20201115 23:01:13.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:13.518" level="INFO">${RESULT} = [{'time': 0.073301083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.76400000000432e-06, 'source_diff': 4.76400000000432e-06}, {'time': 0.073319028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:13.515" endtime="20201115 23:01:13.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:13.532" level="INFO">${ACCURACY} = {'diff': [4.76400000000432e-06, 4.791999999989582e-06, 4.7499999999978115e-06, 4.166999999999366e-06, 4.139000000000226e-06, 4.8200000000026e-06, 4.139000000000226e-06, 4.737000000004654e-06, 4.792000...</msg>
<status status="PASS" starttime="20201115 23:01:13.520" endtime="20201115 23:01:13.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.537" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 23:01:13.536" endtime="20201115 23:01:13.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.540" level="INFO">VALUE: [4.76400000000432e-06, 4.791999999989582e-06, 4.7499999999978115e-06, 4.166999999999366e-06, 4.139000000000226e-06, 4.8200000000026e-06, 4.139000000000226e-06, 4.737000000004654e-06, 4.79200000000346e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.833999999995231e-06, 4.124999999993717e-06, 4.153000000006735e-06, 4.76400000000432e-06, 4.166999999999366e-06, 4.166999999999366e-06, 4.7499999999978115e-06, 4.124999999993717e-06, 4.152999999992857e-06, 4.735999999991303e-06, 4.153000000006735e-06, 4.7910000000039865e-06, 4.7360000000051805e-06, 4.7499999999978115e-06, 4.7639999999904425e-06, 4.096999999994577e-06, 4.166999999999366e-06, 4.152000000007261e-06, 4.736999999990776e-06, 4.153000000006735e-06, 4.750000000011689e-06, 4.76400000000432e-06, 4.777999999996951e-06, 4.7360000000051805e-06, 4.7360000000051805e-06, 4.152000000007261e-06, 4.680000000006901e-06, 4.721999999998672e-06, 4.166999999999366e-06, 4.153000000006735e-06, 4.7499999999978115e-06, 4.125000000007595e-06, 4.151999999993383e-06, 4.166999999999366e-06, 4.805999999996091e-06, 4.777999999996951e-06, 4.124999999993717e-06, 4.153000000006735e-06, 4.193999999999032e-06]</msg>
<status status="PASS" starttime="20201115 23:01:13.538" endtime="20201115 23:01:13.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.533" endtime="20201115 23:01:13.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.543" endtime="20201115 23:01:13.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:13.547" endtime="20201115 23:01:13.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.545" endtime="20201115 23:01:13.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.541" endtime="20201115 23:01:13.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.156" endtime="20201115 23:01:13.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.154" endtime="20201115 23:01:13.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.153" endtime="20201115 23:01:13.568"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.570" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.579" endtime="20201115 23:01:13.594"></status>
</kw>
<msg timestamp="20201115 23:01:13.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.577" endtime="20201115 23:01:13.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.596" endtime="20201115 23:01:13.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.599" endtime="20201115 23:01:13.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.575" endtime="20201115 23:01:13.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.572" endtime="20201115 23:01:13.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.608" endtime="20201115 23:01:13.895"></status>
</kw>
<msg timestamp="20201115 23:01:13.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025670194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025675556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.607" endtime="20201115 23:01:13.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025670194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025675556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.899" endtime="20201115 23:01:13.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.908" endtime="20201115 23:01:13.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.604" endtime="20201115 23:01:13.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.602" endtime="20201115 23:01:13.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:13.915" level="INFO">${RESULT} = [{'time': 0.025675556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.36199999999834e-06, 'source_diff': 5.36199999999834e-06}, {'time': 0.025693583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:13.912" endtime="20201115 23:01:13.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:13.929" level="INFO">${ACCURACY} = {'diff': [5.36199999999834e-06, 5.360999999998867e-06, 5.9439999999973125e-06, 5.346999999999297e-06, 5.999999999999062e-06, 5.9589999999998255e-06, 5.3889999999980065e-06, 5.9589999999998255e-06, 5.9...</msg>
<status status="PASS" starttime="20201115 23:01:13.916" endtime="20201115 23:01:13.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.934" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 23:01:13.933" endtime="20201115 23:01:13.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.936" level="INFO">VALUE: [5.36199999999834e-06, 5.360999999998867e-06, 5.9439999999973125e-06, 5.346999999999297e-06, 5.999999999999062e-06, 5.9589999999998255e-06, 5.3889999999980065e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.3889999999980065e-06, 5.958000000000352e-06, 5.346999999999297e-06, 5.944000000000782e-06, 4.667000000003335e-06, 5.917000000001116e-06, 5.34799999999877e-06, 5.389000000001476e-06, 5.34799999999877e-06, 5.34799999999877e-06, 5.346999999999297e-06, 5.375000000001906e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.3339999999992005e-06, 5.931000000000686e-06, 4.778000000000421e-06, 5.9579999999968825e-06, 5.958000000000352e-06, 5.931000000000686e-06, 4.7499999999978115e-06, 5.332999999999727e-06, 5.944000000000782e-06, 5.319000000000157e-06, 5.944999999996786e-06, 5.346999999999297e-06, 5.958000000000352e-06, 5.292000000000491e-06, 5.944000000000782e-06, 5.361000000002336e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.292000000000491e-06, 4.778000000000421e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.389000000001476e-06, 5.361000000002336e-06]</msg>
<status status="PASS" starttime="20201115 23:01:13.935" endtime="20201115 23:01:13.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.930" endtime="20201115 23:01:13.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.939" endtime="20201115 23:01:13.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:13.943" endtime="20201115 23:01:13.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.941" endtime="20201115 23:01:13.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.938" endtime="20201115 23:01:13.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.571" endtime="20201115 23:01:13.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.569" endtime="20201115 23:01:13.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.568" endtime="20201115 23:01:13.964"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.967" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.975" endtime="20201115 23:01:13.991"></status>
</kw>
<msg timestamp="20201115 23:01:13.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.974" endtime="20201115 23:01:13.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.992" endtime="20201115 23:01:13.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.995" endtime="20201115 23:01:13.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.971" endtime="20201115 23:01:13.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.969" endtime="20201115 23:01:13.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.005" endtime="20201115 23:01:14.291"></status>
</kw>
<msg timestamp="20201115 23:01:14.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025576319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025582861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.003" endtime="20201115 23:01:14.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025576319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025582861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.295" endtime="20201115 23:01:14.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.304" endtime="20201115 23:01:14.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.001" endtime="20201115 23:01:14.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.998" endtime="20201115 23:01:14.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:14.311" level="INFO">${RESULT} = [{'time': 0.025582861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.025601597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:14.307" endtime="20201115 23:01:14.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:14.325" level="INFO">${ACCURACY} = {'diff': [6.541999999998271e-06, 6.569000000001407e-06, 6.542000000001741e-06, 5.9589999999998255e-06, 6.5829999999975075e-06, 6.514000000002601e-06, 6.556000000001311e-06, 6.583999999996981e-06, 5.93...</msg>
<status status="PASS" starttime="20201115 23:01:14.312" endtime="20201115 23:01:14.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.329" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 23:01:14.328" endtime="20201115 23:01:14.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.332" level="INFO">VALUE: [6.541999999998271e-06, 6.569000000001407e-06, 6.542000000001741e-06, 5.9589999999998255e-06, 6.5829999999975075e-06, 6.514000000002601e-06, 6.556000000001311e-06, 6.583999999996981e-06, 5.930000000001212e-06, 6.611000000000117e-06, 5.945000000000256e-06, 6.568999999997938e-06, 7.208000000001602e-06, 7.179999999998993e-06, 6.569000000001407e-06, 6.554999999998368e-06, 5.958000000000352e-06, 7.167000000002366e-06, 6.542000000001741e-06, 6.570000000000881e-06, 6.556000000001311e-06, 5.971999999999922e-06, 6.568999999997938e-06, 6.540999999998798e-06, 5.958000000000352e-06, 6.541999999998271e-06, 5.9579999999968825e-06, 6.5829999999975075e-06, 5.9589999999998255e-06, 6.568999999997938e-06, 6.556000000001311e-06, 6.554999999998368e-06, 7.110999999997147e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.958000000000352e-06, 6.554999999998368e-06, 5.945000000000256e-06, 6.570000000000881e-06, 6.569999999997411e-06, 6.554999999998368e-06, 6.583000000000977e-06, 6.570000000000881e-06, 6.568999999997938e-06, 5.9439999999973125e-06, 5.958000000000352e-06, 6.541000000002267e-06, 6.526999999999228e-06, 6.556000000001311e-06]</msg>
<status status="PASS" starttime="20201115 23:01:14.330" endtime="20201115 23:01:14.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.326" endtime="20201115 23:01:14.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.335" endtime="20201115 23:01:14.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:14.338" endtime="20201115 23:01:14.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.337" endtime="20201115 23:01:14.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.333" endtime="20201115 23:01:14.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.967" endtime="20201115 23:01:14.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.965" endtime="20201115 23:01:14.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.965" endtime="20201115 23:01:14.359"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.362" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.370" endtime="20201115 23:01:14.385"></status>
</kw>
<msg timestamp="20201115 23:01:14.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.368" endtime="20201115 23:01:14.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.387" endtime="20201115 23:01:14.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.389" endtime="20201115 23:01:14.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.366" endtime="20201115 23:01:14.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.364" endtime="20201115 23:01:14.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.398" endtime="20201115 23:01:14.683"></status>
</kw>
<msg timestamp="20201115 23:01:14.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024338903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024346083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.396" endtime="20201115 23:01:14.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024338903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024346083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.687" endtime="20201115 23:01:14.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.696" endtime="20201115 23:01:14.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.394" endtime="20201115 23:01:14.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.392" endtime="20201115 23:01:14.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:14.702" level="INFO">${RESULT} = [{'time': 0.024346083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.180000000002462e-06, 'source_diff': 7.180000000002462e-06}, {'time': 0.024364167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:14.699" endtime="20201115 23:01:14.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:14.716" level="INFO">${ACCURACY} = {'diff': [7.180000000002462e-06, 7.749999999997342e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.777999999999952e-06, 7.818999999999188e-06, 7.222000000001172e-06, 7.818999999999188e-06, 7.76...</msg>
<status status="PASS" starttime="20201115 23:01:14.703" endtime="20201115 23:01:14.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.720" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 23:01:14.719" endtime="20201115 23:01:14.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.723" level="INFO">VALUE: [7.180000000002462e-06, 7.749999999997342e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.777999999999952e-06, 7.818999999999188e-06, 7.222000000001172e-06, 7.818999999999188e-06, 7.763000000000908e-06, 7.763999999996912e-06, 7.2079999999981326e-06, 7.181000000001936e-06, 7.179999999998993e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.82000000000213e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.1529999999993266e-06, 7.125000000000187e-06, 7.179999999998993e-06, 7.1529999999993266e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.138999999999757e-06, 7.2079999999981326e-06, 7.764000000000382e-06, 7.1529999999993266e-06, 7.791000000000048e-06, 7.764000000000382e-06, 7.151999999999853e-06, 7.179999999998993e-06, 7.764000000000382e-06, 7.1669999999988965e-06, 7.764000000000382e-06, 7.181000000001936e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.749999999997342e-06, 7.694000000002532e-06, 7.764000000000382e-06, 7.151999999999853e-06, 7.749999999997342e-06, 7.165999999999423e-06, 7.1669999999988965e-06, 7.777000000000478e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.180999999998466e-06]</msg>
<status status="PASS" starttime="20201115 23:01:14.721" endtime="20201115 23:01:14.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.717" endtime="20201115 23:01:14.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.726" endtime="20201115 23:01:14.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:14.731" endtime="20201115 23:01:14.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.728" endtime="20201115 23:01:14.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.724" endtime="20201115 23:01:14.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.362" endtime="20201115 23:01:14.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.360" endtime="20201115 23:01:14.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.360" endtime="20201115 23:01:14.756"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.762" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.780" endtime="20201115 23:01:14.798"></status>
</kw>
<msg timestamp="20201115 23:01:14.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.776" endtime="20201115 23:01:14.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.801" endtime="20201115 23:01:14.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.806" endtime="20201115 23:01:14.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.771" endtime="20201115 23:01:14.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.766" endtime="20201115 23:01:14.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.827" endtime="20201115 23:01:15.114"></status>
</kw>
<msg timestamp="20201115 23:01:15.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042132958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042141361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.824" endtime="20201115 23:01:15.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042132958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042141361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.118" endtime="20201115 23:01:15.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.127" endtime="20201115 23:01:15.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.818" endtime="20201115 23:01:15.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.814" endtime="20201115 23:01:15.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:15.134" level="INFO">${RESULT} = [{'time': 0.042141361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.042157375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:15.130" endtime="20201115 23:01:15.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:15.147" level="INFO">${ACCURACY} = {'diff': [8.403000000004046e-06, 8.332999999999258e-06, 8.360999999998397e-06, 8.985999999995553e-06, 8.346999999998828e-06, 8.361000000005336e-06, 8.374999999997967e-06, 8.945000000003256e-06, 8.9860...</msg>
<status status="PASS" starttime="20201115 23:01:15.134" endtime="20201115 23:01:15.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.151" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 23:01:15.150" endtime="20201115 23:01:15.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.154" level="INFO">VALUE: [8.403000000004046e-06, 8.332999999999258e-06, 8.360999999998397e-06, 8.985999999995553e-06, 8.346999999998828e-06, 8.361000000005336e-06, 8.374999999997967e-06, 8.945000000003256e-06, 8.986000000002492e-06, 8.360999999998397e-06, 8.375000000004906e-06, 8.375000000004906e-06, 7.805999999999091e-06, 8.333999999998731e-06, 7.736000000001242e-06, 8.415999999997203e-06, 8.389000000004476e-06, 8.33400000000567e-06, 8.430999999996247e-06, 8.36200000000481e-06, 8.986000000002492e-06, 8.431000000003186e-06, 8.971999999995983e-06, 8.360999999998397e-06, 7.777999999999952e-06, 8.374999999997967e-06, 8.971999999995983e-06, 8.403000000004046e-06, 8.374999999997967e-06, 8.389000000004476e-06, 8.971999999995983e-06, 8.972000000002922e-06, 8.305000000000118e-06, 8.389000000004476e-06, 8.388999999997537e-06, 8.375000000004906e-06, 8.374999999997967e-06, 8.985999999995553e-06, 8.374999999997967e-06, 8.375000000004906e-06, 8.375000000004906e-06, 8.971999999995983e-06, 8.388999999997537e-06, 7.777999999999952e-06, 8.986000000002492e-06, 8.375000000004906e-06, 8.403000000004046e-06, 8.374999999997967e-06, 8.360999999998397e-06, 8.972000000002922e-06]</msg>
<status status="PASS" starttime="20201115 23:01:15.152" endtime="20201115 23:01:15.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.148" endtime="20201115 23:01:15.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.157" endtime="20201115 23:01:15.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.161" endtime="20201115 23:01:15.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.159" endtime="20201115 23:01:15.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.155" endtime="20201115 23:01:15.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.763" endtime="20201115 23:01:15.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.759" endtime="20201115 23:01:15.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.757" endtime="20201115 23:01:15.182"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.185" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.194" endtime="20201115 23:01:15.208"></status>
</kw>
<msg timestamp="20201115 23:01:15.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.192" endtime="20201115 23:01:15.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.210" endtime="20201115 23:01:15.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.213" endtime="20201115 23:01:15.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.189" endtime="20201115 23:01:15.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.187" endtime="20201115 23:01:15.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.221" endtime="20201115 23:01:15.508"></status>
</kw>
<msg timestamp="20201115 23:01:15.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025148764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025158347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.220" endtime="20201115 23:01:15.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025148764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025158347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.512" endtime="20201115 23:01:15.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.520" endtime="20201115 23:01:15.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.217" endtime="20201115 23:01:15.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.216" endtime="20201115 23:01:15.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:15.527" level="INFO">${RESULT} = [{'time': 0.025158347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.025174264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:15.524" endtime="20201115 23:01:15.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:15.540" level="INFO">${ACCURACY} = {'diff': [9.583000000000508e-06, 9.596999999996608e-06, 8.985999999999023e-06, 9.582999999997038e-06, 8.931000000000217e-06, 9.555000000001368e-06, 9.597000000000078e-06, 9.597000000000078e-06, 8.9589...</msg>
<status status="PASS" starttime="20201115 23:01:15.528" endtime="20201115 23:01:15.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.545" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 23:01:15.544" endtime="20201115 23:01:15.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.547" level="INFO">VALUE: [9.583000000000508e-06, 9.596999999996608e-06, 8.985999999999023e-06, 9.582999999997038e-06, 8.931000000000217e-06, 9.555000000001368e-06, 9.597000000000078e-06, 9.597000000000078e-06, 8.958999999999356e-06, 8.959000000002826e-06, 8.985999999999023e-06, 9.583000000000508e-06, 9.000000000002062e-06, 1.0165999999998954e-05, 9.597000000000078e-06, 9.556000000000842e-06, 9.583999999999981e-06, 1.0195000000001037e-05, 9.624999999999218e-06, 9.583999999999981e-06, 8.903000000001077e-06, 9.556000000000842e-06, 8.985999999999023e-06, 9.597000000000078e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.583999999999981e-06, 1.0236000000000273e-05, 9.555000000001368e-06, 9.597000000000078e-06, 9.597999999999551e-06, 8.986000000002492e-06, 9.624999999999218e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.597999999999551e-06, 9.027999999997732e-06, 8.972999999998926e-06, 9.568999999997468e-06, 1.0207999999997663e-05, 9.513999999998662e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.624999999999218e-06, 9.583999999999981e-06, 8.971999999999453e-06, 9.568999999997468e-06]</msg>
<status status="PASS" starttime="20201115 23:01:15.546" endtime="20201115 23:01:15.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.541" endtime="20201115 23:01:15.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.551" endtime="20201115 23:01:15.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.555" endtime="20201115 23:01:15.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.553" endtime="20201115 23:01:15.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.549" endtime="20201115 23:01:15.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.186" endtime="20201115 23:01:15.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.184" endtime="20201115 23:01:15.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.183" endtime="20201115 23:01:15.576"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.578" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.586" endtime="20201115 23:01:15.602"></status>
</kw>
<msg timestamp="20201115 23:01:15.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.585" endtime="20201115 23:01:15.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.603" endtime="20201115 23:01:15.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.606" endtime="20201115 23:01:15.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.582" endtime="20201115 23:01:15.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.580" endtime="20201115 23:01:15.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.615" endtime="20201115 23:01:15.900"></status>
</kw>
<msg timestamp="20201115 23:01:15.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024812875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024823069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.613" endtime="20201115 23:01:15.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024812875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024823069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.905" endtime="20201115 23:01:15.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.913" endtime="20201115 23:01:15.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.611" endtime="20201115 23:01:15.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.609" endtime="20201115 23:01:15.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:15.920" level="INFO">${RESULT} = [{'time': 0.024823069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.024849389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:15.916" endtime="20201115 23:01:15.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:15.934" level="INFO">${ACCURACY} = {'diff': [1.0193999999998093e-05, 1.0832999999998288e-05, 1.0195000000001037e-05, 1.0194999999997567e-05, 1.0193999999998093e-05, 1.0777000000000009e-05, 1.0180000000001993e-05, 1.0194000000001563e-05...</msg>
<status status="PASS" starttime="20201115 23:01:15.921" endtime="20201115 23:01:15.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.939" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 23:01:15.938" endtime="20201115 23:01:15.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.942" level="INFO">VALUE: [1.0193999999998093e-05, 1.0832999999998288e-05, 1.0195000000001037e-05, 1.0194999999997567e-05, 1.0193999999998093e-05, 1.0777000000000009e-05, 1.0180000000001993e-05, 1.0194000000001563e-05, 1.0749999999996873e-05, 1.0181000000001467e-05, 1.0736000000000773e-05, 1.0820000000001662e-05, 1.0790999999999579e-05, 1.0790999999999579e-05, 1.0193999999998093e-05, 1.0805999999998622e-05, 1.0180999999997997e-05, 1.0180000000001993e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0181000000001467e-05, 1.0791999999999052e-05, 1.0820000000001662e-05, 1.0806000000002092e-05, 1.0195000000001037e-05, 1.0180000000001993e-05, 1.0167000000001897e-05, 1.0193999999998093e-05, 1.0195000000001037e-05, 1.0236000000000273e-05, 1.0195000000001037e-05, 1.0790999999999579e-05, 1.0820000000001662e-05, 1.0791999999999052e-05, 1.0792000000002522e-05, 1.0195000000001037e-05, 1.0179999999998524e-05, 1.0791999999999052e-05, 1.0792000000002522e-05, 1.0179999999998524e-05, 1.0193999999998093e-05, 1.0790999999999579e-05, 1.0820000000001662e-05, 1.0194000000001563e-05, 1.0194999999997567e-05, 1.0806000000002092e-05, 1.0791999999999052e-05, 1.0791999999999052e-05, 1.0180999999997997e-05, 1.0209000000000606e-05]</msg>
<status status="PASS" starttime="20201115 23:01:15.940" endtime="20201115 23:01:15.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.935" endtime="20201115 23:01:15.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.945" endtime="20201115 23:01:15.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.948" endtime="20201115 23:01:15.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.947" endtime="20201115 23:01:15.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.943" endtime="20201115 23:01:15.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.579" endtime="20201115 23:01:15.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.577" endtime="20201115 23:01:15.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.576" endtime="20201115 23:01:15.969"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.972" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.980" endtime="20201115 23:01:15.995"></status>
</kw>
<msg timestamp="20201115 23:01:15.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.978" endtime="20201115 23:01:15.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.997" endtime="20201115 23:01:15.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.999" endtime="20201115 23:01:16.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.976" endtime="20201115 23:01:16.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.974" endtime="20201115 23:01:16.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.008" endtime="20201115 23:01:16.295"></status>
</kw>
<msg timestamp="20201115 23:01:16.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024222681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024234056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.007" endtime="20201115 23:01:16.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024222681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024234056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.299" endtime="20201115 23:01:16.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.308" endtime="20201115 23:01:16.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.004" endtime="20201115 23:01:16.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.003" endtime="20201115 23:01:16.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:16.315" level="INFO">${RESULT} = [{'time': 0.024234056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.024255097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:16.311" endtime="20201115 23:01:16.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:16.328" level="INFO">${ACCURACY} = {'diff': [1.1375000000000968e-05, 1.2028000000000733e-05, 1.2000000000001593e-05, 1.1416999999999677e-05, 1.1472000000001953e-05, 1.2014000000001163e-05, 1.1389000000000538e-05, 1.1389000000000538e-05...</msg>
<status status="PASS" starttime="20201115 23:01:16.316" endtime="20201115 23:01:16.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.333" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 23:01:16.332" endtime="20201115 23:01:16.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.335" level="INFO">VALUE: [1.1375000000000968e-05, 1.2028000000000733e-05, 1.2000000000001593e-05, 1.1416999999999677e-05, 1.1472000000001953e-05, 1.2014000000001163e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.2000000000001593e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.0777999999999482e-05, 1.2014000000001163e-05, 1.1401999999997164e-05, 1.1403000000000107e-05, 1.2014000000001163e-05, 1.1375000000000968e-05, 1.1388999999997068e-05, 1.1346999999998358e-05, 1.2000000000001593e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1332999999998788e-05, 1.1361000000001398e-05, 1.1999999999998123e-05, 1.1403000000000107e-05, 1.1360999999997928e-05, 1.1388999999997068e-05, 1.1402000000000634e-05, 1.1416999999999677e-05, 1.0778000000002952e-05, 1.1403000000000107e-05, 1.2014000000001163e-05, 1.1403000000000107e-05, 1.1362000000000871e-05, 1.1986000000002023e-05, 1.1402000000000634e-05, 1.1986000000002023e-05, 1.1375000000000968e-05, 1.1403000000000107e-05, 1.1473000000001427e-05, 1.2000000000001593e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.2000000000001593e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.2055999999999872e-05, 1.1403000000000107e-05, 1.0790999999999579e-05]</msg>
<status status="PASS" starttime="20201115 23:01:16.334" endtime="20201115 23:01:16.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.329" endtime="20201115 23:01:16.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.338" endtime="20201115 23:01:16.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.342" endtime="20201115 23:01:16.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.340" endtime="20201115 23:01:16.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.337" endtime="20201115 23:01:16.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.972" endtime="20201115 23:01:16.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.970" endtime="20201115 23:01:16.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.970" endtime="20201115 23:01:16.363"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.365" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.374" endtime="20201115 23:01:16.389"></status>
</kw>
<msg timestamp="20201115 23:01:16.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.372" endtime="20201115 23:01:16.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.390" endtime="20201115 23:01:16.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.393" endtime="20201115 23:01:16.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.369" endtime="20201115 23:01:16.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.367" endtime="20201115 23:01:16.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.402" endtime="20201115 23:01:16.688"></status>
</kw>
<msg timestamp="20201115 23:01:16.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023995347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024007347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.400" endtime="20201115 23:01:16.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023995347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024007347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.692" endtime="20201115 23:01:16.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.701" endtime="20201115 23:01:16.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.398" endtime="20201115 23:01:16.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.396" endtime="20201115 23:01:16.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:16.708" level="INFO">${RESULT} = [{'time': 0.024007347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1999999999998123e-05, 'source_diff': 1.1999999999998123e-05}, {'time': 0.024024375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:16.705" endtime="20201115 23:01:16.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:16.721" level="INFO">${ACCURACY} = {'diff': [1.1999999999998123e-05, 1.1971999999998983e-05, 1.2555000000000899e-05, 1.2014000000001163e-05, 1.2610999999999178e-05, 1.1999999999998123e-05, 1.2583000000000039e-05, 1.2027999999997263e-05...</msg>
<status status="PASS" starttime="20201115 23:01:16.709" endtime="20201115 23:01:16.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.726" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 23:01:16.725" endtime="20201115 23:01:16.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.729" level="INFO">VALUE: [1.1999999999998123e-05, 1.1971999999998983e-05, 1.2555000000000899e-05, 1.2014000000001163e-05, 1.2610999999999178e-05, 1.1999999999998123e-05, 1.2583000000000039e-05, 1.2027999999997263e-05, 1.1972999999998457e-05, 1.1987000000001496e-05, 1.2597000000003078e-05, 1.2000000000001593e-05, 1.3209000000000137e-05, 1.1985999999998553e-05, 1.2013999999997693e-05, 1.2000000000001593e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.3208000000000664e-05, 1.2625000000002218e-05, 1.3137999999999345e-05, 1.1999999999998123e-05, 1.2610999999999178e-05, 1.2569000000000469e-05, 1.2597999999999082e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.2013000000001689e-05, 1.2596999999999609e-05, 1.1985999999998553e-05, 1.2596999999999609e-05, 1.201299999999822e-05, 1.1999999999998123e-05, 1.2596999999999609e-05, 1.2013999999997693e-05, 1.1999999999998123e-05, 1.2013000000001689e-05, 1.2014000000001163e-05, 1.1986999999998027e-05, 1.2610999999999178e-05, 1.2000000000001593e-05, 1.2000000000001593e-05, 1.2555000000000899e-05, 1.1985999999998553e-05, 1.2082999999999539e-05, 1.2028000000000733e-05, 1.2597999999999082e-05, 1.2596999999999609e-05]</msg>
<status status="PASS" starttime="20201115 23:01:16.727" endtime="20201115 23:01:16.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.722" endtime="20201115 23:01:16.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.732" endtime="20201115 23:01:16.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.735" endtime="20201115 23:01:16.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.734" endtime="20201115 23:01:16.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.730" endtime="20201115 23:01:16.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.366" endtime="20201115 23:01:16.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.364" endtime="20201115 23:01:16.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.363" endtime="20201115 23:01:16.756"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.759" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.767" endtime="20201115 23:01:16.782"></status>
</kw>
<msg timestamp="20201115 23:01:16.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.765" endtime="20201115 23:01:16.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.784" endtime="20201115 23:01:16.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.786" endtime="20201115 23:01:16.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.763" endtime="20201115 23:01:16.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.761" endtime="20201115 23:01:16.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.796" endtime="20201115 23:01:17.081"></status>
</kw>
<msg timestamp="20201115 23:01:17.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024381292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024394486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.794" endtime="20201115 23:01:17.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024381292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024394486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.086" endtime="20201115 23:01:17.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.094" endtime="20201115 23:01:17.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.791" endtime="20201115 23:01:17.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.789" endtime="20201115 23:01:17.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.101" level="INFO">${RESULT} = [{'time': 0.024394486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.024414222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:17.097" endtime="20201115 23:01:17.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.114" level="INFO">${ACCURACY} = {'diff': [1.3194000000001094e-05, 1.3222000000000234e-05, 1.3819000000001719e-05, 1.3208000000000664e-05, 1.379099999999911e-05, 1.3833000000001289e-05, 1.3207999999997194e-05, 1.3208000000000664e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:17.102" endtime="20201115 23:01:17.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.119" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.118" endtime="20201115 23:01:17.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.121" level="INFO">VALUE: [1.3194000000001094e-05, 1.3222000000000234e-05, 1.3819000000001719e-05, 1.3208000000000664e-05, 1.379099999999911e-05, 1.3833000000001289e-05, 1.3207999999997194e-05, 1.3208000000000664e-05, 1.3208000000000664e-05, 1.3139000000002288e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3222000000000234e-05, 1.3805999999998153e-05, 1.3167000000001428e-05, 1.3208000000000664e-05, 1.3805000000002149e-05, 1.379099999999911e-05, 1.381899999999825e-05, 1.3777999999999013e-05, 1.3208000000000664e-05, 1.3207999999997194e-05, 1.3819000000001719e-05, 1.3194000000001094e-05, 1.3263999999998943e-05, 1.3792000000002053e-05, 1.3833000000001289e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3209000000000137e-05, 1.3861000000000429e-05, 1.3208000000000664e-05, 1.3222999999999707e-05, 1.3819999999997723e-05, 1.3874999999999998e-05, 1.3791999999998583e-05, 1.381899999999825e-05, 1.3222000000000234e-05, 1.379099999999911e-05, 1.380499999999868e-05, 1.3208000000000664e-05, 1.3222999999999707e-05, 1.3235999999999803e-05, 1.3820000000001192e-05, 1.380499999999868e-05, 1.379099999999911e-05, 1.3167000000001428e-05, 1.3249999999999373e-05, 1.3125000000002718e-05, 1.3833000000001289e-05]</msg>
<status status="PASS" starttime="20201115 23:01:17.120" endtime="20201115 23:01:17.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.115" endtime="20201115 23:01:17.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.124" endtime="20201115 23:01:17.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.128" endtime="20201115 23:01:17.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.126" endtime="20201115 23:01:17.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.123" endtime="20201115 23:01:17.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.759" endtime="20201115 23:01:17.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.757" endtime="20201115 23:01:17.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.757" endtime="20201115 23:01:17.149"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.151" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.159" endtime="20201115 23:01:17.176"></status>
</kw>
<msg timestamp="20201115 23:01:17.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.158" endtime="20201115 23:01:17.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.177" endtime="20201115 23:01:17.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.180" endtime="20201115 23:01:17.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.155" endtime="20201115 23:01:17.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.153" endtime="20201115 23:01:17.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.189" endtime="20201115 23:01:17.475"></status>
</kw>
<msg timestamp="20201115 23:01:17.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025265903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025280347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.188" endtime="20201115 23:01:17.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025265903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025280347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.480" endtime="20201115 23:01:17.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.488" endtime="20201115 23:01:17.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.185" endtime="20201115 23:01:17.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.183" endtime="20201115 23:01:17.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.495" level="INFO">${RESULT} = [{'time': 0.025280347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4444000000002344e-05, 'source_diff': 1.4444000000002344e-05}, {'time': 0.025309333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:17.491" endtime="20201115 23:01:17.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.509" level="INFO">${ACCURACY} = {'diff': [1.4444000000002344e-05, 1.5014000000000693e-05, 1.4430999999998778e-05, 1.5014000000000693e-05, 1.4402999999999638e-05, 1.5000000000001124e-05, 1.4429999999999304e-05, 1.4986000000001554e-05...</msg>
<status status="PASS" starttime="20201115 23:01:17.496" endtime="20201115 23:01:17.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.514" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.513" endtime="20201115 23:01:17.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.516" level="INFO">VALUE: [1.4444000000002344e-05, 1.5014000000000693e-05, 1.4430999999998778e-05, 1.5014000000000693e-05, 1.4402999999999638e-05, 1.5000000000001124e-05, 1.4429999999999304e-05, 1.4986000000001554e-05, 1.4430999999998778e-05, 1.4445000000001817e-05, 1.5013999999997224e-05, 1.3834000000000762e-05, 1.4415999999999735e-05, 1.5028000000000263e-05, 1.4375000000000498e-05, 1.4416999999999208e-05, 1.3749999999999873e-05, 1.4430999999998778e-05, 1.4416999999999208e-05, 1.4415999999999735e-05, 1.3806000000001623e-05, 1.4415999999999735e-05, 1.5014000000000693e-05, 1.4472000000001484e-05, 1.4389000000000068e-05, 1.4444000000002344e-05, 1.4430999999998778e-05, 1.3791999999998583e-05, 1.4402999999999638e-05, 1.4430999999998778e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.4445000000001817e-05, 1.5013999999997224e-05, 1.4443999999998874e-05, 1.4445000000001817e-05, 1.5014000000000693e-05, 1.4459000000001387e-05, 1.4416999999999208e-05, 1.509699999999864e-05, 1.5028000000000263e-05, 1.4415999999999735e-05, 1.3805000000002149e-05, 1.5000000000001124e-05, 1.3805000000002149e-05, 1.4388999999996599e-05, 1.5041999999999833e-05, 1.4417000000002678e-05, 1.5028000000000263e-05, 1.3847999999996863e-05]</msg>
<status status="PASS" starttime="20201115 23:01:17.515" endtime="20201115 23:01:17.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.510" endtime="20201115 23:01:17.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.519" endtime="20201115 23:01:17.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.523" endtime="20201115 23:01:17.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.521" endtime="20201115 23:01:17.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.518" endtime="20201115 23:01:17.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.152" endtime="20201115 23:01:17.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.150" endtime="20201115 23:01:17.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.149" endtime="20201115 23:01:17.544"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.546" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.555" endtime="20201115 23:01:17.571"></status>
</kw>
<msg timestamp="20201115 23:01:17.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.553" endtime="20201115 23:01:17.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.572" endtime="20201115 23:01:17.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.575" endtime="20201115 23:01:17.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.551" endtime="20201115 23:01:17.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.548" endtime="20201115 23:01:17.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.584" endtime="20201115 23:01:17.870"></status>
</kw>
<msg timestamp="20201115 23:01:17.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024879667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024894681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.582" endtime="20201115 23:01:17.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024879667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024894681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.874" endtime="20201115 23:01:17.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.883" endtime="20201115 23:01:17.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.580" endtime="20201115 23:01:17.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.578" endtime="20201115 23:01:17.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.889" level="INFO">${RESULT} = [{'time': 0.024894681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5013999999997224e-05, 'source_diff': 1.5013999999997224e-05}, {'time': 0.024921722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:17.886" endtime="20201115 23:01:17.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.903" level="INFO">${ACCURACY} = {'diff': [1.5013999999997224e-05, 1.504100000000036e-05, 1.563899999999785e-05, 1.562500000000175e-05, 1.5014000000000693e-05, 1.505499999999993e-05, 1.562500000000175e-05, 1.5637999999998375e-05, 1.5...</msg>
<status status="PASS" starttime="20201115 23:01:17.890" endtime="20201115 23:01:17.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.907" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.906" endtime="20201115 23:01:17.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.910" level="INFO">VALUE: [1.5013999999997224e-05, 1.504100000000036e-05, 1.563899999999785e-05, 1.562500000000175e-05, 1.5014000000000693e-05, 1.505499999999993e-05, 1.562500000000175e-05, 1.5637999999998375e-05, 1.504100000000036e-05, 1.4971999999998514e-05, 1.4999999999997654e-05, 1.5041999999999833e-05, 1.561100000000218e-05, 1.5583999999999043e-05, 1.5013999999997224e-05, 1.5611999999998183e-05, 1.559700000000261e-05, 1.5597999999998613e-05, 1.5707999999999694e-05, 1.562500000000175e-05, 1.5041999999999833e-05, 1.5013999999997224e-05, 1.562500000000175e-05, 1.505499999999993e-05, 1.6235999999999334e-05, 1.561100000000218e-05, 1.502700000000079e-05, 1.508299999999907e-05, 1.5694000000000125e-05, 1.562499999999828e-05, 1.562500000000175e-05, 1.4985999999998084e-05, 1.4985999999998084e-05, 1.6235999999999334e-05, 1.5598000000002082e-05, 1.562499999999828e-05, 1.6221999999999764e-05, 1.5028000000000263e-05, 1.562500000000175e-05, 1.504099999999689e-05, 1.508299999999907e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5041999999999833e-05, 1.562500000000175e-05, 1.5014000000000693e-05, 1.562500000000175e-05, 1.562499999999828e-05, 1.6221999999999764e-05, 1.5041999999999833e-05]</msg>
<status status="PASS" starttime="20201115 23:01:17.909" endtime="20201115 23:01:17.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.904" endtime="20201115 23:01:17.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.913" endtime="20201115 23:01:17.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.917" endtime="20201115 23:01:17.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.915" endtime="20201115 23:01:17.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.912" endtime="20201115 23:01:17.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.547" endtime="20201115 23:01:17.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.545" endtime="20201115 23:01:17.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.544" endtime="20201115 23:01:17.938"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.940" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.949" endtime="20201115 23:01:17.964"></status>
</kw>
<msg timestamp="20201115 23:01:17.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.947" endtime="20201115 23:01:17.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.965" endtime="20201115 23:01:17.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.968" endtime="20201115 23:01:17.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.944" endtime="20201115 23:01:17.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.942" endtime="20201115 23:01:17.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.977" endtime="20201115 23:01:18.263"></status>
</kw>
<msg timestamp="20201115 23:01:18.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024183667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024199903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.975" endtime="20201115 23:01:18.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024183667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024199903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.267" endtime="20201115 23:01:18.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.276" endtime="20201115 23:01:18.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.973" endtime="20201115 23:01:18.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.971" endtime="20201115 23:01:18.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.283" level="INFO">${RESULT} = [{'time': 0.024199903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6235999999999334e-05, 'source_diff': 1.6235999999999334e-05}, {'time': 0.024222292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:18.279" endtime="20201115 23:01:18.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.296" level="INFO">${ACCURACY} = {'diff': [1.6235999999999334e-05, 1.6208999999999668e-05, 1.6208999999999668e-05, 1.6847999999999863e-05, 1.6235999999999334e-05, 1.6236999999998808e-05, 1.6235999999999334e-05, 1.6237000000002277e-05...</msg>
<status status="PASS" starttime="20201115 23:01:18.284" endtime="20201115 23:01:18.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.301" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.300" endtime="20201115 23:01:18.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.303" level="INFO">VALUE: [1.6235999999999334e-05, 1.6208999999999668e-05, 1.6208999999999668e-05, 1.6847999999999863e-05, 1.6235999999999334e-05, 1.6236999999998808e-05, 1.6235999999999334e-05, 1.6237000000002277e-05, 1.6195000000000098e-05, 1.6194000000000625e-05, 1.6805999999997684e-05, 1.6833999999996824e-05, 1.6249999999998904e-05, 1.690300000000214e-05, 1.6195000000000098e-05, 1.680500000000168e-05, 1.6249999999998904e-05, 1.6195000000000098e-05, 1.6819999999997254e-05, 1.6221999999999764e-05, 1.6235999999999334e-05, 1.684700000000039e-05, 1.6264000000001944e-05, 1.6208000000000194e-05, 1.6221999999999764e-05, 1.6834000000000293e-05, 1.683299999999735e-05, 1.627699999999857e-05, 1.6208000000000194e-05, 1.6222000000003234e-05, 1.6249999999998904e-05, 1.6236000000002804e-05, 1.6221999999999764e-05, 1.6195000000000098e-05, 1.6235999999999334e-05, 1.6847999999999863e-05, 1.6222999999999238e-05, 1.6236999999998808e-05, 1.6250000000002374e-05, 1.6235999999999334e-05, 1.6235999999999334e-05, 1.6221999999999764e-05, 1.683300000000082e-05, 1.6235999999999334e-05, 1.6791999999998114e-05, 1.684700000000039e-05, 1.6834000000000293e-05, 1.6221999999999764e-05, 1.6777999999998544e-05, 1.681900000000125e-05]</msg>
<status status="PASS" starttime="20201115 23:01:18.302" endtime="20201115 23:01:18.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.297" endtime="20201115 23:01:18.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.307" endtime="20201115 23:01:18.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.310" endtime="20201115 23:01:18.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.309" endtime="20201115 23:01:18.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.305" endtime="20201115 23:01:18.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.941" endtime="20201115 23:01:18.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.939" endtime="20201115 23:01:18.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.938" endtime="20201115 23:01:18.332"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.334" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.342" endtime="20201115 23:01:18.357"></status>
</kw>
<msg timestamp="20201115 23:01:18.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.340" endtime="20201115 23:01:18.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.359" endtime="20201115 23:01:18.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.361" endtime="20201115 23:01:18.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.338" endtime="20201115 23:01:18.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.336" endtime="20201115 23:01:18.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.370" endtime="20201115 23:01:18.656"></status>
</kw>
<msg timestamp="20201115 23:01:18.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024181542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.369" endtime="20201115 23:01:18.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024181542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.661" endtime="20201115 23:01:18.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.669" endtime="20201115 23:01:18.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.366" endtime="20201115 23:01:18.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.365" endtime="20201115 23:01:18.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.676" level="INFO">${RESULT} = [{'time': 0.024198986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7443999999998405e-05, 'source_diff': 1.7443999999998405e-05}, {'time': 0.024230028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:18.673" endtime="20201115 23:01:18.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.689" level="INFO">${ACCURACY} = {'diff': [1.7443999999998405e-05, 1.8041999999999364e-05, 1.737500000000003e-05, 1.805499999999946e-05, 1.7429999999998835e-05, 1.7457999999997975e-05, 1.743099999999831e-05, 1.6887999999999626e-05, 1...</msg>
<status status="PASS" starttime="20201115 23:01:18.677" endtime="20201115 23:01:18.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.694" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.693" endtime="20201115 23:01:18.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.697" level="INFO">VALUE: [1.7443999999998405e-05, 1.8041999999999364e-05, 1.737500000000003e-05, 1.805499999999946e-05, 1.7429999999998835e-05, 1.7457999999997975e-05, 1.743099999999831e-05, 1.6887999999999626e-05, 1.7430000000002305e-05, 1.7459000000000918e-05, 1.7458000000001445e-05, 1.743100000000178e-05, 1.7500000000000154e-05, 1.7443999999998405e-05, 1.7443999999998405e-05, 1.745899999999745e-05, 1.804099999999989e-05, 1.7444000000001875e-05, 1.7430000000002305e-05, 1.7457999999997975e-05, 1.80829999999986e-05, 1.683300000000082e-05, 1.73889999999996e-05, 1.7458000000001445e-05, 1.8069999999998504e-05, 1.804099999999989e-05, 1.7500000000000154e-05, 1.741699999999874e-05, 1.8042000000002834e-05, 1.8042000000002834e-05, 1.7416000000002735e-05, 1.743100000000178e-05, 1.804099999999989e-05, 1.743099999999831e-05, 1.8112000000000683e-05, 1.686099999999996e-05, 1.7444000000001875e-05, 1.806899999999903e-05, 1.7500000000000154e-05, 1.744500000000135e-05, 1.744499999999788e-05, 1.744499999999788e-05, 1.73889999999996e-05, 1.6819999999997254e-05, 1.7429999999998835e-05, 1.7457999999997975e-05, 1.743100000000178e-05, 1.743099999999831e-05, 1.743100000000178e-05, 1.741700000000221e-05]</msg>
<status status="PASS" starttime="20201115 23:01:18.695" endtime="20201115 23:01:18.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.690" endtime="20201115 23:01:18.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.700" endtime="20201115 23:01:18.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.704" endtime="20201115 23:01:18.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.702" endtime="20201115 23:01:18.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.698" endtime="20201115 23:01:18.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.334" endtime="20201115 23:01:18.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.333" endtime="20201115 23:01:18.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.332" endtime="20201115 23:01:18.725"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.727" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.736" endtime="20201115 23:01:18.752"></status>
</kw>
<msg timestamp="20201115 23:01:18.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.734" endtime="20201115 23:01:18.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.753" endtime="20201115 23:01:18.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.756" endtime="20201115 23:01:18.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.732" endtime="20201115 23:01:18.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.729" endtime="20201115 23:01:18.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.765" endtime="20201115 23:01:19.048"></status>
</kw>
<msg timestamp="20201115 23:01:19.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025464181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025482833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.763" endtime="20201115 23:01:19.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025464181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025482833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.053" endtime="20201115 23:01:19.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.061" endtime="20201115 23:01:19.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.761" endtime="20201115 23:01:19.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.759" endtime="20201115 23:01:19.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.068" level="INFO">${RESULT} = [{'time': 0.025482833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8652000000000946e-05, 'source_diff': 1.8652000000000946e-05}, {'time': 0.025508708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:19.065" endtime="20201115 23:01:19.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.083" level="INFO">${ACCURACY} = {'diff': [1.8652000000000946e-05, 1.805500000000293e-05, 1.866699999999999e-05, 1.865300000000042e-05, 1.8027999999999794e-05, 1.804099999999989e-05, 1.865300000000042e-05, 1.8651999999997476e-05, 1.8...</msg>
<status status="PASS" starttime="20201115 23:01:19.069" endtime="20201115 23:01:19.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.087" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.086" endtime="20201115 23:01:19.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.090" level="INFO">VALUE: [1.8652000000000946e-05, 1.805500000000293e-05, 1.866699999999999e-05, 1.865300000000042e-05, 1.8027999999999794e-05, 1.804099999999989e-05, 1.865300000000042e-05, 1.8651999999997476e-05, 1.863899999999738e-05, 1.8652000000000946e-05, 1.8041999999999364e-05, 1.866699999999999e-05, 1.8665999999997046e-05, 1.861100000000171e-05, 1.862500000000128e-05, 1.863900000000085e-05, 1.802700000000032e-05, 1.8041999999999364e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.8055999999998934e-05, 1.869499999999913e-05, 1.8041999999999364e-05, 1.862500000000128e-05, 1.802700000000032e-05, 1.863900000000085e-05, 1.8027999999999794e-05, 1.9263999999998005e-05, 1.863900000000085e-05, 1.8041999999999364e-05, 1.865300000000042e-05, 1.863899999999738e-05, 1.863900000000085e-05, 1.8056000000002403e-05, 1.865300000000042e-05, 1.804099999999989e-05, 1.865299999999695e-05, 1.862500000000128e-05, 1.863900000000085e-05, 1.8070000000001973e-05, 1.8612000000001183e-05, 1.863900000000085e-05, 1.866699999999999e-05, 1.868099999999956e-05, 1.862500000000128e-05, 1.866699999999999e-05, 1.865300000000042e-05, 1.865300000000042e-05, 1.862499999999781e-05, 1.865300000000042e-05]</msg>
<status status="PASS" starttime="20201115 23:01:19.088" endtime="20201115 23:01:19.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.084" endtime="20201115 23:01:19.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.093" endtime="20201115 23:01:19.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.096" endtime="20201115 23:01:19.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.095" endtime="20201115 23:01:19.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.091" endtime="20201115 23:01:19.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.728" endtime="20201115 23:01:19.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.726" endtime="20201115 23:01:19.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.725" endtime="20201115 23:01:19.117"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.120" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.128" endtime="20201115 23:01:19.143"></status>
</kw>
<msg timestamp="20201115 23:01:19.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.126" endtime="20201115 23:01:19.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.145" endtime="20201115 23:01:19.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.147" endtime="20201115 23:01:19.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.124" endtime="20201115 23:01:19.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.122" endtime="20201115 23:01:19.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.156" endtime="20201115 23:01:19.444"></status>
</kw>
<msg timestamp="20201115 23:01:19.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023988333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024008167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.155" endtime="20201115 23:01:19.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023988333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024008167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.449" endtime="20201115 23:01:19.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.457" endtime="20201115 23:01:19.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.152" endtime="20201115 23:01:19.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.151" endtime="20201115 23:01:19.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.465" level="INFO">${RESULT} = [{'time': 0.024008167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9833999999999824e-05, 'source_diff': 1.9833999999999824e-05}, {'time': 0.024033111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:19.461" endtime="20201115 23:01:19.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.478" level="INFO">${ACCURACY} = {'diff': [1.9833999999999824e-05, 1.9278000000001044e-05, 1.984699999999992e-05, 1.9263999999998005e-05, 1.984699999999992e-05, 1.9235999999998865e-05, 1.9250000000001904e-05, 1.9250000000001904e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:19.466" endtime="20201115 23:01:19.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.483" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.482" endtime="20201115 23:01:19.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.486" level="INFO">VALUE: [1.9833999999999824e-05, 1.9278000000001044e-05, 1.984699999999992e-05, 1.9263999999998005e-05, 1.984699999999992e-05, 1.9235999999998865e-05, 1.9250000000001904e-05, 1.9250000000001904e-05, 1.9249999999998435e-05, 1.9235999999998865e-05, 1.9263999999998005e-05, 1.9250000000001904e-05, 1.986099999999949e-05, 1.9264000000001474e-05, 1.987499999999906e-05, 1.984699999999992e-05, 1.986099999999949e-05, 1.9237000000001808e-05, 1.9249999999998435e-05, 1.9250000000001904e-05, 1.9249999999998435e-05, 1.9249999999998435e-05, 1.9249999999998435e-05, 1.986099999999949e-05, 1.986099999999949e-05, 1.9249999999998435e-05, 1.9250000000001904e-05, 1.9235999999998865e-05, 1.987499999999906e-05, 1.987500000000253e-05, 1.986099999999949e-05, 1.9847999999999394e-05, 1.9264000000001474e-05, 1.986099999999949e-05, 1.9250000000001904e-05, 1.9264000000001474e-05, 1.984699999999992e-05, 1.987499999999906e-05, 1.9263999999998005e-05, 1.980499999999774e-05, 1.9250000000001904e-05, 1.9194000000000155e-05, 1.9848000000002863e-05, 1.986099999999949e-05, 1.9250000000001904e-05, 1.986099999999949e-05, 1.986099999999949e-05, 1.981900000000078e-05, 1.9319999999999754e-05, 1.986099999999949e-05]</msg>
<status status="PASS" starttime="20201115 23:01:19.484" endtime="20201115 23:01:19.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.479" endtime="20201115 23:01:19.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.490" endtime="20201115 23:01:19.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.495" endtime="20201115 23:01:19.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.493" endtime="20201115 23:01:19.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.488" endtime="20201115 23:01:19.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.120" endtime="20201115 23:01:19.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.119" endtime="20201115 23:01:19.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.118" endtime="20201115 23:01:19.516"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.518" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.527" endtime="20201115 23:01:19.541"></status>
</kw>
<msg timestamp="20201115 23:01:19.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.525" endtime="20201115 23:01:19.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.543" endtime="20201115 23:01:19.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.545" endtime="20201115 23:01:19.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.522" endtime="20201115 23:01:19.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.520" endtime="20201115 23:01:19.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.555" endtime="20201115 23:01:19.841"></status>
</kw>
<msg timestamp="20201115 23:01:19.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024259403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024279264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.553" endtime="20201115 23:01:19.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024259403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024279264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.845" endtime="20201115 23:01:19.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.853" endtime="20201115 23:01:19.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.550" endtime="20201115 23:01:19.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.549" endtime="20201115 23:01:19.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.860" level="INFO">${RESULT} = [{'time': 0.024279264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.986099999999949e-05, 'source_diff': 1.986099999999949e-05}, {'time': 0.024309389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:19.857" endtime="20201115 23:01:19.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.873" level="INFO">${ACCURACY} = {'diff': [1.986099999999949e-05, 2.0458000000000975e-05, 2.106899999999856e-05, 2.0471999999997076e-05, 2.0513999999999255e-05, 2.10830000000016e-05, 1.9848000000002863e-05, 2.1084000000001074e-05, 2....</msg>
<status status="PASS" starttime="20201115 23:01:19.861" endtime="20201115 23:01:19.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.878" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.877" endtime="20201115 23:01:19.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.881" level="INFO">VALUE: [1.986099999999949e-05, 2.0458000000000975e-05, 2.106899999999856e-05, 2.0471999999997076e-05, 2.0513999999999255e-05, 2.10830000000016e-05, 1.9848000000002863e-05, 2.1084000000001074e-05, 2.045899999999698e-05, 2.1000000000000185e-05, 2.0472000000000545e-05, 1.986099999999949e-05, 2.0457999999997506e-05, 2.1055999999998465e-05, 2.0443999999997936e-05, 1.984699999999992e-05, 2.0458000000000975e-05, 2.0415999999998796e-05, 2.1014000000003225e-05, 2.106900000000203e-05, 2.1042000000002364e-05, 2.0499999999999685e-05, 2.045900000000045e-05, 2.0458000000000975e-05, 2.1069999999998035e-05, 2.105499999999899e-05, 2.041700000000174e-05, 2.044500000000088e-05, 2.106900000000203e-05, 2.0472000000000545e-05, 2.106900000000203e-05, 2.0472000000000545e-05, 2.0457999999997506e-05, 2.0458000000000975e-05, 2.106899999999856e-05, 2.03890000000026e-05, 2.047300000000002e-05, 1.987500000000253e-05, 2.0444000000001405e-05, 2.0458000000000975e-05, 2.041699999999827e-05, 2.0443999999997936e-05, 2.105499999999899e-05, 2.0472000000000545e-05, 2.0458000000000975e-05, 2.045900000000045e-05, 2.0458000000000975e-05, 2.0472000000000545e-05, 2.045900000000045e-05, 1.984699999999992e-05]</msg>
<status status="PASS" starttime="20201115 23:01:19.879" endtime="20201115 23:01:19.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.874" endtime="20201115 23:01:19.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.884" endtime="20201115 23:01:19.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.887" endtime="20201115 23:01:19.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.886" endtime="20201115 23:01:19.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.882" endtime="20201115 23:01:19.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.519" endtime="20201115 23:01:19.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.517" endtime="20201115 23:01:19.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.516" endtime="20201115 23:01:19.908"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.911" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.919" endtime="20201115 23:01:19.935"></status>
</kw>
<msg timestamp="20201115 23:01:19.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.917" endtime="20201115 23:01:19.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.936" endtime="20201115 23:01:19.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.944" endtime="20201115 23:01:19.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.915" endtime="20201115 23:01:19.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.913" endtime="20201115 23:01:19.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.953" endtime="20201115 23:01:20.236"></status>
</kw>
<msg timestamp="20201115 23:01:20.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024515736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024536819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.951" endtime="20201115 23:01:20.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024515736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024536819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.241" endtime="20201115 23:01:20.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.249" endtime="20201115 23:01:20.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.949" endtime="20201115 23:01:20.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.947" endtime="20201115 23:01:20.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.256" level="INFO">${RESULT} = [{'time': 0.024536819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.10830000000016e-05, 'source_diff': 2.10830000000016e-05}, {'time': 0.024567319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:20.253" endtime="20201115 23:01:20.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.270" level="INFO">${ACCURACY} = {'diff': [2.10830000000016e-05, 2.1679999999999616e-05, 2.1055999999998465e-05, 2.097300000000052e-05, 2.168099999999909e-05, 2.1056000000001934e-05, 2.1666000000000046e-05, 2.1666000000000046e-05, 2....</msg>
<status status="PASS" starttime="20201115 23:01:20.257" endtime="20201115 23:01:20.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.275" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.274" endtime="20201115 23:01:20.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.277" level="INFO">VALUE: [2.10830000000016e-05, 2.1679999999999616e-05, 2.1055999999998465e-05, 2.097300000000052e-05, 2.168099999999909e-05, 2.1056000000001934e-05, 2.1666000000000046e-05, 2.1666000000000046e-05, 2.170899999999823e-05, 2.105499999999899e-05, 2.166699999999952e-05, 2.165299999999995e-05, 2.17090000000017e-05, 2.166699999999952e-05, 2.106900000000203e-05, 2.166699999999952e-05, 2.1666000000000046e-05, 2.166699999999952e-05, 2.1666000000000046e-05, 2.166699999999952e-05, 2.166700000000299e-05, 2.166699999999952e-05, 2.105500000000246e-05, 2.1000000000000185e-05, 2.1070000000001504e-05, 2.166699999999952e-05, 2.163900000000038e-05, 2.166699999999952e-05, 2.1679999999999616e-05, 2.105499999999899e-05, 2.105500000000246e-05, 2.1070000000001504e-05, 2.166699999999952e-05, 2.168099999999909e-05, 2.1055999999998465e-05, 2.105499999999899e-05, 2.166699999999952e-05, 2.165299999999995e-05, 2.10830000000016e-05, 2.1679999999999616e-05, 2.165299999999995e-05, 2.168099999999909e-05, 2.162500000000081e-05, 2.166699999999952e-05, 2.104099999999942e-05, 2.165299999999995e-05, 2.1666000000000046e-05, 2.1721999999998326e-05, 2.105499999999899e-05, 2.226300000000153e-05]</msg>
<status status="PASS" starttime="20201115 23:01:20.276" endtime="20201115 23:01:20.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.271" endtime="20201115 23:01:20.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.280" endtime="20201115 23:01:20.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.284" endtime="20201115 23:01:20.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.282" endtime="20201115 23:01:20.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.279" endtime="20201115 23:01:20.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.911" endtime="20201115 23:01:20.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.909" endtime="20201115 23:01:20.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.908" endtime="20201115 23:01:20.305"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.308" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.317" endtime="20201115 23:01:20.333"></status>
</kw>
<msg timestamp="20201115 23:01:20.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.315" endtime="20201115 23:01:20.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.334" endtime="20201115 23:01:20.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.337" endtime="20201115 23:01:20.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.313" endtime="20201115 23:01:20.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.310" endtime="20201115 23:01:20.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.346" endtime="20201115 23:01:20.631"></status>
</kw>
<msg timestamp="20201115 23:01:20.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026412847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026435111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.345" endtime="20201115 23:01:20.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026412847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026435111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.635" endtime="20201115 23:01:20.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.643" endtime="20201115 23:01:20.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.342" endtime="20201115 23:01:20.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.340" endtime="20201115 23:01:20.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.650" level="INFO">${RESULT} = [{'time': 0.026435111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2264000000001005e-05, 'source_diff': 2.2264000000001005e-05}, {'time': 0.026473153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:20.647" endtime="20201115 23:01:20.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.665" level="INFO">${ACCURACY} = {'diff': [2.2264000000001005e-05, 2.286099999999902e-05, 2.2263999999997536e-05, 2.2944000000000436e-05, 2.2264000000001005e-05, 2.288900000000163e-05, 2.2861999999998495e-05, 2.287499999999859e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:01:20.651" endtime="20201115 23:01:20.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.669" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.668" endtime="20201115 23:01:20.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.672" level="INFO">VALUE: [2.2264000000001005e-05, 2.286099999999902e-05, 2.2263999999997536e-05, 2.2944000000000436e-05, 2.2264000000001005e-05, 2.288900000000163e-05, 2.2861999999998495e-05, 2.287499999999859e-05, 2.230500000000024e-05, 2.288900000000163e-05, 2.233299999999938e-05, 2.2278000000000575e-05, 2.2249999999997966e-05, 2.2292000000000145e-05, 2.2264000000001005e-05, 2.226300000000153e-05, 2.288899999999816e-05, 2.286099999999902e-05, 2.29030000000012e-05, 2.2278000000000575e-05, 2.287499999999859e-05, 2.2263999999997536e-05, 2.2262999999998062e-05, 2.286100000000249e-05, 2.22770000000011e-05, 2.29030000000012e-05, 2.286099999999902e-05, 2.2264000000001005e-05, 2.2263999999997536e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.2292000000000145e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.2250000000001435e-05, 2.2250000000001435e-05, 2.2278000000000575e-05, 2.2262999999998062e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.2249999999997966e-05, 2.2235999999998396e-05, 2.288899999999816e-05, 2.29030000000012e-05, 2.287499999999859e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.2249999999997966e-05, 2.288899999999816e-05, 2.287500000000206e-05]</msg>
<status status="PASS" starttime="20201115 23:01:20.670" endtime="20201115 23:01:20.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.666" endtime="20201115 23:01:20.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.675" endtime="20201115 23:01:20.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.678" endtime="20201115 23:01:20.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.677" endtime="20201115 23:01:20.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.673" endtime="20201115 23:01:20.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.309" endtime="20201115 23:01:20.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.307" endtime="20201115 23:01:20.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.306" endtime="20201115 23:01:20.700"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.702" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.711" endtime="20201115 23:01:20.726"></status>
</kw>
<msg timestamp="20201115 23:01:20.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.709" endtime="20201115 23:01:20.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.728" endtime="20201115 23:01:20.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.731" endtime="20201115 23:01:20.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.706" endtime="20201115 23:01:20.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.704" endtime="20201115 23:01:20.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.740" endtime="20201115 23:01:21.025"></status>
</kw>
<msg timestamp="20201115 23:01:21.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024433778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024457861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.738" endtime="20201115 23:01:21.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024433778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024457861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.029" endtime="20201115 23:01:21.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.038" endtime="20201115 23:01:21.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.735" endtime="20201115 23:01:21.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.734" endtime="20201115 23:01:21.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.044" level="INFO">${RESULT} = [{'time': 0.024457861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.408300000000113e-05, 'source_diff': 2.408300000000113e-05}, {'time': 0.024492417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:21.041" endtime="20201115 23:01:21.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.058" level="INFO">${ACCURACY} = {'diff': [2.408300000000113e-05, 2.286099999999902e-05, 2.412499999999984e-05, 2.3472000000000076e-05, 2.4027999999998856e-05, 2.288899999999816e-05, 2.3527999999998356e-05, 2.4054999999998522e-05, 2....</msg>
<status status="PASS" starttime="20201115 23:01:21.045" endtime="20201115 23:01:21.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.062" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.061" endtime="20201115 23:01:21.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.065" level="INFO">VALUE: [2.408300000000113e-05, 2.286099999999902e-05, 2.412499999999984e-05, 2.3472000000000076e-05, 2.4027999999998856e-05, 2.288899999999816e-05, 2.3527999999998356e-05, 2.4054999999998522e-05, 2.343100000000084e-05, 2.4084000000000605e-05, 2.4041999999998426e-05, 2.287500000000206e-05, 2.3500000000002685e-05, 2.3471999999996607e-05, 2.3499999999999216e-05, 2.3485999999999646e-05, 2.2901999999998257e-05, 2.290299999999773e-05, 2.408300000000113e-05, 2.4098000000000175e-05, 2.3472000000000076e-05, 2.348699999999912e-05, 2.3499999999999216e-05, 2.2847999999998925e-05, 2.293100000000034e-05, 2.4070000000001035e-05, 2.4068999999998092e-05, 2.287500000000206e-05, 2.4070000000001035e-05, 2.3472000000000076e-05, 2.344500000000041e-05, 2.4082999999997662e-05, 2.4068999999998092e-05, 2.4013999999999286e-05, 2.408300000000113e-05, 2.287499999999859e-05, 2.3472000000000076e-05, 2.345899999999998e-05, 2.3485999999999646e-05, 2.3556000000000965e-05, 2.3472000000000076e-05, 2.288899999999816e-05, 2.3472000000000076e-05, 2.3499999999999216e-05, 2.3485999999999646e-05, 2.413899999999941e-05, 2.408300000000113e-05, 2.348699999999912e-05, 2.2847999999998925e-05, 2.3457999999997037e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.063" endtime="20201115 23:01:21.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.058" endtime="20201115 23:01:21.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.068" endtime="20201115 23:01:21.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.072" endtime="20201115 23:01:21.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.070" endtime="20201115 23:01:21.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.067" endtime="20201115 23:01:21.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.703" endtime="20201115 23:01:21.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.701" endtime="20201115 23:01:21.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.700" endtime="20201115 23:01:21.093"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.095" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.103" endtime="20201115 23:01:21.120"></status>
</kw>
<msg timestamp="20201115 23:01:21.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.102" endtime="20201115 23:01:21.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.122" endtime="20201115 23:01:21.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.124" endtime="20201115 23:01:21.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.099" endtime="20201115 23:01:21.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.097" endtime="20201115 23:01:21.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.133" endtime="20201115 23:01:21.421"></status>
</kw>
<msg timestamp="20201115 23:01:21.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024260528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024285181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.132" endtime="20201115 23:01:21.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024260528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024285181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.426" endtime="20201115 23:01:21.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.434" endtime="20201115 23:01:21.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.129" endtime="20201115 23:01:21.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.127" endtime="20201115 23:01:21.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.441" level="INFO">${RESULT} = [{'time': 0.024285181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.024315542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:21.437" endtime="20201115 23:01:21.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.454" level="INFO">${ACCURACY} = {'diff': [2.465299999999948e-05, 2.468099999999862e-05, 2.408300000000113e-05, 2.4082999999997662e-05, 2.462500000000034e-05, 2.4098000000000175e-05, 2.468099999999862e-05, 2.4082999999997662e-05, 2.4...</msg>
<status status="PASS" starttime="20201115 23:01:21.442" endtime="20201115 23:01:21.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.459" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.458" endtime="20201115 23:01:21.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.462" level="INFO">VALUE: [2.465299999999948e-05, 2.468099999999862e-05, 2.408300000000113e-05, 2.4082999999997662e-05, 2.462500000000034e-05, 2.4098000000000175e-05, 2.468099999999862e-05, 2.4082999999997662e-05, 2.469499999999819e-05, 2.411100000000027e-05, 2.468100000000209e-05, 2.4096999999997232e-05, 2.466699999999905e-05, 2.468099999999862e-05, 2.408300000000113e-05, 2.4721999999997857e-05, 2.469500000000166e-05, 2.4680000000002617e-05, 2.4679999999999147e-05, 2.4083999999997135e-05, 2.4694000000002186e-05, 2.4679999999999147e-05, 2.4679999999999147e-05, 2.4084000000000605e-05, 2.4084000000000605e-05, 2.4707999999998287e-05, 2.408300000000113e-05, 2.4694000000002186e-05, 2.4084000000000605e-05, 2.406900000000156e-05, 2.468099999999862e-05, 2.4693999999998717e-05, 2.4082999999997662e-05, 2.4084000000000605e-05, 2.4679999999999147e-05, 2.4722000000001326e-05, 2.469500000000166e-05, 2.469500000000166e-05, 2.4680000000002617e-05, 2.4708000000001756e-05, 2.468100000000209e-05, 2.406900000000156e-05, 2.4722000000001326e-05, 2.40970000000007e-05, 2.408300000000113e-05, 2.4082999999997662e-05, 2.4098000000000175e-05, 2.406900000000156e-05, 2.469500000000166e-05, 2.4736000000000896e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.460" endtime="20201115 23:01:21.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.455" endtime="20201115 23:01:21.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.465" endtime="20201115 23:01:21.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.468" endtime="20201115 23:01:21.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.467" endtime="20201115 23:01:21.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.463" endtime="20201115 23:01:21.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.096" endtime="20201115 23:01:21.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.094" endtime="20201115 23:01:21.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.093" endtime="20201115 23:01:21.489"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.492" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.500" endtime="20201115 23:01:21.515"></status>
</kw>
<msg timestamp="20201115 23:01:21.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.498" endtime="20201115 23:01:21.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.517" endtime="20201115 23:01:21.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.520" endtime="20201115 23:01:21.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.496" endtime="20201115 23:01:21.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.494" endtime="20201115 23:01:21.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.529" endtime="20201115 23:01:21.814"></status>
</kw>
<msg timestamp="20201115 23:01:21.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024242347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02426825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:21.527" endtime="20201115 23:01:21.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024242347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02426825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:21.818" endtime="20201115 23:01:21.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.826" endtime="20201115 23:01:21.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.525" endtime="20201115 23:01:21.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.523" endtime="20201115 23:01:21.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.833" level="INFO">${RESULT} = [{'time': 0.02426825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.590300000000073e-05, 'source_diff': 2.590300000000073e-05}, {'time': 0.024307208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:21.830" endtime="20201115 23:01:21.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.847" level="INFO">${ACCURACY} = {'diff': [2.590300000000073e-05, 2.5930000000000397e-05, 2.590300000000073e-05, 2.5874999999998122e-05, 2.5291999999999676e-05, 2.5902000000001257e-05, 2.59170000000003e-05, 2.5250000000000966e-05, 2....</msg>
<status status="PASS" starttime="20201115 23:01:21.834" endtime="20201115 23:01:21.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.851" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.850" endtime="20201115 23:01:21.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.854" level="INFO">VALUE: [2.590300000000073e-05, 2.5930000000000397e-05, 2.590300000000073e-05, 2.5874999999998122e-05, 2.5291999999999676e-05, 2.5902000000001257e-05, 2.59170000000003e-05, 2.5250000000000966e-05, 2.5291999999999676e-05, 2.5236000000001396e-05, 2.5291999999999676e-05, 2.5278000000000106e-05, 2.59170000000003e-05, 2.5291999999999676e-05, 2.5305999999999246e-05, 2.590300000000073e-05, 2.5291999999999676e-05, 2.5291999999999676e-05, 2.590300000000073e-05, 2.5304999999999772e-05, 2.5304999999999772e-05, 2.590300000000073e-05, 2.5278000000000106e-05, 2.5264000000000536e-05, 2.588900000000116e-05, 2.59170000000003e-05, 2.5291999999999676e-05, 2.5319999999998816e-05, 2.5305999999999246e-05, 2.5278000000000106e-05, 2.5291000000000202e-05, 2.5916000000000827e-05, 2.5236000000001396e-05, 2.5972000000002576e-05, 2.5820000000002785e-05, 2.5235999999997927e-05, 2.59170000000003e-05, 2.5278000000000106e-05, 2.597299999999858e-05, 2.5291999999999676e-05, 2.5291000000000202e-05, 2.588900000000116e-05, 2.5346999999998482e-05, 2.5318999999999342e-05, 2.5278000000000106e-05, 2.5278000000000106e-05, 2.5222000000001826e-05, 2.5291999999999676e-05, 2.5292000000003145e-05, 2.590300000000073e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.852" endtime="20201115 23:01:21.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.848" endtime="20201115 23:01:21.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.857" endtime="20201115 23:01:21.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.860" endtime="20201115 23:01:21.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.859" endtime="20201115 23:01:21.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.855" endtime="20201115 23:01:21.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.492" endtime="20201115 23:01:21.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.490" endtime="20201115 23:01:21.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.490" endtime="20201115 23:01:21.881"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.884" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.892" endtime="20201115 23:01:21.908"></status>
</kw>
<msg timestamp="20201115 23:01:21.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.890" endtime="20201115 23:01:21.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.909" endtime="20201115 23:01:21.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.912" endtime="20201115 23:01:21.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.888" endtime="20201115 23:01:21.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.886" endtime="20201115 23:01:21.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.921" endtime="20201115 23:01:22.207"></status>
</kw>
<msg timestamp="20201115 23:01:22.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024900347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024926833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.920" endtime="20201115 23:01:22.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024900347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024926833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.211" endtime="20201115 23:01:22.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.220" endtime="20201115 23:01:22.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.917" endtime="20201115 23:01:22.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.915" endtime="20201115 23:01:22.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.227" level="INFO">${RESULT} = [{'time': 0.024926833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6485999999999177e-05, 'source_diff': 2.6485999999999177e-05}, {'time': 0.024968486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:22.223" endtime="20201115 23:01:22.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.241" level="INFO">${ACCURACY} = {'diff': [2.6485999999999177e-05, 2.6458000000000037e-05, 2.588900000000116e-05, 2.645899999999951e-05, 2.6499999999998747e-05, 2.6513999999998317e-05, 2.590300000000073e-05, 2.5901999999997788e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:01:22.228" endtime="20201115 23:01:22.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.246" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.245" endtime="20201115 23:01:22.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.248" level="INFO">VALUE: [2.6485999999999177e-05, 2.6458000000000037e-05, 2.588900000000116e-05, 2.645899999999951e-05, 2.6499999999998747e-05, 2.6513999999998317e-05, 2.590300000000073e-05, 2.5901999999997788e-05, 2.6513999999998317e-05, 2.6499999999998747e-05, 2.6500000000002216e-05, 2.5846999999998982e-05, 2.6513999999998317e-05, 2.6514000000001786e-05, 2.6556000000000496e-05, 2.6542000000000926e-05, 2.6513999999998317e-05, 2.7110999999999802e-05, 2.7110999999999802e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.6471999999999607e-05, 2.6485999999999177e-05, 2.6499999999998747e-05, 2.5819999999999316e-05, 2.6526999999998413e-05, 2.6499999999998747e-05, 2.648700000000212e-05, 2.590300000000073e-05, 2.6499999999998747e-05, 2.7096999999996763e-05, 2.590300000000073e-05, 2.6570000000000066e-05, 2.590299999999726e-05, 2.6499999999998747e-05, 2.588900000000116e-05, 2.7111999999999276e-05, 2.6485999999999177e-05, 2.6514000000001786e-05, 2.588900000000116e-05, 2.6514000000001786e-05, 2.7110999999999802e-05, 2.6500000000002216e-05, 2.7097000000000232e-05, 2.6499999999998747e-05, 2.7194000000001217e-05, 2.6500000000002216e-05, 2.5916000000000827e-05, 2.6499999999998747e-05, 2.59170000000003e-05]</msg>
<status status="PASS" starttime="20201115 23:01:22.247" endtime="20201115 23:01:22.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.242" endtime="20201115 23:01:22.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.251" endtime="20201115 23:01:22.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.255" endtime="20201115 23:01:22.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.253" endtime="20201115 23:01:22.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.250" endtime="20201115 23:01:22.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.884" endtime="20201115 23:01:22.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.883" endtime="20201115 23:01:22.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.882" endtime="20201115 23:01:22.276"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.278" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.287" endtime="20201115 23:01:22.304"></status>
</kw>
<msg timestamp="20201115 23:01:22.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.285" endtime="20201115 23:01:22.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.306" endtime="20201115 23:01:22.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.308" endtime="20201115 23:01:22.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.282" endtime="20201115 23:01:22.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.280" endtime="20201115 23:01:22.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.318" endtime="20201115 23:01:22.604"></status>
</kw>
<msg timestamp="20201115 23:01:22.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025221542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02524925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:22.316" endtime="20201115 23:01:22.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025221542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02524925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:22.608" endtime="20201115 23:01:22.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.616" endtime="20201115 23:01:22.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.313" endtime="20201115 23:01:22.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.312" endtime="20201115 23:01:22.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.623" level="INFO">${RESULT} = [{'time': 0.02524925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7708000000001287e-05, 'source_diff': 2.7708000000001287e-05}, {'time': 0.025282125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:22.620" endtime="20201115 23:01:22.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.636" level="INFO">${ACCURACY} = {'diff': [2.7708000000001287e-05, 2.7721999999997388e-05, 2.7097000000000232e-05, 2.7110999999999802e-05, 2.7110999999999802e-05, 2.7110999999999802e-05, 2.7790999999999233e-05, 2.719500000000069e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:22.624" endtime="20201115 23:01:22.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.641" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.640" endtime="20201115 23:01:22.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.643" level="INFO">VALUE: [2.7708000000001287e-05, 2.7721999999997388e-05, 2.7097000000000232e-05, 2.7110999999999802e-05, 2.7110999999999802e-05, 2.7110999999999802e-05, 2.7790999999999233e-05, 2.719500000000069e-05, 2.7110999999999802e-05, 2.7707999999997818e-05, 2.772300000000033e-05, 2.7721999999997388e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7097000000000232e-05, 2.7112000000002745e-05, 2.7721999999997388e-05, 2.770900000000076e-05, 2.7694000000001717e-05, 2.7707999999997818e-05, 2.7694000000001717e-05, 2.7083000000000662e-05, 2.7083000000000662e-05, 2.7068999999997623e-05, 2.7097000000000232e-05, 2.7693999999998248e-05, 2.712500000000284e-05, 2.7110999999999802e-05, 2.7707999999997818e-05, 2.770899999999729e-05, 2.7722000000000857e-05, 2.7069000000001092e-05, 2.7124999999999372e-05, 2.7722000000000857e-05, 2.7707999999997818e-05, 2.770900000000076e-05, 2.7707999999997818e-05, 2.7680000000002147e-05, 2.718100000000112e-05, 2.711100000000327e-05, 2.7722000000000857e-05, 2.770900000000076e-05, 2.7070000000000566e-05, 2.7721999999997388e-05, 2.7097000000000232e-05, 2.7777999999999137e-05, 2.7110999999999802e-05, 2.718100000000112e-05, 2.7708000000001287e-05, 2.7708000000001287e-05]</msg>
<status status="PASS" starttime="20201115 23:01:22.642" endtime="20201115 23:01:22.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.637" endtime="20201115 23:01:22.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.647" endtime="20201115 23:01:22.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.650" endtime="20201115 23:01:22.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.648" endtime="20201115 23:01:22.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.645" endtime="20201115 23:01:22.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.279" endtime="20201115 23:01:22.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.277" endtime="20201115 23:01:22.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.276" endtime="20201115 23:01:22.671"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.673" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.682" endtime="20201115 23:01:22.698"></status>
</kw>
<msg timestamp="20201115 23:01:22.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.680" endtime="20201115 23:01:22.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.699" endtime="20201115 23:01:22.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.702" endtime="20201115 23:01:22.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.677" endtime="20201115 23:01:22.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.675" endtime="20201115 23:01:22.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.711" endtime="20201115 23:01:22.998"></status>
</kw>
<msg timestamp="20201115 23:01:23.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024255861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.710" endtime="20201115 23:01:23.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024255861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.002" endtime="20201115 23:01:23.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.011" endtime="20201115 23:01:23.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.707" endtime="20201115 23:01:23.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.705" endtime="20201115 23:01:23.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.018" level="INFO">${RESULT} = [{'time': 0.024255861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8318999999998873e-05, 'source_diff': 2.8318999999998873e-05}, {'time': 0.024292847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:23.014" endtime="20201115 23:01:23.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.031" level="INFO">${ACCURACY} = {'diff': [2.8318999999998873e-05, 2.8318999999998873e-05, 2.8916999999999832e-05, 2.8916999999999832e-05, 2.8972000000002107e-05, 2.8916000000000358e-05, 2.8306000000002246e-05, 2.8304999999999303e-05...</msg>
<status status="PASS" starttime="20201115 23:01:23.019" endtime="20201115 23:01:23.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.036" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.035" endtime="20201115 23:01:23.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.038" level="INFO">VALUE: [2.8318999999998873e-05, 2.8318999999998873e-05, 2.8916999999999832e-05, 2.8916999999999832e-05, 2.8972000000002107e-05, 2.8916000000000358e-05, 2.8306000000002246e-05, 2.8304999999999303e-05, 2.89309999999994e-05, 2.8361000000001052e-05, 2.8929999999999928e-05, 2.8319999999998346e-05, 2.8290999999999733e-05, 2.7722000000000857e-05, 2.8304999999999303e-05, 2.8304999999999303e-05, 2.7721999999997388e-05, 2.89309999999994e-05, 2.8319000000002342e-05, 2.8916999999999832e-05, 2.8319999999998346e-05, 2.8320000000001816e-05, 2.8916999999999832e-05, 2.8320000000001816e-05, 2.8320000000001816e-05, 2.893100000000287e-05, 2.8361000000001052e-05, 2.8374999999997152e-05, 2.8334000000001386e-05, 2.8916999999999832e-05, 2.8318999999998873e-05, 2.8916999999999832e-05, 2.8903000000000262e-05, 2.8291999999999207e-05, 2.8333000000001912e-05, 2.8320000000001816e-05, 2.8334000000001386e-05, 2.8318999999998873e-05, 2.8916999999999832e-05, 2.8319999999998346e-05, 2.8318999999998873e-05, 2.8333000000001912e-05, 2.8943999999999498e-05, 2.8250000000000497e-05, 2.8304999999999303e-05, 2.8319999999998346e-05, 2.8903000000000262e-05, 2.8304999999999303e-05, 2.8290999999999733e-05, 2.8304999999999303e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.037" endtime="20201115 23:01:23.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.032" endtime="20201115 23:01:23.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.041" endtime="20201115 23:01:23.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.045" endtime="20201115 23:01:23.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.043" endtime="20201115 23:01:23.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.040" endtime="20201115 23:01:23.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.674" endtime="20201115 23:01:23.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.672" endtime="20201115 23:01:23.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.671" endtime="20201115 23:01:23.066"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.068" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.077" endtime="20201115 23:01:23.093"></status>
</kw>
<msg timestamp="20201115 23:01:23.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.075" endtime="20201115 23:01:23.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.094" endtime="20201115 23:01:23.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.097" endtime="20201115 23:01:23.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.073" endtime="20201115 23:01:23.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.070" endtime="20201115 23:01:23.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.106" endtime="20201115 23:01:23.392"></status>
</kw>
<msg timestamp="20201115 23:01:23.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024600403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024629319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.104" endtime="20201115 23:01:23.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024600403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024629319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.396" endtime="20201115 23:01:23.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.404" endtime="20201115 23:01:23.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.102" endtime="20201115 23:01:23.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.100" endtime="20201115 23:01:23.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.411" level="INFO">${RESULT} = [{'time': 0.024629319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8916000000000358e-05, 'source_diff': 2.8916000000000358e-05}, {'time': 0.024672361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:23.408" endtime="20201115 23:01:23.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.425" level="INFO">${ACCURACY} = {'diff': [2.8916000000000358e-05, 2.9542000000000457e-05, 3.0125000000002372e-05, 2.9542000000000457e-05, 2.9527000000001413e-05, 2.9542000000000457e-05, 2.8916999999999832e-05, 3.0125000000002372e-05...</msg>
<status status="PASS" starttime="20201115 23:01:23.412" endtime="20201115 23:01:23.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.429" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.428" endtime="20201115 23:01:23.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.432" level="INFO">VALUE: [2.8916000000000358e-05, 2.9542000000000457e-05, 3.0125000000002372e-05, 2.9542000000000457e-05, 2.9527000000001413e-05, 2.9542000000000457e-05, 2.8916999999999832e-05, 3.0125000000002372e-05, 2.8929999999999928e-05, 2.8916999999999832e-05, 2.8874999999997653e-05, 3.0056000000000527e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9513999999997848e-05, 2.9499999999998278e-05, 2.9471999999999138e-05, 2.9527999999997417e-05, 2.9528000000000887e-05, 2.9499999999998278e-05, 3.0110999999999333e-05, 3.0096999999999763e-05, 2.9514000000001317e-05, 2.9527999999997417e-05, 2.9542000000000457e-05, 2.9527999999997417e-05, 3.0110999999999333e-05, 2.8832999999998943e-05, 2.8903000000000262e-05, 2.9527000000001413e-05, 3.0110999999999333e-05, 2.9513999999997848e-05, 2.9528000000000887e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 2.8929999999999928e-05, 2.9528000000000887e-05, 2.9513999999997848e-05, 2.8916000000000358e-05, 2.9528000000000887e-05, 2.9513999999997848e-05, 2.9541999999996987e-05, 2.8916000000000358e-05, 2.89309999999994e-05, 2.9486000000002177e-05, 2.89309999999994e-05, 2.8916999999999832e-05, 2.9528000000000887e-05, 2.9527999999997417e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.430" endtime="20201115 23:01:23.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.426" endtime="20201115 23:01:23.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.435" endtime="20201115 23:01:23.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.439" endtime="20201115 23:01:23.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.437" endtime="20201115 23:01:23.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.433" endtime="20201115 23:01:23.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.069" endtime="20201115 23:01:23.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.067" endtime="20201115 23:01:23.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.066" endtime="20201115 23:01:23.460"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.462" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.471" endtime="20201115 23:01:23.488"></status>
</kw>
<msg timestamp="20201115 23:01:23.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.469" endtime="20201115 23:01:23.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.489" endtime="20201115 23:01:23.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.492" endtime="20201115 23:01:23.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.466" endtime="20201115 23:01:23.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.464" endtime="20201115 23:01:23.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.501" endtime="20201115 23:01:23.786"></status>
</kw>
<msg timestamp="20201115 23:01:23.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025596986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025627708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.499" endtime="20201115 23:01:23.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025596986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025627708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.791" endtime="20201115 23:01:23.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.799" endtime="20201115 23:01:23.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.497" endtime="20201115 23:01:23.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.495" endtime="20201115 23:01:23.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.806" level="INFO">${RESULT} = [{'time': 0.025627708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.072200000000039e-05, 'source_diff': 3.072200000000039e-05}, {'time': 0.025663764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:23.802" endtime="20201115 23:01:23.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.820" level="INFO">${ACCURACY} = {'diff': [3.072200000000039e-05, 3.072199999999692e-05, 3.0055000000001053e-05, 3.072200000000039e-05, 3.0110999999999333e-05, 3.0124999999998903e-05, 3.0139000000001942e-05, 3.0124999999998903e-05, 3...</msg>
<status status="PASS" starttime="20201115 23:01:23.807" endtime="20201115 23:01:23.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.825" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.824" endtime="20201115 23:01:23.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.827" level="INFO">VALUE: [3.072200000000039e-05, 3.072199999999692e-05, 3.0055000000001053e-05, 3.072200000000039e-05, 3.0110999999999333e-05, 3.0124999999998903e-05, 3.0139000000001942e-05, 3.0124999999998903e-05, 3.073699999999943e-05, 3.0124999999998903e-05, 3.0110999999999333e-05, 3.072200000000039e-05, 3.0139000000001942e-05, 3.0083999999999667e-05, 3.0125000000002372e-05, 3.072200000000039e-05, 3.072200000000039e-05, 3.0124999999998903e-05, 3.0124999999998903e-05, 3.068100000000115e-05, 3.0125000000002372e-05, 3.0139000000001942e-05, 3.0139000000001942e-05, 3.072299999999986e-05, 3.0138999999998473e-05, 3.070800000000082e-05, 3.0125000000002372e-05, 3.0139000000001942e-05, 3.074999999999953e-05, 3.072200000000039e-05, 3.072299999999986e-05, 3.072299999999986e-05, 3.072200000000039e-05, 3.072299999999986e-05, 3.073599999999996e-05, 3.073599999999996e-05, 3.0125000000002372e-05, 3.072200000000039e-05, 3.073599999999996e-05, 3.0138999999998473e-05, 3.070800000000082e-05, 3.015199999999857e-05, 3.073599999999996e-05, 3.0110999999999333e-05, 3.073599999999996e-05, 3.0138999999998473e-05, 3.0139000000001942e-05, 3.080600000000128e-05, 3.0096999999999763e-05, 3.0124999999998903e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.826" endtime="20201115 23:01:23.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.821" endtime="20201115 23:01:23.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.831" endtime="20201115 23:01:23.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.834" endtime="20201115 23:01:23.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.833" endtime="20201115 23:01:23.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.829" endtime="20201115 23:01:23.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.463" endtime="20201115 23:01:23.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.461" endtime="20201115 23:01:23.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.460" endtime="20201115 23:01:23.856"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.858" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.866" endtime="20201115 23:01:23.883"></status>
</kw>
<msg timestamp="20201115 23:01:23.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.864" endtime="20201115 23:01:23.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.884" endtime="20201115 23:01:23.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.887" endtime="20201115 23:01:23.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.862" endtime="20201115 23:01:23.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.860" endtime="20201115 23:01:23.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.896" endtime="20201115 23:01:24.182"></status>
</kw>
<msg timestamp="20201115 23:01:24.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02431125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024342583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:23.894" endtime="20201115 23:01:24.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02431125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024342583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:24.186" endtime="20201115 23:01:24.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.194" endtime="20201115 23:01:24.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.892" endtime="20201115 23:01:24.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.890" endtime="20201115 23:01:24.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.201" level="INFO">${RESULT} = [{'time': 0.024342583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.133300000000144e-05, 'source_diff': 3.133300000000144e-05}, {'time': 0.024379167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:24.198" endtime="20201115 23:01:24.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.214" level="INFO">${ACCURACY} = {'diff': [3.133300000000144e-05, 3.074999999999953e-05, 3.191599999999989e-05, 3.1332999999997974e-05, 3.129199999999874e-05, 3.068099999999768e-05, 3.140299999999929e-05, 3.134799999999702e-05, 3.193...</msg>
<status status="PASS" starttime="20201115 23:01:24.202" endtime="20201115 23:01:24.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.219" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.218" endtime="20201115 23:01:24.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.222" level="INFO">VALUE: [3.133300000000144e-05, 3.074999999999953e-05, 3.191599999999989e-05, 3.1332999999997974e-05, 3.129199999999874e-05, 3.068099999999768e-05, 3.140299999999929e-05, 3.134799999999702e-05, 3.193099999999893e-05, 3.192999999999946e-05, 3.1332999999997974e-05, 3.193099999999893e-05, 3.134700000000101e-05, 3.194399999999903e-05, 3.1304999999998834e-05, 3.131900000000187e-05, 3.126400000000307e-05, 3.134700000000101e-05, 3.134700000000101e-05, 3.133400000000092e-05, 3.19310000000024e-05, 3.136100000000058e-05, 3.195800000000207e-05, 3.194399999999903e-05, 3.133400000000092e-05, 3.194500000000197e-05, 3.1332999999997974e-05, 3.1304999999998834e-05, 3.194399999999903e-05, 3.19310000000024e-05, 3.134700000000101e-05, 3.19579999999986e-05, 3.193099999999893e-05, 3.1362000000000056e-05, 3.133300000000144e-05, 3.1332999999997974e-05, 3.1348000000000487e-05, 3.195800000000207e-05, 3.133300000000144e-05, 3.132000000000135e-05, 3.19449999999985e-05, 3.133300000000144e-05, 3.136100000000058e-05, 3.132000000000135e-05, 3.1346999999997543e-05, 3.1304999999998834e-05, 3.1348000000000487e-05, 3.192999999999946e-05, 3.130599999999831e-05, 3.1332999999997974e-05]</msg>
<status status="PASS" starttime="20201115 23:01:24.220" endtime="20201115 23:01:24.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.215" endtime="20201115 23:01:24.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.225" endtime="20201115 23:01:24.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.229" endtime="20201115 23:01:24.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.227" endtime="20201115 23:01:24.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.224" endtime="20201115 23:01:24.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.858" endtime="20201115 23:01:24.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.857" endtime="20201115 23:01:24.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.856" endtime="20201115 23:01:24.250"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.252" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.260" endtime="20201115 23:01:24.277"></status>
</kw>
<msg timestamp="20201115 23:01:24.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.259" endtime="20201115 23:01:24.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.278" endtime="20201115 23:01:24.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.281" endtime="20201115 23:01:24.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.256" endtime="20201115 23:01:24.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.254" endtime="20201115 23:01:24.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.290" endtime="20201115 23:01:24.577"></status>
</kw>
<msg timestamp="20201115 23:01:24.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024105278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02413725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:24.288" endtime="20201115 23:01:24.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024105278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02413725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:24.581" endtime="20201115 23:01:24.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.589" endtime="20201115 23:01:24.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.286" endtime="20201115 23:01:24.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.284" endtime="20201115 23:01:24.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.596" level="INFO">${RESULT} = [{'time': 0.02413725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.197199999999817e-05, 'source_diff': 3.197199999999817e-05}, {'time': 0.024177153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:24.593" endtime="20201115 23:01:24.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.610" level="INFO">${ACCURACY} = {'diff': [3.197199999999817e-05, 3.193099999999893e-05, 3.19440000000025e-05, 3.195900000000154e-05, 3.254199999999999e-05, 3.248599999999824e-05, 3.2555000000000084e-05, 3.2582999999999224e-05, 3.254...</msg>
<status status="PASS" starttime="20201115 23:01:24.597" endtime="20201115 23:01:24.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.614" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.613" endtime="20201115 23:01:24.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.617" level="INFO">VALUE: [3.197199999999817e-05, 3.193099999999893e-05, 3.19440000000025e-05, 3.195900000000154e-05, 3.254199999999999e-05, 3.248599999999824e-05, 3.2555000000000084e-05, 3.2582999999999224e-05, 3.2541000000000514e-05, 3.254199999999999e-05, 3.2555000000000084e-05, 3.316700000000061e-05, 3.247199999999867e-05, 3.2541000000000514e-05, 3.254199999999999e-05, 3.19440000000025e-05, 3.254199999999999e-05, 3.251400000000085e-05, 3.254199999999999e-05, 3.259700000000226e-05, 3.191599999999989e-05, 3.2582999999999224e-05, 3.252800000000042e-05, 3.254199999999999e-05, 3.197199999999817e-05, 3.3138999999998e-05, 3.259700000000226e-05, 3.316700000000061e-05, 3.254199999999999e-05, 3.255599999999956e-05, 3.19449999999985e-05, 3.191699999999936e-05, 3.187500000000065e-05, 3.254199999999999e-05, 3.252800000000042e-05, 3.255599999999956e-05, 3.2555000000000084e-05, 3.2568999999999654e-05, 3.194399999999903e-05, 3.193099999999893e-05, 3.2541000000000514e-05, 3.192999999999946e-05, 3.251400000000085e-05, 3.254199999999999e-05, 3.3124999999998433e-05, 3.254199999999999e-05, 3.250000000000128e-05, 3.2541000000000514e-05, 3.255599999999956e-05, 3.255599999999956e-05]</msg>
<status status="PASS" starttime="20201115 23:01:24.615" endtime="20201115 23:01:24.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.611" endtime="20201115 23:01:24.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.620" endtime="20201115 23:01:24.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.624" endtime="20201115 23:01:24.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.622" endtime="20201115 23:01:24.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.618" endtime="20201115 23:01:24.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.253" endtime="20201115 23:01:24.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.251" endtime="20201115 23:01:24.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.250" endtime="20201115 23:01:24.645"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.647" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.655" endtime="20201115 23:01:24.672"></status>
</kw>
<msg timestamp="20201115 23:01:24.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.654" endtime="20201115 23:01:24.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.673" endtime="20201115 23:01:24.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.676" endtime="20201115 23:01:24.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.651" endtime="20201115 23:01:24.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.649" endtime="20201115 23:01:24.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.685" endtime="20201115 23:01:24.970"></status>
</kw>
<msg timestamp="20201115 23:01:24.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024497847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024536375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.683" endtime="20201115 23:01:24.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024497847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024536375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.974" endtime="20201115 23:01:24.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.990" endtime="20201115 23:01:24.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.681" endtime="20201115 23:01:24.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.679" endtime="20201115 23:01:24.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.996" level="INFO">${RESULT} = [{'time': 0.024536375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.852799999999948e-05, 'source_diff': 3.852799999999948e-05}, {'time': 0.024588375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:24.993" endtime="20201115 23:01:24.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.010" level="INFO">${ACCURACY} = {'diff': [3.852799999999948e-05, 3.895799999999866e-05, 3.87919999999993e-05, 3.8152999999999104e-05, 3.8611000000000895e-05, 3.827799999999923e-05, 3.8209000000000853e-05, 3.8124999999999964e-05, 3.8...</msg>
<status status="PASS" starttime="20201115 23:01:24.997" endtime="20201115 23:01:25.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.014" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.013" endtime="20201115 23:01:25.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.017" level="INFO">VALUE: [3.852799999999948e-05, 3.895799999999866e-05, 3.87919999999993e-05, 3.8152999999999104e-05, 3.8611000000000895e-05, 3.827799999999923e-05, 3.8209000000000853e-05, 3.8124999999999964e-05, 3.827799999999923e-05, 3.805600000000159e-05, 3.804200000000202e-05, 3.8555000000002615e-05, 3.8361000000000645e-05, 3.8596999999997855e-05, 3.845799999999816e-05, 3.8790999999999826e-05, 3.851399999999991e-05, 3.870799999999841e-05, 3.8625000000000465e-05, 3.845799999999816e-05, 3.8124999999999964e-05, 3.8652999999999604e-05, 3.845799999999816e-05, 3.8375000000000214e-05, 3.872199999999798e-05, 3.87780000000032e-05, 3.8139000000003004e-05, 3.879200000000277e-05, 3.8874999999997245e-05, 3.811199999999987e-05, 3.8652999999999604e-05, 3.895799999999866e-05, 3.894400000000256e-05, 3.8804999999999396e-05, 3.8375000000000214e-05, 3.875000000000059e-05, 3.8875000000000715e-05, 3.8194999999997814e-05, 3.8625000000000465e-05, 3.89720000000017e-05, 3.895800000000213e-05, 3.8430999999998494e-05, 3.89720000000017e-05, 3.8138999999999534e-05, 3.850000000000034e-05, 3.829200000000227e-05, 3.8722999999997454e-05, 3.8625000000000465e-05, 3.879200000000277e-05, 3.8361000000000645e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.015" endtime="20201115 23:01:25.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.011" endtime="20201115 23:01:25.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.020" endtime="20201115 23:01:25.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.024" endtime="20201115 23:01:25.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.022" endtime="20201115 23:01:25.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.018" endtime="20201115 23:01:25.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.648" endtime="20201115 23:01:25.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.646" endtime="20201115 23:01:25.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.645" endtime="20201115 23:01:25.045"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.047" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.055" endtime="20201115 23:01:25.073"></status>
</kw>
<msg timestamp="20201115 23:01:25.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.054" endtime="20201115 23:01:25.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.075" endtime="20201115 23:01:25.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.077" endtime="20201115 23:01:25.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.051" endtime="20201115 23:01:25.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.049" endtime="20201115 23:01:25.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.087" endtime="20201115 23:01:25.373"></status>
</kw>
<msg timestamp="20201115 23:01:25.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024963514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.084" endtime="20201115 23:01:25.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024963514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.377" endtime="20201115 23:01:25.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.385" endtime="20201115 23:01:25.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.082" endtime="20201115 23:01:25.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.080" endtime="20201115 23:01:25.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.392" level="INFO">${RESULT} = [{'time': 0.025002569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9054999999999646e-05, 'source_diff': 3.9054999999999646e-05}, {'time': 0.025057542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:25.389" endtime="20201115 23:01:25.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.407" level="INFO">${ACCURACY} = {'diff': [3.9054999999999646e-05, 3.9610999999998425e-05, 3.9805000000000396e-05, 3.9209000000001853e-05, 3.9776999999997786e-05, 3.9054999999999646e-05, 3.9568999999999716e-05, 3.920800000000238e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:25.393" endtime="20201115 23:01:25.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.411" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.410" endtime="20201115 23:01:25.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.414" level="INFO">VALUE: [3.9054999999999646e-05, 3.9610999999998425e-05, 3.9805000000000396e-05, 3.9209000000001853e-05, 3.9776999999997786e-05, 3.9054999999999646e-05, 3.9568999999999716e-05, 3.920800000000238e-05, 3.997199999999923e-05, 3.9791000000000826e-05, 3.906999999999869e-05, 3.9375000000001215e-05, 3.9653000000000604e-05, 3.92919999999998e-05, 3.902799999999998e-05, 3.954200000000005e-05, 3.920800000000238e-05, 3.97920000000003e-05, 3.902799999999998e-05, 3.904200000000302e-05, 3.901400000000041e-05, 3.900000000000084e-05, 3.954200000000005e-05, 3.9541000000000576e-05, 3.9082999999998785e-05, 3.972200000000245e-05, 3.9290999999996856e-05, 3.9347000000002075e-05, 3.9639000000001035e-05, 3.995799999999966e-05, 3.92919999999998e-05, 3.922199999999848e-05, 3.995799999999966e-05, 3.9832999999999535e-05, 3.9875000000001715e-05, 3.945799999999916e-05, 3.9403000000000354e-05, 3.9972999999998704e-05, 3.9459000000002104e-05, 3.975000000000159e-05, 3.977800000000073e-05, 3.926400000000066e-05, 3.9554999999996676e-05, 3.970799999999941e-05, 3.9582999999999285e-05, 3.9805000000000396e-05, 3.9902999999997385e-05, 3.9625000000001465e-05, 3.945799999999916e-05, 3.930599999999937e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.412" endtime="20201115 23:01:25.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.408" endtime="20201115 23:01:25.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.417" endtime="20201115 23:01:25.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.420" endtime="20201115 23:01:25.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.419" endtime="20201115 23:01:25.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.415" endtime="20201115 23:01:25.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.048" endtime="20201115 23:01:25.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.046" endtime="20201115 23:01:25.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.045" endtime="20201115 23:01:25.442"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.444" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.452" endtime="20201115 23:01:25.470"></status>
</kw>
<msg timestamp="20201115 23:01:25.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.451" endtime="20201115 23:01:25.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.471" endtime="20201115 23:01:25.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.474" endtime="20201115 23:01:25.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.448" endtime="20201115 23:01:25.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.446" endtime="20201115 23:01:25.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.483" endtime="20201115 23:01:25.768"></status>
</kw>
<msg timestamp="20201115 23:01:25.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024468819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024508944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.482" endtime="20201115 23:01:25.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024468819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024508944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.773" endtime="20201115 23:01:25.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.781" endtime="20201115 23:01:25.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.479" endtime="20201115 23:01:25.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.477" endtime="20201115 23:01:25.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.788" level="INFO">${RESULT} = [{'time': 0.024508944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0125000000001965e-05, 'source_diff': 4.0125000000001965e-05}, {'time': 0.024568944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:25.784" endtime="20201115 23:01:25.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.801" level="INFO">${ACCURACY} = {'diff': [4.0125000000001965e-05, 4.0624999999998995e-05, 4.0360999999999175e-05, 4.0874999999999245e-05, 4.097199999999676e-05, 4.0805000000001396e-05, 4.0124999999998495e-05, 4.051399999999844e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:25.789" endtime="20201115 23:01:25.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.806" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.805" endtime="20201115 23:01:25.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.808" level="INFO">VALUE: [4.0125000000001965e-05, 4.0624999999998995e-05, 4.0360999999999175e-05, 4.0874999999999245e-05, 4.097199999999676e-05, 4.0805000000001396e-05, 4.0124999999998495e-05, 4.051399999999844e-05, 4.0055000000000646e-05, 4.004200000000055e-05, 4.000000000000184e-05, 4.022199999999948e-05, 4.0139000000001535e-05, 4.0445000000000064e-05, 4.0624999999998995e-05, 4.0959000000000134e-05, 4.0625000000002465e-05, 4.0945000000000564e-05, 4.0945000000000564e-05, 4.0347000000003075e-05, 4.0208999999999384e-05, 4.0819000000000966e-05, 4.0041000000001076e-05, 4.0041000000001076e-05, 4.020799999999991e-05, 4.045799999999669e-05, 4.077799999999826e-05, 4.072199999999998e-05, 4.079199999999783e-05, 4.054200000000105e-05, 4.004200000000055e-05, 4.022199999999948e-05, 4.072199999999998e-05, 4.074999999999912e-05, 4.0931000000000994e-05, 4.0138999999998065e-05, 4.097200000000023e-05, 4.04859999999993e-05, 4.0458999999999634e-05, 4.055599999999715e-05, 4.097200000000023e-05, 4.0638999999998565e-05, 4.095800000000066e-05, 4.0319000000000466e-05, 4.0069000000000216e-05, 4.0041000000001076e-05, 4.052799999999801e-05, 4.0860999999999675e-05, 4.097200000000023e-05, 4.0125000000001965e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.807" endtime="20201115 23:01:25.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.802" endtime="20201115 23:01:25.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.811" endtime="20201115 23:01:25.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.815" endtime="20201115 23:01:25.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.813" endtime="20201115 23:01:25.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.810" endtime="20201115 23:01:25.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.445" endtime="20201115 23:01:25.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.443" endtime="20201115 23:01:25.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.442" endtime="20201115 23:01:25.836"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.838" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.847" endtime="20201115 23:01:25.863"></status>
</kw>
<msg timestamp="20201115 23:01:25.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.845" endtime="20201115 23:01:25.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.865" endtime="20201115 23:01:25.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.868" endtime="20201115 23:01:25.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.843" endtime="20201115 23:01:25.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.840" endtime="20201115 23:01:25.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.877" endtime="20201115 23:01:26.162"></status>
</kw>
<msg timestamp="20201115 23:01:26.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02457425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024615778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:25.875" endtime="20201115 23:01:26.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02457425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024615778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:26.166" endtime="20201115 23:01:26.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.175" endtime="20201115 23:01:26.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.873" endtime="20201115 23:01:26.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.871" endtime="20201115 23:01:26.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.181" level="INFO">${RESULT} = [{'time': 0.024615778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152800000000248e-05, 'source_diff': 4.152800000000248e-05}, {'time': 0.024670778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:26.178" endtime="20201115 23:01:26.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.195" level="INFO">${ACCURACY} = {'diff': [4.152800000000248e-05, 4.1624999999999995e-05, 4.1888999999999815e-05, 4.179199999999883e-05, 4.1236999999999524e-05, 4.1959000000001134e-05, 4.127799999999876e-05, 4.1374999999999745e-05, 4...</msg>
<status status="PASS" starttime="20201115 23:01:26.182" endtime="20201115 23:01:26.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.199" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.198" endtime="20201115 23:01:26.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.202" level="INFO">VALUE: [4.152800000000248e-05, 4.1624999999999995e-05, 4.1888999999999815e-05, 4.179199999999883e-05, 4.1236999999999524e-05, 4.1959000000001134e-05, 4.127799999999876e-05, 4.1374999999999745e-05, 4.1624999999999995e-05, 4.195799999999819e-05, 4.1790999999999356e-05, 4.1541000000002576e-05, 4.1041000000002076e-05, 4.1847000000001106e-05, 4.195799999999819e-05, 4.177799999999926e-05, 4.104200000000155e-05, 4.1195000000000814e-05, 4.1611000000000425e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.1959000000001134e-05, 4.1611000000000425e-05, 4.18059999999984e-05, 4.152799999999901e-05, 4.1624999999999995e-05, 4.1540999999999106e-05, 4.122200000000048e-05, 4.1110999999999925e-05, 4.1166999999998205e-05, 4.141599999999898e-05, 4.1638999999999565e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.179199999999883e-05, 4.104200000000155e-05, 4.120800000000091e-05, 4.1624999999999995e-05, 4.12920000000018e-05, 4.194400000000209e-05, 4.127799999999876e-05, 4.1723000000000454e-05, 4.1110999999999925e-05, 4.165199999999966e-05, 4.1124999999999495e-05, 4.1818999999998496e-05, 4.11799999999983e-05, 4.176400000000316e-05, 4.169399999999837e-05, 4.147200000000073e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.200" endtime="20201115 23:01:26.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.196" endtime="20201115 23:01:26.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.205" endtime="20201115 23:01:26.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.208" endtime="20201115 23:01:26.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.207" endtime="20201115 23:01:26.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.203" endtime="20201115 23:01:26.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.839" endtime="20201115 23:01:26.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.837" endtime="20201115 23:01:26.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.836" endtime="20201115 23:01:26.230"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.232" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.240" endtime="20201115 23:01:26.257"></status>
</kw>
<msg timestamp="20201115 23:01:26.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.239" endtime="20201115 23:01:26.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.259" endtime="20201115 23:01:26.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.261" endtime="20201115 23:01:26.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.236" endtime="20201115 23:01:26.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.234" endtime="20201115 23:01:26.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.270" endtime="20201115 23:01:26.557"></status>
</kw>
<msg timestamp="20201115 23:01:26.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024253694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024295708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.269" endtime="20201115 23:01:26.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024253694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024295708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.561" endtime="20201115 23:01:26.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.570" endtime="20201115 23:01:26.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.266" endtime="20201115 23:01:26.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.264" endtime="20201115 23:01:26.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.576" level="INFO">${RESULT} = [{'time': 0.024295708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.201399999999994e-05, 'source_diff': 4.201399999999994e-05}, {'time': 0.02434975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:26.573" endtime="20201115 23:01:26.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.590" level="INFO">${ACCURACY} = {'diff': [4.201399999999994e-05, 4.2152999999999635e-05, 4.2791000000000357e-05, 4.220799999999844e-05, 4.2903000000000385e-05, 4.23059999999989e-05, 4.2375000000000745e-05, 4.279199999999983e-05, 4.2...</msg>
<status status="PASS" starttime="20201115 23:01:26.577" endtime="20201115 23:01:26.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.594" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.593" endtime="20201115 23:01:26.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.597" level="INFO">VALUE: [4.201399999999994e-05, 4.2152999999999635e-05, 4.2791000000000357e-05, 4.220799999999844e-05, 4.2903000000000385e-05, 4.23059999999989e-05, 4.2375000000000745e-05, 4.279199999999983e-05, 4.202800000000298e-05, 4.2389000000000315e-05, 4.2610999999997956e-05, 4.216599999999973e-05, 4.2959000000002134e-05, 4.2945000000002564e-05, 4.279199999999983e-05, 4.2527000000000537e-05, 4.270800000000241e-05, 4.2610999999997956e-05, 4.2305000000002896e-05, 4.2916999999999955e-05, 4.2347000000001606e-05, 4.2374999999997276e-05, 4.2139000000000065e-05, 4.2583000000002286e-05, 4.2625000000000995e-05, 4.2124999999997026e-05, 4.231999999999847e-05, 4.200000000000037e-05, 4.2695000000002314e-05, 4.2959000000002134e-05, 4.2458999999998165e-05, 4.28059999999994e-05, 4.272199999999851e-05, 4.2818999999999496e-05, 4.2374999999997276e-05, 4.297199999999876e-05, 4.2638999999997096e-05, 4.2804999999999926e-05, 4.2875000000001245e-05, 4.279199999999983e-05, 4.252800000000001e-05, 4.270800000000241e-05, 4.247200000000173e-05, 4.28059999999994e-05, 4.2541000000000107e-05, 4.272200000000198e-05, 4.24860000000013e-05, 4.2361000000001175e-05, 4.252800000000001e-05, 4.293000000000005e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.595" endtime="20201115 23:01:26.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.591" endtime="20201115 23:01:26.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.600" endtime="20201115 23:01:26.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.604" endtime="20201115 23:01:26.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.602" endtime="20201115 23:01:26.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.599" endtime="20201115 23:01:26.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.233" endtime="20201115 23:01:26.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.231" endtime="20201115 23:01:26.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.230" endtime="20201115 23:01:26.625"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.627" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.636" endtime="20201115 23:01:26.654"></status>
</kw>
<msg timestamp="20201115 23:01:26.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.634" endtime="20201115 23:01:26.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.656" endtime="20201115 23:01:26.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.658" endtime="20201115 23:01:26.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.631" endtime="20201115 23:01:26.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.629" endtime="20201115 23:01:26.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.667" endtime="20201115 23:01:26.954"></status>
</kw>
<msg timestamp="20201115 23:01:26.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025310306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025353611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.666" endtime="20201115 23:01:26.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025310306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025353611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.958" endtime="20201115 23:01:26.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.966" endtime="20201115 23:01:26.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.663" endtime="20201115 23:01:26.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.661" endtime="20201115 23:01:26.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.973" level="INFO">${RESULT} = [{'time': 0.025353611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3305000000000426e-05, 'source_diff': 4.3305000000000426e-05}, {'time': 0.025416569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:26.970" endtime="20201115 23:01:26.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.988" level="INFO">${ACCURACY} = {'diff': [4.3305000000000426e-05, 4.3374999999998276e-05, 4.379099999999789e-05, 4.369400000000037e-05, 4.3417000000000455e-05, 4.3305000000000426e-05, 4.355600000000015e-05, 4.372200000000298e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:01:26.974" endtime="20201115 23:01:26.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.993" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.992" endtime="20201115 23:01:26.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.995" level="INFO">VALUE: [4.3305000000000426e-05, 4.3374999999998276e-05, 4.379099999999789e-05, 4.369400000000037e-05, 4.3417000000000455e-05, 4.3305000000000426e-05, 4.355600000000015e-05, 4.372200000000298e-05, 4.3111000000001926e-05, 4.345799999999969e-05, 4.3624999999998526e-05, 4.3972999999999235e-05, 4.329200000000033e-05, 4.305600000000312e-05, 4.3874999999998776e-05, 4.3819000000000496e-05, 4.343000000000055e-05, 4.3305000000000426e-05, 4.3041000000000607e-05, 4.319399999999987e-05, 4.3110999999998456e-05, 4.379100000000136e-05, 4.370799999999994e-05, 4.3694999999999845e-05, 4.379200000000083e-05, 4.3346999999999136e-05, 4.329200000000033e-05, 4.3374999999998276e-05, 4.33059999999999e-05, 4.351399999999797e-05, 4.354200000000058e-05, 4.3902999999997916e-05, 4.379199999999736e-05, 4.3068999999999746e-05, 4.29999999999979e-05, 4.388800000000234e-05, 4.3318999999999996e-05, 4.3068999999999746e-05, 4.325000000000162e-05, 4.325000000000162e-05, 4.372199999999951e-05, 4.3180999999999775e-05, 4.397199999999976e-05, 4.331999999999947e-05, 4.352800000000101e-05, 4.319399999999987e-05, 4.33059999999999e-05, 4.3403000000000885e-05, 4.3638999999998096e-05, 4.329200000000033e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.994" endtime="20201115 23:01:26.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.989" endtime="20201115 23:01:26.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.999" endtime="20201115 23:01:27.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.002" endtime="20201115 23:01:27.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.001" endtime="20201115 23:01:27.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.997" endtime="20201115 23:01:27.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.628" endtime="20201115 23:01:27.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.626" endtime="20201115 23:01:27.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.625" endtime="20201115 23:01:27.023"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.026" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.034" endtime="20201115 23:01:27.051"></status>
</kw>
<msg timestamp="20201115 23:01:27.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.032" endtime="20201115 23:01:27.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.052" endtime="20201115 23:01:27.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.055" endtime="20201115 23:01:27.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.030" endtime="20201115 23:01:27.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.028" endtime="20201115 23:01:27.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.064" endtime="20201115 23:01:27.350"></status>
</kw>
<msg timestamp="20201115 23:01:27.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024356472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024400653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.062" endtime="20201115 23:01:27.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024356472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024400653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.354" endtime="20201115 23:01:27.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.362" endtime="20201115 23:01:27.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.060" endtime="20201115 23:01:27.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.058" endtime="20201115 23:01:27.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.370" level="INFO">${RESULT} = [{'time': 0.024400653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4181000000000775e-05, 'source_diff': 4.4181000000000775e-05}, {'time': 0.024461681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:27.366" endtime="20201115 23:01:27.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.384" level="INFO">${ACCURACY} = {'diff': [4.4181000000000775e-05, 4.4888999999999346e-05, 4.479199999999836e-05, 4.4208999999999915e-05, 4.498600000000033e-05, 4.440200000000241e-05, 4.480500000000193e-05, 4.4388999999998846e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:01:27.371" endtime="20201115 23:01:27.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.389" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.388" endtime="20201115 23:01:27.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.391" level="INFO">VALUE: [4.4181000000000775e-05, 4.4888999999999346e-05, 4.479199999999836e-05, 4.4208999999999915e-05, 4.498600000000033e-05, 4.440200000000241e-05, 4.480500000000193e-05, 4.4388999999998846e-05, 4.479099999999889e-05, 4.4888999999999346e-05, 4.479200000000183e-05, 4.4888999999999346e-05, 4.427799999999829e-05, 4.4889000000002816e-05, 4.424999999999915e-05, 4.452800000000201e-05, 4.451400000000244e-05, 4.4888999999999346e-05, 4.49999999999999e-05, 4.4472999999999735e-05, 4.4459000000000165e-05, 4.43060000000009e-05, 4.404200000000108e-05, 4.422200000000001e-05, 4.445800000000069e-05, 4.4847000000000636e-05, 4.4888999999999346e-05, 4.477799999999879e-05, 4.420800000000044e-05, 4.4624999999999526e-05, 4.444400000000112e-05, 4.4624999999999526e-05, 4.429200000000133e-05, 4.452799999999854e-05, 4.4180999999997306e-05, 4.4624999999999526e-05, 4.4486999999999305e-05, 4.4458999999996696e-05, 4.459799999999986e-05, 4.479200000000183e-05, 4.488799999999987e-05, 4.445800000000069e-05, 4.4110999999999456e-05, 4.444400000000112e-05, 4.427699999999882e-05, 4.4874999999999776e-05, 4.497200000000076e-05, 4.479199999999836e-05, 4.398599999999933e-05, 4.454199999999811e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.390" endtime="20201115 23:01:27.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.385" endtime="20201115 23:01:27.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.394" endtime="20201115 23:01:27.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.398" endtime="20201115 23:01:27.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.396" endtime="20201115 23:01:27.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.393" endtime="20201115 23:01:27.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.026" endtime="20201115 23:01:27.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.025" endtime="20201115 23:01:27.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.024" endtime="20201115 23:01:27.419"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.422" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.430" endtime="20201115 23:01:27.448"></status>
</kw>
<msg timestamp="20201115 23:01:27.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.429" endtime="20201115 23:01:27.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.449" endtime="20201115 23:01:27.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.452" endtime="20201115 23:01:27.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.426" endtime="20201115 23:01:27.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.424" endtime="20201115 23:01:27.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.461" endtime="20201115 23:01:27.746"></status>
</kw>
<msg timestamp="20201115 23:01:27.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025280222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025325417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.459" endtime="20201115 23:01:27.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025280222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025325417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.750" endtime="20201115 23:01:27.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.759" endtime="20201115 23:01:27.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.457" endtime="20201115 23:01:27.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.455" endtime="20201115 23:01:27.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.766" level="INFO">${RESULT} = [{'time': 0.025325417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5194999999997876e-05, 'source_diff': 4.5194999999997876e-05}, {'time': 0.025384417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:27.763" endtime="20201115 23:01:27.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.780" level="INFO">${ACCURACY} = {'diff': [4.5194999999997876e-05, 4.55000000000004e-05, 4.522199999999754e-05, 4.529200000000233e-05, 4.525000000000015e-05, 4.590200000000044e-05, 4.562499999999706e-05, 4.548600000000083e-05, 4.5832...</msg>
<status status="PASS" starttime="20201115 23:01:27.767" endtime="20201115 23:01:27.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.784" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.783" endtime="20201115 23:01:27.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.787" level="INFO">VALUE: [4.5194999999997876e-05, 4.55000000000004e-05, 4.522199999999754e-05, 4.529200000000233e-05, 4.525000000000015e-05, 4.590200000000044e-05, 4.562499999999706e-05, 4.548600000000083e-05, 4.58329999999986e-05, 4.5402999999999416e-05, 4.5111000000000456e-05, 4.5111000000000456e-05, 4.545799999999822e-05, 4.598600000000133e-05, 4.577800000000326e-05, 4.5889000000000346e-05, 4.508400000000079e-05, 4.580599999999893e-05, 4.505599999999818e-05, 4.5222999999997016e-05, 4.548599999999736e-05, 4.5125000000000026e-05, 4.5125000000000026e-05, 4.586099999999774e-05, 4.504100000000261e-05, 4.5889000000000346e-05, 4.595800000000219e-05, 4.5138999999999596e-05, 4.5138999999999596e-05, 4.562499999999706e-05, 4.572200000000151e-05, 4.501399999999947e-05, 4.555599999999868e-05, 4.5223000000000485e-05, 4.5958999999998196e-05, 4.5625000000000526e-05, 4.5416999999998986e-05, 4.561200000000043e-05, 4.511199999999993e-05, 4.577700000000032e-05, 4.498599999999686e-05, 4.5875000000000776e-05, 4.530499999999896e-05, 4.5902999999999916e-05, 4.597199999999829e-05, 4.527799999999929e-05, 4.5889000000000346e-05, 4.530599999999843e-05, 4.556999999999825e-05, 4.5709000000001415e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.785" endtime="20201115 23:01:27.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.780" endtime="20201115 23:01:27.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.790" endtime="20201115 23:01:27.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.793" endtime="20201115 23:01:27.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.792" endtime="20201115 23:01:27.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.788" endtime="20201115 23:01:27.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.422" endtime="20201115 23:01:27.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.420" endtime="20201115 23:01:27.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.419" endtime="20201115 23:01:27.814"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.816" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.825" endtime="20201115 23:01:27.842"></status>
</kw>
<msg timestamp="20201115 23:01:27.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.823" endtime="20201115 23:01:27.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.844" endtime="20201115 23:01:27.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.846" endtime="20201115 23:01:27.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.821" endtime="20201115 23:01:27.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.818" endtime="20201115 23:01:27.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.856" endtime="20201115 23:01:28.141"></status>
</kw>
<msg timestamp="20201115 23:01:28.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024459208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024505903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.854" endtime="20201115 23:01:28.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024459208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024505903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.145" endtime="20201115 23:01:28.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.154" endtime="20201115 23:01:28.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.851" endtime="20201115 23:01:28.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.849" endtime="20201115 23:01:28.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.161" level="INFO">${RESULT} = [{'time': 0.024505903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6694999999999376e-05, 'source_diff': 4.6694999999999376e-05}, {'time': 0.024567903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:28.157" endtime="20201115 23:01:28.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.174" level="INFO">${ACCURACY} = {'diff': [4.6694999999999376e-05, 4.604199999999961e-05, 4.6709000000002415e-05, 4.6237000000001055e-05, 4.6013000000001e-05, 4.640199999999747e-05, 4.6625000000001526e-05, 4.662499999999806e-05, 4.67...</msg>
<status status="PASS" starttime="20201115 23:01:28.162" endtime="20201115 23:01:28.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.179" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.178" endtime="20201115 23:01:28.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.181" level="INFO">VALUE: [4.6694999999999376e-05, 4.604199999999961e-05, 4.6709000000002415e-05, 4.6237000000001055e-05, 4.6013000000001e-05, 4.640199999999747e-05, 4.6625000000001526e-05, 4.662499999999806e-05, 4.679100000000089e-05, 4.672199999999904e-05, 4.679100000000089e-05, 4.623599999999811e-05, 4.645799999999922e-05, 4.645799999999922e-05, 4.629199999999986e-05, 4.686099999999874e-05, 4.679200000000036e-05, 4.654200000000011e-05, 4.6875000000001776e-05, 4.630599999999943e-05, 4.656999999999925e-05, 4.6708999999998946e-05, 4.680599999999993e-05, 4.68879999999984e-05, 4.623599999999811e-05, 4.630499999999996e-05, 4.6125000000001026e-05, 4.680499999999699e-05, 4.670799999999947e-05, 4.695800000000319e-05, 4.679199999999689e-05, 4.637499999999781e-05, 4.645799999999922e-05, 4.630599999999943e-05, 4.652800000000054e-05, 4.655599999999968e-05, 4.6209000000001915e-05, 4.617999999999983e-05, 4.629199999999986e-05, 4.629199999999986e-05, 4.6430999999999556e-05, 4.680500000000046e-05, 4.65269999999976e-05, 4.655500000000021e-05, 4.654100000000064e-05, 4.6889000000001346e-05, 4.629100000000039e-05, 4.655599999999968e-05, 4.6430999999999556e-05, 4.686099999999874e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.180" endtime="20201115 23:01:28.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.175" endtime="20201115 23:01:28.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.184" endtime="20201115 23:01:28.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.188" endtime="20201115 23:01:28.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.186" endtime="20201115 23:01:28.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.183" endtime="20201115 23:01:28.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.817" endtime="20201115 23:01:28.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.815" endtime="20201115 23:01:28.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.814" endtime="20201115 23:01:28.209"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.211" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.219" endtime="20201115 23:01:28.237"></status>
</kw>
<msg timestamp="20201115 23:01:28.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.218" endtime="20201115 23:01:28.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.239" endtime="20201115 23:01:28.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.242" endtime="20201115 23:01:28.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.215" endtime="20201115 23:01:28.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.213" endtime="20201115 23:01:28.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.251" endtime="20201115 23:01:28.537"></status>
</kw>
<msg timestamp="20201115 23:01:28.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025149028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025196736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.249" endtime="20201115 23:01:28.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025149028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025196736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.541" endtime="20201115 23:01:28.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.550" endtime="20201115 23:01:28.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.247" endtime="20201115 23:01:28.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.245" endtime="20201115 23:01:28.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.556" level="INFO">${RESULT} = [{'time': 0.025196736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.770800000000047e-05, 'source_diff': 4.770800000000047e-05}, {'time': 0.025260792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:28.553" endtime="20201115 23:01:28.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.571" level="INFO">${ACCURACY} = {'diff': [4.770800000000047e-05, 4.7445000000000126e-05, 4.762499999999906e-05, 4.759699999999992e-05, 4.745800000000022e-05, 4.729199999999739e-05, 4.770800000000047e-05, 4.7639000000002096e-05, 4.71...</msg>
<status status="PASS" starttime="20201115 23:01:28.557" endtime="20201115 23:01:28.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.576" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.575" endtime="20201115 23:01:28.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.578" level="INFO">VALUE: [4.770800000000047e-05, 4.7445000000000126e-05, 4.762499999999906e-05, 4.759699999999992e-05, 4.745800000000022e-05, 4.729199999999739e-05, 4.770800000000047e-05, 4.7639000000002096e-05, 4.7111000000002456e-05, 4.780600000000093e-05, 4.754200000000111e-05, 4.756899999999731e-05, 4.722199999999954e-05, 4.712499999999856e-05, 4.7167000000000736e-05, 4.7111000000002456e-05, 4.766699999999777e-05, 4.779100000000189e-05, 4.7403000000001416e-05, 4.711099999999899e-05, 4.711099999999899e-05, 4.762499999999906e-05, 4.748600000000283e-05, 4.7625000000002526e-05, 4.7139000000001596e-05, 4.7945000000000626e-05, 4.727799999999782e-05, 4.7708999999999946e-05, 4.7959000000000196e-05, 4.727699999999835e-05, 4.71940000000004e-05, 4.743000000000108e-05, 4.727699999999835e-05, 4.705500000000071e-05, 4.777800000000179e-05, 4.780499999999799e-05, 4.7403000000001416e-05, 4.732e-05, 4.720799999999997e-05, 4.762499999999906e-05, 4.777800000000179e-05, 4.725000000000215e-05, 4.7487000000002305e-05, 4.7222999999999016e-05, 4.705499999999724e-05, 4.737499999999881e-05, 4.731900000000053e-05, 4.787499999999931e-05, 4.780500000000146e-05, 4.754099999999817e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.577" endtime="20201115 23:01:28.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.572" endtime="20201115 23:01:28.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.581" endtime="20201115 23:01:28.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.585" endtime="20201115 23:01:28.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.583" endtime="20201115 23:01:28.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.580" endtime="20201115 23:01:28.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.212" endtime="20201115 23:01:28.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.210" endtime="20201115 23:01:28.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.209" endtime="20201115 23:01:28.606"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.608" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.617" endtime="20201115 23:01:28.634"></status>
</kw>
<msg timestamp="20201115 23:01:28.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.615" endtime="20201115 23:01:28.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.636" endtime="20201115 23:01:28.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.638" endtime="20201115 23:01:28.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.612" endtime="20201115 23:01:28.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.610" endtime="20201115 23:01:28.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.647" endtime="20201115 23:01:28.933"></status>
</kw>
<msg timestamp="20201115 23:01:28.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024800264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024848319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.646" endtime="20201115 23:01:28.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024800264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024848319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.937" endtime="20201115 23:01:28.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.945" endtime="20201115 23:01:28.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.643" endtime="20201115 23:01:28.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.641" endtime="20201115 23:01:28.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.952" level="INFO">${RESULT} = [{'time': 0.024848319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805500000000171e-05, 'source_diff': 4.805500000000171e-05}, {'time': 0.024914333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:28.948" endtime="20201115 23:01:28.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.965" level="INFO">${ACCURACY} = {'diff': [4.805500000000171e-05, 4.805500000000171e-05, 4.837499999999981e-05, 4.881900000000203e-05, 4.808299999999738e-05, 4.804199999999814e-05, 4.86529999999992e-05, 4.861100000000049e-05, 4.85830...</msg>
<status status="PASS" starttime="20201115 23:01:28.953" endtime="20201115 23:01:28.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.970" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.969" endtime="20201115 23:01:28.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.972" level="INFO">VALUE: [4.805500000000171e-05, 4.805500000000171e-05, 4.837499999999981e-05, 4.881900000000203e-05, 4.808299999999738e-05, 4.804199999999814e-05, 4.86529999999992e-05, 4.861100000000049e-05, 4.858300000000135e-05, 4.862500000000006e-05, 4.8473000000000266e-05, 4.8320000000001e-05, 4.8903000000002916e-05, 4.8125000000003026e-05, 4.880499999999899e-05, 4.823600000000011e-05, 4.813799999999965e-05, 4.862500000000006e-05, 4.861100000000049e-05, 4.880500000000246e-05, 4.837499999999981e-05, 4.812499999999956e-05, 4.862500000000006e-05, 4.863899999999963e-05, 4.884700000000117e-05, 4.8695000000001376e-05, 4.895799999999825e-05, 4.859700000000092e-05, 4.883299999999813e-05, 4.836199999999971e-05, 4.812499999999956e-05, 4.829199999999839e-05, 4.82079999999975e-05, 4.8125000000003026e-05, 4.894399999999868e-05, 4.830499999999849e-05, 4.8707999999998e-05, 4.845800000000122e-05, 4.830500000000196e-05, 4.807000000000075e-05, 4.822199999999707e-05, 4.897200000000129e-05, 4.848600000000036e-05, 4.845800000000122e-05, 4.877800000000279e-05, 4.887500000000031e-05, 4.8445000000001126e-05, 4.879099999999942e-05, 4.804200000000161e-05, 4.855500000000221e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.971" endtime="20201115 23:01:28.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.966" endtime="20201115 23:01:28.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.975" endtime="20201115 23:01:28.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.979" endtime="20201115 23:01:28.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.977" endtime="20201115 23:01:28.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.974" endtime="20201115 23:01:29.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.609" endtime="20201115 23:01:29.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.607" endtime="20201115 23:01:29.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.606" endtime="20201115 23:01:29.001"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.003" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.011" endtime="20201115 23:01:29.029"></status>
</kw>
<msg timestamp="20201115 23:01:29.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.010" endtime="20201115 23:01:29.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.030" endtime="20201115 23:01:29.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.033" endtime="20201115 23:01:29.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.007" endtime="20201115 23:01:29.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.005" endtime="20201115 23:01:29.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.042" endtime="20201115 23:01:29.328"></status>
</kw>
<msg timestamp="20201115 23:01:29.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025106431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025156292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.040" endtime="20201115 23:01:29.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025106431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025156292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.333" endtime="20201115 23:01:29.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.341" endtime="20201115 23:01:29.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.038" endtime="20201115 23:01:29.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.036" endtime="20201115 23:01:29.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.348" level="INFO">${RESULT} = [{'time': 0.025156292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986100000000174e-05, 'source_diff': 4.986100000000174e-05}, {'time': 0.025226292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.344" endtime="20201115 23:01:29.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.361" level="INFO">${ACCURACY} = {'diff': [4.986100000000174e-05, 4.925000000000068e-05, 4.923600000000111e-05, 4.947200000000179e-05, 4.941600000000004e-05, 4.956900000000278e-05, 4.930499999999949e-05, 4.904100000000314e-05, 4.9250...</msg>
<status status="PASS" starttime="20201115 23:01:29.349" endtime="20201115 23:01:29.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.365" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.364" endtime="20201115 23:01:29.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.368" level="INFO">VALUE: [4.986100000000174e-05, 4.925000000000068e-05, 4.923600000000111e-05, 4.947200000000179e-05, 4.941600000000004e-05, 4.956900000000278e-05, 4.930499999999949e-05, 4.904100000000314e-05, 4.925000000000068e-05, 4.998600000000186e-05, 4.930599999999896e-05, 4.937500000000081e-05, 4.931999999999853e-05, 4.950000000000093e-05, 4.919499999999841e-05, 4.920800000000197e-05, 4.9472999999997797e-05, 4.967999999999986e-05, 4.959700000000192e-05, 4.911200000000046e-05, 4.9651999999997254e-05, 4.945800000000222e-05, 4.962499999999759e-05, 4.911100000000099e-05, 4.980499999999999e-05, 4.990300000000045e-05, 4.934799999999767e-05, 4.937499999999734e-05, 4.911100000000099e-05, 4.945800000000222e-05, 4.962499999999759e-05, 4.980600000000293e-05, 4.904199999999914e-05, 4.934800000000114e-05, 4.929200000000286e-05, 4.9223000000001016e-05, 4.936099999999777e-05, 4.970800000000247e-05, 4.999999999999796e-05, 4.962500000000106e-05, 4.91529999999997e-05, 4.927799999999982e-05, 4.977800000000032e-05, 4.959699999999845e-05, 4.926400000000025e-05, 4.954199999999964e-05, 4.975000000000118e-05, 4.962500000000106e-05, 4.912500000000056e-05, 4.9458999999998227e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.366" endtime="20201115 23:01:29.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.362" endtime="20201115 23:01:29.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.371" endtime="20201115 23:01:29.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.375" endtime="20201115 23:01:29.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.373" endtime="20201115 23:01:29.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.370" endtime="20201115 23:01:29.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.004" endtime="20201115 23:01:29.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.002" endtime="20201115 23:01:29.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.001" endtime="20201115 23:01:29.396"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.399" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.408" endtime="20201115 23:01:29.425"></status>
</kw>
<msg timestamp="20201115 23:01:29.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.406" endtime="20201115 23:01:29.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.427" endtime="20201115 23:01:29.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.430" endtime="20201115 23:01:29.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.403" endtime="20201115 23:01:29.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.401" endtime="20201115 23:01:29.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.439" endtime="20201115 23:01:29.724"></status>
</kw>
<msg timestamp="20201115 23:01:29.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025924236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025974694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.437" endtime="20201115 23:01:29.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025924236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025974694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.729" endtime="20201115 23:01:29.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.737" endtime="20201115 23:01:29.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.435" endtime="20201115 23:01:29.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.433" endtime="20201115 23:01:29.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.744" level="INFO">${RESULT} = [{'time': 0.025974694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.045799999999975e-05, 'source_diff': 5.045799999999975e-05}, {'time': 0.026045736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.740" endtime="20201115 23:01:29.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.757" level="INFO">${ACCURACY} = {'diff': [5.045799999999975e-05, 5.048599999999889e-05, 5.027700000000135e-05, 5.086099999999927e-05, 5.095800000000025e-05, 5.045799999999975e-05, 5.080600000000046e-05, 5.087499999999884e-05, 5.0985...</msg>
<status status="PASS" starttime="20201115 23:01:29.745" endtime="20201115 23:01:29.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.762" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.760" endtime="20201115 23:01:29.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.765" level="INFO">VALUE: [5.045799999999975e-05, 5.048599999999889e-05, 5.027700000000135e-05, 5.086099999999927e-05, 5.095800000000025e-05, 5.045799999999975e-05, 5.080600000000046e-05, 5.087499999999884e-05, 5.098599999999939e-05, 5.013899999999766e-05, 5.045899999999923e-05, 5.012499999999809e-05, 5.061099999999902e-05, 5.052800000000107e-05, 5.072299999999905e-05, 5.022200000000254e-05, 5.047199999999932e-05, 5.079099999999795e-05, 5.083300000000013e-05, 5.047199999999932e-05, 5.044400000000018e-05, 5.047200000000279e-05, 5.095800000000025e-05, 5.077799999999785e-05, 5.0708e-05, 5.062499999999859e-05, 5.029200000000039e-05, 5.005600000000318e-05, 5.005599999999971e-05, 5.0236999999998116e-05, 5.1014000000002e-05, 5.027700000000135e-05, 5.0708e-05, 5.079099999999795e-05, 5.073599999999914e-05, 5.063900000000163e-05, 5.006899999999981e-05, 5.027800000000082e-05, 5.018099999999984e-05, 5.013900000000113e-05, 5.093100000000059e-05, 5.029200000000039e-05, 5.0014000000001e-05, 5.030599999999996e-05, 5.097199999999982e-05, 5.030599999999996e-05, 5.0387999999998434e-05, 5.097199999999982e-05, 5.065299999999773e-05, 5.013899999999766e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.763" endtime="20201115 23:01:29.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.758" endtime="20201115 23:01:29.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.768" endtime="20201115 23:01:29.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.771" endtime="20201115 23:01:29.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.770" endtime="20201115 23:01:29.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.766" endtime="20201115 23:01:29.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.399" endtime="20201115 23:01:29.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.397" endtime="20201115 23:01:29.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.396" endtime="20201115 23:01:29.792"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.795" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.803" endtime="20201115 23:01:29.821"></status>
</kw>
<msg timestamp="20201115 23:01:29.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.801" endtime="20201115 23:01:29.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.822" endtime="20201115 23:01:29.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.825" endtime="20201115 23:01:29.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.799" endtime="20201115 23:01:29.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.796" endtime="20201115 23:01:29.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.834" endtime="20201115 23:01:30.120"></status>
</kw>
<msg timestamp="20201115 23:01:30.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024924736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02497575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:29.832" endtime="20201115 23:01:30.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024924736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02497575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:30.124" endtime="20201115 23:01:30.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.133" endtime="20201115 23:01:30.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.830" endtime="20201115 23:01:30.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.828" endtime="20201115 23:01:30.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.140" level="INFO">${RESULT} = [{'time': 0.02497575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1014000000002e-05, 'source_diff': 5.1014000000002e-05}, {'time': 0.025039819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5....</msg>
<status status="PASS" starttime="20201115 23:01:30.136" endtime="20201115 23:01:30.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.159" level="INFO">${ACCURACY} = {'diff': [5.1014000000002e-05, 5.13470000000002e-05, 5.155599999999774e-05, 5.187499999999984e-05, 5.116600000000179e-05, 5.179199999999842e-05, 5.106900000000081e-05, 5.10409999999982e-05, 5.10270000...</msg>
<status status="PASS" starttime="20201115 23:01:30.145" endtime="20201115 23:01:30.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.164" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.163" endtime="20201115 23:01:30.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.166" level="INFO">VALUE: [5.1014000000002e-05, 5.13470000000002e-05, 5.155599999999774e-05, 5.187499999999984e-05, 5.116600000000179e-05, 5.179199999999842e-05, 5.106900000000081e-05, 5.10409999999982e-05, 5.10270000000021e-05, 5.119400000000093e-05, 5.112499999999909e-05, 5.162499999999959e-05, 5.115299999999823e-05, 5.16530000000022e-05, 5.162499999999959e-05, 5.130600000000096e-05, 5.190299999999898e-05, 5.1457999999997284e-05, 5.163899999999916e-05, 5.177799999999885e-05, 5.104200000000114e-05, 5.118099999999737e-05, 5.195900000000073e-05, 5.194500000000116e-05, 5.129100000000192e-05, 5.187499999999984e-05, 5.1957999999997784e-05, 5.113899999999866e-05, 5.1943999999998214e-05, 5.113900000000213e-05, 5.129200000000139e-05, 5.122200000000007e-05, 5.177799999999885e-05, 5.137500000000281e-05, 5.130599999999749e-05, 5.122299999999955e-05, 5.14729999999998e-05, 5.161100000000002e-05, 5.1707999999997534e-05, 5.136099999999977e-05, 5.181899999999809e-05, 5.179099999999895e-05, 5.15409999999987e-05, 5.122200000000007e-05, 5.106900000000081e-05, 5.130500000000149e-05, 5.1693999999997964e-05, 5.131899999999759e-05, 5.105600000000071e-05, 5.104200000000114e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.165" endtime="20201115 23:01:30.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.160" endtime="20201115 23:01:30.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.169" endtime="20201115 23:01:30.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.173" endtime="20201115 23:01:30.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.171" endtime="20201115 23:01:30.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.167" endtime="20201115 23:01:30.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.795" endtime="20201115 23:01:30.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.793" endtime="20201115 23:01:30.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.793" endtime="20201115 23:01:30.194"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.204" endtime="20201115 23:01:30.222"></status>
</kw>
<msg timestamp="20201115 23:01:30.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.203" endtime="20201115 23:01:30.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.223" endtime="20201115 23:01:30.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.226" endtime="20201115 23:01:30.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.200" endtime="20201115 23:01:30.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.198" endtime="20201115 23:01:30.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.235" endtime="20201115 23:01:30.520"></status>
</kw>
<msg timestamp="20201115 23:01:30.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024378486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024430972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.233" endtime="20201115 23:01:30.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024378486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024430972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.524" endtime="20201115 23:01:30.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.533" endtime="20201115 23:01:30.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.231" endtime="20201115 23:01:30.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.229" endtime="20201115 23:01:30.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.540" level="INFO">${RESULT} = [{'time': 0.024430972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2485999999997424e-05, 'source_diff': 5.2485999999997424e-05}, {'time': 0.024497972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:30.536" endtime="20201115 23:01:30.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.553" level="INFO">${ACCURACY} = {'diff': [5.2485999999997424e-05, 5.262500000000059e-05, 5.229199999999892e-05, 5.288899999999694e-05, 5.211100000000052e-05, 5.248600000000089e-05, 5.23470000000012e-05, 5.280600000000246e-05, 5.2165...</msg>
<status status="PASS" starttime="20201115 23:01:30.541" endtime="20201115 23:01:30.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.558" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.557" endtime="20201115 23:01:30.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.560" level="INFO">VALUE: [5.2485999999997424e-05, 5.262500000000059e-05, 5.229199999999892e-05, 5.288899999999694e-05, 5.211100000000052e-05, 5.248600000000089e-05, 5.23470000000012e-05, 5.280600000000246e-05, 5.2165999999999324e-05, 5.229200000000239e-05, 5.288900000000041e-05, 5.243099999999862e-05, 5.212500000000009e-05, 5.279100000000342e-05, 5.204100000000267e-05, 5.205499999999877e-05, 5.293100000000259e-05, 5.280499999999952e-05, 5.2708000000002e-05, 5.277799999999985e-05, 5.238899999999991e-05, 5.230599999999849e-05, 5.255599999999874e-05, 5.269499999999844e-05, 5.263900000000016e-05, 5.230600000000196e-05, 5.204200000000214e-05, 5.204100000000267e-05, 5.288900000000041e-05, 5.2957999999998784e-05, 5.280499999999952e-05, 5.2693999999998964e-05, 5.2971999999998354e-05, 5.2957999999998784e-05, 5.2707999999998534e-05, 5.212500000000009e-05, 5.258400000000135e-05, 5.212500000000009e-05, 5.23340000000011e-05, 5.280600000000246e-05, 5.227800000000282e-05, 5.2735999999997674e-05, 5.212500000000009e-05, 5.211100000000052e-05, 5.2457999999998284e-05, 5.279099999999995e-05, 5.223600000000064e-05, 5.248600000000089e-05, 5.218099999999837e-05, 5.263900000000016e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.559" endtime="20201115 23:01:30.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.554" endtime="20201115 23:01:30.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.563" endtime="20201115 23:01:30.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.567" endtime="20201115 23:01:30.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.565" endtime="20201115 23:01:30.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.562" endtime="20201115 23:01:30.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.197" endtime="20201115 23:01:30.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.195" endtime="20201115 23:01:30.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.194" endtime="20201115 23:01:30.588"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.590" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.598" endtime="20201115 23:01:30.616"></status>
</kw>
<msg timestamp="20201115 23:01:30.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.597" endtime="20201115 23:01:30.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.617" endtime="20201115 23:01:30.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.620" endtime="20201115 23:01:30.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.594" endtime="20201115 23:01:30.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.592" endtime="20201115 23:01:30.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.629" endtime="20201115 23:01:30.913"></status>
</kw>
<msg timestamp="20201115 23:01:30.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024363597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024416958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.627" endtime="20201115 23:01:30.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024363597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024416958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.918" endtime="20201115 23:01:30.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.926" endtime="20201115 23:01:30.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.625" endtime="20201115 23:01:30.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.623" endtime="20201115 23:01:30.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.933" level="INFO">${RESULT} = [{'time': 0.024416958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.33609999999983e-05, 'source_diff': 5.33609999999983e-05}, {'time': 0.024483958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:30.929" endtime="20201115 23:01:30.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.946" level="INFO">${ACCURACY} = {'diff': [5.33609999999983e-05, 5.361099999999855e-05, 5.3985999999998924e-05, 5.312500000000109e-05, 5.390299999999751e-05, 5.381999999999956e-05, 5.318100000000284e-05, 5.379200000000042e-05, 5.3207...</msg>
<status status="PASS" starttime="20201115 23:01:30.934" endtime="20201115 23:01:30.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.951" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.950" endtime="20201115 23:01:30.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.953" level="INFO">VALUE: [5.33609999999983e-05, 5.361099999999855e-05, 5.3985999999998924e-05, 5.312500000000109e-05, 5.390299999999751e-05, 5.381999999999956e-05, 5.318100000000284e-05, 5.379200000000042e-05, 5.3207999999999034e-05, 5.394499999999969e-05, 5.361099999999855e-05, 5.381900000000009e-05, 5.372299999999858e-05, 5.329199999999992e-05, 5.3721999999999104e-05, 5.380500000000052e-05, 5.33609999999983e-05, 5.362500000000159e-05, 5.368099999999987e-05, 5.330599999999949e-05, 5.338900000000091e-05, 5.362499999999812e-05, 5.3457999999999284e-05, 5.329199999999992e-05, 5.3930000000000644e-05, 5.311100000000152e-05, 5.312499999999762e-05, 5.3152000000000754e-05, 5.361200000000149e-05, 5.331899999999959e-05, 5.334699999999873e-05, 5.377699999999791e-05, 5.388900000000141e-05, 5.312499999999762e-05, 5.380500000000052e-05, 5.304199999999967e-05, 5.33609999999983e-05, 5.38340000000026e-05, 5.362500000000159e-05, 5.313900000000066e-05, 5.394499999999969e-05, 5.380599999999999e-05, 5.386100000000227e-05, 5.377800000000085e-05, 5.305499999999977e-05, 5.3207999999999034e-05, 5.363900000000116e-05, 5.3443999999999714e-05, 5.329199999999992e-05, 5.305499999999977e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.952" endtime="20201115 23:01:30.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.947" endtime="20201115 23:01:30.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.956" endtime="20201115 23:01:30.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.960" endtime="20201115 23:01:30.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.958" endtime="20201115 23:01:30.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.955" endtime="20201115 23:01:30.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.591" endtime="20201115 23:01:30.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.589" endtime="20201115 23:01:30.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.588" endtime="20201115 23:01:30.981"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.983" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.991" endtime="20201115 23:01:31.009"></status>
</kw>
<msg timestamp="20201115 23:01:31.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.990" endtime="20201115 23:01:31.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.011" endtime="20201115 23:01:31.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.014" endtime="20201115 23:01:31.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.987" endtime="20201115 23:01:31.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.985" endtime="20201115 23:01:31.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.022" endtime="20201115 23:01:31.307"></status>
</kw>
<msg timestamp="20201115 23:01:31.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024236056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024290972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.021" endtime="20201115 23:01:31.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024236056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024290972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.312" endtime="20201115 23:01:31.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.320" endtime="20201115 23:01:31.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.018" endtime="20201115 23:01:31.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.017" endtime="20201115 23:01:31.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.327" level="INFO">${RESULT} = [{'time': 0.024290972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4916000000002074e-05, 'source_diff': 5.4916000000002074e-05}, {'time': 0.024359917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:31.323" endtime="20201115 23:01:31.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.340" level="INFO">${ACCURACY} = {'diff': [5.4916000000002074e-05, 5.412499999999862e-05, 5.415299999999776e-05, 5.462500000000259e-05, 5.445899999999976e-05, 5.4999999999999494e-05, 5.4471999999999854e-05, 5.4985999999999924e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:01:31.328" endtime="20201115 23:01:31.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.345" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.344" endtime="20201115 23:01:31.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.347" level="INFO">VALUE: [5.4916000000002074e-05, 5.412499999999862e-05, 5.415299999999776e-05, 5.462500000000259e-05, 5.445899999999976e-05, 5.4999999999999494e-05, 5.4471999999999854e-05, 5.4985999999999924e-05, 5.4944000000001214e-05, 5.4471999999999854e-05, 5.4791999999997953e-05, 5.405600000000024e-05, 5.41809999999969e-05, 5.412500000000209e-05, 5.430600000000049e-05, 5.4916000000002074e-05, 5.4194000000000464e-05, 5.463899999999869e-05, 5.495900000000026e-05, 5.427800000000135e-05, 5.458300000000041e-05, 5.404099999999773e-05, 5.40410000000012e-05, 5.452699999999866e-05, 5.406900000000034e-05, 5.4194000000000464e-05, 5.429200000000092e-05, 5.4235999999999174e-05, 5.4485999999999424e-05, 5.4958000000000784e-05, 5.412499999999862e-05, 5.455600000000074e-05, 5.4291999999997453e-05, 5.470900000000001e-05, 5.495900000000026e-05, 5.429200000000092e-05, 5.4693999999997495e-05, 5.4985999999999924e-05, 5.4985999999999924e-05, 5.429200000000092e-05, 5.405500000000077e-05, 5.454200000000117e-05, 5.438899999999844e-05, 5.4944000000001214e-05, 5.479200000000142e-05, 5.409699999999948e-05, 5.470900000000001e-05, 5.472299999999958e-05, 5.486199999999927e-05, 5.44730000000028e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.346" endtime="20201115 23:01:31.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.341" endtime="20201115 23:01:31.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.350" endtime="20201115 23:01:31.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.354" endtime="20201115 23:01:31.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.352" endtime="20201115 23:01:31.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.349" endtime="20201115 23:01:31.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.984" endtime="20201115 23:01:31.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.982" endtime="20201115 23:01:31.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.981" endtime="20201115 23:01:31.375"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.377" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.386" endtime="20201115 23:01:31.404"></status>
</kw>
<msg timestamp="20201115 23:01:31.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.385" endtime="20201115 23:01:31.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.405" endtime="20201115 23:01:31.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.408" endtime="20201115 23:01:31.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.381" endtime="20201115 23:01:31.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.379" endtime="20201115 23:01:31.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.417" endtime="20201115 23:01:31.703"></status>
</kw>
<msg timestamp="20201115 23:01:31.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025661806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025717, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:31.415" endtime="20201115 23:01:31.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025661806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025717, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:31.707" endtime="20201115 23:01:31.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.716" endtime="20201115 23:01:31.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.413" endtime="20201115 23:01:31.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.411" endtime="20201115 23:01:31.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.723" level="INFO">${RESULT} = [{'time': 0.025717, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5194000000001464e-05, 'source_diff': 5.5194000000001464e-05}, {'time': 0.025790069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:31.719" endtime="20201115 23:01:31.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.737" level="INFO">${ACCURACY} = {'diff': [5.5194000000001464e-05, 5.587500000000037e-05, 5.531900000000159e-05, 5.540300000000248e-05, 5.5805999999998523e-05, 5.555600000000174e-05, 5.538899999999944e-05, 5.511100000000005e-05, 5.56...</msg>
<status status="PASS" starttime="20201115 23:01:31.724" endtime="20201115 23:01:31.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.742" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.741" endtime="20201115 23:01:31.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.744" level="INFO">VALUE: [5.5194000000001464e-05, 5.587500000000037e-05, 5.531900000000159e-05, 5.540300000000248e-05, 5.5805999999998523e-05, 5.555600000000174e-05, 5.538899999999944e-05, 5.511100000000005e-05, 5.563899999999969e-05, 5.561100000000055e-05, 5.5513999999999564e-05, 5.5236000000000174e-05, 5.5485999999996954e-05, 5.509700000000048e-05, 5.537499999999987e-05, 5.5957999999998315e-05, 5.5986000000000924e-05, 5.5458000000001284e-05, 5.513900000000266e-05, 5.511100000000005e-05, 5.5305999999998023e-05, 5.538899999999944e-05, 5.512499999999962e-05, 5.5777999999999384e-05, 5.4985999999999924e-05, 5.537499999999987e-05, 5.5457999999997815e-05, 5.513899999999919e-05, 5.5471999999997385e-05, 5.5486000000000424e-05, 5.5958000000001784e-05, 5.5971999999997885e-05, 5.5277999999998884e-05, 5.5541999999998704e-05, 5.5722000000001104e-05, 5.5277999999998884e-05, 5.557000000000131e-05, 5.513899999999919e-05, 5.532000000000106e-05, 5.587500000000037e-05, 5.5750000000000244e-05, 5.588899999999994e-05, 5.5957999999998315e-05, 5.513899999999919e-05, 5.529200000000192e-05, 5.5708000000001534e-05, 5.5986000000000924e-05, 5.513899999999919e-05, 5.582000000000156e-05, 5.5722000000001104e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.743" endtime="20201115 23:01:31.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.738" endtime="20201115 23:01:31.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.748" endtime="20201115 23:01:31.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.751" endtime="20201115 23:01:31.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.749" endtime="20201115 23:01:31.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.746" endtime="20201115 23:01:31.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.378" endtime="20201115 23:01:31.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.376" endtime="20201115 23:01:31.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.375" endtime="20201115 23:01:31.773"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.775" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.783" endtime="20201115 23:01:31.800"></status>
</kw>
<msg timestamp="20201115 23:01:31.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.782" endtime="20201115 23:01:31.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.802" endtime="20201115 23:01:31.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.804" endtime="20201115 23:01:31.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.779" endtime="20201115 23:01:31.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.777" endtime="20201115 23:01:31.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.813" endtime="20201115 23:01:32.099"></status>
</kw>
<msg timestamp="20201115 23:01:32.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024759111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024815472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.812" endtime="20201115 23:01:32.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024759111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024815472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.103" endtime="20201115 23:01:32.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.112" endtime="20201115 23:01:32.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.809" endtime="20201115 23:01:32.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.807" endtime="20201115 23:01:32.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.118" level="INFO">${RESULT} = [{'time': 0.024815472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.63610000000013e-05, 'source_diff': 5.63610000000013e-05}, {'time': 0.024892486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:32.115" endtime="20201115 23:01:32.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.132" level="INFO">${ACCURACY} = {'diff': [5.63610000000013e-05, 5.6791999999999954e-05, 5.6750000000001244e-05, 5.6791999999999954e-05, 5.626300000000084e-05, 5.6805999999999524e-05, 5.656899999999937e-05, 5.673700000000115e-05, 5.6...</msg>
<status status="PASS" starttime="20201115 23:01:32.119" endtime="20201115 23:01:32.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.136" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.135" endtime="20201115 23:01:32.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.139" level="INFO">VALUE: [5.63610000000013e-05, 5.6791999999999954e-05, 5.6750000000001244e-05, 5.6791999999999954e-05, 5.626300000000084e-05, 5.6805999999999524e-05, 5.656899999999937e-05, 5.673700000000115e-05, 5.662500000000112e-05, 5.6637999999997746e-05, 5.663899999999722e-05, 5.6528000000000134e-05, 5.6971999999998885e-05, 5.606899999999887e-05, 5.6277999999999884e-05, 5.688900000000094e-05, 5.612499999999715e-05, 5.658300000000241e-05, 5.6972000000002354e-05, 5.662500000000112e-05, 5.662500000000112e-05, 5.662500000000112e-05, 5.698699999999793e-05, 5.630499999999955e-05, 5.636200000000077e-05, 5.6637999999997746e-05, 5.626300000000084e-05, 5.654100000000023e-05, 5.638900000000044e-05, 5.659699999999851e-05, 5.680500000000005e-05, 5.6541999999999704e-05, 5.659800000000145e-05, 5.609800000000095e-05, 5.6055999999998773e-05, 5.690300000000051e-05, 5.645899999999829e-05, 5.658400000000188e-05, 5.6985999999998455e-05, 5.6500000000000994e-05, 5.6471999999998385e-05, 5.6958000000002784e-05, 5.629099999999998e-05, 5.6235999999997704e-05, 5.613900000000019e-05, 5.6943999999999745e-05, 5.611099999999758e-05, 5.6457999999998815e-05, 5.6485999999997955e-05, 5.607000000000181e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.137" endtime="20201115 23:01:32.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.133" endtime="20201115 23:01:32.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.142" endtime="20201115 23:01:32.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.146" endtime="20201115 23:01:32.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.144" endtime="20201115 23:01:32.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.141" endtime="20201115 23:01:32.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.776" endtime="20201115 23:01:32.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.774" endtime="20201115 23:01:32.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.773" endtime="20201115 23:01:32.167"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.169" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.177" endtime="20201115 23:01:32.196"></status>
</kw>
<msg timestamp="20201115 23:01:32.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.176" endtime="20201115 23:01:32.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.197" endtime="20201115 23:01:32.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.200" endtime="20201115 23:01:32.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.173" endtime="20201115 23:01:32.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.171" endtime="20201115 23:01:32.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.209" endtime="20201115 23:01:32.495"></status>
</kw>
<msg timestamp="20201115 23:01:32.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024193472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024250986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.207" endtime="20201115 23:01:32.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024193472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024250986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.499" endtime="20201115 23:01:32.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.507" endtime="20201115 23:01:32.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.205" endtime="20201115 23:01:32.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.203" endtime="20201115 23:01:32.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.514" level="INFO">${RESULT} = [{'time': 0.024250986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7513999999998094e-05, 'source_diff': 5.7513999999998094e-05}, {'time': 0.024327042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:32.511" endtime="20201115 23:01:32.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.528" level="INFO">${ACCURACY} = {'diff': [5.7513999999998094e-05, 5.76810000000004e-05, 5.7791999999997484e-05, 5.7221999999999135e-05, 5.7277999999997414e-05, 5.787500000000237e-05, 5.713899999999772e-05, 5.7292000000000454e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:01:32.515" endtime="20201115 23:01:32.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.532" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.531" endtime="20201115 23:01:32.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.535" level="INFO">VALUE: [5.7513999999998094e-05, 5.76810000000004e-05, 5.7791999999997484e-05, 5.7221999999999135e-05, 5.7277999999997414e-05, 5.787500000000237e-05, 5.713899999999772e-05, 5.7292000000000454e-05, 5.702700000000116e-05, 5.7277999999997414e-05, 5.7457999999999815e-05, 5.780499999999758e-05, 5.702699999999769e-05, 5.704100000000073e-05, 5.738899999999797e-05, 5.743100000000015e-05, 5.7806000000000524e-05, 5.7042000000000204e-05, 5.7721999999999635e-05, 5.7500000000001994e-05, 5.7806000000000524e-05, 5.762500000000212e-05, 5.78749999999989e-05, 5.794500000000022e-05, 5.762500000000212e-05, 5.712500000000162e-05, 5.7958000000000315e-05, 5.7486000000002424e-05, 5.779100000000148e-05, 5.790299999999804e-05, 5.7778000000001384e-05, 5.7042000000000204e-05, 5.7556000000000274e-05, 5.78610000000028e-05, 5.797299999999936e-05, 5.798699999999893e-05, 5.7792000000000954e-05, 5.7055999999999774e-05, 5.78749999999989e-05, 5.715299999999729e-05, 5.7485999999998955e-05, 5.730500000000055e-05, 5.7722000000003104e-05, 5.762499999999865e-05, 5.7929999999997706e-05, 5.762500000000212e-05, 5.7958000000000315e-05, 5.7763999999998344e-05, 5.740300000000101e-05, 5.7806000000000524e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.533" endtime="20201115 23:01:32.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.529" endtime="20201115 23:01:32.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.538" endtime="20201115 23:01:32.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.542" endtime="20201115 23:01:32.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.540" endtime="20201115 23:01:32.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.537" endtime="20201115 23:01:32.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.170" endtime="20201115 23:01:32.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.168" endtime="20201115 23:01:32.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.167" endtime="20201115 23:01:32.563"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.565" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.574" endtime="20201115 23:01:32.591"></status>
</kw>
<msg timestamp="20201115 23:01:32.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.572" endtime="20201115 23:01:32.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.593" endtime="20201115 23:01:32.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.595" endtime="20201115 23:01:32.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.569" endtime="20201115 23:01:32.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.567" endtime="20201115 23:01:32.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.604" endtime="20201115 23:01:32.890"></status>
</kw>
<msg timestamp="20201115 23:01:32.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024203528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024262028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.603" endtime="20201115 23:01:32.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024203528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024262028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.894" endtime="20201115 23:01:32.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.903" endtime="20201115 23:01:32.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.600" endtime="20201115 23:01:32.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.598" endtime="20201115 23:01:32.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.909" level="INFO">${RESULT} = [{'time': 0.024262028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8500000000002994e-05, 'source_diff': 5.8500000000002994e-05}, {'time': 0.024342028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:32.906" endtime="20201115 23:01:32.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.923" level="INFO">${ACCURACY} = {'diff': [5.8500000000002994e-05, 5.8792000000001954e-05, 5.8416000000002105e-05, 5.894500000000122e-05, 5.8457999999997345e-05, 5.8792000000001954e-05, 5.854100000000223e-05, 5.8749999999999775e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:32.911" endtime="20201115 23:01:32.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.928" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.927" endtime="20201115 23:01:32.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.930" level="INFO">VALUE: [5.8500000000002994e-05, 5.8792000000001954e-05, 5.8416000000002105e-05, 5.894500000000122e-05, 5.8457999999997345e-05, 5.8792000000001954e-05, 5.854100000000223e-05, 5.8749999999999775e-05, 5.827699999999894e-05, 5.8222000000000135e-05, 5.812499999999915e-05, 5.8443999999997776e-05, 5.8319999999997124e-05, 5.8208000000000565e-05, 5.8749999999999775e-05, 5.8444000000001245e-05, 5.847299999999986e-05, 5.815300000000176e-05, 5.862499999999965e-05, 5.8472000000000385e-05, 5.8499999999999525e-05, 5.8430000000001675e-05, 5.877699999999944e-05, 5.804099999999826e-05, 5.841699999999811e-05, 5.813899999999872e-05, 5.8499999999999525e-05, 5.861100000000008e-05, 5.813899999999872e-05, 5.9000000000000025e-05, 5.8291999999997984e-05, 5.8542000000001704e-05, 5.808300000000044e-05, 5.8416000000002105e-05, 5.830500000000155e-05, 5.88749999999999e-05, 5.861099999999661e-05, 5.829099999999851e-05, 5.8708000000001065e-05, 5.863899999999922e-05, 5.8334000000000163e-05, 5.88749999999999e-05, 5.8320000000000594e-05, 5.884700000000076e-05, 5.8819999999997624e-05, 5.858300000000094e-05, 5.83749999999994e-05, 5.897300000000036e-05, 5.8430000000001675e-05, 5.8915999999999136e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.929" endtime="20201115 23:01:32.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.924" endtime="20201115 23:01:32.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.933" endtime="20201115 23:01:32.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.937" endtime="20201115 23:01:32.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.935" endtime="20201115 23:01:32.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.932" endtime="20201115 23:01:32.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.566" endtime="20201115 23:01:32.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.564" endtime="20201115 23:01:32.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.563" endtime="20201115 23:01:32.958"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.960" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.968" endtime="20201115 23:01:32.988"></status>
</kw>
<msg timestamp="20201115 23:01:32.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.967" endtime="20201115 23:01:32.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.989" endtime="20201115 23:01:32.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.992" endtime="20201115 23:01:32.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.964" endtime="20201115 23:01:32.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.962" endtime="20201115 23:01:32.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.001" endtime="20201115 23:01:33.288"></status>
</kw>
<msg timestamp="20201115 23:01:33.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025366833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025426208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.999" endtime="20201115 23:01:33.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025366833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025426208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.292" endtime="20201115 23:01:33.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.301" endtime="20201115 23:01:33.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.997" endtime="20201115 23:01:33.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.995" endtime="20201115 23:01:33.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.307" level="INFO">${RESULT} = [{'time': 0.025426208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.93750000000004e-05, 'source_diff': 5.93750000000004e-05}, {'time': 0.025507208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:33.304" endtime="20201115 23:01:33.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.322" level="INFO">${ACCURACY} = {'diff': [5.93750000000004e-05, 5.9472000000001385e-05, 5.912500000000015e-05, 5.962499999999718e-05, 5.9306000000002024e-05, 5.9583999999997944e-05, 5.9556000000002274e-05, 5.9084000000000914e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:01:33.308" endtime="20201115 23:01:33.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.326" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.325" endtime="20201115 23:01:33.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.329" level="INFO">VALUE: [5.93750000000004e-05, 5.9472000000001385e-05, 5.912500000000015e-05, 5.962499999999718e-05, 5.9306000000002024e-05, 5.9583999999997944e-05, 5.9556000000002274e-05, 5.9084000000000914e-05, 5.9707999999998596e-05, 5.963900000000022e-05, 5.962500000000065e-05, 5.997299999999789e-05, 5.947300000000086e-05, 5.9777999999999915e-05, 5.9263999999999845e-05, 5.963900000000022e-05, 5.962500000000065e-05, 5.911100000000058e-05, 5.9319999999998124e-05, 5.9542000000002704e-05, 5.940299999999954e-05, 5.9443999999998776e-05, 5.9305999999998554e-05, 5.98750000000009e-05, 5.947300000000086e-05, 5.9805999999999054e-05, 5.991699999999961e-05, 5.9138000000000246e-05, 6.0000000000001025e-05, 5.911099999999711e-05, 5.912500000000015e-05, 5.968099999999893e-05, 5.9250000000000275e-05, 5.9694000000002495e-05, 5.9820000000002094e-05, 5.9708000000002065e-05, 5.997299999999789e-05, 5.965300000000326e-05, 5.9806000000002524e-05, 5.9056000000001774e-05, 5.9943999999999276e-05, 5.9138000000000246e-05, 5.912500000000015e-05, 5.977700000000044e-05, 5.904099999999926e-05, 5.988900000000047e-05, 5.911100000000058e-05, 5.9943999999999276e-05, 5.9292000000002454e-05, 5.934700000000126e-05]</msg>
<status status="PASS" starttime="20201115 23:01:33.328" endtime="20201115 23:01:33.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.323" endtime="20201115 23:01:33.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.332" endtime="20201115 23:01:33.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.336" endtime="20201115 23:01:33.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.334" endtime="20201115 23:01:33.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.330" endtime="20201115 23:01:33.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.961" endtime="20201115 23:01:33.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.959" endtime="20201115 23:01:33.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.958" endtime="20201115 23:01:33.357"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.359" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.367" endtime="20201115 23:01:33.386"></status>
</kw>
<msg timestamp="20201115 23:01:33.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.366" endtime="20201115 23:01:33.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.387" endtime="20201115 23:01:33.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.390" endtime="20201115 23:01:33.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.363" endtime="20201115 23:01:33.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.361" endtime="20201115 23:01:33.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.399" endtime="20201115 23:01:33.685"></status>
</kw>
<msg timestamp="20201115 23:01:33.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024407694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024468208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.397" endtime="20201115 23:01:33.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024407694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024468208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.690" endtime="20201115 23:01:33.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.698" endtime="20201115 23:01:33.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.395" endtime="20201115 23:01:33.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.393" endtime="20201115 23:01:33.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.705" level="INFO">${RESULT} = [{'time': 0.024468208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0514000000001095e-05, 'source_diff': 6.0514000000001095e-05}, {'time': 0.024550222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:33.701" endtime="20201115 23:01:33.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.718" level="INFO">${ACCURACY} = {'diff': [6.0514000000001095e-05, 6.011100000000158e-05, 6.0457999999999346e-05, 6.0792000000000485e-05, 6.0207999999999096e-05, 6.0791999999997015e-05, 6.06949999999995e-05, 6.0291999999999984e-05, 6...</msg>
<status status="PASS" starttime="20201115 23:01:33.706" endtime="20201115 23:01:33.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.723" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.722" endtime="20201115 23:01:33.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.725" level="INFO">VALUE: [6.0514000000001095e-05, 6.011100000000158e-05, 6.0457999999999346e-05, 6.0792000000000485e-05, 6.0207999999999096e-05, 6.0791999999997015e-05, 6.06949999999995e-05, 6.0291999999999984e-05, 6.005499999999983e-05, 6.070900000000254e-05, 6.095899999999932e-05, 6.030500000000008e-05, 6.08750000000019e-05, 6.086100000000233e-05, 6.0707999999999596e-05, 6.0957999999999846e-05, 6.0485999999998485e-05, 6.012500000000115e-05, 6.012500000000115e-05, 6.0750000000001775e-05, 6.08750000000019e-05, 6.044499999999925e-05, 6.047300000000186e-05, 6.062500000000165e-05, 6.012500000000115e-05, 6.084699999999929e-05, 6.005499999999983e-05, 6.054099999999729e-05, 6.0028000000000165e-05, 6.0694000000000026e-05, 6.0985999999998985e-05, 6.06949999999995e-05, 6.0957999999999846e-05, 6.013899999999725e-05, 6.0457999999999346e-05, 6.0986000000002455e-05, 6.097299999999889e-05, 6.012499999999768e-05, 6.0291999999999984e-05, 6.002700000000069e-05, 6.005499999999983e-05, 6.03750000000014e-05, 6.061100000000208e-05, 6.012500000000115e-05, 6.0985999999998985e-05, 6.0971999999999416e-05, 6.0957999999999846e-05, 6.0971999999999416e-05, 6.061099999999861e-05, 6.095899999999932e-05]</msg>
<status status="PASS" starttime="20201115 23:01:33.724" endtime="20201115 23:01:33.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.719" endtime="20201115 23:01:33.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.728" endtime="20201115 23:01:33.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.732" endtime="20201115 23:01:33.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.730" endtime="20201115 23:01:33.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.726" endtime="20201115 23:01:33.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.360" endtime="20201115 23:01:33.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.358" endtime="20201115 23:01:33.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.357" endtime="20201115 23:01:33.753"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.755" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.763" endtime="20201115 23:01:33.781"></status>
</kw>
<msg timestamp="20201115 23:01:33.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.762" endtime="20201115 23:01:33.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.783" endtime="20201115 23:01:33.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.786" endtime="20201115 23:01:33.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.759" endtime="20201115 23:01:33.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.757" endtime="20201115 23:01:33.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.795" endtime="20201115 23:01:34.080"></status>
</kw>
<msg timestamp="20201115 23:01:34.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024042847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024104389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.793" endtime="20201115 23:01:34.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024042847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024104389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.085" endtime="20201115 23:01:34.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.093" endtime="20201115 23:01:34.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.791" endtime="20201115 23:01:34.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.789" endtime="20201115 23:01:34.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.100" level="INFO">${RESULT} = [{'time': 0.024104389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.154200000000123e-05, 'source_diff': 6.154200000000123e-05}, {'time': 0.024179389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:34.097" endtime="20201115 23:01:34.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.113" level="INFO">${ACCURACY} = {'diff': [6.154200000000123e-05, 6.195799999999738e-05, 6.113899999999825e-05, 6.161099999999961e-05, 6.147299999999939e-05, 6.177799999999845e-05, 6.194400000000128e-05, 6.152800000000166e-05, 6.1304...</msg>
<status status="PASS" starttime="20201115 23:01:34.101" endtime="20201115 23:01:34.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.118" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.117" endtime="20201115 23:01:34.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.120" level="INFO">VALUE: [6.154200000000123e-05, 6.195799999999738e-05, 6.113899999999825e-05, 6.161099999999961e-05, 6.147299999999939e-05, 6.177799999999845e-05, 6.194400000000128e-05, 6.152800000000166e-05, 6.130499999999761e-05, 6.104099999999779e-05, 6.169400000000103e-05, 6.165300000000179e-05, 6.172200000000017e-05, 6.132000000000012e-05, 6.186100000000333e-05, 6.132000000000012e-05, 6.120899999999957e-05, 6.145899999999982e-05, 6.113900000000172e-05, 6.195900000000032e-05, 6.112499999999868e-05, 6.15140000000021e-05, 6.112499999999868e-05, 6.162499999999918e-05, 6.195800000000085e-05, 6.141599999999817e-05, 6.129200000000098e-05, 6.172200000000017e-05, 6.145799999999688e-05, 6.112499999999868e-05, 6.182000000000062e-05, 6.120899999999957e-05, 6.163899999999875e-05, 6.129200000000098e-05, 6.187499999999943e-05, 6.162500000000265e-05, 6.159700000000004e-05, 6.129099999999804e-05, 6.1027999999997695e-05, 6.136099999999936e-05, 6.199999999999956e-05, 6.179199999999802e-05, 6.176399999999888e-05, 6.197200000000042e-05, 6.113900000000172e-05, 6.147299999999939e-05, 6.148699999999896e-05, 6.14300000000012e-05, 6.194400000000128e-05, 6.195799999999738e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.119" endtime="20201115 23:01:34.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.114" endtime="20201115 23:01:34.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.124" endtime="20201115 23:01:34.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.127" endtime="20201115 23:01:34.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.126" endtime="20201115 23:01:34.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.122" endtime="20201115 23:01:34.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.756" endtime="20201115 23:01:34.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.754" endtime="20201115 23:01:34.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.753" endtime="20201115 23:01:34.148"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.151" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.159" endtime="20201115 23:01:34.177"></status>
</kw>
<msg timestamp="20201115 23:01:34.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.158" endtime="20201115 23:01:34.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.179" endtime="20201115 23:01:34.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.181" endtime="20201115 23:01:34.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.155" endtime="20201115 23:01:34.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.153" endtime="20201115 23:01:34.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.190" endtime="20201115 23:01:34.480"></status>
</kw>
<msg timestamp="20201115 23:01:34.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024685333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024747694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.189" endtime="20201115 23:01:34.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024685333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024747694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.484" endtime="20201115 23:01:34.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.493" endtime="20201115 23:01:34.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.186" endtime="20201115 23:01:34.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.184" endtime="20201115 23:01:34.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.500" level="INFO">${RESULT} = [{'time': 0.024747694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236100000000036e-05, 'source_diff': 6.236100000000036e-05}, {'time': 0.024828694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:34.496" endtime="20201115 23:01:34.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.513" level="INFO">${ACCURACY} = {'diff': [6.236100000000036e-05, 6.263799999999681e-05, 6.29439999999988e-05, 6.277699999999997e-05, 6.270799999999813e-05, 6.277799999999945e-05, 6.237499999999993e-05, 6.297200000000142e-05, 6.26809...</msg>
<status status="PASS" starttime="20201115 23:01:34.501" endtime="20201115 23:01:34.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.518" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.516" endtime="20201115 23:01:34.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.520" level="INFO">VALUE: [6.236100000000036e-05, 6.263799999999681e-05, 6.29439999999988e-05, 6.277699999999997e-05, 6.270799999999813e-05, 6.277799999999945e-05, 6.237499999999993e-05, 6.297200000000142e-05, 6.268099999999846e-05, 6.244499999999778e-05, 6.230600000000155e-05, 6.215300000000229e-05, 6.262500000000018e-05, 6.263899999999975e-05, 6.279199999999902e-05, 6.22080000000011e-05, 6.231900000000165e-05, 6.268000000000246e-05, 6.295799999999838e-05, 6.231900000000165e-05, 6.236099999999689e-05, 6.227799999999895e-05, 6.20560000000013e-05, 6.20699999999974e-05, 6.204199999999827e-05, 6.237499999999993e-05, 6.262500000000018e-05, 6.266599999999942e-05, 6.229099999999904e-05, 6.222200000000067e-05, 6.287500000000043e-05, 6.258300000000147e-05, 6.25279999999992e-05, 6.237499999999993e-05, 6.282000000000162e-05, 6.287500000000043e-05, 6.211100000000011e-05, 6.212499999999968e-05, 6.245900000000082e-05, 6.295899999999785e-05, 6.297199999999795e-05, 6.295899999999785e-05, 6.29439999999988e-05, 6.254200000000223e-05, 6.245799999999788e-05, 6.231899999999818e-05, 6.205499999999836e-05, 6.220799999999763e-05, 6.297199999999795e-05, 6.247200000000092e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.519" endtime="20201115 23:01:34.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.514" endtime="20201115 23:01:34.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.523" endtime="20201115 23:01:34.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.526" endtime="20201115 23:01:34.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.525" endtime="20201115 23:01:34.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.521" endtime="20201115 23:01:34.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.151" endtime="20201115 23:01:34.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.149" endtime="20201115 23:01:34.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.148" endtime="20201115 23:01:34.548"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.550" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.559" endtime="20201115 23:01:34.577"></status>
</kw>
<msg timestamp="20201115 23:01:34.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.557" endtime="20201115 23:01:34.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.579" endtime="20201115 23:01:34.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.582" endtime="20201115 23:01:34.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.555" endtime="20201115 23:01:34.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.552" endtime="20201115 23:01:34.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.591" endtime="20201115 23:01:34.876"></status>
</kw>
<msg timestamp="20201115 23:01:34.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025704806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025768153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.589" endtime="20201115 23:01:34.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025704806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025768153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.881" endtime="20201115 23:01:34.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.889" endtime="20201115 23:01:34.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.586" endtime="20201115 23:01:34.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.585" endtime="20201115 23:01:34.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.896" level="INFO">${RESULT} = [{'time': 0.025768153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.334699999999832e-05, 'source_diff': 6.334699999999832e-05}, {'time': 0.025851181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:34.892" endtime="20201115 23:01:34.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.911" level="INFO">${ACCURACY} = {'diff': [6.334699999999832e-05, 6.373700000000121e-05, 6.322300000000114e-05, 6.381899999999968e-05, 6.37219999999987e-05, 6.331899999999918e-05, 6.340300000000007e-05, 6.363900000000075e-05, 6.38050...</msg>
<status status="PASS" starttime="20201115 23:01:34.897" endtime="20201115 23:01:34.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.915" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.914" endtime="20201115 23:01:34.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.918" level="INFO">VALUE: [6.334699999999832e-05, 6.373700000000121e-05, 6.322300000000114e-05, 6.381899999999968e-05, 6.37219999999987e-05, 6.331899999999918e-05, 6.340300000000007e-05, 6.363900000000075e-05, 6.380500000000011e-05, 6.390300000000057e-05, 6.347200000000192e-05, 6.397200000000242e-05, 6.365300000000032e-05, 6.331999999999866e-05, 6.372300000000164e-05, 6.341699999999964e-05, 6.362499999999771e-05, 6.315200000000035e-05, 6.377700000000097e-05, 6.331899999999918e-05, 6.331899999999918e-05, 6.387500000000143e-05, 6.362500000000118e-05, 6.330599999999909e-05, 6.387500000000143e-05, 6.345799999999888e-05, 6.400000000000156e-05, 6.312500000000068e-05, 6.362500000000118e-05, 6.398599999999852e-05, 6.327799999999995e-05, 6.340300000000007e-05, 6.347200000000192e-05, 6.312500000000068e-05, 6.366699999999989e-05, 6.336099999999789e-05, 6.387499999999796e-05, 6.383399999999873e-05, 6.35280000000002e-05, 6.32219999999982e-05, 6.395900000000232e-05, 6.367999999999999e-05, 6.379200000000002e-05, 6.388800000000153e-05, 6.37080000000026e-05, 6.347200000000192e-05, 6.312500000000068e-05, 6.330500000000308e-05, 6.305499999999936e-05, 6.372200000000217e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.916" endtime="20201115 23:01:34.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.912" endtime="20201115 23:01:34.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.921" endtime="20201115 23:01:34.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.925" endtime="20201115 23:01:34.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.923" endtime="20201115 23:01:34.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.920" endtime="20201115 23:01:34.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.551" endtime="20201115 23:01:34.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.549" endtime="20201115 23:01:34.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.548" endtime="20201115 23:01:34.946"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.948" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.957" endtime="20201115 23:01:34.975"></status>
</kw>
<msg timestamp="20201115 23:01:34.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.955" endtime="20201115 23:01:34.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.976" endtime="20201115 23:01:34.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.979" endtime="20201115 23:01:34.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.952" endtime="20201115 23:01:34.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.950" endtime="20201115 23:01:34.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.988" endtime="20201115 23:01:35.275"></status>
</kw>
<msg timestamp="20201115 23:01:35.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024642694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.987" endtime="20201115 23:01:35.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024642694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.279" endtime="20201115 23:01:35.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.287" endtime="20201115 23:01:35.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.984" endtime="20201115 23:01:35.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.982" endtime="20201115 23:01:35.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.294" level="INFO">${RESULT} = [{'time': 0.024706958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.426400000000138e-05, 'source_diff': 6.426400000000138e-05}, {'time': 0.024788986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:35.291" endtime="20201115 23:01:35.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.308" level="INFO">${ACCURACY} = {'diff': [6.426400000000138e-05, 6.430500000000061e-05, 6.491699999999767e-05, 6.463899999999828e-05, 6.461099999999914e-05, 6.429200000000052e-05, 6.47219999999997e-05, 6.502799999999823e-05, 6.49729...</msg>
<status status="PASS" starttime="20201115 23:01:35.295" endtime="20201115 23:01:35.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.313" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.312" endtime="20201115 23:01:35.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.316" level="INFO">VALUE: [6.426400000000138e-05, 6.430500000000061e-05, 6.491699999999767e-05, 6.463899999999828e-05, 6.461099999999914e-05, 6.429200000000052e-05, 6.47219999999997e-05, 6.502799999999823e-05, 6.497299999999942e-05, 6.481900000000068e-05, 6.404200000000027e-05, 6.404100000000079e-05, 6.487499999999896e-05, 6.412500000000168e-05, 6.413900000000125e-05, 6.445799999999988e-05, 6.412500000000168e-05, 6.462499999999871e-05, 6.480600000000059e-05, 6.486099999999939e-05, 6.445899999999935e-05, 6.479200000000102e-05, 6.404200000000027e-05, 6.472200000000317e-05, 6.463799999999881e-05, 6.412499999999821e-05, 6.49440000000008e-05, 6.499999999999909e-05, 6.406899999999993e-05, 6.411099999999864e-05, 6.429200000000052e-05, 6.42219999999992e-05, 6.43890000000015e-05, 6.480600000000059e-05, 6.438899999999803e-05, 6.416600000000092e-05, 6.495899999999985e-05, 6.447199999999945e-05, 6.413900000000125e-05, 6.495800000000038e-05, 6.463899999999828e-05, 6.462500000000218e-05, 6.430500000000061e-05, 6.470800000000013e-05, 6.44440000000003e-05, 6.477800000000145e-05, 6.404200000000027e-05, 6.437500000000193e-05, 6.463899999999828e-05, 6.450000000000206e-05]</msg>
<status status="PASS" starttime="20201115 23:01:35.314" endtime="20201115 23:01:35.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.309" endtime="20201115 23:01:35.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.320" endtime="20201115 23:01:35.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.324" endtime="20201115 23:01:35.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.322" endtime="20201115 23:01:35.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.317" endtime="20201115 23:01:35.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.949" endtime="20201115 23:01:35.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.947" endtime="20201115 23:01:35.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.946" endtime="20201115 23:01:35.348"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.353" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.371" endtime="20201115 23:01:35.392"></status>
</kw>
<msg timestamp="20201115 23:01:35.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.368" endtime="20201115 23:01:35.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.395" endtime="20201115 23:01:35.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.401" endtime="20201115 23:01:35.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.362" endtime="20201115 23:01:35.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.358" endtime="20201115 23:01:35.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.420" endtime="20201115 23:01:35.708"></status>
</kw>
<msg timestamp="20201115 23:01:35.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041596514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041661694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.417" endtime="20201115 23:01:35.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041596514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041661694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.712" endtime="20201115 23:01:35.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.722" endtime="20201115 23:01:35.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.411" endtime="20201115 23:01:35.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.407" endtime="20201115 23:01:35.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.728" level="INFO">${RESULT} = [{'time': 0.041661694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.517999999999802e-05, 'source_diff': 6.517999999999802e-05}, {'time': 0.041749708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:35.725" endtime="20201115 23:01:35.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.742" level="INFO">${ACCURACY} = {'diff': [6.517999999999802e-05, 6.588900000000647e-05, 6.531900000000118e-05, 6.568000000000546e-05, 6.595799999999791e-05, 6.582000000000116e-05, 6.587499999999996e-05, 6.577800000000245e-05, 6.5902...</msg>
<status status="PASS" starttime="20201115 23:01:35.730" endtime="20201115 23:01:35.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.747" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.746" endtime="20201115 23:01:35.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.749" level="INFO">VALUE: [6.517999999999802e-05, 6.588900000000647e-05, 6.531900000000118e-05, 6.568000000000546e-05, 6.595799999999791e-05, 6.582000000000116e-05, 6.587499999999996e-05, 6.577800000000245e-05, 6.59029999999991e-05, 6.547299999999645e-05, 6.595900000000432e-05, 6.581900000000168e-05, 6.536099999999989e-05, 6.544400000000478e-05, 6.513899999999878e-05, 6.597199999999748e-05, 6.511099999999964e-05, 6.579200000000202e-05, 6.50700000000004e-05, 6.538899999999903e-05, 6.595800000000485e-05, 6.563899999999928e-05, 6.599999999999662e-05, 6.512500000000615e-05, 6.598599999999705e-05, 6.598599999999705e-05, 6.549999999999612e-05, 6.512499999999921e-05, 6.545799999999741e-05, 6.511099999999964e-05, 6.595799999999791e-05, 6.527800000000195e-05, 6.554200000000177e-05, 6.537499999999946e-05, 6.595899999999738e-05, 6.513900000000572e-05, 6.529200000000152e-05, 6.520900000000357e-05, 6.511199999999912e-05, 6.550000000000306e-05, 6.54159999999987e-05, 6.533300000000075e-05, 6.552799999999526e-05, 6.522199999999673e-05, 6.597300000000389e-05, 6.513899999999878e-05, 6.582000000000116e-05, 6.509700000000007e-05, 6.5195000000004e-05, 6.562499999999971e-05]</msg>
<status status="PASS" starttime="20201115 23:01:35.748" endtime="20201115 23:01:35.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.743" endtime="20201115 23:01:35.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.753" endtime="20201115 23:01:35.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.756" endtime="20201115 23:01:35.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.754" endtime="20201115 23:01:35.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.751" endtime="20201115 23:01:35.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.355" endtime="20201115 23:01:35.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.351" endtime="20201115 23:01:35.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.349" endtime="20201115 23:01:35.777"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.779" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.788" endtime="20201115 23:01:35.805"></status>
</kw>
<msg timestamp="20201115 23:01:35.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.786" endtime="20201115 23:01:35.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.807" endtime="20201115 23:01:35.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.809" endtime="20201115 23:01:35.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.784" endtime="20201115 23:01:35.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.781" endtime="20201115 23:01:35.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.818" endtime="20201115 23:01:36.103"></status>
</kw>
<msg timestamp="20201115 23:01:36.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024338667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024404847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.817" endtime="20201115 23:01:36.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024338667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024404847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.107" endtime="20201115 23:01:36.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.116" endtime="20201115 23:01:36.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.814" endtime="20201115 23:01:36.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.812" endtime="20201115 23:01:36.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.124" level="INFO">${RESULT} = [{'time': 0.024404847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.617999999999902e-05, 'source_diff': 6.617999999999902e-05}, {'time': 0.024490833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:36.120" endtime="20201115 23:01:36.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.137" level="INFO">${ACCURACY} = {'diff': [6.617999999999902e-05, 6.620800000000163e-05, 6.645799999999841e-05, 6.629199999999905e-05, 6.638900000000003e-05, 6.695799999999891e-05, 6.613899999999978e-05, 6.616599999999945e-05, 6.6306...</msg>
<status status="PASS" starttime="20201115 23:01:36.125" endtime="20201115 23:01:36.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.142" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.141" endtime="20201115 23:01:36.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.144" level="INFO">VALUE: [6.617999999999902e-05, 6.620800000000163e-05, 6.645799999999841e-05, 6.629199999999905e-05, 6.638900000000003e-05, 6.695799999999891e-05, 6.613899999999978e-05, 6.616599999999945e-05, 6.630600000000209e-05, 6.67229999999977e-05, 6.630600000000209e-05, 6.652799999999973e-05, 6.620800000000163e-05, 6.687500000000096e-05, 6.666699999999942e-05, 6.662500000000071e-05, 6.611100000000064e-05, 6.615299999999935e-05, 6.662500000000071e-05, 6.627799999999948e-05, 6.688900000000053e-05, 6.694499999999881e-05, 6.695900000000185e-05, 6.697300000000142e-05, 6.661200000000062e-05, 6.636100000000089e-05, 6.654099999999982e-05, 6.62220000000012e-05, 6.627799999999948e-05, 6.605500000000236e-05, 6.638900000000003e-05, 6.645799999999841e-05, 6.687500000000096e-05, 6.67359999999978e-05, 6.694499999999881e-05, 6.612500000000021e-05, 6.613800000000031e-05, 6.680499999999964e-05, 6.619399999999859e-05, 6.688900000000053e-05, 6.663900000000028e-05, 6.611100000000064e-05, 6.647200000000145e-05, 6.698600000000152e-05, 6.697200000000195e-05, 6.613899999999978e-05, 6.697299999999795e-05, 6.612500000000021e-05, 6.695899999999838e-05, 6.677799999999998e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.143" endtime="20201115 23:01:36.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.138" endtime="20201115 23:01:36.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.148" endtime="20201115 23:01:36.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.151" endtime="20201115 23:01:36.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.149" endtime="20201115 23:01:36.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.146" endtime="20201115 23:01:36.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.780" endtime="20201115 23:01:36.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.778" endtime="20201115 23:01:36.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.777" endtime="20201115 23:01:36.172"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.174" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.183" endtime="20201115 23:01:36.202"></status>
</kw>
<msg timestamp="20201115 23:01:36.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.181" endtime="20201115 23:01:36.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.204" endtime="20201115 23:01:36.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.206" endtime="20201115 23:01:36.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.178" endtime="20201115 23:01:36.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.176" endtime="20201115 23:01:36.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.216" endtime="20201115 23:01:36.501"></status>
</kw>
<msg timestamp="20201115 23:01:36.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024974194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025041167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.214" endtime="20201115 23:01:36.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024974194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025041167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.506" endtime="20201115 23:01:36.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.515" endtime="20201115 23:01:36.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.211" endtime="20201115 23:01:36.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.209" endtime="20201115 23:01:36.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.522" level="INFO">${RESULT} = [{'time': 0.025041167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.697299999999795e-05, 'source_diff': 6.697299999999795e-05}, {'time': 0.025124181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:36.518" endtime="20201115 23:01:36.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.536" level="INFO">${ACCURACY} = {'diff': [6.697299999999795e-05, 6.795899999999938e-05, 6.787500000000196e-05, 6.754100000000082e-05, 6.716600000000045e-05, 6.780500000000064e-05, 6.723600000000177e-05, 6.762500000000171e-05, 6.7971...</msg>
<status status="PASS" starttime="20201115 23:01:36.523" endtime="20201115 23:01:36.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.541" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.540" endtime="20201115 23:01:36.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.543" level="INFO">VALUE: [6.697299999999795e-05, 6.795899999999938e-05, 6.787500000000196e-05, 6.754100000000082e-05, 6.716600000000045e-05, 6.780500000000064e-05, 6.723600000000177e-05, 6.762500000000171e-05, 6.797199999999948e-05, 6.730599999999962e-05, 6.766700000000042e-05, 6.797199999999948e-05, 6.780600000000012e-05, 6.78619999999984e-05, 6.734699999999885e-05, 6.706899999999946e-05, 6.766599999999748e-05, 6.769499999999956e-05, 6.713899999999731e-05, 6.795799999999991e-05, 6.713900000000078e-05, 6.732000000000266e-05, 6.706999999999894e-05, 6.737500000000146e-05, 6.797299999999895e-05, 6.733299999999928e-05, 6.737500000000146e-05, 6.744499999999931e-05, 6.763799999999834e-05, 6.713900000000078e-05, 6.77909999999976e-05, 6.722199999999873e-05, 6.715300000000035e-05, 6.762500000000171e-05, 6.712500000000121e-05, 6.795799999999991e-05, 6.713899999999731e-05, 6.762500000000171e-05, 6.787499999999849e-05, 6.772199999999923e-05, 6.766700000000042e-05, 6.780500000000064e-05, 6.722199999999873e-05, 6.713899999999731e-05, 6.794400000000034e-05, 6.766700000000042e-05, 6.730599999999962e-05, 6.75420000000003e-05, 6.788899999999806e-05, 6.763899999999781e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.542" endtime="20201115 23:01:36.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.537" endtime="20201115 23:01:36.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.547" endtime="20201115 23:01:36.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.550" endtime="20201115 23:01:36.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.548" endtime="20201115 23:01:36.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.545" endtime="20201115 23:01:36.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.175" endtime="20201115 23:01:36.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.173" endtime="20201115 23:01:36.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.172" endtime="20201115 23:01:36.571"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.574" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.582" endtime="20201115 23:01:36.600"></status>
</kw>
<msg timestamp="20201115 23:01:36.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.580" endtime="20201115 23:01:36.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.602" endtime="20201115 23:01:36.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.605" endtime="20201115 23:01:36.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.578" endtime="20201115 23:01:36.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.576" endtime="20201115 23:01:36.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.614" endtime="20201115 23:01:36.915"></status>
</kw>
<msg timestamp="20201115 23:01:36.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024111931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024180597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.612" endtime="20201115 23:01:36.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024111931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024180597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.924" endtime="20201115 23:01:36.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.943" endtime="20201115 23:01:36.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.610" endtime="20201115 23:01:36.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.608" endtime="20201115 23:01:36.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.954" level="INFO">${RESULT} = [{'time': 0.024180597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.866600000000195e-05, 'source_diff': 6.866600000000195e-05}, {'time': 0.024262625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:36.950" endtime="20201115 23:01:36.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.968" level="INFO">${ACCURACY} = {'diff': [6.866600000000195e-05, 6.801399999999819e-05, 6.830600000000062e-05, 6.879199999999808e-05, 6.838900000000203e-05, 6.848599999999955e-05, 6.813900000000178e-05, 6.895900000000038e-05, 6.8320...</msg>
<status status="PASS" starttime="20201115 23:01:36.955" endtime="20201115 23:01:36.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.972" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.971" endtime="20201115 23:01:36.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.975" level="INFO">VALUE: [6.866600000000195e-05, 6.801399999999819e-05, 6.830600000000062e-05, 6.879199999999808e-05, 6.838900000000203e-05, 6.848599999999955e-05, 6.813900000000178e-05, 6.895900000000038e-05, 6.832000000000019e-05, 6.802700000000175e-05, 6.804099999999785e-05, 6.827800000000148e-05, 6.813900000000178e-05, 6.811100000000264e-05, 6.851400000000216e-05, 6.895799999999744e-05, 6.895800000000091e-05, 6.877800000000198e-05, 6.866699999999795e-05, 6.847299999999945e-05, 6.812500000000221e-05, 6.82909999999981e-05, 6.838799999999909e-05, 6.827699999999853e-05, 6.888900000000253e-05, 6.827800000000148e-05, 6.888899999999906e-05, 6.866700000000142e-05, 6.898600000000005e-05, 6.815300000000135e-05, 6.895800000000091e-05, 6.886099999999992e-05, 6.825000000000234e-05, 6.877799999999851e-05, 6.805500000000089e-05, 6.888800000000306e-05, 6.845800000000041e-05, 6.881899999999774e-05, 6.855600000000087e-05, 6.873600000000327e-05, 6.822199999999973e-05, 6.816700000000092e-05, 6.837499999999899e-05, 6.805600000000037e-05, 6.852799999999826e-05, 6.87229999999997e-05, 6.879200000000155e-05, 6.840199999999866e-05, 6.87770000000025e-05, 6.823600000000277e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.973" endtime="20201115 23:01:36.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.969" endtime="20201115 23:01:36.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.978" endtime="20201115 23:01:36.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.981" endtime="20201115 23:01:37.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.980" endtime="20201115 23:01:37.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.976" endtime="20201115 23:01:37.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.574" endtime="20201115 23:01:37.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.572" endtime="20201115 23:01:37.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.572" endtime="20201115 23:01:37.002"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.005" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.014" endtime="20201115 23:01:37.032"></status>
</kw>
<msg timestamp="20201115 23:01:37.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.012" endtime="20201115 23:01:37.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.033" endtime="20201115 23:01:37.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.036" endtime="20201115 23:01:37.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.009" endtime="20201115 23:01:37.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.007" endtime="20201115 23:01:37.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.045" endtime="20201115 23:01:37.331"></status>
</kw>
<msg timestamp="20201115 23:01:37.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025025528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.043" endtime="20201115 23:01:37.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025025528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.335" endtime="20201115 23:01:37.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.344" endtime="20201115 23:01:37.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.041" endtime="20201115 23:01:37.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.039" endtime="20201115 23:01:37.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.351" level="INFO">${RESULT} = [{'time': 0.025025528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.936099999999695e-05, 'source_diff': 6.936099999999695e-05}, {'time': 0.025107556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:37.347" endtime="20201115 23:01:37.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.364" level="INFO">${ACCURACY} = {'diff': [6.936099999999695e-05, 6.915299999999888e-05, 6.97360000000008e-05, 6.994400000000234e-05, 6.965199999999991e-05, 6.940199999999966e-05, 6.980500000000264e-05, 6.905499999999842e-05, 6.97080...</msg>
<status status="PASS" starttime="20201115 23:01:37.352" endtime="20201115 23:01:37.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.369" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.368" endtime="20201115 23:01:37.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.371" level="INFO">VALUE: [6.936099999999695e-05, 6.915299999999888e-05, 6.97360000000008e-05, 6.994400000000234e-05, 6.965199999999991e-05, 6.940199999999966e-05, 6.980500000000264e-05, 6.905499999999842e-05, 6.970800000000166e-05, 6.995800000000191e-05, 6.998600000000105e-05, 6.945800000000141e-05, 6.962500000000024e-05, 6.911100000000017e-05, 6.980599999999865e-05, 6.977799999999951e-05, 6.945799999999794e-05, 6.997200000000148e-05, 6.930500000000214e-05, 6.986099999999745e-05, 6.913899999999931e-05, 6.980599999999865e-05, 6.972200000000123e-05, 6.979199999999908e-05, 6.988900000000006e-05, 6.965299999999938e-05, 6.929200000000205e-05, 6.920899999999716e-05, 7.001400000000019e-05, 6.947200000000098e-05, 6.913899999999931e-05, 6.96109999999972e-05, 6.947199999999751e-05, 7.00420000000028e-05, 6.968099999999852e-05, 6.90970000000006e-05, 6.948600000000055e-05, 6.979199999999908e-05, 6.90970000000006e-05, 6.970900000000113e-05, 6.997300000000095e-05, 6.913899999999931e-05, 6.963800000000034e-05, 6.963899999999981e-05, 6.995799999999844e-05, 6.944400000000184e-05, 6.997199999999801e-05, 6.927800000000248e-05, 6.937499999999999e-05, 6.932000000000119e-05]</msg>
<status status="PASS" starttime="20201115 23:01:37.370" endtime="20201115 23:01:37.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.365" endtime="20201115 23:01:37.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.374" endtime="20201115 23:01:37.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.378" endtime="20201115 23:01:37.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.376" endtime="20201115 23:01:37.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.373" endtime="20201115 23:01:37.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.005" endtime="20201115 23:01:37.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.004" endtime="20201115 23:01:37.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.003" endtime="20201115 23:01:37.399"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.402" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.410" endtime="20201115 23:01:37.428"></status>
</kw>
<msg timestamp="20201115 23:01:37.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.408" endtime="20201115 23:01:37.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.429" endtime="20201115 23:01:37.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.432" endtime="20201115 23:01:37.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.406" endtime="20201115 23:01:37.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.404" endtime="20201115 23:01:37.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.441" endtime="20201115 23:01:37.728"></status>
</kw>
<msg timestamp="20201115 23:01:37.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024803194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024873889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.439" endtime="20201115 23:01:37.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024803194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024873889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.732" endtime="20201115 23:01:37.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.740" endtime="20201115 23:01:37.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.437" endtime="20201115 23:01:37.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.435" endtime="20201115 23:01:37.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.747" level="INFO">${RESULT} = [{'time': 0.024873889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.069499999999909e-05, 'source_diff': 7.069499999999909e-05}, {'time': 0.024957917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:37.744" endtime="20201115 23:01:37.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.760" level="INFO">${ACCURACY} = {'diff': [7.069499999999909e-05, 7.073599999999833e-05, 7.062499999999777e-05, 7.044499999999884e-05, 7.029199999999958e-05, 7.055499999999992e-05, 7.022199999999826e-05, 7.008299999999856e-05, 7.0624...</msg>
<status status="PASS" starttime="20201115 23:01:37.748" endtime="20201115 23:01:37.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.765" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.764" endtime="20201115 23:01:37.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.767" level="INFO">VALUE: [7.069499999999909e-05, 7.073599999999833e-05, 7.062499999999777e-05, 7.044499999999884e-05, 7.029199999999958e-05, 7.055499999999992e-05, 7.022199999999826e-05, 7.008299999999856e-05, 7.062499999999777e-05, 7.015299999999988e-05, 7.012500000000074e-05, 7.030599999999915e-05, 7.038900000000056e-05, 7.07360000000018e-05, 7.037500000000099e-05, 7.094499999999934e-05, 7.097299999999848e-05, 7.081899999999974e-05, 7.004099999999985e-05, 7.069399999999962e-05, 7.031899999999924e-05, 7.056999999999897e-05, 7.087499999999802e-05, 7.047199999999851e-05, 7.082000000000269e-05, 7.020899999999816e-05, 7.044499999999884e-05, 7.081999999999922e-05, 7.038900000000056e-05, 7.094500000000281e-05, 7.02910000000001e-05, 7.02360000000013e-05, 7.080500000000017e-05, 7.036100000000142e-05, 7.013900000000031e-05, 7.045799999999894e-05, 7.080599999999965e-05, 7.054199999999983e-05, 7.00420000000028e-05, 7.015299999999988e-05, 7.095899999999891e-05, 7.076399999999747e-05, 7.056900000000296e-05, 7.011100000000117e-05, 7.054099999999688e-05, 7.038900000000056e-05, 7.079200000000008e-05, 7.070799999999919e-05, 7.094399999999987e-05, 7.080599999999965e-05]</msg>
<status status="PASS" starttime="20201115 23:01:37.766" endtime="20201115 23:01:37.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.761" endtime="20201115 23:01:37.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.771" endtime="20201115 23:01:37.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.774" endtime="20201115 23:01:37.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.773" endtime="20201115 23:01:37.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.769" endtime="20201115 23:01:37.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.402" endtime="20201115 23:01:37.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.400" endtime="20201115 23:01:37.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.400" endtime="20201115 23:01:37.795"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.798" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.806" endtime="20201115 23:01:37.825"></status>
</kw>
<msg timestamp="20201115 23:01:37.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.805" endtime="20201115 23:01:37.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.827" endtime="20201115 23:01:37.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.830" endtime="20201115 23:01:37.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.802" endtime="20201115 23:01:37.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.800" endtime="20201115 23:01:37.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.839" endtime="20201115 23:01:38.125"></status>
</kw>
<msg timestamp="20201115 23:01:38.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025205847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025276875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.837" endtime="20201115 23:01:38.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025205847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025276875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.129" endtime="20201115 23:01:38.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.137" endtime="20201115 23:01:38.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.835" endtime="20201115 23:01:38.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.833" endtime="20201115 23:01:38.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.144" level="INFO">${RESULT} = [{'time': 0.025276875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.102800000000076e-05, 'source_diff': 7.102800000000076e-05}, {'time': 0.025360903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:38.140" endtime="20201115 23:01:38.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.158" level="INFO">${ACCURACY} = {'diff': [7.102800000000076e-05, 7.163900000000181e-05, 7.201299999999924e-05, 7.195899999999991e-05, 7.151399999999822e-05, 7.113900000000131e-05, 7.145900000000288e-05, 7.144400000000037e-05, 7.1500...</msg>
<status status="PASS" starttime="20201115 23:01:38.145" endtime="20201115 23:01:38.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.163" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.162" endtime="20201115 23:01:38.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.166" level="INFO">VALUE: [7.102800000000076e-05, 7.163900000000181e-05, 7.201299999999924e-05, 7.195899999999991e-05, 7.151399999999822e-05, 7.113900000000131e-05, 7.145900000000288e-05, 7.144400000000037e-05, 7.150000000000212e-05, 7.184699999999988e-05, 7.186099999999945e-05, 7.112500000000174e-05, 7.180600000000065e-05, 7.172199999999976e-05, 7.113900000000131e-05, 7.145899999999941e-05, 7.195899999999991e-05, 7.118000000000055e-05, 7.147199999999951e-05, 7.159699999999963e-05, 7.144400000000037e-05, 7.112500000000174e-05, 7.115300000000088e-05, 7.18049999999977e-05, 7.173599999999933e-05, 7.195800000000044e-05, 7.118000000000055e-05, 7.147199999999951e-05, 7.113900000000131e-05, 7.127800000000101e-05, 7.169500000000009e-05, 7.13049999999972e-05, 7.120799999999969e-05, 7.126399999999797e-05, 7.137499999999852e-05, 7.148599999999908e-05, 7.163900000000181e-05, 7.197200000000001e-05, 7.129200000000058e-05, 7.15560000000004e-05, 7.136100000000242e-05, 7.148600000000255e-05, 7.175000000000237e-05, 7.15690000000005e-05, 7.170800000000019e-05, 7.177699999999856e-05, 7.137499999999852e-05, 7.112499999999827e-05, 7.162499999999877e-05, 7.184799999999936e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.164" endtime="20201115 23:01:38.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.159" endtime="20201115 23:01:38.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.169" endtime="20201115 23:01:38.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.173" endtime="20201115 23:01:38.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.171" endtime="20201115 23:01:38.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.168" endtime="20201115 23:01:38.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.798" endtime="20201115 23:01:38.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.797" endtime="20201115 23:01:38.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.796" endtime="20201115 23:01:38.194"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.204" endtime="20201115 23:01:38.223"></status>
</kw>
<msg timestamp="20201115 23:01:38.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.203" endtime="20201115 23:01:38.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.225" endtime="20201115 23:01:38.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.227" endtime="20201115 23:01:38.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.200" endtime="20201115 23:01:38.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.198" endtime="20201115 23:01:38.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.236" endtime="20201115 23:01:38.521"></status>
</kw>
<msg timestamp="20201115 23:01:38.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024704097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024776694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.235" endtime="20201115 23:01:38.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024704097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024776694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.526" endtime="20201115 23:01:38.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.534" endtime="20201115 23:01:38.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.232" endtime="20201115 23:01:38.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.230" endtime="20201115 23:01:38.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.541" level="INFO">${RESULT} = [{'time': 0.024776694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.259699999999716e-05, 'source_diff': 7.259699999999716e-05}, {'time': 0.024862694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:38.538" endtime="20201115 23:01:38.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.556" level="INFO">${ACCURACY} = {'diff': [7.259699999999716e-05, 7.245800000000094e-05, 7.212499999999927e-05, 7.244400000000137e-05, 7.26110000000002e-05, 7.297199999999754e-05, 7.280600000000165e-05, 7.286100000000045e-05, 7.26389...</msg>
<status status="PASS" starttime="20201115 23:01:38.543" endtime="20201115 23:01:38.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.560" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.559" endtime="20201115 23:01:38.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.563" level="INFO">VALUE: [7.259699999999716e-05, 7.245800000000094e-05, 7.212499999999927e-05, 7.244400000000137e-05, 7.26110000000002e-05, 7.297199999999754e-05, 7.280600000000165e-05, 7.286100000000045e-05, 7.263899999999934e-05, 7.297200000000101e-05, 7.229199999999811e-05, 7.291599999999926e-05, 7.263900000000281e-05, 7.248600000000008e-05, 7.280500000000217e-05, 7.204099999999838e-05, 7.204100000000185e-05, 7.268100000000152e-05, 7.229200000000158e-05, 7.273600000000033e-05, 7.213900000000231e-05, 7.215299999999841e-05, 7.212499999999927e-05, 7.226399999999897e-05, 7.206899999999752e-05, 7.220900000000016e-05, 7.229099999999863e-05, 7.2069000000001e-05, 7.256899999999802e-05, 7.25690000000015e-05, 7.249999999999965e-05, 7.20560000000009e-05, 7.283399999999732e-05, 7.212499999999927e-05, 7.262499999999977e-05, 7.297300000000048e-05, 7.213900000000231e-05, 7.227800000000201e-05, 7.219400000000112e-05, 7.297200000000101e-05, 7.218099999999755e-05, 7.295799999999797e-05, 7.245800000000094e-05, 7.248600000000008e-05, 7.263899999999934e-05, 7.301399999999972e-05, 7.245899999999694e-05, 7.245900000000041e-05, 7.215199999999894e-05, 7.279099999999913e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.561" endtime="20201115 23:01:38.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.557" endtime="20201115 23:01:38.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.566" endtime="20201115 23:01:38.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.569" endtime="20201115 23:01:38.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.568" endtime="20201115 23:01:38.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.564" endtime="20201115 23:01:38.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.197" endtime="20201115 23:01:38.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.195" endtime="20201115 23:01:38.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.194" endtime="20201115 23:01:38.590"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.593" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.601" endtime="20201115 23:01:38.620"></status>
</kw>
<msg timestamp="20201115 23:01:38.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.599" endtime="20201115 23:01:38.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.621" endtime="20201115 23:01:38.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.624" endtime="20201115 23:01:38.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.597" endtime="20201115 23:01:38.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.595" endtime="20201115 23:01:38.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.633" endtime="20201115 23:01:38.918"></status>
</kw>
<msg timestamp="20201115 23:01:38.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024246625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024319986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.631" endtime="20201115 23:01:38.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024246625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024319986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.923" endtime="20201115 23:01:38.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.931" endtime="20201115 23:01:38.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.629" endtime="20201115 23:01:38.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.627" endtime="20201115 23:01:38.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.938" level="INFO">${RESULT} = [{'time': 0.024319986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.336099999999748e-05, 'source_diff': 7.336099999999748e-05}, {'time': 0.024411, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:38.935" endtime="20201115 23:01:38.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.951" level="INFO">${ACCURACY} = {'diff': [7.336099999999748e-05, 7.363900000000034e-05, 7.329200000000258e-05, 7.305599999999843e-05, 7.355599999999893e-05, 7.390300000000016e-05, 7.313899999999984e-05, 7.36379999999974e-05, 7.31250...</msg>
<status status="PASS" starttime="20201115 23:01:38.939" endtime="20201115 23:01:38.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.956" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.955" endtime="20201115 23:01:38.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.959" level="INFO">VALUE: [7.336099999999748e-05, 7.363900000000034e-05, 7.329200000000258e-05, 7.305599999999843e-05, 7.355599999999893e-05, 7.390300000000016e-05, 7.313899999999984e-05, 7.36379999999974e-05, 7.312500000000027e-05, 7.313899999999984e-05, 7.383299999999884e-05, 7.354099999999988e-05, 7.387499999999755e-05, 7.330599999999868e-05, 7.305599999999843e-05, 7.337500000000052e-05, 7.373599999999786e-05, 7.372300000000123e-05, 7.363900000000034e-05, 7.362500000000077e-05, 7.365200000000044e-05, 7.365299999999991e-05, 7.39439999999994e-05, 7.395800000000244e-05, 7.380599999999918e-05, 7.351400000000022e-05, 7.368100000000252e-05, 7.363900000000034e-05, 7.367999999999958e-05, 7.36249999999973e-05, 7.395899999999844e-05, 7.379200000000308e-05, 7.3069000000002e-05, 7.384699999999841e-05, 7.379100000000013e-05, 7.388900000000059e-05, 7.380599999999918e-05, 7.30560000000019e-05, 7.370800000000219e-05, 7.401400000000072e-05, 7.331999999999825e-05, 7.384699999999841e-05, 7.395900000000191e-05, 7.347300000000098e-05, 7.362500000000077e-05, 7.380500000000317e-05, 7.304099999999938e-05, 7.355499999999945e-05, 7.354199999999936e-05, 7.319399999999865e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.957" endtime="20201115 23:01:38.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.952" endtime="20201115 23:01:38.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.962" endtime="20201115 23:01:38.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.965" endtime="20201115 23:01:38.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.964" endtime="20201115 23:01:38.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.960" endtime="20201115 23:01:38.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.593" endtime="20201115 23:01:38.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.592" endtime="20201115 23:01:38.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.591" endtime="20201115 23:01:38.986"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.988" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.997" endtime="20201115 23:01:39.015"></status>
</kw>
<msg timestamp="20201115 23:01:39.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.995" endtime="20201115 23:01:39.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.016" endtime="20201115 23:01:39.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.019" endtime="20201115 23:01:39.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.993" endtime="20201115 23:01:39.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.991" endtime="20201115 23:01:39.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.028" endtime="20201115 23:01:39.314"></status>
</kw>
<msg timestamp="20201115 23:01:39.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024154625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.026" endtime="20201115 23:01:39.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024154625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.318" endtime="20201115 23:01:39.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.326" endtime="20201115 23:01:39.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.024" endtime="20201115 23:01:39.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.022" endtime="20201115 23:01:39.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.333" level="INFO">${RESULT} = [{'time': 0.024228819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.419399999999965e-05, 'source_diff': 7.419399999999965e-05}, {'time': 0.024316819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:39.330" endtime="20201115 23:01:39.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.347" level="INFO">${ACCURACY} = {'diff': [7.419399999999965e-05, 7.418000000000008e-05, 7.43050000000002e-05, 7.422200000000226e-05, 7.413899999999737e-05, 7.416699999999998e-05, 7.495799999999997e-05, 7.480600000000018e-05, 7.48890...</msg>
<status status="PASS" starttime="20201115 23:01:39.334" endtime="20201115 23:01:39.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.352" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.351" endtime="20201115 23:01:39.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.354" level="INFO">VALUE: [7.419399999999965e-05, 7.418000000000008e-05, 7.43050000000002e-05, 7.422200000000226e-05, 7.413899999999737e-05, 7.416699999999998e-05, 7.495799999999997e-05, 7.480600000000018e-05, 7.488900000000159e-05, 7.412500000000127e-05, 7.412500000000127e-05, 7.495899999999944e-05, 7.480499999999723e-05, 7.470799999999972e-05, 7.44439999999999e-05, 7.429200000000011e-05, 7.422200000000226e-05, 7.438900000000109e-05, 7.487500000000202e-05, 7.429200000000011e-05, 7.472199999999929e-05, 7.437500000000152e-05, 7.487500000000202e-05, 7.46249999999983e-05, 7.487499999999855e-05, 7.490300000000116e-05, 7.433299999999934e-05, 7.455500000000045e-05, 7.49029999999977e-05, 7.413900000000084e-05, 7.413900000000084e-05, 7.480600000000018e-05, 7.422199999999879e-05, 7.413900000000084e-05, 7.480600000000018e-05, 7.418099999999955e-05, 7.449999999999818e-05, 7.498599999999911e-05, 7.48050000000007e-05, 7.422199999999879e-05, 7.41249999999978e-05, 7.423600000000183e-05, 7.45699999999995e-05, 7.470900000000266e-05, 7.462500000000177e-05, 7.462500000000177e-05, 7.463900000000134e-05, 7.431899999999977e-05, 7.422199999999879e-05, 7.46249999999983e-05]</msg>
<status status="PASS" starttime="20201115 23:01:39.353" endtime="20201115 23:01:39.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.348" endtime="20201115 23:01:39.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.357" endtime="20201115 23:01:39.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.361" endtime="20201115 23:01:39.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.359" endtime="20201115 23:01:39.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.355" endtime="20201115 23:01:39.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.989" endtime="20201115 23:01:39.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.987" endtime="20201115 23:01:39.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.986" endtime="20201115 23:01:39.382"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.384" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.392" endtime="20201115 23:01:39.412"></status>
</kw>
<msg timestamp="20201115 23:01:39.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.391" endtime="20201115 23:01:39.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.413" endtime="20201115 23:01:39.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.416" endtime="20201115 23:01:39.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.388" endtime="20201115 23:01:39.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.386" endtime="20201115 23:01:39.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.426" endtime="20201115 23:01:39.712"></status>
</kw>
<msg timestamp="20201115 23:01:39.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025026681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025102222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.424" endtime="20201115 23:01:39.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025026681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025102222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.716" endtime="20201115 23:01:39.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.725" endtime="20201115 23:01:39.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.422" endtime="20201115 23:01:39.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.420" endtime="20201115 23:01:39.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.733" level="INFO">${RESULT} = [{'time': 0.025102222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.554100000000188e-05, 'source_diff': 7.554100000000188e-05}, {'time': 0.025199222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:39.728" endtime="20201115 23:01:39.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.748" level="INFO">${ACCURACY} = {'diff': [7.554100000000188e-05, 7.547200000000004e-05, 7.542999999999786e-05, 7.563900000000234e-05, 7.56249999999993e-05, 7.595800000000097e-05, 7.595800000000097e-05, 7.547200000000004e-05, 7.58470...</msg>
<status status="PASS" starttime="20201115 23:01:39.734" endtime="20201115 23:01:39.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.753" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.752" endtime="20201115 23:01:39.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.755" level="INFO">VALUE: [7.554100000000188e-05, 7.547200000000004e-05, 7.542999999999786e-05, 7.563900000000234e-05, 7.56249999999993e-05, 7.595800000000097e-05, 7.595800000000097e-05, 7.547200000000004e-05, 7.584700000000041e-05, 7.522299999999926e-05, 7.512500000000227e-05, 7.56379999999994e-05, 7.548599999999961e-05, 7.529099999999816e-05, 7.537500000000252e-05, 7.545800000000047e-05, 7.531900000000077e-05, 7.588899999999912e-05, 7.55830000000006e-05, 7.537500000000252e-05, 7.538899999999862e-05, 7.563899999999887e-05, 7.527799999999807e-05, 7.554100000000188e-05, 7.520800000000022e-05, 7.580499999999823e-05, 7.587499999999955e-05, 7.545800000000047e-05, 7.531900000000077e-05, 7.522199999999979e-05, 7.587499999999955e-05, 7.504200000000086e-05, 7.537499999999905e-05, 7.594500000000087e-05, 7.565199999999897e-05, 7.561099999999973e-05, 7.524999999999893e-05, 7.572200000000029e-05, 7.561099999999973e-05, 7.595800000000097e-05, 7.580599999999771e-05, 7.59029999999987e-05, 7.582000000000075e-05, 7.58890000000026e-05, 7.561099999999973e-05, 7.581900000000127e-05, 7.505500000000095e-05, 7.504100000000138e-05, 7.587499999999955e-05, 7.548599999999961e-05]</msg>
<status status="PASS" starttime="20201115 23:01:39.754" endtime="20201115 23:01:39.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.749" endtime="20201115 23:01:39.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.759" endtime="20201115 23:01:39.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.763" endtime="20201115 23:01:39.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.761" endtime="20201115 23:01:39.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.757" endtime="20201115 23:01:39.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.385" endtime="20201115 23:01:39.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.383" endtime="20201115 23:01:39.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.382" endtime="20201115 23:01:39.789"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.795" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.814" endtime="20201115 23:01:39.837"></status>
</kw>
<msg timestamp="20201115 23:01:39.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.811" endtime="20201115 23:01:39.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.840" endtime="20201115 23:01:39.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.846" endtime="20201115 23:01:39.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.804" endtime="20201115 23:01:39.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.799" endtime="20201115 23:01:39.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.866" endtime="20201115 23:01:40.154"></status>
</kw>
<msg timestamp="20201115 23:01:40.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044538625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044615306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.863" endtime="20201115 23:01:40.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044538625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044615306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.158" endtime="20201115 23:01:40.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.167" endtime="20201115 23:01:40.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.857" endtime="20201115 23:01:40.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.853" endtime="20201115 23:01:40.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.175" level="INFO">${RESULT} = [{'time': 0.044615306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.668100000000205e-05, 'source_diff': 7.668100000000205e-05}, {'time': 0.044712319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:40.171" endtime="20201115 23:01:40.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.188" level="INFO">${ACCURACY} = {'diff': [7.668100000000205e-05, 7.604099999999892e-05, 7.654099999999942e-05, 7.686099999999751e-05, 7.66389999999964e-05, 7.64440000000019e-05, 7.662499999999683e-05, 7.623600000000036e-05, 7.604200...</msg>
<status status="PASS" starttime="20201115 23:01:40.176" endtime="20201115 23:01:40.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.193" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.192" endtime="20201115 23:01:40.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.196" level="INFO">VALUE: [7.668100000000205e-05, 7.604099999999892e-05, 7.654099999999942e-05, 7.686099999999751e-05, 7.66389999999964e-05, 7.64440000000019e-05, 7.662499999999683e-05, 7.623600000000036e-05, 7.604200000000533e-05, 7.692999999999589e-05, 7.60839999999971e-05, 7.662500000000377e-05, 7.697200000000154e-05, 7.613799999999643e-05, 7.65969999999977e-05, 7.612499999999633e-05, 7.679099999999967e-05, 7.620800000000122e-05, 7.66389999999964e-05, 7.680599999999871e-05, 7.604199999999839e-05, 7.606999999999753e-05, 7.654199999999889e-05, 7.690199999999675e-05, 7.627799999999907e-05, 7.672200000000129e-05, 7.697200000000154e-05, 7.69719999999946e-05, 7.661099999999726e-05, 7.61389999999959e-05, 7.630599999999821e-05, 7.669500000000162e-05, 7.662500000000377e-05, 7.695900000000144e-05, 7.617999999999514e-05, 7.630600000000515e-05, 7.622199999999385e-05, 7.695800000000197e-05, 7.680499999999923e-05, 7.655500000000592e-05, 7.640300000000266e-05, 7.612500000000327e-05, 7.611099999999676e-05, 7.612499999999633e-05, 7.648600000000061e-05, 7.6764e-05, 7.670900000000119e-05, 7.663800000000387e-05, 7.679099999999967e-05, 7.695900000000144e-05]</msg>
<status status="PASS" starttime="20201115 23:01:40.194" endtime="20201115 23:01:40.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.189" endtime="20201115 23:01:40.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.199" endtime="20201115 23:01:40.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.203" endtime="20201115 23:01:40.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.201" endtime="20201115 23:01:40.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.197" endtime="20201115 23:01:40.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.796" endtime="20201115 23:01:40.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.792" endtime="20201115 23:01:40.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.790" endtime="20201115 23:01:40.224"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.227" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.235" endtime="20201115 23:01:40.254"></status>
</kw>
<msg timestamp="20201115 23:01:40.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.234" endtime="20201115 23:01:40.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.256" endtime="20201115 23:01:40.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.258" endtime="20201115 23:01:40.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.231" endtime="20201115 23:01:40.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.229" endtime="20201115 23:01:40.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.268" endtime="20201115 23:01:40.555"></status>
</kw>
<msg timestamp="20201115 23:01:40.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025515917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025593444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.266" endtime="20201115 23:01:40.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025515917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025593444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.560" endtime="20201115 23:01:40.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.579" endtime="20201115 23:01:40.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.264" endtime="20201115 23:01:40.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.262" endtime="20201115 23:01:40.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.586" level="INFO">${RESULT} = [{'time': 0.025593444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.752700000000085e-05, 'source_diff': 7.752700000000085e-05}, {'time': 0.025689458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:40.583" endtime="20201115 23:01:40.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.599" level="INFO">${ACCURACY} = {'diff': [7.752700000000085e-05, 7.71389999999969e-05, 7.713900000000037e-05, 7.797199999999907e-05, 7.712499999999733e-05, 7.7457999999999e-05, 7.747199999999857e-05, 7.747300000000151e-05, 7.7152999...</msg>
<status status="PASS" starttime="20201115 23:01:40.587" endtime="20201115 23:01:40.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.604" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.603" endtime="20201115 23:01:40.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.606" level="INFO">VALUE: [7.752700000000085e-05, 7.71389999999969e-05, 7.713900000000037e-05, 7.797199999999907e-05, 7.712499999999733e-05, 7.7457999999999e-05, 7.747199999999857e-05, 7.747300000000151e-05, 7.715299999999994e-05, 7.763900000000087e-05, 7.779200000000014e-05, 7.755499999999999e-05, 7.70830000000021e-05, 7.754100000000042e-05, 7.706999999999853e-05, 7.722200000000179e-05, 7.731999999999878e-05, 7.770799999999925e-05, 7.713900000000037e-05, 7.730599999999921e-05, 7.77229999999983e-05, 7.798599999999864e-05, 7.73050000000032e-05, 7.702700000000035e-05, 7.772199999999882e-05, 7.777800000000057e-05, 7.770799999999925e-05, 7.747199999999857e-05, 7.797199999999907e-05, 7.731999999999878e-05, 7.722199999999832e-05, 7.763900000000087e-05, 7.780599999999971e-05, 7.754199999999989e-05, 7.788799999999818e-05, 7.77909999999972e-05, 7.709700000000166e-05, 7.76250000000013e-05, 7.780500000000024e-05, 7.737500000000105e-05, 7.733399999999835e-05, 7.702799999999982e-05, 7.748600000000161e-05, 7.736100000000148e-05, 7.780500000000024e-05, 7.770799999999925e-05, 7.797199999999907e-05, 7.730499999999974e-05, 7.754100000000042e-05, 7.74030000000002e-05]</msg>
<status status="PASS" starttime="20201115 23:01:40.605" endtime="20201115 23:01:40.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.600" endtime="20201115 23:01:40.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.615" endtime="20201115 23:01:40.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.618" endtime="20201115 23:01:40.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.617" endtime="20201115 23:01:40.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.613" endtime="20201115 23:01:40.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.227" endtime="20201115 23:01:40.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.225" endtime="20201115 23:01:40.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.225" endtime="20201115 23:01:40.640"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.642" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.650" endtime="20201115 23:01:40.669"></status>
</kw>
<msg timestamp="20201115 23:01:40.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.649" endtime="20201115 23:01:40.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.670" endtime="20201115 23:01:40.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.673" endtime="20201115 23:01:40.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.646" endtime="20201115 23:01:40.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.644" endtime="20201115 23:01:40.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.682" endtime="20201115 23:01:40.969"></status>
</kw>
<msg timestamp="20201115 23:01:40.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024364986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024443667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.680" endtime="20201115 23:01:40.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024364986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024443667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.973" endtime="20201115 23:01:40.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.982" endtime="20201115 23:01:40.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.678" endtime="20201115 23:01:40.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.676" endtime="20201115 23:01:40.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.989" level="INFO">${RESULT} = [{'time': 0.024443667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.868099999999711e-05, 'source_diff': 7.868099999999711e-05}, {'time': 0.024538667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:40.985" endtime="20201115 23:01:40.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.003" level="INFO">${ACCURACY} = {'diff': [7.868099999999711e-05, 7.804200000000039e-05, 7.887499999999908e-05, 7.897200000000007e-05, 7.880499999999777e-05, 7.887499999999908e-05, 7.8458e-05, 7.81389999999979e-05, 7.815300000000094e...</msg>
<status status="PASS" starttime="20201115 23:01:40.990" endtime="20201115 23:01:41.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.007" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.006" endtime="20201115 23:01:41.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.010" level="INFO">VALUE: [7.868099999999711e-05, 7.804200000000039e-05, 7.887499999999908e-05, 7.897200000000007e-05, 7.880499999999777e-05, 7.887499999999908e-05, 7.8458e-05, 7.81389999999979e-05, 7.815300000000094e-05, 7.879200000000114e-05, 7.822200000000279e-05, 7.829200000000064e-05, 7.87229999999993e-05, 7.897200000000007e-05, 7.84449999999999e-05, 7.81250000000018e-05, 7.81389999999979e-05, 7.86389999999984e-05, 7.848599999999914e-05, 7.827800000000107e-05, 7.838900000000162e-05, 7.865300000000144e-05, 7.86389999999984e-05, 7.898699999999911e-05, 7.829100000000117e-05, 7.840199999999825e-05, 7.81389999999979e-05, 7.880500000000124e-05, 7.809700000000266e-05, 7.855500000000099e-05, 7.822199999999932e-05, 7.8458e-05, 7.862499999999883e-05, 7.812499999999833e-05, 7.830600000000021e-05, 7.855600000000046e-05, 7.884699999999994e-05, 7.895899999999997e-05, 7.808299999999962e-05, 7.881899999999734e-05, 7.799999999999821e-05, 7.873599999999939e-05, 7.823599999999889e-05, 7.804199999999692e-05, 7.822199999999932e-05, 7.863900000000187e-05, 7.865300000000144e-05, 7.830600000000021e-05, 7.870899999999972e-05, 7.830500000000074e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.008" endtime="20201115 23:01:41.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.004" endtime="20201115 23:01:41.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.014" endtime="20201115 23:01:41.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.017" endtime="20201115 23:01:41.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.016" endtime="20201115 23:01:41.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.012" endtime="20201115 23:01:41.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.643" endtime="20201115 23:01:41.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.641" endtime="20201115 23:01:41.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.640" endtime="20201115 23:01:41.038"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.041" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.050" endtime="20201115 23:01:41.069"></status>
</kw>
<msg timestamp="20201115 23:01:41.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.048" endtime="20201115 23:01:41.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.071" endtime="20201115 23:01:41.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.074" endtime="20201115 23:01:41.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.045" endtime="20201115 23:01:41.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.043" endtime="20201115 23:01:41.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.083" endtime="20201115 23:01:41.391"></status>
</kw>
<msg timestamp="20201115 23:01:41.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025807972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025887319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.081" endtime="20201115 23:01:41.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025807972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025887319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.395" endtime="20201115 23:01:41.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.404" endtime="20201115 23:01:41.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.079" endtime="20201115 23:01:41.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.077" endtime="20201115 23:01:41.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.411" level="INFO">${RESULT} = [{'time': 0.025887319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.934700000000044e-05, 'source_diff': 7.934700000000044e-05}, {'time': 0.025982319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:41.407" endtime="20201115 23:01:41.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.426" level="INFO">${ACCURACY} = {'diff': [7.934700000000044e-05, 7.977699999999963e-05, 7.920800000000075e-05, 7.93190000000013e-05, 7.94030000000022e-05, 7.998600000000064e-05, 7.99719999999976e-05, 7.995900000000097e-05, 7.9084000...</msg>
<status status="PASS" starttime="20201115 23:01:41.412" endtime="20201115 23:01:41.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.431" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.430" endtime="20201115 23:01:41.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.434" level="INFO">VALUE: [7.934700000000044e-05, 7.977699999999963e-05, 7.920800000000075e-05, 7.93190000000013e-05, 7.94030000000022e-05, 7.998600000000064e-05, 7.99719999999976e-05, 7.995900000000097e-05, 7.90840000000001e-05, 7.909799999999967e-05, 7.930600000000121e-05, 7.974999999999996e-05, 7.980499999999877e-05, 7.937499999999958e-05, 7.96389999999994e-05, 7.98190000000018e-05, 7.986099999999705e-05, 7.924999999999946e-05, 7.91389999999989e-05, 7.932000000000078e-05, 7.970900000000072e-05, 7.929200000000164e-05, 7.936199999999949e-05, 7.947200000000057e-05, 7.96389999999994e-05, 7.908300000000063e-05, 7.99580000000015e-05, 7.945799999999753e-05, 7.986199999999999e-05, 7.972200000000082e-05, 7.930600000000121e-05, 7.970900000000072e-05, 7.91250000000028e-05, 7.951399999999928e-05, 7.912499999999933e-05, 7.962499999999983e-05, 7.9458000000001e-05, 7.947200000000057e-05, 7.930500000000174e-05, 7.936100000000001e-05, 7.982000000000128e-05, 7.9458000000001e-05, 7.929199999999817e-05, 7.923699999999936e-05, 7.912499999999933e-05, 7.994400000000193e-05, 7.911099999999976e-05, 7.961100000000026e-05, 7.980499999999877e-05, 7.937499999999958e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.432" endtime="20201115 23:01:41.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.427" endtime="20201115 23:01:41.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.437" endtime="20201115 23:01:41.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.440" endtime="20201115 23:01:41.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.439" endtime="20201115 23:01:41.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.435" endtime="20201115 23:01:41.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.042" endtime="20201115 23:01:41.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.040" endtime="20201115 23:01:41.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.039" endtime="20201115 23:01:41.462"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.465" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.475" endtime="20201115 23:01:41.493"></status>
</kw>
<msg timestamp="20201115 23:01:41.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.473" endtime="20201115 23:01:41.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.495" endtime="20201115 23:01:41.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.498" endtime="20201115 23:01:41.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.470" endtime="20201115 23:01:41.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.468" endtime="20201115 23:01:41.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.507" endtime="20201115 23:01:41.799"></status>
</kw>
<msg timestamp="20201115 23:01:41.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027117667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027198028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.506" endtime="20201115 23:01:41.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027117667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027198028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.804" endtime="20201115 23:01:41.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.812" endtime="20201115 23:01:41.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.503" endtime="20201115 23:01:41.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.501" endtime="20201115 23:01:41.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.819" level="INFO">${RESULT} = [{'time': 0.027198028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.036099999999755e-05, 'source_diff': 8.036099999999755e-05}, {'time': 0.027299042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:41.816" endtime="20201115 23:01:41.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.833" level="INFO">${ACCURACY} = {'diff': [8.036099999999755e-05, 8.081999999999881e-05, 8.023600000000089e-05, 8.030599999999874e-05, 8.042999999999939e-05, 8.098600000000164e-05, 8.095799999999903e-05, 8.063899999999694e-05, 8.0666...</msg>
<status status="PASS" starttime="20201115 23:01:41.820" endtime="20201115 23:01:41.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.837" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.836" endtime="20201115 23:01:41.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.840" level="INFO">VALUE: [8.036099999999755e-05, 8.081999999999881e-05, 8.023600000000089e-05, 8.030599999999874e-05, 8.042999999999939e-05, 8.098600000000164e-05, 8.095799999999903e-05, 8.063899999999694e-05, 8.066699999999954e-05, 8.012500000000033e-05, 8.097200000000207e-05, 8.01389999999999e-05, 8.030600000000221e-05, 8.086100000000151e-05, 8.079199999999967e-05, 8.022299999999732e-05, 8.030499999999927e-05, 8.022200000000132e-05, 8.042999999999939e-05, 8.034699999999798e-05, 8.088899999999719e-05, 8.029200000000264e-05, 8.073599999999792e-05, 8.047200000000157e-05, 8.029199999999917e-05, 8.040299999999972e-05, 8.080599999999924e-05, 8.023600000000089e-05, 8.006900000000206e-05, 8.07910000000002e-05, 8.005500000000249e-05, 8.005499999999902e-05, 8.034700000000145e-05, 8.06390000000004e-05, 8.07780000000001e-05, 8.04169999999993e-05, 8.029200000000264e-05, 8.090200000000075e-05, 8.098599999999817e-05, 8.0458000000002e-05, 8.01109999999973e-05, 8.030499999999927e-05, 8.038899999999669e-05, 8.038900000000015e-05, 8.061100000000126e-05, 8.09719999999986e-05, 8.07919999999962e-05, 8.088900000000065e-05, 8.079200000000314e-05, 8.087500000000108e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.838" endtime="20201115 23:01:41.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.834" endtime="20201115 23:01:41.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.843" endtime="20201115 23:01:41.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.846" endtime="20201115 23:01:41.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.845" endtime="20201115 23:01:41.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.841" endtime="20201115 23:01:41.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.466" endtime="20201115 23:01:41.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.464" endtime="20201115 23:01:41.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.463" endtime="20201115 23:01:41.867"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.870" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.878" endtime="20201115 23:01:41.896"></status>
</kw>
<msg timestamp="20201115 23:01:41.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.876" endtime="20201115 23:01:41.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.897" endtime="20201115 23:01:41.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.900" endtime="20201115 23:01:41.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.874" endtime="20201115 23:01:41.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.872" endtime="20201115 23:01:41.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.910" endtime="20201115 23:01:42.211"></status>
</kw>
<msg timestamp="20201115 23:01:42.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024221986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.908" endtime="20201115 23:01:42.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024221986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.216" endtime="20201115 23:01:42.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.224" endtime="20201115 23:01:42.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.905" endtime="20201115 23:01:42.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.903" endtime="20201115 23:01:42.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.231" level="INFO">${RESULT} = [{'time': 0.024221986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.186100000000252e-05, 'source_diff': 8.186100000000252e-05}, {'time': 0.024319028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:42.227" endtime="20201115 23:01:42.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.244" level="INFO">${ACCURACY} = {'diff': [8.186100000000252e-05, 8.199999999999874e-05, 8.113899999999744e-05, 8.126400000000103e-05, 8.155599999999999e-05, 8.155599999999999e-05, 8.193000000000089e-05, 8.17910000000012e-05, 8.10550...</msg>
<status status="PASS" starttime="20201115 23:01:42.232" endtime="20201115 23:01:42.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.249" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.248" endtime="20201115 23:01:42.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.251" level="INFO">VALUE: [8.186100000000252e-05, 8.199999999999874e-05, 8.113899999999744e-05, 8.126400000000103e-05, 8.155599999999999e-05, 8.155599999999999e-05, 8.193000000000089e-05, 8.17910000000012e-05, 8.105500000000002e-05, 8.125000000000146e-05, 8.134700000000245e-05, 8.187499999999862e-05, 8.12780000000006e-05, 8.120800000000275e-05, 8.181999999999981e-05, 8.188900000000165e-05, 8.147300000000204e-05, 8.165199999999803e-05, 8.19589999999995e-05, 8.200000000000221e-05, 8.130500000000027e-05, 8.138900000000115e-05, 8.11390000000009e-05, 8.12780000000006e-05, 8.188899999999819e-05, 8.17919999999972e-05, 8.155599999999999e-05, 8.105599999999949e-05, 8.105599999999949e-05, 8.134800000000192e-05, 8.179099999999773e-05, 8.188900000000165e-05, 8.11390000000009e-05, 8.17910000000012e-05, 8.104199999999992e-05, 8.156999999999956e-05, 8.188900000000165e-05, 8.165300000000097e-05, 8.19589999999995e-05, 8.145799999999953e-05, 8.179200000000067e-05, 8.191600000000132e-05, 8.163899999999794e-05, 8.134700000000245e-05, 8.120799999999928e-05, 8.10970000000022e-05, 8.130599999999974e-05, 8.187499999999862e-05, 8.197300000000254e-05, 8.144499999999943e-05]</msg>
<status status="PASS" starttime="20201115 23:01:42.250" endtime="20201115 23:01:42.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.245" endtime="20201115 23:01:42.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.254" endtime="20201115 23:01:42.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.258" endtime="20201115 23:01:42.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.256" endtime="20201115 23:01:42.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.253" endtime="20201115 23:01:42.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.870" endtime="20201115 23:01:42.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.868" endtime="20201115 23:01:42.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.868" endtime="20201115 23:01:42.279"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.281" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.289" endtime="20201115 23:01:42.309"></status>
</kw>
<msg timestamp="20201115 23:01:42.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.288" endtime="20201115 23:01:42.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.310" endtime="20201115 23:01:42.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.314" endtime="20201115 23:01:42.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.285" endtime="20201115 23:01:42.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.283" endtime="20201115 23:01:42.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.323" endtime="20201115 23:01:42.608"></status>
</kw>
<msg timestamp="20201115 23:01:42.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024264194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024346556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.321" endtime="20201115 23:01:42.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024264194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024346556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.613" endtime="20201115 23:01:42.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.621" endtime="20201115 23:01:42.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.318" endtime="20201115 23:01:42.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.317" endtime="20201115 23:01:42.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.628" level="INFO">${RESULT} = [{'time': 0.024346556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.236199999999902e-05, 'source_diff': 8.236199999999902e-05}, {'time': 0.024451556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:42.625" endtime="20201115 23:01:42.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.641" level="INFO">${ACCURACY} = {'diff': [8.236199999999902e-05, 8.29590000000005e-05, 8.262500000000284e-05, 8.263899999999894e-05, 8.297199999999713e-05, 8.29720000000006e-05, 8.213899999999844e-05, 8.299999999999974e-05, 8.297199...</msg>
<status status="PASS" starttime="20201115 23:01:42.629" endtime="20201115 23:01:42.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.646" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.645" endtime="20201115 23:01:42.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.648" level="INFO">VALUE: [8.236199999999902e-05, 8.29590000000005e-05, 8.262500000000284e-05, 8.263899999999894e-05, 8.297199999999713e-05, 8.29720000000006e-05, 8.213899999999844e-05, 8.299999999999974e-05, 8.297199999999713e-05, 8.231999999999684e-05, 8.207000000000006e-05, 8.256900000000109e-05, 8.270800000000078e-05, 8.213899999999844e-05, 8.252799999999838e-05, 8.22910000000017e-05, 8.272199999999688e-05, 8.29720000000006e-05, 8.244500000000043e-05, 8.229200000000117e-05, 8.273600000000339e-05, 8.280600000000124e-05, 8.222299999999932e-05, 8.226400000000203e-05, 8.238899999999869e-05, 8.24720000000001e-05, 8.301400000000278e-05, 8.230500000000127e-05, 8.237499999999912e-05, 8.262499999999937e-05, 8.232000000000031e-05, 8.274999999999949e-05, 8.27919999999982e-05, 8.258300000000066e-05, 8.198699999999864e-05, 8.238900000000215e-05, 8.265300000000197e-05, 8.24720000000001e-05, 8.23049999999978e-05, 8.237499999999912e-05, 8.245800000000053e-05, 8.248599999999967e-05, 8.24720000000001e-05, 8.247300000000304e-05, 8.279200000000167e-05, 8.204200000000092e-05, 8.268000000000164e-05, 8.281900000000134e-05, 8.288899999999919e-05, 8.248599999999967e-05]</msg>
<status status="PASS" starttime="20201115 23:01:42.647" endtime="20201115 23:01:42.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.642" endtime="20201115 23:01:42.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.652" endtime="20201115 23:01:42.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.655" endtime="20201115 23:01:42.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.653" endtime="20201115 23:01:42.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.650" endtime="20201115 23:01:42.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.282" endtime="20201115 23:01:42.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.280" endtime="20201115 23:01:42.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.279" endtime="20201115 23:01:42.676"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.678" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.687" endtime="20201115 23:01:42.707"></status>
</kw>
<msg timestamp="20201115 23:01:42.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.685" endtime="20201115 23:01:42.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.708" endtime="20201115 23:01:42.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.711" endtime="20201115 23:01:42.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.682" endtime="20201115 23:01:42.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.680" endtime="20201115 23:01:42.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.720" endtime="20201115 23:01:43.005"></status>
</kw>
<msg timestamp="20201115 23:01:43.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025581903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025665639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.718" endtime="20201115 23:01:43.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025581903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025665639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.010" endtime="20201115 23:01:43.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.018" endtime="20201115 23:01:43.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.716" endtime="20201115 23:01:43.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.714" endtime="20201115 23:01:43.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.025" level="INFO">${RESULT} = [{'time': 0.025665639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.373600000000092e-05, 'source_diff': 8.373600000000092e-05}, {'time': 0.025763653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:43.021" endtime="20201115 23:01:43.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.039" level="INFO">${ACCURACY} = {'diff': [8.373600000000092e-05, 8.34720000000011e-05, 8.388900000000019e-05, 8.363899999999994e-05, 8.39590000000015e-05, 8.34720000000011e-05, 8.333299999999794e-05, 8.372200000000135e-05, 8.3958000...</msg>
<status status="PASS" starttime="20201115 23:01:43.026" endtime="20201115 23:01:43.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.044" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.043" endtime="20201115 23:01:43.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.046" level="INFO">VALUE: [8.373600000000092e-05, 8.34720000000011e-05, 8.388900000000019e-05, 8.363899999999994e-05, 8.39590000000015e-05, 8.34720000000011e-05, 8.333299999999794e-05, 8.372200000000135e-05, 8.395800000000203e-05, 8.313899999999944e-05, 8.345800000000153e-05, 8.362500000000037e-05, 8.362500000000037e-05, 8.37919999999992e-05, 8.320900000000075e-05, 8.3459000000001e-05, 8.375000000000049e-05, 8.337500000000012e-05, 8.345800000000153e-05, 8.344400000000196e-05, 8.316699999999858e-05, 8.362500000000037e-05, 8.324999999999999e-05, 8.305599999999802e-05, 8.304199999999845e-05, 8.322199999999738e-05, 8.345899999999754e-05, 8.36249999999969e-05, 8.31390000000029e-05, 8.381899999999887e-05, 8.373599999999745e-05, 8.345800000000153e-05, 8.36529999999995e-05, 8.395799999999856e-05, 8.383400000000138e-05, 8.323600000000042e-05, 8.362500000000037e-05, 8.37919999999992e-05, 8.388899999999672e-05, 8.375000000000049e-05, 8.338899999999969e-05, 8.308299999999769e-05, 8.395799999999856e-05, 8.362500000000037e-05, 8.37919999999992e-05, 8.324999999999999e-05, 8.322200000000085e-05, 8.347300000000057e-05, 8.36249999999969e-05, 8.379099999999973e-05]</msg>
<status status="PASS" starttime="20201115 23:01:43.045" endtime="20201115 23:01:43.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.040" endtime="20201115 23:01:43.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.050" endtime="20201115 23:01:43.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.053" endtime="20201115 23:01:43.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.051" endtime="20201115 23:01:43.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.048" endtime="20201115 23:01:43.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.679" endtime="20201115 23:01:43.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.677" endtime="20201115 23:01:43.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.676" endtime="20201115 23:01:43.074"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.077" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.085" endtime="20201115 23:01:43.104"></status>
</kw>
<msg timestamp="20201115 23:01:43.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.083" endtime="20201115 23:01:43.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.106" endtime="20201115 23:01:43.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.108" endtime="20201115 23:01:43.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.081" endtime="20201115 23:01:43.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.079" endtime="20201115 23:01:43.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.118" endtime="20201115 23:01:43.404"></status>
</kw>
<msg timestamp="20201115 23:01:43.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024536569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024620931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.116" endtime="20201115 23:01:43.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024536569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024620931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.408" endtime="20201115 23:01:43.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.417" endtime="20201115 23:01:43.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.113" endtime="20201115 23:01:43.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.112" endtime="20201115 23:01:43.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.423" level="INFO">${RESULT} = [{'time': 0.024620931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.436199999999755e-05, 'source_diff': 8.436199999999755e-05}, {'time': 0.024719944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:43.420" endtime="20201115 23:01:43.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.437" level="INFO">${ACCURACY} = {'diff': [8.436199999999755e-05, 8.462500000000137e-05, 8.431900000000284e-05, 8.404099999999998e-05, 8.405499999999955e-05, 8.488899999999772e-05, 8.430599999999927e-05, 8.420799999999881e-05, 8.4139...</msg>
<status status="PASS" starttime="20201115 23:01:43.424" endtime="20201115 23:01:43.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.441" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.440" endtime="20201115 23:01:43.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.444" level="INFO">VALUE: [8.436199999999755e-05, 8.462500000000137e-05, 8.431900000000284e-05, 8.404099999999998e-05, 8.405499999999955e-05, 8.488899999999772e-05, 8.430599999999927e-05, 8.420799999999881e-05, 8.413900000000044e-05, 8.447300000000157e-05, 8.487500000000162e-05, 8.406899999999912e-05, 8.420800000000228e-05, 8.427800000000013e-05, 8.454100000000048e-05, 8.404199999999945e-05, 8.488900000000119e-05, 8.426399999999709e-05, 8.487499999999815e-05, 8.494499999999947e-05, 8.463900000000094e-05, 8.495899999999904e-05, 8.412500000000087e-05, 8.413900000000044e-05, 8.442999999999992e-05, 8.463900000000094e-05, 8.42919999999997e-05, 8.454199999999995e-05, 8.454199999999995e-05, 8.454199999999995e-05, 8.490300000000076e-05, 8.43049999999998e-05, 8.437499999999765e-05, 8.412500000000087e-05, 8.463900000000094e-05, 8.413900000000044e-05, 8.504200000000045e-05, 8.46530000000005e-05, 8.413900000000044e-05, 8.495799999999956e-05, 8.46530000000005e-05, 8.4153e-05, 8.465200000000103e-05, 8.461099999999833e-05, 8.423600000000142e-05, 8.473600000000192e-05, 8.409700000000173e-05, 8.436100000000155e-05, 8.454199999999995e-05, 8.440300000000026e-05]</msg>
<status status="PASS" starttime="20201115 23:01:43.442" endtime="20201115 23:01:43.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.438" endtime="20201115 23:01:43.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.447" endtime="20201115 23:01:43.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.451" endtime="20201115 23:01:43.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.449" endtime="20201115 23:01:43.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.446" endtime="20201115 23:01:43.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.077" endtime="20201115 23:01:43.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.076" endtime="20201115 23:01:43.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.075" endtime="20201115 23:01:43.472"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.474" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.482" endtime="20201115 23:01:43.502"></status>
</kw>
<msg timestamp="20201115 23:01:43.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.481" endtime="20201115 23:01:43.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.503" endtime="20201115 23:01:43.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.506" endtime="20201115 23:01:43.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.478" endtime="20201115 23:01:43.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.476" endtime="20201115 23:01:43.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.515" endtime="20201115 23:01:43.802"></status>
</kw>
<msg timestamp="20201115 23:01:43.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024170681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024256542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.513" endtime="20201115 23:01:43.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024170681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024256542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.806" endtime="20201115 23:01:43.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.814" endtime="20201115 23:01:43.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.511" endtime="20201115 23:01:43.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.509" endtime="20201115 23:01:43.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.821" level="INFO">${RESULT} = [{'time': 0.024256542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.586099999999958e-05, 'source_diff': 8.586099999999958e-05}, {'time': 0.024358569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:43.818" endtime="20201115 23:01:43.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.834" level="INFO">${ACCURACY} = {'diff': [8.586099999999958e-05, 8.53050000000008e-05, 8.555500000000105e-05, 8.552699999999844e-05, 8.588899999999872e-05, 8.597200000000013e-05, 8.59859999999997e-05, 8.597199999999666e-05, 8.580600...</msg>
<status status="PASS" starttime="20201115 23:01:43.822" endtime="20201115 23:01:43.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.839" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.838" endtime="20201115 23:01:43.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.842" level="INFO">VALUE: [8.586099999999958e-05, 8.53050000000008e-05, 8.555500000000105e-05, 8.552699999999844e-05, 8.588899999999872e-05, 8.597200000000013e-05, 8.59859999999997e-05, 8.597199999999666e-05, 8.580600000000077e-05, 8.536099999999908e-05, 8.579199999999773e-05, 8.588900000000219e-05, 8.529199999999723e-05, 8.533299999999994e-05, 8.516700000000058e-05, 8.558300000000019e-05, 8.594400000000099e-05, 8.51249999999984e-05, 8.563899999999847e-05, 8.527800000000113e-05, 8.505600000000002e-05, 8.572299999999936e-05, 8.511099999999883e-05, 8.527799999999766e-05, 8.586099999999958e-05, 8.513899999999797e-05, 8.563900000000194e-05, 8.599999999999927e-05, 8.579199999999773e-05, 8.583300000000044e-05, 8.597200000000013e-05, 8.527800000000113e-05, 8.525000000000199e-05, 8.530600000000027e-05, 8.572199999999988e-05, 8.563899999999847e-05, 8.581900000000087e-05, 8.545899999999954e-05, 8.551399999999834e-05, 8.579199999999773e-05, 8.536099999999908e-05, 8.581999999999687e-05, 8.540300000000126e-05, 8.58059999999973e-05, 8.572299999999936e-05, 8.59859999999997e-05, 8.597200000000013e-05, 8.525000000000199e-05, 8.586099999999958e-05, 8.570899999999979e-05]</msg>
<status status="PASS" starttime="20201115 23:01:43.840" endtime="20201115 23:01:43.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.835" endtime="20201115 23:01:43.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.845" endtime="20201115 23:01:43.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.848" endtime="20201115 23:01:43.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.847" endtime="20201115 23:01:43.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.843" endtime="20201115 23:01:43.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.475" endtime="20201115 23:01:43.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.473" endtime="20201115 23:01:43.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.472" endtime="20201115 23:01:43.870"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.872" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.880" endtime="20201115 23:01:43.899"></status>
</kw>
<msg timestamp="20201115 23:01:43.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.879" endtime="20201115 23:01:43.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.901" endtime="20201115 23:01:43.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.903" endtime="20201115 23:01:43.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.876" endtime="20201115 23:01:43.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.874" endtime="20201115 23:01:43.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.912" endtime="20201115 23:01:44.197"></status>
</kw>
<msg timestamp="20201115 23:01:44.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024183028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024269222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.911" endtime="20201115 23:01:44.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024183028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024269222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.201" endtime="20201115 23:01:44.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.209" endtime="20201115 23:01:44.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.908" endtime="20201115 23:01:44.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.906" endtime="20201115 23:01:44.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.216" level="INFO">${RESULT} = [{'time': 0.024269222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.619400000000124e-05, 'source_diff': 8.619400000000124e-05}, {'time': 0.024374236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:44.213" endtime="20201115 23:01:44.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.230" level="INFO">${ACCURACY} = {'diff': [8.619400000000124e-05, 8.620800000000081e-05, 8.63059999999978e-05, 8.661099999999686e-05, 8.656999999999762e-05, 8.620900000000029e-05, 8.626399999999909e-05, 8.670800000000131e-05, 8.60970...</msg>
<status status="PASS" starttime="20201115 23:01:44.217" endtime="20201115 23:01:44.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.234" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.233" endtime="20201115 23:01:44.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.237" level="INFO">VALUE: [8.619400000000124e-05, 8.620800000000081e-05, 8.63059999999978e-05, 8.661099999999686e-05, 8.656999999999762e-05, 8.620900000000029e-05, 8.626399999999909e-05, 8.670800000000131e-05, 8.609700000000026e-05, 8.633299999999747e-05, 8.619400000000124e-05, 8.69860000000007e-05, 8.647200000000063e-05, 8.66249999999999e-05, 8.61249999999994e-05, 8.633400000000041e-05, 8.675000000000002e-05, 8.633299999999747e-05, 8.638799999999974e-05, 8.644400000000149e-05, 8.697200000000113e-05, 8.677799999999916e-05, 8.670799999999784e-05, 8.661100000000033e-05, 8.645800000000106e-05, 8.63470000000005e-05, 8.672300000000036e-05, 8.647200000000063e-05, 8.62920000000017e-05, 8.604099999999851e-05, 8.666599999999913e-05, 8.64860000000002e-05, 8.63050000000018e-05, 8.655599999999805e-05, 8.688899999999972e-05, 8.680600000000177e-05, 8.687500000000015e-05, 8.630600000000127e-05, 8.638900000000269e-05, 8.680499999999883e-05, 8.59859999999997e-05, 8.637499999999965e-05, 8.644400000000149e-05, 8.62920000000017e-05, 8.672200000000088e-05, 8.643099999999793e-05, 8.68059999999983e-05, 8.690300000000276e-05, 8.675000000000002e-05, 8.655500000000205e-05]</msg>
<status status="PASS" starttime="20201115 23:01:44.236" endtime="20201115 23:01:44.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.231" endtime="20201115 23:01:44.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.240" endtime="20201115 23:01:44.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.243" endtime="20201115 23:01:44.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.242" endtime="20201115 23:01:44.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.238" endtime="20201115 23:01:44.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.873" endtime="20201115 23:01:44.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.871" endtime="20201115 23:01:44.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.870" endtime="20201115 23:01:44.264"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.267" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.275" endtime="20201115 23:01:44.296"></status>
</kw>
<msg timestamp="20201115 23:01:44.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.274" endtime="20201115 23:01:44.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.297" endtime="20201115 23:01:44.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.300" endtime="20201115 23:01:44.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.271" endtime="20201115 23:01:44.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.269" endtime="20201115 23:01:44.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.309" endtime="20201115 23:01:44.595"></status>
</kw>
<msg timestamp="20201115 23:01:44.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025570611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025658472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.307" endtime="20201115 23:01:44.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025570611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025658472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.599" endtime="20201115 23:01:44.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.607" endtime="20201115 23:01:44.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.305" endtime="20201115 23:01:44.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.303" endtime="20201115 23:01:44.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.614" level="INFO">${RESULT} = [{'time': 0.025658472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.786100000000158e-05, 'source_diff': 8.786100000000158e-05}, {'time': 0.025760542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:44.611" endtime="20201115 23:01:44.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.629" level="INFO">${ACCURACY} = {'diff': [8.786100000000158e-05, 8.736100000000108e-05, 8.770800000000231e-05, 8.729199999999923e-05, 8.752799999999991e-05, 8.704199999999898e-05, 8.772299999999789e-05, 8.783300000000244e-05, 8.7389...</msg>
<status status="PASS" starttime="20201115 23:01:44.615" endtime="20201115 23:01:44.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.634" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.633" endtime="20201115 23:01:44.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.637" level="INFO">VALUE: [8.786100000000158e-05, 8.736100000000108e-05, 8.770800000000231e-05, 8.729199999999923e-05, 8.752799999999991e-05, 8.704199999999898e-05, 8.772299999999789e-05, 8.783300000000244e-05, 8.738900000000022e-05, 8.730499999999933e-05, 8.701399999999984e-05, 8.769399999999927e-05, 8.730499999999933e-05, 8.797200000000213e-05, 8.797200000000213e-05, 8.730600000000227e-05, 8.755499999999958e-05, 8.736100000000108e-05, 8.730499999999933e-05, 8.761099999999786e-05, 8.705500000000255e-05, 8.722200000000138e-05, 8.713899999999997e-05, 8.74860000000012e-05, 8.729199999999923e-05, 8.786100000000158e-05, 8.730600000000227e-05, 8.738900000000022e-05, 8.797299999999814e-05, 8.780499999999983e-05, 8.754100000000001e-05, 8.752700000000044e-05, 8.754100000000001e-05, 8.73189999999989e-05, 8.73059999999988e-05, 8.757000000000209e-05, 8.754199999999948e-05, 8.788900000000072e-05, 8.795899999999857e-05, 8.795900000000204e-05, 8.756899999999915e-05, 8.715299999999954e-05, 8.747199999999816e-05, 8.74860000000012e-05, 8.79999999999978e-05, 8.727799999999966e-05, 8.786099999999811e-05, 8.779199999999973e-05, 8.704199999999898e-05, 8.772299999999789e-05]</msg>
<status status="PASS" starttime="20201115 23:01:44.635" endtime="20201115 23:01:44.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.630" endtime="20201115 23:01:44.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.640" endtime="20201115 23:01:44.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.644" endtime="20201115 23:01:44.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.642" endtime="20201115 23:01:44.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.638" endtime="20201115 23:01:44.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.268" endtime="20201115 23:01:44.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.266" endtime="20201115 23:01:44.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.265" endtime="20201115 23:01:44.665"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.668" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.676" endtime="20201115 23:01:44.695"></status>
</kw>
<msg timestamp="20201115 23:01:44.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.675" endtime="20201115 23:01:44.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.697" endtime="20201115 23:01:44.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.699" endtime="20201115 23:01:44.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.672" endtime="20201115 23:01:44.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.670" endtime="20201115 23:01:44.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.709" endtime="20201115 23:01:44.995"></status>
</kw>
<msg timestamp="20201115 23:01:44.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024443236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02453175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:44.707" endtime="20201115 23:01:44.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024443236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02453175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:44.999" endtime="20201115 23:01:45.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.008" endtime="20201115 23:01:45.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.704" endtime="20201115 23:01:45.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.702" endtime="20201115 23:01:45.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.014" level="INFO">${RESULT} = [{'time': 0.02453175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.851400000000134e-05, 'source_diff': 8.851400000000134e-05}, {'time': 0.024639764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:45.011" endtime="20201115 23:01:45.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.028" level="INFO">${ACCURACY} = {'diff': [8.851400000000134e-05, 8.895800000000009e-05, 8.845899999999907e-05, 8.816600000000063e-05, 8.895900000000304e-05, 8.861199999999833e-05, 8.858299999999972e-05, 8.898599999999923e-05, 8.8971...</msg>
<status status="PASS" starttime="20201115 23:01:45.015" endtime="20201115 23:01:45.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.032" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.031" endtime="20201115 23:01:45.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.035" level="INFO">VALUE: [8.851400000000134e-05, 8.895800000000009e-05, 8.845899999999907e-05, 8.816600000000063e-05, 8.895900000000304e-05, 8.861199999999833e-05, 8.858299999999972e-05, 8.898599999999923e-05, 8.897199999999966e-05, 8.887499999999868e-05, 8.822199999999891e-05, 8.813900000000097e-05, 8.897199999999966e-05, 8.897299999999914e-05, 8.895899999999957e-05, 8.897299999999914e-05, 8.898599999999923e-05, 8.884699999999954e-05, 8.837499999999818e-05, 8.877799999999769e-05, 8.819399999999977e-05, 8.862499999999843e-05, 8.898599999999923e-05, 8.83059999999998e-05, 8.838900000000122e-05, 8.830500000000033e-05, 8.806899999999965e-05, 8.804100000000051e-05, 8.870799999999984e-05, 8.847200000000263e-05, 8.897199999999966e-05, 8.88060000000003e-05, 8.872199999999941e-05, 8.893100000000043e-05, 8.829200000000023e-05, 8.820900000000229e-05, 8.88060000000003e-05, 8.822199999999891e-05, 8.813900000000097e-05, 8.879100000000126e-05, 8.888899999999825e-05, 8.89860000000027e-05, 8.881999999999987e-05, 8.820799999999934e-05, 8.829200000000023e-05, 8.888900000000172e-05, 8.877699999999822e-05, 8.890200000000181e-05, 8.8638999999998e-05, 8.813900000000097e-05]</msg>
<status status="PASS" starttime="20201115 23:01:45.033" endtime="20201115 23:01:45.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.029" endtime="20201115 23:01:45.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.038" endtime="20201115 23:01:45.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.041" endtime="20201115 23:01:45.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.040" endtime="20201115 23:01:45.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.036" endtime="20201115 23:01:45.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.668" endtime="20201115 23:01:45.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.666" endtime="20201115 23:01:45.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.666" endtime="20201115 23:01:45.062"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.065" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.073" endtime="20201115 23:01:45.092"></status>
</kw>
<msg timestamp="20201115 23:01:45.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.072" endtime="20201115 23:01:45.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.094" endtime="20201115 23:01:45.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.097" endtime="20201115 23:01:45.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.069" endtime="20201115 23:01:45.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.067" endtime="20201115 23:01:45.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.106" endtime="20201115 23:01:45.392"></status>
</kw>
<msg timestamp="20201115 23:01:45.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024693958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024783667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.104" endtime="20201115 23:01:45.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024693958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024783667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.397" endtime="20201115 23:01:45.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.405" endtime="20201115 23:01:45.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.102" endtime="20201115 23:01:45.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.100" endtime="20201115 23:01:45.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.412" level="INFO">${RESULT} = [{'time': 0.024783667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.970900000000032e-05, 'source_diff': 8.970900000000032e-05}, {'time': 0.024889667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:45.408" endtime="20201115 23:01:45.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.425" level="INFO">${ACCURACY} = {'diff': [8.970900000000032e-05, 8.915300000000154e-05, 8.9638999999999e-05, 8.980500000000183e-05, 8.986100000000011e-05, 8.927799999999819e-05, 8.905500000000108e-05, 8.905600000000055e-05, 8.938900...</msg>
<status status="PASS" starttime="20201115 23:01:45.413" endtime="20201115 23:01:45.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.430" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.429" endtime="20201115 23:01:45.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.432" level="INFO">VALUE: [8.970900000000032e-05, 8.915300000000154e-05, 8.9638999999999e-05, 8.980500000000183e-05, 8.986100000000011e-05, 8.927799999999819e-05, 8.905500000000108e-05, 8.905600000000055e-05, 8.938900000000222e-05, 8.932000000000037e-05, 8.909699999999979e-05, 8.988899999999925e-05, 8.96250000000029e-05, 8.995799999999762e-05, 8.994400000000152e-05, 8.93190000000009e-05, 8.956900000000115e-05, 8.99589999999971e-05, 8.997200000000066e-05, 8.905600000000055e-05, 8.99589999999971e-05, 8.998700000000318e-05, 8.929200000000123e-05, 8.936200000000255e-05, 8.961099999999986e-05, 8.962499999999943e-05, 9.004199999999851e-05, 8.91389999999985e-05, 8.938899999999875e-05, 8.91389999999985e-05, 8.947299999999964e-05, 8.958400000000019e-05, 8.93060000000008e-05, 8.938900000000222e-05, 8.91389999999985e-05, 8.968100000000118e-05, 8.963900000000247e-05, 8.943000000000145e-05, 8.997200000000066e-05, 8.994400000000152e-05, 8.979200000000173e-05, 8.986100000000011e-05, 8.965300000000204e-05, 8.945900000000007e-05, 8.980500000000183e-05, 8.940299999999832e-05, 8.962499999999943e-05, 8.93190000000009e-05, 8.936099999999961e-05, 8.995799999999762e-05]</msg>
<status status="PASS" starttime="20201115 23:01:45.431" endtime="20201115 23:01:45.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.426" endtime="20201115 23:01:45.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.435" endtime="20201115 23:01:45.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.439" endtime="20201115 23:01:45.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.437" endtime="20201115 23:01:45.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.434" endtime="20201115 23:01:45.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.065" endtime="20201115 23:01:45.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.064" endtime="20201115 23:01:45.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.063" endtime="20201115 23:01:45.460"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.462" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.471" endtime="20201115 23:01:45.491"></status>
</kw>
<msg timestamp="20201115 23:01:45.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.469" endtime="20201115 23:01:45.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.492" endtime="20201115 23:01:45.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.495" endtime="20201115 23:01:45.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.466" endtime="20201115 23:01:45.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.464" endtime="20201115 23:01:45.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.504" endtime="20201115 23:01:45.790"></status>
</kw>
<msg timestamp="20201115 23:01:45.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025128347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025218681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.503" endtime="20201115 23:01:45.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025128347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025218681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.794" endtime="20201115 23:01:45.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.803" endtime="20201115 23:01:45.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.500" endtime="20201115 23:01:45.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.498" endtime="20201115 23:01:45.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.809" level="INFO">${RESULT} = [{'time': 0.025218681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.033400000000094e-05, 'source_diff': 9.033400000000094e-05}, {'time': 0.025328681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:45.806" endtime="20201115 23:01:45.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.823" level="INFO">${ACCURACY} = {'diff': [9.033400000000094e-05, 9.029199999999876e-05, 9.054099999999954e-05, 9.080499999999936e-05, 9.029099999999929e-05, 9.087500000000068e-05, 9.0639e-05, 9.01389999999995e-05, 9.062499999999696e...</msg>
<status status="PASS" starttime="20201115 23:01:45.810" endtime="20201115 23:01:45.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.827" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.826" endtime="20201115 23:01:45.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.830" level="INFO">VALUE: [9.033400000000094e-05, 9.029199999999876e-05, 9.054099999999954e-05, 9.080499999999936e-05, 9.029099999999929e-05, 9.087500000000068e-05, 9.0639e-05, 9.01389999999995e-05, 9.062499999999696e-05, 9.0639e-05, 9.079200000000273e-05, 9.068099999999871e-05, 9.076300000000065e-05, 9.090299999999982e-05, 9.047200000000116e-05, 9.048600000000073e-05, 9.03060000000018e-05, 9.090299999999982e-05, 9.075000000000055e-05, 9.038899999999975e-05, 9.047300000000064e-05, 9.079199999999926e-05, 9.088900000000025e-05, 9.01389999999995e-05, 9.080499999999936e-05, 9.055500000000258e-05, 9.020800000000134e-05, 9.045799999999812e-05, 9.03060000000018e-05, 9.008399999999722e-05, 9.040299999999932e-05, 9.0332999999998e-05, 9.040199999999984e-05, 9.098600000000123e-05, 9.052799999999944e-05, 9.047200000000116e-05, 9.045800000000159e-05, 9.080599999999883e-05, 9.087500000000068e-05, 9.080599999999883e-05, 9.055599999999858e-05, 9.055599999999858e-05, 9.056899999999868e-05, 9.038899999999975e-05, 9.045800000000159e-05, 9.081899999999893e-05, 9.06939999999988e-05, 9.034800000000051e-05, 9.005600000000155e-05, 9.022200000000091e-05]</msg>
<status status="PASS" starttime="20201115 23:01:45.828" endtime="20201115 23:01:45.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.823" endtime="20201115 23:01:45.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.833" endtime="20201115 23:01:45.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.836" endtime="20201115 23:01:45.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.835" endtime="20201115 23:01:45.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.831" endtime="20201115 23:01:45.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.463" endtime="20201115 23:01:45.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.461" endtime="20201115 23:01:45.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.460" endtime="20201115 23:01:45.862"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.865" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.873" endtime="20201115 23:01:45.894"></status>
</kw>
<msg timestamp="20201115 23:01:45.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.871" endtime="20201115 23:01:45.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.895" endtime="20201115 23:01:45.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.898" endtime="20201115 23:01:45.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.869" endtime="20201115 23:01:45.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.867" endtime="20201115 23:01:45.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.907" endtime="20201115 23:01:46.192"></status>
</kw>
<msg timestamp="20201115 23:01:46.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030668778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030760472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.905" endtime="20201115 23:01:46.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030668778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030760472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.196" endtime="20201115 23:01:46.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.205" endtime="20201115 23:01:46.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.903" endtime="20201115 23:01:46.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.901" endtime="20201115 23:01:46.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.211" level="INFO">${RESULT} = [{'time': 0.030760472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.16939999999998e-05, 'source_diff': 9.16939999999998e-05}, {'time': 0.030869472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:46.208" endtime="20201115 23:01:46.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.226" level="INFO">${ACCURACY} = {'diff': [9.16939999999998e-05, 9.152799999999697e-05, 9.120800000000234e-05, 9.145799999999912e-05, 9.1639000000001e-05, 9.19589999999991e-05, 9.163899999999753e-05, 9.113900000000397e-05, 9.11380000...</msg>
<status status="PASS" starttime="20201115 23:01:46.212" endtime="20201115 23:01:46.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.230" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.229" endtime="20201115 23:01:46.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.233" level="INFO">VALUE: [9.16939999999998e-05, 9.152799999999697e-05, 9.120800000000234e-05, 9.145799999999912e-05, 9.1639000000001e-05, 9.19589999999991e-05, 9.163899999999753e-05, 9.113900000000397e-05, 9.113800000000449e-05, 9.147200000000216e-05, 9.179100000000079e-05, 9.116600000000363e-05, 9.179200000000026e-05, 9.106999999999865e-05, 9.122200000000191e-05, 9.148600000000173e-05, 9.179200000000026e-05, 9.190199999999787e-05, 9.113900000000397e-05, 9.179099999999385e-05, 9.105499999999961e-05, 9.172200000000241e-05, 9.197199999999572e-05, 9.18199999999994e-05, 9.188900000000472e-05, 9.113900000000397e-05, 9.147300000000164e-05, 9.179200000000026e-05, 9.134699999999857e-05, 9.197199999999572e-05, 9.181899999999993e-05, 9.126400000000062e-05, 9.129199999999976e-05, 9.105599999999908e-05, 9.154200000000001e-05, 9.108399999999822e-05, 9.15000000000013e-05, 9.105599999999908e-05, 9.187499999999821e-05, 9.119500000000225e-05, 9.176400000000112e-05, 9.156899999999968e-05, 9.155599999999958e-05, 9.122200000000191e-05, 9.136099999999814e-05, 9.104199999999951e-05, 9.155599999999958e-05, 9.123600000000148e-05, 9.11250000000044e-05, 9.186099999999864e-05]</msg>
<status status="PASS" starttime="20201115 23:01:46.231" endtime="20201115 23:01:46.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.227" endtime="20201115 23:01:46.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.236" endtime="20201115 23:01:46.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.240" endtime="20201115 23:01:46.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.238" endtime="20201115 23:01:46.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.235" endtime="20201115 23:01:46.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.865" endtime="20201115 23:01:46.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.863" endtime="20201115 23:01:46.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.863" endtime="20201115 23:01:46.261"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.263" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.272" endtime="20201115 23:01:46.291"></status>
</kw>
<msg timestamp="20201115 23:01:46.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.270" endtime="20201115 23:01:46.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.292" endtime="20201115 23:01:46.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.295" endtime="20201115 23:01:46.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.267" endtime="20201115 23:01:46.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.265" endtime="20201115 23:01:46.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.304" endtime="20201115 23:01:46.589"></status>
</kw>
<msg timestamp="20201115 23:01:46.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024321028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024413069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.303" endtime="20201115 23:01:46.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024321028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024413069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.594" endtime="20201115 23:01:46.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.602" endtime="20201115 23:01:46.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.300" endtime="20201115 23:01:46.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.298" endtime="20201115 23:01:46.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.609" level="INFO">${RESULT} = [{'time': 0.024413069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.204099999999757e-05, 'source_diff': 9.204099999999757e-05}, {'time': 0.024527069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:46.605" endtime="20201115 23:01:46.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.622" level="INFO">${ACCURACY} = {'diff': [9.204099999999757e-05, 9.277699999999875e-05, 9.204100000000104e-05, 9.204099999999757e-05, 9.238899999999828e-05, 9.263899999999853e-05, 9.230600000000033e-05, 9.222199999999944e-05, 9.2319...</msg>
<status status="PASS" starttime="20201115 23:01:46.610" endtime="20201115 23:01:46.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.627" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.626" endtime="20201115 23:01:46.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.630" level="INFO">VALUE: [9.204099999999757e-05, 9.277699999999875e-05, 9.204100000000104e-05, 9.204099999999757e-05, 9.238899999999828e-05, 9.263899999999853e-05, 9.230600000000033e-05, 9.222199999999944e-05, 9.23199999999999e-05, 9.205600000000008e-05, 9.27079999999969e-05, 9.213899999999803e-05, 9.293000000000148e-05, 9.244400000000055e-05, 9.277799999999822e-05, 9.234699999999957e-05, 9.24719999999997e-05, 9.213899999999803e-05, 9.297299999999967e-05, 9.297299999999967e-05, 9.279100000000179e-05, 9.226400000000162e-05, 9.230499999999739e-05, 9.26940000000008e-05, 9.230600000000033e-05, 9.272199999999994e-05, 9.248600000000273e-05, 9.24719999999997e-05, 9.29590000000001e-05, 9.291700000000139e-05, 9.21940000000003e-05, 9.280500000000136e-05, 9.2026999999998e-05, 9.252799999999797e-05, 9.27079999999969e-05, 9.230600000000033e-05, 9.288899999999878e-05, 9.223600000000248e-05, 9.272299999999942e-05, 9.234699999999957e-05, 9.255500000000111e-05, 9.234699999999957e-05, 9.24719999999997e-05, 9.298599999999976e-05, 9.290299999999835e-05, 9.216700000000064e-05, 9.230600000000033e-05, 9.208399999999922e-05, 9.272299999999942e-05, 9.280499999999789e-05]</msg>
<status status="PASS" starttime="20201115 23:01:46.628" endtime="20201115 23:01:46.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.623" endtime="20201115 23:01:46.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.633" endtime="20201115 23:01:46.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.636" endtime="20201115 23:01:46.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.635" endtime="20201115 23:01:46.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.631" endtime="20201115 23:01:46.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.264" endtime="20201115 23:01:46.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.262" endtime="20201115 23:01:46.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.261" endtime="20201115 23:01:46.657"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.660" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.669" endtime="20201115 23:01:46.689"></status>
</kw>
<msg timestamp="20201115 23:01:46.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.667" endtime="20201115 23:01:46.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.691" endtime="20201115 23:01:46.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.694" endtime="20201115 23:01:46.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.664" endtime="20201115 23:01:46.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.662" endtime="20201115 23:01:46.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.703" endtime="20201115 23:01:46.989"></status>
</kw>
<msg timestamp="20201115 23:01:46.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025182319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025275528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.701" endtime="20201115 23:01:46.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025182319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025275528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.993" endtime="20201115 23:01:47.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.002" endtime="20201115 23:01:47.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.698" endtime="20201115 23:01:47.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.697" endtime="20201115 23:01:47.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.008" level="INFO">${RESULT} = [{'time': 0.025275528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.320899999999688e-05, 'source_diff': 9.320899999999688e-05}, {'time': 0.025389542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:47.005" endtime="20201115 23:01:47.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.022" level="INFO">${ACCURACY} = {'diff': [9.320899999999688e-05, 9.323600000000001e-05, 9.330599999999786e-05, 9.306900000000118e-05, 9.390199999999987e-05, 9.345800000000112e-05, 9.34720000000007e-05, 9.313899999999903e-05, 9.37919...</msg>
<status status="PASS" starttime="20201115 23:01:47.010" endtime="20201115 23:01:47.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.027" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.026" endtime="20201115 23:01:47.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.029" level="INFO">VALUE: [9.320899999999688e-05, 9.323600000000001e-05, 9.330599999999786e-05, 9.306900000000118e-05, 9.390199999999987e-05, 9.345800000000112e-05, 9.34720000000007e-05, 9.313899999999903e-05, 9.379199999999879e-05, 9.387500000000021e-05, 9.366699999999867e-05, 9.326399999999915e-05, 9.388899999999978e-05, 9.380599999999836e-05, 9.38330000000015e-05, 9.3639000000003e-05, 9.380499999999889e-05, 9.370800000000137e-05, 9.379199999999879e-05, 9.376399999999965e-05, 9.311099999999989e-05, 9.363899999999953e-05, 9.363899999999953e-05, 9.347300000000017e-05, 9.329100000000229e-05, 9.324999999999958e-05, 9.366699999999867e-05, 9.330500000000186e-05, 9.305600000000108e-05, 9.388899999999978e-05, 9.404099999999957e-05, 9.377799999999922e-05, 9.320900000000035e-05, 9.380600000000183e-05, 9.33879999999998e-05, 9.313899999999903e-05, 9.315300000000207e-05, 9.313899999999903e-05, 9.380600000000183e-05, 9.372200000000094e-05, 9.31529999999986e-05, 9.38200000000014e-05, 9.368100000000171e-05, 9.381899999999846e-05, 9.33879999999998e-05, 9.313899999999903e-05, 9.352799999999897e-05, 9.3639000000003e-05, 9.34720000000007e-05, 9.397199999999772e-05]</msg>
<status status="PASS" starttime="20201115 23:01:47.028" endtime="20201115 23:01:47.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.023" endtime="20201115 23:01:47.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.033" endtime="20201115 23:01:47.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.036" endtime="20201115 23:01:47.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.034" endtime="20201115 23:01:47.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.031" endtime="20201115 23:01:47.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.660" endtime="20201115 23:01:47.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.658" endtime="20201115 23:01:47.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.658" endtime="20201115 23:01:47.057"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.059" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.068" endtime="20201115 23:01:47.087"></status>
</kw>
<msg timestamp="20201115 23:01:47.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.066" endtime="20201115 23:01:47.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.089" endtime="20201115 23:01:47.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.091" endtime="20201115 23:01:47.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.064" endtime="20201115 23:01:47.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.062" endtime="20201115 23:01:47.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.100" endtime="20201115 23:01:47.386"></status>
</kw>
<msg timestamp="20201115 23:01:47.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024114222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024208736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.099" endtime="20201115 23:01:47.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024114222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024208736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.390" endtime="20201115 23:01:47.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.399" endtime="20201115 23:01:47.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.096" endtime="20201115 23:01:47.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.094" endtime="20201115 23:01:47.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.406" level="INFO">${RESULT} = [{'time': 0.024208736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.45140000000004e-05, 'source_diff': 9.45140000000004e-05}, {'time': 0.02432175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:47.402" endtime="20201115 23:01:47.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.419" level="INFO">${ACCURACY} = {'diff': [9.45140000000004e-05, 9.497199999999872e-05, 9.480600000000283e-05, 9.438900000000028e-05, 9.46660000000002e-05, 9.41659999999997e-05, 9.495799999999915e-05, 9.447199999999822e-05, 9.4389000...</msg>
<status status="PASS" starttime="20201115 23:01:47.407" endtime="20201115 23:01:47.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.424" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.423" endtime="20201115 23:01:47.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.426" level="INFO">VALUE: [9.45140000000004e-05, 9.497199999999872e-05, 9.480600000000283e-05, 9.438900000000028e-05, 9.46660000000002e-05, 9.41659999999997e-05, 9.495799999999915e-05, 9.447199999999822e-05, 9.438900000000028e-05, 9.487499999999774e-05, 9.479199999999979e-05, 9.454199999999954e-05, 9.47079999999989e-05, 9.413900000000003e-05, 9.479199999999979e-05, 9.493000000000001e-05, 9.497199999999872e-05, 9.481899999999946e-05, 9.487500000000121e-05, 9.480599999999936e-05, 9.422200000000144e-05, 9.409699999999785e-05, 9.463900000000053e-05, 9.44590000000016e-05, 9.462500000000096e-05, 9.465200000000062e-05, 9.497199999999872e-05, 9.427799999999972e-05, 9.422200000000144e-05, 9.44859999999978e-05, 9.463900000000053e-05, 9.427799999999972e-05, 9.402799999999947e-05, 9.419499999999831e-05, 9.497300000000167e-05, 9.431899999999896e-05, 9.475000000000108e-05, 9.44720000000017e-05, 9.495799999999915e-05, 9.466699999999967e-05, 9.463900000000053e-05, 9.431999999999843e-05, 9.455599999999911e-05, 9.434800000000104e-05, 9.447199999999822e-05, 9.495899999999863e-05, 9.445799999999865e-05, 9.494399999999958e-05, 9.429099999999982e-05, 9.429199999999929e-05]</msg>
<status status="PASS" starttime="20201115 23:01:47.425" endtime="20201115 23:01:47.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.420" endtime="20201115 23:01:47.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.429" endtime="20201115 23:01:47.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.433" endtime="20201115 23:01:47.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.431" endtime="20201115 23:01:47.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.428" endtime="20201115 23:01:47.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.060" endtime="20201115 23:01:47.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.058" endtime="20201115 23:01:47.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.057" endtime="20201115 23:01:47.454"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.456" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.465" endtime="20201115 23:01:47.485"></status>
</kw>
<msg timestamp="20201115 23:01:47.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.463" endtime="20201115 23:01:47.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.486" endtime="20201115 23:01:47.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.489" endtime="20201115 23:01:47.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.460" endtime="20201115 23:01:47.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.458" endtime="20201115 23:01:47.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.498" endtime="20201115 23:01:47.788"></status>
</kw>
<msg timestamp="20201115 23:01:47.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024980306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025076, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:47.496" endtime="20201115 23:01:47.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024980306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025076, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:47.792" endtime="20201115 23:01:47.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.801" endtime="20201115 23:01:47.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.494" endtime="20201115 23:01:47.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.492" endtime="20201115 23:01:47.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.807" level="INFO">${RESULT} = [{'time': 0.025076, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.569400000000033e-05, 'source_diff': 9.569400000000033e-05}, {'time': 0.025186069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:47.804" endtime="20201115 23:01:47.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.822" level="INFO">${ACCURACY} = {'diff': [9.569400000000033e-05, 9.594399999999711e-05, 9.597199999999972e-05, 9.54729999999987e-05, 9.550000000000183e-05, 9.580500000000089e-05, 9.55270000000015e-05, 9.593100000000049e-05, 9.547199...</msg>
<status status="PASS" starttime="20201115 23:01:47.808" endtime="20201115 23:01:47.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.827" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.826" endtime="20201115 23:01:47.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.829" level="INFO">VALUE: [9.569400000000033e-05, 9.594399999999711e-05, 9.597199999999972e-05, 9.54729999999987e-05, 9.550000000000183e-05, 9.580500000000089e-05, 9.55270000000015e-05, 9.593100000000049e-05, 9.547199999999922e-05, 9.598600000000276e-05, 9.595800000000015e-05, 9.545799999999965e-05, 9.579199999999732e-05, 9.538900000000128e-05, 9.563899999999806e-05, 9.581900000000046e-05, 9.572199999999947e-05, 9.586100000000264e-05, 9.555500000000064e-05, 9.504200000000004e-05, 9.536099999999867e-05, 9.597199999999972e-05, 9.56530000000011e-05, 9.529200000000029e-05, 9.559699999999935e-05, 9.554100000000107e-05, 9.573600000000251e-05, 9.547199999999922e-05, 9.59859999999993e-05, 9.54720000000027e-05, 9.561100000000239e-05, 9.54859999999988e-05, 9.598700000000224e-05, 9.513899999999756e-05, 9.580500000000089e-05, 9.587499999999874e-05, 9.581899999999699e-05, 9.588900000000178e-05, 9.59720000000032e-05, 9.52079999999994e-05, 9.530599999999986e-05, 9.555600000000011e-05, 9.555600000000011e-05, 9.554200000000054e-05, 9.573599999999904e-05, 9.545799999999965e-05, 9.595800000000015e-05, 9.545799999999965e-05, 9.595800000000015e-05, 9.512500000000146e-05]</msg>
<status status="PASS" starttime="20201115 23:01:47.828" endtime="20201115 23:01:47.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.823" endtime="20201115 23:01:47.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.832" endtime="20201115 23:01:47.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.836" endtime="20201115 23:01:47.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.834" endtime="20201115 23:01:47.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.831" endtime="20201115 23:01:47.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.457" endtime="20201115 23:01:47.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.455" endtime="20201115 23:01:47.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.454" endtime="20201115 23:01:47.857"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.859" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.867" endtime="20201115 23:01:47.886"></status>
</kw>
<msg timestamp="20201115 23:01:47.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.866" endtime="20201115 23:01:47.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.888" endtime="20201115 23:01:47.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.891" endtime="20201115 23:01:47.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.863" endtime="20201115 23:01:47.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.861" endtime="20201115 23:01:47.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.900" endtime="20201115 23:01:48.185"></status>
</kw>
<msg timestamp="20201115 23:01:48.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024282861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02437925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:47.898" endtime="20201115 23:01:48.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024282861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02437925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:48.189" endtime="20201115 23:01:48.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.198" endtime="20201115 23:01:48.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.896" endtime="20201115 23:01:48.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.894" endtime="20201115 23:01:48.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.204" level="INFO">${RESULT} = [{'time': 0.02437925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638900000000228e-05, 'source_diff': 9.638900000000228e-05}, {'time': 0.024488236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:48.201" endtime="20201115 23:01:48.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.218" level="INFO">${ACCURACY} = {'diff': [9.638900000000228e-05, 9.645800000000065e-05, 9.613899999999856e-05, 9.699999999999986e-05, 9.680600000000136e-05, 9.672299999999995e-05, 9.674999999999961e-05, 9.622199999999997e-05, 9.6624...</msg>
<status status="PASS" starttime="20201115 23:01:48.205" endtime="20201115 23:01:48.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.223" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.221" endtime="20201115 23:01:48.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.225" level="INFO">VALUE: [9.638900000000228e-05, 9.645800000000065e-05, 9.613899999999856e-05, 9.699999999999986e-05, 9.680600000000136e-05, 9.672299999999995e-05, 9.674999999999961e-05, 9.622199999999997e-05, 9.662499999999949e-05, 9.648600000000326e-05, 9.608300000000028e-05, 9.681999999999746e-05, 9.655600000000111e-05, 9.655600000000111e-05, 9.672299999999995e-05, 9.662499999999949e-05, 9.629199999999782e-05, 9.636099999999967e-05, 9.645800000000065e-05, 9.611099999999942e-05, 9.694400000000158e-05, 9.647200000000022e-05, 9.630600000000086e-05, 9.688900000000278e-05, 9.630600000000086e-05, 9.622199999999997e-05, 9.618100000000074e-05, 9.663899999999906e-05, 9.613900000000203e-05, 9.680500000000189e-05, 9.622199999999997e-05, 9.631900000000096e-05, 9.687499999999974e-05, 9.663899999999906e-05, 9.637499999999924e-05, 9.605600000000061e-05, 9.694500000000106e-05, 9.615299999999813e-05, 9.630500000000139e-05, 9.6027999999998e-05, 9.688899999999931e-05, 9.64859999999998e-05, 9.663900000000253e-05, 9.648699999999927e-05, 9.64859999999998e-05, 9.695799999999768e-05, 9.697200000000072e-05, 9.663900000000253e-05, 9.611099999999942e-05, 9.695800000000115e-05]</msg>
<status status="PASS" starttime="20201115 23:01:48.224" endtime="20201115 23:01:48.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.219" endtime="20201115 23:01:48.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.228" endtime="20201115 23:01:48.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.232" endtime="20201115 23:01:48.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.230" endtime="20201115 23:01:48.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.227" endtime="20201115 23:01:48.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.860" endtime="20201115 23:01:48.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.858" endtime="20201115 23:01:48.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.857" endtime="20201115 23:01:48.253"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.255" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.264" endtime="20201115 23:01:48.283"></status>
</kw>
<msg timestamp="20201115 23:01:48.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.262" endtime="20201115 23:01:48.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.284" endtime="20201115 23:01:48.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.287" endtime="20201115 23:01:48.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.259" endtime="20201115 23:01:48.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.257" endtime="20201115 23:01:48.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.296" endtime="20201115 23:01:48.582"></status>
</kw>
<msg timestamp="20201115 23:01:48.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024534806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024632306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.294" endtime="20201115 23:01:48.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024534806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024632306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.586" endtime="20201115 23:01:48.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.595" endtime="20201115 23:01:48.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.292" endtime="20201115 23:01:48.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.290" endtime="20201115 23:01:48.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.601" level="INFO">${RESULT} = [{'time': 0.024632306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.750000000000036e-05, 'source_diff': 9.750000000000036e-05}, {'time': 0.024745319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:48.598" endtime="20201115 23:01:48.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.615" level="INFO">${ACCURACY} = {'diff': [9.750000000000036e-05, 9.747200000000122e-05, 9.780499999999942e-05, 9.773599999999757e-05, 9.770900000000138e-05, 9.745800000000165e-05, 9.801299999999749e-05, 9.763900000000006e-05, 9.7959...</msg>
<status status="PASS" starttime="20201115 23:01:48.602" endtime="20201115 23:01:48.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.619" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.618" endtime="20201115 23:01:48.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.622" level="INFO">VALUE: [9.750000000000036e-05, 9.747200000000122e-05, 9.780499999999942e-05, 9.773599999999757e-05, 9.770900000000138e-05, 9.745800000000165e-05, 9.801299999999749e-05, 9.763900000000006e-05, 9.795900000000163e-05, 9.762500000000049e-05, 9.745900000000113e-05, 9.745800000000165e-05, 9.763900000000006e-05, 9.8028e-05, 9.797199999999825e-05, 9.715299999999913e-05, 9.713899999999956e-05, 9.78059999999989e-05, 9.722300000000045e-05, 9.732000000000143e-05, 9.705499999999867e-05, 9.708300000000128e-05, 9.793099999999902e-05, 9.763900000000006e-05, 9.734800000000057e-05, 9.745799999999818e-05, 9.763900000000006e-05, 9.718000000000226e-05, 9.72920000000023e-05, 9.752700000000003e-05, 9.720799999999793e-05, 9.761100000000092e-05, 9.76669999999992e-05, 9.747199999999775e-05, 9.797200000000172e-05, 9.763900000000006e-05, 9.793099999999902e-05, 9.708400000000075e-05, 9.795899999999816e-05, 9.730499999999892e-05, 9.709700000000085e-05, 9.737500000000024e-05, 9.756900000000221e-05, 9.763900000000006e-05, 9.745800000000165e-05, 9.794500000000206e-05, 9.745900000000113e-05, 9.77920000000028e-05, 9.737500000000024e-05, 9.712499999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:01:48.620" endtime="20201115 23:01:48.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.616" endtime="20201115 23:01:48.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.625" endtime="20201115 23:01:48.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.628" endtime="20201115 23:01:48.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.627" endtime="20201115 23:01:48.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.623" endtime="20201115 23:01:48.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.256" endtime="20201115 23:01:48.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.254" endtime="20201115 23:01:48.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.253" endtime="20201115 23:01:48.650"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.652" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.660" endtime="20201115 23:01:48.681"></status>
</kw>
<msg timestamp="20201115 23:01:48.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.659" endtime="20201115 23:01:48.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.682" endtime="20201115 23:01:48.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.685" endtime="20201115 23:01:48.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.656" endtime="20201115 23:01:48.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.654" endtime="20201115 23:01:48.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.694" endtime="20201115 23:01:48.978"></status>
</kw>
<msg timestamp="20201115 23:01:48.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024925528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025024, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:48.692" endtime="20201115 23:01:48.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024925528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025024, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:48.983" endtime="20201115 23:01:48.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.991" endtime="20201115 23:01:48.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.690" endtime="20201115 23:01:48.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.688" endtime="20201115 23:01:48.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.998" level="INFO">${RESULT} = [{'time': 0.025024, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.847200000000222e-05, 'source_diff': 9.847200000000222e-05}, {'time': 0.025139042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:48.994" endtime="20201115 23:01:48.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:49.011" level="INFO">${ACCURACY} = {'diff': [9.847200000000222e-05, 9.8334000000002e-05, 9.888899999999784e-05, 9.813900000000056e-05, 9.851400000000093e-05, 9.847200000000222e-05, 9.847200000000222e-05, 9.880500000000042e-05, 9.816699...</msg>
<status status="PASS" starttime="20201115 23:01:48.999" endtime="20201115 23:01:49.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.016" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:49.015" endtime="20201115 23:01:49.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.018" level="INFO">VALUE: [9.847200000000222e-05, 9.8334000000002e-05, 9.888899999999784e-05, 9.813900000000056e-05, 9.851400000000093e-05, 9.847200000000222e-05, 9.847200000000222e-05, 9.880500000000042e-05, 9.81669999999997e-05, 9.863899999999759e-05, 9.845799999999919e-05, 9.895899999999916e-05, 9.88059999999999e-05, 9.870899999999891e-05, 9.811200000000089e-05, 9.880500000000042e-05, 9.80410000000001e-05, 9.887500000000174e-05, 9.89999999999984e-05, 9.847200000000222e-05, 9.844500000000256e-05, 9.862500000000149e-05, 9.863900000000106e-05, 9.897200000000272e-05, 9.841600000000048e-05, 9.812500000000099e-05, 9.897199999999926e-05, 9.829199999999982e-05, 9.893100000000002e-05, 9.812499999999752e-05, 9.863900000000106e-05, 9.83059999999994e-05, 9.827800000000025e-05, 9.829199999999982e-05, 9.837500000000124e-05, 9.862500000000149e-05, 9.877800000000075e-05, 9.887499999999827e-05, 9.879200000000032e-05, 9.857000000000268e-05, 9.805599999999914e-05, 9.855599999999964e-05, 9.85410000000006e-05, 9.886100000000217e-05, 9.895799999999969e-05, 9.869500000000281e-05, 9.84860000000018e-05, 9.88059999999999e-05, 9.818099999999927e-05, 9.866699999999673e-05]</msg>
<status status="PASS" starttime="20201115 23:01:49.017" endtime="20201115 23:01:49.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.012" endtime="20201115 23:01:49.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.022" endtime="20201115 23:01:49.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:49.025" endtime="20201115 23:01:49.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.024" endtime="20201115 23:01:49.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.020" endtime="20201115 23:01:49.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.653" endtime="20201115 23:01:49.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.651" endtime="20201115 23:01:49.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.650" endtime="20201115 23:01:49.046"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.049" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.057" endtime="20201115 23:01:49.077"></status>
</kw>
<msg timestamp="20201115 23:01:49.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.055" endtime="20201115 23:01:49.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.079" endtime="20201115 23:01:49.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.082" endtime="20201115 23:01:49.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.053" endtime="20201115 23:01:49.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.051" endtime="20201115 23:01:49.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.091" endtime="20201115 23:01:49.377"></status>
</kw>
<msg timestamp="20201115 23:01:49.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024985167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025085014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.089" endtime="20201115 23:01:49.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024985167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025085014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.381" endtime="20201115 23:01:49.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.389" endtime="20201115 23:01:49.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.086" endtime="20201115 23:01:49.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.085" endtime="20201115 23:01:49.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:49.396" level="INFO">${RESULT} = [{'time': 0.025085014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.984700000000013e-05, 'source_diff': 9.984700000000013e-05}, {'time': 0.025201028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:49.393" endtime="20201115 23:01:49.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:49.411" level="INFO">${ACCURACY} = {'diff': [9.984700000000013e-05, 9.997200000000026e-05, 9.993100000000102e-05, 9.979200000000132e-05, 9.920799999999994e-05, 9.979100000000185e-05, 9.952699999999856e-05, 9.98609999999997e-05, 9.99720...</msg>
<status status="PASS" starttime="20201115 23:01:49.397" endtime="20201115 23:01:49.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.415" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:49.414" endtime="20201115 23:01:49.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.418" level="INFO">VALUE: [9.984700000000013e-05, 9.997200000000026e-05, 9.993100000000102e-05, 9.979200000000132e-05, 9.920799999999994e-05, 9.979100000000185e-05, 9.952699999999856e-05, 9.98609999999997e-05, 9.997200000000026e-05, 9.945800000000019e-05, 9.983400000000003e-05, 9.987499999999927e-05, 0.00010002799999999853, 9.944400000000062e-05, 9.913900000000156e-05, 9.929099999999788e-05, 9.954099999999813e-05, 9.954200000000107e-05, 9.973599999999957e-05, 9.98060000000009e-05, 9.970899999999991e-05, 9.916599999999776e-05, 9.980599999999742e-05, 9.988799999999937e-05, 9.980500000000142e-05, 9.920799999999994e-05, 9.930500000000092e-05, 9.923599999999907e-05, 9.963899999999859e-05, 9.912499999999852e-05, 9.947299999999923e-05, 9.962500000000249e-05, 9.99159999999985e-05, 9.915300000000113e-05, 9.950000000000236e-05, 9.911100000000242e-05, 9.995800000000069e-05, 9.913899999999809e-05, 9.96800000000013e-05, 9.979199999999785e-05, 9.94020000000019e-05, 0.00010001399999999896, 9.912500000000199e-05, 9.979100000000185e-05, 9.92219999999995e-05, 9.930500000000092e-05, 9.905600000000014e-05, 9.933399999999953e-05, 9.945899999999966e-05, 9.963899999999859e-05]</msg>
<status status="PASS" starttime="20201115 23:01:49.416" endtime="20201115 23:01:49.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.412" endtime="20201115 23:01:49.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.421" endtime="20201115 23:01:49.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:49.425" endtime="20201115 23:01:49.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.423" endtime="20201115 23:01:49.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.419" endtime="20201115 23:01:49.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.049" endtime="20201115 23:01:49.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.048" endtime="20201115 23:01:49.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.047" endtime="20201115 23:01:49.446"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.448" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.456" endtime="20201115 23:01:49.477"></status>
</kw>
<msg timestamp="20201115 23:01:49.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.455" endtime="20201115 23:01:49.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.478" endtime="20201115 23:01:49.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.481" endtime="20201115 23:01:49.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.452" endtime="20201115 23:01:49.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.450" endtime="20201115 23:01:49.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.490" endtime="20201115 23:01:49.781"></status>
</kw>
<msg timestamp="20201115 23:01:49.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024216, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024316556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:49.488" endtime="20201115 23:01:49.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024216, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024316556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:49.786" endtime="20201115 23:01:49.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.794" endtime="20201115 23:01:49.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.486" endtime="20201115 23:01:49.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.484" endtime="20201115 23:01:49.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:49.800" level="INFO">${RESULT} = [{'time': 0.024316556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010055599999999817, 'source_diff': 0.00010055599999999817}, {'time': 0.024434556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:49.797" endtime="20201115 23:01:49.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:49.814" level="INFO">${ACCURACY} = {'diff': [0.00010055599999999817, 0.00010012499999999952, 0.00010048600000000033, 0.00010080500000000242, 0.00010020800000000094, 0.00010077799999999928, 0.00010018100000000127, 0.0001003060000000014,...</msg>
<status status="PASS" starttime="20201115 23:01:49.802" endtime="20201115 23:01:49.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.818" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:49.817" endtime="20201115 23:01:49.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.821" level="INFO">VALUE: [0.00010055599999999817, 0.00010012499999999952, 0.00010048600000000033, 0.00010080500000000242, 0.00010020800000000094, 0.00010077799999999928, 0.00010018100000000127, 0.0001003060000000014, 0.00010069500000000134, 0.00010011099999999995, 0.00010079199999999885, 0.0001000549999999982, 0.0001003610000000002, 0.00010095800000000169, 0.00010018100000000127, 0.00010098600000000083, 0.00010013900000000256, 0.00010063899999999959, 0.0001003060000000014, 0.00010072300000000048, 0.00010079200000000232, 0.00010038799999999987, 0.00010076399999999971, 0.00010054099999999913, 0.00010038899999999934, 0.00010097200000000126, 0.00010013899999999909, 0.00010030599999999792, 0.00010075000000000014, 0.0001003060000000014, 0.00010088899999999984, 0.00010062500000000002, 0.00010077799999999928, 0.0001005549999999987, 9.998599999999983e-05, 0.00010072199999999754, 0.00010095899999999769, 0.000100819999999998, 0.00010088899999999984, 0.00010013799999999962, 0.00010030500000000192, 0.00010004099999999863, 0.00010073600000000058, 0.0001003199999999975, 0.00010020800000000094, 0.00010045799999999772, 0.00010075000000000014, 0.0001006670000000022, 0.00010098600000000083, 0.00010033299999999759]</msg>
<status status="PASS" starttime="20201115 23:01:49.819" endtime="20201115 23:01:49.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.815" endtime="20201115 23:01:49.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.824" endtime="20201115 23:01:49.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:49.827" endtime="20201115 23:01:49.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.826" endtime="20201115 23:01:49.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.822" endtime="20201115 23:01:49.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.449" endtime="20201115 23:01:49.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.447" endtime="20201115 23:01:49.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.446" endtime="20201115 23:01:49.849"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.851" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.859" endtime="20201115 23:01:49.880"></status>
</kw>
<msg timestamp="20201115 23:01:49.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.858" endtime="20201115 23:01:49.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.881" endtime="20201115 23:01:49.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.884" endtime="20201115 23:01:49.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.855" endtime="20201115 23:01:49.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.853" endtime="20201115 23:01:49.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.893" endtime="20201115 23:01:50.180"></status>
</kw>
<msg timestamp="20201115 23:01:50.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024389333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024490806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.891" endtime="20201115 23:01:50.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024389333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024490806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.184" endtime="20201115 23:01:50.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.192" endtime="20201115 23:01:50.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.889" endtime="20201115 23:01:50.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.887" endtime="20201115 23:01:50.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.199" level="INFO">${RESULT} = [{'time': 0.024490806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010147300000000123, 'source_diff': 0.00010147300000000123}, {'time': 0.024612819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:50.195" endtime="20201115 23:01:50.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.212" level="INFO">${ACCURACY} = {'diff': [0.00010147300000000123, 0.00010127700000000031, 0.00010156899999999927, 0.00010154100000000013, 0.00010172199999999854, 0.00010107000000000171, 0.00010129199999999935, 0.0001010419999999991,...</msg>
<status status="PASS" starttime="20201115 23:01:50.200" endtime="20201115 23:01:50.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.216" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.215" endtime="20201115 23:01:50.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.219" level="INFO">VALUE: [0.00010147300000000123, 0.00010127700000000031, 0.00010156899999999927, 0.00010154100000000013, 0.00010172199999999854, 0.00010107000000000171, 0.00010129199999999935, 0.0001010419999999991, 0.0001018749999999978, 0.00010113900000000009, 0.00010195799999999922, 0.00010163900000000059, 0.00010113900000000009, 0.00010113900000000009, 0.00010152800000000003, 0.00010197200000000226, 0.00010147200000000176, 0.00010140299999999991, 0.0001018060000000029, 0.00010106899999999877, 0.000101722000000002, 0.00010183299999999909, 0.00010126400000000021, 0.00010130599999999892, 0.00010188899999999737, 0.00010130599999999892, 0.00010106999999999824, 0.00010123600000000108, 0.00010130499999999945, 0.00010188900000000084, 0.00010163900000000059, 0.00010113900000000009, 0.00010158299999999884, 0.00010127799999999978, 0.00010107000000000171, 0.00010172300000000148, 0.00010130599999999892, 0.00010137500000000077, 0.00010163900000000059, 0.00010131899999999902, 0.00010170799999999897, 0.00010113900000000009, 0.00010130599999999892, 0.00010155599999999917, 0.00010187500000000127, 0.00010163900000000059, 0.00010130499999999945, 0.00010104099999999963, 0.00010140299999999991, 0.00010162499999999755]</msg>
<status status="PASS" starttime="20201115 23:01:50.217" endtime="20201115 23:01:50.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.213" endtime="20201115 23:01:50.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.222" endtime="20201115 23:01:50.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.225" endtime="20201115 23:01:50.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.224" endtime="20201115 23:01:50.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.220" endtime="20201115 23:01:50.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.852" endtime="20201115 23:01:50.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.850" endtime="20201115 23:01:50.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.849" endtime="20201115 23:01:50.246"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.249" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.257" endtime="20201115 23:01:50.277"></status>
</kw>
<msg timestamp="20201115 23:01:50.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.255" endtime="20201115 23:01:50.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.278" endtime="20201115 23:01:50.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.281" endtime="20201115 23:01:50.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.253" endtime="20201115 23:01:50.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.251" endtime="20201115 23:01:50.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.290" endtime="20201115 23:01:50.575"></status>
</kw>
<msg timestamp="20201115 23:01:50.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024207347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024310208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.288" endtime="20201115 23:01:50.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024207347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024310208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.579" endtime="20201115 23:01:50.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.588" endtime="20201115 23:01:50.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.286" endtime="20201115 23:01:50.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.284" endtime="20201115 23:01:50.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.594" level="INFO">${RESULT} = [{'time': 0.024310208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010286099999999923, 'source_diff': 0.00010286099999999923}, {'time': 0.024428236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:50.591" endtime="20201115 23:01:50.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.607" level="INFO">${ACCURACY} = {'diff': [0.00010286099999999923, 0.00010215300000000066, 0.00010295800000000022, 0.00010247199999999929, 0.00010263899999999812, 0.00010245900000000266, 0.00010213900000000109, 0.00010230500000000045...</msg>
<status status="PASS" starttime="20201115 23:01:50.595" endtime="20201115 23:01:50.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.612" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.611" endtime="20201115 23:01:50.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.614" level="INFO">VALUE: [0.00010286099999999923, 0.00010215300000000066, 0.00010295800000000022, 0.00010247199999999929, 0.00010263899999999812, 0.00010245900000000266, 0.00010213900000000109, 0.00010230500000000045, 0.00010263899999999812, 0.00010284699999999966, 0.00010213900000000109, 0.00010231900000000002, 0.00010223600000000208, 0.0001021809999999998, 0.00010229200000000035, 0.00010220899999999894, 0.00010206999999999924, 0.00010213799999999815, 0.00010265299999999769, 0.00010208299999999934, 0.00010280600000000042, 0.00010205600000000314, 0.00010290300000000141, 0.00010247200000000276, 0.00010233299999999959, 0.00010272299999999901, 0.00010247199999999929, 0.00010263899999999812, 0.00010247199999999929, 0.00010215300000000066, 0.00010280600000000042, 0.00010294400000000065, 0.00010245899999999919, 0.00010298699999999883, 0.00010298599999999936, 0.00010280500000000095, 0.0001025550000000007, 0.00010204100000000063, 0.00010270799999999997, 0.00010297199999999979, 0.00010262499999999855, 0.00010263900000000159, 0.00010297299999999926, 0.00010297299999999926, 0.00010240199999999797, 0.00010279100000000138, 0.00010259700000000288, 0.00010241699999999701, 0.00010279200000000085, 0.00010220799999999947]</msg>
<status status="PASS" starttime="20201115 23:01:50.613" endtime="20201115 23:01:50.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.608" endtime="20201115 23:01:50.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.617" endtime="20201115 23:01:50.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.621" endtime="20201115 23:01:50.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.619" endtime="20201115 23:01:50.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.616" endtime="20201115 23:01:50.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.249" endtime="20201115 23:01:50.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.247" endtime="20201115 23:01:50.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.247" endtime="20201115 23:01:50.642"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.644" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.652" endtime="20201115 23:01:50.674"></status>
</kw>
<msg timestamp="20201115 23:01:50.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.651" endtime="20201115 23:01:50.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.675" endtime="20201115 23:01:50.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.678" endtime="20201115 23:01:50.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.648" endtime="20201115 23:01:50.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.646" endtime="20201115 23:01:50.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.687" endtime="20201115 23:01:50.974"></status>
</kw>
<msg timestamp="20201115 23:01:50.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025110514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025214167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.686" endtime="20201115 23:01:50.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025110514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025214167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.978" endtime="20201115 23:01:50.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.986" endtime="20201115 23:01:50.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.683" endtime="20201115 23:01:50.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.682" endtime="20201115 23:01:50.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.993" level="INFO">${RESULT} = [{'time': 0.025214167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010365299999999869, 'source_diff': 0.00010365299999999869}, {'time': 0.025337194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:50.990" endtime="20201115 23:01:50.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.007" level="INFO">${ACCURACY} = {'diff': [0.00010365299999999869, 0.0001037360000000001, 0.00010347200000000029, 0.00010327700000000231, 0.0001032359999999996, 0.00010383300000000109, 0.00010322200000000004, 0.00010363899999999912, ...</msg>
<status status="PASS" starttime="20201115 23:01:50.994" endtime="20201115 23:01:51.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.012" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.011" endtime="20201115 23:01:51.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.014" level="INFO">VALUE: [0.00010365299999999869, 0.0001037360000000001, 0.00010347200000000029, 0.00010327700000000231, 0.0001032359999999996, 0.00010383300000000109, 0.00010322200000000004, 0.00010363899999999912, 0.00010380600000000142, 0.00010384800000000013, 0.00010317999999999786, 0.00010329200000000135, 0.00010305499999999773, 0.00010386100000000023, 0.00010311099999999948, 0.00010395800000000122, 0.00010322200000000004, 0.0001033749999999993, 0.00010380599999999796, 0.00010302800000000154, 0.0001033879999999994, 0.00010309699999999991, 0.00010340199999999897, 0.00010347200000000029, 0.00010380600000000142, 0.0001033749999999993, 0.00010347200000000029, 0.00010394499999999765, 0.00010330599999999746, 0.00010354199999999814, 0.0001035550000000017, 0.00010355499999999823, 0.00010386099999999676, 0.00010381900000000152, 0.00010377699999999934, 0.00010397200000000079, 0.00010379199999999839, 0.00010372300000000001, 0.00010362499999999955, 0.00010397199999999732, 0.00010397199999999732, 0.00010330499999999798, 0.00010322200000000004, 0.00010308300000000034, 0.00010380599999999796, 0.00010307000000000024, 0.00010312500000000252, 0.00010372300000000001, 0.00010399999999999993, 0.00010315299999999819]</msg>
<status status="PASS" starttime="20201115 23:01:51.013" endtime="20201115 23:01:51.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.008" endtime="20201115 23:01:51.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.017" endtime="20201115 23:01:51.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.021" endtime="20201115 23:01:51.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.019" endtime="20201115 23:01:51.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.016" endtime="20201115 23:01:51.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.645" endtime="20201115 23:01:51.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.643" endtime="20201115 23:01:51.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.642" endtime="20201115 23:01:51.042"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.044" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.057" endtime="20201115 23:01:51.077"></status>
</kw>
<msg timestamp="20201115 23:01:51.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.055" endtime="20201115 23:01:51.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.078" endtime="20201115 23:01:51.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.081" endtime="20201115 23:01:51.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.052" endtime="20201115 23:01:51.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.046" endtime="20201115 23:01:51.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.090" endtime="20201115 23:01:51.376"></status>
</kw>
<msg timestamp="20201115 23:01:51.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028269931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028374278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.088" endtime="20201115 23:01:51.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028269931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028374278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.380" endtime="20201115 23:01:51.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.388" endtime="20201115 23:01:51.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.086" endtime="20201115 23:01:51.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.084" endtime="20201115 23:01:51.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:51.395" level="INFO">${RESULT} = [{'time': 0.028374278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010434699999999769, 'source_diff': 0.00010434699999999769}, {'time': 0.028490292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:51.391" endtime="20201115 23:01:51.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.408" level="INFO">${ACCURACY} = {'diff': [0.00010434699999999769, 0.0001043200000000015, 0.00010443000000000258, 0.00010477700000000034, 0.0001045550000000027, 0.00010487499999999733, 0.00010445800000000172, 0.00010412500000000005, ...</msg>
<status status="PASS" starttime="20201115 23:01:51.396" endtime="20201115 23:01:51.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.412" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.411" endtime="20201115 23:01:51.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.415" level="INFO">VALUE: [0.00010434699999999769, 0.0001043200000000015, 0.00010443000000000258, 0.00010477700000000034, 0.0001045550000000027, 0.00010487499999999733, 0.00010445800000000172, 0.00010412500000000005, 0.00010429200000000236, 0.00010454199999999914, 0.00010404199999999864, 0.00010404199999999864, 0.00010420800000000147, 0.00010495800000000222, 0.00010463900000000012, 0.00010445800000000172, 0.00010447200000000129, 0.00010447200000000129, 0.00010447300000000076, 0.00010447300000000076, 0.00010495799999999875, 0.00010450000000000043, 0.00010447200000000129, 0.00010500000000000093, 0.00010494399999999918, 0.00010440299999999597, 0.00010497199999999485, 0.00010466600000000326, 0.00010445900000000119, 0.00010480499999999948, 0.00010405499999999873, 0.00010488900000000384, 0.0001043610000000042, 0.00010422200000000104, 0.00010483400000000503, 0.00010422200000000104, 0.00010427799999999932, 0.00010422300000000051, 0.00010413800000000362, 0.00010448600000000086, 0.00010448600000000086, 0.00010431899999999855, 0.00010436099999999726, 0.00010440299999999597, 0.00010412500000000352, 0.00010430599999999846, 0.00010470799999999503, 0.00010497200000000179, 0.00010448600000000086, 0.00010480499999999948]</msg>
<status status="PASS" starttime="20201115 23:01:51.413" endtime="20201115 23:01:51.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.409" endtime="20201115 23:01:51.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.418" endtime="20201115 23:01:51.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.422" endtime="20201115 23:01:51.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.420" endtime="20201115 23:01:51.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.416" endtime="20201115 23:01:51.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.045" endtime="20201115 23:01:51.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.043" endtime="20201115 23:01:51.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.042" endtime="20201115 23:01:51.443"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.445" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.453" endtime="20201115 23:01:51.473"></status>
</kw>
<msg timestamp="20201115 23:01:51.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.452" endtime="20201115 23:01:51.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.474" endtime="20201115 23:01:51.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.477" endtime="20201115 23:01:51.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.449" endtime="20201115 23:01:51.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.447" endtime="20201115 23:01:51.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.486" endtime="20201115 23:01:51.774"></status>
</kw>
<msg timestamp="20201115 23:01:51.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024368181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024473556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.485" endtime="20201115 23:01:51.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024368181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024473556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.778" endtime="20201115 23:01:51.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.787" endtime="20201115 23:01:51.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.482" endtime="20201115 23:01:51.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.480" endtime="20201115 23:01:51.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:51.793" level="INFO">${RESULT} = [{'time': 0.024473556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001053750000000013, 'source_diff': 0.0001053750000000013}, {'time': 0.024598639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:51.790" endtime="20201115 23:01:51.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.806" level="INFO">${ACCURACY} = {'diff': [0.0001053750000000013, 0.00010537499999999783, 0.00010572200000000254, 0.00010597199999999932, 0.00010547200000000229, 0.00010598599999999889, 0.00010529199999999989, 0.00010538900000000087,...</msg>
<status status="PASS" starttime="20201115 23:01:51.794" endtime="20201115 23:01:51.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.811" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.810" endtime="20201115 23:01:51.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.813" level="INFO">VALUE: [0.0001053750000000013, 0.00010537499999999783, 0.00010572200000000254, 0.00010597199999999932, 0.00010547200000000229, 0.00010598599999999889, 0.00010529199999999989, 0.00010538900000000087, 0.00010563900000000112, 0.00010509799999999792, 0.00010562499999999808, 0.00010512500000000105, 0.00010529100000000041, 0.0001053750000000013, 0.00010550000000000143, 0.00010509699999999844, 0.00010534699999999869, 0.00010529199999999989, 0.00010513900000000062, 0.00010586099999999876, 0.00010538900000000087, 0.00010580500000000048, 0.00010588900000000137, 0.00010529199999999989, 0.00010502800000000007, 0.00010561099999999851, 0.00010536099999999826, 0.00010581900000000005, 0.0001050689999999993, 0.00010591700000000051, 0.00010547200000000229, 0.00010530499999999998, 0.00010537499999999783, 0.00010562500000000155, 0.00010562500000000155, 0.000105820000000003, 0.0001055689999999998, 0.00010586099999999876, 0.00010529100000000041, 0.00010590300000000094, 0.0001051949999999989, 0.00010513900000000062, 0.00010580599999999996, 0.00010505600000000268, 0.00010506999999999878, 0.00010588900000000137, 0.00010561099999999851, 0.00010597199999999932, 0.00010595799999999975, 0.00010548599999999839]</msg>
<status status="PASS" starttime="20201115 23:01:51.812" endtime="20201115 23:01:51.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.807" endtime="20201115 23:01:51.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.817" endtime="20201115 23:01:51.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.820" endtime="20201115 23:01:51.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.819" endtime="20201115 23:01:51.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.815" endtime="20201115 23:01:51.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.446" endtime="20201115 23:01:51.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.444" endtime="20201115 23:01:51.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.443" endtime="20201115 23:01:51.842"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.844" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.852" endtime="20201115 23:01:51.872"></status>
</kw>
<msg timestamp="20201115 23:01:51.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.851" endtime="20201115 23:01:51.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.874" endtime="20201115 23:01:51.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.877" endtime="20201115 23:01:51.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.848" endtime="20201115 23:01:51.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.846" endtime="20201115 23:01:51.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.886" endtime="20201115 23:01:52.172"></status>
</kw>
<msg timestamp="20201115 23:01:52.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024530333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024636708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.884" endtime="20201115 23:01:52.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024530333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024636708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.176" endtime="20201115 23:01:52.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.184" endtime="20201115 23:01:52.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.882" endtime="20201115 23:01:52.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.880" endtime="20201115 23:01:52.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.191" level="INFO">${RESULT} = [{'time': 0.024636708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010637499999999883, 'source_diff': 0.00010637499999999883}, {'time': 0.024763722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:52.187" endtime="20201115 23:01:52.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:52.204" level="INFO">${ACCURACY} = {'diff': [0.00010637499999999883, 0.00010613899999999815, 0.00010631900000000055, 0.0001063889999999984, 0.00010680600000000096, 0.00010620899999999947, 0.00010630600000000046, 0.00010687499999999933,...</msg>
<status status="PASS" starttime="20201115 23:01:52.192" endtime="20201115 23:01:52.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.208" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:01:52.207" endtime="20201115 23:01:52.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.211" level="INFO">VALUE: [0.00010637499999999883, 0.00010613899999999815, 0.00010631900000000055, 0.0001063889999999984, 0.00010680600000000096, 0.00010620899999999947, 0.00010630600000000046, 0.00010687499999999933, 0.00010679100000000191, 0.00010622199999999957, 0.00010645800000000025, 0.00010697200000000032, 0.00010645800000000025, 0.00010663900000000212, 0.00010697200000000032, 0.0001067499999999992, 0.00010620899999999947, 0.00010677699999999887, 0.00010604100000000116, 0.00010609699999999944, 0.00010640299999999797, 0.00010636099999999926, 0.0001060560000000002, 0.00010620900000000294, 0.00010636100000000273, 0.00010636099999999926, 0.00010697200000000032, 0.00010611099999999901, 0.00010663899999999865, 0.00010680600000000096, 0.0001066950000000004, 0.0001063339999999996, 0.00010641599999999807, 0.00010662500000000255, 0.00010648599999999939, 0.00010613899999999815, 0.00010694400000000118, 0.00010695799999999728, 0.00010629199999999742, 0.00010693099999999761, 0.00010647199999999982, 0.00010654200000000114, 0.00010658300000000037, 0.00010648600000000286, 0.00010662499999999908, 0.00010630500000000098, 0.00010695899999999675, 0.00010613900000000162, 0.00010611099999999901, 0.00010613899999999815]</msg>
<status status="PASS" starttime="20201115 23:01:52.209" endtime="20201115 23:01:52.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.205" endtime="20201115 23:01:52.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.214" endtime="20201115 23:01:52.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.218" endtime="20201115 23:01:52.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.216" endtime="20201115 23:01:52.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.213" endtime="20201115 23:01:52.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.845" endtime="20201115 23:01:52.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.843" endtime="20201115 23:01:52.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.842" endtime="20201115 23:01:52.239"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.241" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.249" endtime="20201115 23:01:52.271"></status>
</kw>
<msg timestamp="20201115 23:01:52.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.248" endtime="20201115 23:01:52.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.273" endtime="20201115 23:01:52.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.276" endtime="20201115 23:01:52.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.245" endtime="20201115 23:01:52.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.243" endtime="20201115 23:01:52.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.285" endtime="20201115 23:01:52.570"></status>
</kw>
<msg timestamp="20201115 23:01:52.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025338694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025446056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.283" endtime="20201115 23:01:52.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025338694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025446056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.574" endtime="20201115 23:01:52.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.583" endtime="20201115 23:01:52.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.281" endtime="20201115 23:01:52.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.279" endtime="20201115 23:01:52.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.589" level="INFO">${RESULT} = [{'time': 0.025446056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001073620000000032, 'source_diff': 0.0001073620000000032}, {'time': 0.025573097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:52.586" endtime="20201115 23:01:52.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:52.607" level="INFO">${ACCURACY} = {'diff': [0.0001073620000000032, 0.00010715299999999872, 0.00010763899999999965, 0.00010798599999999742, 0.00010730600000000146, 0.00010783300000000162, 0.00010797200000000132, 0.00010736100000000026,...</msg>
<status status="PASS" starttime="20201115 23:01:52.591" endtime="20201115 23:01:52.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.612" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:01:52.611" endtime="20201115 23:01:52.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.614" level="INFO">VALUE: [0.0001073620000000032, 0.00010715299999999872, 0.00010763899999999965, 0.00010798599999999742, 0.00010730600000000146, 0.00010783300000000162, 0.00010797200000000132, 0.00010736100000000026, 0.00010738799999999993, 0.00010730499999999851, 0.0001077219999999976, 0.00010713899999999915, 0.00010730500000000198, 0.0001073889999999994, 0.00010791699999999904, 0.00010798599999999742, 0.00010713899999999915, 0.00010713799999999968, 0.00010797200000000132, 0.00010713900000000262, 0.00010747200000000082, 0.00010797199999999785, 0.00010748600000000039, 0.00010729199999999842, 0.00010751399999999953, 0.00010704199999999817, 0.000107208999999997, 0.00010776399999999978, 0.0001077080000000015, 0.00010792999999999914, 0.00010776400000000325, 0.00010737499999999983, 0.00010730599999999799, 0.0001078340000000011, 0.00010744400000000168, 0.00010804199999999917, 0.00010781900000000205, 0.00010712499999999958, 0.00010790300000000294, 0.00010732000000000103, 0.0001070699999999973, 0.00010758400000000085, 0.00010738900000000287, 0.00010747299999999682, 0.00010713799999999968, 0.00010779099999999944, 0.000107208000000001, 0.00010729199999999842, 0.0001077219999999976, 0.00010799999999999699]</msg>
<status status="PASS" starttime="20201115 23:01:52.613" endtime="20201115 23:01:52.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.608" endtime="20201115 23:01:52.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.617" endtime="20201115 23:01:52.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.620" endtime="20201115 23:01:52.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.619" endtime="20201115 23:01:52.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.615" endtime="20201115 23:01:52.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.242" endtime="20201115 23:01:52.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.240" endtime="20201115 23:01:52.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.239" endtime="20201115 23:01:52.642"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.644" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.652" endtime="20201115 23:01:52.673"></status>
</kw>
<msg timestamp="20201115 23:01:52.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.651" endtime="20201115 23:01:52.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.674" endtime="20201115 23:01:52.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.677" endtime="20201115 23:01:52.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.648" endtime="20201115 23:01:52.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.646" endtime="20201115 23:01:52.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.686" endtime="20201115 23:01:52.972"></status>
</kw>
<msg timestamp="20201115 23:01:52.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024270042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024379014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.684" endtime="20201115 23:01:52.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024270042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024379014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.976" endtime="20201115 23:01:52.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.985" endtime="20201115 23:01:52.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.682" endtime="20201115 23:01:52.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.680" endtime="20201115 23:01:52.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.991" level="INFO">${RESULT} = [{'time': 0.024379014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010897200000000232, 'source_diff': 0.00010897200000000232}, {'time': 0.024510014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:52.988" endtime="20201115 23:01:52.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:53.005" level="INFO">${ACCURACY} = {'diff': [0.00010897200000000232, 0.0001088890000000009, 0.00010877800000000035, 0.00010872299999999807, 0.00010847299999999782, 0.00010830500000000298, 0.00010840299999999997, 0.00010897199999999885,...</msg>
<status status="PASS" starttime="20201115 23:01:52.992" endtime="20201115 23:01:53.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.009" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:01:53.008" endtime="20201115 23:01:53.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.012" level="INFO">VALUE: [0.00010897200000000232, 0.0001088890000000009, 0.00010877800000000035, 0.00010872299999999807, 0.00010847299999999782, 0.00010830500000000298, 0.00010840299999999997, 0.00010897199999999885, 0.00010897199999999885, 0.00010879199999999992, 0.00010890300000000047, 0.00010831999999999856, 0.00010837500000000083, 0.00010845900000000172, 0.00010812500000000058, 0.00010894399999999971, 0.00010806899999999883, 0.00010904100000000069, 0.00010812499999999711, 0.00010879199999999992, 0.00010822299999999757, 0.00010813900000000015, 0.00010897199999999885, 0.00010898599999999842, 0.00010863899999999718, 0.00010812500000000058, 0.0001086950000000024, 0.00010845799999999878, 0.00010877800000000035, 0.00010837500000000083, 0.00010831900000000255, 0.00010873600000000164, 0.00010880500000000001, 0.00010887500000000133, 0.00010847199999999835, 0.00010830599999999899, 0.0001087219999999986, 0.00010862499999999761, 0.00010812499999999711, 0.00010829199999999942, 0.000108208000000002, 0.00010829099999999994, 0.00010854100000000019, 0.00010805599999999874, 0.00010851400000000053, 0.00010823600000000114, 0.00010813900000000015, 0.00010895900000000222, 0.00010830499999999951, 0.00010837500000000083]</msg>
<status status="PASS" starttime="20201115 23:01:53.010" endtime="20201115 23:01:53.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.006" endtime="20201115 23:01:53.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.015" endtime="20201115 23:01:53.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.018" endtime="20201115 23:01:53.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.017" endtime="20201115 23:01:53.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.013" endtime="20201115 23:01:53.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.645" endtime="20201115 23:01:53.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.643" endtime="20201115 23:01:53.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.642" endtime="20201115 23:01:53.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.152" endtime="20201115 23:01:53.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.044" endtime="20201115 23:01:53.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.042" endtime="20201115 23:01:53.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.041" endtime="20201115 23:01:53.064"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:13.078" endtime="20201115 23:01:53.065" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.072" endtime="20201115 23:01:53.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.071" endtime="20201115 23:01:53.093"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.107" endtime="20201115 23:01:53.121"></status>
</kw>
<msg timestamp="20201115 23:01:53.121" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.105" endtime="20201115 23:01:53.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.124" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.123" endtime="20201115 23:01:53.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.127" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:53.125" endtime="20201115 23:01:53.127"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:53.103" endtime="20201115 23:01:53.128"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:53.100" endtime="20201115 23:01:53.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.098" endtime="20201115 23:01:53.129"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:53.133" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:53.132" endtime="20201115 23:01:53.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.130" endtime="20201115 23:01:53.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.097" endtime="20201115 23:01:53.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.096" endtime="20201115 23:01:53.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.134" endtime="20201115 23:01:53.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.095" endtime="20201115 23:01:53.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.093" endtime="20201115 23:01:53.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.069" endtime="20201115 23:01:53.137"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.141" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.149" endtime="20201115 23:01:53.164"></status>
</kw>
<msg timestamp="20201115 23:01:53.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.147" endtime="20201115 23:01:53.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.166" endtime="20201115 23:01:53.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.168" endtime="20201115 23:01:53.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.145" endtime="20201115 23:01:53.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.143" endtime="20201115 23:01:53.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.179" endtime="20201115 23:01:53.465"></status>
</kw>
<msg timestamp="20201115 23:01:53.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069522069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06953175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:53.177" endtime="20201115 23:01:53.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069522069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06953175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:53.469" endtime="20201115 23:01:53.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.477" endtime="20201115 23:01:53.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.173" endtime="20201115 23:01:53.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.172" endtime="20201115 23:01:53.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:53.484" level="INFO">${RESULT} = [{'time': 0.06953175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.680999999997497e-06, 'source_diff': 9.680999999997497e-06}, {'time': 0.069551972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:53.481" endtime="20201115 23:01:53.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:53.498" level="INFO">${ACCURACY} = {'diff': [9.680999999997497e-06, 9.707999999997163e-06, 9.652999999998357e-06, 9.042000000000772e-06, 9.666999999990988e-06, 9.042000000000772e-06, 9.069000000000438e-06, 9.652999999998357e-06, 9.0840...</msg>
<status status="PASS" starttime="20201115 23:01:53.485" endtime="20201115 23:01:53.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.502" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:01:53.501" endtime="20201115 23:01:53.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.505" level="INFO">VALUE: [9.680999999997497e-06, 9.707999999997163e-06, 9.652999999998357e-06, 9.042000000000772e-06, 9.666999999990988e-06, 9.042000000000772e-06, 9.069000000000438e-06, 9.652999999998357e-06, 9.08400000000642e-06, 9.680999999997497e-06, 9.735999999996303e-06, 9.652999999998357e-06, 9.069000000000438e-06, 9.652999999998357e-06, 9.02800000000814e-06, 9.042000000000772e-06, 9.111000000006086e-06, 1.905500000000393e-05, 9.055000000007807e-06, 9.680999999997497e-06, 9.069000000000438e-06, 9.05600000000728e-06, 9.665999999991515e-06, 9.652999999998357e-06, 9.665999999991515e-06, 9.069999999999911e-06, 9.667000000004866e-06, 9.097999999999051e-06, 9.055000000007807e-06, 9.069000000000438e-06, 9.666000000005393e-06, 9.666000000005393e-06, 9.05600000000728e-06, 9.652999999998357e-06, 9.014000000001632e-06, 9.069999999999911e-06, 9.667000000004866e-06, 9.069999999999911e-06, 9.695000000004006e-06, 9.666999999990988e-06, 9.624999999999218e-06, 9.665999999991515e-06, 9.666000000005393e-06, 9.05600000000728e-06, 9.666999999990988e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.666999999990988e-06, 9.637999999992375e-06, 9.041000000001298e-06]</msg>
<status status="PASS" starttime="20201115 23:01:53.503" endtime="20201115 23:01:53.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.499" endtime="20201115 23:01:53.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.508" endtime="20201115 23:01:53.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.511" endtime="20201115 23:01:53.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.510" endtime="20201115 23:01:53.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.506" endtime="20201115 23:01:53.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.141" endtime="20201115 23:01:53.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.139" endtime="20201115 23:01:53.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.139" endtime="20201115 23:01:53.532"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.535" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.543" endtime="20201115 23:01:53.558"></status>
</kw>
<msg timestamp="20201115 23:01:53.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.542" endtime="20201115 23:01:53.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.560" endtime="20201115 23:01:53.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.563" endtime="20201115 23:01:53.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.539" endtime="20201115 23:01:53.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.537" endtime="20201115 23:01:53.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.572" endtime="20201115 23:01:53.859"></status>
</kw>
<msg timestamp="20201115 23:01:53.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025080583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025090847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.570" endtime="20201115 23:01:53.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025080583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025090847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.864" endtime="20201115 23:01:53.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.872" endtime="20201115 23:01:53.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.567" endtime="20201115 23:01:53.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.566" endtime="20201115 23:01:53.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:53.878" level="INFO">${RESULT} = [{'time': 0.025090847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0263999999999412e-05, 'source_diff': 1.0263999999999412e-05}, {'time': 0.025110819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:53.875" endtime="20201115 23:01:53.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:53.892" level="INFO">${ACCURACY} = {'diff': [1.0263999999999412e-05, 1.0276999999999509e-05, 1.0276999999999509e-05, 1.0236000000000273e-05, 1.0276999999999509e-05, 1.0278000000002452e-05, 1.0264000000002882e-05, 1.0277999999998982e-05...</msg>
<status status="PASS" starttime="20201115 23:01:53.879" endtime="20201115 23:01:53.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.896" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:01:53.895" endtime="20201115 23:01:53.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.899" level="INFO">VALUE: [1.0263999999999412e-05, 1.0276999999999509e-05, 1.0276999999999509e-05, 1.0236000000000273e-05, 1.0276999999999509e-05, 1.0278000000002452e-05, 1.0264000000002882e-05, 1.0277999999998982e-05, 1.0276999999999509e-05, 1.0207999999997663e-05, 1.0223000000000176e-05, 1.0277999999998982e-05, 9.667000000001397e-06, 1.0262999999999939e-05, 1.0875000000000468e-05, 1.0263999999999412e-05, 1.0277999999998982e-05, 1.0875000000000468e-05, 1.0264000000002882e-05, 1.0276999999999509e-05, 1.0277999999998982e-05, 1.0263999999999412e-05, 1.0861000000000898e-05, 1.0290999999999079e-05, 1.0292000000002022e-05, 1.0861000000000898e-05, 1.0277999999998982e-05, 1.0292000000002022e-05, 1.0236999999999746e-05, 1.0875000000000468e-05, 1.0291999999998552e-05, 1.0278000000002452e-05, 1.0903000000003077e-05, 1.0277999999998982e-05, 1.0291999999998552e-05, 1.0847000000001328e-05, 1.0276999999999509e-05, 1.0277999999998982e-05, 1.0236000000000273e-05, 9.652999999998357e-06, 1.0875000000000468e-05, 1.0875000000000468e-05, 1.0875000000000468e-05, 1.0889000000000038e-05, 1.0277999999998982e-05, 1.0263999999999412e-05, 9.639000000002257e-06, 1.0333000000001258e-05, 9.666999999997927e-06, 9.639000000002257e-06]</msg>
<status status="PASS" starttime="20201115 23:01:53.897" endtime="20201115 23:01:53.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.893" endtime="20201115 23:01:53.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.902" endtime="20201115 23:01:53.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.905" endtime="20201115 23:01:53.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.904" endtime="20201115 23:01:53.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.900" endtime="20201115 23:01:53.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.536" endtime="20201115 23:01:53.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.534" endtime="20201115 23:01:53.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.533" endtime="20201115 23:01:53.926"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.929" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.937" endtime="20201115 23:01:53.952"></status>
</kw>
<msg timestamp="20201115 23:01:53.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.936" endtime="20201115 23:01:53.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.954" endtime="20201115 23:01:53.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.956" endtime="20201115 23:01:53.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.933" endtime="20201115 23:01:53.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.931" endtime="20201115 23:01:53.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.966" endtime="20201115 23:01:54.252"></status>
</kw>
<msg timestamp="20201115 23:01:54.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024506278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024517736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.964" endtime="20201115 23:01:54.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024506278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024517736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.256" endtime="20201115 23:01:54.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.265" endtime="20201115 23:01:54.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.961" endtime="20201115 23:01:54.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.960" endtime="20201115 23:01:54.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.271" level="INFO">${RESULT} = [{'time': 0.024517736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.024536472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:54.268" endtime="20201115 23:01:54.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.286" level="INFO">${ACCURACY} = {'diff': [1.1457999999998913e-05, 1.0889000000000038e-05, 1.1486999999997527e-05, 1.1541000000000329e-05, 1.1500000000001093e-05, 1.1500000000001093e-05, 1.1486000000001523e-05, 1.1485999999998053e-05...</msg>
<status status="PASS" starttime="20201115 23:01:54.272" endtime="20201115 23:01:54.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.291" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.290" endtime="20201115 23:01:54.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.293" level="INFO">VALUE: [1.1457999999998913e-05, 1.0889000000000038e-05, 1.1486999999997527e-05, 1.1541000000000329e-05, 1.1500000000001093e-05, 1.1500000000001093e-05, 1.1486000000001523e-05, 1.1485999999998053e-05, 1.1471999999998483e-05, 1.1542000000003272e-05, 1.0860999999997428e-05, 1.0875000000000468e-05, 1.1486000000001523e-05, 1.1499999999997623e-05, 1.1485999999998053e-05, 1.1458999999998387e-05, 1.1485999999998053e-05, 1.1500000000001093e-05, 1.1485999999998053e-05, 1.1486000000001523e-05, 1.1486000000001523e-05, 1.1485999999998053e-05, 1.1485999999998053e-05, 1.1459000000001857e-05, 1.1472999999997957e-05, 1.1485999999998053e-05, 1.1471999999998483e-05, 1.0875000000000468e-05, 1.1457999999998913e-05, 1.1485999999998053e-05, 1.1471999999998483e-05, 1.0875000000000468e-05, 1.1486000000001523e-05, 1.1569999999998942e-05, 1.0875000000000468e-05, 1.1431000000002717e-05, 1.0874999999996998e-05, 1.2082999999999539e-05, 1.0875000000000468e-05, 1.1486000000001523e-05, 1.1485999999998053e-05, 1.1528000000000233e-05, 1.1487000000000996e-05, 1.0820000000001662e-05, 1.1513999999997193e-05, 1.0846999999997858e-05, 1.1486000000001523e-05, 1.1485999999998053e-05, 1.1471999999998483e-05, 1.0889000000000038e-05]</msg>
<status status="PASS" starttime="20201115 23:01:54.292" endtime="20201115 23:01:54.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.287" endtime="20201115 23:01:54.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.296" endtime="20201115 23:01:54.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.300" endtime="20201115 23:01:54.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.298" endtime="20201115 23:01:54.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.295" endtime="20201115 23:01:54.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.929" endtime="20201115 23:01:54.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.927" endtime="20201115 23:01:54.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.927" endtime="20201115 23:01:54.321"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.323" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.331" endtime="20201115 23:01:54.347"></status>
</kw>
<msg timestamp="20201115 23:01:54.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.330" endtime="20201115 23:01:54.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.349" endtime="20201115 23:01:54.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.351" endtime="20201115 23:01:54.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.327" endtime="20201115 23:01:54.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.325" endtime="20201115 23:01:54.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.360" endtime="20201115 23:01:54.647"></status>
</kw>
<msg timestamp="20201115 23:01:54.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024652944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024665014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.359" endtime="20201115 23:01:54.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024652944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024665014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.651" endtime="20201115 23:01:54.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.659" endtime="20201115 23:01:54.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.356" endtime="20201115 23:01:54.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.354" endtime="20201115 23:01:54.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.666" level="INFO">${RESULT} = [{'time': 0.024665014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2069999999999442e-05, 'source_diff': 1.2069999999999442e-05}, {'time': 0.024683889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:54.663" endtime="20201115 23:01:54.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.679" level="INFO">${ACCURACY} = {'diff': [1.2069999999999442e-05, 1.2667000000000928e-05, 1.2610999999999178e-05, 1.2695000000000067e-05, 1.2068999999999969e-05, 1.2124999999998248e-05, 1.2082999999999539e-05, 1.2138999999997818e-05...</msg>
<status status="PASS" starttime="20201115 23:01:54.667" endtime="20201115 23:01:54.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.684" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.683" endtime="20201115 23:01:54.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.686" level="INFO">VALUE: [1.2069999999999442e-05, 1.2667000000000928e-05, 1.2610999999999178e-05, 1.2695000000000067e-05, 1.2068999999999969e-05, 1.2124999999998248e-05, 1.2082999999999539e-05, 1.2138999999997818e-05, 1.2069999999999442e-05, 1.2708000000000164e-05, 1.2736000000002773e-05, 1.2137999999998345e-05, 1.2694000000000594e-05, 1.2055000000000399e-05, 1.2709000000003107e-05, 1.2625000000002218e-05, 1.2082999999999539e-05, 1.2666000000001454e-05, 1.2750000000002343e-05, 1.2679999999997554e-05, 1.2097000000002578e-05, 1.2068999999999969e-05, 1.2695000000000067e-05, 1.2680000000001024e-05, 1.2084000000002482e-05, 1.2666999999997458e-05, 1.2693999999997124e-05, 1.2680000000001024e-05, 1.2666000000001454e-05, 1.2084000000002482e-05, 1.2098000000002052e-05, 1.2083999999999012e-05, 1.2082999999999539e-05, 1.2667000000000928e-05, 1.2082999999999539e-05, 1.2042000000000302e-05, 1.2097000000002578e-05, 1.2097999999998582e-05, 1.2680000000001024e-05, 1.2665999999997984e-05, 1.2068999999999969e-05, 1.2082999999999539e-05, 1.2027000000001259e-05, 1.2681000000000497e-05, 1.2083000000003008e-05, 1.2680999999997028e-05, 1.2680000000001024e-05, 1.2679999999997554e-05, 1.2666999999997458e-05, 1.2667000000000928e-05]</msg>
<status status="PASS" starttime="20201115 23:01:54.685" endtime="20201115 23:01:54.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.680" endtime="20201115 23:01:54.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.689" endtime="20201115 23:01:54.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.693" endtime="20201115 23:01:54.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.691" endtime="20201115 23:01:54.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.688" endtime="20201115 23:01:54.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.324" endtime="20201115 23:01:54.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.322" endtime="20201115 23:01:54.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.321" endtime="20201115 23:01:54.714"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.717" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.725" endtime="20201115 23:01:54.739"></status>
</kw>
<msg timestamp="20201115 23:01:54.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.723" endtime="20201115 23:01:54.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.741" endtime="20201115 23:01:54.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.744" endtime="20201115 23:01:54.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.721" endtime="20201115 23:01:54.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.719" endtime="20201115 23:01:54.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.752" endtime="20201115 23:01:55.038"></status>
</kw>
<msg timestamp="20201115 23:01:55.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024648556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024661861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.751" endtime="20201115 23:01:55.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024648556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024661861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.042" endtime="20201115 23:01:55.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.051" endtime="20201115 23:01:55.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.748" endtime="20201115 23:01:55.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.747" endtime="20201115 23:01:55.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.057" level="INFO">${RESULT} = [{'time': 0.024661861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3305000000001649e-05, 'source_diff': 1.3305000000001649e-05}, {'time': 0.024682097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:55.054" endtime="20201115 23:01:55.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.070" level="INFO">${ACCURACY} = {'diff': [1.3305000000001649e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3888999999999568e-05, 1.3249999999999373e-05, 1.3874999999999998e-05, 1.3917000000002178e-05, 1.3278000000001983e-05...</msg>
<status status="PASS" starttime="20201115 23:01:55.058" endtime="20201115 23:01:55.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.075" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.074" endtime="20201115 23:01:55.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.077" level="INFO">VALUE: [1.3305000000001649e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3888999999999568e-05, 1.3249999999999373e-05, 1.3874999999999998e-05, 1.3917000000002178e-05, 1.3278000000001983e-05, 1.3916999999998708e-05, 1.3903000000002608e-05, 1.330499999999818e-05, 1.3916999999998708e-05, 1.3278000000001983e-05, 1.3834000000000762e-05, 1.3902999999999138e-05, 1.3278000000001983e-05, 1.3278000000001983e-05, 1.3291999999998083e-05, 1.329099999999861e-05, 1.3292000000001553e-05, 1.3889000000003038e-05, 1.3306000000001122e-05, 1.2681000000000497e-05, 1.3264000000002413e-05, 1.3306000000001122e-05, 1.3292000000001553e-05, 1.3264000000002413e-05, 1.3847000000000859e-05, 1.3874999999999998e-05, 1.2639000000001788e-05, 1.3319999999997223e-05, 1.3874999999999998e-05, 1.3333000000000789e-05, 1.3874999999999998e-05, 1.3847000000000859e-05, 1.3347000000000359e-05, 1.3861000000000429e-05, 1.3902999999999138e-05, 1.3292000000001553e-05, 1.3277999999998513e-05, 1.3278000000001983e-05, 1.3901999999999665e-05, 1.3888999999999568e-05, 1.3291999999998083e-05, 1.3944000000001844e-05, 1.3305000000001649e-05, 1.3902999999999138e-05, 1.3305999999997653e-05, 1.3958999999997418e-05, 1.3236000000003273e-05]</msg>
<status status="PASS" starttime="20201115 23:01:55.076" endtime="20201115 23:01:55.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.071" endtime="20201115 23:01:55.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.081" endtime="20201115 23:01:55.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.084" endtime="20201115 23:01:55.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.083" endtime="20201115 23:01:55.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.079" endtime="20201115 23:01:55.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.717" endtime="20201115 23:01:55.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.715" endtime="20201115 23:01:55.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.714" endtime="20201115 23:01:55.105"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.108" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.116" endtime="20201115 23:01:55.131"></status>
</kw>
<msg timestamp="20201115 23:01:55.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.114" endtime="20201115 23:01:55.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.132" endtime="20201115 23:01:55.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.135" endtime="20201115 23:01:55.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.112" endtime="20201115 23:01:55.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.110" endtime="20201115 23:01:55.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.144" endtime="20201115 23:01:55.429"></status>
</kw>
<msg timestamp="20201115 23:01:55.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024418819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024433306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.142" endtime="20201115 23:01:55.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024418819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024433306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.434" endtime="20201115 23:01:55.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.442" endtime="20201115 23:01:55.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.140" endtime="20201115 23:01:55.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.138" endtime="20201115 23:01:55.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.449" level="INFO">${RESULT} = [{'time': 0.024433306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4486999999997058e-05, 'source_diff': 1.4486999999997058e-05}, {'time': 0.024454556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:55.446" endtime="20201115 23:01:55.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.462" level="INFO">${ACCURACY} = {'diff': [1.4486999999997058e-05, 1.3874999999999998e-05, 1.4555000000002899e-05, 1.3889000000003038e-05, 1.4500000000000624e-05, 1.3902999999999138e-05, 1.3888999999999568e-05, 1.3902999999999138e-05...</msg>
<status status="PASS" starttime="20201115 23:01:55.450" endtime="20201115 23:01:55.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.467" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.466" endtime="20201115 23:01:55.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.469" level="INFO">VALUE: [1.4486999999997058e-05, 1.3874999999999998e-05, 1.4555000000002899e-05, 1.3889000000003038e-05, 1.4500000000000624e-05, 1.3902999999999138e-05, 1.3888999999999568e-05, 1.3902999999999138e-05, 1.4527999999999763e-05, 1.509699999999864e-05, 1.4514000000000193e-05, 1.4458000000001914e-05, 1.4514000000000193e-05, 1.4500000000000624e-05, 1.4514000000000193e-05, 1.3902999999999138e-05, 1.4487000000000527e-05, 1.4500000000000624e-05, 1.5111000000001679e-05, 1.509699999999864e-05, 1.4500000000000624e-05, 1.381899999999825e-05, 1.3972000000000984e-05, 1.3888000000000095e-05, 1.4555000000002899e-05, 1.5124999999997779e-05, 1.4500000000000624e-05, 1.451299999999725e-05, 1.5097000000002109e-05, 1.4500000000000624e-05, 1.3902999999999138e-05, 1.3902999999999138e-05, 1.5083999999998543e-05, 1.454099999999986e-05, 1.5111000000001679e-05, 1.4485999999997584e-05, 1.5097000000002109e-05, 1.3874999999999998e-05, 1.3888999999999568e-05, 1.4486000000001054e-05, 1.4500000000000624e-05, 1.4487000000000527e-05, 1.3902999999999138e-05, 1.3888999999999568e-05, 1.4541999999999333e-05, 1.4486000000001054e-05, 1.4527999999999763e-05, 1.5097000000002109e-05, 1.3901999999999665e-05, 1.4487000000000527e-05]</msg>
<status status="PASS" starttime="20201115 23:01:55.468" endtime="20201115 23:01:55.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.463" endtime="20201115 23:01:55.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.473" endtime="20201115 23:01:55.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.476" endtime="20201115 23:01:55.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.475" endtime="20201115 23:01:55.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.471" endtime="20201115 23:01:55.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.108" endtime="20201115 23:01:55.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.107" endtime="20201115 23:01:55.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.106" endtime="20201115 23:01:55.497"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.500" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.508" endtime="20201115 23:01:55.524"></status>
</kw>
<msg timestamp="20201115 23:01:55.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.506" endtime="20201115 23:01:55.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.525" endtime="20201115 23:01:55.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.528" endtime="20201115 23:01:55.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.504" endtime="20201115 23:01:55.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.502" endtime="20201115 23:01:55.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.537" endtime="20201115 23:01:55.824"></status>
</kw>
<msg timestamp="20201115 23:01:55.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024381111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02439625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:55.535" endtime="20201115 23:01:55.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024381111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02439625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:55.828" endtime="20201115 23:01:55.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.836" endtime="20201115 23:01:55.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.533" endtime="20201115 23:01:55.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.531" endtime="20201115 23:01:55.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.843" level="INFO">${RESULT} = [{'time': 0.02439625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139000000000818e-05, 'source_diff': 1.5139000000000818e-05}, {'time': 0.024422181, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:55.840" endtime="20201115 23:01:55.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.858" level="INFO">${ACCURACY} = {'diff': [1.5139000000000818e-05, 1.5112000000001152e-05, 1.5707999999999694e-05, 1.50689999999995e-05, 1.5708999999999168e-05, 1.5736000000002304e-05, 1.5041999999999833e-05, 1.5111000000001679e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:55.844" endtime="20201115 23:01:55.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.863" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.862" endtime="20201115 23:01:55.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.866" level="INFO">VALUE: [1.5139000000000818e-05, 1.5112000000001152e-05, 1.5707999999999694e-05, 1.50689999999995e-05, 1.5708999999999168e-05, 1.5736000000002304e-05, 1.5041999999999833e-05, 1.5111000000001679e-05, 1.5695000000003068e-05, 1.509699999999864e-05, 1.577700000000154e-05, 1.5111000000001679e-05, 1.5694000000000125e-05, 1.5707999999999694e-05, 1.5708999999999168e-05, 1.5707999999999694e-05, 1.511099999999821e-05, 1.509699999999864e-05, 1.5735999999998834e-05, 1.511099999999821e-05, 1.5125000000001249e-05, 1.563899999999785e-05, 1.566700000000046e-05, 1.511099999999821e-05, 1.5707999999999694e-05, 1.5125000000001249e-05, 1.5111000000001679e-05, 1.5721999999999264e-05, 1.5097000000002109e-05, 1.5708000000003164e-05, 1.511099999999821e-05, 1.5708999999999168e-05, 1.509699999999864e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.5125000000001249e-05, 1.5666000000000985e-05, 1.5137999999997875e-05, 1.5694000000000125e-05, 1.5707999999999694e-05, 1.5097000000002109e-05, 1.5125000000001249e-05, 1.5709000000002638e-05, 1.511099999999821e-05, 1.5124999999997779e-05, 1.5111000000001679e-05, 1.5707999999999694e-05, 1.5708999999999168e-05, 1.5707999999999694e-05]</msg>
<status status="PASS" starttime="20201115 23:01:55.864" endtime="20201115 23:01:55.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.859" endtime="20201115 23:01:55.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.869" endtime="20201115 23:01:55.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.872" endtime="20201115 23:01:55.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.871" endtime="20201115 23:01:55.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.867" endtime="20201115 23:01:55.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.500" endtime="20201115 23:01:55.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.498" endtime="20201115 23:01:55.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.498" endtime="20201115 23:01:55.893"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.896" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.904" endtime="20201115 23:01:55.919"></status>
</kw>
<msg timestamp="20201115 23:01:55.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.902" endtime="20201115 23:01:55.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.920" endtime="20201115 23:01:55.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.923" endtime="20201115 23:01:55.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.900" endtime="20201115 23:01:55.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.898" endtime="20201115 23:01:55.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.932" endtime="20201115 23:01:56.220"></status>
</kw>
<msg timestamp="20201115 23:01:56.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0242655, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:55.930" endtime="20201115 23:01:56.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0242655, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:56.224" endtime="20201115 23:01:56.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.232" endtime="20201115 23:01:56.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.927" endtime="20201115 23:01:56.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.926" endtime="20201115 23:01:56.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.239" level="INFO">${RESULT} = [{'time': 0.024281833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.633300000000032e-05, 'source_diff': 1.633300000000032e-05}, {'time': 0.024309403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:56.235" endtime="20201115 23:01:56.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.253" level="INFO">${ACCURACY} = {'diff': [1.633300000000032e-05, 1.5721999999999264e-05, 1.690300000000214e-05, 1.5707999999999694e-05, 1.6249999999998904e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.691699999999824e-05, 1...</msg>
<status status="PASS" starttime="20201115 23:01:56.240" endtime="20201115 23:01:56.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.257" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.256" endtime="20201115 23:01:56.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.260" level="INFO">VALUE: [1.633300000000032e-05, 1.5721999999999264e-05, 1.690300000000214e-05, 1.5707999999999694e-05, 1.6249999999998904e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.691699999999824e-05, 1.5694999999999598e-05, 1.6986000000000084e-05, 1.634699999999989e-05, 1.630499999999771e-05, 1.6944000000001375e-05, 1.690299999999867e-05, 1.6264000000001944e-05, 1.690299999999867e-05, 1.631900000000075e-05, 1.630500000000118e-05, 1.6915999999998765e-05, 1.6945000000000848e-05, 1.6320000000000223e-05, 1.634699999999989e-05, 1.630499999999771e-05, 1.6305999999997184e-05, 1.633300000000032e-05, 1.6333999999999793e-05, 1.6263999999998474e-05, 1.691699999999824e-05, 1.693100000000128e-05, 1.693099999999781e-05, 1.636099999999946e-05, 1.6930000000001805e-05, 1.5708999999999168e-05, 1.5763999999997974e-05, 1.630499999999771e-05, 1.629100000000161e-05, 1.6320000000000223e-05, 1.634699999999989e-05, 1.633300000000032e-05, 1.690299999999867e-05, 1.630500000000118e-05, 1.693100000000128e-05, 1.5708000000003164e-05, 1.631900000000075e-05, 1.627700000000204e-05, 1.6263999999998474e-05, 1.6320000000000223e-05, 1.5708999999999168e-05, 1.6320000000000223e-05, 1.630500000000118e-05]</msg>
<status status="PASS" starttime="20201115 23:01:56.258" endtime="20201115 23:01:56.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.254" endtime="20201115 23:01:56.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.263" endtime="20201115 23:01:56.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.266" endtime="20201115 23:01:56.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.265" endtime="20201115 23:01:56.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.261" endtime="20201115 23:01:56.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.896" endtime="20201115 23:01:56.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.895" endtime="20201115 23:01:56.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.894" endtime="20201115 23:01:56.287"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.290" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.298" endtime="20201115 23:01:56.314"></status>
</kw>
<msg timestamp="20201115 23:01:56.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.297" endtime="20201115 23:01:56.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.316" endtime="20201115 23:01:56.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.318" endtime="20201115 23:01:56.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.294" endtime="20201115 23:01:56.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.292" endtime="20201115 23:01:56.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.327" endtime="20201115 23:01:56.614"></status>
</kw>
<msg timestamp="20201115 23:01:56.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024688347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024705264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.326" endtime="20201115 23:01:56.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024688347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024705264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.618" endtime="20201115 23:01:56.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.626" endtime="20201115 23:01:56.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.323" endtime="20201115 23:01:56.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.321" endtime="20201115 23:01:56.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.633" level="INFO">${RESULT} = [{'time': 0.024705264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.691700000000171e-05, 'source_diff': 1.691700000000171e-05}, {'time': 0.024727431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:56.630" endtime="20201115 23:01:56.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.647" level="INFO">${ACCURACY} = {'diff': [1.691700000000171e-05, 1.6972999999999988e-05, 1.758300000000157e-05, 1.7500000000000154e-05, 1.7527999999999294e-05, 1.693099999999781e-05, 1.754099999999939e-05, 1.693099999999781e-05, 1.6...</msg>
<status status="PASS" starttime="20201115 23:01:56.634" endtime="20201115 23:01:56.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.651" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.650" endtime="20201115 23:01:56.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.654" level="INFO">VALUE: [1.691700000000171e-05, 1.6972999999999988e-05, 1.758300000000157e-05, 1.7500000000000154e-05, 1.7527999999999294e-05, 1.693099999999781e-05, 1.754099999999939e-05, 1.693099999999781e-05, 1.6930000000001805e-05, 1.7513999999999724e-05, 1.690300000000214e-05, 1.751300000000025e-05, 1.7513999999999724e-05, 1.754099999999939e-05, 1.691700000000171e-05, 1.812500000000078e-05, 1.7528000000002764e-05, 1.691699999999824e-05, 1.7459000000000918e-05, 1.7527999999999294e-05, 1.7528000000002764e-05, 1.7542000000002334e-05, 1.7541999999998864e-05, 1.7527999999999294e-05, 1.813900000000035e-05, 1.693099999999781e-05, 1.7584000000001043e-05, 1.693100000000128e-05, 1.7527999999999294e-05, 1.7527999999999294e-05, 1.6901999999999195e-05, 1.752699999999982e-05, 1.690299999999867e-05, 1.7527999999999294e-05, 1.7527999999999294e-05, 1.7527999999999294e-05, 1.7527999999999294e-05, 1.752699999999982e-05, 1.754099999999939e-05, 1.754099999999939e-05, 1.759700000000114e-05, 1.691699999999824e-05, 1.6915999999998765e-05, 1.7513999999999724e-05, 1.812500000000078e-05, 1.6999999999999654e-05, 1.690299999999867e-05, 1.811099999999774e-05, 1.6958000000000945e-05, 1.6915999999998765e-05]</msg>
<status status="PASS" starttime="20201115 23:01:56.652" endtime="20201115 23:01:56.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.647" endtime="20201115 23:01:56.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.657" endtime="20201115 23:01:56.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.661" endtime="20201115 23:01:56.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.659" endtime="20201115 23:01:56.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.655" endtime="20201115 23:01:56.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.291" endtime="20201115 23:01:56.682"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.289" endtime="20201115 23:01:56.682"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.288" endtime="20201115 23:01:56.682"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.684" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.693" endtime="20201115 23:01:56.708"></status>
</kw>
<msg timestamp="20201115 23:01:56.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.691" endtime="20201115 23:01:56.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.710" endtime="20201115 23:01:56.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.712" endtime="20201115 23:01:56.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.689" endtime="20201115 23:01:56.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.686" endtime="20201115 23:01:56.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.722" endtime="20201115 23:01:57.008"></status>
</kw>
<msg timestamp="20201115 23:01:57.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024773403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024791542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.720" endtime="20201115 23:01:57.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024773403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024791542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.012" endtime="20201115 23:01:57.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.021" endtime="20201115 23:01:57.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.717" endtime="20201115 23:01:57.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.715" endtime="20201115 23:01:57.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.027" level="INFO">${RESULT} = [{'time': 0.024791542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.813900000000035e-05, 'source_diff': 1.813900000000035e-05}, {'time': 0.024820292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:57.024" endtime="20201115 23:01:57.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.040" level="INFO">${ACCURACY} = {'diff': [1.813900000000035e-05, 1.8736000000001835e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.872299999999827e-05, 1.812500000000078e-05, 1.872299999999827e-05, 1.8138000000000876e-05, 1.87...</msg>
<status status="PASS" starttime="20201115 23:01:57.028" endtime="20201115 23:01:57.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.045" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.044" endtime="20201115 23:01:57.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.048" level="INFO">VALUE: [1.813900000000035e-05, 1.8736000000001835e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.872299999999827e-05, 1.812500000000078e-05, 1.872299999999827e-05, 1.8138000000000876e-05, 1.8721999999998795e-05, 1.870900000000217e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.8721999999998795e-05, 1.813900000000035e-05, 1.872299999999827e-05, 1.8750000000001404e-05, 1.812499999999731e-05, 1.811099999999774e-05, 1.8750000000001404e-05, 1.811100000000121e-05, 1.8736000000001835e-05, 1.8736000000001835e-05, 1.811100000000121e-05, 1.8736000000001835e-05, 1.8736000000001835e-05, 1.869499999999913e-05, 1.811100000000121e-05, 1.8764000000000974e-05, 1.813900000000035e-05, 1.8792000000000114e-05, 1.815299999999992e-05, 1.865299999999695e-05, 1.811100000000121e-05, 1.813899999999688e-05, 1.812500000000078e-05, 1.8736000000001835e-05, 1.812500000000078e-05, 1.812500000000078e-05, 1.8737000000001308e-05, 1.8735999999998365e-05, 1.80829999999986e-05, 1.813900000000035e-05, 1.808300000000207e-05, 1.812499999999731e-05, 1.813900000000035e-05, 1.8723000000001738e-05, 1.813900000000035e-05, 1.8736000000001835e-05, 1.812500000000078e-05, 1.8750000000001404e-05]</msg>
<status status="PASS" starttime="20201115 23:01:57.046" endtime="20201115 23:01:57.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.041" endtime="20201115 23:01:57.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.051" endtime="20201115 23:01:57.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.054" endtime="20201115 23:01:57.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.053" endtime="20201115 23:01:57.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.049" endtime="20201115 23:01:57.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.685" endtime="20201115 23:01:57.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.683" endtime="20201115 23:01:57.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.682" endtime="20201115 23:01:57.075"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.078" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.086" endtime="20201115 23:01:57.101"></status>
</kw>
<msg timestamp="20201115 23:01:57.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.084" endtime="20201115 23:01:57.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.102" endtime="20201115 23:01:57.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.105" endtime="20201115 23:01:57.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.082" endtime="20201115 23:01:57.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.080" endtime="20201115 23:01:57.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.114" endtime="20201115 23:01:57.400"></status>
</kw>
<msg timestamp="20201115 23:01:57.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024329083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024348431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.113" endtime="20201115 23:01:57.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024329083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024348431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.404" endtime="20201115 23:01:57.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.413" endtime="20201115 23:01:57.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.110" endtime="20201115 23:01:57.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.108" endtime="20201115 23:01:57.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.419" level="INFO">${RESULT} = [{'time': 0.024348431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9347999999998894e-05, 'source_diff': 1.9347999999998894e-05}, {'time': 0.024373278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:57.416" endtime="20201115 23:01:57.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.434" level="INFO">${ACCURACY} = {'diff': [1.9347999999998894e-05, 1.9334000000002793e-05, 1.994500000000038e-05, 1.993100000000081e-05, 1.933299999999985e-05, 1.9916000000001766e-05, 1.9333999999999324e-05, 1.9930000000001336e-05, 1...</msg>
<status status="PASS" starttime="20201115 23:01:57.420" endtime="20201115 23:01:57.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.439" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.438" endtime="20201115 23:01:57.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.441" level="INFO">VALUE: [1.9347999999998894e-05, 1.9334000000002793e-05, 1.994500000000038e-05, 1.993100000000081e-05, 1.933299999999985e-05, 1.9916000000001766e-05, 1.9333999999999324e-05, 1.9930000000001336e-05, 1.9347999999998894e-05, 1.934700000000289e-05, 1.9930000000001336e-05, 1.929100000000114e-05, 1.934699999999942e-05, 1.9319999999999754e-05, 1.9278000000001044e-05, 1.933299999999985e-05, 1.9333999999999324e-05, 1.934700000000289e-05, 1.9319999999999754e-05, 1.9402000000001696e-05, 1.933299999999985e-05, 1.9333999999999324e-05, 1.9944000000000905e-05, 1.941700000000074e-05, 1.993100000000081e-05, 1.8707999999999225e-05, 1.9944000000000905e-05, 1.937499999999856e-05, 1.9292000000000614e-05, 1.937500000000203e-05, 1.991700000000124e-05, 1.868099999999956e-05, 1.933299999999985e-05, 1.934699999999942e-05, 1.934699999999942e-05, 1.933299999999985e-05, 1.9929999999997866e-05, 1.9944000000000905e-05, 1.993100000000081e-05, 1.993100000000081e-05, 1.9972000000000045e-05, 1.9929999999997866e-05, 1.994500000000038e-05, 1.8735999999998365e-05, 1.933299999999985e-05, 1.931900000000028e-05, 1.9333999999999324e-05, 1.8722000000002265e-05, 1.9929999999997866e-05, 1.934699999999942e-05]</msg>
<status status="PASS" starttime="20201115 23:01:57.440" endtime="20201115 23:01:57.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.435" endtime="20201115 23:01:57.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.444" endtime="20201115 23:01:57.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.448" endtime="20201115 23:01:57.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.446" endtime="20201115 23:01:57.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.443" endtime="20201115 23:01:57.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.078" endtime="20201115 23:01:57.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.077" endtime="20201115 23:01:57.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.076" endtime="20201115 23:01:57.469"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.471" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.480" endtime="20201115 23:01:57.496"></status>
</kw>
<msg timestamp="20201115 23:01:57.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.478" endtime="20201115 23:01:57.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.498" endtime="20201115 23:01:57.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.500" endtime="20201115 23:01:57.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.476" endtime="20201115 23:01:57.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.473" endtime="20201115 23:01:57.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.509" endtime="20201115 23:01:57.794"></status>
</kw>
<msg timestamp="20201115 23:01:57.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025333889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025353847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.508" endtime="20201115 23:01:57.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025333889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025353847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.798" endtime="20201115 23:01:57.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.807" endtime="20201115 23:01:57.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.505" endtime="20201115 23:01:57.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.503" endtime="20201115 23:01:57.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.813" level="INFO">${RESULT} = [{'time': 0.025353847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9958000000000475e-05, 'source_diff': 1.9958000000000475e-05}, {'time': 0.025383944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:57.810" endtime="20201115 23:01:57.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.826" level="INFO">${ACCURACY} = {'diff': [1.9958000000000475e-05, 1.9915999999998296e-05, 1.990300000000167e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 1.991700000000124e-05, 2.056900000000153e-05, 1.9930000000001336e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:01:57.814" endtime="20201115 23:01:57.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.831" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.830" endtime="20201115 23:01:57.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.834" level="INFO">VALUE: [1.9958000000000475e-05, 1.9915999999998296e-05, 1.990300000000167e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 1.991700000000124e-05, 2.056900000000153e-05, 1.9930000000001336e-05, 2.0541999999998395e-05, 2.0500000000003155e-05, 1.9944000000000905e-05, 1.9930000000001336e-05, 1.994500000000038e-05, 2.0542000000001864e-05, 2.0598000000000144e-05, 1.993100000000081e-05, 2.0556000000001434e-05, 1.993100000000081e-05, 2.059700000000067e-05, 2.0541999999998395e-05, 1.993100000000081e-05, 2.0541999999998395e-05, 1.9929999999997866e-05, 1.993100000000081e-05, 2.0541999999998395e-05, 2.0541999999998395e-05, 2.0542000000001864e-05, 1.991699999999777e-05, 2.115299999999945e-05, 1.986099999999949e-05, 2.0598000000000144e-05, 2.0527999999998825e-05, 2.0556000000001434e-05, 2.0542000000001864e-05, 2.0528000000002294e-05, 1.998699999999909e-05, 2.0541999999998395e-05, 2.0570000000001004e-05, 2.0528000000002294e-05, 2.055500000000196e-05, 2.1152000000003446e-05, 2.0486000000000115e-05, 2.059700000000067e-05, 2.0556000000001434e-05, 1.9944000000000905e-05, 2.0570000000001004e-05, 2.055499999999849e-05, 1.994500000000038e-05, 2.054099999999892e-05, 1.9958000000000475e-05]</msg>
<status status="PASS" starttime="20201115 23:01:57.832" endtime="20201115 23:01:57.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.827" endtime="20201115 23:01:57.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.837" endtime="20201115 23:01:57.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.841" endtime="20201115 23:01:57.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.839" endtime="20201115 23:01:57.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.835" endtime="20201115 23:01:57.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.472" endtime="20201115 23:01:57.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.470" endtime="20201115 23:01:57.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.469" endtime="20201115 23:01:57.862"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.865" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.873" endtime="20201115 23:01:57.888"></status>
</kw>
<msg timestamp="20201115 23:01:57.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.871" endtime="20201115 23:01:57.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.889" endtime="20201115 23:01:57.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.892" endtime="20201115 23:01:57.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.869" endtime="20201115 23:01:57.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.867" endtime="20201115 23:01:57.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.901" endtime="20201115 23:01:58.188"></status>
</kw>
<msg timestamp="20201115 23:01:58.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024436486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024458264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.899" endtime="20201115 23:01:58.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024436486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024458264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.192" endtime="20201115 23:01:58.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.201" endtime="20201115 23:01:58.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.897" endtime="20201115 23:01:58.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.895" endtime="20201115 23:01:58.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.207" level="INFO">${RESULT} = [{'time': 0.024458264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1778000000000075e-05, 'source_diff': 2.1778000000000075e-05}, {'time': 0.024494069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:58.204" endtime="20201115 23:01:58.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.220" level="INFO">${ACCURACY} = {'diff': [2.1778000000000075e-05, 2.1138000000000406e-05, 2.112499999999684e-05, 2.180500000000321e-05, 2.1764000000000505e-05, 2.113899999999988e-05, 2.115299999999945e-05, 2.113899999999988e-05, 2.1...</msg>
<status status="PASS" starttime="20201115 23:01:58.208" endtime="20201115 23:01:58.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.225" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.224" endtime="20201115 23:01:58.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.227" level="INFO">VALUE: [2.1778000000000075e-05, 2.1138000000000406e-05, 2.112499999999684e-05, 2.180500000000321e-05, 2.1764000000000505e-05, 2.113899999999988e-05, 2.115299999999945e-05, 2.113899999999988e-05, 2.12090000000012e-05, 2.113899999999988e-05, 2.1736000000001365e-05, 2.115300000000292e-05, 2.1750000000000935e-05, 2.1750000000000935e-05, 2.118099999999859e-05, 2.112500000000031e-05, 2.1151999999999976e-05, 2.115299999999945e-05, 2.1151999999999976e-05, 2.115299999999945e-05, 2.116700000000249e-05, 2.1749999999997466e-05, 2.1764000000000505e-05, 2.116699999999902e-05, 2.115299999999945e-05, 2.1151999999999976e-05, 2.113899999999988e-05, 2.1763999999997036e-05, 2.113899999999988e-05, 2.115299999999945e-05, 2.112500000000031e-05, 2.1735999999997896e-05, 2.1679999999999616e-05, 2.1194000000002156e-05, 2.1791999999999645e-05, 2.1763999999997036e-05, 2.119500000000163e-05, 2.115300000000292e-05, 2.1735999999997896e-05, 2.116700000000249e-05, 2.113899999999988e-05, 2.1137999999996937e-05, 2.1151999999999976e-05, 2.1750000000000935e-05, 2.1749999999997466e-05, 2.113899999999988e-05, 2.115299999999945e-05, 2.1222000000001295e-05, 2.10830000000016e-05, 2.111100000000074e-05]</msg>
<status status="PASS" starttime="20201115 23:01:58.226" endtime="20201115 23:01:58.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.221" endtime="20201115 23:01:58.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.231" endtime="20201115 23:01:58.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.234" endtime="20201115 23:01:58.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.233" endtime="20201115 23:01:58.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.229" endtime="20201115 23:01:58.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.865" endtime="20201115 23:01:58.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.864" endtime="20201115 23:01:58.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.863" endtime="20201115 23:01:58.256"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.258" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.266" endtime="20201115 23:01:58.282"></status>
</kw>
<msg timestamp="20201115 23:01:58.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.265" endtime="20201115 23:01:58.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.283" endtime="20201115 23:01:58.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.286" endtime="20201115 23:01:58.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.262" endtime="20201115 23:01:58.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.260" endtime="20201115 23:01:58.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.295" endtime="20201115 23:01:58.580"></status>
</kw>
<msg timestamp="20201115 23:01:58.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024399361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024421111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.293" endtime="20201115 23:01:58.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024399361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024421111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.584" endtime="20201115 23:01:58.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.593" endtime="20201115 23:01:58.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.291" endtime="20201115 23:01:58.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.289" endtime="20201115 23:01:58.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.599" level="INFO">${RESULT} = [{'time': 0.024421111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1749999999997466e-05, 'source_diff': 2.1749999999997466e-05}, {'time': 0.024453333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:58.596" endtime="20201115 23:01:58.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.613" level="INFO">${ACCURACY} = {'diff': [2.1749999999997466e-05, 2.236100000000199e-05, 2.2971999999999576e-05, 2.2944000000000436e-05, 2.2319999999999285e-05, 2.236099999999852e-05, 2.236100000000199e-05, 2.1736000000001365e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:01:58.600" endtime="20201115 23:01:58.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.617" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.616" endtime="20201115 23:01:58.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.620" level="INFO">VALUE: [2.1749999999997466e-05, 2.236100000000199e-05, 2.2971999999999576e-05, 2.2944000000000436e-05, 2.2319999999999285e-05, 2.236099999999852e-05, 2.236100000000199e-05, 2.1736000000001365e-05, 2.294499999999991e-05, 2.233299999999938e-05, 2.237500000000156e-05, 2.2306000000003184e-05, 2.2333999999998855e-05, 2.234699999999895e-05, 2.236099999999852e-05, 2.236100000000199e-05, 2.1708000000002226e-05, 2.236099999999852e-05, 2.1763999999997036e-05, 2.237500000000156e-05, 2.236100000000199e-05, 2.233299999999938e-05, 2.237500000000156e-05, 2.237500000000156e-05, 2.1778000000000075e-05, 2.181899999999931e-05, 2.180499999999974e-05, 2.2348000000001894e-05, 2.1764000000000505e-05, 2.233299999999938e-05, 2.295899999999948e-05, 2.236099999999852e-05, 2.237500000000156e-05, 2.236099999999852e-05, 2.2958000000000006e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.234699999999895e-05, 2.2305999999999715e-05, 2.1708000000002226e-05, 2.238900000000113e-05, 2.3041999999997426e-05, 2.294499999999991e-05, 2.236100000000199e-05, 2.234699999999895e-05, 2.2958000000000006e-05, 2.236100000000199e-05, 2.2958000000000006e-05, 2.236099999999852e-05, 2.298699999999862e-05]</msg>
<status status="PASS" starttime="20201115 23:01:58.618" endtime="20201115 23:01:58.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.614" endtime="20201115 23:01:58.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.623" endtime="20201115 23:01:58.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.627" endtime="20201115 23:01:58.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.625" endtime="20201115 23:01:58.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.622" endtime="20201115 23:01:58.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.259" endtime="20201115 23:01:58.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.257" endtime="20201115 23:01:58.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.256" endtime="20201115 23:01:58.648"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.650" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.658" endtime="20201115 23:01:58.674"></status>
</kw>
<msg timestamp="20201115 23:01:58.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.657" endtime="20201115 23:01:58.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.675" endtime="20201115 23:01:58.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.678" endtime="20201115 23:01:58.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.654" endtime="20201115 23:01:58.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.652" endtime="20201115 23:01:58.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.687" endtime="20201115 23:01:58.974"></status>
</kw>
<msg timestamp="20201115 23:01:58.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024219458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024243028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.685" endtime="20201115 23:01:58.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024219458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024243028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.978" endtime="20201115 23:01:58.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.986" endtime="20201115 23:01:58.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.683" endtime="20201115 23:01:58.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.681" endtime="20201115 23:01:58.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.993" level="INFO">${RESULT} = [{'time': 0.024243028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3570000000000535e-05, 'source_diff': 2.3570000000000535e-05}, {'time': 0.024271181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:58.990" endtime="20201115 23:01:58.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.008" level="INFO">${ACCURACY} = {'diff': [2.3570000000000535e-05, 2.297299999999905e-05, 2.2958000000000006e-05, 2.3568999999997592e-05, 2.356900000000106e-05, 2.3554999999998022e-05, 2.3570000000000535e-05, 2.293099999999687e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:01:58.994" endtime="20201115 23:01:59.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.013" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.012" endtime="20201115 23:01:59.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.015" level="INFO">VALUE: [2.3570000000000535e-05, 2.297299999999905e-05, 2.2958000000000006e-05, 2.3568999999997592e-05, 2.356900000000106e-05, 2.3554999999998022e-05, 2.3570000000000535e-05, 2.293099999999687e-05, 2.358300000000063e-05, 2.2930000000000866e-05, 2.2958000000000006e-05, 2.3000000000002185e-05, 2.2971999999999576e-05, 2.3582999999997162e-05, 2.3556000000000965e-05, 2.3526999999998882e-05, 2.294499999999991e-05, 2.355500000000149e-05, 2.3568999999997592e-05, 2.356900000000106e-05, 2.355500000000149e-05, 2.3584000000000105e-05, 2.3499999999999216e-05, 2.295899999999948e-05, 2.2985999999999146e-05, 2.2958000000000006e-05, 2.3000000000002185e-05, 2.3528000000001825e-05, 2.3514000000002255e-05, 2.356900000000106e-05, 2.3499999999999216e-05, 2.3568999999997592e-05, 2.3570000000000535e-05, 2.3584000000000105e-05, 2.295899999999948e-05, 2.3570000000000535e-05, 2.2971999999999576e-05, 2.2958000000000006e-05, 2.2930000000000866e-05, 2.356900000000106e-05, 2.2944000000000436e-05, 2.356900000000106e-05, 2.2915999999997827e-05, 2.3582999999997162e-05, 2.355500000000149e-05, 2.3554999999998022e-05, 2.416699999999855e-05, 2.2971999999999576e-05, 2.419500000000116e-05, 2.415299999999898e-05]</msg>
<status status="PASS" starttime="20201115 23:01:59.014" endtime="20201115 23:01:59.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.009" endtime="20201115 23:01:59.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.018" endtime="20201115 23:01:59.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.022" endtime="20201115 23:01:59.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.020" endtime="20201115 23:01:59.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.017" endtime="20201115 23:01:59.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.651" endtime="20201115 23:01:59.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.649" endtime="20201115 23:01:59.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.648" endtime="20201115 23:01:59.043"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.045" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.054" endtime="20201115 23:01:59.070"></status>
</kw>
<msg timestamp="20201115 23:01:59.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.052" endtime="20201115 23:01:59.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.071" endtime="20201115 23:01:59.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.074" endtime="20201115 23:01:59.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.049" endtime="20201115 23:01:59.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.047" endtime="20201115 23:01:59.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.083" endtime="20201115 23:01:59.369"></status>
</kw>
<msg timestamp="20201115 23:01:59.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024881903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.081" endtime="20201115 23:01:59.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024881903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.374" endtime="20201115 23:01:59.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.382" endtime="20201115 23:01:59.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.079" endtime="20201115 23:01:59.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.077" endtime="20201115 23:01:59.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:59.389" level="INFO">${RESULT} = [{'time': 0.024881903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4777999999999606e-05, 'source_diff': 2.4777999999999606e-05}, {'time': 0.024918764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:59.386" endtime="20201115 23:01:59.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.402" level="INFO">${ACCURACY} = {'diff': [2.4777999999999606e-05, 2.418099999999812e-05, 2.416699999999855e-05, 2.4179999999998647e-05, 2.415300000000245e-05, 2.4165999999999077e-05, 2.4180000000002116e-05, 2.4707999999998287e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:01:59.390" endtime="20201115 23:01:59.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.407" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.406" endtime="20201115 23:01:59.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.409" level="INFO">VALUE: [2.4777999999999606e-05, 2.418099999999812e-05, 2.416699999999855e-05, 2.4179999999998647e-05, 2.415300000000245e-05, 2.4165999999999077e-05, 2.4180000000002116e-05, 2.4707999999998287e-05, 2.4179999999998647e-05, 2.4777999999999606e-05, 2.4764000000000036e-05, 2.416699999999855e-05, 2.418100000000159e-05, 2.4750000000000466e-05, 2.4736000000000896e-05, 2.416700000000202e-05, 2.416700000000202e-05, 2.4806000000002215e-05, 2.418099999999812e-05, 2.4777999999999606e-05, 2.416699999999855e-05, 2.4194000000001686e-05, 2.4777999999999606e-05, 2.4165999999999077e-05, 2.4165999999999077e-05, 2.4777999999999606e-05, 2.4764000000000036e-05, 2.418100000000159e-05, 2.416699999999855e-05, 2.4764000000000036e-05, 2.4777999999999606e-05, 2.4792000000002645e-05, 2.4763999999996567e-05, 2.4179999999998647e-05, 2.416699999999855e-05, 2.4777999999999606e-05, 2.4764000000000036e-05, 2.413900000000288e-05, 2.416699999999855e-05, 2.418100000000159e-05, 2.4179999999998647e-05, 2.415299999999898e-05, 2.4777999999999606e-05, 2.4791999999999176e-05, 2.413899999999941e-05, 2.416700000000202e-05, 2.4165999999999077e-05, 2.4764000000000036e-05, 2.418100000000159e-05, 2.4151999999999507e-05]</msg>
<status status="PASS" starttime="20201115 23:01:59.408" endtime="20201115 23:01:59.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.403" endtime="20201115 23:01:59.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.413" endtime="20201115 23:01:59.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.416" endtime="20201115 23:01:59.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.414" endtime="20201115 23:01:59.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.411" endtime="20201115 23:01:59.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.046" endtime="20201115 23:01:59.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.044" endtime="20201115 23:01:59.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.043" endtime="20201115 23:01:59.437"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.439" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.448" endtime="20201115 23:01:59.463"></status>
</kw>
<msg timestamp="20201115 23:01:59.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.446" endtime="20201115 23:01:59.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.465" endtime="20201115 23:01:59.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.467" endtime="20201115 23:01:59.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.444" endtime="20201115 23:01:59.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.442" endtime="20201115 23:01:59.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.477" endtime="20201115 23:01:59.765"></status>
</kw>
<msg timestamp="20201115 23:01:59.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024917306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024942625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.475" endtime="20201115 23:01:59.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024917306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024942625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.769" endtime="20201115 23:01:59.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.778" endtime="20201115 23:01:59.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.472" endtime="20201115 23:01:59.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.470" endtime="20201115 23:01:59.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:59.785" level="INFO">${RESULT} = [{'time': 0.024942625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5318999999999342e-05, 'source_diff': 2.5318999999999342e-05}, {'time': 0.024977611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:59.781" endtime="20201115 23:01:59.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.798" level="INFO">${ACCURACY} = {'diff': [2.5318999999999342e-05, 2.5985999999998677e-05, 2.4848000000000925e-05, 2.537499999999762e-05, 2.4764000000000036e-05, 2.5957999999999537e-05, 2.5930000000000397e-05, 2.4777999999999606e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:59.786" endtime="20201115 23:01:59.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.803" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.802" endtime="20201115 23:01:59.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.806" level="INFO">VALUE: [2.5318999999999342e-05, 2.5985999999998677e-05, 2.4848000000000925e-05, 2.537499999999762e-05, 2.4764000000000036e-05, 2.5957999999999537e-05, 2.5930000000000397e-05, 2.4777999999999606e-05, 2.537500000000109e-05, 2.537500000000109e-05, 2.6000000000001716e-05, 2.538899999999719e-05, 2.537500000000109e-05, 2.5360999999998052e-05, 2.5971999999999107e-05, 2.5972000000002576e-05, 2.534700000000195e-05, 2.4818999999998842e-05, 2.5360999999998052e-05, 2.6041999999996956e-05, 2.5443999999999467e-05, 2.536100000000152e-05, 2.537500000000109e-05, 2.4777999999999606e-05, 2.540300000000023e-05, 2.4762999999997093e-05, 2.5319999999998816e-05, 2.537499999999762e-05, 2.6014000000001286e-05, 2.5332999999998912e-05, 2.5362000000000995e-05, 2.4764000000000036e-05, 2.538900000000066e-05, 2.5402000000000757e-05, 2.537500000000109e-05, 2.538900000000066e-05, 2.5999999999998247e-05, 2.537500000000109e-05, 2.5985999999998677e-05, 2.537500000000109e-05, 2.4777999999999606e-05, 2.538899999999719e-05, 2.538900000000066e-05, 2.534700000000195e-05, 2.538899999999719e-05, 2.5318999999999342e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.538899999999719e-05, 2.5971999999999107e-05]</msg>
<status status="PASS" starttime="20201115 23:01:59.804" endtime="20201115 23:01:59.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.799" endtime="20201115 23:01:59.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.809" endtime="20201115 23:01:59.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.813" endtime="20201115 23:01:59.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.811" endtime="20201115 23:01:59.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.807" endtime="20201115 23:01:59.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.440" endtime="20201115 23:01:59.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.438" endtime="20201115 23:01:59.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.437" endtime="20201115 23:01:59.834"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.837" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.846" endtime="20201115 23:01:59.862"></status>
</kw>
<msg timestamp="20201115 23:01:59.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.845" endtime="20201115 23:01:59.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.865" endtime="20201115 23:01:59.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.874" endtime="20201115 23:01:59.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.842" endtime="20201115 23:01:59.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.840" endtime="20201115 23:01:59.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.894" endtime="20201115 23:02:00.187"></status>
</kw>
<msg timestamp="20201115 23:02:00.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026332917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026358903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.890" endtime="20201115 23:02:00.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026332917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026358903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.191" endtime="20201115 23:02:00.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.199" endtime="20201115 23:02:00.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.884" endtime="20201115 23:02:00.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.881" endtime="20201115 23:02:00.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.206" level="INFO">${RESULT} = [{'time': 0.026358903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5985999999998677e-05, 'source_diff': 2.5985999999998677e-05}, {'time': 0.026393722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:00.203" endtime="20201115 23:02:00.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.219" level="INFO">${ACCURACY} = {'diff': [2.5985999999998677e-05, 2.5958000000003006e-05, 2.6596999999999732e-05, 2.6583999999999636e-05, 2.6583000000000162e-05, 2.6583999999999636e-05, 2.6528000000001356e-05, 2.6583000000000162e-05...</msg>
<status status="PASS" starttime="20201115 23:02:00.207" endtime="20201115 23:02:00.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.224" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.223" endtime="20201115 23:02:00.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.226" level="INFO">VALUE: [2.5985999999998677e-05, 2.5958000000003006e-05, 2.6596999999999732e-05, 2.6583999999999636e-05, 2.6583000000000162e-05, 2.6583999999999636e-05, 2.6528000000001356e-05, 2.6583000000000162e-05, 2.6569000000000592e-05, 2.6597999999999206e-05, 2.5985999999998677e-05, 2.6583000000000162e-05, 2.594499999999944e-05, 2.6554999999997553e-05, 2.6596999999999732e-05, 2.5971999999999107e-05, 2.6570000000000066e-05, 2.6583000000000162e-05, 2.6638999999998442e-05, 2.5985999999998677e-05, 2.6610999999999302e-05, 2.5971999999999107e-05, 2.6583000000000162e-05, 2.5986000000002146e-05, 2.6583000000000162e-05, 2.6583000000000162e-05, 2.6596999999999732e-05, 2.5986000000002146e-05, 2.5985999999998677e-05, 2.6583000000000162e-05, 2.5986000000002146e-05, 2.5971999999999107e-05, 2.6583999999999636e-05, 2.6570000000000066e-05, 2.595899999999901e-05, 2.6583000000000162e-05, 2.6583999999999636e-05, 2.6556000000000496e-05, 2.6610999999999302e-05, 2.6569000000000592e-05, 2.6568999999997123e-05, 2.595899999999901e-05, 2.6570000000000066e-05, 2.6583000000000162e-05, 2.6583999999999636e-05, 2.6570000000000066e-05, 2.6596999999999732e-05, 2.5986000000002146e-05, 2.5999999999998247e-05, 2.5985999999998677e-05]</msg>
<status status="PASS" starttime="20201115 23:02:00.225" endtime="20201115 23:02:00.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.220" endtime="20201115 23:02:00.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.229" endtime="20201115 23:02:00.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.233" endtime="20201115 23:02:00.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.231" endtime="20201115 23:02:00.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.228" endtime="20201115 23:02:00.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.838" endtime="20201115 23:02:00.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.836" endtime="20201115 23:02:00.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.835" endtime="20201115 23:02:00.254"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.256" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.265" endtime="20201115 23:02:00.282"></status>
</kw>
<msg timestamp="20201115 23:02:00.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.264" endtime="20201115 23:02:00.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.283" endtime="20201115 23:02:00.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.286" endtime="20201115 23:02:00.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.261" endtime="20201115 23:02:00.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.258" endtime="20201115 23:02:00.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.295" endtime="20201115 23:02:00.582"></status>
</kw>
<msg timestamp="20201115 23:02:00.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025051139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025078917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.293" endtime="20201115 23:02:00.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025051139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025078917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.586" endtime="20201115 23:02:00.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.594" endtime="20201115 23:02:00.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.291" endtime="20201115 23:02:00.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.289" endtime="20201115 23:02:00.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.601" level="INFO">${RESULT} = [{'time': 0.025078917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7777999999999137e-05, 'source_diff': 2.7777999999999137e-05}, {'time': 0.025120569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:00.598" endtime="20201115 23:02:00.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.616" level="INFO">${ACCURACY} = {'diff': [2.7777999999999137e-05, 2.7804999999998803e-05, 2.7193999999997748e-05, 2.7791999999998707e-05, 2.7820000000001316e-05, 2.7805000000002272e-05, 2.718100000000112e-05, 2.7792000000002176e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:00.602" endtime="20201115 23:02:00.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.620" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.619" endtime="20201115 23:02:00.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.623" level="INFO">VALUE: [2.7777999999999137e-05, 2.7804999999998803e-05, 2.7193999999997748e-05, 2.7791999999998707e-05, 2.7820000000001316e-05, 2.7805000000002272e-05, 2.718100000000112e-05, 2.7792000000002176e-05, 2.719500000000069e-05, 2.7804999999998803e-05, 2.7207999999997318e-05, 2.7806000000001746e-05, 2.7777999999999137e-05, 2.719500000000069e-05, 2.7791999999998707e-05, 2.7208000000000787e-05, 2.718099999999765e-05, 2.7763999999999567e-05, 2.7208000000000787e-05, 2.7249999999999497e-05, 2.7208000000000787e-05, 2.718100000000112e-05, 2.7207999999997318e-05, 2.7888999999999692e-05, 2.7804999999998803e-05, 2.7207999999997318e-05, 2.7819000000001842e-05, 2.7805999999998277e-05, 2.720900000000026e-05, 2.7778000000002606e-05, 2.715299999999851e-05, 2.7137999999999468e-05, 2.7804999999998803e-05, 2.719499999999722e-05, 2.7179999999998178e-05, 2.7263999999999067e-05, 2.719500000000069e-05, 2.7791999999998707e-05, 2.718100000000112e-05, 2.7208000000000787e-05, 2.7194000000001217e-05, 2.7861000000000552e-05, 2.719500000000069e-05, 2.7165999999998608e-05, 2.7790999999999233e-05, 2.718100000000112e-05, 2.7790999999999233e-05, 2.716700000000155e-05, 2.7749999999999997e-05, 2.7777999999999137e-05]</msg>
<status status="PASS" starttime="20201115 23:02:00.622" endtime="20201115 23:02:00.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.617" endtime="20201115 23:02:00.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.626" endtime="20201115 23:02:00.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.630" endtime="20201115 23:02:00.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.628" endtime="20201115 23:02:00.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.624" endtime="20201115 23:02:00.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.257" endtime="20201115 23:02:00.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.255" endtime="20201115 23:02:00.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.254" endtime="20201115 23:02:00.651"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.654" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.662" endtime="20201115 23:02:00.678"></status>
</kw>
<msg timestamp="20201115 23:02:00.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.660" endtime="20201115 23:02:00.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.679" endtime="20201115 23:02:00.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.682" endtime="20201115 23:02:00.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.658" endtime="20201115 23:02:00.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.656" endtime="20201115 23:02:00.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.691" endtime="20201115 23:02:00.980"></status>
</kw>
<msg timestamp="20201115 23:02:00.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024707306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024735083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.689" endtime="20201115 23:02:00.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024707306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024735083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.984" endtime="20201115 23:02:00.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.992" endtime="20201115 23:02:00.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.687" endtime="20201115 23:02:00.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.685" endtime="20201115 23:02:00.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.999" level="INFO">${RESULT} = [{'time': 0.024735083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7777000000003133e-05, 'source_diff': 2.7777000000003133e-05}, {'time': 0.024768167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:00.995" endtime="20201115 23:02:00.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.012" level="INFO">${ACCURACY} = {'diff': [2.7777000000003133e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.8389000000000192e-05, 2.7791000000002702e-05, 2.8402000000000288e-05, 2.8389000000000192e-05...</msg>
<status status="PASS" starttime="20201115 23:02:01.000" endtime="20201115 23:02:01.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.017" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.016" endtime="20201115 23:02:01.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.019" level="INFO">VALUE: [2.7777000000003133e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.8389000000000192e-05, 2.7791000000002702e-05, 2.8402000000000288e-05, 2.8389000000000192e-05, 2.7790999999999233e-05, 2.8986000000001677e-05, 2.84309999999989e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.8443999999998998e-05, 2.845900000000151e-05, 2.9013000000001343e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8346999999998013e-05, 2.8402000000000288e-05, 2.8389000000000192e-05, 2.8985999999998208e-05, 2.7790999999999233e-05, 2.8346999999998013e-05, 2.8402999999999762e-05, 2.7722000000000857e-05, 2.8415999999999858e-05, 2.9028000000000387e-05, 2.8402999999999762e-05, 2.8389000000000192e-05, 2.8375000000000622e-05, 2.89309999999994e-05, 2.841699999999933e-05, 2.841699999999933e-05, 2.7790999999999233e-05, 2.840199999999682e-05, 2.844500000000194e-05, 2.8389000000000192e-05, 2.8319999999998346e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.7818999999998373e-05, 2.8375000000000622e-05, 2.8402000000000288e-05, 2.841699999999933e-05, 2.84170000000028e-05, 2.8929999999999928e-05, 2.8415999999999858e-05, 2.8402999999999762e-05]</msg>
<status status="PASS" starttime="20201115 23:02:01.018" endtime="20201115 23:02:01.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.013" endtime="20201115 23:02:01.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.023" endtime="20201115 23:02:01.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.026" endtime="20201115 23:02:01.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.025" endtime="20201115 23:02:01.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.021" endtime="20201115 23:02:01.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.654" endtime="20201115 23:02:01.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.652" endtime="20201115 23:02:01.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.652" endtime="20201115 23:02:01.047"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.050" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.058" endtime="20201115 23:02:01.073"></status>
</kw>
<msg timestamp="20201115 23:02:01.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.056" endtime="20201115 23:02:01.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.075" endtime="20201115 23:02:01.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.077" endtime="20201115 23:02:01.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.054" endtime="20201115 23:02:01.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.052" endtime="20201115 23:02:01.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.086" endtime="20201115 23:02:01.375"></status>
</kw>
<msg timestamp="20201115 23:02:01.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024434764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024463764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.084" endtime="20201115 23:02:01.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024434764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024463764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.384" endtime="20201115 23:02:01.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.403" endtime="20201115 23:02:01.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.082" endtime="20201115 23:02:01.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.080" endtime="20201115 23:02:01.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:01.417" level="INFO">${RESULT} = [{'time': 0.024463764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8999999999997778e-05, 'source_diff': 2.8999999999997778e-05}, {'time': 0.024504625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:01.410" endtime="20201115 23:02:01.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.447" level="INFO">${ACCURACY} = {'diff': [2.8999999999997778e-05, 2.8916999999999832e-05, 2.8999999999997778e-05, 2.966599999999764e-05, 2.9610999999998833e-05, 2.9597000000002732e-05, 2.9596999999999263e-05, 2.9610999999998833e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:01.419" endtime="20201115 23:02:01.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.457" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.455" endtime="20201115 23:02:01.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.470" level="INFO">VALUE: [2.8999999999997778e-05, 2.8916999999999832e-05, 2.8999999999997778e-05, 2.966599999999764e-05, 2.9610999999998833e-05, 2.9597000000002732e-05, 2.9596999999999263e-05, 2.9610999999998833e-05, 2.9610999999998833e-05, 2.9611000000002302e-05, 2.9014000000000817e-05, 2.9014000000000817e-05, 2.9528000000000887e-05, 2.9610999999998833e-05, 2.897300000000158e-05, 2.8986000000001677e-05, 2.9639000000001442e-05, 2.9597999999998736e-05, 2.9596999999999263e-05, 2.9041000000000483e-05, 2.9000000000001247e-05, 2.8999999999997778e-05, 2.9624999999998403e-05, 2.9028000000000387e-05, 2.9610999999998833e-05, 2.9611000000002302e-05, 2.9610999999998833e-05, 2.9013999999997347e-05, 2.9610999999998833e-05, 2.9041999999999957e-05, 2.9611000000002302e-05, 2.9596999999999263e-05, 2.9653000000001012e-05, 2.9556000000000027e-05, 2.9041999999999957e-05, 2.9000000000001247e-05, 2.9597999999998736e-05, 2.8986000000001677e-05, 2.9596999999999263e-05, 2.9610999999998833e-05, 2.9555000000000553e-05, 2.9611000000002302e-05, 2.9583999999999167e-05, 2.9000000000001247e-05, 2.9028000000000387e-05, 2.9612000000001776e-05, 2.9041999999999957e-05, 2.8999999999997778e-05, 2.9596999999999263e-05, 2.9596999999999263e-05]</msg>
<status status="PASS" starttime="20201115 23:02:01.459" endtime="20201115 23:02:01.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.449" endtime="20201115 23:02:01.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.476" endtime="20201115 23:02:01.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.480" endtime="20201115 23:02:01.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.478" endtime="20201115 23:02:01.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.473" endtime="20201115 23:02:01.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.050" endtime="20201115 23:02:01.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.048" endtime="20201115 23:02:01.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.048" endtime="20201115 23:02:01.501"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.503" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.511" endtime="20201115 23:02:01.528"></status>
</kw>
<msg timestamp="20201115 23:02:01.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.510" endtime="20201115 23:02:01.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.529" endtime="20201115 23:02:01.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.532" endtime="20201115 23:02:01.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.507" endtime="20201115 23:02:01.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.505" endtime="20201115 23:02:01.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.541" endtime="20201115 23:02:01.827"></status>
</kw>
<msg timestamp="20201115 23:02:01.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024501181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024531389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.539" endtime="20201115 23:02:01.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024501181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024531389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.832" endtime="20201115 23:02:01.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.840" endtime="20201115 23:02:01.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.537" endtime="20201115 23:02:01.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.535" endtime="20201115 23:02:01.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:01.847" level="INFO">${RESULT} = [{'time': 0.024531389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0208000000000318e-05, 'source_diff': 3.0208000000000318e-05}, {'time': 0.024569556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:01.843" endtime="20201115 23:02:01.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.860" level="INFO">${ACCURACY} = {'diff': [3.0208000000000318e-05, 3.082000000000085e-05, 3.080599999999781e-05, 3.0194000000000748e-05, 3.020899999999979e-05, 3.073599999999996e-05, 3.0167000000001082e-05, 3.020899999999979e-05, 3.0...</msg>
<status status="PASS" starttime="20201115 23:02:01.848" endtime="20201115 23:02:01.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.865" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.864" endtime="20201115 23:02:01.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.867" level="INFO">VALUE: [3.0208000000000318e-05, 3.082000000000085e-05, 3.080599999999781e-05, 3.0194000000000748e-05, 3.020899999999979e-05, 3.073599999999996e-05, 3.0167000000001082e-05, 3.020899999999979e-05, 3.019399999999728e-05, 3.020799999999685e-05, 3.081999999999738e-05, 3.074999999999953e-05, 3.0235999999999458e-05, 3.0221999999999888e-05, 3.086100000000008e-05, 3.0221999999999888e-05, 3.0208000000000318e-05, 3.083300000000094e-05, 3.081900000000137e-05, 3.0194000000000748e-05, 3.082000000000085e-05, 3.0208000000000318e-05, 3.0263999999998598e-05, 3.020899999999979e-05, 3.083300000000094e-05, 3.0221999999999888e-05, 3.0804999999998334e-05, 3.073599999999996e-05, 3.080599999999781e-05, 3.022300000000283e-05, 3.0208000000000318e-05, 3.0235999999999458e-05, 3.0804999999998334e-05, 3.0221999999999888e-05, 3.0138999999998473e-05, 3.0832999999997474e-05, 3.022299999999936e-05, 3.0235999999999458e-05, 3.0221999999999888e-05, 3.0250000000002497e-05, 3.0166999999997612e-05, 3.079200000000171e-05, 3.083300000000094e-05, 3.082000000000085e-05, 3.080599999999781e-05, 3.081999999999738e-05, 3.0291000000001733e-05, 3.019500000000022e-05, 3.082000000000085e-05, 3.019500000000022e-05]</msg>
<status status="PASS" starttime="20201115 23:02:01.866" endtime="20201115 23:02:01.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.861" endtime="20201115 23:02:01.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.870" endtime="20201115 23:02:01.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.874" endtime="20201115 23:02:01.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.872" endtime="20201115 23:02:01.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.869" endtime="20201115 23:02:01.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.504" endtime="20201115 23:02:01.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.502" endtime="20201115 23:02:01.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.501" endtime="20201115 23:02:01.895"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.897" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.906" endtime="20201115 23:02:01.930"></status>
</kw>
<msg timestamp="20201115 23:02:01.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.904" endtime="20201115 23:02:01.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.932" endtime="20201115 23:02:01.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.934" endtime="20201115 23:02:01.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.901" endtime="20201115 23:02:01.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.899" endtime="20201115 23:02:01.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.944" endtime="20201115 23:02:02.230"></status>
</kw>
<msg timestamp="20201115 23:02:02.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024748486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024779889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.942" endtime="20201115 23:02:02.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024748486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024779889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.234" endtime="20201115 23:02:02.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.243" endtime="20201115 23:02:02.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.940" endtime="20201115 23:02:02.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.938" endtime="20201115 23:02:02.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.250" level="INFO">${RESULT} = [{'time': 0.024779889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.140299999999929e-05, 'source_diff': 3.140299999999929e-05}, {'time': 0.024817444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:02.246" endtime="20201115 23:02:02.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.265" level="INFO">${ACCURACY} = {'diff': [3.140299999999929e-05, 3.2013000000000874e-05, 3.143099999999843e-05, 3.083399999999695e-05, 3.201400000000035e-05, 3.145899999999757e-05, 3.141699999999886e-05, 3.142999999999896e-05, 3.204...</msg>
<status status="PASS" starttime="20201115 23:02:02.251" endtime="20201115 23:02:02.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.269" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.268" endtime="20201115 23:02:02.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.272" level="INFO">VALUE: [3.140299999999929e-05, 3.2013000000000874e-05, 3.143099999999843e-05, 3.083399999999695e-05, 3.201400000000035e-05, 3.145899999999757e-05, 3.141699999999886e-05, 3.142999999999896e-05, 3.204199999999949e-05, 3.141700000000233e-05, 3.204200000000296e-05, 3.141699999999886e-05, 3.081999999999738e-05, 3.088899999999922e-05, 3.0790999999998764e-05, 3.141699999999886e-05, 3.202799999999992e-05, 3.141699999999886e-05, 3.144399999999853e-05, 3.211100000000133e-05, 3.141599999999939e-05, 3.0818999999997904e-05, 3.141700000000233e-05, 3.140299999999929e-05, 3.141700000000233e-05, 3.141599999999939e-05, 3.081999999999738e-05, 3.141599999999939e-05, 3.0832999999997474e-05, 3.140299999999929e-05, 3.141699999999886e-05, 3.141599999999939e-05, 3.141599999999939e-05, 3.202799999999992e-05, 3.14310000000019e-05, 3.141699999999886e-05, 3.140199999999982e-05, 3.1444999999998e-05, 3.14310000000019e-05, 3.141599999999939e-05, 3.141699999999886e-05, 3.141699999999886e-05, 3.141699999999886e-05, 3.141699999999886e-05, 3.140299999999929e-05, 3.141600000000286e-05, 3.141699999999886e-05, 3.202799999999992e-05, 3.195800000000207e-05, 3.141699999999886e-05]</msg>
<status status="PASS" starttime="20201115 23:02:02.270" endtime="20201115 23:02:02.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.265" endtime="20201115 23:02:02.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.275" endtime="20201115 23:02:02.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.278" endtime="20201115 23:02:02.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.277" endtime="20201115 23:02:02.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.273" endtime="20201115 23:02:02.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.898" endtime="20201115 23:02:02.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.896" endtime="20201115 23:02:02.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.895" endtime="20201115 23:02:02.299"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.301" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.310" endtime="20201115 23:02:02.326"></status>
</kw>
<msg timestamp="20201115 23:02:02.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.308" endtime="20201115 23:02:02.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.327" endtime="20201115 23:02:02.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.330" endtime="20201115 23:02:02.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.306" endtime="20201115 23:02:02.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.304" endtime="20201115 23:02:02.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.339" endtime="20201115 23:02:02.625"></status>
</kw>
<msg timestamp="20201115 23:02:02.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024570722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02460275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:02.337" endtime="20201115 23:02:02.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024570722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02460275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:02.630" endtime="20201115 23:02:02.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.638" endtime="20201115 23:02:02.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.335" endtime="20201115 23:02:02.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.333" endtime="20201115 23:02:02.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.645" level="INFO">${RESULT} = [{'time': 0.02460275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.202799999999992e-05, 'source_diff': 3.202799999999992e-05}, {'time': 0.024640875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:02.641" endtime="20201115 23:02:02.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.658" level="INFO">${ACCURACY} = {'diff': [3.202799999999992e-05, 3.2624999999997933e-05, 3.2096999999998294e-05, 3.26250000000014e-05, 3.268000000000021e-05, 3.2013000000000874e-05, 3.202799999999992e-05, 3.2624999999997933e-05, 3.2...</msg>
<status status="PASS" starttime="20201115 23:02:02.646" endtime="20201115 23:02:02.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.663" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.662" endtime="20201115 23:02:02.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.665" level="INFO">VALUE: [3.202799999999992e-05, 3.2624999999997933e-05, 3.2096999999998294e-05, 3.26250000000014e-05, 3.268000000000021e-05, 3.2013000000000874e-05, 3.202799999999992e-05, 3.2624999999997933e-05, 3.26250000000014e-05, 3.263900000000097e-05, 3.2610999999998364e-05, 3.206999999999863e-05, 3.202799999999992e-05, 3.2041000000000014e-05, 3.205600000000253e-05, 3.2568999999999654e-05, 3.26250000000014e-05, 3.202799999999992e-05, 3.201400000000035e-05, 3.26250000000014e-05, 3.270799999999935e-05, 3.263900000000097e-05, 3.198599999999774e-05, 3.202799999999992e-05, 3.202799999999992e-05, 3.20700000000021e-05, 3.26389999999975e-05, 3.265300000000054e-05, 3.26250000000014e-05, 3.202799999999992e-05, 3.2624999999997933e-05, 3.2610999999998364e-05, 3.202799999999992e-05, 3.202799999999992e-05, 3.263900000000097e-05, 3.2624999999997933e-05, 3.201400000000035e-05, 3.26250000000014e-05, 3.263900000000097e-05, 3.265300000000054e-05, 3.2041000000000014e-05, 3.26250000000014e-05, 3.2624999999997933e-05, 3.20839999999982e-05, 3.204199999999949e-05, 3.263900000000097e-05, 3.263900000000097e-05, 3.26250000000014e-05, 3.2624999999997933e-05, 3.26250000000014e-05]</msg>
<status status="PASS" starttime="20201115 23:02:02.664" endtime="20201115 23:02:02.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.659" endtime="20201115 23:02:02.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.668" endtime="20201115 23:02:02.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.671" endtime="20201115 23:02:02.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.670" endtime="20201115 23:02:02.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.666" endtime="20201115 23:02:02.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.302" endtime="20201115 23:02:02.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.300" endtime="20201115 23:02:02.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.299" endtime="20201115 23:02:02.693"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.695" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.703" endtime="20201115 23:02:02.720"></status>
</kw>
<msg timestamp="20201115 23:02:02.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.701" endtime="20201115 23:02:02.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.721" endtime="20201115 23:02:02.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.724" endtime="20201115 23:02:02.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.699" endtime="20201115 23:02:02.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.697" endtime="20201115 23:02:02.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.734" endtime="20201115 23:02:03.020"></status>
</kw>
<msg timestamp="20201115 23:02:03.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024541722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024574958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.732" endtime="20201115 23:02:03.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024541722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024574958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.024" endtime="20201115 23:02:03.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.032" endtime="20201115 23:02:03.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.729" endtime="20201115 23:02:03.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.728" endtime="20201115 23:02:03.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.039" level="INFO">${RESULT} = [{'time': 0.024574958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.323600000000246e-05, 'source_diff': 3.323600000000246e-05}, {'time': 0.024622889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:03.036" endtime="20201115 23:02:03.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.052" level="INFO">${ACCURACY} = {'diff': [3.323600000000246e-05, 3.323599999999899e-05, 3.3262999999998655e-05, 3.3847000000000044e-05, 3.384799999999952e-05, 3.382000000000038e-05, 3.3847000000000044e-05, 3.325000000000203e-05, 3.3...</msg>
<status status="PASS" starttime="20201115 23:02:03.040" endtime="20201115 23:02:03.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.057" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.056" endtime="20201115 23:02:03.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.059" level="INFO">VALUE: [3.323600000000246e-05, 3.323599999999899e-05, 3.3262999999998655e-05, 3.3847000000000044e-05, 3.384799999999952e-05, 3.382000000000038e-05, 3.3847000000000044e-05, 3.325000000000203e-05, 3.330600000000031e-05, 3.324999999999856e-05, 3.320799999999985e-05, 3.380600000000081e-05, 3.320900000000279e-05, 3.323599999999899e-05, 3.3847000000000044e-05, 3.322299999999889e-05, 3.3833000000000474e-05, 3.323599999999899e-05, 3.326399999999813e-05, 3.3833000000000474e-05, 3.3847000000000044e-05, 3.390299999999832e-05, 3.379200000000124e-05, 3.324999999999856e-05, 3.325000000000203e-05, 3.323599999999899e-05, 3.322199999999942e-05, 3.326399999999813e-05, 3.322300000000236e-05, 3.323600000000246e-05, 3.323599999999899e-05, 3.3847000000000044e-05, 3.3860999999999614e-05, 3.383399999999995e-05, 3.383400000000342e-05, 3.382000000000038e-05, 3.376399999999863e-05, 3.3833000000000474e-05, 3.325000000000203e-05, 3.3833000000000474e-05, 3.379200000000124e-05, 3.325000000000203e-05, 3.3290999999997795e-05, 3.329200000000074e-05, 3.323599999999899e-05, 3.323599999999899e-05, 3.3263000000002124e-05, 3.320899999999932e-05, 3.323599999999899e-05, 3.322199999999942e-05]</msg>
<status status="PASS" starttime="20201115 23:02:03.058" endtime="20201115 23:02:03.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.053" endtime="20201115 23:02:03.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.063" endtime="20201115 23:02:03.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.066" endtime="20201115 23:02:03.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.064" endtime="20201115 23:02:03.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.061" endtime="20201115 23:02:03.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.695" endtime="20201115 23:02:03.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.694" endtime="20201115 23:02:03.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.693" endtime="20201115 23:02:03.087"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.089" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.098" endtime="20201115 23:02:03.114"></status>
</kw>
<msg timestamp="20201115 23:02:03.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.096" endtime="20201115 23:02:03.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.116" endtime="20201115 23:02:03.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.118" endtime="20201115 23:02:03.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.093" endtime="20201115 23:02:03.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.091" endtime="20201115 23:02:03.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.127" endtime="20201115 23:02:03.415"></status>
</kw>
<msg timestamp="20201115 23:02:03.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025130639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025165069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.126" endtime="20201115 23:02:03.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025130639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025165069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.419" endtime="20201115 23:02:03.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.427" endtime="20201115 23:02:03.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.123" endtime="20201115 23:02:03.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.122" endtime="20201115 23:02:03.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.434" level="INFO">${RESULT} = [{'time': 0.025165069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.443000000000196e-05, 'source_diff': 3.443000000000196e-05}, {'time': 0.025214153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:03.431" endtime="20201115 23:02:03.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.447" level="INFO">${ACCURACY} = {'diff': [3.443000000000196e-05, 3.505599999999859e-05, 3.5111000000000864e-05, 3.3847000000000044e-05, 3.444399999999806e-05, 3.505599999999859e-05, 3.444399999999806e-05, 3.3833000000000474e-05, 3.4...</msg>
<status status="PASS" starttime="20201115 23:02:03.435" endtime="20201115 23:02:03.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.452" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.451" endtime="20201115 23:02:03.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.454" level="INFO">VALUE: [3.443000000000196e-05, 3.505599999999859e-05, 3.5111000000000864e-05, 3.3847000000000044e-05, 3.444399999999806e-05, 3.505599999999859e-05, 3.444399999999806e-05, 3.3833000000000474e-05, 3.444499999999753e-05, 3.3846999999996574e-05, 3.390299999999832e-05, 3.382000000000038e-05, 3.447200000000067e-05, 3.3833000000000474e-05, 3.382000000000038e-05, 3.4445000000001e-05, 3.504199999999902e-05, 3.443100000000143e-05, 3.443000000000196e-05, 3.384799999999952e-05, 3.379200000000124e-05, 3.444499999999753e-05, 3.445900000000057e-05, 3.44719999999972e-05, 3.444400000000153e-05, 3.3833000000000474e-05, 3.505599999999859e-05, 3.502799999999945e-05, 3.447200000000067e-05, 3.4445000000001e-05, 3.442999999999849e-05, 3.443100000000143e-05, 3.388799999999928e-05, 3.3847000000000044e-05, 3.444399999999806e-05, 3.504199999999902e-05, 3.379199999999777e-05, 3.444499999999753e-05, 3.381999999999691e-05, 3.444400000000153e-05, 3.391600000000189e-05, 3.444399999999806e-05, 3.444400000000153e-05, 3.444400000000153e-05, 3.5040999999999545e-05, 3.442999999999849e-05, 3.444499999999753e-05, 3.441700000000186e-05, 3.4445000000001e-05, 3.444400000000153e-05]</msg>
<status status="PASS" starttime="20201115 23:02:03.453" endtime="20201115 23:02:03.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.448" endtime="20201115 23:02:03.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.457" endtime="20201115 23:02:03.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.461" endtime="20201115 23:02:03.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.459" endtime="20201115 23:02:03.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.456" endtime="20201115 23:02:03.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.090" endtime="20201115 23:02:03.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.088" endtime="20201115 23:02:03.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.087" endtime="20201115 23:02:03.482"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.485" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.493" endtime="20201115 23:02:03.509"></status>
</kw>
<msg timestamp="20201115 23:02:03.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.491" endtime="20201115 23:02:03.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.511" endtime="20201115 23:02:03.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.513" endtime="20201115 23:02:03.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.489" endtime="20201115 23:02:03.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.487" endtime="20201115 23:02:03.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.523" endtime="20201115 23:02:03.809"></status>
</kw>
<msg timestamp="20201115 23:02:03.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024736306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024771361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.521" endtime="20201115 23:02:03.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024736306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024771361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.813" endtime="20201115 23:02:03.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.822" endtime="20201115 23:02:03.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.518" endtime="20201115 23:02:03.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.517" endtime="20201115 23:02:03.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.828" level="INFO">${RESULT} = [{'time': 0.024771361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5054999999999115e-05, 'source_diff': 3.5054999999999115e-05}, {'time': 0.024817764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:03.825" endtime="20201115 23:02:03.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.843" level="INFO">${ACCURACY} = {'diff': [3.5054999999999115e-05, 3.504199999999902e-05, 3.566600000000017e-05, 3.5653000000000074e-05, 3.50840000000012e-05, 3.5653000000000074e-05, 3.5653000000000074e-05, 3.504199999999902e-05, 3.5...</msg>
<status status="PASS" starttime="20201115 23:02:03.829" endtime="20201115 23:02:03.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.847" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.846" endtime="20201115 23:02:03.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.850" level="INFO">VALUE: [3.5054999999999115e-05, 3.504199999999902e-05, 3.566600000000017e-05, 3.5653000000000074e-05, 3.50840000000012e-05, 3.5653000000000074e-05, 3.5653000000000074e-05, 3.504199999999902e-05, 3.5611000000001364e-05, 3.5638999999997034e-05, 3.5639000000000504e-05, 3.504200000000249e-05, 3.5653000000000074e-05, 3.5596999999998324e-05, 3.5040999999999545e-05, 3.5653000000000074e-05, 3.5040999999999545e-05, 3.5653000000000074e-05, 3.56659999999967e-05, 3.504199999999902e-05, 3.5040999999999545e-05, 3.504200000000249e-05, 3.5653000000000074e-05, 3.504199999999902e-05, 3.5639000000000504e-05, 3.5054999999999115e-05, 3.5653000000000074e-05, 3.505600000000206e-05, 3.504200000000249e-05, 3.5652999999996604e-05, 3.505600000000206e-05, 3.5653000000000074e-05, 3.5639000000000504e-05, 3.56520000000006e-05, 3.505599999999859e-05, 3.5653000000000074e-05, 3.5611000000001364e-05, 3.504199999999902e-05, 3.567999999999974e-05, 3.5639000000000504e-05, 3.504199999999902e-05, 3.566600000000017e-05, 3.504199999999902e-05, 3.5639000000000504e-05, 3.5040999999999545e-05, 3.504199999999902e-05, 3.569399999999931e-05, 3.566600000000017e-05, 3.5639000000000504e-05, 3.5639000000000504e-05]</msg>
<status status="PASS" starttime="20201115 23:02:03.849" endtime="20201115 23:02:03.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.844" endtime="20201115 23:02:03.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.853" endtime="20201115 23:02:03.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.857" endtime="20201115 23:02:03.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.855" endtime="20201115 23:02:03.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.852" endtime="20201115 23:02:03.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.485" endtime="20201115 23:02:03.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.484" endtime="20201115 23:02:03.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.483" endtime="20201115 23:02:03.878"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.881" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.889" endtime="20201115 23:02:03.906"></status>
</kw>
<msg timestamp="20201115 23:02:03.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.887" endtime="20201115 23:02:03.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.908" endtime="20201115 23:02:03.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.910" endtime="20201115 23:02:03.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.885" endtime="20201115 23:02:03.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.882" endtime="20201115 23:02:03.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.919" endtime="20201115 23:02:04.206"></status>
</kw>
<msg timestamp="20201115 23:02:04.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024684486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.917" endtime="20201115 23:02:04.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024684486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.210" endtime="20201115 23:02:04.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.218" endtime="20201115 23:02:04.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.915" endtime="20201115 23:02:04.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.913" endtime="20201115 23:02:04.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.225" level="INFO">${RESULT} = [{'time': 0.024720722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.623600000000199e-05, 'source_diff': 3.623600000000199e-05}, {'time': 0.024767778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:04.222" endtime="20201115 23:02:04.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.238" level="INFO">${ACCURACY} = {'diff': [3.623600000000199e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.684800000000252e-05, 3.626399999999766e-05, 3.624999999999809e-05, 3.6874999999998714e-05, 3.625000000000156e-05, 3.6...</msg>
<status status="PASS" starttime="20201115 23:02:04.226" endtime="20201115 23:02:04.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.243" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.242" endtime="20201115 23:02:04.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.246" level="INFO">VALUE: [3.623600000000199e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.684800000000252e-05, 3.626399999999766e-05, 3.624999999999809e-05, 3.6874999999998714e-05, 3.625000000000156e-05, 3.6875000000002184e-05, 3.626400000000113e-05, 3.6861000000002614e-05, 3.6861000000002614e-05, 3.623599999999852e-05, 3.625000000000156e-05, 3.623600000000199e-05, 3.6874999999998714e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.618000000000024e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.624999999999809e-05, 3.6846999999999575e-05, 3.6180999999999713e-05, 3.680600000000034e-05, 3.6860999999999144e-05, 3.626400000000113e-05, 3.694500000000003e-05, 3.623600000000199e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.6846999999999575e-05, 3.626400000000113e-05, 3.626400000000113e-05, 3.563800000000103e-05, 3.679200000000077e-05, 3.6875000000002184e-05, 3.620799999999938e-05, 3.623600000000199e-05, 3.624999999999809e-05, 3.6875000000002184e-05, 3.625000000000156e-05, 3.6846999999999575e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.6860999999999144e-05, 3.569499999999878e-05, 3.625000000000156e-05, 3.623599999999852e-05, 3.6860999999999144e-05]</msg>
<status status="PASS" starttime="20201115 23:02:04.244" endtime="20201115 23:02:04.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.239" endtime="20201115 23:02:04.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.249" endtime="20201115 23:02:04.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.252" endtime="20201115 23:02:04.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.251" endtime="20201115 23:02:04.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.247" endtime="20201115 23:02:04.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.881" endtime="20201115 23:02:04.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.879" endtime="20201115 23:02:04.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.878" endtime="20201115 23:02:04.273"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.276" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.284" endtime="20201115 23:02:04.300"></status>
</kw>
<msg timestamp="20201115 23:02:04.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.282" endtime="20201115 23:02:04.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.302" endtime="20201115 23:02:04.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.304" endtime="20201115 23:02:04.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.280" endtime="20201115 23:02:04.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.278" endtime="20201115 23:02:04.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.314" endtime="20201115 23:02:04.599"></status>
</kw>
<msg timestamp="20201115 23:02:04.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02432175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024359208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:04.312" endtime="20201115 23:02:04.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02432175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024359208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:04.603" endtime="20201115 23:02:04.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.612" endtime="20201115 23:02:04.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.309" endtime="20201115 23:02:04.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.308" endtime="20201115 23:02:04.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.618" level="INFO">${RESULT} = [{'time': 0.024359208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.745800000000063e-05, 'source_diff': 3.745800000000063e-05}, {'time': 0.024402694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:04.615" endtime="20201115 23:02:04.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.632" level="INFO">${ACCURACY} = {'diff': [3.745800000000063e-05, 3.742999999999802e-05, 3.804200000000202e-05, 3.684800000000252e-05, 3.74590000000001e-05, 3.747299999999967e-05, 3.7445000000000533e-05, 3.6860999999999144e-05, 3.745...</msg>
<status status="PASS" starttime="20201115 23:02:04.620" endtime="20201115 23:02:04.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.637" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.636" endtime="20201115 23:02:04.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.639" level="INFO">VALUE: [3.745800000000063e-05, 3.742999999999802e-05, 3.804200000000202e-05, 3.684800000000252e-05, 3.74590000000001e-05, 3.747299999999967e-05, 3.7445000000000533e-05, 3.6860999999999144e-05, 3.745800000000063e-05, 3.6860999999999144e-05, 3.745799999999716e-05, 3.745800000000063e-05, 3.745800000000063e-05, 3.8068999999998215e-05, 3.745800000000063e-05, 3.744400000000106e-05, 3.74590000000001e-05, 3.6846999999999575e-05, 3.74590000000001e-05, 3.7445000000000533e-05, 3.8125000000003434e-05, 3.745800000000063e-05, 3.745800000000063e-05, 3.744400000000106e-05, 3.745799999999716e-05, 3.74720000000002e-05, 3.745800000000063e-05, 3.744400000000106e-05, 3.748599999999977e-05, 3.6846999999999575e-05, 3.6861000000002614e-05, 3.745800000000063e-05, 3.745800000000063e-05, 3.749999999999934e-05, 3.744399999999759e-05, 3.745800000000063e-05, 3.74590000000001e-05, 3.680599999999687e-05, 3.805599999999812e-05, 3.6847000000003044e-05, 3.6860999999999144e-05, 3.747299999999967e-05, 3.745799999999716e-05, 3.750000000000281e-05, 3.740200000000235e-05, 3.74720000000002e-05, 3.741599999999845e-05, 3.6860999999999144e-05, 3.7403000000001824e-05, 3.680600000000034e-05]</msg>
<status status="PASS" starttime="20201115 23:02:04.638" endtime="20201115 23:02:04.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.633" endtime="20201115 23:02:04.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.642" endtime="20201115 23:02:04.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.646" endtime="20201115 23:02:04.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.644" endtime="20201115 23:02:04.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.641" endtime="20201115 23:02:04.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.276" endtime="20201115 23:02:04.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.274" endtime="20201115 23:02:04.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.274" endtime="20201115 23:02:04.667"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.669" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.677" endtime="20201115 23:02:04.694"></status>
</kw>
<msg timestamp="20201115 23:02:04.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.676" endtime="20201115 23:02:04.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.695" endtime="20201115 23:02:04.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.698" endtime="20201115 23:02:04.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.673" endtime="20201115 23:02:04.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.671" endtime="20201115 23:02:04.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.707" endtime="20201115 23:02:04.993"></status>
</kw>
<msg timestamp="20201115 23:02:04.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.705" endtime="20201115 23:02:04.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.997" endtime="20201115 23:02:05.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.006" endtime="20201115 23:02:05.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.703" endtime="20201115 23:02:05.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.701" endtime="20201115 23:02:05.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.013" level="INFO">${RESULT} = [{'time': 0.024281319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4221999999999604e-05, 'source_diff': 5.4221999999999604e-05}, {'time': 0.024347333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:05.009" endtime="20201115 23:02:05.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.026" level="INFO">${ACCURACY} = {'diff': [5.4221999999999604e-05, 5.431899999999712e-05, 5.431900000000059e-05, 5.413899999999819e-05, 5.4444000000000714e-05, 5.447200000000332e-05, 5.459699999999998e-05, 5.472299999999958e-05, 5.45...</msg>
<status status="PASS" starttime="20201115 23:02:05.014" endtime="20201115 23:02:05.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.030" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.029" endtime="20201115 23:02:05.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.033" level="INFO">VALUE: [5.4221999999999604e-05, 5.431899999999712e-05, 5.431900000000059e-05, 5.413899999999819e-05, 5.4444000000000714e-05, 5.447200000000332e-05, 5.459699999999998e-05, 5.472299999999958e-05, 5.4541999999997703e-05, 5.465300000000173e-05, 5.379200000000042e-05, 5.432000000000006e-05, 5.432000000000006e-05, 5.398600000000239e-05, 5.415300000000123e-05, 5.3999999999998494e-05, 5.4166000000001324e-05, 5.430599999999702e-05, 5.4165999999997855e-05, 5.405600000000024e-05, 5.457000000000031e-05, 5.456899999999737e-05, 5.430500000000102e-05, 5.41670000000008e-05, 5.431900000000059e-05, 5.380499999999705e-05, 5.397200000000282e-05, 5.380599999999999e-05, 5.3985999999998924e-05, 5.381999999999956e-05, 5.3985999999998924e-05, 5.4485999999999424e-05, 5.433399999999963e-05, 5.384699999999923e-05, 5.4165999999997855e-05, 5.3957999999999784e-05, 5.433300000000016e-05, 5.409700000000295e-05, 5.4194000000000464e-05, 5.427800000000135e-05, 5.433300000000016e-05, 5.448600000000289e-05, 5.412499999999862e-05, 5.386200000000174e-05, 5.447200000000332e-05, 5.3985999999998924e-05, 5.380599999999999e-05, 5.46670000000013e-05, 5.381999999999956e-05, 5.44869999999989e-05]</msg>
<status status="PASS" starttime="20201115 23:02:05.031" endtime="20201115 23:02:05.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.027" endtime="20201115 23:02:05.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.036" endtime="20201115 23:02:05.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.039" endtime="20201115 23:02:05.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.038" endtime="20201115 23:02:05.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.034" endtime="20201115 23:02:05.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.670" endtime="20201115 23:02:05.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.668" endtime="20201115 23:02:05.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.667" endtime="20201115 23:02:05.060"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.063" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.071" endtime="20201115 23:02:05.088"></status>
</kw>
<msg timestamp="20201115 23:02:05.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.069" endtime="20201115 23:02:05.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.089" endtime="20201115 23:02:05.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.092" endtime="20201115 23:02:05.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.067" endtime="20201115 23:02:05.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.065" endtime="20201115 23:02:05.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.101" endtime="20201115 23:02:05.388"></status>
</kw>
<msg timestamp="20201115 23:02:05.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024300542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024355944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.099" endtime="20201115 23:02:05.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024300542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024355944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.392" endtime="20201115 23:02:05.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.401" endtime="20201115 23:02:05.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.097" endtime="20201115 23:02:05.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.095" endtime="20201115 23:02:05.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.407" level="INFO">${RESULT} = [{'time': 0.024355944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5401999999999535e-05, 'source_diff': 5.5401999999999535e-05}, {'time': 0.024421931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:05.404" endtime="20201115 23:02:05.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.422" level="INFO">${ACCURACY} = {'diff': [5.5401999999999535e-05, 5.482000000000056e-05, 5.481900000000109e-05, 5.498600000000339e-05, 5.5486000000000424e-05, 5.563899999999969e-05, 5.5472000000000854e-05, 5.554200000000217e-05, 5.5...</msg>
<status status="PASS" starttime="20201115 23:02:05.408" endtime="20201115 23:02:05.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.427" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.426" endtime="20201115 23:02:05.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.429" level="INFO">VALUE: [5.5401999999999535e-05, 5.482000000000056e-05, 5.481900000000109e-05, 5.498600000000339e-05, 5.5486000000000424e-05, 5.563899999999969e-05, 5.5472000000000854e-05, 5.554200000000217e-05, 5.516699999999833e-05, 5.4972000000000354e-05, 5.5207999999997565e-05, 5.4999999999999494e-05, 5.5486000000000424e-05, 5.4985999999999924e-05, 5.552699999999966e-05, 5.565300000000273e-05, 5.5486000000000424e-05, 5.547300000000033e-05, 5.531999999999759e-05, 5.483299999999719e-05, 5.5151999999999285e-05, 5.5651999999999785e-05, 5.5165999999998855e-05, 5.526400000000278e-05, 5.480500000000152e-05, 5.565299999999926e-05, 5.563899999999969e-05, 5.519500000000094e-05, 5.483400000000013e-05, 5.532000000000106e-05, 5.481999999999709e-05, 5.4985999999999924e-05, 5.482000000000056e-05, 5.565299999999926e-05, 5.483300000000066e-05, 5.533299999999769e-05, 5.479099999999848e-05, 5.4985999999999924e-05, 5.53610000000003e-05, 5.530499999999855e-05, 5.4972000000000354e-05, 5.565300000000273e-05, 5.515299999999876e-05, 5.481900000000109e-05, 5.563899999999969e-05, 5.5499999999999994e-05, 5.559699999999751e-05, 5.484700000000023e-05, 5.515299999999876e-05, 5.515299999999876e-05]</msg>
<status status="PASS" starttime="20201115 23:02:05.428" endtime="20201115 23:02:05.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.423" endtime="20201115 23:02:05.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.432" endtime="20201115 23:02:05.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.436" endtime="20201115 23:02:05.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.434" endtime="20201115 23:02:05.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.431" endtime="20201115 23:02:05.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.063" endtime="20201115 23:02:05.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.062" endtime="20201115 23:02:05.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.061" endtime="20201115 23:02:05.457"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.459" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.467" endtime="20201115 23:02:05.485"></status>
</kw>
<msg timestamp="20201115 23:02:05.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.466" endtime="20201115 23:02:05.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.486" endtime="20201115 23:02:05.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.489" endtime="20201115 23:02:05.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.463" endtime="20201115 23:02:05.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.461" endtime="20201115 23:02:05.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.498" endtime="20201115 23:02:05.783"></status>
</kw>
<msg timestamp="20201115 23:02:05.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024499917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024555958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.496" endtime="20201115 23:02:05.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024499917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024555958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.787" endtime="20201115 23:02:05.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.795" endtime="20201115 23:02:05.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.494" endtime="20201115 23:02:05.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.492" endtime="20201115 23:02:05.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.802" level="INFO">${RESULT} = [{'time': 0.024555958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.604099999999973e-05, 'source_diff': 5.604099999999973e-05}, {'time': 0.024619958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:05.798" endtime="20201115 23:02:05.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.815" level="INFO">${ACCURACY} = {'diff': [5.604099999999973e-05, 5.630499999999955e-05, 5.665300000000026e-05, 5.6485999999997955e-05, 5.631899999999912e-05, 5.6500000000000994e-05, 5.631899999999912e-05, 5.61809999999989e-05, 5.615...</msg>
<status status="PASS" starttime="20201115 23:02:05.803" endtime="20201115 23:02:05.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.820" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.819" endtime="20201115 23:02:05.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.822" level="INFO">VALUE: [5.604099999999973e-05, 5.630499999999955e-05, 5.665300000000026e-05, 5.6485999999997955e-05, 5.631899999999912e-05, 5.6500000000000994e-05, 5.631899999999912e-05, 5.61809999999989e-05, 5.615299999999976e-05, 5.632000000000206e-05, 5.613900000000019e-05, 5.615299999999976e-05, 5.6000000000000494e-05, 5.6651999999997316e-05, 5.6000000000000494e-05, 5.612500000000062e-05, 5.613900000000019e-05, 5.666699999999983e-05, 5.6499999999997524e-05, 5.618100000000237e-05, 5.5986000000000924e-05, 5.5958000000001784e-05, 5.5972000000001354e-05, 5.615299999999976e-05, 5.586200000000027e-05, 5.6500000000000994e-05, 5.615299999999976e-05, 5.5805999999998523e-05, 5.665299999999679e-05, 5.583300000000166e-05, 5.6165999999999855e-05, 5.6486000000001424e-05, 5.6277999999999884e-05, 5.6651999999997316e-05, 5.622300000000108e-05, 5.581899999999862e-05, 5.6541999999999704e-05, 5.631900000000259e-05, 5.58610000000008e-05, 5.61809999999989e-05, 5.582000000000156e-05, 5.615299999999976e-05, 5.583399999999766e-05, 5.659799999999798e-05, 5.665300000000026e-05, 5.6319999999998593e-05, 5.6485999999997955e-05, 5.5986000000000924e-05, 5.631899999999912e-05, 5.6652000000000785e-05]</msg>
<status status="PASS" starttime="20201115 23:02:05.821" endtime="20201115 23:02:05.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.816" endtime="20201115 23:02:05.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.825" endtime="20201115 23:02:05.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.829" endtime="20201115 23:02:05.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.827" endtime="20201115 23:02:05.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.824" endtime="20201115 23:02:05.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.460" endtime="20201115 23:02:05.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.458" endtime="20201115 23:02:05.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.457" endtime="20201115 23:02:05.850"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.852" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.861" endtime="20201115 23:02:05.878"></status>
</kw>
<msg timestamp="20201115 23:02:05.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.859" endtime="20201115 23:02:05.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.880" endtime="20201115 23:02:05.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.882" endtime="20201115 23:02:05.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.857" endtime="20201115 23:02:05.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.854" endtime="20201115 23:02:05.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.891" endtime="20201115 23:02:06.178"></status>
</kw>
<msg timestamp="20201115 23:02:06.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025086153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025143347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.890" endtime="20201115 23:02:06.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025086153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025143347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.183" endtime="20201115 23:02:06.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.191" endtime="20201115 23:02:06.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.887" endtime="20201115 23:02:06.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.886" endtime="20201115 23:02:06.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.198" level="INFO">${RESULT} = [{'time': 0.025143347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7193999999999995e-05, 'source_diff': 5.7193999999999995e-05}, {'time': 0.025205347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:06.194" endtime="20201115 23:02:06.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.211" level="INFO">${ACCURACY} = {'diff': [5.7193999999999995e-05, 5.765299999999779e-05, 5.681899999999962e-05, 5.713900000000119e-05, 5.765300000000126e-05, 5.693099999999965e-05, 5.683400000000213e-05, 5.7151999999997816e-05, 5.73...</msg>
<status status="PASS" starttime="20201115 23:02:06.199" endtime="20201115 23:02:06.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.215" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.214" endtime="20201115 23:02:06.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.218" level="INFO">VALUE: [5.7193999999999995e-05, 5.765299999999779e-05, 5.681899999999962e-05, 5.713900000000119e-05, 5.765300000000126e-05, 5.693099999999965e-05, 5.683400000000213e-05, 5.7151999999997816e-05, 5.7319999999999593e-05, 5.762499999999865e-05, 5.762499999999865e-05, 5.69870000000014e-05, 5.74870000000019e-05, 5.7651999999998316e-05, 5.7486000000002424e-05, 5.683299999999919e-05, 5.7500000000001994e-05, 5.765300000000126e-05, 5.7499999999998525e-05, 5.6972000000002354e-05, 5.715300000000076e-05, 5.731900000000012e-05, 5.715300000000076e-05, 5.765299999999779e-05, 5.6819999999999093e-05, 5.715300000000076e-05, 5.715300000000076e-05, 5.762499999999865e-05, 5.736099999999883e-05, 5.681899999999962e-05, 5.7637999999998746e-05, 5.6971999999998885e-05, 5.731900000000012e-05, 5.7514000000001564e-05, 5.716700000000033e-05, 5.716699999999686e-05, 5.681899999999962e-05, 5.6805999999999524e-05, 5.6986000000001924e-05, 5.7319999999999593e-05, 5.765300000000126e-05, 5.7306000000000024e-05, 5.7319999999999593e-05, 5.682000000000256e-05, 5.715300000000076e-05, 5.7471999999999385e-05, 5.7652000000001785e-05, 5.6985999999998455e-05, 5.7472000000002854e-05, 5.76810000000004e-05]</msg>
<status status="PASS" starttime="20201115 23:02:06.216" endtime="20201115 23:02:06.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.212" endtime="20201115 23:02:06.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.221" endtime="20201115 23:02:06.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.224" endtime="20201115 23:02:06.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.223" endtime="20201115 23:02:06.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.219" endtime="20201115 23:02:06.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.853" endtime="20201115 23:02:06.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.851" endtime="20201115 23:02:06.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.850" endtime="20201115 23:02:06.246"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.248" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.256" endtime="20201115 23:02:06.274"></status>
</kw>
<msg timestamp="20201115 23:02:06.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.255" endtime="20201115 23:02:06.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.275" endtime="20201115 23:02:06.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.278" endtime="20201115 23:02:06.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.252" endtime="20201115 23:02:06.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.250" endtime="20201115 23:02:06.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.287" endtime="20201115 23:02:06.574"></status>
</kw>
<msg timestamp="20201115 23:02:06.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024368208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024426944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.285" endtime="20201115 23:02:06.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024368208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024426944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.578" endtime="20201115 23:02:06.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.586" endtime="20201115 23:02:06.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.283" endtime="20201115 23:02:06.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.281" endtime="20201115 23:02:06.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.593" level="INFO">${RESULT} = [{'time': 0.024426944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8736000000000205e-05, 'source_diff': 5.8736000000000205e-05}, {'time': 0.024491944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:06.589" endtime="20201115 23:02:06.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.606" level="INFO">${ACCURACY} = {'diff': [5.8736000000000205e-05, 5.833300000000069e-05, 5.784699999999976e-05, 5.8165999999998386e-05, 5.787500000000237e-05, 5.833300000000069e-05, 5.831900000000112e-05, 5.8513999999999095e-05, 5.8...</msg>
<status status="PASS" starttime="20201115 23:02:06.594" endtime="20201115 23:02:06.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.610" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.609" endtime="20201115 23:02:06.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.613" level="INFO">VALUE: [5.8736000000000205e-05, 5.833300000000069e-05, 5.784699999999976e-05, 5.8165999999998386e-05, 5.787500000000237e-05, 5.833300000000069e-05, 5.831900000000112e-05, 5.8513999999999095e-05, 5.8499999999999525e-05, 5.7985999999999455e-05, 5.7986000000002924e-05, 5.8471999999996915e-05, 5.8471999999996915e-05, 5.784699999999976e-05, 5.7820000000000094e-05, 5.7833999999999663e-05, 5.7806000000000524e-05, 5.7820000000000094e-05, 5.7820000000000094e-05, 5.8472000000000385e-05, 5.779100000000148e-05, 5.780499999999758e-05, 5.813900000000219e-05, 5.7749999999998775e-05, 5.7986000000002924e-05, 5.862499999999965e-05, 5.8472000000000385e-05, 5.8306000000001024e-05, 5.7820000000000094e-05, 5.8320000000000594e-05, 5.8485999999999955e-05, 5.865299999999879e-05, 5.8334000000000163e-05, 5.8151999999998816e-05, 5.8499999999999525e-05, 5.8485999999999955e-05, 5.7999999999999025e-05, 5.8151999999998816e-05, 5.7958000000000315e-05, 5.780500000000105e-05, 5.81810000000009e-05, 5.831900000000112e-05, 5.7985999999999455e-05, 5.831900000000112e-05, 5.7820000000000094e-05, 5.7820000000000094e-05, 5.7985999999999455e-05, 5.815300000000176e-05, 5.7999999999999025e-05, 5.8444000000001245e-05]</msg>
<status status="PASS" starttime="20201115 23:02:06.612" endtime="20201115 23:02:06.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.607" endtime="20201115 23:02:06.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.620" endtime="20201115 23:02:06.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.624" endtime="20201115 23:02:06.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.622" endtime="20201115 23:02:06.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.619" endtime="20201115 23:02:06.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.249" endtime="20201115 23:02:06.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.247" endtime="20201115 23:02:06.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.246" endtime="20201115 23:02:06.645"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.647" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.655" endtime="20201115 23:02:06.673"></status>
</kw>
<msg timestamp="20201115 23:02:06.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.654" endtime="20201115 23:02:06.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.674" endtime="20201115 23:02:06.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.677" endtime="20201115 23:02:06.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.651" endtime="20201115 23:02:06.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.649" endtime="20201115 23:02:06.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.686" endtime="20201115 23:02:06.971"></status>
</kw>
<msg timestamp="20201115 23:02:06.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024260194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024319264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.684" endtime="20201115 23:02:06.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024260194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024319264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.975" endtime="20201115 23:02:06.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.984" endtime="20201115 23:02:06.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.682" endtime="20201115 23:02:06.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.680" endtime="20201115 23:02:06.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.990" level="INFO">${RESULT} = [{'time': 0.024319264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9070000000001344e-05, 'source_diff': 5.9070000000001344e-05}, {'time': 0.024384292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:06.987" endtime="20201115 23:02:06.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.005" level="INFO">${ACCURACY} = {'diff': [5.9070000000001344e-05, 5.9194999999998e-05, 5.9485999999997485e-05, 5.913899999999972e-05, 5.9694000000002495e-05, 5.9334000000001164e-05, 5.9112000000000053e-05, 5.913899999999972e-05, 5.8...</msg>
<status status="PASS" starttime="20201115 23:02:06.991" endtime="20201115 23:02:07.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.010" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.009" endtime="20201115 23:02:07.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.014" level="INFO">VALUE: [5.9070000000001344e-05, 5.9194999999998e-05, 5.9485999999997485e-05, 5.913899999999972e-05, 5.9694000000002495e-05, 5.9334000000001164e-05, 5.9112000000000053e-05, 5.913899999999972e-05, 5.898699999999993e-05, 5.8972000000000885e-05, 5.934699999999779e-05, 5.9679999999999456e-05, 5.963900000000022e-05, 5.881900000000162e-05, 5.931899999999865e-05, 5.886100000000033e-05, 5.8957999999997845e-05, 5.9348000000000734e-05, 5.884700000000076e-05, 5.93750000000004e-05, 5.915299999999929e-05, 5.9472000000001385e-05, 5.913899999999972e-05, 5.8986000000000455e-05, 5.9499999999997055e-05, 5.880499999999858e-05, 5.9679999999999456e-05, 5.880499999999858e-05, 5.9041999999998734e-05, 5.9555999999998804e-05, 5.931899999999865e-05, 5.915299999999929e-05, 5.8972000000000885e-05, 5.883300000000119e-05, 5.9320000000001594e-05, 5.9319999999998124e-05, 5.8820000000001094e-05, 5.966700000000283e-05, 5.963899999999675e-05, 5.9165999999999386e-05, 5.883299999999772e-05, 5.931899999999865e-05, 5.930499999999908e-05, 5.8763999999999345e-05, 5.931899999999865e-05, 5.933300000000169e-05, 5.96810000000024e-05, 5.883299999999772e-05, 5.916699999999886e-05, 5.8985999999996985e-05]</msg>
<status status="PASS" starttime="20201115 23:02:07.012" endtime="20201115 23:02:07.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.006" endtime="20201115 23:02:07.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.017" endtime="20201115 23:02:07.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.021" endtime="20201115 23:02:07.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.019" endtime="20201115 23:02:07.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.015" endtime="20201115 23:02:07.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.648" endtime="20201115 23:02:07.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.646" endtime="20201115 23:02:07.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.645" endtime="20201115 23:02:07.042"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.044" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.052" endtime="20201115 23:02:07.069"></status>
</kw>
<msg timestamp="20201115 23:02:07.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.051" endtime="20201115 23:02:07.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.071" endtime="20201115 23:02:07.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.073" endtime="20201115 23:02:07.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.048" endtime="20201115 23:02:07.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.046" endtime="20201115 23:02:07.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.082" endtime="20201115 23:02:07.367"></status>
</kw>
<msg timestamp="20201115 23:02:07.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024324167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024384472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.081" endtime="20201115 23:02:07.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024324167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024384472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.371" endtime="20201115 23:02:07.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.380" endtime="20201115 23:02:07.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.078" endtime="20201115 23:02:07.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.076" endtime="20201115 23:02:07.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.386" level="INFO">${RESULT} = [{'time': 0.024384472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.030500000000008e-05, 'source_diff': 6.030500000000008e-05}, {'time': 0.024458472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:07.383" endtime="20201115 23:02:07.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.400" level="INFO">${ACCURACY} = {'diff': [6.030500000000008e-05, 6.030500000000008e-05, 5.9986000000001455e-05, 6.065300000000079e-05, 6.015300000000029e-05, 6.031900000000312e-05, 6.0485999999998485e-05, 5.9791999999999484e-05, 6.0...</msg>
<status status="PASS" starttime="20201115 23:02:07.388" endtime="20201115 23:02:07.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.404" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.403" endtime="20201115 23:02:07.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.407" level="INFO">VALUE: [6.030500000000008e-05, 6.030500000000008e-05, 5.9986000000001455e-05, 6.065300000000079e-05, 6.015300000000029e-05, 6.031900000000312e-05, 6.0485999999998485e-05, 5.9791999999999484e-05, 6.0319999999999124e-05, 6.015300000000029e-05, 6.065299999999732e-05, 5.9819999999998624e-05, 6.015300000000029e-05, 6.030500000000008e-05, 6.033300000000269e-05, 6.0443999999999776e-05, 5.981899999999915e-05, 6.0528000000000665e-05, 6.063900000000122e-05, 6.0471999999998916e-05, 6.0000000000001025e-05, 6.0347999999998264e-05, 6.0222000000002135e-05, 5.9819999999998624e-05, 5.9805999999999054e-05, 6.0319999999999124e-05, 6.047300000000186e-05, 5.998699999999746e-05, 5.9986000000001455e-05, 6.0651999999997847e-05, 6.063900000000122e-05, 6.0471999999998916e-05, 5.9985999999997985e-05, 5.9986000000001455e-05, 5.981900000000262e-05, 6.013900000000072e-05, 6.065300000000079e-05, 5.9820000000002094e-05, 6.063900000000122e-05, 6.065300000000079e-05, 6.0319999999999124e-05, 6.001299999999765e-05, 5.998700000000093e-05, 6.0305999999999554e-05, 6.0485999999998485e-05, 6.031899999999965e-05, 6.0166000000000386e-05, 6.0500000000001525e-05, 5.9985999999997985e-05, 5.9971999999998415e-05]</msg>
<status status="PASS" starttime="20201115 23:02:07.406" endtime="20201115 23:02:07.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.401" endtime="20201115 23:02:07.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.410" endtime="20201115 23:02:07.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.413" endtime="20201115 23:02:07.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.412" endtime="20201115 23:02:07.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.408" endtime="20201115 23:02:07.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.045" endtime="20201115 23:02:07.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.043" endtime="20201115 23:02:07.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.042" endtime="20201115 23:02:07.435"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.437" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.445" endtime="20201115 23:02:07.462"></status>
</kw>
<msg timestamp="20201115 23:02:07.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.444" endtime="20201115 23:02:07.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.464" endtime="20201115 23:02:07.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.466" endtime="20201115 23:02:07.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.441" endtime="20201115 23:02:07.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.439" endtime="20201115 23:02:07.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.476" endtime="20201115 23:02:07.761"></status>
</kw>
<msg timestamp="20201115 23:02:07.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024309444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0243705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:07.474" endtime="20201115 23:02:07.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024309444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0243705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:07.766" endtime="20201115 23:02:07.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.774" endtime="20201115 23:02:07.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.471" endtime="20201115 23:02:07.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.470" endtime="20201115 23:02:07.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.781" level="INFO">${RESULT} = [{'time': 0.0243705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.10560000000003e-05, 'source_diff': 6.10560000000003e-05}, {'time': 0.024438514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201115 23:02:07.778" endtime="20201115 23:02:07.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.794" level="INFO">${ACCURACY} = {'diff': [6.10560000000003e-05, 6.1000000000002025e-05, 6.115300000000129e-05, 6.144500000000025e-05, 6.13339999999997e-05, 6.0819999999999624e-05, 6.130600000000055e-05, 6.093099999999671e-05, 6.1166...</msg>
<status status="PASS" starttime="20201115 23:02:07.782" endtime="20201115 23:02:07.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.799" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.798" endtime="20201115 23:02:07.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.801" level="INFO">VALUE: [6.10560000000003e-05, 6.1000000000002025e-05, 6.115300000000129e-05, 6.144500000000025e-05, 6.13339999999997e-05, 6.0819999999999624e-05, 6.130600000000055e-05, 6.093099999999671e-05, 6.116600000000139e-05, 6.165199999999885e-05, 6.0944000000000276e-05, 6.113900000000172e-05, 6.148600000000295e-05, 6.081900000000015e-05, 6.083299999999972e-05, 6.165299999999832e-05, 6.147199999999992e-05, 6.116700000000086e-05, 6.0819999999999624e-05, 6.0750000000001775e-05, 6.113900000000172e-05, 6.116599999999792e-05, 6.0847999999998764e-05, 6.132000000000012e-05, 6.115199999999835e-05, 6.148600000000295e-05, 6.13750000000024e-05, 6.113900000000172e-05, 6.116699999999739e-05, 6.113899999999825e-05, 6.0985999999998985e-05, 6.0985999999998985e-05, 6.165299999999832e-05, 6.151399999999863e-05, 6.132000000000012e-05, 6.148599999999949e-05, 6.0819999999999624e-05, 6.1000000000002025e-05, 6.113899999999825e-05, 6.162500000000265e-05, 6.147199999999992e-05, 6.115200000000182e-05, 6.148599999999949e-05, 6.166700000000136e-05, 6.163899999999875e-05, 6.143100000000068e-05, 6.126399999999838e-05, 6.149999999999906e-05, 6.163899999999875e-05, 6.0833999999999194e-05]</msg>
<status status="PASS" starttime="20201115 23:02:07.800" endtime="20201115 23:02:07.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.795" endtime="20201115 23:02:07.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.804" endtime="20201115 23:02:07.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.808" endtime="20201115 23:02:07.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.806" endtime="20201115 23:02:07.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.803" endtime="20201115 23:02:07.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.437" endtime="20201115 23:02:07.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.436" endtime="20201115 23:02:07.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.435" endtime="20201115 23:02:07.829"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.831" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.839" endtime="20201115 23:02:07.858"></status>
</kw>
<msg timestamp="20201115 23:02:07.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.838" endtime="20201115 23:02:07.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.859" endtime="20201115 23:02:07.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.862" endtime="20201115 23:02:07.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.835" endtime="20201115 23:02:07.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.833" endtime="20201115 23:02:07.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.871" endtime="20201115 23:02:08.158"></status>
</kw>
<msg timestamp="20201115 23:02:08.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024451361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024513569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.869" endtime="20201115 23:02:08.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024451361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024513569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.162" endtime="20201115 23:02:08.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.170" endtime="20201115 23:02:08.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.866" endtime="20201115 23:02:08.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.865" endtime="20201115 23:02:08.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.177" level="INFO">${RESULT} = [{'time': 0.024513569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.220799999999763e-05, 'source_diff': 6.220799999999763e-05}, {'time': 0.024580611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:08.173" endtime="20201115 23:02:08.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.190" level="INFO">${ACCURACY} = {'diff': [6.220799999999763e-05, 6.259699999999757e-05, 6.215199999999935e-05, 6.181900000000115e-05, 6.266700000000236e-05, 6.263899999999975e-05, 6.219499999999753e-05, 6.266699999999889e-05, 6.1820...</msg>
<status status="PASS" starttime="20201115 23:02:08.178" endtime="20201115 23:02:08.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.195" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.194" endtime="20201115 23:02:08.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.197" level="INFO">VALUE: [6.220799999999763e-05, 6.259699999999757e-05, 6.215199999999935e-05, 6.181900000000115e-05, 6.266700000000236e-05, 6.263899999999975e-05, 6.219499999999753e-05, 6.266699999999889e-05, 6.182000000000062e-05, 6.213899999999925e-05, 6.194499999999728e-05, 6.248600000000049e-05, 6.265299999999932e-05, 6.247300000000039e-05, 6.248600000000049e-05, 6.250000000000006e-05, 6.229099999999904e-05, 6.180500000000158e-05, 6.265299999999932e-05, 6.211100000000011e-05, 6.1888999999999e-05, 6.177800000000191e-05, 6.201399999999913e-05, 6.266699999999889e-05, 6.230600000000155e-05, 6.243099999999821e-05, 6.215300000000229e-05, 6.265299999999932e-05, 6.265299999999932e-05, 6.230600000000155e-05, 6.230499999999861e-05, 6.184700000000029e-05, 6.267999999999899e-05, 6.262500000000018e-05, 6.213899999999925e-05, 6.230499999999861e-05, 6.199999999999956e-05, 6.197200000000042e-05, 6.213899999999925e-05, 6.230599999999809e-05, 6.265299999999932e-05, 6.231999999999766e-05, 6.182000000000062e-05, 6.198699999999946e-05, 6.182000000000062e-05, 6.198599999999999e-05, 6.230500000000208e-05, 6.263899999999975e-05, 6.186099999999986e-05, 6.222299999999667e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.196" endtime="20201115 23:02:08.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.191" endtime="20201115 23:02:08.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.200" endtime="20201115 23:02:08.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.204" endtime="20201115 23:02:08.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.202" endtime="20201115 23:02:08.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.198" endtime="20201115 23:02:08.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.832" endtime="20201115 23:02:08.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.830" endtime="20201115 23:02:08.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.829" endtime="20201115 23:02:08.225"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.227" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.235" endtime="20201115 23:02:08.253"></status>
</kw>
<msg timestamp="20201115 23:02:08.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.234" endtime="20201115 23:02:08.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.255" endtime="20201115 23:02:08.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.257" endtime="20201115 23:02:08.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.231" endtime="20201115 23:02:08.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.229" endtime="20201115 23:02:08.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.267" endtime="20201115 23:02:08.552"></status>
</kw>
<msg timestamp="20201115 23:02:08.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024484042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.265" endtime="20201115 23:02:08.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024484042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.557" endtime="20201115 23:02:08.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.565" endtime="20201115 23:02:08.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.262" endtime="20201115 23:02:08.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.261" endtime="20201115 23:02:08.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.571" level="INFO">${RESULT} = [{'time': 0.024547431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.33890000000005e-05, 'source_diff': 6.33890000000005e-05}, {'time': 0.024624431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:08.568" endtime="20201115 23:02:08.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.586" level="INFO">${ACCURACY} = {'diff': [6.33890000000005e-05, 6.363899999999728e-05, 6.300000000000056e-05, 6.281899999999868e-05, 6.313800000000078e-05, 6.350000000000106e-05, 6.347200000000192e-05, 6.369499999999903e-05, 6.36530...</msg>
<status status="PASS" starttime="20201115 23:02:08.572" endtime="20201115 23:02:08.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.591" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.590" endtime="20201115 23:02:08.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.593" level="INFO">VALUE: [6.33890000000005e-05, 6.363899999999728e-05, 6.300000000000056e-05, 6.281899999999868e-05, 6.313800000000078e-05, 6.350000000000106e-05, 6.347200000000192e-05, 6.369499999999903e-05, 6.365300000000032e-05, 6.295799999999838e-05, 6.316700000000286e-05, 6.363900000000075e-05, 6.318100000000243e-05, 6.300000000000056e-05, 6.307000000000187e-05, 6.284700000000129e-05, 6.348600000000149e-05, 6.315299999999982e-05, 6.301400000000013e-05, 6.279100000000301e-05, 6.316699999999939e-05, 6.280500000000258e-05, 6.315299999999982e-05, 6.365299999999685e-05, 6.366699999999989e-05, 6.331900000000265e-05, 6.330599999999909e-05, 6.315299999999982e-05, 6.365300000000032e-05, 6.315299999999982e-05, 6.2889e-05, 6.279200000000248e-05, 6.315299999999982e-05, 6.280500000000258e-05, 6.334699999999832e-05, 6.365200000000085e-05, 6.350000000000106e-05, 6.283299999999825e-05, 6.331900000000265e-05, 6.316699999999939e-05, 6.363900000000075e-05, 6.313900000000025e-05, 6.331999999999866e-05, 6.315299999999982e-05, 6.329199999999952e-05, 6.372200000000217e-05, 6.334700000000179e-05, 6.283300000000172e-05, 6.313800000000078e-05, 6.281900000000215e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.592" endtime="20201115 23:02:08.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.587" endtime="20201115 23:02:08.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.596" endtime="20201115 23:02:08.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.600" endtime="20201115 23:02:08.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.598" endtime="20201115 23:02:08.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.595" endtime="20201115 23:02:08.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.228" endtime="20201115 23:02:08.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.226" endtime="20201115 23:02:08.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.225" endtime="20201115 23:02:08.621"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.623" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.632" endtime="20201115 23:02:08.651"></status>
</kw>
<msg timestamp="20201115 23:02:08.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.631" endtime="20201115 23:02:08.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.652" endtime="20201115 23:02:08.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.655" endtime="20201115 23:02:08.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.628" endtime="20201115 23:02:08.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.625" endtime="20201115 23:02:08.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.664" endtime="20201115 23:02:08.948"></status>
</kw>
<msg timestamp="20201115 23:02:08.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025306764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025371542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.662" endtime="20201115 23:02:08.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025306764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025371542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.953" endtime="20201115 23:02:08.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.961" endtime="20201115 23:02:08.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.659" endtime="20201115 23:02:08.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.658" endtime="20201115 23:02:08.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.967" level="INFO">${RESULT} = [{'time': 0.025371542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.477800000000145e-05, 'source_diff': 6.477800000000145e-05}, {'time': 0.025449528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:08.964" endtime="20201115 23:02:08.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.981" level="INFO">${ACCURACY} = {'diff': [6.477800000000145e-05, 6.415299999999735e-05, 6.430600000000009e-05, 6.448700000000196e-05, 6.449999999999859e-05, 6.431900000000018e-05, 6.415199999999788e-05, 6.415299999999735e-05, 6.4667...</msg>
<status status="PASS" starttime="20201115 23:02:08.968" endtime="20201115 23:02:08.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.985" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.984" endtime="20201115 23:02:08.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.988" level="INFO">VALUE: [6.477800000000145e-05, 6.415299999999735e-05, 6.430600000000009e-05, 6.448700000000196e-05, 6.449999999999859e-05, 6.431900000000018e-05, 6.415199999999788e-05, 6.415299999999735e-05, 6.466700000000089e-05, 6.449999999999859e-05, 6.380500000000011e-05, 6.413900000000125e-05, 6.404100000000079e-05, 6.379200000000002e-05, 6.463899999999828e-05, 6.429200000000052e-05, 6.380599999999959e-05, 6.447299999999892e-05, 6.380599999999959e-05, 6.432000000000312e-05, 6.380500000000011e-05, 6.427700000000147e-05, 6.399999999999809e-05, 6.431900000000018e-05, 6.431900000000018e-05, 6.466699999999742e-05, 6.415300000000082e-05, 6.415300000000082e-05, 6.43340000000027e-05, 6.415300000000082e-05, 6.465300000000132e-05, 6.43340000000027e-05, 6.397299999999842e-05, 6.415300000000082e-05, 6.415300000000082e-05, 6.398600000000199e-05, 6.379100000000054e-05, 6.380500000000011e-05, 6.383299999999925e-05, 6.433299999999975e-05, 6.431900000000018e-05, 6.465300000000132e-05, 6.415300000000082e-05, 6.415299999999735e-05, 6.43340000000027e-05, 6.415300000000082e-05, 6.429200000000052e-05, 6.383399999999873e-05, 6.465299999999785e-05, 6.395899999999885e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.986" endtime="20201115 23:02:08.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.982" endtime="20201115 23:02:08.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.991" endtime="20201115 23:02:08.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.994" endtime="20201115 23:02:09.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.993" endtime="20201115 23:02:09.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.989" endtime="20201115 23:02:09.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.624" endtime="20201115 23:02:09.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.622" endtime="20201115 23:02:09.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.621" endtime="20201115 23:02:09.016"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.018" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.026" endtime="20201115 23:02:09.044"></status>
</kw>
<msg timestamp="20201115 23:02:09.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.025" endtime="20201115 23:02:09.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.045" endtime="20201115 23:02:09.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.048" endtime="20201115 23:02:09.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.022" endtime="20201115 23:02:09.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.020" endtime="20201115 23:02:09.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.057" endtime="20201115 23:02:09.344"></status>
</kw>
<msg timestamp="20201115 23:02:09.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024897806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024963375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.056" endtime="20201115 23:02:09.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024897806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024963375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.348" endtime="20201115 23:02:09.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.356" endtime="20201115 23:02:09.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.053" endtime="20201115 23:02:09.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.052" endtime="20201115 23:02:09.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.363" level="INFO">${RESULT} = [{'time': 0.024963375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.556899999999796e-05, 'source_diff': 6.556899999999796e-05}, {'time': 0.025042361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:09.360" endtime="20201115 23:02:09.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.376" level="INFO">${ACCURACY} = {'diff': [6.556899999999796e-05, 6.531899999999771e-05, 6.515299999999835e-05, 6.481900000000068e-05, 6.497199999999995e-05, 6.516700000000139e-05, 6.547200000000045e-05, 6.482000000000016e-05, 6.5652...</msg>
<status status="PASS" starttime="20201115 23:02:09.364" endtime="20201115 23:02:09.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.381" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.380" endtime="20201115 23:02:09.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.383" level="INFO">VALUE: [6.556899999999796e-05, 6.531899999999771e-05, 6.515299999999835e-05, 6.481900000000068e-05, 6.497199999999995e-05, 6.516700000000139e-05, 6.547200000000045e-05, 6.482000000000016e-05, 6.565299999999885e-05, 6.483299999999678e-05, 6.563899999999928e-05, 6.531899999999771e-05, 6.555599999999787e-05, 6.57220000000007e-05, 6.498599999999952e-05, 6.484699999999982e-05, 6.519500000000053e-05, 6.55419999999983e-05, 6.536099999999989e-05, 6.499999999999909e-05, 6.495899999999985e-05, 6.570799999999766e-05, 6.566699999999842e-05, 6.483399999999973e-05, 6.482000000000016e-05, 6.515199999999888e-05, 6.516600000000192e-05, 6.513899999999878e-05, 6.480499999999764e-05, 6.498599999999952e-05, 6.491700000000114e-05, 6.530500000000161e-05, 6.566700000000189e-05, 6.480600000000059e-05, 6.565299999999885e-05, 6.563899999999928e-05, 6.568000000000199e-05, 6.505499999999789e-05, 6.565199999999938e-05, 6.567999999999852e-05, 6.500000000000256e-05, 6.531900000000118e-05, 6.568000000000199e-05, 6.548600000000002e-05, 6.483300000000025e-05, 6.531900000000118e-05, 6.484699999999982e-05, 6.531900000000118e-05, 6.563900000000275e-05, 6.547199999999698e-05]</msg>
<status status="PASS" starttime="20201115 23:02:09.382" endtime="20201115 23:02:09.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.377" endtime="20201115 23:02:09.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.387" endtime="20201115 23:02:09.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.390" endtime="20201115 23:02:09.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.389" endtime="20201115 23:02:09.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.385" endtime="20201115 23:02:09.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.019" endtime="20201115 23:02:09.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.017" endtime="20201115 23:02:09.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.016" endtime="20201115 23:02:09.411"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.414" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.422" endtime="20201115 23:02:09.440"></status>
</kw>
<msg timestamp="20201115 23:02:09.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.420" endtime="20201115 23:02:09.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.442" endtime="20201115 23:02:09.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.444" endtime="20201115 23:02:09.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.418" endtime="20201115 23:02:09.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.416" endtime="20201115 23:02:09.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.453" endtime="20201115 23:02:09.740"></status>
</kw>
<msg timestamp="20201115 23:02:09.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024422958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024489, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:09.451" endtime="20201115 23:02:09.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024422958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024489, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:09.744" endtime="20201115 23:02:09.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.752" endtime="20201115 23:02:09.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.449" endtime="20201115 23:02:09.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.447" endtime="20201115 23:02:09.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.759" level="INFO">${RESULT} = [{'time': 0.024489, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.60419999999988e-05, 'source_diff': 6.60419999999988e-05}, {'time': 0.024562014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6....</msg>
<status status="PASS" starttime="20201115 23:02:09.755" endtime="20201115 23:02:09.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.772" level="INFO">${ACCURACY} = {'diff': [6.60419999999988e-05, 6.601399999999966e-05, 6.648600000000102e-05, 6.630600000000209e-05, 6.648599999999755e-05, 6.616700000000239e-05, 6.597200000000095e-05, 6.67220000000017e-05, 6.595900...</msg>
<status status="PASS" starttime="20201115 23:02:09.760" endtime="20201115 23:02:09.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.776" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.775" endtime="20201115 23:02:09.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.780" level="INFO">VALUE: [6.60419999999988e-05, 6.601399999999966e-05, 6.648600000000102e-05, 6.630600000000209e-05, 6.648599999999755e-05, 6.616700000000239e-05, 6.597200000000095e-05, 6.67220000000017e-05, 6.595900000000085e-05, 6.583300000000125e-05, 6.613800000000031e-05, 6.580500000000211e-05, 6.669400000000256e-05, 6.598600000000052e-05, 6.644499999999831e-05, 6.650000000000059e-05, 6.665299999999985e-05, 6.641699999999917e-05, 6.641700000000264e-05, 6.647199999999798e-05, 6.593099999999824e-05, 6.650000000000059e-05, 6.602699999999975e-05, 6.632000000000166e-05, 6.666599999999995e-05, 6.606899999999846e-05, 6.634700000000132e-05, 6.648600000000102e-05, 6.665300000000332e-05, 6.615299999999935e-05, 6.594399999999834e-05, 6.598600000000052e-05, 6.615300000000282e-05, 6.633399999999776e-05, 6.632000000000166e-05, 6.600000000000009e-05, 6.581999999999769e-05, 6.582000000000116e-05, 6.631899999999871e-05, 6.647200000000145e-05, 6.645799999999841e-05, 6.666599999999995e-05, 6.631900000000218e-05, 6.663900000000028e-05, 6.663900000000028e-05, 6.602799999999923e-05, 6.645799999999841e-05, 6.616699999999892e-05, 6.630599999999862e-05, 6.581999999999769e-05]</msg>
<status status="PASS" starttime="20201115 23:02:09.777" endtime="20201115 23:02:09.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.773" endtime="20201115 23:02:09.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.783" endtime="20201115 23:02:09.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.786" endtime="20201115 23:02:09.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.785" endtime="20201115 23:02:09.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.781" endtime="20201115 23:02:09.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.414" endtime="20201115 23:02:09.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.413" endtime="20201115 23:02:09.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.412" endtime="20201115 23:02:09.807"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.809" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.818" endtime="20201115 23:02:09.835"></status>
</kw>
<msg timestamp="20201115 23:02:09.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.816" endtime="20201115 23:02:09.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.837" endtime="20201115 23:02:09.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.839" endtime="20201115 23:02:09.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.814" endtime="20201115 23:02:09.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.812" endtime="20201115 23:02:09.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.848" endtime="20201115 23:02:10.134"></status>
</kw>
<msg timestamp="20201115 23:02:10.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02462025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:09.847" endtime="20201115 23:02:10.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02462025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:10.142" endtime="20201115 23:02:10.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.152" endtime="20201115 23:02:10.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.844" endtime="20201115 23:02:10.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.843" endtime="20201115 23:02:10.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.158" level="INFO">${RESULT} = [{'time': 0.02462025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.74030000000006e-05, 'source_diff': 6.74030000000006e-05}, {'time': 0.024692236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:10.155" endtime="20201115 23:02:10.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.174" level="INFO">${ACCURACY} = {'diff': [6.74030000000006e-05, 6.765300000000085e-05, 6.733299999999928e-05, 6.731899999999971e-05, 6.681999999999869e-05, 6.763900000000128e-05, 6.712500000000121e-05, 6.765300000000085e-05, 6.69730...</msg>
<status status="PASS" starttime="20201115 23:02:10.160" endtime="20201115 23:02:10.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.178" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.177" endtime="20201115 23:02:10.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.181" level="INFO">VALUE: [6.74030000000006e-05, 6.765300000000085e-05, 6.733299999999928e-05, 6.731899999999971e-05, 6.681999999999869e-05, 6.763900000000128e-05, 6.712500000000121e-05, 6.765300000000085e-05, 6.697300000000142e-05, 6.748700000000149e-05, 6.711100000000164e-05, 6.740199999999766e-05, 6.712500000000121e-05, 6.747199999999898e-05, 6.765299999999738e-05, 6.763900000000128e-05, 6.681899999999921e-05, 6.698599999999805e-05, 6.765300000000085e-05, 6.700000000000109e-05, 6.733399999999876e-05, 6.686100000000139e-05, 6.731899999999971e-05, 6.681900000000268e-05, 6.763900000000128e-05, 6.748600000000202e-05, 6.762499999999824e-05, 6.677799999999998e-05, 6.763900000000128e-05, 6.698599999999805e-05, 6.730599999999962e-05, 6.750000000000159e-05, 6.748599999999855e-05, 6.747299999999845e-05, 6.724999999999787e-05, 6.755599999999987e-05, 6.730599999999962e-05, 6.733299999999928e-05, 6.701400000000066e-05, 6.731899999999971e-05, 6.765200000000138e-05, 6.713900000000078e-05, 6.766700000000042e-05, 6.749999999999812e-05, 6.751399999999769e-05, 6.729200000000005e-05, 6.730599999999962e-05, 6.67640000000004e-05, 6.683400000000173e-05, 6.768000000000052e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.179" endtime="20201115 23:02:10.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.175" endtime="20201115 23:02:10.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.184" endtime="20201115 23:02:10.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.187" endtime="20201115 23:02:10.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.186" endtime="20201115 23:02:10.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.182" endtime="20201115 23:02:10.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.810" endtime="20201115 23:02:10.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.808" endtime="20201115 23:02:10.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.807" endtime="20201115 23:02:10.209"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.211" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.219" endtime="20201115 23:02:10.237"></status>
</kw>
<msg timestamp="20201115 23:02:10.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.218" endtime="20201115 23:02:10.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.238" endtime="20201115 23:02:10.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.241" endtime="20201115 23:02:10.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.215" endtime="20201115 23:02:10.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.213" endtime="20201115 23:02:10.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.250" endtime="20201115 23:02:10.535"></status>
</kw>
<msg timestamp="20201115 23:02:10.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02446475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024532917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:10.248" endtime="20201115 23:02:10.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02446475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024532917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:10.540" endtime="20201115 23:02:10.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.548" endtime="20201115 23:02:10.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.246" endtime="20201115 23:02:10.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.244" endtime="20201115 23:02:10.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.555" level="INFO">${RESULT} = [{'time': 0.024532917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.816700000000092e-05, 'source_diff': 6.816700000000092e-05}, {'time': 0.024608917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:10.552" endtime="20201115 23:02:10.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.568" level="INFO">${ACCURACY} = {'diff': [6.816700000000092e-05, 6.848599999999955e-05, 6.865299999999838e-05, 6.797300000000242e-05, 6.848599999999955e-05, 6.815200000000188e-05, 6.847199999999998e-05, 6.786099999999892e-05, 6.8471...</msg>
<status status="PASS" starttime="20201115 23:02:10.556" endtime="20201115 23:02:10.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.573" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.572" endtime="20201115 23:02:10.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.575" level="INFO">VALUE: [6.816700000000092e-05, 6.848599999999955e-05, 6.865299999999838e-05, 6.797300000000242e-05, 6.848599999999955e-05, 6.815200000000188e-05, 6.847199999999998e-05, 6.786099999999892e-05, 6.847199999999998e-05, 6.798600000000252e-05, 6.816700000000092e-05, 6.780600000000012e-05, 6.830600000000062e-05, 6.780600000000012e-05, 6.815300000000135e-05, 6.848599999999955e-05, 6.861200000000262e-05, 6.833300000000028e-05, 6.849999999999912e-05, 6.847199999999998e-05, 6.798600000000252e-05, 6.816700000000092e-05, 6.815299999999788e-05, 6.865300000000185e-05, 6.863899999999881e-05, 6.795799999999991e-05, 6.832000000000019e-05, 6.833399999999976e-05, 6.832000000000019e-05, 6.783399999999926e-05, 6.832000000000019e-05, 6.815199999999841e-05, 6.783299999999978e-05, 6.781900000000021e-05, 6.794400000000034e-05, 6.79030000000011e-05, 6.800000000000209e-05, 6.849999999999912e-05, 6.815299999999788e-05, 6.815300000000135e-05, 6.834799999999933e-05, 6.848599999999955e-05, 6.850000000000259e-05, 6.780600000000012e-05, 6.847299999999945e-05, 6.866600000000195e-05, 6.845800000000041e-05, 6.831900000000071e-05, 6.848599999999955e-05, 6.797200000000295e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.574" endtime="20201115 23:02:10.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.569" endtime="20201115 23:02:10.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.578" endtime="20201115 23:02:10.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.582" endtime="20201115 23:02:10.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.580" endtime="20201115 23:02:10.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.576" endtime="20201115 23:02:10.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.212" endtime="20201115 23:02:10.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.210" endtime="20201115 23:02:10.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.209" endtime="20201115 23:02:10.603"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.605" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.613" endtime="20201115 23:02:10.631"></status>
</kw>
<msg timestamp="20201115 23:02:10.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.612" endtime="20201115 23:02:10.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.632" endtime="20201115 23:02:10.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.635" endtime="20201115 23:02:10.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.609" endtime="20201115 23:02:10.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.607" endtime="20201115 23:02:10.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.644" endtime="20201115 23:02:10.932"></status>
</kw>
<msg timestamp="20201115 23:02:10.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024240472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024309875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.642" endtime="20201115 23:02:10.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024240472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024309875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.936" endtime="20201115 23:02:10.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.944" endtime="20201115 23:02:10.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.640" endtime="20201115 23:02:10.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.638" endtime="20201115 23:02:10.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.951" level="INFO">${RESULT} = [{'time': 0.024309875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.94030000000026e-05, 'source_diff': 6.94030000000026e-05}, {'time': 0.024391861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:10.947" endtime="20201115 23:02:10.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.964" level="INFO">${ACCURACY} = {'diff': [6.94030000000026e-05, 6.930500000000214e-05, 6.938800000000009e-05, 6.933400000000076e-05, 6.879199999999808e-05, 6.948600000000055e-05, 6.947300000000045e-05, 6.947300000000045e-05, 6.88330...</msg>
<status status="PASS" starttime="20201115 23:02:10.952" endtime="20201115 23:02:10.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.969" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.967" endtime="20201115 23:02:10.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.971" level="INFO">VALUE: [6.94030000000026e-05, 6.930500000000214e-05, 6.938800000000009e-05, 6.933400000000076e-05, 6.879199999999808e-05, 6.948600000000055e-05, 6.947300000000045e-05, 6.947300000000045e-05, 6.883300000000078e-05, 6.915199999999941e-05, 6.931900000000171e-05, 6.965300000000285e-05, 6.880500000000164e-05, 6.924999999999987e-05, 6.880500000000164e-05, 6.943099999999827e-05, 6.950000000000012e-05, 6.899999999999962e-05, 6.918100000000149e-05, 6.883399999999679e-05, 6.930599999999815e-05, 6.877800000000198e-05, 6.966599999999948e-05, 6.950000000000012e-05, 6.970800000000166e-05, 6.954199999999883e-05, 6.899999999999962e-05, 6.94169999999987e-05, 6.898600000000005e-05, 6.948600000000055e-05, 6.965299999999938e-05, 6.934800000000033e-05, 6.948600000000055e-05, 6.897200000000048e-05, 6.965299999999938e-05, 6.932000000000119e-05, 6.880499999999817e-05, 6.931900000000171e-05, 6.965199999999991e-05, 6.881900000000121e-05, 6.894400000000134e-05, 6.948600000000055e-05, 6.898600000000005e-05, 6.950000000000012e-05, 6.968099999999852e-05, 6.963899999999981e-05, 6.882000000000069e-05, 6.965299999999938e-05, 6.966699999999895e-05, 6.951399999999969e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.970" endtime="20201115 23:02:10.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.965" endtime="20201115 23:02:10.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.974" endtime="20201115 23:02:10.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.977" endtime="20201115 23:02:10.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.976" endtime="20201115 23:02:10.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.972" endtime="20201115 23:02:10.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.606" endtime="20201115 23:02:10.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.604" endtime="20201115 23:02:10.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.603" endtime="20201115 23:02:10.999"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.001" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.009" endtime="20201115 23:02:11.027"></status>
</kw>
<msg timestamp="20201115 23:02:11.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.008" endtime="20201115 23:02:11.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.029" endtime="20201115 23:02:11.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.032" endtime="20201115 23:02:11.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.005" endtime="20201115 23:02:11.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.003" endtime="20201115 23:02:11.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.041" endtime="20201115 23:02:11.328"></status>
</kw>
<msg timestamp="20201115 23:02:11.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024391819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024461681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.039" endtime="20201115 23:02:11.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024391819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024461681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.332" endtime="20201115 23:02:11.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.341" endtime="20201115 23:02:11.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.037" endtime="20201115 23:02:11.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.035" endtime="20201115 23:02:11.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.347" level="INFO">${RESULT} = [{'time': 0.024461681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.98620000000004e-05, 'source_diff': 6.98620000000004e-05}, {'time': 0.02454275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:11.344" endtime="20201115 23:02:11.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.360" level="INFO">${ACCURACY} = {'diff': [6.98620000000004e-05, 6.987499999999702e-05, 7.036100000000142e-05, 7.031899999999924e-05, 7.063899999999734e-05, 7.031900000000271e-05, 7.063900000000081e-05, 7.063900000000081e-05, 7.01529...</msg>
<status status="PASS" starttime="20201115 23:02:11.348" endtime="20201115 23:02:11.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.365" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.364" endtime="20201115 23:02:11.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.367" level="INFO">VALUE: [6.98620000000004e-05, 6.987499999999702e-05, 7.036100000000142e-05, 7.031899999999924e-05, 7.063899999999734e-05, 7.031900000000271e-05, 7.063900000000081e-05, 7.063900000000081e-05, 7.015299999999988e-05, 6.980600000000212e-05, 6.998600000000105e-05, 6.981999999999822e-05, 7.033399999999829e-05, 7.013900000000031e-05, 7.034699999999838e-05, 6.998600000000105e-05, 7.066600000000048e-05, 7.031899999999924e-05, 7.031899999999924e-05, 7.048599999999808e-05, 7.063900000000081e-05, 7.015299999999988e-05, 7.055499999999992e-05, 6.983400000000126e-05, 7.066699999999995e-05, 7.015299999999988e-05, 6.995899999999791e-05, 7.00559999999989e-05, 7.048599999999808e-05, 6.997199999999801e-05, 7.048600000000155e-05, 7.031899999999924e-05, 7.056999999999897e-05, 6.980500000000264e-05, 7.048600000000155e-05, 7.065300000000038e-05, 7.069399999999962e-05, 6.984800000000083e-05, 7.001300000000071e-05, 7.030600000000262e-05, 7.013900000000031e-05, 6.983300000000178e-05, 6.980499999999917e-05, 6.986100000000092e-05, 7.045800000000241e-05, 6.998600000000105e-05, 7.062499999999777e-05, 7.066699999999995e-05, 7.066699999999995e-05, 6.998600000000105e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.366" endtime="20201115 23:02:11.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.361" endtime="20201115 23:02:11.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.371" endtime="20201115 23:02:11.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.374" endtime="20201115 23:02:11.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.372" endtime="20201115 23:02:11.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.369" endtime="20201115 23:02:11.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.002" endtime="20201115 23:02:11.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.000" endtime="20201115 23:02:11.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.999" endtime="20201115 23:02:11.395"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.397" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.406" endtime="20201115 23:02:11.425"></status>
</kw>
<msg timestamp="20201115 23:02:11.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.404" endtime="20201115 23:02:11.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.426" endtime="20201115 23:02:11.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.429" endtime="20201115 23:02:11.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.401" endtime="20201115 23:02:11.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.399" endtime="20201115 23:02:11.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.438" endtime="20201115 23:02:11.725"></status>
</kw>
<msg timestamp="20201115 23:02:11.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024842014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024913542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.437" endtime="20201115 23:02:11.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024842014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024913542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.729" endtime="20201115 23:02:11.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.738" endtime="20201115 23:02:11.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.434" endtime="20201115 23:02:11.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.432" endtime="20201115 23:02:11.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.744" level="INFO">${RESULT} = [{'time': 0.024913542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.152800000000126e-05, 'source_diff': 7.152800000000126e-05}, {'time': 0.024999556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:11.741" endtime="20201115 23:02:11.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.759" level="INFO">${ACCURACY} = {'diff': [7.152800000000126e-05, 7.148699999999855e-05, 7.083299999999931e-05, 7.097200000000248e-05, 7.119499999999959e-05, 7.081899999999974e-05, 7.095799999999944e-05, 7.116700000000045e-05, 7.1653...</msg>
<status status="PASS" starttime="20201115 23:02:11.745" endtime="20201115 23:02:11.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.764" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.763" endtime="20201115 23:02:11.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.766" level="INFO">VALUE: [7.152800000000126e-05, 7.148699999999855e-05, 7.083299999999931e-05, 7.097200000000248e-05, 7.119499999999959e-05, 7.081899999999974e-05, 7.095799999999944e-05, 7.116700000000045e-05, 7.165300000000138e-05, 7.148599999999908e-05, 7.084799999999836e-05, 7.133399999999929e-05, 7.148600000000255e-05, 7.116700000000045e-05, 7.081999999999922e-05, 7.169399999999715e-05, 7.131900000000024e-05, 7.133299999999981e-05, 7.151399999999822e-05, 7.097199999999901e-05, 7.131900000000024e-05, 7.115299999999741e-05, 7.081899999999974e-05, 7.131999999999972e-05, 7.162499999999877e-05, 7.131999999999972e-05, 7.166700000000095e-05, 7.115300000000088e-05, 7.084700000000235e-05, 7.112499999999827e-05, 7.130500000000067e-05, 7.133299999999981e-05, 7.081899999999974e-05, 7.130500000000067e-05, 7.17360000000028e-05, 7.083299999999931e-05, 7.100000000000162e-05, 7.165299999999791e-05, 7.133399999999929e-05, 7.083400000000226e-05, 7.084799999999836e-05, 7.080599999999965e-05, 7.116600000000098e-05, 7.083299999999931e-05, 7.148599999999908e-05, 7.165199999999844e-05, 7.083299999999931e-05, 7.147200000000298e-05, 7.083299999999931e-05, 7.115300000000088e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.765" endtime="20201115 23:02:11.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.760" endtime="20201115 23:02:11.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.769" endtime="20201115 23:02:11.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.773" endtime="20201115 23:02:11.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.771" endtime="20201115 23:02:11.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.768" endtime="20201115 23:02:11.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.398" endtime="20201115 23:02:11.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.396" endtime="20201115 23:02:11.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.395" endtime="20201115 23:02:11.799"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.802" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.810" endtime="20201115 23:02:11.828"></status>
</kw>
<msg timestamp="20201115 23:02:11.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.808" endtime="20201115 23:02:11.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.829" endtime="20201115 23:02:11.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.832" endtime="20201115 23:02:11.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.806" endtime="20201115 23:02:11.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.804" endtime="20201115 23:02:11.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.841" endtime="20201115 23:02:12.126"></status>
</kw>
<msg timestamp="20201115 23:02:12.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029885931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029958264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.839" endtime="20201115 23:02:12.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029885931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029958264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.131" endtime="20201115 23:02:12.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.139" endtime="20201115 23:02:12.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.837" endtime="20201115 23:02:12.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.835" endtime="20201115 23:02:12.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.146" level="INFO">${RESULT} = [{'time': 0.029958264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.233299999999734e-05, 'source_diff': 7.233299999999734e-05}, {'time': 0.030045278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:12.142" endtime="20201115 23:02:12.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.159" level="INFO">${ACCURACY} = {'diff': [7.233299999999734e-05, 7.265300000000238e-05, 7.266699999999848e-05, 7.247200000000051e-05, 7.249999999999965e-05, 7.198599999999958e-05, 7.230599999999768e-05, 7.229099999999863e-05, 7.1985...</msg>
<status status="PASS" starttime="20201115 23:02:12.147" endtime="20201115 23:02:12.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.163" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.162" endtime="20201115 23:02:12.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.166" level="INFO">VALUE: [7.233299999999734e-05, 7.265300000000238e-05, 7.266699999999848e-05, 7.247200000000051e-05, 7.249999999999965e-05, 7.198599999999958e-05, 7.230599999999768e-05, 7.229099999999863e-05, 7.198599999999958e-05, 7.263899999999934e-05, 7.266700000000195e-05, 7.248600000000008e-05, 7.197200000000001e-05, 7.238799999999962e-05, 7.201399999999872e-05, 7.197200000000001e-05, 7.249999999999965e-05, 7.232000000000072e-05, 7.199999999999568e-05, 7.265199999999944e-05, 7.218000000000502e-05, 7.181900000000074e-05, 7.180500000000117e-05, 7.247200000000398e-05, 7.215299999999841e-05, 7.265299999999891e-05, 7.197200000000348e-05, 7.26110000000002e-05, 7.198600000000305e-05, 7.243100000000474e-05, 7.179200000000108e-05, 7.186099999999945e-05, 7.234700000000038e-05, 7.248699999999608e-05, 7.231900000000124e-05, 7.184699999999988e-05, 7.198599999999611e-05, 7.200000000000262e-05, 7.18189999999938e-05, 7.200000000000262e-05, 7.220900000000363e-05, 7.21109999999997e-05, 7.247199999999704e-05, 7.198600000000305e-05, 7.215299999999841e-05, 7.230600000000115e-05, 7.213899999999884e-05, 7.216599999999851e-05, 7.215199999999894e-05, 7.26110000000002e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.165" endtime="20201115 23:02:12.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.160" endtime="20201115 23:02:12.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.169" endtime="20201115 23:02:12.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.173" endtime="20201115 23:02:12.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.171" endtime="20201115 23:02:12.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.168" endtime="20201115 23:02:12.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.802" endtime="20201115 23:02:12.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.800" endtime="20201115 23:02:12.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.800" endtime="20201115 23:02:12.194"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.205" endtime="20201115 23:02:12.222"></status>
</kw>
<msg timestamp="20201115 23:02:12.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.203" endtime="20201115 23:02:12.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.223" endtime="20201115 23:02:12.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.226" endtime="20201115 23:02:12.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.200" endtime="20201115 23:02:12.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.198" endtime="20201115 23:02:12.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.235" endtime="20201115 23:02:12.522"></status>
</kw>
<msg timestamp="20201115 23:02:12.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024329056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024401875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.233" endtime="20201115 23:02:12.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024329056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024401875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.527" endtime="20201115 23:02:12.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.535" endtime="20201115 23:02:12.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.231" endtime="20201115 23:02:12.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.229" endtime="20201115 23:02:12.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.542" level="INFO">${RESULT} = [{'time': 0.024401875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.281899999999827e-05, 'source_diff': 7.281899999999827e-05}, {'time': 0.024486931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:12.538" endtime="20201115 23:02:12.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.555" level="INFO">${ACCURACY} = {'diff': [7.281899999999827e-05, 7.369499999999862e-05, 7.298600000000058e-05, 7.300000000000015e-05, 7.330599999999868e-05, 7.297200000000101e-05, 7.282000000000122e-05, 7.350000000000065e-05, 7.3666...</msg>
<status status="PASS" starttime="20201115 23:02:12.543" endtime="20201115 23:02:12.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.559" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.558" endtime="20201115 23:02:12.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.562" level="INFO">VALUE: [7.281899999999827e-05, 7.369499999999862e-05, 7.298600000000058e-05, 7.300000000000015e-05, 7.330599999999868e-05, 7.297200000000101e-05, 7.282000000000122e-05, 7.350000000000065e-05, 7.366600000000001e-05, 7.295800000000144e-05, 7.363900000000034e-05, 7.331900000000224e-05, 7.284700000000088e-05, 7.302799999999929e-05, 7.281899999999827e-05, 7.283300000000131e-05, 7.281999999999775e-05, 7.334799999999739e-05, 7.332000000000172e-05, 7.329200000000258e-05, 7.331899999999877e-05, 7.315299999999941e-05, 7.348600000000108e-05, 7.300000000000015e-05, 7.365199999999697e-05, 7.365299999999991e-05, 7.331899999999877e-05, 7.3069000000002e-05, 7.366700000000295e-05, 7.333399999999782e-05, 7.283400000000079e-05, 7.280599999999818e-05, 7.322200000000126e-05, 7.365299999999991e-05, 7.280500000000217e-05, 7.363800000000087e-05, 7.298600000000058e-05, 7.30829999999981e-05, 7.365299999999991e-05, 7.348600000000108e-05, 7.365299999999991e-05, 7.365300000000338e-05, 7.316699999999898e-05, 7.366699999999948e-05, 7.318099999999855e-05, 7.313899999999984e-05, 7.348599999999761e-05, 7.365299999999991e-05, 7.347200000000151e-05, 7.300000000000015e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.561" endtime="20201115 23:02:12.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.556" endtime="20201115 23:02:12.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.566" endtime="20201115 23:02:12.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.569" endtime="20201115 23:02:12.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.567" endtime="20201115 23:02:12.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.564" endtime="20201115 23:02:12.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.197" endtime="20201115 23:02:12.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.195" endtime="20201115 23:02:12.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.194" endtime="20201115 23:02:12.590"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.592" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.601" endtime="20201115 23:02:12.620"></status>
</kw>
<msg timestamp="20201115 23:02:12.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.599" endtime="20201115 23:02:12.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.622" endtime="20201115 23:02:12.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.624" endtime="20201115 23:02:12.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.596" endtime="20201115 23:02:12.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.594" endtime="20201115 23:02:12.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.633" endtime="20201115 23:02:12.919"></status>
</kw>
<msg timestamp="20201115 23:02:12.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024489806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024564542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.632" endtime="20201115 23:02:12.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024489806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024564542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.924" endtime="20201115 23:02:12.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.932" endtime="20201115 23:02:12.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.629" endtime="20201115 23:02:12.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.627" endtime="20201115 23:02:12.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.939" level="INFO">${RESULT} = [{'time': 0.024564542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.473600000000233e-05, 'source_diff': 7.473600000000233e-05}, {'time': 0.024651556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:12.935" endtime="20201115 23:02:12.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.952" level="INFO">${ACCURACY} = {'diff': [7.473600000000233e-05, 7.463900000000134e-05, 7.465300000000091e-05, 7.398700000000105e-05, 7.397199999999854e-05, 7.431900000000324e-05, 7.384699999999841e-05, 7.381900000000274e-05, 7.4485...</msg>
<status status="PASS" starttime="20201115 23:02:12.940" endtime="20201115 23:02:12.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.957" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.956" endtime="20201115 23:02:12.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.959" level="INFO">VALUE: [7.473600000000233e-05, 7.463900000000134e-05, 7.465300000000091e-05, 7.398700000000105e-05, 7.397199999999854e-05, 7.431900000000324e-05, 7.384699999999841e-05, 7.381900000000274e-05, 7.448599999999861e-05, 7.413900000000084e-05, 7.448599999999861e-05, 7.447200000000251e-05, 7.397199999999854e-05, 7.400000000000115e-05, 7.432000000000272e-05, 7.448599999999861e-05, 7.432000000000272e-05, 7.397199999999854e-05, 7.415200000000094e-05, 7.405599999999943e-05, 7.463899999999787e-05, 7.465300000000091e-05, 7.451400000000122e-05, 7.466700000000048e-05, 7.418099999999955e-05, 7.381999999999875e-05, 7.405499999999995e-05, 7.448599999999861e-05, 7.387500000000102e-05, 7.383300000000231e-05, 7.413800000000137e-05, 7.381899999999927e-05, 7.463900000000134e-05, 7.383299999999884e-05, 7.391600000000026e-05, 7.429200000000011e-05, 7.384700000000188e-05, 7.459699999999916e-05, 7.433399999999882e-05, 7.413900000000084e-05, 7.383399999999832e-05, 7.465300000000091e-05, 7.415199999999747e-05, 7.395799999999897e-05, 7.415200000000094e-05, 7.401400000000072e-05, 7.383299999999884e-05, 7.384700000000188e-05, 7.466700000000048e-05, 7.431899999999977e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.958" endtime="20201115 23:02:12.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.953" endtime="20201115 23:02:12.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.962" endtime="20201115 23:02:12.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.966" endtime="20201115 23:02:12.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.964" endtime="20201115 23:02:12.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.961" endtime="20201115 23:02:12.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.593" endtime="20201115 23:02:12.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.591" endtime="20201115 23:02:12.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.590" endtime="20201115 23:02:12.987"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.989" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.998" endtime="20201115 23:02:13.016"></status>
</kw>
<msg timestamp="20201115 23:02:13.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.996" endtime="20201115 23:02:13.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.018" endtime="20201115 23:02:13.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.020" endtime="20201115 23:02:13.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.993" endtime="20201115 23:02:13.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.991" endtime="20201115 23:02:13.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.029" endtime="20201115 23:02:13.315"></status>
</kw>
<msg timestamp="20201115 23:02:13.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024482236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024557597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.027" endtime="20201115 23:02:13.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024482236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024557597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.319" endtime="20201115 23:02:13.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.328" endtime="20201115 23:02:13.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.025" endtime="20201115 23:02:13.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.023" endtime="20201115 23:02:13.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.335" level="INFO">${RESULT} = [{'time': 0.024557597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.536099999999948e-05, 'source_diff': 7.536099999999948e-05}, {'time': 0.024641625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:13.331" endtime="20201115 23:02:13.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.349" level="INFO">${ACCURACY} = {'diff': [7.536099999999948e-05, 7.516700000000098e-05, 7.498599999999911e-05, 7.566699999999801e-05, 7.515300000000141e-05, 7.515299999999794e-05, 7.497300000000248e-05, 7.498599999999911e-05, 7.5638...</msg>
<status status="PASS" starttime="20201115 23:02:13.336" endtime="20201115 23:02:13.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.354" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.353" endtime="20201115 23:02:13.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.356" level="INFO">VALUE: [7.536099999999948e-05, 7.516700000000098e-05, 7.498599999999911e-05, 7.566699999999801e-05, 7.515300000000141e-05, 7.515299999999794e-05, 7.497300000000248e-05, 7.498599999999911e-05, 7.563899999999887e-05, 7.481900000000027e-05, 7.552799999999832e-05, 7.481900000000027e-05, 7.533300000000034e-05, 7.565300000000191e-05, 7.483299999999984e-05, 7.565300000000191e-05, 7.565299999999844e-05, 7.566699999999801e-05, 7.547200000000004e-05, 7.515300000000141e-05, 7.530599999999721e-05, 7.532000000000025e-05, 7.549999999999918e-05, 7.484699999999941e-05, 7.498599999999911e-05, 7.563899999999887e-05, 7.515300000000141e-05, 7.549999999999918e-05, 7.549999999999918e-05, 7.497199999999954e-05, 7.532000000000025e-05, 7.529199999999764e-05, 7.537500000000252e-05, 7.498700000000205e-05, 7.497300000000248e-05, 7.56379999999994e-05, 7.530499999999773e-05, 7.481900000000027e-05, 7.498600000000258e-05, 7.550000000000265e-05, 7.53189999999973e-05, 7.526400000000197e-05, 7.549999999999918e-05, 7.498599999999911e-05, 7.515299999999794e-05, 7.550000000000265e-05, 7.515300000000141e-05, 7.549999999999918e-05, 7.548599999999961e-05, 7.53189999999973e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.355" endtime="20201115 23:02:13.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.350" endtime="20201115 23:02:13.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.360" endtime="20201115 23:02:13.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.363" endtime="20201115 23:02:13.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.361" endtime="20201115 23:02:13.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.358" endtime="20201115 23:02:13.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.990" endtime="20201115 23:02:13.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.988" endtime="20201115 23:02:13.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.987" endtime="20201115 23:02:13.384"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.387" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.395" endtime="20201115 23:02:13.414"></status>
</kw>
<msg timestamp="20201115 23:02:13.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.393" endtime="20201115 23:02:13.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.415" endtime="20201115 23:02:13.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.417" endtime="20201115 23:02:13.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.391" endtime="20201115 23:02:13.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.389" endtime="20201115 23:02:13.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.427" endtime="20201115 23:02:13.714"></status>
</kw>
<msg timestamp="20201115 23:02:13.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024872292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024948597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.425" endtime="20201115 23:02:13.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024872292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024948597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.718" endtime="20201115 23:02:13.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.726" endtime="20201115 23:02:13.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.422" endtime="20201115 23:02:13.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.421" endtime="20201115 23:02:13.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.733" level="INFO">${RESULT} = [{'time': 0.024948597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.630499999999873e-05, 'source_diff': 7.630499999999873e-05}, {'time': 0.025035653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:13.730" endtime="20201115 23:02:13.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.746" level="INFO">${ACCURACY} = {'diff': [7.630499999999873e-05, 7.632000000000125e-05, 7.618099999999808e-05, 7.613899999999937e-05, 7.650000000000018e-05, 7.637500000000005e-05, 7.659800000000064e-05, 7.668000000000258e-05, 7.6597...</msg>
<status status="PASS" starttime="20201115 23:02:13.734" endtime="20201115 23:02:13.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.751" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.750" endtime="20201115 23:02:13.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.753" level="INFO">VALUE: [7.630499999999873e-05, 7.632000000000125e-05, 7.618099999999808e-05, 7.613899999999937e-05, 7.650000000000018e-05, 7.637500000000005e-05, 7.659800000000064e-05, 7.668000000000258e-05, 7.659799999999717e-05, 7.648700000000008e-05, 7.633299999999787e-05, 7.647199999999757e-05, 7.666599999999954e-05, 7.647200000000104e-05, 7.613900000000284e-05, 7.598600000000011e-05, 7.633300000000134e-05, 7.650000000000018e-05, 7.579200000000161e-05, 7.633400000000082e-05, 7.582000000000075e-05, 7.648700000000008e-05, 7.615299999999894e-05, 7.593000000000183e-05, 7.648600000000061e-05, 7.605600000000143e-05, 7.579099999999866e-05, 7.581900000000127e-05, 7.633300000000134e-05, 7.647200000000104e-05, 7.633400000000082e-05, 7.615299999999894e-05, 7.577799999999857e-05, 7.648600000000061e-05, 7.630599999999821e-05, 7.615199999999947e-05, 7.581900000000127e-05, 7.58189999999978e-05, 7.648600000000061e-05, 7.668100000000205e-05, 7.648600000000061e-05, 7.583299999999737e-05, 7.613899999999937e-05, 7.632000000000125e-05, 7.613899999999937e-05, 7.650000000000018e-05, 7.648599999999714e-05, 7.60830000000011e-05, 7.581900000000127e-05, 7.650000000000018e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.752" endtime="20201115 23:02:13.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.747" endtime="20201115 23:02:13.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.756" endtime="20201115 23:02:13.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.760" endtime="20201115 23:02:13.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.758" endtime="20201115 23:02:13.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.755" endtime="20201115 23:02:13.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.387" endtime="20201115 23:02:13.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.385" endtime="20201115 23:02:13.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.384" endtime="20201115 23:02:13.781"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.783" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.792" endtime="20201115 23:02:13.810"></status>
</kw>
<msg timestamp="20201115 23:02:13.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.790" endtime="20201115 23:02:13.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.812" endtime="20201115 23:02:13.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.815" endtime="20201115 23:02:13.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.787" endtime="20201115 23:02:13.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.785" endtime="20201115 23:02:13.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.824" endtime="20201115 23:02:14.110"></status>
</kw>
<msg timestamp="20201115 23:02:14.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024697972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024775181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.822" endtime="20201115 23:02:14.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024697972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024775181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.115" endtime="20201115 23:02:14.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.123" endtime="20201115 23:02:14.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.820" endtime="20201115 23:02:14.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.818" endtime="20201115 23:02:14.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.131" level="INFO">${RESULT} = [{'time': 0.024775181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.720900000000169e-05, 'source_diff': 7.720900000000169e-05}, {'time': 0.024860181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:14.127" endtime="20201115 23:02:14.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.144" level="INFO">${ACCURACY} = {'diff': [7.720900000000169e-05, 7.748699999999761e-05, 7.770799999999925e-05, 7.733299999999887e-05, 7.769399999999968e-05, 7.769499999999915e-05, 7.700000000000068e-05, 7.715299999999994e-05, 7.7653...</msg>
<status status="PASS" starttime="20201115 23:02:14.132" endtime="20201115 23:02:14.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.149" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.148" endtime="20201115 23:02:14.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.151" level="INFO">VALUE: [7.720900000000169e-05, 7.748699999999761e-05, 7.770799999999925e-05, 7.733299999999887e-05, 7.769399999999968e-05, 7.769499999999915e-05, 7.700000000000068e-05, 7.715299999999994e-05, 7.765300000000044e-05, 7.732000000000225e-05, 7.677799999999957e-05, 7.765300000000044e-05, 7.716699999999951e-05, 7.766600000000054e-05, 7.72770000000006e-05, 7.681900000000227e-05, 7.73189999999993e-05, 7.747200000000204e-05, 7.68189999999988e-05, 7.698600000000111e-05, 7.68189999999988e-05, 7.765300000000044e-05, 7.733400000000182e-05, 7.766700000000001e-05, 7.766700000000001e-05, 7.682000000000175e-05, 7.683300000000184e-05, 7.748600000000161e-05, 7.72640000000005e-05, 7.750000000000118e-05, 7.698599999999764e-05, 7.715299999999994e-05, 7.765300000000044e-05, 7.745800000000247e-05, 7.733399999999835e-05, 7.768099999999958e-05, 7.700000000000068e-05, 7.733399999999835e-05, 7.766599999999707e-05, 7.698700000000058e-05, 7.71380000000009e-05, 7.73189999999993e-05, 7.748599999999814e-05, 7.691599999999979e-05, 7.733300000000234e-05, 7.733299999999887e-05, 7.752799999999685e-05, 7.748600000000161e-05, 7.697199999999807e-05, 7.734699999999844e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.150" endtime="20201115 23:02:14.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.145" endtime="20201115 23:02:14.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.154" endtime="20201115 23:02:14.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.158" endtime="20201115 23:02:14.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.156" endtime="20201115 23:02:14.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.153" endtime="20201115 23:02:14.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.784" endtime="20201115 23:02:14.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.782" endtime="20201115 23:02:14.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.781" endtime="20201115 23:02:14.179"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.181" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.191" endtime="20201115 23:02:14.213"></status>
</kw>
<msg timestamp="20201115 23:02:14.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.188" endtime="20201115 23:02:14.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.216" endtime="20201115 23:02:14.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.221" endtime="20201115 23:02:14.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.185" endtime="20201115 23:02:14.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.183" endtime="20201115 23:02:14.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.241" endtime="20201115 23:02:14.535"></status>
</kw>
<msg timestamp="20201115 23:02:14.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027590639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027669014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.237" endtime="20201115 23:02:14.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027590639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027669014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.540" endtime="20201115 23:02:14.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.548" endtime="20201115 23:02:14.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.232" endtime="20201115 23:02:14.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.228" endtime="20201115 23:02:14.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.555" level="INFO">${RESULT} = [{'time': 0.027669014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.837499999999858e-05, 'source_diff': 7.837499999999858e-05}, {'time': 0.027759042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:14.551" endtime="20201115 23:02:14.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.568" level="INFO">${ACCURACY} = {'diff': [7.837499999999858e-05, 7.833400000000282e-05, 7.855500000000099e-05, 7.783399999999885e-05, 7.850000000000218e-05, 7.8151999999998e-05, 7.811099999999876e-05, 7.863900000000187e-05, 7.815300...</msg>
<status status="PASS" starttime="20201115 23:02:14.556" endtime="20201115 23:02:14.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.573" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.572" endtime="20201115 23:02:14.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.575" level="INFO">VALUE: [7.837499999999858e-05, 7.833400000000282e-05, 7.855500000000099e-05, 7.783399999999885e-05, 7.850000000000218e-05, 7.8151999999998e-05, 7.811099999999876e-05, 7.863900000000187e-05, 7.815300000000094e-05, 7.813900000000137e-05, 7.847199999999957e-05, 7.833299999999987e-05, 7.831999999999978e-05, 7.848600000000261e-05, 7.798600000000211e-05, 7.784699999999894e-05, 7.816599999999757e-05, 7.831999999999978e-05, 7.863799999999893e-05, 7.861099999999926e-05, 7.834699999999944e-05, 7.834699999999944e-05, 7.78189999999998e-05, 7.798599999999864e-05, 7.798599999999864e-05, 7.866700000000101e-05, 7.805500000000049e-05, 7.816700000000051e-05, 7.850000000000218e-05, 7.783299999999937e-05, 7.787500000000155e-05, 7.783299999999937e-05, 7.834699999999944e-05, 7.784699999999894e-05, 7.824999999999846e-05, 7.862499999999883e-05, 7.780599999999971e-05, 7.811099999999876e-05, 7.849999999999871e-05, 7.816700000000051e-05, 7.783400000000232e-05, 7.834700000000291e-05, 7.81389999999979e-05, 7.869399999999721e-05, 7.847200000000304e-05, 7.78189999999998e-05, 7.848600000000261e-05, 7.851399999999481e-05, 7.83190000000003e-05, 7.837499999999858e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.574" endtime="20201115 23:02:14.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.569" endtime="20201115 23:02:14.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.578" endtime="20201115 23:02:14.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.582" endtime="20201115 23:02:14.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.580" endtime="20201115 23:02:14.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.576" endtime="20201115 23:02:14.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.182" endtime="20201115 23:02:14.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.180" endtime="20201115 23:02:14.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.179" endtime="20201115 23:02:14.603"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.606" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.614" endtime="20201115 23:02:14.632"></status>
</kw>
<msg timestamp="20201115 23:02:14.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.612" endtime="20201115 23:02:14.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.633" endtime="20201115 23:02:14.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.636" endtime="20201115 23:02:14.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.610" endtime="20201115 23:02:14.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.608" endtime="20201115 23:02:14.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.645" endtime="20201115 23:02:14.931"></status>
</kw>
<msg timestamp="20201115 23:02:14.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025328194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025407417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.644" endtime="20201115 23:02:14.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025328194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025407417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.936" endtime="20201115 23:02:14.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.944" endtime="20201115 23:02:14.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.641" endtime="20201115 23:02:14.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.639" endtime="20201115 23:02:14.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.951" level="INFO">${RESULT} = [{'time': 0.025407417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.922300000000326e-05, 'source_diff': 7.922300000000326e-05}, {'time': 0.025500417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:14.947" endtime="20201115 23:02:14.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.008" level="INFO">${ACCURACY} = {'diff': [7.922300000000326e-05, 7.898599999999964e-05, 7.93329999999974e-05, 7.880499999999777e-05, 7.920799999999728e-05, 7.884699999999994e-05, 7.897200000000007e-05, 7.88190000000008e-05, 7.947200...</msg>
<status status="PASS" starttime="20201115 23:02:14.952" endtime="20201115 23:02:15.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.013" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.012" endtime="20201115 23:02:15.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.015" level="INFO">VALUE: [7.922300000000326e-05, 7.898599999999964e-05, 7.93329999999974e-05, 7.880499999999777e-05, 7.920799999999728e-05, 7.884699999999994e-05, 7.897200000000007e-05, 7.88190000000008e-05, 7.947200000000057e-05, 7.93190000000013e-05, 7.932000000000078e-05, 7.965299999999897e-05, 7.965299999999897e-05, 7.9458999999997e-05, 7.96389999999994e-05, 7.883300000000037e-05, 7.948600000000014e-05, 7.965299999999897e-05, 7.915300000000194e-05, 7.915299999999847e-05, 7.948600000000014e-05, 7.962499999999983e-05, 7.915299999999847e-05, 7.882000000000028e-05, 7.949999999999971e-05, 7.948600000000014e-05, 7.917999999999814e-05, 7.965300000000244e-05, 7.965200000000297e-05, 7.883300000000037e-05, 7.930500000000174e-05, 7.898599999999964e-05, 7.965299999999897e-05, 7.948600000000014e-05, 7.934699999999698e-05, 7.929200000000164e-05, 7.916699999999804e-05, 7.948600000000014e-05, 7.898599999999964e-05, 7.93190000000013e-05, 7.93190000000013e-05, 7.9458000000001e-05, 7.96519999999995e-05, 7.949999999999971e-05, 7.948600000000014e-05, 7.954199999999842e-05, 7.948600000000014e-05, 7.972200000000082e-05, 7.932000000000078e-05, 7.943099999999786e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.014" endtime="20201115 23:02:15.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.009" endtime="20201115 23:02:15.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.019" endtime="20201115 23:02:15.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.022" endtime="20201115 23:02:15.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.021" endtime="20201115 23:02:15.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.017" endtime="20201115 23:02:15.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.606" endtime="20201115 23:02:15.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.604" endtime="20201115 23:02:15.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.603" endtime="20201115 23:02:15.043"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.046" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.054" endtime="20201115 23:02:15.073"></status>
</kw>
<msg timestamp="20201115 23:02:15.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.053" endtime="20201115 23:02:15.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.075" endtime="20201115 23:02:15.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.077" endtime="20201115 23:02:15.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.050" endtime="20201115 23:02:15.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.048" endtime="20201115 23:02:15.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.086" endtime="20201115 23:02:15.372"></status>
</kw>
<msg timestamp="20201115 23:02:15.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025215111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025295639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.085" endtime="20201115 23:02:15.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025215111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025295639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.376" endtime="20201115 23:02:15.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.385" endtime="20201115 23:02:15.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.082" endtime="20201115 23:02:15.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.081" endtime="20201115 23:02:15.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.391" level="INFO">${RESULT} = [{'time': 0.025295639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.052800000000332e-05, 'source_diff': 8.052800000000332e-05}, {'time': 0.025390653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:15.388" endtime="20201115 23:02:15.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.405" level="INFO">${ACCURACY} = {'diff': [8.052800000000332e-05, 8.031999999999831e-05, 7.98329999999979e-05, 7.998700000000011e-05, 8.030599999999874e-05, 7.980499999999877e-05, 8.023600000000089e-05, 8.065299999999997e-05, 7.98330...</msg>
<status status="PASS" starttime="20201115 23:02:15.392" endtime="20201115 23:02:15.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.409" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.408" endtime="20201115 23:02:15.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.412" level="INFO">VALUE: [8.052800000000332e-05, 8.031999999999831e-05, 7.98329999999979e-05, 7.998700000000011e-05, 8.030599999999874e-05, 7.980499999999877e-05, 8.023600000000089e-05, 8.065299999999997e-05, 7.983300000000138e-05, 8.015300000000294e-05, 8.065299999999997e-05, 7.982000000000128e-05, 8.048600000000114e-05, 8.030600000000221e-05, 7.981999999999781e-05, 8.02779999999996e-05, 8.048600000000114e-05, 7.998600000000064e-05, 7.99719999999976e-05, 7.980499999999877e-05, 8.050000000000071e-05, 8.000000000000021e-05, 8.063899999999694e-05, 8.034800000000092e-05, 8.06390000000004e-05, 7.99719999999976e-05, 8.065299999999997e-05, 7.998600000000064e-05, 8.050000000000071e-05, 8.048600000000114e-05, 7.980499999999877e-05, 8.062499999999737e-05, 7.998599999999717e-05, 8.06390000000004e-05, 8.016700000000251e-05, 7.998600000000064e-05, 8.061100000000126e-05, 8.050000000000071e-05, 8.072199999999835e-05, 7.986100000000051e-05, 8.018000000000261e-05, 8.027700000000013e-05, 8.030499999999927e-05, 7.997200000000107e-05, 8.065299999999997e-05, 8.068100000000258e-05, 7.998600000000064e-05, 8.048600000000114e-05, 7.981999999999781e-05, 8.015300000000294e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.410" endtime="20201115 23:02:15.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.405" endtime="20201115 23:02:15.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.415" endtime="20201115 23:02:15.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.419" endtime="20201115 23:02:15.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.417" endtime="20201115 23:02:15.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.414" endtime="20201115 23:02:15.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.046" endtime="20201115 23:02:15.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.045" endtime="20201115 23:02:15.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.044" endtime="20201115 23:02:15.440"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.442" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.451" endtime="20201115 23:02:15.470"></status>
</kw>
<msg timestamp="20201115 23:02:15.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.450" endtime="20201115 23:02:15.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.471" endtime="20201115 23:02:15.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.474" endtime="20201115 23:02:15.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.447" endtime="20201115 23:02:15.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.444" endtime="20201115 23:02:15.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.483" endtime="20201115 23:02:15.768"></status>
</kw>
<msg timestamp="20201115 23:02:15.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025530139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025611708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.481" endtime="20201115 23:02:15.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025530139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025611708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.772" endtime="20201115 23:02:15.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.780" endtime="20201115 23:02:15.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.479" endtime="20201115 23:02:15.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.477" endtime="20201115 23:02:15.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.787" level="INFO">${RESULT} = [{'time': 0.025611708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.156900000000009e-05, 'source_diff': 8.156900000000009e-05}, {'time': 0.025704708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:15.784" endtime="20201115 23:02:15.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.801" level="INFO">${ACCURACY} = {'diff': [8.156900000000009e-05, 8.13329999999994e-05, 8.148600000000214e-05, 8.150000000000171e-05, 8.148599999999867e-05, 8.098600000000164e-05, 8.122199999999885e-05, 8.081999999999881e-05, 8.11530...</msg>
<status status="PASS" starttime="20201115 23:02:15.789" endtime="20201115 23:02:15.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.806" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.805" endtime="20201115 23:02:15.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.808" level="INFO">VALUE: [8.156900000000009e-05, 8.13329999999994e-05, 8.148600000000214e-05, 8.150000000000171e-05, 8.148599999999867e-05, 8.098600000000164e-05, 8.122199999999885e-05, 8.081999999999881e-05, 8.115300000000047e-05, 8.115300000000047e-05, 8.16529999999975e-05, 8.102800000000035e-05, 8.13329999999994e-05, 8.154200000000042e-05, 8.108299999999916e-05, 8.098599999999817e-05, 8.098600000000164e-05, 8.115300000000047e-05, 8.148599999999867e-05, 8.166700000000054e-05, 8.166700000000054e-05, 8.166700000000054e-05, 8.081999999999881e-05, 8.159800000000217e-05, 8.148700000000161e-05, 8.122199999999885e-05, 8.148599999999867e-05, 8.16529999999975e-05, 8.07780000000001e-05, 8.130500000000027e-05, 8.162500000000183e-05, 8.11390000000009e-05, 8.16529999999975e-05, 8.115300000000047e-05, 8.16390000000014e-05, 8.116600000000057e-05, 8.086100000000151e-05, 8.134699999999898e-05, 8.115300000000047e-05, 8.120899999999875e-05, 8.07910000000002e-05, 8.098599999999817e-05, 8.168100000000011e-05, 8.129200000000017e-05, 8.08329999999989e-05, 8.136099999999855e-05, 8.084800000000142e-05, 8.133399999999888e-05, 8.123600000000189e-05, 8.115199999999753e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.807" endtime="20201115 23:02:15.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.802" endtime="20201115 23:02:15.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.811" endtime="20201115 23:02:15.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.815" endtime="20201115 23:02:15.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.813" endtime="20201115 23:02:15.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.810" endtime="20201115 23:02:15.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.443" endtime="20201115 23:02:15.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.441" endtime="20201115 23:02:15.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.440" endtime="20201115 23:02:15.836"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.838" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.847" endtime="20201115 23:02:15.866"></status>
</kw>
<msg timestamp="20201115 23:02:15.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.846" endtime="20201115 23:02:15.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.868" endtime="20201115 23:02:15.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.870" endtime="20201115 23:02:15.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.842" endtime="20201115 23:02:15.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.840" endtime="20201115 23:02:15.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.879" endtime="20201115 23:02:16.166"></status>
</kw>
<msg timestamp="20201115 23:02:16.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025382236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025464069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.878" endtime="20201115 23:02:16.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025382236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025464069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.170" endtime="20201115 23:02:16.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.179" endtime="20201115 23:02:16.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.875" endtime="20201115 23:02:16.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.874" endtime="20201115 23:02:16.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.186" level="INFO">${RESULT} = [{'time': 0.025464069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.18329999999999e-05, 'source_diff': 8.18329999999999e-05}, {'time': 0.025551069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:16.182" endtime="20201115 23:02:16.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.199" level="INFO">${ACCURACY} = {'diff': [8.18329999999999e-05, 8.215199999999853e-05, 8.199999999999874e-05, 8.181900000000034e-05, 8.180500000000077e-05, 8.230600000000074e-05, 8.181900000000034e-05, 8.199999999999874e-05, 8.21529...</msg>
<status status="PASS" starttime="20201115 23:02:16.187" endtime="20201115 23:02:16.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.204" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.203" endtime="20201115 23:02:16.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.206" level="INFO">VALUE: [8.18329999999999e-05, 8.215199999999853e-05, 8.199999999999874e-05, 8.181900000000034e-05, 8.180500000000077e-05, 8.230600000000074e-05, 8.181900000000034e-05, 8.199999999999874e-05, 8.2152999999998e-05, 8.263899999999894e-05, 8.237500000000259e-05, 8.248599999999967e-05, 8.248599999999967e-05, 8.192999999999742e-05, 8.23330000000004e-05, 8.181900000000034e-05, 8.230600000000074e-05, 8.215300000000147e-05, 8.186099999999905e-05, 8.184800000000242e-05, 8.232000000000031e-05, 8.183399999999938e-05, 8.181999999999981e-05, 8.248699999999914e-05, 8.2152000000002e-05, 8.262500000000284e-05, 8.240199999999878e-05, 8.266699999999808e-05, 8.244399999999749e-05, 8.180500000000077e-05, 8.26529999999985e-05, 8.231999999999684e-05, 8.216700000000104e-05, 8.183399999999938e-05, 8.26659999999986e-05, 8.232000000000031e-05, 8.233299999999694e-05, 8.250000000000271e-05, 8.248599999999967e-05, 8.23330000000004e-05, 8.201399999999831e-05, 8.248599999999967e-05, 8.248599999999967e-05, 8.181999999999981e-05, 8.2152999999998e-05, 8.232000000000031e-05, 8.215300000000147e-05, 8.198599999999917e-05, 8.218099999999715e-05, 8.248599999999967e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.205" endtime="20201115 23:02:16.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.200" endtime="20201115 23:02:16.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.210" endtime="20201115 23:02:16.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.213" endtime="20201115 23:02:16.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.212" endtime="20201115 23:02:16.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.208" endtime="20201115 23:02:16.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.839" endtime="20201115 23:02:16.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.837" endtime="20201115 23:02:16.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.836" endtime="20201115 23:02:16.234"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.237" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.245" endtime="20201115 23:02:16.264"></status>
</kw>
<msg timestamp="20201115 23:02:16.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.243" endtime="20201115 23:02:16.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.265" endtime="20201115 23:02:16.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.268" endtime="20201115 23:02:16.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.241" endtime="20201115 23:02:16.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.239" endtime="20201115 23:02:16.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.277" endtime="20201115 23:02:16.563"></status>
</kw>
<msg timestamp="20201115 23:02:16.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025376389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025459917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.275" endtime="20201115 23:02:16.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025376389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025459917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.567" endtime="20201115 23:02:16.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.575" endtime="20201115 23:02:16.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.273" endtime="20201115 23:02:16.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.271" endtime="20201115 23:02:16.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.582" level="INFO">${RESULT} = [{'time': 0.025459917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.352799999999938e-05, 'source_diff': 8.352799999999938e-05}, {'time': 0.025549917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:16.578" endtime="20201115 23:02:16.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.596" level="INFO">${ACCURACY} = {'diff': [8.352799999999938e-05, 8.281999999999734e-05, 8.333400000000088e-05, 8.332000000000131e-05, 8.281900000000134e-05, 8.29720000000006e-05, 8.348600000000067e-05, 8.281900000000134e-05, 8.36950...</msg>
<status status="PASS" starttime="20201115 23:02:16.583" endtime="20201115 23:02:16.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.601" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.600" endtime="20201115 23:02:16.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.603" level="INFO">VALUE: [8.352799999999938e-05, 8.281999999999734e-05, 8.333400000000088e-05, 8.332000000000131e-05, 8.281900000000134e-05, 8.29720000000006e-05, 8.348600000000067e-05, 8.281900000000134e-05, 8.369500000000168e-05, 8.34859999999972e-05, 8.350000000000024e-05, 8.318100000000161e-05, 8.282000000000081e-05, 8.3152999999999e-05, 8.316699999999858e-05, 8.33330000000014e-05, 8.33049999999988e-05, 8.350000000000024e-05, 8.316699999999858e-05, 8.366699999999908e-05, 8.299999999999974e-05, 8.313899999999944e-05, 8.372200000000135e-05, 8.359700000000123e-05, 8.368099999999865e-05, 8.283400000000038e-05, 8.313899999999944e-05, 8.3152999999999e-05, 8.365200000000003e-05, 8.292999999999842e-05, 8.316699999999858e-05, 8.316700000000204e-05, 8.333299999999794e-05, 8.309700000000073e-05, 8.281999999999734e-05, 8.283400000000038e-05, 8.363899999999994e-05, 8.363899999999994e-05, 8.348699999999667e-05, 8.365200000000003e-05, 8.31659999999991e-05, 8.302799999999888e-05, 8.350000000000024e-05, 8.31390000000029e-05, 8.348600000000067e-05, 8.283299999999744e-05, 8.331999999999784e-05, 8.366699999999908e-05, 8.348600000000067e-05, 8.298700000000311e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.602" endtime="20201115 23:02:16.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.597" endtime="20201115 23:02:16.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.607" endtime="20201115 23:02:16.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.610" endtime="20201115 23:02:16.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.608" endtime="20201115 23:02:16.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.605" endtime="20201115 23:02:16.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.237" endtime="20201115 23:02:16.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.235" endtime="20201115 23:02:16.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.235" endtime="20201115 23:02:16.631"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.633" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.642" endtime="20201115 23:02:16.661"></status>
</kw>
<msg timestamp="20201115 23:02:16.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.640" endtime="20201115 23:02:16.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.663" endtime="20201115 23:02:16.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.666" endtime="20201115 23:02:16.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.638" endtime="20201115 23:02:16.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.635" endtime="20201115 23:02:16.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.675" endtime="20201115 23:02:16.960"></status>
</kw>
<msg timestamp="20201115 23:02:16.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025219819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025304375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.673" endtime="20201115 23:02:16.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025219819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025304375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.964" endtime="20201115 23:02:16.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.972" endtime="20201115 23:02:16.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.671" endtime="20201115 23:02:16.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.669" endtime="20201115 23:02:16.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.979" level="INFO">${RESULT} = [{'time': 0.025304375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.455599999999952e-05, 'source_diff': 8.455599999999952e-05}, {'time': 0.025400389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:16.976" endtime="20201115 23:02:16.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.992" level="INFO">${ACCURACY} = {'diff': [8.455599999999952e-05, 8.433299999999894e-05, 8.44859999999982e-05, 8.466700000000008e-05, 8.447199999999863e-05, 8.430600000000274e-05, 8.450000000000124e-05, 8.465200000000103e-05, 8.38329...</msg>
<status status="PASS" starttime="20201115 23:02:16.980" endtime="20201115 23:02:16.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.997" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.996" endtime="20201115 23:02:16.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.999" level="INFO">VALUE: [8.455599999999952e-05, 8.433299999999894e-05, 8.44859999999982e-05, 8.466700000000008e-05, 8.447199999999863e-05, 8.430600000000274e-05, 8.450000000000124e-05, 8.465200000000103e-05, 8.383299999999844e-05, 8.415200000000053e-05, 8.39720000000016e-05, 8.383299999999844e-05, 8.418099999999915e-05, 8.39859999999977e-05, 8.459700000000223e-05, 8.416700000000304e-05, 8.46660000000006e-05, 8.430599999999927e-05, 8.431899999999937e-05, 8.377700000000016e-05, 8.465200000000103e-05, 8.46660000000006e-05, 8.448600000000167e-05, 8.431899999999937e-05, 8.449999999999777e-05, 8.400000000000074e-05, 8.430599999999927e-05, 8.399999999999727e-05, 8.466700000000008e-05, 8.43330000000024e-05, 8.433299999999894e-05, 8.404200000000292e-05, 8.466599999999713e-05, 8.413900000000044e-05, 8.431900000000284e-05, 8.447199999999863e-05, 8.398600000000117e-05, 8.46530000000005e-05, 8.39720000000016e-05, 8.384800000000095e-05, 8.381999999999834e-05, 8.4153e-05, 8.449999999999777e-05, 8.417999999999967e-05, 8.384700000000148e-05, 8.463900000000094e-05, 8.380500000000277e-05, 8.437500000000112e-05, 8.46530000000005e-05, 8.39720000000016e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.998" endtime="20201115 23:02:17.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.993" endtime="20201115 23:02:17.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.003" endtime="20201115 23:02:17.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.006" endtime="20201115 23:02:17.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.005" endtime="20201115 23:02:17.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.001" endtime="20201115 23:02:17.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.634" endtime="20201115 23:02:17.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.632" endtime="20201115 23:02:17.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.631" endtime="20201115 23:02:17.027"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.030" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.038" endtime="20201115 23:02:17.057"></status>
</kw>
<msg timestamp="20201115 23:02:17.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.037" endtime="20201115 23:02:17.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.058" endtime="20201115 23:02:17.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.061" endtime="20201115 23:02:17.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.034" endtime="20201115 23:02:17.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.032" endtime="20201115 23:02:17.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.070" endtime="20201115 23:02:17.356"></status>
</kw>
<msg timestamp="20201115 23:02:17.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025002167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025087889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.068" endtime="20201115 23:02:17.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025002167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025087889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.360" endtime="20201115 23:02:17.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.369" endtime="20201115 23:02:17.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.066" endtime="20201115 23:02:17.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.064" endtime="20201115 23:02:17.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.375" level="INFO">${RESULT} = [{'time': 0.025087889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.572199999999988e-05, 'source_diff': 8.572199999999988e-05}, {'time': 0.025179903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:17.372" endtime="20201115 23:02:17.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.389" level="INFO">${ACCURACY} = {'diff': [8.572199999999988e-05, 8.54859999999992e-05, 8.5153000000001e-05, 8.49859999999987e-05, 8.56660000000016e-05, 8.53050000000008e-05, 8.566599999999813e-05, 8.513900000000144e-05, 8.5305000000...</msg>
<status status="PASS" starttime="20201115 23:02:17.376" endtime="20201115 23:02:17.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.393" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.392" endtime="20201115 23:02:17.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.396" level="INFO">VALUE: [8.572199999999988e-05, 8.54859999999992e-05, 8.5153000000001e-05, 8.49859999999987e-05, 8.56660000000016e-05, 8.53050000000008e-05, 8.566599999999813e-05, 8.513900000000144e-05, 8.53050000000008e-05, 8.53469999999995e-05, 8.56530000000015e-05, 8.481999999999934e-05, 8.530600000000027e-05, 8.513899999999797e-05, 8.565299999999804e-05, 8.516599999999763e-05, 8.5153000000001e-05, 8.515200000000153e-05, 8.555599999999705e-05, 8.49859999999987e-05, 8.531900000000037e-05, 8.530499999999733e-05, 8.497199999999913e-05, 8.566700000000108e-05, 8.533399999999941e-05, 8.56669999999976e-05, 8.483400000000238e-05, 8.500000000000174e-05, 8.531900000000037e-05, 8.54859999999992e-05, 8.515199999999806e-05, 8.5153000000001e-05, 8.563899999999847e-05, 8.500000000000174e-05, 8.497199999999913e-05, 8.513899999999797e-05, 8.54859999999992e-05, 8.56669999999976e-05, 8.513899999999797e-05, 8.562500000000237e-05, 8.51660000000011e-05, 8.531900000000037e-05, 8.516599999999763e-05, 8.479100000000073e-05, 8.566700000000108e-05, 8.48330000000029e-05, 8.552800000000138e-05, 8.563900000000194e-05, 8.481999999999934e-05, 8.54859999999992e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.395" endtime="20201115 23:02:17.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.390" endtime="20201115 23:02:17.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.399" endtime="20201115 23:02:17.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.403" endtime="20201115 23:02:17.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.401" endtime="20201115 23:02:17.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.397" endtime="20201115 23:02:17.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.030" endtime="20201115 23:02:17.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.028" endtime="20201115 23:02:17.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.027" endtime="20201115 23:02:17.424"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.427" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.435" endtime="20201115 23:02:17.454"></status>
</kw>
<msg timestamp="20201115 23:02:17.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.433" endtime="20201115 23:02:17.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.456" endtime="20201115 23:02:17.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.459" endtime="20201115 23:02:17.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.431" endtime="20201115 23:02:17.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.429" endtime="20201115 23:02:17.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.468" endtime="20201115 23:02:17.754"></status>
</kw>
<msg timestamp="20201115 23:02:17.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025797069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025883111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.466" endtime="20201115 23:02:17.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025797069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025883111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.758" endtime="20201115 23:02:17.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.767" endtime="20201115 23:02:17.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.464" endtime="20201115 23:02:17.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.462" endtime="20201115 23:02:17.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.773" level="INFO">${RESULT} = [{'time': 0.025883111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.604200000000145e-05, 'source_diff': 8.604200000000145e-05}, {'time': 0.025974153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:17.770" endtime="20201115 23:02:17.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.787" level="INFO">${ACCURACY} = {'diff': [8.604200000000145e-05, 8.63470000000005e-05, 8.577800000000163e-05, 8.64860000000002e-05, 8.577800000000163e-05, 8.665299999999904e-05, 8.61119999999993e-05, 8.663899999999947e-05, 8.6151999...</msg>
<status status="PASS" starttime="20201115 23:02:17.774" endtime="20201115 23:02:17.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.791" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.790" endtime="20201115 23:02:17.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.794" level="INFO">VALUE: [8.604200000000145e-05, 8.63470000000005e-05, 8.577800000000163e-05, 8.64860000000002e-05, 8.577800000000163e-05, 8.665299999999904e-05, 8.61119999999993e-05, 8.663899999999947e-05, 8.615199999999906e-05, 8.580499999999783e-05, 8.58189999999974e-05, 8.581900000000087e-05, 8.630600000000127e-05, 8.602699999999894e-05, 8.666700000000208e-05, 8.615299999999854e-05, 8.607000000000059e-05, 8.663899999999947e-05, 8.59859999999997e-05, 8.659700000000076e-05, 8.665199999999956e-05, 8.64860000000002e-05, 8.66669999999986e-05, 8.64860000000002e-05, 8.581999999999687e-05, 8.627799999999866e-05, 8.615299999999854e-05, 8.615299999999854e-05, 8.64860000000002e-05, 8.582000000000034e-05, 8.600000000000274e-05, 8.615199999999906e-05, 8.59859999999997e-05, 8.66530000000025e-05, 8.66530000000025e-05, 8.651400000000281e-05, 8.630600000000127e-05, 8.631999999999737e-05, 8.632000000000084e-05, 8.599999999999927e-05, 8.602700000000241e-05, 8.602800000000188e-05, 8.665200000000303e-05, 8.631900000000137e-05, 8.581900000000087e-05, 8.581900000000087e-05, 8.598600000000317e-05, 8.5847e-05, 8.59859999999997e-05, 8.66669999999986e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.792" endtime="20201115 23:02:17.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.788" endtime="20201115 23:02:17.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.797" endtime="20201115 23:02:17.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.801" endtime="20201115 23:02:17.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.799" endtime="20201115 23:02:17.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.796" endtime="20201115 23:02:17.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.427" endtime="20201115 23:02:17.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.425" endtime="20201115 23:02:17.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.425" endtime="20201115 23:02:17.822"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.825" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.833" endtime="20201115 23:02:17.853"></status>
</kw>
<msg timestamp="20201115 23:02:17.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.831" endtime="20201115 23:02:17.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.854" endtime="20201115 23:02:17.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.857" endtime="20201115 23:02:17.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.829" endtime="20201115 23:02:17.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.827" endtime="20201115 23:02:17.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.866" endtime="20201115 23:02:18.151"></status>
</kw>
<msg timestamp="20201115 23:02:18.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025678444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025765889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.864" endtime="20201115 23:02:18.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025678444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025765889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.155" endtime="20201115 23:02:18.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.164" endtime="20201115 23:02:18.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.862" endtime="20201115 23:02:18.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.860" endtime="20201115 23:02:18.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.170" level="INFO">${RESULT} = [{'time': 0.025765889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.74449999999985e-05, 'source_diff': 8.74449999999985e-05}, {'time': 0.025858917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:18.167" endtime="20201115 23:02:18.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.185" level="INFO">${ACCURACY} = {'diff': [8.74449999999985e-05, 8.715299999999954e-05, 8.7153000000003e-05, 8.716700000000258e-05, 8.715299999999954e-05, 8.683299999999797e-05, 8.6847000000001e-05, 8.715299999999954e-05, 8.733299999...</msg>
<status status="PASS" starttime="20201115 23:02:18.171" endtime="20201115 23:02:18.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.190" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.189" endtime="20201115 23:02:18.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.194" level="INFO">VALUE: [8.74449999999985e-05, 8.715299999999954e-05, 8.7153000000003e-05, 8.716700000000258e-05, 8.715299999999954e-05, 8.683299999999797e-05, 8.6847000000001e-05, 8.715299999999954e-05, 8.733299999999847e-05, 8.747200000000163e-05, 8.708300000000169e-05, 8.765300000000004e-05, 8.700000000000027e-05, 8.715299999999954e-05, 8.765300000000004e-05, 8.748700000000068e-05, 8.71250000000004e-05, 8.716599999999963e-05, 8.766600000000013e-05, 8.701399999999984e-05, 8.6847000000001e-05, 8.681900000000187e-05, 8.698700000000018e-05, 8.765300000000004e-05, 8.74860000000012e-05, 8.69860000000007e-05, 8.731999999999837e-05, 8.716599999999963e-05, 8.73050000000028e-05, 8.765300000000004e-05, 8.701399999999984e-05, 8.731900000000237e-05, 8.683300000000144e-05, 8.681900000000187e-05, 8.732000000000184e-05, 8.697200000000113e-05, 8.769399999999927e-05, 8.71799999999992e-05, 8.727700000000019e-05, 8.68050000000023e-05, 8.68189999999984e-05, 8.76669999999996e-05, 8.748599999999773e-05, 8.715299999999954e-05, 8.719500000000172e-05, 8.74860000000012e-05, 8.711100000000083e-05, 8.69730000000006e-05, 8.730600000000227e-05, 8.730600000000227e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.192" endtime="20201115 23:02:18.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.186" endtime="20201115 23:02:18.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.197" endtime="20201115 23:02:18.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.200" endtime="20201115 23:02:18.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.199" endtime="20201115 23:02:18.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.195" endtime="20201115 23:02:18.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.825" endtime="20201115 23:02:18.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.823" endtime="20201115 23:02:18.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.822" endtime="20201115 23:02:18.221"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.224" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.232" endtime="20201115 23:02:18.251"></status>
</kw>
<msg timestamp="20201115 23:02:18.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.231" endtime="20201115 23:02:18.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.253" endtime="20201115 23:02:18.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.255" endtime="20201115 23:02:18.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.228" endtime="20201115 23:02:18.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.226" endtime="20201115 23:02:18.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.265" endtime="20201115 23:02:18.550"></status>
</kw>
<msg timestamp="20201115 23:02:18.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024509806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024598028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.263" endtime="20201115 23:02:18.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024509806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024598028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.554" endtime="20201115 23:02:18.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.562" endtime="20201115 23:02:18.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.260" endtime="20201115 23:02:18.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.259" endtime="20201115 23:02:18.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.569" level="INFO">${RESULT} = [{'time': 0.024598028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.822200000000238e-05, 'source_diff': 8.822200000000238e-05}, {'time': 0.024693986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:18.566" endtime="20201115 23:02:18.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.583" level="INFO">${ACCURACY} = {'diff': [8.822200000000238e-05, 8.78189999999994e-05, 8.848599999999873e-05, 8.854100000000101e-05, 8.833399999999894e-05, 8.800000000000127e-05, 8.866599999999766e-05, 8.84999999999983e-05, 8.848599...</msg>
<status status="PASS" starttime="20201115 23:02:18.570" endtime="20201115 23:02:18.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.587" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.586" endtime="20201115 23:02:18.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.590" level="INFO">VALUE: [8.822200000000238e-05, 8.78189999999994e-05, 8.848599999999873e-05, 8.854100000000101e-05, 8.833399999999894e-05, 8.800000000000127e-05, 8.866599999999766e-05, 8.84999999999983e-05, 8.848599999999873e-05, 8.783299999999897e-05, 8.845799999999959e-05, 8.830500000000033e-05, 8.83189999999999e-05, 8.78189999999994e-05, 8.836099999999861e-05, 8.779199999999973e-05, 8.783399999999844e-05, 8.865300000000104e-05, 8.813900000000097e-05, 8.815200000000106e-05, 8.794400000000299e-05, 8.81670000000001e-05, 8.847199999999916e-05, 8.78189999999994e-05, 8.84999999999983e-05, 8.78059999999993e-05, 8.86670000000006e-05, 8.797199999999866e-05, 8.84860000000022e-05, 8.834699999999904e-05, 8.815200000000106e-05, 8.848599999999873e-05, 8.869400000000027e-05, 8.797200000000213e-05, 8.83189999999999e-05, 8.852799999999744e-05, 8.848599999999873e-05, 8.854100000000101e-05, 8.86670000000006e-05, 8.813900000000097e-05, 8.815300000000054e-05, 8.795799999999909e-05, 8.81800000000002e-05, 8.83189999999999e-05, 8.781900000000287e-05, 8.830500000000033e-05, 8.825000000000152e-05, 8.815300000000054e-05, 8.831999999999937e-05, 8.794500000000247e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.588" endtime="20201115 23:02:18.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.584" endtime="20201115 23:02:18.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.593" endtime="20201115 23:02:18.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.596" endtime="20201115 23:02:18.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.595" endtime="20201115 23:02:18.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.591" endtime="20201115 23:02:18.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.224" endtime="20201115 23:02:18.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.223" endtime="20201115 23:02:18.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.222" endtime="20201115 23:02:18.618"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.620" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.628" endtime="20201115 23:02:18.647"></status>
</kw>
<msg timestamp="20201115 23:02:18.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.627" endtime="20201115 23:02:18.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.649" endtime="20201115 23:02:18.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.652" endtime="20201115 23:02:18.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.624" endtime="20201115 23:02:18.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.622" endtime="20201115 23:02:18.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.661" endtime="20201115 23:02:18.947"></status>
</kw>
<msg timestamp="20201115 23:02:18.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024979903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025069417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.659" endtime="20201115 23:02:18.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024979903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025069417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.951" endtime="20201115 23:02:18.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.960" endtime="20201115 23:02:18.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.657" endtime="20201115 23:02:18.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.655" endtime="20201115 23:02:18.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.966" level="INFO">${RESULT} = [{'time': 0.025069417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.951399999999887e-05, 'source_diff': 8.951399999999887e-05}, {'time': 0.025167417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:18.963" endtime="20201115 23:02:18.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.980" level="INFO">${ACCURACY} = {'diff': [8.951399999999887e-05, 8.913900000000197e-05, 8.963900000000247e-05, 8.89999999999988e-05, 8.93190000000009e-05, 8.966599999999866e-05, 8.916699999999764e-05, 8.965299999999857e-05, 8.948599...</msg>
<status status="PASS" starttime="20201115 23:02:18.967" endtime="20201115 23:02:18.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.985" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.984" endtime="20201115 23:02:18.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.987" level="INFO">VALUE: [8.951399999999887e-05, 8.913900000000197e-05, 8.963900000000247e-05, 8.89999999999988e-05, 8.93190000000009e-05, 8.966599999999866e-05, 8.916699999999764e-05, 8.965299999999857e-05, 8.948599999999973e-05, 8.931899999999743e-05, 8.947200000000016e-05, 8.915300000000154e-05, 8.929200000000123e-05, 8.883299999999997e-05, 8.907000000000012e-05, 8.926299999999915e-05, 8.93190000000009e-05, 8.9638999999999e-05, 8.9638999999999e-05, 8.877799999999769e-05, 8.96670000000016e-05, 8.932000000000037e-05, 8.897200000000313e-05, 8.898599999999923e-05, 8.884799999999901e-05, 8.883299999999997e-05, 8.933300000000047e-05, 8.912499999999893e-05, 8.884699999999954e-05, 8.93190000000009e-05, 8.936099999999961e-05, 8.965300000000204e-05, 8.966699999999814e-05, 8.948599999999973e-05, 8.915299999999807e-05, 8.954100000000201e-05, 8.929100000000176e-05, 8.900000000000227e-05, 8.901399999999837e-05, 8.947200000000016e-05, 8.915300000000154e-05, 8.911099999999936e-05, 8.91389999999985e-05, 8.91389999999985e-05, 8.965300000000204e-05, 8.916600000000163e-05, 8.93060000000008e-05, 8.966599999999866e-05, 8.913799999999902e-05, 8.94999999999993e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.986" endtime="20201115 23:02:18.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.981" endtime="20201115 23:02:18.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.990" endtime="20201115 23:02:18.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.994" endtime="20201115 23:02:19.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.992" endtime="20201115 23:02:19.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.989" endtime="20201115 23:02:19.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.621" endtime="20201115 23:02:19.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.619" endtime="20201115 23:02:19.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.618" endtime="20201115 23:02:19.015"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.017" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.025" endtime="20201115 23:02:19.044"></status>
</kw>
<msg timestamp="20201115 23:02:19.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.024" endtime="20201115 23:02:19.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.045" endtime="20201115 23:02:19.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.048" endtime="20201115 23:02:19.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.021" endtime="20201115 23:02:19.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.019" endtime="20201115 23:02:19.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.058" endtime="20201115 23:02:19.343"></status>
</kw>
<msg timestamp="20201115 23:02:19.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024647861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024737736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.056" endtime="20201115 23:02:19.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024647861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024737736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.347" endtime="20201115 23:02:19.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.356" endtime="20201115 23:02:19.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.053" endtime="20201115 23:02:19.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.051" endtime="20201115 23:02:19.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.363" level="INFO">${RESULT} = [{'time': 0.024737736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.987499999999968e-05, 'source_diff': 8.987499999999968e-05}, {'time': 0.02484175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:19.359" endtime="20201115 23:02:19.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.376" level="INFO">${ACCURACY} = {'diff': [8.987499999999968e-05, 8.983300000000097e-05, 9.015299999999907e-05, 8.991699999999839e-05, 9.033400000000094e-05, 9.032000000000137e-05, 9.061100000000086e-05, 9.045800000000159e-05, 9.0472...</msg>
<status status="PASS" starttime="20201115 23:02:19.364" endtime="20201115 23:02:19.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.381" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.379" endtime="20201115 23:02:19.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.383" level="INFO">VALUE: [8.987499999999968e-05, 8.983300000000097e-05, 9.015299999999907e-05, 8.991699999999839e-05, 9.033400000000094e-05, 9.032000000000137e-05, 9.061100000000086e-05, 9.045800000000159e-05, 9.047200000000116e-05, 9.05000000000003e-05, 9.031899999999843e-05, 9.015300000000254e-05, 9.051399999999987e-05, 9.032000000000137e-05, 8.998600000000023e-05, 9.047200000000116e-05, 8.993099999999796e-05, 9.01389999999995e-05, 9.06520000000001e-05, 9.066599999999966e-05, 9.015299999999907e-05, 9.033300000000147e-05, 8.980499999999836e-05, 9.03060000000018e-05, 9.065299999999957e-05, 9.0639e-05, 9.048599999999726e-05, 9.034700000000104e-05, 9.067999999999923e-05, 9.013800000000002e-05, 9.051399999999987e-05, 9.066599999999966e-05, 9.066699999999914e-05, 8.977800000000216e-05, 8.98190000000014e-05, 8.98199999999974e-05, 8.987500000000315e-05, 9.0639e-05, 9.033400000000094e-05, 8.983300000000097e-05, 9.063800000000052e-05, 9.05000000000003e-05, 8.977799999999869e-05, 9.031899999999843e-05, 8.98190000000014e-05, 8.983300000000097e-05, 8.997200000000066e-05, 8.986100000000011e-05, 9.065299999999957e-05, 9.059800000000076e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.382" endtime="20201115 23:02:19.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.377" endtime="20201115 23:02:19.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.386" endtime="20201115 23:02:19.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.390" endtime="20201115 23:02:19.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.388" endtime="20201115 23:02:19.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.385" endtime="20201115 23:02:19.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.018" endtime="20201115 23:02:19.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.016" endtime="20201115 23:02:19.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.015" endtime="20201115 23:02:19.411"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.413" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.422" endtime="20201115 23:02:19.442"></status>
</kw>
<msg timestamp="20201115 23:02:19.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.420" endtime="20201115 23:02:19.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.443" endtime="20201115 23:02:19.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.446" endtime="20201115 23:02:19.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.417" endtime="20201115 23:02:19.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.415" endtime="20201115 23:02:19.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.456" endtime="20201115 23:02:19.741"></status>
</kw>
<msg timestamp="20201115 23:02:19.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025522903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025614278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.454" endtime="20201115 23:02:19.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025522903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025614278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.745" endtime="20201115 23:02:19.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.753" endtime="20201115 23:02:19.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.451" endtime="20201115 23:02:19.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.449" endtime="20201115 23:02:19.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.760" level="INFO">${RESULT} = [{'time': 0.025614278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.137500000000118e-05, 'source_diff': 9.137500000000118e-05}, {'time': 0.025716333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:19.757" endtime="20201115 23:02:19.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.775" level="INFO">${ACCURACY} = {'diff': [9.137500000000118e-05, 9.084700000000154e-05, 9.14870000000012e-05, 9.084700000000154e-05, 9.131899999999943e-05, 9.166600000000066e-05, 9.098599999999776e-05, 9.15000000000013e-05, 9.100000...</msg>
<status status="PASS" starttime="20201115 23:02:19.761" endtime="20201115 23:02:19.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.779" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.778" endtime="20201115 23:02:19.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.782" level="INFO">VALUE: [9.137500000000118e-05, 9.084700000000154e-05, 9.14870000000012e-05, 9.084700000000154e-05, 9.131899999999943e-05, 9.166600000000066e-05, 9.098599999999776e-05, 9.15000000000013e-05, 9.10000000000008e-05, 9.130599999999933e-05, 9.134800000000151e-05, 9.11529999999966e-05, 9.15000000000013e-05, 9.080599999999883e-05, 9.11520000000006e-05, 9.1332999999999e-05, 9.11800000000032e-05, 9.165300000000057e-05, 9.10000000000008e-05, 9.13190000000029e-05, 9.133400000000194e-05, 9.149999999999783e-05, 9.13199999999989e-05, 9.149999999999783e-05, 9.166600000000066e-05, 9.092999999999948e-05, 9.08190000000024e-05, 9.165300000000057e-05, 9.080499999999936e-05, 9.094399999999905e-05, 9.11390000000005e-05, 9.08199999999984e-05, 9.097200000000166e-05, 9.144499999999903e-05, 9.14870000000012e-05, 9.14719999999987e-05, 9.14719999999987e-05, 9.16659999999972e-05, 9.15139999999974e-05, 9.138800000000127e-05, 9.141699999999989e-05, 9.11390000000005e-05, 9.11390000000005e-05, 9.13199999999989e-05, 9.127800000000019e-05, 9.115300000000007e-05, 9.163800000000152e-05, 9.098600000000123e-05, 9.111099999999789e-05, 9.165300000000057e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.780" endtime="20201115 23:02:19.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.775" endtime="20201115 23:02:19.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.785" endtime="20201115 23:02:19.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.788" endtime="20201115 23:02:19.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.787" endtime="20201115 23:02:19.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.783" endtime="20201115 23:02:19.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.414" endtime="20201115 23:02:19.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.412" endtime="20201115 23:02:19.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.411" endtime="20201115 23:02:19.809"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.812" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.820" endtime="20201115 23:02:19.839"></status>
</kw>
<msg timestamp="20201115 23:02:19.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.819" endtime="20201115 23:02:19.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.841" endtime="20201115 23:02:19.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.843" endtime="20201115 23:02:19.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.816" endtime="20201115 23:02:19.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.814" endtime="20201115 23:02:19.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.853" endtime="20201115 23:02:20.138"></status>
</kw>
<msg timestamp="20201115 23:02:20.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024983167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025075722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.851" endtime="20201115 23:02:20.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024983167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025075722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.142" endtime="20201115 23:02:20.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.151" endtime="20201115 23:02:20.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.848" endtime="20201115 23:02:20.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.847" endtime="20201115 23:02:20.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.157" level="INFO">${RESULT} = [{'time': 0.025075722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.255500000000111e-05, 'source_diff': 9.255500000000111e-05}, {'time': 0.025179736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.154" endtime="20201115 23:02:20.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.171" level="INFO">${ACCURACY} = {'diff': [9.255500000000111e-05, 9.198600000000223e-05, 9.216700000000064e-05, 9.243099999999699e-05, 9.216700000000064e-05, 9.23199999999999e-05, 9.197300000000214e-05, 9.248699999999874e-05, 9.21659...</msg>
<status status="PASS" starttime="20201115 23:02:20.158" endtime="20201115 23:02:20.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.175" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.174" endtime="20201115 23:02:20.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.178" level="INFO">VALUE: [9.255500000000111e-05, 9.198600000000223e-05, 9.216700000000064e-05, 9.243099999999699e-05, 9.216700000000064e-05, 9.23199999999999e-05, 9.197300000000214e-05, 9.248699999999874e-05, 9.21659999999977e-05, 9.231900000000043e-05, 9.215199999999812e-05, 9.21529999999976e-05, 9.24719999999997e-05, 9.265300000000157e-05, 9.212499999999846e-05, 9.249999999999883e-05, 9.25139999999984e-05, 9.182000000000287e-05, 9.212500000000193e-05, 9.206900000000018e-05, 9.184700000000254e-05, 9.231900000000043e-05, 9.195799999999962e-05, 9.180500000000036e-05, 9.26529999999981e-05, 9.262499999999896e-05, 9.266700000000114e-05, 9.23199999999999e-05, 9.20000000000018e-05, 9.204200000000051e-05, 9.198600000000223e-05, 9.248599999999926e-05, 9.198599999999876e-05, 9.2333e-05, 9.219499999999978e-05, 9.231900000000043e-05, 9.249999999999883e-05, 9.26529999999981e-05, 9.194499999999953e-05, 9.263899999999853e-05, 9.21659999999977e-05, 9.218000000000073e-05, 9.181899999999993e-05, 9.216699999999717e-05, 9.176400000000112e-05, 9.230600000000033e-05, 9.26529999999981e-05, 9.215300000000107e-05, 9.265300000000157e-05, 9.251299999999893e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.176" endtime="20201115 23:02:20.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.172" endtime="20201115 23:02:20.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.181" endtime="20201115 23:02:20.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.184" endtime="20201115 23:02:20.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.183" endtime="20201115 23:02:20.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.179" endtime="20201115 23:02:20.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.812" endtime="20201115 23:02:20.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.811" endtime="20201115 23:02:20.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.810" endtime="20201115 23:02:20.206"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.208" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.218" endtime="20201115 23:02:20.237"></status>
</kw>
<msg timestamp="20201115 23:02:20.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.216" endtime="20201115 23:02:20.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.239" endtime="20201115 23:02:20.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.242" endtime="20201115 23:02:20.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.213" endtime="20201115 23:02:20.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.211" endtime="20201115 23:02:20.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.251" endtime="20201115 23:02:20.536"></status>
</kw>
<msg timestamp="20201115 23:02:20.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026303333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026396389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.249" endtime="20201115 23:02:20.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026303333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026396389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.541" endtime="20201115 23:02:20.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.549" endtime="20201115 23:02:20.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.247" endtime="20201115 23:02:20.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.245" endtime="20201115 23:02:20.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.556" level="INFO">${RESULT} = [{'time': 0.026396389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.305599999999761e-05, 'source_diff': 9.305599999999761e-05}, {'time': 0.026503403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.552" endtime="20201115 23:02:20.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.569" level="INFO">${ACCURACY} = {'diff': [9.305599999999761e-05, 9.3333999999997e-05, 9.280600000000083e-05, 9.297299999999967e-05, 9.284799999999954e-05, 9.31529999999986e-05, 9.31520000000026e-05, 9.349999999999983e-05, 9.34859999...</msg>
<status status="PASS" starttime="20201115 23:02:20.557" endtime="20201115 23:02:20.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.574" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.572" endtime="20201115 23:02:20.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.576" level="INFO">VALUE: [9.305599999999761e-05, 9.3333999999997e-05, 9.280600000000083e-05, 9.297299999999967e-05, 9.284799999999954e-05, 9.31529999999986e-05, 9.31520000000026e-05, 9.349999999999983e-05, 9.34859999999968e-05, 9.316700000000164e-05, 9.316700000000164e-05, 9.316700000000164e-05, 9.31390000000025e-05, 9.28200000000004e-05, 9.297299999999967e-05, 9.363899999999953e-05, 9.280500000000136e-05, 9.315199999999912e-05, 9.298599999999976e-05, 9.348600000000026e-05, 9.348600000000026e-05, 9.330599999999786e-05, 9.363899999999953e-05, 9.348600000000026e-05, 9.363899999999953e-05, 9.29870000000027e-05, 9.297300000000314e-05, 9.31529999999986e-05, 9.36659999999992e-05, 9.298599999999976e-05, 9.31529999999986e-05, 9.31529999999986e-05, 9.281900000000093e-05, 9.349999999999983e-05, 9.37079999999979e-05, 9.33200000000009e-05, 9.330600000000133e-05, 9.315199999999912e-05, 9.299999999999933e-05, 9.298599999999976e-05, 9.348600000000026e-05, 9.36529999999991e-05, 9.348600000000026e-05, 9.365300000000257e-05, 9.36529999999991e-05, 9.331999999999743e-05, 9.299999999999933e-05, 9.36529999999991e-05, 9.280500000000136e-05, 9.347200000000416e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.575" endtime="20201115 23:02:20.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.570" endtime="20201115 23:02:20.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.580" endtime="20201115 23:02:20.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.583" endtime="20201115 23:02:20.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.582" endtime="20201115 23:02:20.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.578" endtime="20201115 23:02:20.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.209" endtime="20201115 23:02:20.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.207" endtime="20201115 23:02:20.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.206" endtime="20201115 23:02:20.604"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.607" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.615" endtime="20201115 23:02:20.635"></status>
</kw>
<msg timestamp="20201115 23:02:20.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.613" endtime="20201115 23:02:20.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.636" endtime="20201115 23:02:20.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.639" endtime="20201115 23:02:20.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.611" endtime="20201115 23:02:20.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.609" endtime="20201115 23:02:20.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.648" endtime="20201115 23:02:20.934"></status>
</kw>
<msg timestamp="20201115 23:02:20.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024741931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024835972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.646" endtime="20201115 23:02:20.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024741931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024835972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.938" endtime="20201115 23:02:20.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.947" endtime="20201115 23:02:20.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.644" endtime="20201115 23:02:20.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.642" endtime="20201115 23:02:20.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.954" level="INFO">${RESULT} = [{'time': 0.024835972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.404099999999957e-05, 'source_diff': 9.404099999999957e-05}, {'time': 0.024944972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.950" endtime="20201115 23:02:20.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.967" level="INFO">${ACCURACY} = {'diff': [9.404099999999957e-05, 9.431899999999896e-05, 9.433299999999853e-05, 9.418099999999874e-05, 9.431999999999843e-05, 9.43200000000019e-05, 9.381999999999793e-05, 9.43469999999981e-05, 9.466600...</msg>
<status status="PASS" starttime="20201115 23:02:20.955" endtime="20201115 23:02:20.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.972" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.971" endtime="20201115 23:02:20.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.975" level="INFO">VALUE: [9.404099999999957e-05, 9.431899999999896e-05, 9.433299999999853e-05, 9.418099999999874e-05, 9.431999999999843e-05, 9.43200000000019e-05, 9.381999999999793e-05, 9.43469999999981e-05, 9.46660000000002e-05, 9.395800000000162e-05, 9.376399999999965e-05, 9.40139999999999e-05, 9.450000000000083e-05, 9.380600000000183e-05, 9.411100000000089e-05, 9.45140000000004e-05, 9.380600000000183e-05, 9.445899999999813e-05, 9.41529999999996e-05, 9.431899999999896e-05, 9.420800000000187e-05, 9.400000000000033e-05, 9.466699999999967e-05, 9.433299999999853e-05, 9.416699999999917e-05, 9.38200000000014e-05, 9.400000000000033e-05, 9.45270000000005e-05, 9.46530000000001e-05, 9.430499999999939e-05, 9.449999999999736e-05, 9.41659999999997e-05, 9.416699999999917e-05, 9.420899999999788e-05, 9.463900000000053e-05, 9.41529999999996e-05, 9.43200000000019e-05, 9.437500000000071e-05, 9.434700000000157e-05, 9.39590000000011e-05, 9.461099999999792e-05, 9.398600000000076e-05, 9.450000000000083e-05, 9.450000000000083e-05, 9.377799999999922e-05, 9.44720000000017e-05, 9.462500000000096e-05, 9.413900000000003e-05, 9.44859999999978e-05, 9.40139999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.973" endtime="20201115 23:02:20.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.968" endtime="20201115 23:02:20.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.978" endtime="20201115 23:02:20.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.981" endtime="20201115 23:02:21.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.980" endtime="20201115 23:02:21.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.976" endtime="20201115 23:02:21.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.607" endtime="20201115 23:02:21.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.605" endtime="20201115 23:02:21.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.605" endtime="20201115 23:02:21.002"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.005" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.013" endtime="20201115 23:02:21.034"></status>
</kw>
<msg timestamp="20201115 23:02:21.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.012" endtime="20201115 23:02:21.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.036" endtime="20201115 23:02:21.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.038" endtime="20201115 23:02:21.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.009" endtime="20201115 23:02:21.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.007" endtime="20201115 23:02:21.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.047" endtime="20201115 23:02:21.333"></status>
</kw>
<msg timestamp="20201115 23:02:21.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025877486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025972389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.046" endtime="20201115 23:02:21.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025877486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025972389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.337" endtime="20201115 23:02:21.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.346" endtime="20201115 23:02:21.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.043" endtime="20201115 23:02:21.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.041" endtime="20201115 23:02:21.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.352" level="INFO">${RESULT} = [{'time': 0.025972389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.490299999999688e-05, 'source_diff': 9.490299999999688e-05}, {'time': 0.026075389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:21.349" endtime="20201115 23:02:21.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.367" level="INFO">${ACCURACY} = {'diff': [9.490299999999688e-05, 9.48330000000025e-05, 9.566700000000067e-05, 9.49859999999983e-05, 9.54729999999987e-05, 9.530599999999986e-05, 9.565199999999816e-05, 9.498600000000176e-05, 9.4847000...</msg>
<status status="PASS" starttime="20201115 23:02:21.354" endtime="20201115 23:02:21.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.372" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.371" endtime="20201115 23:02:21.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.375" level="INFO">VALUE: [9.490299999999688e-05, 9.48330000000025e-05, 9.566700000000067e-05, 9.49859999999983e-05, 9.54729999999987e-05, 9.530599999999986e-05, 9.565199999999816e-05, 9.498600000000176e-05, 9.484700000000207e-05, 9.531899999999996e-05, 9.481999999999893e-05, 9.531999999999943e-05, 9.480599999999936e-05, 9.550000000000183e-05, 9.51530000000006e-05, 9.56530000000011e-05, 9.531899999999996e-05, 9.51530000000006e-05, 9.500000000000133e-05, 9.549999999999836e-05, 9.49859999999983e-05, 9.563900000000153e-05, 9.512500000000146e-05, 9.51530000000006e-05, 9.54859999999988e-05, 9.48339999999985e-05, 9.518000000000026e-05, 9.498600000000176e-05, 9.515199999999766e-05, 9.516700000000017e-05, 9.498600000000176e-05, 9.547199999999922e-05, 9.550000000000183e-05, 9.5333999999999e-05, 9.57079999999999e-05, 9.56530000000011e-05, 9.498699999999777e-05, 9.54859999999988e-05, 9.548600000000226e-05, 9.56530000000011e-05, 9.481900000000293e-05, 9.49720000000022e-05, 9.566700000000067e-05, 9.54859999999988e-05, 9.54859999999988e-05, 9.5333999999999e-05, 9.531999999999943e-05, 9.547199999999922e-05, 9.566599999999773e-05, 9.547199999999922e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.373" endtime="20201115 23:02:21.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.368" endtime="20201115 23:02:21.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.378" endtime="20201115 23:02:21.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.381" endtime="20201115 23:02:21.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.380" endtime="20201115 23:02:21.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.376" endtime="20201115 23:02:21.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.005" endtime="20201115 23:02:21.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.004" endtime="20201115 23:02:21.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.003" endtime="20201115 23:02:21.402"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.405" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.413" endtime="20201115 23:02:21.432"></status>
</kw>
<msg timestamp="20201115 23:02:21.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.411" endtime="20201115 23:02:21.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.433" endtime="20201115 23:02:21.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.436" endtime="20201115 23:02:21.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.409" endtime="20201115 23:02:21.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.407" endtime="20201115 23:02:21.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.445" endtime="20201115 23:02:21.731"></status>
</kw>
<msg timestamp="20201115 23:02:21.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024839, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:21.444" endtime="20201115 23:02:21.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024839, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:21.735" endtime="20201115 23:02:21.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.744" endtime="20201115 23:02:21.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.441" endtime="20201115 23:02:21.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.439" endtime="20201115 23:02:21.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.751" level="INFO">${RESULT} = [{'time': 0.024839, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.623599999999954e-05, 'source_diff': 9.623599999999954e-05}, {'time': 0.024950042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:21.747" endtime="20201115 23:02:21.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.764" level="INFO">${ACCURACY} = {'diff': [9.623599999999954e-05, 9.6334e-05, 9.584799999999907e-05, 9.580600000000036e-05, 9.654100000000207e-05, 9.632000000000043e-05, 9.63470000000001e-05, 9.59859999999993e-05, 9.615299999999813e-...</msg>
<status status="PASS" starttime="20201115 23:02:21.752" endtime="20201115 23:02:21.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.769" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.768" endtime="20201115 23:02:21.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.771" level="INFO">VALUE: [9.623599999999954e-05, 9.6334e-05, 9.584799999999907e-05, 9.580600000000036e-05, 9.654100000000207e-05, 9.632000000000043e-05, 9.63470000000001e-05, 9.59859999999993e-05, 9.615299999999813e-05, 9.63059999999974e-05, 9.580600000000036e-05, 9.579200000000079e-05, 9.581999999999993e-05, 9.632000000000043e-05, 9.58469999999996e-05, 9.647300000000317e-05, 9.665199999999916e-05, 9.668000000000176e-05, 9.629099999999835e-05, 9.648600000000326e-05, 9.601399999999843e-05, 9.636099999999967e-05, 9.647200000000022e-05, 9.64859999999998e-05, 9.64859999999998e-05, 9.615299999999813e-05, 9.665199999999916e-05, 9.647200000000022e-05, 9.633300000000053e-05, 9.599999999999886e-05, 9.649999999999936e-05, 9.665299999999863e-05, 9.634799999999957e-05, 9.630600000000086e-05, 9.665299999999863e-05, 9.665299999999863e-05, 9.58469999999996e-05, 9.633300000000053e-05, 9.59859999999993e-05, 9.665299999999863e-05, 9.615299999999813e-05, 9.66669999999982e-05, 9.584799999999907e-05, 9.59859999999993e-05, 9.602699999999853e-05, 9.58339999999995e-05, 9.601399999999843e-05, 9.616599999999823e-05, 9.613900000000203e-05, 9.627799999999825e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.770" endtime="20201115 23:02:21.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.765" endtime="20201115 23:02:21.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.774" endtime="20201115 23:02:21.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.778" endtime="20201115 23:02:21.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.776" endtime="20201115 23:02:21.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.773" endtime="20201115 23:02:21.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.405" endtime="20201115 23:02:21.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.403" endtime="20201115 23:02:21.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.403" endtime="20201115 23:02:21.799"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.801" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.809" endtime="20201115 23:02:21.829"></status>
</kw>
<msg timestamp="20201115 23:02:21.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.808" endtime="20201115 23:02:21.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.830" endtime="20201115 23:02:21.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.833" endtime="20201115 23:02:21.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.805" endtime="20201115 23:02:21.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.803" endtime="20201115 23:02:21.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.847" endtime="20201115 23:02:22.133"></status>
</kw>
<msg timestamp="20201115 23:02:22.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024889958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024987181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.840" endtime="20201115 23:02:22.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024889958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024987181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.137" endtime="20201115 23:02:22.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.146" endtime="20201115 23:02:22.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.838" endtime="20201115 23:02:22.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.836" endtime="20201115 23:02:22.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.153" level="INFO">${RESULT} = [{'time': 0.024987181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.722300000000045e-05, 'source_diff': 9.722300000000045e-05}, {'time': 0.025094194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:22.149" endtime="20201115 23:02:22.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.166" level="INFO">${ACCURACY} = {'diff': [9.722300000000045e-05, 9.730499999999892e-05, 9.715199999999966e-05, 9.750000000000036e-05, 9.768100000000224e-05, 9.699999999999986e-05, 9.697200000000072e-05, 9.705499999999867e-05, 9.7486...</msg>
<status status="PASS" starttime="20201115 23:02:22.154" endtime="20201115 23:02:22.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.171" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.169" endtime="20201115 23:02:22.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.173" level="INFO">VALUE: [9.722300000000045e-05, 9.730499999999892e-05, 9.715199999999966e-05, 9.750000000000036e-05, 9.768100000000224e-05, 9.699999999999986e-05, 9.697200000000072e-05, 9.705499999999867e-05, 9.74860000000008e-05, 9.765299999999963e-05, 9.731900000000196e-05, 9.681900000000146e-05, 9.731899999999849e-05, 9.74860000000008e-05, 9.694399999999812e-05, 9.716700000000217e-05, 9.679199999999832e-05, 9.682000000000093e-05, 9.731999999999796e-05, 9.680600000000136e-05, 9.698700000000324e-05, 9.697200000000072e-05, 9.750000000000036e-05, 9.763900000000006e-05, 9.750000000000036e-05, 9.705500000000214e-05, 9.71530000000026e-05, 9.68059999999979e-05, 9.731999999999796e-05, 9.69730000000002e-05, 9.763900000000006e-05, 9.748599999999732e-05, 9.744400000000208e-05, 9.76669999999992e-05, 9.681900000000146e-05, 9.747199999999775e-05, 9.74860000000008e-05, 9.732000000000143e-05, 9.76669999999992e-05, 9.765299999999963e-05, 9.752700000000003e-05, 9.750000000000036e-05, 9.713800000000009e-05, 9.750000000000036e-05, 9.731900000000196e-05, 9.763900000000006e-05, 9.683300000000103e-05, 9.7334000000001e-05, 9.762500000000049e-05, 9.676399999999918e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.172" endtime="20201115 23:02:22.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.167" endtime="20201115 23:02:22.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.176" endtime="20201115 23:02:22.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.180" endtime="20201115 23:02:22.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.178" endtime="20201115 23:02:22.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.175" endtime="20201115 23:02:22.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.802" endtime="20201115 23:02:22.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.800" endtime="20201115 23:02:22.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.799" endtime="20201115 23:02:22.201"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.203" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.211" endtime="20201115 23:02:22.231"></status>
</kw>
<msg timestamp="20201115 23:02:22.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.210" endtime="20201115 23:02:22.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.233" endtime="20201115 23:02:22.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.235" endtime="20201115 23:02:22.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.207" endtime="20201115 23:02:22.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.205" endtime="20201115 23:02:22.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.245" endtime="20201115 23:02:22.531"></status>
</kw>
<msg timestamp="20201115 23:02:22.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024652569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024751319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.244" endtime="20201115 23:02:22.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024652569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024751319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.536" endtime="20201115 23:02:22.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.544" endtime="20201115 23:02:22.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.241" endtime="20201115 23:02:22.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.239" endtime="20201115 23:02:22.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.551" level="INFO">${RESULT} = [{'time': 0.024751319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.875000000000161e-05, 'source_diff': 9.875000000000161e-05}, {'time': 0.024859347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:22.547" endtime="20201115 23:02:22.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.564" level="INFO">${ACCURACY} = {'diff': [9.875000000000161e-05, 9.85410000000006e-05, 9.863900000000106e-05, 9.866600000000073e-05, 9.784699999999813e-05, 9.862499999999802e-05, 9.777799999999975e-05, 9.813900000000056e-05, 9.78330...</msg>
<status status="PASS" starttime="20201115 23:02:22.552" endtime="20201115 23:02:22.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.569" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.568" endtime="20201115 23:02:22.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.571" level="INFO">VALUE: [9.875000000000161e-05, 9.85410000000006e-05, 9.863900000000106e-05, 9.866600000000073e-05, 9.784699999999813e-05, 9.862499999999802e-05, 9.777799999999975e-05, 9.813900000000056e-05, 9.783300000000203e-05, 9.83470000000021e-05, 9.848599999999832e-05, 9.820799999999894e-05, 9.848700000000127e-05, 9.830600000000286e-05, 9.809700000000185e-05, 9.79860000000013e-05, 9.783300000000203e-05, 9.865300000000063e-05, 9.84860000000018e-05, 9.815300000000013e-05, 9.8334000000002e-05, 9.805499999999967e-05, 9.84730000000017e-05, 9.79730000000012e-05, 9.863799999999812e-05, 9.777799999999975e-05, 9.83470000000021e-05, 9.813900000000056e-05, 9.829199999999982e-05, 9.798599999999782e-05, 9.781999999999846e-05, 9.863900000000106e-05, 9.79999999999974e-05, 9.797299999999773e-05, 9.781899999999899e-05, 9.844399999999962e-05, 9.826400000000068e-05, 9.868099999999977e-05, 9.845799999999919e-05, 9.781900000000246e-05, 9.831999999999896e-05, 9.783399999999803e-05, 9.822200000000197e-05, 9.84999999999979e-05, 9.815200000000066e-05, 9.816599999999676e-05, 9.86800000000003e-05, 9.833299999999906e-05, 9.84860000000018e-05, 9.815300000000013e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.570" endtime="20201115 23:02:22.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.565" endtime="20201115 23:02:22.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.574" endtime="20201115 23:02:22.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.578" endtime="20201115 23:02:22.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.576" endtime="20201115 23:02:22.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.573" endtime="20201115 23:02:22.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.204" endtime="20201115 23:02:22.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.202" endtime="20201115 23:02:22.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.201" endtime="20201115 23:02:22.599"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.601" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.610" endtime="20201115 23:02:22.630"></status>
</kw>
<msg timestamp="20201115 23:02:22.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.609" endtime="20201115 23:02:22.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.632" endtime="20201115 23:02:22.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.635" endtime="20201115 23:02:22.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.606" endtime="20201115 23:02:22.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.603" endtime="20201115 23:02:22.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.644" endtime="20201115 23:02:22.929"></status>
</kw>
<msg timestamp="20201115 23:02:22.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025868292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025968014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.642" endtime="20201115 23:02:22.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025868292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025968014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.933" endtime="20201115 23:02:22.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.942" endtime="20201115 23:02:22.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.639" endtime="20201115 23:02:22.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.638" endtime="20201115 23:02:22.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.948" level="INFO">${RESULT} = [{'time': 0.025968014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.9722e-05, 'source_diff': 9.9722e-05}, {'time': 0.026073056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.93479999999991e-0...</msg>
<status status="PASS" starttime="20201115 23:02:22.945" endtime="20201115 23:02:22.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.963" level="INFO">${ACCURACY} = {'diff': [9.9722e-05, 9.93479999999991e-05, 9.933399999999953e-05, 9.96670000000012e-05, 9.965300000000163e-05, 9.930500000000092e-05, 9.9028000000001e-05, 9.966699999999773e-05, 9.947199999999976e-05...</msg>
<status status="PASS" starttime="20201115 23:02:22.949" endtime="20201115 23:02:22.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.968" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.967" endtime="20201115 23:02:22.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.970" level="INFO">VALUE: [9.9722e-05, 9.93479999999991e-05, 9.933399999999953e-05, 9.96670000000012e-05, 9.965300000000163e-05, 9.930500000000092e-05, 9.9028000000001e-05, 9.966699999999773e-05, 9.947199999999976e-05, 9.881899999999999e-05, 9.881999999999946e-05, 9.884699999999913e-05, 9.884800000000207e-05, 9.89860000000023e-05, 9.881999999999946e-05, 9.880500000000042e-05, 9.881899999999999e-05, 9.931900000000049e-05, 9.937499999999877e-05, 9.963899999999859e-05, 9.897199999999926e-05, 9.901400000000143e-05, 9.96670000000012e-05, 9.948599999999932e-05, 9.901400000000143e-05, 9.900000000000186e-05, 9.915300000000113e-05, 9.931900000000049e-05, 9.881899999999999e-05, 9.94999999999989e-05, 9.931999999999996e-05, 9.916699999999723e-05, 9.94999999999989e-05, 9.963899999999859e-05, 9.897299999999873e-05, 9.948599999999932e-05, 9.881899999999999e-05, 9.904200000000057e-05, 9.930500000000092e-05, 9.966699999999773e-05, 9.91670000000007e-05, 9.937499999999877e-05, 9.90549999999972e-05, 9.883399999999903e-05, 9.881999999999946e-05, 9.948599999999932e-05, 9.901400000000143e-05, 9.94999999999989e-05, 9.93609999999992e-05, 9.934699999999963e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.969" endtime="20201115 23:02:22.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.964" endtime="20201115 23:02:22.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.973" endtime="20201115 23:02:22.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.977" endtime="20201115 23:02:22.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.975" endtime="20201115 23:02:22.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.972" endtime="20201115 23:02:22.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.602" endtime="20201115 23:02:22.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.600" endtime="20201115 23:02:22.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.599" endtime="20201115 23:02:22.998"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.001" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.009" endtime="20201115 23:02:23.029"></status>
</kw>
<msg timestamp="20201115 23:02:23.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.007" endtime="20201115 23:02:23.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.031" endtime="20201115 23:02:23.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.033" endtime="20201115 23:02:23.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.005" endtime="20201115 23:02:23.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.003" endtime="20201115 23:02:23.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.042" endtime="20201115 23:02:23.328"></status>
</kw>
<msg timestamp="20201115 23:02:23.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025279486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025379389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.041" endtime="20201115 23:02:23.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025279486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025379389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.332" endtime="20201115 23:02:23.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.341" endtime="20201115 23:02:23.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.038" endtime="20201115 23:02:23.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.036" endtime="20201115 23:02:23.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.347" level="INFO">${RESULT} = [{'time': 0.025379389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.990299999999841e-05, 'source_diff': 9.990299999999841e-05}, {'time': 0.025486417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:23.344" endtime="20201115 23:02:23.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.361" level="INFO">${ACCURACY} = {'diff': [9.990299999999841e-05, 0.00010018100000000127, 0.00010001399999999896, 0.00010023600000000008, 0.0001003060000000014, 0.0001004999999999999, 9.99999999999994e-05, 0.0001004999999999999, 0.00...</msg>
<status status="PASS" starttime="20201115 23:02:23.348" endtime="20201115 23:02:23.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.365" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.364" endtime="20201115 23:02:23.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.368" level="INFO">VALUE: [9.990299999999841e-05, 0.00010018100000000127, 0.00010001399999999896, 0.00010023600000000008, 0.0001003060000000014, 0.0001004999999999999, 9.99999999999994e-05, 0.0001004999999999999, 0.00010012499999999952, 0.00010048599999999686, 0.00010015300000000213, 0.0001003199999999975, 0.00010033400000000053, 0.00010032000000000096, 0.00010013899999999909, 0.00010048600000000033, 0.00010065199999999969, 0.00010063899999999959, 0.00010020900000000041, 9.99999999999994e-05, 9.983300000000056e-05, 0.0001006670000000022, 0.00010015299999999866, 9.998599999999983e-05, 9.997299999999973e-05, 9.981899999999752e-05, 9.994400000000112e-05, 0.00010031900000000149, 9.998599999999983e-05, 0.0001003060000000014, 0.00010069500000000134, 0.0001006809999999983, 0.00010066699999999873, 9.98609999999997e-05, 0.00010015299999999866, 0.00010066600000000273, 0.00010066599999999926, 0.00010047199999999729, 0.00010065299999999916, 0.00010031900000000149, 0.00010048600000000033, 0.00010024999999999964, 0.0001004999999999999, 9.983400000000003e-05, 0.00010033299999999759, 0.00010016600000000223, 0.00010052799999999903, 0.00010000000000000286, 0.00010031899999999802, 0.00010062500000000002]</msg>
<status status="PASS" starttime="20201115 23:02:23.366" endtime="20201115 23:02:23.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.362" endtime="20201115 23:02:23.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.371" endtime="20201115 23:02:23.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.375" endtime="20201115 23:02:23.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.373" endtime="20201115 23:02:23.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.370" endtime="20201115 23:02:23.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.001" endtime="20201115 23:02:23.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.999" endtime="20201115 23:02:23.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.998" endtime="20201115 23:02:23.396"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.398" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.406" endtime="20201115 23:02:23.427"></status>
</kw>
<msg timestamp="20201115 23:02:23.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.405" endtime="20201115 23:02:23.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.428" endtime="20201115 23:02:23.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.431" endtime="20201115 23:02:23.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.402" endtime="20201115 23:02:23.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.400" endtime="20201115 23:02:23.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.440" endtime="20201115 23:02:23.725"></status>
</kw>
<msg timestamp="20201115 23:02:23.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024492597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024593986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.438" endtime="20201115 23:02:23.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024492597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024593986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.729" endtime="20201115 23:02:23.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.738" endtime="20201115 23:02:23.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.436" endtime="20201115 23:02:23.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.434" endtime="20201115 23:02:23.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.744" level="INFO">${RESULT} = [{'time': 0.024593986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010138900000000034, 'source_diff': 0.00010138900000000034}, {'time': 0.024704986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:23.741" endtime="20201115 23:02:23.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.757" level="INFO">${ACCURACY} = {'diff': [0.00010138900000000034, 0.00010113900000000009, 0.0001011670000000027, 0.00010144499999999862, 0.0001010000000000004, 0.00010098600000000083, 0.0001013199999999985, 0.00010166600000000026, 0...</msg>
<status status="PASS" starttime="20201115 23:02:23.745" endtime="20201115 23:02:23.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.762" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.761" endtime="20201115 23:02:23.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.765" level="INFO">VALUE: [0.00010138900000000034, 0.00010113900000000009, 0.0001011670000000027, 0.00010144499999999862, 0.0001010000000000004, 0.00010098600000000083, 0.0001013199999999985, 0.00010166600000000026, 0.0001015000000000009, 0.00010099999999999693, 0.00010118100000000227, 0.0001015000000000009, 0.00010147199999999829, 0.00010097200000000126, 0.00010140300000000338, 0.00010120799999999847, 0.00010079200000000232, 0.00010159699999999841, 0.00010148600000000133, 0.00010130499999999945, 0.00010144400000000262, 0.000101028000000003, 0.0001015419999999996, 0.00010152700000000056, 0.0001015000000000009, 0.00010083400000000103, 0.00010132000000000196, 0.00010133300000000206, 0.000101416, 0.00010079099999999938, 0.00010116699999999923, 0.00010148600000000133, 0.00010115299999999966, 0.00010166699999999973, 0.00010133400000000153, 0.000100819999999998, 0.00010095799999999822, 0.00010115200000000019, 0.00010098599999999736, 0.00010095800000000169, 0.00010148600000000133, 0.00010165300000000016, 0.00010098600000000083, 0.00010148600000000133, 0.00010165300000000016, 0.00010102799999999953, 0.00010098599999999736, 0.00010148600000000133, 0.00010166600000000026, 0.00010120900000000141]</msg>
<status status="PASS" starttime="20201115 23:02:23.763" endtime="20201115 23:02:23.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.758" endtime="20201115 23:02:23.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.768" endtime="20201115 23:02:23.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.772" endtime="20201115 23:02:23.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.770" endtime="20201115 23:02:23.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.766" endtime="20201115 23:02:23.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.399" endtime="20201115 23:02:23.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.397" endtime="20201115 23:02:23.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.396" endtime="20201115 23:02:23.793"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.795" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.803" endtime="20201115 23:02:23.823"></status>
</kw>
<msg timestamp="20201115 23:02:23.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.802" endtime="20201115 23:02:23.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.825" endtime="20201115 23:02:23.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.827" endtime="20201115 23:02:23.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.799" endtime="20201115 23:02:23.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.797" endtime="20201115 23:02:23.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.836" endtime="20201115 23:02:24.122"></status>
</kw>
<msg timestamp="20201115 23:02:24.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024549069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024651486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.835" endtime="20201115 23:02:24.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024549069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024651486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.127" endtime="20201115 23:02:24.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.135" endtime="20201115 23:02:24.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.832" endtime="20201115 23:02:24.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.830" endtime="20201115 23:02:24.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.141" level="INFO">${RESULT} = [{'time': 0.024651486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010241700000000048, 'source_diff': 0.00010241700000000048}, {'time': 0.024760472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:24.138" endtime="20201115 23:02:24.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.155" level="INFO">${ACCURACY} = {'diff': [0.00010241700000000048, 0.00010265299999999769, 0.00010236099999999873, 0.00010202800000000053, 0.00010216699999999676, 0.00010195899999999869, 0.00010262500000000202, 0.00010216700000000023...</msg>
<status status="PASS" starttime="20201115 23:02:24.143" endtime="20201115 23:02:24.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.160" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.159" endtime="20201115 23:02:24.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.162" level="INFO">VALUE: [0.00010241700000000048, 0.00010265299999999769, 0.00010236099999999873, 0.00010202800000000053, 0.00010216699999999676, 0.00010195899999999869, 0.00010262500000000202, 0.00010216700000000023, 0.00010215300000000066, 0.00010197199999999879, 0.00010248599999999886, 0.00010215300000000066, 0.00010215300000000066, 0.00010181899999999952, 0.000101819999999999, 0.00010227799999999732, 0.0001020000000000014, 0.00010274999999999868, 0.00010265199999999822, 0.00010248599999999886, 0.00010256999999999974, 0.00010199999999999793, 0.00010216700000000023, 0.00010245799999999972, 0.00010216700000000023, 0.0001023199999999995, 0.00010198699999999783, 0.00010248599999999886, 0.00010249999999999843, 0.00010215200000000119, 0.00010248599999999886, 0.00010180599999999942, 0.00010201400000000097, 0.00010233299999999959, 0.00010261100000000245, 0.00010247200000000276, 0.00010215300000000066, 0.00010213900000000109, 0.0001020420000000001, 0.0001025420000000006, 0.00010209699999999891, 0.00010247199999999929, 0.00010184699999999866, 0.00010248599999999886, 0.0001025000000000019, 0.00010243100000000005, 0.00010217999999999686, 0.00010215300000000066, 0.00010226299999999827, 0.00010215199999999772]</msg>
<status status="PASS" starttime="20201115 23:02:24.161" endtime="20201115 23:02:24.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.156" endtime="20201115 23:02:24.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.165" endtime="20201115 23:02:24.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.169" endtime="20201115 23:02:24.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.167" endtime="20201115 23:02:24.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.164" endtime="20201115 23:02:24.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.796" endtime="20201115 23:02:24.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.794" endtime="20201115 23:02:24.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.793" endtime="20201115 23:02:24.190"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.192" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.200" endtime="20201115 23:02:24.221"></status>
</kw>
<msg timestamp="20201115 23:02:24.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.199" endtime="20201115 23:02:24.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.223" endtime="20201115 23:02:24.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.225" endtime="20201115 23:02:24.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.196" endtime="20201115 23:02:24.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.194" endtime="20201115 23:02:24.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.234" endtime="20201115 23:02:24.520"></status>
</kw>
<msg timestamp="20201115 23:02:24.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025541569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025644778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.233" endtime="20201115 23:02:24.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025541569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025644778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.524" endtime="20201115 23:02:24.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.532" endtime="20201115 23:02:24.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.230" endtime="20201115 23:02:24.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.229" endtime="20201115 23:02:24.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.539" level="INFO">${RESULT} = [{'time': 0.025644778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010320899999999994, 'source_diff': 0.00010320899999999994}, {'time': 0.025762792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:24.536" endtime="20201115 23:02:24.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.553" level="INFO">${ACCURACY} = {'diff': [0.00010320899999999994, 0.00010365299999999869, 0.00010283300000000009, 0.00010319399999999743, 0.00010298599999999936, 0.00010287500000000227, 0.00010281900000000052, 0.00010275000000000215...</msg>
<status status="PASS" starttime="20201115 23:02:24.540" endtime="20201115 23:02:24.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.558" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.557" endtime="20201115 23:02:24.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.560" level="INFO">VALUE: [0.00010320899999999994, 0.00010365299999999869, 0.00010283300000000009, 0.00010319399999999743, 0.00010298599999999936, 0.00010287500000000227, 0.00010281900000000052, 0.00010275000000000215, 0.0001030139999999985, 0.00010315299999999819, 0.00010283399999999956, 0.00010313899999999862, 0.00010284699999999966, 0.00010283300000000009, 0.00010347200000000029, 0.00010315299999999819, 0.00010298600000000283, 0.00010297199999999979, 0.00010297199999999979, 0.00010309799999999938, 0.00010295899999999969, 0.00010365299999999869, 0.00010365299999999869, 0.00010366599999999879, 0.00010334700000000016, 0.00010281900000000052, 0.00010331899999999755, 0.00010355499999999823, 0.0001030000000000024, 0.00010316700000000123, 0.00010348599999999986, 0.00010302800000000154, 0.0001030139999999985, 0.00010359699999999694, 0.00010298599999999936, 0.00010280500000000095, 0.00010331900000000102, 0.00010282, 0.00010283399999999956, 0.00010348599999999986, 0.0001033200000000005, 0.00010365199999999922, 0.00010283300000000009, 0.00010331900000000102, 0.00010333300000000059, 0.00010286099999999923, 0.00010336099999999973, 0.0001033200000000005, 0.00010276399999999825, 0.00010348599999999986]</msg>
<status status="PASS" starttime="20201115 23:02:24.559" endtime="20201115 23:02:24.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.554" endtime="20201115 23:02:24.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.564" endtime="20201115 23:02:24.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.567" endtime="20201115 23:02:24.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.566" endtime="20201115 23:02:24.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.562" endtime="20201115 23:02:24.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.193" endtime="20201115 23:02:24.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.191" endtime="20201115 23:02:24.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.190" endtime="20201115 23:02:24.588"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.591" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.599" endtime="20201115 23:02:24.619"></status>
</kw>
<msg timestamp="20201115 23:02:24.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.597" endtime="20201115 23:02:24.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.621" endtime="20201115 23:02:24.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.624" endtime="20201115 23:02:24.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.595" endtime="20201115 23:02:24.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.593" endtime="20201115 23:02:24.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.633" endtime="20201115 23:02:24.917"></status>
</kw>
<msg timestamp="20201115 23:02:24.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024942569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02504725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:24.631" endtime="20201115 23:02:24.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024942569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02504725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:24.921" endtime="20201115 23:02:24.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.929" endtime="20201115 23:02:24.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.628" endtime="20201115 23:02:24.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.627" endtime="20201115 23:02:24.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.936" level="INFO">${RESULT} = [{'time': 0.02504725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010468099999999883, 'source_diff': 0.00010468099999999883}, {'time': 0.025166264, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:02:24.933" endtime="20201115 23:02:24.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.949" level="INFO">${ACCURACY} = {'diff': [0.00010468099999999883, 0.00010448600000000086, 0.00010398600000000036, 0.00010434800000000063, 0.00010383400000000056, 0.00010380599999999796, 0.0001043200000000015, 0.00010397199999999732,...</msg>
<status status="PASS" starttime="20201115 23:02:24.937" endtime="20201115 23:02:24.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.954" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.953" endtime="20201115 23:02:24.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.956" level="INFO">VALUE: [0.00010468099999999883, 0.00010448600000000086, 0.00010398600000000036, 0.00010434800000000063, 0.00010383400000000056, 0.00010380599999999796, 0.0001043200000000015, 0.00010397199999999732, 0.00010466700000000273, 0.00010380499999999848, 0.00010440199999999997, 0.00010448600000000086, 0.000103820000000001, 0.000103820000000001, 0.00010399999999999993, 0.00010379200000000185, 0.00010466600000000326, 0.00010452799999999957, 0.00010465300000000316, 0.00010448600000000086, 0.00010398600000000036, 0.00010415299999999919, 0.00010394500000000112, 0.00010398599999999689, 0.0001043200000000015, 0.00010448600000000086, 0.00010448600000000086, 0.00010380499999999848, 0.00010466700000000273, 0.00010380500000000195, 0.00010461100000000098, 0.00010448599999999739, 0.00010398600000000036, 0.00010411100000000048, 0.00010381999999999753, 0.00010450000000000043, 0.00010415199999999972, 0.00010413900000000309, 0.00010413899999999962, 0.0001046810000000023, 0.00010458299999999837, 0.00010463900000000012, 0.00010445899999999772, 0.000103820000000001, 0.00010447299999999729, 0.00010448600000000086, 0.00010386100000000023, 0.00010433300000000159, 0.00010463900000000012, 0.00010433299999999812]</msg>
<status status="PASS" starttime="20201115 23:02:24.955" endtime="20201115 23:02:24.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.950" endtime="20201115 23:02:24.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.959" endtime="20201115 23:02:24.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.963" endtime="20201115 23:02:24.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.961" endtime="20201115 23:02:24.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.958" endtime="20201115 23:02:24.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.591" endtime="20201115 23:02:24.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.589" endtime="20201115 23:02:24.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.589" endtime="20201115 23:02:24.984"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.986" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.995" endtime="20201115 23:02:25.015"></status>
</kw>
<msg timestamp="20201115 23:02:25.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.993" endtime="20201115 23:02:25.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.016" endtime="20201115 23:02:25.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.019" endtime="20201115 23:02:25.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.991" endtime="20201115 23:02:25.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.988" endtime="20201115 23:02:25.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.028" endtime="20201115 23:02:25.315"></status>
</kw>
<msg timestamp="20201115 23:02:25.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024640417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024745639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.027" endtime="20201115 23:02:25.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024640417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024745639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.319" endtime="20201115 23:02:25.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.327" endtime="20201115 23:02:25.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.024" endtime="20201115 23:02:25.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.023" endtime="20201115 23:02:25.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.334" level="INFO">${RESULT} = [{'time': 0.024745639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010522199999999857, 'source_diff': 0.00010522199999999857}, {'time': 0.024859653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:25.331" endtime="20201115 23:02:25.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.347" level="INFO">${ACCURACY} = {'diff': [0.00010522199999999857, 0.00010547199999999882, 0.00010477799999999982, 0.00010515300000000019, 0.00010531899999999955, 0.00010566600000000079, 0.00010531899999999955, 0.00010565300000000069...</msg>
<status status="PASS" starttime="20201115 23:02:25.335" endtime="20201115 23:02:25.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.352" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.351" endtime="20201115 23:02:25.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.354" level="INFO">VALUE: [0.00010522199999999857, 0.00010547199999999882, 0.00010477799999999982, 0.00010515300000000019, 0.00010531899999999955, 0.00010566600000000079, 0.00010531899999999955, 0.00010565300000000069, 0.00010516700000000323, 0.00010566700000000026, 0.000104820000000002, 0.00010481999999999853, 0.00010530600000000293, 0.00010515200000000072, 0.00010566600000000079, 0.00010499999999999746, 0.00010483299999999862, 0.00010565300000000069, 0.00010484699999999819, 0.00010495799999999875, 0.00010500000000000093, 0.0001053200000000025, 0.000105514000000001, 0.00010488900000000037, 0.00010549999999999796, 0.00010480499999999948, 0.00010481899999999905, 0.00010516699999999976, 0.0001053339999999986, 0.00010548599999999839, 0.00010484800000000113, 0.00010566600000000079, 0.00010517999999999986, 0.00010566600000000079, 0.00010516699999999976, 0.00010531899999999955, 0.0001055559999999997, 0.00010497199999999832, 0.00010498600000000136, 0.00010483400000000156, 0.00010488900000000037, 0.00010498700000000083, 0.00010497199999999832, 0.00010533300000000259, 0.00010516699999999976, 0.00010566700000000026, 0.00010554200000000014, 0.00010498600000000136, 0.00010529199999999989, 0.00010565300000000069]</msg>
<status status="PASS" starttime="20201115 23:02:25.353" endtime="20201115 23:02:25.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.348" endtime="20201115 23:02:25.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.357" endtime="20201115 23:02:25.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.361" endtime="20201115 23:02:25.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.359" endtime="20201115 23:02:25.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.356" endtime="20201115 23:02:25.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.987" endtime="20201115 23:02:25.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.985" endtime="20201115 23:02:25.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.984" endtime="20201115 23:02:25.382"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.384" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.393" endtime="20201115 23:02:25.413"></status>
</kw>
<msg timestamp="20201115 23:02:25.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.392" endtime="20201115 23:02:25.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.415" endtime="20201115 23:02:25.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.417" endtime="20201115 23:02:25.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.389" endtime="20201115 23:02:25.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.386" endtime="20201115 23:02:25.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.428" endtime="20201115 23:02:25.713"></status>
</kw>
<msg timestamp="20201115 23:02:25.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025001833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025107903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.426" endtime="20201115 23:02:25.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025001833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025107903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.717" endtime="20201115 23:02:25.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.725" endtime="20201115 23:02:25.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.424" endtime="20201115 23:02:25.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.421" endtime="20201115 23:02:25.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.732" level="INFO">${RESULT} = [{'time': 0.025107903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010606999999999978, 'source_diff': 0.00010606999999999978}, {'time': 0.025224903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:25.729" endtime="20201115 23:02:25.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.745" level="INFO">${ACCURACY} = {'diff': [0.00010606999999999978, 0.00010632000000000003, 0.00010616700000000076, 0.00010584699999999919, 0.00010648599999999939, 0.0001060140000000015, 0.00010647199999999982, 0.00010661099999999951,...</msg>
<status status="PASS" starttime="20201115 23:02:25.733" endtime="20201115 23:02:25.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.750" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.749" endtime="20201115 23:02:25.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.752" level="INFO">VALUE: [0.00010606999999999978, 0.00010632000000000003, 0.00010616700000000076, 0.00010584699999999919, 0.00010648599999999939, 0.0001060140000000015, 0.00010647199999999982, 0.00010661099999999951, 0.00010581900000000005, 0.00010637499999999883, 0.00010666700000000126, 0.00010598599999999889, 0.00010649999999999896, 0.00010615300000000119, 0.00010616599999999782, 0.00010613900000000162, 0.00010613900000000162, 0.00010633300000000012, 0.00010598600000000236, 0.00010649999999999896, 0.00010650000000000243, 0.00010588900000000137, 0.00010633300000000012, 0.00010615200000000172, 0.00010598599999999889, 0.00010581900000000005, 0.00010649999999999896, 0.00010648599999999939, 0.00010580599999999996, 0.00010598599999999889, 0.00010601299999999855, 0.00010618000000000086, 0.000106514000000002, 0.00010616600000000129, 0.00010618000000000086, 0.00010666699999999779, 0.00010599999999999846, 0.00010583299999999962, 0.00010666699999999779, 0.00010616700000000076, 0.00010597299999999879, 0.00010583299999999962, 0.000106514000000002, 0.00010593000000000061, 0.00010580500000000048, 0.00010583299999999962, 0.00010648599999999939, 0.00010580599999999996, 0.00010615300000000119, 0.00010665300000000169]</msg>
<status status="PASS" starttime="20201115 23:02:25.751" endtime="20201115 23:02:25.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.746" endtime="20201115 23:02:25.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.755" endtime="20201115 23:02:25.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.759" endtime="20201115 23:02:25.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.757" endtime="20201115 23:02:25.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.754" endtime="20201115 23:02:25.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.385" endtime="20201115 23:02:25.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.383" endtime="20201115 23:02:25.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.382" endtime="20201115 23:02:25.780"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.783" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.791" endtime="20201115 23:02:25.812"></status>
</kw>
<msg timestamp="20201115 23:02:25.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.790" endtime="20201115 23:02:25.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.813" endtime="20201115 23:02:25.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.816" endtime="20201115 23:02:25.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.787" endtime="20201115 23:02:25.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.785" endtime="20201115 23:02:25.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.825" endtime="20201115 23:02:26.110"></status>
</kw>
<msg timestamp="20201115 23:02:26.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025395347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025502556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.823" endtime="20201115 23:02:26.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025395347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025502556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.114" endtime="20201115 23:02:26.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.122" endtime="20201115 23:02:26.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.821" endtime="20201115 23:02:26.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.819" endtime="20201115 23:02:26.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.129" level="INFO">${RESULT} = [{'time': 0.025502556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010720900000000047, 'source_diff': 0.00010720900000000047}, {'time': 0.025616583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:26.125" endtime="20201115 23:02:26.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.143" level="INFO">${ACCURACY} = {'diff': [0.00010720900000000047, 0.00010734699999999722, 0.00010698599999999989, 0.00010748599999999692, 0.00010765299999999922, 0.00010768099999999836, 0.00010716699999999829, 0.00010699999999999946...</msg>
<status status="PASS" starttime="20201115 23:02:26.130" endtime="20201115 23:02:26.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.148" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.147" endtime="20201115 23:02:26.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.150" level="INFO">VALUE: [0.00010720900000000047, 0.00010734699999999722, 0.00010698599999999989, 0.00010748599999999692, 0.00010765299999999922, 0.00010768099999999836, 0.00010716699999999829, 0.00010699999999999946, 0.00010679199999999792, 0.0001068340000000001, 0.00010766599999999932, 0.00010715199999999925, 0.00010748600000000039, 0.00010715300000000219, 0.00010683300000000062, 0.00010747200000000082, 0.00010748600000000039, 0.00010732000000000103, 0.00010680600000000096, 0.00010697299999999979, 0.00010715200000000272, 0.00010715299999999872, 0.00010711100000000001, 0.00010763899999999965, 0.00010697200000000032, 0.00010768099999999836, 0.0001068340000000001, 0.00010680600000000096, 0.00010745800000000125, 0.00010766599999999932, 0.00010766600000000279, 0.00010700000000000293, 0.00010684700000000019, 0.00010733299999999765, 0.00010699999999999946, 0.00010684799999999967, 0.00010698599999999989, 0.00010713899999999915, 0.00010744399999999821, 0.00010747200000000082, 0.0001075829999999979, 0.00010681900000000105, 0.00010715299999999872, 0.00010765299999999922, 0.00010716700000000176, 0.00010702700000000259, 0.00010680600000000096, 0.00010686099999999976, 0.00010680500000000148, 0.00010733299999999765]</msg>
<status status="PASS" starttime="20201115 23:02:26.149" endtime="20201115 23:02:26.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.144" endtime="20201115 23:02:26.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.154" endtime="20201115 23:02:26.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.157" endtime="20201115 23:02:26.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.155" endtime="20201115 23:02:26.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.152" endtime="20201115 23:02:26.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.783" endtime="20201115 23:02:26.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.782" endtime="20201115 23:02:26.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.781" endtime="20201115 23:02:26.178"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.181" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.189" endtime="20201115 23:02:26.209"></status>
</kw>
<msg timestamp="20201115 23:02:26.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.187" endtime="20201115 23:02:26.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.211" endtime="20201115 23:02:26.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.213" endtime="20201115 23:02:26.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.185" endtime="20201115 23:02:26.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.183" endtime="20201115 23:02:26.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.223" endtime="20201115 23:02:26.509"></status>
</kw>
<msg timestamp="20201115 23:02:26.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024788, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024896375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:26.221" endtime="20201115 23:02:26.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024788, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024896375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:26.513" endtime="20201115 23:02:26.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.521" endtime="20201115 23:02:26.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.218" endtime="20201115 23:02:26.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.217" endtime="20201115 23:02:26.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.527" level="INFO">${RESULT} = [{'time': 0.024896375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010837499999999736, 'source_diff': 0.00010837499999999736}, {'time': 0.025013389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:26.524" endtime="20201115 23:02:26.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.541" level="INFO">${ACCURACY} = {'diff': [0.00010837499999999736, 0.00010777799999999935, 0.00010831999999999856, 0.00010848600000000139, 0.00010848700000000086, 0.00010865200000000075, 0.00010831899999999908, 0.00010845800000000225...</msg>
<status status="PASS" starttime="20201115 23:02:26.528" endtime="20201115 23:02:26.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.545" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.544" endtime="20201115 23:02:26.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.548" level="INFO">VALUE: [0.00010837499999999736, 0.00010777799999999935, 0.00010831999999999856, 0.00010848600000000139, 0.00010848700000000086, 0.00010865200000000075, 0.00010831899999999908, 0.00010845800000000225, 0.00010830500000000298, 0.00010815299999999972, 0.00010848600000000139, 0.00010815299999999972, 0.00010784700000000119, 0.00010847300000000129, 0.00010830499999999951, 0.00010863900000000065, 0.00010865300000000022, 0.00010798600000000089, 0.00010798600000000089, 0.00010865300000000022, 0.00010841699999999954, 0.00010811100000000101, 0.00010848700000000086, 0.00010833300000000212, 0.00010866599999999685, 0.00010863900000000065, 0.00010786100000000076, 0.0001077500000000002, 0.00010781999999999806, 0.00010798600000000089, 0.00010797300000000079, 0.00010847299999999782, 0.00010831900000000255, 0.00010865300000000022, 0.00010781900000000205, 0.00010833300000000212, 0.00010865300000000022, 0.00010783299999999815, 0.00010798599999999742, 0.00010849999999999749, 0.00010834700000000169, 0.00010800000000000046, 0.00010798600000000089, 0.00010848600000000139, 0.00010783299999999815, 0.00010831899999999908, 0.00010848600000000139, 0.00010812500000000058, 0.00010848600000000139, 0.00010781999999999806]</msg>
<status status="PASS" starttime="20201115 23:02:26.546" endtime="20201115 23:02:26.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.542" endtime="20201115 23:02:26.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.551" endtime="20201115 23:02:26.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.555" endtime="20201115 23:02:26.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.553" endtime="20201115 23:02:26.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.550" endtime="20201115 23:02:26.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.181" endtime="20201115 23:02:26.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.179" endtime="20201115 23:02:26.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.178" endtime="20201115 23:02:26.576"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.578" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.587" endtime="20201115 23:02:26.606"></status>
</kw>
<msg timestamp="20201115 23:02:26.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.585" endtime="20201115 23:02:26.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.607" endtime="20201115 23:02:26.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.610" endtime="20201115 23:02:26.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.582" endtime="20201115 23:02:26.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.580" endtime="20201115 23:02:26.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.619" endtime="20201115 23:02:26.904"></status>
</kw>
<msg timestamp="20201115 23:02:26.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024455236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024564625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.618" endtime="20201115 23:02:26.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024455236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024564625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.909" endtime="20201115 23:02:26.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.917" endtime="20201115 23:02:26.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.615" endtime="20201115 23:02:26.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.613" endtime="20201115 23:02:26.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.923" level="INFO">${RESULT} = [{'time': 0.024564625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010938899999999793, 'source_diff': 0.00010938899999999793}, {'time': 0.024682639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:26.920" endtime="20201115 23:02:26.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.942" level="INFO">${ACCURACY} = {'diff': [0.00010938899999999793, 0.00010963899999999818, 0.00010883399999999863, 0.00010900000000000146, 0.00010886099999999829, 0.00010948599999999892, 0.00010884700000000219, 0.00010931900000000008...</msg>
<status status="PASS" starttime="20201115 23:02:26.929" endtime="20201115 23:02:26.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.946" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.945" endtime="20201115 23:02:26.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.949" level="INFO">VALUE: [0.00010938899999999793, 0.00010963899999999818, 0.00010883399999999863, 0.00010900000000000146, 0.00010886099999999829, 0.00010948599999999892, 0.00010884700000000219, 0.00010931900000000008, 0.00010916700000000029, 0.00010916700000000029, 0.00010916700000000029, 0.00010933399999999913, 0.00010897299999999832, 0.00010883399999999863, 0.00010900000000000146, 0.00010963899999999818, 0.00010951399999999806, 0.00010965299999999775, 0.00010945799999999978, 0.00010968100000000036, 0.00010933399999999913, 0.00010930600000000346, 0.00010966700000000079, 0.00010933299999999965, 0.00010883299999999915, 0.00010899999999999799, 0.00010916700000000029, 0.00010951400000000153, 0.00010916700000000029, 0.00010883399999999863, 0.00010966700000000079, 0.00010881999999999906, 0.00010948700000000186, 0.00010968000000000089, 0.0001095280000000011, 0.00010948599999999892, 0.00010931900000000008, 0.00010880599999999949, 0.00010948599999999892, 0.00010898599999999842, 0.00010915199999999778, 0.00010930599999999999, 0.00010897199999999885, 0.00010941600000000107, 0.00010915300000000072, 0.00010915299999999725, 0.00010882000000000253, 0.00010965300000000122, 0.0001090280000000006, 0.00010898600000000189]</msg>
<status status="PASS" starttime="20201115 23:02:26.947" endtime="20201115 23:02:26.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.943" endtime="20201115 23:02:26.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.952" endtime="20201115 23:02:26.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.955" endtime="20201115 23:02:26.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.954" endtime="20201115 23:02:26.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.950" endtime="20201115 23:02:26.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.579" endtime="20201115 23:02:26.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.577" endtime="20201115 23:02:26.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.576" endtime="20201115 23:02:26.976"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.979" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.987" endtime="20201115 23:02:27.007"></status>
</kw>
<msg timestamp="20201115 23:02:27.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.985" endtime="20201115 23:02:27.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.009" endtime="20201115 23:02:27.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.012" endtime="20201115 23:02:27.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.983" endtime="20201115 23:02:27.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.981" endtime="20201115 23:02:27.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.021" endtime="20201115 23:02:27.307"></status>
</kw>
<msg timestamp="20201115 23:02:27.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024692972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024803514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.019" endtime="20201115 23:02:27.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024692972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024803514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.311" endtime="20201115 23:02:27.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.320" endtime="20201115 23:02:27.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.017" endtime="20201115 23:02:27.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.015" endtime="20201115 23:02:27.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.327" level="INFO">${RESULT} = [{'time': 0.024803514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001105419999999982, 'source_diff': 0.0001105419999999982}, {'time': 0.024926528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.324" endtime="20201115 23:02:27.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.341" level="INFO">${ACCURACY} = {'diff': [0.0001105419999999982, 0.00011032000000000056, 0.00011066699999999832, 0.00011048599999999992, 0.00011063799999999971, 0.00010983300000000015, 0.00010980500000000101, 0.00010983300000000015,...</msg>
<status status="PASS" starttime="20201115 23:02:27.328" endtime="20201115 23:02:27.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.345" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.344" endtime="20201115 23:02:27.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.348" level="INFO">VALUE: [0.0001105419999999982, 0.00011032000000000056, 0.00011066699999999832, 0.00011048599999999992, 0.00011063799999999971, 0.00010983300000000015, 0.00010980500000000101, 0.00010983300000000015, 0.00010998600000000289, 0.00010998599999999942, 0.00010998599999999942, 0.00010995899999999975, 0.00010980600000000049, 0.00010999999999999899, 0.00010987499999999886, 0.00011033300000000065, 0.0001104029999999985, 0.00010997199999999985, 0.00011066699999999832, 0.00010982000000000006, 0.00010998599999999942, 0.00011033300000000065, 0.00011016599999999835, 0.00011047200000000035, 0.00011059700000000047, 0.00011063899999999918, 0.00010997199999999985, 0.00011048599999999992, 0.00010983399999999963, 0.00011032000000000056, 0.00010998699999999889, 0.00011065199999999928, 0.00011047200000000035, 0.00011037499999999936, 0.00011031900000000108, 0.00011047200000000035, 0.00010998600000000289, 0.00010982000000000006, 0.00010999999999999899, 0.00011049999999999949, 0.00011015199999999878, 0.00011045800000000078, 0.00011016699999999782, 0.00010981900000000058, 0.00010995800000000028, 0.00011030600000000099, 0.00011030599999999752, 0.00010984699999999972, 0.00011048699999999939, 0.00011031899999999761]</msg>
<status status="PASS" starttime="20201115 23:02:27.347" endtime="20201115 23:02:27.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.342" endtime="20201115 23:02:27.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.351" endtime="20201115 23:02:27.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.355" endtime="20201115 23:02:27.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.353" endtime="20201115 23:02:27.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.349" endtime="20201115 23:02:27.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.979" endtime="20201115 23:02:27.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.977" endtime="20201115 23:02:27.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.977" endtime="20201115 23:02:27.376"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.378" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.387" endtime="20201115 23:02:27.409"></status>
</kw>
<msg timestamp="20201115 23:02:27.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.385" endtime="20201115 23:02:27.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.410" endtime="20201115 23:02:27.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.413" endtime="20201115 23:02:27.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.382" endtime="20201115 23:02:27.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.380" endtime="20201115 23:02:27.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.423" endtime="20201115 23:02:27.708"></status>
</kw>
<msg timestamp="20201115 23:02:27.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025902222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026013069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.421" endtime="20201115 23:02:27.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025902222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026013069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.713" endtime="20201115 23:02:27.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.721" endtime="20201115 23:02:27.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.418" endtime="20201115 23:02:27.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.416" endtime="20201115 23:02:27.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.728" level="INFO">${RESULT} = [{'time': 0.026013069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011084700000000072, 'source_diff': 0.00011084700000000072}, {'time': 0.026133083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:27.724" endtime="20201115 23:02:27.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.742" level="INFO">${ACCURACY} = {'diff': [0.00011084700000000072, 0.00011116600000000282, 0.00011165299999999975, 0.00011165299999999975, 0.00011133300000000165, 0.00011113899999999968, 0.00011116699999999882, 0.00011098600000000042...</msg>
<status status="PASS" starttime="20201115 23:02:27.729" endtime="20201115 23:02:27.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.747" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.746" endtime="20201115 23:02:27.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.749" level="INFO">VALUE: [0.00011084700000000072, 0.00011116600000000282, 0.00011165299999999975, 0.00011165299999999975, 0.00011133300000000165, 0.00011113899999999968, 0.00011116699999999882, 0.00011098600000000042, 0.00011101300000000008, 0.00011083300000000115, 0.00011163900000000018, 0.000111596999999998, 0.00011099999999999999, 0.00011165299999999975, 0.00011115300000000272, 0.00011148600000000092, 0.00011148600000000092, 0.00011149999999999702, 0.00011119399999999849, 0.00011130499999999904, 0.00011163900000000018, 0.00011133300000000165, 0.00011081899999999811, 0.00011132000000000156, 0.00011166700000000279, 0.00011170799999999856, 0.00011133400000000113, 0.00011101400000000303, 0.00011101399999999956, 0.00011099999999999999, 0.00011133300000000165, 0.00011134699999999775, 0.00011081999999999759, 0.00011133399999999766, 0.00011131999999999809, 0.00011133400000000113, 0.00011126300000000033, 0.00011116599999999935, 0.00011081900000000158, 0.00011116700000000229, 0.00011150000000000049, 0.00011079199999999845, 0.00011166699999999932, 0.00011116699999999882, 0.00011147299999999735, 0.00011131999999999809, 0.00011115199999999631, 0.00011099999999999999, 0.0001117090000000015, 0.00011116699999999535]</msg>
<status status="PASS" starttime="20201115 23:02:27.748" endtime="20201115 23:02:27.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.743" endtime="20201115 23:02:27.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.752" endtime="20201115 23:02:27.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.756" endtime="20201115 23:02:27.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.754" endtime="20201115 23:02:27.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.751" endtime="20201115 23:02:27.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.379" endtime="20201115 23:02:27.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.377" endtime="20201115 23:02:27.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.376" endtime="20201115 23:02:27.777"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.779" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.787" endtime="20201115 23:02:27.808"></status>
</kw>
<msg timestamp="20201115 23:02:27.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.786" endtime="20201115 23:02:27.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.810" endtime="20201115 23:02:27.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.813" endtime="20201115 23:02:27.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.783" endtime="20201115 23:02:27.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.781" endtime="20201115 23:02:27.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.822" endtime="20201115 23:02:28.107"></status>
</kw>
<msg timestamp="20201115 23:02:28.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024493556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024606014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.820" endtime="20201115 23:02:28.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024493556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024606014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.112" endtime="20201115 23:02:28.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.120" endtime="20201115 23:02:28.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.818" endtime="20201115 23:02:28.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.816" endtime="20201115 23:02:28.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.126" level="INFO">${RESULT} = [{'time': 0.024606014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011245799999999931, 'source_diff': 0.00011245799999999931}, {'time': 0.024724042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:28.123" endtime="20201115 23:02:28.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.140" level="INFO">${ACCURACY} = {'diff': [0.00011245799999999931, 0.00011266700000000032, 0.00011184799999999773, 0.00011184699999999825, 0.00011233300000000265, 0.00011226400000000081, 0.00011180499999999954, 0.0001125420000000002,...</msg>
<status status="PASS" starttime="20201115 23:02:28.127" endtime="20201115 23:02:28.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.144" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.143" endtime="20201115 23:02:28.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.147" level="INFO">VALUE: [0.00011245799999999931, 0.00011266700000000032, 0.00011184799999999773, 0.00011184699999999825, 0.00011233300000000265, 0.00011226400000000081, 0.00011180499999999954, 0.0001125420000000002, 0.00011248600000000192, 0.00011266700000000032, 0.00011247199999999888, 0.00011198600000000142, 0.00011263900000000118, 0.00011233299999999918, 0.00011183299999999868, 0.00011198600000000142, 0.00011251400000000106, 0.00011198600000000142, 0.00011251400000000106, 0.00011233400000000213, 0.00011183400000000163, 0.00011266700000000032, 0.00011180499999999954, 0.00011267999999999695, 0.00011249999999999802, 0.00011234699999999875, 0.00011200000000000099, 0.00011266700000000032, 0.00011247199999999888, 0.00011216699999999982, 0.00011199999999999752, 0.00011217999999999992, 0.00011198599999999795, 0.00011266700000000032, 0.00011231899999999961, 0.00011262500000000161, 0.00011266700000000032, 0.00011265300000000075, 0.00011198600000000142, 0.00011249999999999802, 0.00011181899999999911, 0.00011215199999999731, 0.00011213900000000068, 0.00011248599999999845, 0.00011265300000000075, 0.00011215300000000025, 0.00011248599999999845, 0.00011199999999999752, 0.00011213900000000068, 0.00011198600000000142]</msg>
<status status="PASS" starttime="20201115 23:02:28.145" endtime="20201115 23:02:28.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.141" endtime="20201115 23:02:28.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.150" endtime="20201115 23:02:28.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.153" endtime="20201115 23:02:28.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.152" endtime="20201115 23:02:28.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.148" endtime="20201115 23:02:28.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.780" endtime="20201115 23:02:28.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.778" endtime="20201115 23:02:28.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.777" endtime="20201115 23:02:28.174"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.177" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.186" endtime="20201115 23:02:28.206"></status>
</kw>
<msg timestamp="20201115 23:02:28.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.184" endtime="20201115 23:02:28.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.207" endtime="20201115 23:02:28.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.210" endtime="20201115 23:02:28.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.181" endtime="20201115 23:02:28.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.179" endtime="20201115 23:02:28.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.219" endtime="20201115 23:02:28.504"></status>
</kw>
<msg timestamp="20201115 23:02:28.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025193597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025306917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.217" endtime="20201115 23:02:28.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025193597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025306917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.508" endtime="20201115 23:02:28.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.516" endtime="20201115 23:02:28.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.215" endtime="20201115 23:02:28.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.213" endtime="20201115 23:02:28.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.523" level="INFO">${RESULT} = [{'time': 0.025306917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011332000000000009, 'source_diff': 0.00011332000000000009}, {'time': 0.025429931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:28.520" endtime="20201115 23:02:28.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.536" level="INFO">${ACCURACY} = {'diff': [0.00011332000000000009, 0.00011299999999999852, 0.00011300000000000199, 0.00011316599999999788, 0.00011301399999999809, 0.00011297199999999938, 0.00011356900000000086, 0.00011313900000000168...</msg>
<status status="PASS" starttime="20201115 23:02:28.524" endtime="20201115 23:02:28.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.541" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.540" endtime="20201115 23:02:28.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.543" level="INFO">VALUE: [0.00011332000000000009, 0.00011299999999999852, 0.00011300000000000199, 0.00011316599999999788, 0.00011301399999999809, 0.00011297199999999938, 0.00011356900000000086, 0.00011313900000000168, 0.00011300000000000199, 0.00011349999999999902, 0.00011313899999999821, 0.0001134160000000016, 0.00011340199999999856, 0.00011276399999999784, 0.00011312500000000211, 0.00011301400000000156, 0.00011332000000000009, 0.00011280600000000002, 0.00011365300000000175, 0.00011365300000000175, 0.00011330500000000104, 0.00011365199999999881, 0.00011308299999999993, 0.00011347199999999988, 0.00011365299999999828, 0.0001134169999999976, 0.00011330600000000052, 0.00011280600000000002, 0.00011281999999999959, 0.00011365199999999881, 0.00011297199999999938, 0.00011365300000000175, 0.00011362499999999914, 0.00011281900000000011, 0.00011315300000000125, 0.00011333399999999966, 0.00011280600000000002, 0.00011313899999999821, 0.00011347199999999988, 0.00011313899999999821, 0.00011366700000000132, 0.00011333300000000018, 0.00011333300000000018, 0.00011284699999999925, 0.00011365300000000175, 0.00011318000000000092, 0.00011316600000000135, 0.00011283299999999968, 0.00011316600000000135, 0.00011368100000000089]</msg>
<status status="PASS" starttime="20201115 23:02:28.542" endtime="20201115 23:02:28.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.537" endtime="20201115 23:02:28.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.546" endtime="20201115 23:02:28.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.550" endtime="20201115 23:02:28.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.548" endtime="20201115 23:02:28.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.545" endtime="20201115 23:02:28.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.177" endtime="20201115 23:02:28.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.176" endtime="20201115 23:02:28.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.175" endtime="20201115 23:02:28.571"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.574" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.582" endtime="20201115 23:02:28.602"></status>
</kw>
<msg timestamp="20201115 23:02:28.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.580" endtime="20201115 23:02:28.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.604" endtime="20201115 23:02:28.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.606" endtime="20201115 23:02:28.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.578" endtime="20201115 23:02:28.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.576" endtime="20201115 23:02:28.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.615" endtime="20201115 23:02:28.901"></status>
</kw>
<msg timestamp="20201115 23:02:28.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024560639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024675208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.614" endtime="20201115 23:02:28.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024560639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024675208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.905" endtime="20201115 23:02:28.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.913" endtime="20201115 23:02:28.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.611" endtime="20201115 23:02:28.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.609" endtime="20201115 23:02:28.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.920" level="INFO">${RESULT} = [{'time': 0.024675208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011456900000000186, 'source_diff': 0.00011456900000000186}, {'time': 0.024797278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:28.916" endtime="20201115 23:02:28.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.933" level="INFO">${ACCURACY} = {'diff': [0.00011456900000000186, 0.00011415299999999878, 0.00011448600000000045, 0.00011465299999999928, 0.00011401399999999909, 0.00011450000000000002, 0.00011413899999999921, 0.00011465299999999928...</msg>
<status status="PASS" starttime="20201115 23:02:28.921" endtime="20201115 23:02:28.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.937" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.936" endtime="20201115 23:02:28.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.940" level="INFO">VALUE: [0.00011456900000000186, 0.00011415299999999878, 0.00011448600000000045, 0.00011465299999999928, 0.00011401399999999909, 0.00011450000000000002, 0.00011413899999999921, 0.00011465299999999928, 0.00011400000000000299, 0.00011381899999999764, 0.00011436100000000032, 0.00011418100000000139, 0.00011381900000000111, 0.00011434700000000075, 0.00011433399999999719, 0.00011447200000000088, 0.00011398599999999995, 0.00011383299999999721, 0.0001140970000000005, 0.00011431900000000161, 0.00011451399999999959, 0.00011448600000000045, 0.00011450000000000002, 0.00011420799999999759, 0.00011465300000000275, 0.00011383300000000068, 0.00011381899999999764, 0.00011434700000000075, 0.00011431900000000161, 0.00011429199999999848, 0.00011448600000000045, 0.00011382000000000059, 0.00011395900000000028, 0.00011465299999999928, 0.00011450000000000002, 0.00011463800000000024, 0.00011416600000000235, 0.00011433299999999771, 0.00011381900000000111, 0.00011381900000000111, 0.00011381999999999712, 0.00011430600000000152, 0.00011432000000000109, 0.00011466599999999938, 0.00011465199999999981, 0.00011448600000000045, 0.00011400000000000299, 0.00011416699999999835, 0.00011450000000000002, 0.00011450000000000002]</msg>
<status status="PASS" starttime="20201115 23:02:28.938" endtime="20201115 23:02:28.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.934" endtime="20201115 23:02:28.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.943" endtime="20201115 23:02:28.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.947" endtime="20201115 23:02:28.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.945" endtime="20201115 23:02:28.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.942" endtime="20201115 23:02:28.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.574" endtime="20201115 23:02:28.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.573" endtime="20201115 23:02:28.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.572" endtime="20201115 23:02:28.968"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.970" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.979" endtime="20201115 23:02:29.000"></status>
</kw>
<msg timestamp="20201115 23:02:29.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.977" endtime="20201115 23:02:29.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.002" endtime="20201115 23:02:29.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.004" endtime="20201115 23:02:29.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.974" endtime="20201115 23:02:29.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.972" endtime="20201115 23:02:29.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.013" endtime="20201115 23:02:29.298"></status>
</kw>
<msg timestamp="20201115 23:02:29.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0254335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025548764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:29.012" endtime="20201115 23:02:29.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0254335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025548764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:29.303" endtime="20201115 23:02:29.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.311" endtime="20201115 23:02:29.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.009" endtime="20201115 23:02:29.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.007" endtime="20201115 23:02:29.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.317" level="INFO">${RESULT} = [{'time': 0.025548764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011526400000000034, 'source_diff': 0.00011526400000000034}, {'time': 0.02566975, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:02:29.314" endtime="20201115 23:02:29.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.332" level="INFO">${ACCURACY} = {'diff': [0.00011526400000000034, 0.00011566700000000332, 0.00011515299999999978, 0.00011515299999999978, 0.00011565300000000028, 0.00011538900000000046, 0.00011498599999999748, 0.00011533299999999871...</msg>
<status status="PASS" starttime="20201115 23:02:29.318" endtime="20201115 23:02:29.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.336" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.335" endtime="20201115 23:02:29.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.339" level="INFO">VALUE: [0.00011526400000000034, 0.00011566700000000332, 0.00011515299999999978, 0.00011515299999999978, 0.00011565300000000028, 0.00011538900000000046, 0.00011498599999999748, 0.00011533299999999871, 0.00011531899999999914, 0.00011483299999999821, 0.00011498600000000095, 0.00011515300000000325, 0.00011497199999999791, 0.00011561100000000157, 0.00011495900000000128, 0.00011554199999999973, 0.00011498599999999748, 0.00011562499999999767, 0.00011498600000000095, 0.00011500000000000052, 0.00011498599999999748, 0.00011567999999999995, 0.00011561100000000157, 0.00011500000000000052, 0.00011498600000000095, 0.00011547199999999841, 0.00011498600000000095, 0.00011548599999999798, 0.00011565300000000028, 0.00011533399999999819, 0.00011486099999999735, 0.00011483399999999769, 0.00011522199999999816, 0.00011487499999999692, 0.00011500000000000052, 0.00011530499999999957, 0.00011549999999999755, 0.00011565300000000028, 0.00011563900000000071, 0.00011531999999999862, 0.00011548700000000092, 0.00011480499999999907, 0.00011504199999999923, 0.00011498600000000095, 0.00011480499999999907, 0.00011482000000000159, 0.00011548600000000145, 0.00011531999999999515, 0.00011516699999999935, 0.00011531899999999567]</msg>
<status status="PASS" starttime="20201115 23:02:29.338" endtime="20201115 23:02:29.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.333" endtime="20201115 23:02:29.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.343" endtime="20201115 23:02:29.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.346" endtime="20201115 23:02:29.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.344" endtime="20201115 23:02:29.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.341" endtime="20201115 23:02:29.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.971" endtime="20201115 23:02:29.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.969" endtime="20201115 23:02:29.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.968" endtime="20201115 23:02:29.367"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.370" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.378" endtime="20201115 23:02:29.399"></status>
</kw>
<msg timestamp="20201115 23:02:29.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.377" endtime="20201115 23:02:29.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.400" endtime="20201115 23:02:29.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.403" endtime="20201115 23:02:29.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.374" endtime="20201115 23:02:29.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.372" endtime="20201115 23:02:29.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.412" endtime="20201115 23:02:29.698"></status>
</kw>
<msg timestamp="20201115 23:02:29.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024913125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025029694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.410" endtime="20201115 23:02:29.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024913125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025029694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.702" endtime="20201115 23:02:29.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.710" endtime="20201115 23:02:29.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.408" endtime="20201115 23:02:29.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.406" endtime="20201115 23:02:29.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.717" level="INFO">${RESULT} = [{'time': 0.025029694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001165690000000004, 'source_diff': 0.0001165690000000004}, {'time': 0.025153694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:29.714" endtime="20201115 23:02:29.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.731" level="INFO">${ACCURACY} = {'diff': [0.0001165690000000004, 0.00011666600000000138, 0.00011601399999999762, 0.00011599999999999805, 0.00011581899999999964, 0.00011631900000000014, 0.00011665300000000128, 0.00011633399999999919,...</msg>
<status status="PASS" starttime="20201115 23:02:29.718" endtime="20201115 23:02:29.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.735" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.734" endtime="20201115 23:02:29.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.738" level="INFO">VALUE: [0.0001165690000000004, 0.00011666600000000138, 0.00011601399999999762, 0.00011599999999999805, 0.00011581899999999964, 0.00011631900000000014, 0.00011665300000000128, 0.00011633399999999919, 0.00011631999999999962, 0.00011602799999999719, 0.00011665199999999834, 0.00011631900000000014, 0.00011648600000000245, 0.0001159300000000002, 0.00011650000000000202, 0.00011597199999999891, 0.00011648599999999898, 0.00011668000000000095, 0.00011665300000000128, 0.00011666600000000138, 0.00011638900000000146, 0.00011668100000000042, 0.00011648599999999898, 0.00011633399999999919, 0.00011669499999999999, 0.00011634799999999876, 0.00011616600000000088, 0.00011666599999999791, 0.00011583299999999921, 0.00011618000000000045, 0.00011631900000000014, 0.00011598599999999848, 0.00011598600000000195, 0.00011650000000000202, 0.00011648600000000245, 0.00011576400000000084, 0.00011648599999999898, 0.00011666700000000085, 0.00011597200000000238, 0.00011652799999999769, 0.00011647200000000288, 0.00011648599999999898, 0.00011604100000000075, 0.00011665300000000128, 0.00011579199999999998, 0.00011633299999999971, 0.00011599999999999805, 0.00011633299999999971, 0.00011633299999999971, 0.00011581999999999912]</msg>
<status status="PASS" starttime="20201115 23:02:29.736" endtime="20201115 23:02:29.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.732" endtime="20201115 23:02:29.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.741" endtime="20201115 23:02:29.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.744" endtime="20201115 23:02:29.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.743" endtime="20201115 23:02:29.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.739" endtime="20201115 23:02:29.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.371" endtime="20201115 23:02:29.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.369" endtime="20201115 23:02:29.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.368" endtime="20201115 23:02:29.765"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.768" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.776" endtime="20201115 23:02:29.796"></status>
</kw>
<msg timestamp="20201115 23:02:29.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.775" endtime="20201115 23:02:29.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.798" endtime="20201115 23:02:29.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.800" endtime="20201115 23:02:29.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.772" endtime="20201115 23:02:29.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.770" endtime="20201115 23:02:29.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.809" endtime="20201115 23:02:30.095"></status>
</kw>
<msg timestamp="20201115 23:02:30.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024564958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024682306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.808" endtime="20201115 23:02:30.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024564958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024682306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.099" endtime="20201115 23:02:30.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.107" endtime="20201115 23:02:30.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.805" endtime="20201115 23:02:30.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.804" endtime="20201115 23:02:30.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.114" level="INFO">${RESULT} = [{'time': 0.024682306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011734799999999976, 'source_diff': 0.00011734799999999976}, {'time': 0.024808319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:30.111" endtime="20201115 23:02:30.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.127" level="INFO">${ACCURACY} = {'diff': [0.00011734799999999976, 0.00011683300000000021, 0.00011715200000000231, 0.00011700000000000252, 0.00011731899999999768, 0.00011713900000000221, 0.00011748599999999998, 0.00011748599999999998...</msg>
<status status="PASS" starttime="20201115 23:02:30.115" endtime="20201115 23:02:30.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.132" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.131" endtime="20201115 23:02:30.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.134" level="INFO">VALUE: [0.00011734799999999976, 0.00011683300000000021, 0.00011715200000000231, 0.00011700000000000252, 0.00011731899999999768, 0.00011713900000000221, 0.00011748599999999998, 0.00011748599999999998, 0.00011762499999999967, 0.00011683399999999969, 0.00011745900000000031, 0.00011730500000000157, 0.00011713900000000221, 0.00011716699999999788, 0.00011718099999999745, 0.00011715300000000178, 0.00011749999999999955, 0.00011766700000000185, 0.00011686100000000282, 0.00011766600000000238, 0.00011716599999999841, 0.00011765300000000228, 0.00011768100000000142, 0.00011763899999999924, 0.00011748599999999998, 0.00011715300000000178, 0.00011682000000000012, 0.00011732000000000062, 0.00011715199999999884, 0.00011766599999999891, 0.00011765299999999881, 0.00011681900000000064, 0.00011713900000000221, 0.00011699999999999905, 0.00011683399999999969, 0.00011748599999999998, 0.00011692999999999773, 0.00011699999999999905, 0.00011699999999999905, 0.00011749999999999955, 0.00011681900000000064, 0.00011713900000000221, 0.00011748599999999998, 0.00011716700000000135, 0.00011765299999999881, 0.00011715199999999884, 0.00011748599999999998, 0.00011766700000000185, 0.00011765300000000228, 0.00011751399999999912]</msg>
<status status="PASS" starttime="20201115 23:02:30.133" endtime="20201115 23:02:30.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.128" endtime="20201115 23:02:30.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.137" endtime="20201115 23:02:30.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.141" endtime="20201115 23:02:30.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.139" endtime="20201115 23:02:30.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.136" endtime="20201115 23:02:30.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.768" endtime="20201115 23:02:30.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.767" endtime="20201115 23:02:30.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.766" endtime="20201115 23:02:30.162"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.164" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.173" endtime="20201115 23:02:30.193"></status>
</kw>
<msg timestamp="20201115 23:02:30.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.171" endtime="20201115 23:02:30.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.195" endtime="20201115 23:02:30.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.197" endtime="20201115 23:02:30.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.168" endtime="20201115 23:02:30.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.166" endtime="20201115 23:02:30.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.207" endtime="20201115 23:02:30.493"></status>
</kw>
<msg timestamp="20201115 23:02:30.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024673375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024791764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.205" endtime="20201115 23:02:30.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024673375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024791764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.497" endtime="20201115 23:02:30.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.506" endtime="20201115 23:02:30.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.202" endtime="20201115 23:02:30.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.201" endtime="20201115 23:02:30.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.512" level="INFO">${RESULT} = [{'time': 0.024791764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000118389, 'source_diff': 0.000118389}, {'time': 0.024919792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000118166999999...</msg>
<status status="PASS" starttime="20201115 23:02:30.509" endtime="20201115 23:02:30.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.526" level="INFO">${ACCURACY} = {'diff': [0.000118389, 0.00011816699999999888, 0.00011865299999999981, 0.00011830599999999858, 0.00011780600000000155, 0.00011781899999999818, 0.00011852799999999969, 0.00011818100000000192, 0.0001184...</msg>
<status status="PASS" starttime="20201115 23:02:30.513" endtime="20201115 23:02:30.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.530" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.529" endtime="20201115 23:02:30.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.533" level="INFO">VALUE: [0.000118389, 0.00011816699999999888, 0.00011865299999999981, 0.00011830599999999858, 0.00011780600000000155, 0.00011781899999999818, 0.00011852799999999969, 0.00011818100000000192, 0.00011848599999999751, 0.00011783400000000069, 0.00011816699999999888, 0.00011834699999999782, 0.00011800000000000005, 0.0001183049999999991, 0.00011800000000000005, 0.00011781900000000164, 0.00011795799999999787, 0.00011831999999999815, 0.00011826399999999987, 0.00011834700000000128, 0.00011782000000000112, 0.00011847200000000141, 0.00011833299999999825, 0.00011834700000000128, 0.00011801399999999962, 0.00011816699999999888, 0.00011801399999999962, 0.00011855499999999936, 0.00011780600000000155, 0.00011848600000000098, 0.00011865200000000034, 0.00011781899999999818, 0.00011783300000000121, 0.00011859699999999807, 0.00011779200000000198, 0.00011865299999999981, 0.00011794500000000124, 0.00011800000000000005, 0.00011866599999999991, 0.00011816599999999941, 0.00011815299999999931, 0.00011779200000000198, 0.00011851400000000012, 0.00011801399999999962, 0.00011818100000000192, 0.00011816699999999888, 0.00011831899999999868, 0.00011831899999999868, 0.00011866699999999938, 0.00011781900000000164]</msg>
<status status="PASS" starttime="20201115 23:02:30.531" endtime="20201115 23:02:30.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.526" endtime="20201115 23:02:30.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.536" endtime="20201115 23:02:30.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.539" endtime="20201115 23:02:30.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.538" endtime="20201115 23:02:30.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.534" endtime="20201115 23:02:30.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.165" endtime="20201115 23:02:30.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.163" endtime="20201115 23:02:30.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.162" endtime="20201115 23:02:30.560"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.563" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.571" endtime="20201115 23:02:30.593"></status>
</kw>
<msg timestamp="20201115 23:02:30.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.570" endtime="20201115 23:02:30.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.594" endtime="20201115 23:02:30.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.597" endtime="20201115 23:02:30.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.567" endtime="20201115 23:02:30.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.565" endtime="20201115 23:02:30.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.606" endtime="20201115 23:02:30.892"></status>
</kw>
<msg timestamp="20201115 23:02:30.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025604375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025723903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.605" endtime="20201115 23:02:30.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025604375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025723903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.896" endtime="20201115 23:02:30.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.904" endtime="20201115 23:02:30.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.602" endtime="20201115 23:02:30.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.600" endtime="20201115 23:02:30.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.911" level="INFO">${RESULT} = [{'time': 0.025723903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011952800000000069, 'source_diff': 0.00011952800000000069}, {'time': 0.025849917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:30.908" endtime="20201115 23:02:30.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.925" level="INFO">${ACCURACY} = {'diff': [0.00011952800000000069, 0.00011947299999999841, 0.00011950000000000155, 0.00011963900000000124, 0.00011915300000000031, 0.00011883300000000221, 0.00011965300000000081, 0.00011968099999999995...</msg>
<status status="PASS" starttime="20201115 23:02:30.912" endtime="20201115 23:02:30.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.930" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.929" endtime="20201115 23:02:30.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.932" level="INFO">VALUE: [0.00011952800000000069, 0.00011947299999999841, 0.00011950000000000155, 0.00011963900000000124, 0.00011915300000000031, 0.00011883300000000221, 0.00011965300000000081, 0.00011968099999999995, 0.00011966700000000038, 0.00011959800000000201, 0.00011965300000000081, 0.00011898599999999801, 0.00011933299999999925, 0.00011966700000000038, 0.00011913900000000074, 0.00011884699999999832, 0.00011883399999999822, 0.00011916699999999988, 0.00011968000000000048, 0.00011887500000000092, 0.00011949999999999808, 0.00011915300000000031, 0.00011934699999999882, 0.00011931899999999968, 0.00011883400000000169, 0.00011883400000000169, 0.00011929200000000001, 0.00011915300000000031, 0.00011947200000000241, 0.00011950000000000155, 0.00011899999999999758, 0.00011900000000000105, 0.00011934699999999882, 0.00011948600000000198, 0.00011966700000000038, 0.00011931999999999915, 0.00011881899999999918, 0.00011948600000000198, 0.00011891600000000016, 0.00011948600000000198, 0.00011905499999999986, 0.00011949999999999808, 0.00011968099999999995, 0.00011883300000000221, 0.00011967999999999701, 0.00011884699999999832, 0.00011966699999999691, 0.00011916699999999641, 0.00011963899999999777, 0.00011900000000000105]</msg>
<status status="PASS" starttime="20201115 23:02:30.931" endtime="20201115 23:02:30.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.926" endtime="20201115 23:02:30.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.936" endtime="20201115 23:02:30.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.939" endtime="20201115 23:02:30.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.937" endtime="20201115 23:02:30.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.934" endtime="20201115 23:02:30.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.563" endtime="20201115 23:02:30.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.562" endtime="20201115 23:02:30.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.561" endtime="20201115 23:02:30.960"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.963" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.971" endtime="20201115 23:02:30.992"></status>
</kw>
<msg timestamp="20201115 23:02:30.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.970" endtime="20201115 23:02:30.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.994" endtime="20201115 23:02:30.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.996" endtime="20201115 23:02:30.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.967" endtime="20201115 23:02:30.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.965" endtime="20201115 23:02:30.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.005" endtime="20201115 23:02:31.293"></status>
</kw>
<msg timestamp="20201115 23:02:31.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025072417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025192986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.004" endtime="20201115 23:02:31.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025072417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025192986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.297" endtime="20201115 23:02:31.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.305" endtime="20201115 23:02:31.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.001" endtime="20201115 23:02:31.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.999" endtime="20201115 23:02:31.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.312" level="INFO">${RESULT} = [{'time': 0.025192986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012056900000000093, 'source_diff': 0.00012056900000000093}, {'time': 0.025318028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:31.308" endtime="20201115 23:02:31.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.325" level="INFO">${ACCURACY} = {'diff': [0.00012056900000000093, 0.00012019500000000002, 0.00012045800000000037, 0.00011999999999999858, 0.00011995899999999934, 0.00012016699999999741, 0.00012038899999999852, 0.00012065199999999887...</msg>
<status status="PASS" starttime="20201115 23:02:31.313" endtime="20201115 23:02:31.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.329" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.328" endtime="20201115 23:02:31.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.332" level="INFO">VALUE: [0.00012056900000000093, 0.00012019500000000002, 0.00012045800000000037, 0.00011999999999999858, 0.00011995899999999934, 0.00012016699999999741, 0.00012038899999999852, 0.00012065199999999887, 0.00012047199999999994, 0.00011991600000000116, 0.00012065299999999834, 0.00012051399999999865, 0.00011995899999999934, 0.00012034800000000276, 0.00012017999999999751, 0.00012066600000000191, 0.00012066599999999844, 0.00012029100000000154, 0.00012013900000000174, 0.00012065300000000181, 0.00012063900000000224, 0.00012016700000000088, 0.00012045899999999984, 0.00012032000000000015, 0.00011981900000000018, 0.00012001400000000162, 0.00012000000000000205, 0.00012066699999999791, 0.00011984699999999932, 0.00012036099999999939, 0.00012015299999999784, 0.00011984699999999932, 0.00011981900000000018, 0.00011998599999999901, 0.00011986099999999889, 0.00011984699999999932, 0.00012065300000000181, 0.00011980600000000008, 0.00012032000000000015, 0.00012051300000000265, 0.00012033300000000025, 0.00012066599999999844, 0.00012070800000000062, 0.00012031900000000068, 0.00012066700000000138, 0.00012065299999999834, 0.00011998599999999901, 0.00012016700000000088, 0.0001198050000000006, 0.00011981900000000018]</msg>
<status status="PASS" starttime="20201115 23:02:31.331" endtime="20201115 23:02:31.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.326" endtime="20201115 23:02:31.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.335" endtime="20201115 23:02:31.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.339" endtime="20201115 23:02:31.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.337" endtime="20201115 23:02:31.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.333" endtime="20201115 23:02:31.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.963" endtime="20201115 23:02:31.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.961" endtime="20201115 23:02:31.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.961" endtime="20201115 23:02:31.360"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.363" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.371" endtime="20201115 23:02:31.391"></status>
</kw>
<msg timestamp="20201115 23:02:31.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.369" endtime="20201115 23:02:31.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.393" endtime="20201115 23:02:31.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.396" endtime="20201115 23:02:31.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.367" endtime="20201115 23:02:31.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.365" endtime="20201115 23:02:31.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.405" endtime="20201115 23:02:31.691"></status>
</kw>
<msg timestamp="20201115 23:02:31.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024619125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02474, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 23:02:31.404" endtime="20201115 23:02:31.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024619125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02474, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 23:02:31.695" endtime="20201115 23:02:31.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.703" endtime="20201115 23:02:31.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.401" endtime="20201115 23:02:31.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.399" endtime="20201115 23:02:31.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.710" level="INFO">${RESULT} = [{'time': 0.02474, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012087500000000292, 'source_diff': 0.00012087500000000292}, {'time': 0.024868014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:31.706" endtime="20201115 23:02:31.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.723" level="INFO">${ACCURACY} = {'diff': [0.00012087500000000292, 0.00012165299999999934, 0.0001211249999999997, 0.00012166699999999891, 0.00012148699999999998, 0.00012165199999999987, 0.00012165199999999987, 0.00012084700000000032,...</msg>
<status status="PASS" starttime="20201115 23:02:31.711" endtime="20201115 23:02:31.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.727" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.726" endtime="20201115 23:02:31.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.730" level="INFO">VALUE: [0.00012087500000000292, 0.00012165299999999934, 0.0001211249999999997, 0.00012166699999999891, 0.00012148699999999998, 0.00012165199999999987, 0.00012165199999999987, 0.00012084700000000032, 0.0001213189999999982, 0.00012101399999999915, 0.00012082000000000065, 0.00012082000000000065, 0.00012116700000000188, 0.0001212769999999995, 0.0001209579999999974, 0.00012083300000000075, 0.00012116700000000188, 0.00012143099999999823, 0.00012098600000000001, 0.00012082000000000065, 0.00012151299999999671, 0.00012148699999999998, 0.00012165199999999987, 0.0001212090000000006, 0.00012116699999999841, 0.00012101399999999915, 0.00012166699999999891, 0.00012101399999999915, 0.00012143099999999823, 0.00012081999999999718, 0.00012165199999999987, 0.00012151399999999965, 0.00012168099999999848, 0.00012115299999999884, 0.00012166700000000238, 0.00012134800000000029, 0.00012082000000000065, 0.00012099999999999958, 0.00012133300000000125, 0.00012163899999999978, 0.00012165299999999934, 0.00012111100000000014, 0.00012150000000000008, 0.00012147200000000094, 0.00012080600000000108, 0.00012133400000000072, 0.00012116599999999894, 0.00012084700000000032, 0.00012151400000000312, 0.00012159700000000107]</msg>
<status status="PASS" starttime="20201115 23:02:31.728" endtime="20201115 23:02:31.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.724" endtime="20201115 23:02:31.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.733" endtime="20201115 23:02:31.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.737" endtime="20201115 23:02:31.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.735" endtime="20201115 23:02:31.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.732" endtime="20201115 23:02:31.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.363" endtime="20201115 23:02:31.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.361" endtime="20201115 23:02:31.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.361" endtime="20201115 23:02:31.758"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.760" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.768" endtime="20201115 23:02:31.789"></status>
</kw>
<msg timestamp="20201115 23:02:31.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.767" endtime="20201115 23:02:31.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.790" endtime="20201115 23:02:31.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.793" endtime="20201115 23:02:31.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.764" endtime="20201115 23:02:31.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.762" endtime="20201115 23:02:31.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.802" endtime="20201115 23:02:32.103"></status>
</kw>
<msg timestamp="20201115 23:02:32.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024344389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024466278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.800" endtime="20201115 23:02:32.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024344389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024466278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.107" endtime="20201115 23:02:32.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.115" endtime="20201115 23:02:32.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.798" endtime="20201115 23:02:32.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.796" endtime="20201115 23:02:32.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.122" level="INFO">${RESULT} = [{'time': 0.024466278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012188900000000003, 'source_diff': 0.00012188900000000003}, {'time': 0.024595292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:32.118" endtime="20201115 23:02:32.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.135" level="INFO">${ACCURACY} = {'diff': [0.00012188900000000003, 0.00012180600000000208, 0.00012233299999999878, 0.0001224860000000015, 0.00012198600000000101, 0.0001224860000000015, 0.0001224999999999976, 0.00012199999999999711, 0...</msg>
<status status="PASS" starttime="20201115 23:02:32.122" endtime="20201115 23:02:32.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.139" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.138" endtime="20201115 23:02:32.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.146" level="INFO">VALUE: [0.00012188900000000003, 0.00012180600000000208, 0.00012233299999999878, 0.0001224860000000015, 0.00012198600000000101, 0.0001224860000000015, 0.0001224999999999976, 0.00012199999999999711, 0.00012183400000000122, 0.00012218100000000245, 0.00012182000000000165, 0.00012198600000000101, 0.00012180499999999914, 0.0001223189999999992, 0.00012265299999999688, 0.00012256900000000293, 0.00012215299999999985, 0.00012231999999999868, 0.00012200000000000058, 0.00012204200000000276, 0.0001221250000000007, 0.00012215299999999985, 0.00012184700000000132, 0.00012206899999999896, 0.00012200000000000058, 0.00012247200000000194, 0.00012233399999999825, 0.00012265200000000087, 0.00012266599999999697, 0.00012198600000000101, 0.00012233300000000225, 0.00012216699999999941, 0.00012184700000000132, 0.00012215299999999985, 0.00012244399999999933, 0.00012198700000000048, 0.00012215200000000037, 0.00012216599999999994, 0.0001224999999999976, 0.00012266699999999991, 0.00012200000000000058, 0.00012233399999999825, 0.00012225000000000083, 0.00012180499999999914, 0.0001223189999999992, 0.00012255600000000283, 0.00012265300000000035, 0.00012265300000000035, 0.00012265299999999688, 0.00012236099999999792]</msg>
<status status="PASS" starttime="20201115 23:02:32.140" endtime="20201115 23:02:32.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.136" endtime="20201115 23:02:32.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.150" endtime="20201115 23:02:32.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.153" endtime="20201115 23:02:32.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.151" endtime="20201115 23:02:32.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.148" endtime="20201115 23:02:32.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.761" endtime="20201115 23:02:32.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.759" endtime="20201115 23:02:32.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.758" endtime="20201115 23:02:32.174"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.176" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.185" endtime="20201115 23:02:32.207"></status>
</kw>
<msg timestamp="20201115 23:02:32.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.183" endtime="20201115 23:02:32.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.208" endtime="20201115 23:02:32.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.211" endtime="20201115 23:02:32.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.180" endtime="20201115 23:02:32.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.178" endtime="20201115 23:02:32.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.220" endtime="20201115 23:02:32.508"></status>
</kw>
<msg timestamp="20201115 23:02:32.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025550528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025674083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.218" endtime="20201115 23:02:32.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025550528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025674083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.513" endtime="20201115 23:02:32.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.521" endtime="20201115 23:02:32.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.216" endtime="20201115 23:02:32.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.214" endtime="20201115 23:02:32.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.527" level="INFO">${RESULT} = [{'time': 0.025674083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012355500000000089, 'source_diff': 0.00012355500000000089}, {'time': 0.025812097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:32.524" endtime="20201115 23:02:32.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.542" level="INFO">${ACCURACY} = {'diff': [0.00012355500000000089, 0.0001233190000000002, 0.00012338900000000153, 0.000122986000000002, 0.00012281999999999918, 0.00012347200000000294, 0.00012301300000000168, 0.00012316599999999747, 0...</msg>
<status status="PASS" starttime="20201115 23:02:32.529" endtime="20201115 23:02:32.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.547" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.546" endtime="20201115 23:02:32.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.549" level="INFO">VALUE: [0.00012355500000000089, 0.0001233190000000002, 0.00012338900000000153, 0.000122986000000002, 0.00012281999999999918, 0.00012347200000000294, 0.00012301300000000168, 0.00012316599999999747, 0.00012370800000000015, 0.00012366700000000092, 0.00012316700000000042, 0.00012313900000000128, 0.00012366700000000092, 0.0001236389999999983, 0.0001231389999999978, 0.00012330599999999664, 0.000123680000000001, 0.00012336099999999892, 0.0001234999999999986, 0.00012366700000000092, 0.0001231250000000017, 0.00012347199999999947, 0.00012333399999999925, 0.0001231389999999978, 0.00012295800000000287, 0.00012283300000000275, 0.00012283299999999928, 0.00012333299999999978, 0.00012282000000000265, 0.00012316700000000042, 0.00012348599999999904, 0.00012338899999999806, 0.00012348599999999904, 0.00012298599999999854, 0.00012368100000000048, 0.00012300000000000158, 0.00012301400000000115, 0.00012281999999999918, 0.00012315300000000085, 0.00012351399999999818, 0.00012298599999999854, 0.00012283299999999928, 0.00012308299999999953, 0.00012316700000000042, 0.00012319499999999955, 0.00012283400000000222, 0.00012318099999999998, 0.00012315200000000137, 0.00012281900000000318, 0.00012348599999999904]</msg>
<status status="PASS" starttime="20201115 23:02:32.548" endtime="20201115 23:02:32.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.543" endtime="20201115 23:02:32.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.552" endtime="20201115 23:02:32.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.556" endtime="20201115 23:02:32.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.554" endtime="20201115 23:02:32.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.551" endtime="20201115 23:02:32.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.177" endtime="20201115 23:02:32.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.175" endtime="20201115 23:02:32.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.174" endtime="20201115 23:02:32.577"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.579" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.587" endtime="20201115 23:02:32.609"></status>
</kw>
<msg timestamp="20201115 23:02:32.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.586" endtime="20201115 23:02:32.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.610" endtime="20201115 23:02:32.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.613" endtime="20201115 23:02:32.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.583" endtime="20201115 23:02:32.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.581" endtime="20201115 23:02:32.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.622" endtime="20201115 23:02:32.908"></status>
</kw>
<msg timestamp="20201115 23:02:32.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024769153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024893556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.620" endtime="20201115 23:02:32.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024769153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024893556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.912" endtime="20201115 23:02:32.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.920" endtime="20201115 23:02:32.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.618" endtime="20201115 23:02:32.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.616" endtime="20201115 23:02:32.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.927" level="INFO">${RESULT} = [{'time': 0.024893556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001244030000000021, 'source_diff': 0.0001244030000000021}, {'time': 0.025028583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:32.924" endtime="20201115 23:02:32.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.940" level="INFO">${ACCURACY} = {'diff': [0.0001244030000000021, 0.00012433300000000078, 0.00012415200000000237, 0.0001243190000000012, 0.00012398599999999954, 0.0001239999999999991, 0.00012400000000000258, 0.00012465299999999888, 0...</msg>
<status status="PASS" starttime="20201115 23:02:32.928" endtime="20201115 23:02:32.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.944" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.943" endtime="20201115 23:02:32.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.947" level="INFO">VALUE: [0.0001244030000000021, 0.00012433300000000078, 0.00012415200000000237, 0.0001243190000000012, 0.00012398599999999954, 0.0001239999999999991, 0.00012400000000000258, 0.00012465299999999888, 0.0001241800000000015, 0.00012447200000000047, 0.0001244999999999996, 0.0001244299999999983, 0.00012466699999999845, 0.0001243060000000011, 0.0001239999999999991, 0.00012415300000000185, 0.00012420800000000065, 0.0001244999999999996, 0.00012383300000000028, 0.00012377800000000147, 0.00012465299999999888, 0.00012448600000000004, 0.00012466699999999845, 0.00012433400000000025, 0.0001238060000000006, 0.0001239999999999991, 0.00012433300000000078, 0.00012436099999999992, 0.00012466699999999845, 0.00012418100000000099, 0.00012383399999999975, 0.00012466699999999845, 0.00012398599999999954, 0.00012415299999999838, 0.00012384699999999985, 0.00012383300000000028, 0.0001246389999999993, 0.0001243190000000012, 0.00012401400000000215, 0.00012383399999999975, 0.00012415299999999838, 0.00012465300000000235, 0.00012438899999999906, 0.00012434700000000035, 0.0001244169999999982, 0.0001239999999999991, 0.00012383300000000028, 0.0001239999999999991, 0.00012432000000000415, 0.00012416600000000194]</msg>
<status status="PASS" starttime="20201115 23:02:32.945" endtime="20201115 23:02:32.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.941" endtime="20201115 23:02:32.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.950" endtime="20201115 23:02:32.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.953" endtime="20201115 23:02:32.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.952" endtime="20201115 23:02:32.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.948" endtime="20201115 23:02:32.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.580" endtime="20201115 23:02:32.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.578" endtime="20201115 23:02:32.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.577" endtime="20201115 23:02:32.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.138" endtime="20201115 23:02:32.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.979" endtime="20201115 23:02:32.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.977" endtime="20201115 23:02:32.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.976" endtime="20201115 23:02:32.999"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:53.067" endtime="20201115 23:02:33.000" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:11.644" endtime="20201115 23:02:33.004"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 23:01:09.623" endtime="20201115 23:02:33.016"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
